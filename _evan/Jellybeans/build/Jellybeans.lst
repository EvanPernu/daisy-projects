ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Jellybeans.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9ParameterD2Ev,"axG",%progbits,_ZN5daisy9ParameterD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9ParameterD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9ParameterD2Ev:
  27              	.LVL0:
  28              	.LFB3867:
  29              		.file 1 "../../libdaisy/src/hid/parameter.h"
   1:../../libdaisy/src/hid/parameter.h **** #pragma once
   2:../../libdaisy/src/hid/parameter.h **** #include <stdint.h>
   3:../../libdaisy/src/hid/parameter.h **** #include "hid/ctrl.h"
   4:../../libdaisy/src/hid/parameter.h **** 
   5:../../libdaisy/src/hid/parameter.h **** namespace daisy
   6:../../libdaisy/src/hid/parameter.h **** {
   7:../../libdaisy/src/hid/parameter.h **** /** @addtogroup controls
   8:../../libdaisy/src/hid/parameter.h ****     @{
   9:../../libdaisy/src/hid/parameter.h **** */
  10:../../libdaisy/src/hid/parameter.h **** 
  11:../../libdaisy/src/hid/parameter.h **** /**      Simple parameter mapping tool that takes a 0-1 input from an hid_ctrl. */
  12:../../libdaisy/src/hid/parameter.h **** class Parameter
  13:../../libdaisy/src/hid/parameter.h **** {
  14:../../libdaisy/src/hid/parameter.h ****   public:
  15:../../libdaisy/src/hid/parameter.h ****     /** Curves are applied to the output signal */
  16:../../libdaisy/src/hid/parameter.h ****     enum Curve
  17:../../libdaisy/src/hid/parameter.h ****     {
  18:../../libdaisy/src/hid/parameter.h ****         LINEAR,      /**< Linear curve */
  19:../../libdaisy/src/hid/parameter.h ****         EXPONENTIAL, /**< Exponential curve */
  20:../../libdaisy/src/hid/parameter.h ****         LOGARITHMIC, /**<  Logarithmic curve */
  21:../../libdaisy/src/hid/parameter.h ****         CUBE,        /**< Cubic curve */
  22:../../libdaisy/src/hid/parameter.h ****         LAST,        /**< Final enum element. */
  23:../../libdaisy/src/hid/parameter.h ****     };
  24:../../libdaisy/src/hid/parameter.h ****     /** Constructor */
  25:../../libdaisy/src/hid/parameter.h ****     Parameter() {}
  26:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
  27:../../libdaisy/src/hid/parameter.h ****     ~Parameter() {}
  30              		.loc 1 27 5 view -0
  31              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 2


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB4992:
  36              	.LBI4992:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE4992:
  41              		.loc 1 27 19 view .LVU3
  42 0000 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE3867:
  46              		.weak	_ZN5daisy9ParameterD1Ev
  47              		.thumb_set _ZN5daisy9ParameterD1Ev,_ZN5daisy9ParameterD2Ev
  48 0002 00BF     		.section	.text._ZN5daisy10DaisyPatchD2Ev,"axG",%progbits,_ZN5daisy10DaisyPatchD5Ev,comdat
  49              		.align	1
  50              		.p2align 2,,3
  51              		.weak	_ZN5daisy10DaisyPatchD2Ev
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu fpv5-d16
  57              	_ZN5daisy10DaisyPatchD2Ev:
  58              	.LVL1:
  59              	.LFB4414:
  60              		.file 3 "../../libdaisy/src/daisy_patch.h"
   1:../../libdaisy/src/daisy_patch.h **** #pragma once
   2:../../libdaisy/src/daisy_patch.h **** #ifndef DSY_PATCH_BSP_H
   3:../../libdaisy/src/daisy_patch.h **** #define DSY_PATCH_BSP_H
   4:../../libdaisy/src/daisy_patch.h **** #include "daisy_seed.h"
   5:../../libdaisy/src/daisy_patch.h **** #include "dev/oled_ssd130x.h"
   6:../../libdaisy/src/daisy_patch.h **** 
   7:../../libdaisy/src/daisy_patch.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 3


   8:../../libdaisy/src/daisy_patch.h **** {
   9:../../libdaisy/src/daisy_patch.h **** /**
  10:../../libdaisy/src/daisy_patch.h ****     @brief Class that handles initializing all of the hardware specific to the Daisy Patch Board. \
  11:../../libdaisy/src/daisy_patch.h ****     Helper funtions are also in place to provide easy access to built-in controls and peripherals.
  12:../../libdaisy/src/daisy_patch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/daisy_patch.h ****     @date November 2019
  14:../../libdaisy/src/daisy_patch.h ****     @ingroup boards
  15:../../libdaisy/src/daisy_patch.h **** */
  16:../../libdaisy/src/daisy_patch.h **** class DaisyPatch
  17:../../libdaisy/src/daisy_patch.h **** {
  18:../../libdaisy/src/daisy_patch.h ****   public:
  19:../../libdaisy/src/daisy_patch.h ****     /** Enum of Ctrls to represent the four CV/Knob combos on the Patch
  20:../../libdaisy/src/daisy_patch.h ****      */
  21:../../libdaisy/src/daisy_patch.h ****     enum Ctrl
  22:../../libdaisy/src/daisy_patch.h ****     {
  23:../../libdaisy/src/daisy_patch.h ****         CTRL_1,    /**< */
  24:../../libdaisy/src/daisy_patch.h ****         CTRL_2,    /**< */
  25:../../libdaisy/src/daisy_patch.h ****         CTRL_3,    /**< */
  26:../../libdaisy/src/daisy_patch.h ****         CTRL_4,    /**< */
  27:../../libdaisy/src/daisy_patch.h ****         CTRL_LAST, /**< */
  28:../../libdaisy/src/daisy_patch.h ****     };
  29:../../libdaisy/src/daisy_patch.h **** 
  30:../../libdaisy/src/daisy_patch.h ****     /** Daisy patch gate inputs */
  31:../../libdaisy/src/daisy_patch.h ****     enum GateInput
  32:../../libdaisy/src/daisy_patch.h ****     {
  33:../../libdaisy/src/daisy_patch.h ****         GATE_IN_1,    /**< */
  34:../../libdaisy/src/daisy_patch.h ****         GATE_IN_2,    /** <*/
  35:../../libdaisy/src/daisy_patch.h ****         GATE_IN_LAST, /**< */
  36:../../libdaisy/src/daisy_patch.h ****     };
  37:../../libdaisy/src/daisy_patch.h **** 
  38:../../libdaisy/src/daisy_patch.h ****     /** Constructor */
  39:../../libdaisy/src/daisy_patch.h ****     DaisyPatch() {}
  40:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
  41:../../libdaisy/src/daisy_patch.h ****     ~DaisyPatch() {}
  61              		.loc 3 41 5 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LBB4993:
  67              	.LBI4993:
  68              		.file 4 "../../libdaisy/src/hid/disp/oled_display.h"
   1:../../libdaisy/src/hid/disp/oled_display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/oled_display.h **** #ifndef DSY_OLED_DISPLAY_H
   3:../../libdaisy/src/hid/disp/oled_display.h **** #define DSY_OLED_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/oled_display.h **** 
   5:../../libdaisy/src/hid/disp/oled_display.h **** #include "display.h"
   6:../../libdaisy/src/hid/disp/oled_display.h **** 
   7:../../libdaisy/src/hid/disp/oled_display.h **** namespace daisy
   8:../../libdaisy/src/hid/disp/oled_display.h **** {
   9:../../libdaisy/src/hid/disp/oled_display.h **** /** 
  10:../../libdaisy/src/hid/disp/oled_display.h ****  * This class is for drawing to a monochrome OLED display. 
  11:../../libdaisy/src/hid/disp/oled_display.h **** */
  12:../../libdaisy/src/hid/disp/oled_display.h **** template <typename DisplayDriver>
  13:../../libdaisy/src/hid/disp/oled_display.h **** class OledDisplay : public OneBitGraphicsDisplayImpl<OledDisplay<DisplayDriver>>
  14:../../libdaisy/src/hid/disp/oled_display.h **** {
  15:../../libdaisy/src/hid/disp/oled_display.h ****   public:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 4


  16:../../libdaisy/src/hid/disp/oled_display.h ****     OledDisplay() {}
  17:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
  69              		.loc 4 17 13 view .LVU5
  70              	.LBB4994:
  71              	.LBI4994:
  72              		.file 5 "../../libdaisy/src/hid/disp/display.h"
   1:../../libdaisy/src/hid/disp/display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/display.h **** #ifndef DSY_DISPLAY_H
   3:../../libdaisy/src/hid/disp/display.h **** #define DSY_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/display.h **** #include <cmath>
   5:../../libdaisy/src/hid/disp/display.h **** #include "util/oled_fonts.h"
   6:../../libdaisy/src/hid/disp/display.h **** #include "daisy_core.h"
   7:../../libdaisy/src/hid/disp/display.h **** #include "graphics_common.h"
   8:../../libdaisy/src/hid/disp/display.h **** 
   9:../../libdaisy/src/hid/disp/display.h **** #ifndef deg2rad
  10:../../libdaisy/src/hid/disp/display.h **** #define deg2rad(deg) ((deg)*3.141592 / 180.0)
  11:../../libdaisy/src/hid/disp/display.h **** #endif
  12:../../libdaisy/src/hid/disp/display.h **** 
  13:../../libdaisy/src/hid/disp/display.h **** namespace daisy
  14:../../libdaisy/src/hid/disp/display.h **** {
  15:../../libdaisy/src/hid/disp/display.h **** /** 
  16:../../libdaisy/src/hid/disp/display.h ****  * This interface is used as a base class for all types of 1bit-per-pixel
  17:../../libdaisy/src/hid/disp/display.h ****  * graphics displays.
  18:../../libdaisy/src/hid/disp/display.h **** */
  19:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplay
  20:../../libdaisy/src/hid/disp/display.h **** {
  21:../../libdaisy/src/hid/disp/display.h ****   public:
  22:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplay() {}
  23:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
  24:../../libdaisy/src/hid/disp/display.h **** 
  25:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Height() const = 0;
  26:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Width() const  = 0;
  27:../../libdaisy/src/hid/disp/display.h **** 
  28:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetBounds() const
  29:../../libdaisy/src/hid/disp/display.h ****     {
  30:../../libdaisy/src/hid/disp/display.h ****         return Rectangle(int16_t(Width()), int16_t(Height()));
  31:../../libdaisy/src/hid/disp/display.h ****     }
  32:../../libdaisy/src/hid/disp/display.h **** 
  33:../../libdaisy/src/hid/disp/display.h **** 
  34:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentX() { return currentX_; };
  35:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentY() { return currentY_; };
  36:../../libdaisy/src/hid/disp/display.h **** 
  37:../../libdaisy/src/hid/disp/display.h ****     /** 
  38:../../libdaisy/src/hid/disp/display.h ****     Fills the entire display with either on/off.
  39:../../libdaisy/src/hid/disp/display.h ****     \param on Sets on or off.
  40:../../libdaisy/src/hid/disp/display.h ****     */
  41:../../libdaisy/src/hid/disp/display.h ****     virtual void Fill(bool on) = 0;
  42:../../libdaisy/src/hid/disp/display.h **** 
  43:../../libdaisy/src/hid/disp/display.h ****     /**
  44:../../libdaisy/src/hid/disp/display.h ****     Sets the pixel at the specified coordinate to be on/off.
  45:../../libdaisy/src/hid/disp/display.h ****     \param x   x Coordinate
  46:../../libdaisy/src/hid/disp/display.h ****     \param y   y coordinate
  47:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  48:../../libdaisy/src/hid/disp/display.h ****     */
  49:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) = 0;
  50:../../libdaisy/src/hid/disp/display.h **** 
  51:../../libdaisy/src/hid/disp/display.h ****     /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 5


  52:../../libdaisy/src/hid/disp/display.h ****     Draws a line from (x1, y1) to (y1, y2)
  53:../../libdaisy/src/hid/disp/display.h ****     \param x1  x Coordinate of the starting point
  54:../../libdaisy/src/hid/disp/display.h ****     \param y1  y Coordinate of the starting point
  55:../../libdaisy/src/hid/disp/display.h ****     \param x2  x Coordinate of the ending point
  56:../../libdaisy/src/hid/disp/display.h ****     \param y2  y Coordinate of the ending point
  57:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  58:../../libdaisy/src/hid/disp/display.h ****     */
  59:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawLine(uint_fast8_t x1,
  60:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  61:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  62:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  63:../../libdaisy/src/hid/disp/display.h ****                           bool         on)
  64:../../libdaisy/src/hid/disp/display.h ****         = 0;
  65:../../libdaisy/src/hid/disp/display.h **** 
  66:../../libdaisy/src/hid/disp/display.h ****     /**
  67:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle based on two coordinates.
  68:../../libdaisy/src/hid/disp/display.h ****     \param x1 x Coordinate of the first point
  69:../../libdaisy/src/hid/disp/display.h ****     \param y1 y Coordinate of the first point
  70:../../libdaisy/src/hid/disp/display.h ****     \param x2 x Coordinate of the second point
  71:../../libdaisy/src/hid/disp/display.h ****     \param y2 y Coordinate of the second point
  72:../../libdaisy/src/hid/disp/display.h ****     \param on on or off
  73:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  74:../../libdaisy/src/hid/disp/display.h ****     */
  75:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawRect(uint_fast8_t x1,
  76:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  77:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  78:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  79:../../libdaisy/src/hid/disp/display.h ****                           bool         on,
  80:../../libdaisy/src/hid/disp/display.h ****                           bool         fill = false)
  81:../../libdaisy/src/hid/disp/display.h ****         = 0;
  82:../../libdaisy/src/hid/disp/display.h **** 
  83:../../libdaisy/src/hid/disp/display.h ****     /**
  84:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle.
  85:../../libdaisy/src/hid/disp/display.h ****     \param rect the rectangle
  86:../../libdaisy/src/hid/disp/display.h ****     \param on   on or off
  87:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  88:../../libdaisy/src/hid/disp/display.h ****     */
  89:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(const Rectangle& rect, bool on, bool fill = false)
  90:../../libdaisy/src/hid/disp/display.h ****     {
  91:../../libdaisy/src/hid/disp/display.h ****         DrawRect(rect.GetX(),
  92:../../libdaisy/src/hid/disp/display.h ****                  rect.GetY(),
  93:../../libdaisy/src/hid/disp/display.h ****                  rect.GetRight(),
  94:../../libdaisy/src/hid/disp/display.h ****                  rect.GetBottom(),
  95:../../libdaisy/src/hid/disp/display.h ****                  on,
  96:../../libdaisy/src/hid/disp/display.h ****                  fill);
  97:../../libdaisy/src/hid/disp/display.h ****     }
  98:../../libdaisy/src/hid/disp/display.h **** 
  99:../../libdaisy/src/hid/disp/display.h ****     /**
 100:../../libdaisy/src/hid/disp/display.h ****     Draws an arc around the specified coordinate
 101:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the arc
 102:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the arc
 103:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the arc
 104:../../libdaisy/src/hid/disp/display.h ****     \param start_angle angle where to start the arc
 105:../../libdaisy/src/hid/disp/display.h ****     \param sweep       total angle of the arc
 106:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 107:../../libdaisy/src/hid/disp/display.h ****     */
 108:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawArc(uint_fast8_t x,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 6


 109:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t y,
 110:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t radius,
 111:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t start_angle,
 112:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t sweep,
 113:../../libdaisy/src/hid/disp/display.h ****                          bool         on)
 114:../../libdaisy/src/hid/disp/display.h ****         = 0;
 115:../../libdaisy/src/hid/disp/display.h **** 
 116:../../libdaisy/src/hid/disp/display.h ****     /**
 117:../../libdaisy/src/hid/disp/display.h ****     Draws a circle around the specified coordinate
 118:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the circle
 119:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the circle
 120:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the circle
 121:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 122:../../libdaisy/src/hid/disp/display.h ****     */
 123:../../libdaisy/src/hid/disp/display.h ****     void
 124:../../libdaisy/src/hid/disp/display.h ****     DrawCircle(uint_fast8_t x, uint_fast8_t y, uint_fast8_t radius, bool on)
 125:../../libdaisy/src/hid/disp/display.h ****     {
 126:../../libdaisy/src/hid/disp/display.h ****         DrawArc(x, y, radius, 0, 360, on);
 127:../../libdaisy/src/hid/disp/display.h ****     };
 128:../../libdaisy/src/hid/disp/display.h **** 
 129:../../libdaisy/src/hid/disp/display.h ****     /** 
 130:../../libdaisy/src/hid/disp/display.h ****     Writes the character with the specific FontDef
 131:../../libdaisy/src/hid/disp/display.h ****     to the display buffer at the current Cursor position.
 132:../../libdaisy/src/hid/disp/display.h ****     \param ch character to be written
 133:../../libdaisy/src/hid/disp/display.h ****     \param font font to be written in
 134:../../libdaisy/src/hid/disp/display.h ****     \param on    on or off
 135:../../libdaisy/src/hid/disp/display.h ****     \return &
 136:../../libdaisy/src/hid/disp/display.h ****     */
 137:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteChar(char ch, FontDef font, bool on) = 0;
 138:../../libdaisy/src/hid/disp/display.h **** 
 139:../../libdaisy/src/hid/disp/display.h ****     /** 
 140:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteChar, except it will handle an entire String.
 141:../../libdaisy/src/hid/disp/display.h ****     Wrapping does not happen automatically, so the width
 142:../../libdaisy/src/hid/disp/display.h ****     of the string must be kept within the dimensions of the screen.
 143:../../libdaisy/src/hid/disp/display.h ****     \param str string to be written
 144:../../libdaisy/src/hid/disp/display.h ****     \param font font to use
 145:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 146:../../libdaisy/src/hid/disp/display.h ****     \return &
 147:../../libdaisy/src/hid/disp/display.h ****     */
 148:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteString(const char* str, FontDef font, bool on) = 0;
 149:../../libdaisy/src/hid/disp/display.h **** 
 150:../../libdaisy/src/hid/disp/display.h ****     /** 
 151:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteString but justified within a bounding box.
 152:../../libdaisy/src/hid/disp/display.h ****     \param str          string to be written
 153:../../libdaisy/src/hid/disp/display.h ****     \param font         font to use
 154:../../libdaisy/src/hid/disp/display.h ****     \param boundingBox  the bounding box to draw the text in
 155:../../libdaisy/src/hid/disp/display.h ****     \param alignment    the alignment to use
 156:../../libdaisy/src/hid/disp/display.h ****     \param on           on or off
 157:../../libdaisy/src/hid/disp/display.h ****     \return The rectangle that was drawn to
 158:../../libdaisy/src/hid/disp/display.h ****     */
 159:../../libdaisy/src/hid/disp/display.h ****     virtual Rectangle WriteStringAligned(const char*    str,
 160:../../libdaisy/src/hid/disp/display.h ****                                          const FontDef& font,
 161:../../libdaisy/src/hid/disp/display.h ****                                          Rectangle      boundingBox,
 162:../../libdaisy/src/hid/disp/display.h ****                                          Alignment      alignment,
 163:../../libdaisy/src/hid/disp/display.h ****                                          bool           on)
 164:../../libdaisy/src/hid/disp/display.h ****         = 0;
 165:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 7


 166:../../libdaisy/src/hid/disp/display.h ****     /** 
 167:../../libdaisy/src/hid/disp/display.h ****     Moves the 'Cursor' position used for WriteChar, and WriteStr to the specified coordinate.
 168:../../libdaisy/src/hid/disp/display.h ****     \param x x pos
 169:../../libdaisy/src/hid/disp/display.h ****     \param y y pos
 170:../../libdaisy/src/hid/disp/display.h ****     */
 171:../../libdaisy/src/hid/disp/display.h ****     void SetCursor(uint16_t x, uint16_t y)
 172:../../libdaisy/src/hid/disp/display.h ****     {
 173:../../libdaisy/src/hid/disp/display.h ****         currentX_ = (x >= Width()) ? Width() - 1 : x;
 174:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 175:../../libdaisy/src/hid/disp/display.h ****     }
 176:../../libdaisy/src/hid/disp/display.h **** 
 177:../../libdaisy/src/hid/disp/display.h ****     /** 
 178:../../libdaisy/src/hid/disp/display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
 179:../../libdaisy/src/hid/disp/display.h ****     how the object was initialized.
 180:../../libdaisy/src/hid/disp/display.h ****     */
 181:../../libdaisy/src/hid/disp/display.h ****     virtual void Update() = 0;
 182:../../libdaisy/src/hid/disp/display.h **** 
 183:../../libdaisy/src/hid/disp/display.h ****   protected:
 184:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentX_;
 185:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentY_;
 186:../../libdaisy/src/hid/disp/display.h **** };
 187:../../libdaisy/src/hid/disp/display.h **** 
 188:../../libdaisy/src/hid/disp/display.h **** /** This class is intended as a intermediary class for your actual implementation of the OneBitGrap
 189:../../libdaisy/src/hid/disp/display.h ****  *  interface. It uses the CRTP design pattern where the template argument is the child class. It p
 190:../../libdaisy/src/hid/disp/display.h ****  *  implementations for most of the functions, except DrawPixel(), Update() and Fill(), which you'l
 191:../../libdaisy/src/hid/disp/display.h ****  *  to provide in your child class.
 192:../../libdaisy/src/hid/disp/display.h ****  *  The main goal of this class is to provide common drawing functions without relying on massive a
 193:../../libdaisy/src/hid/disp/display.h ****  *  virtual function calls that would result in a performance loss. To achieve this, any drawing fu
 194:../../libdaisy/src/hid/disp/display.h ****  *  is implemented here and internally calls other drawing functions (e.g. DrawRect() which interna
 195:../../libdaisy/src/hid/disp/display.h ****  *  DrawPixel() and DrawLine()) makes these calls via the qualified name of these functions to expl
 196:../../libdaisy/src/hid/disp/display.h ****  *  suppress the virtual dispatch mechanism like this:
 197:../../libdaisy/src/hid/disp/display.h ****  * 
 198:../../libdaisy/src/hid/disp/display.h ****  *      ChildType::DrawPixel(...); // no virtual function call; direct call into the child class fu
 199:../../libdaisy/src/hid/disp/display.h ****  *  
 200:../../libdaisy/src/hid/disp/display.h ****  *  To create a custom OneBitGraphicsDisplay implementation, you can 
 201:../../libdaisy/src/hid/disp/display.h ****  *  A) inherit from OneBitGraphicsDisplay directly and provide all the drawing functions yourself
 202:../../libdaisy/src/hid/disp/display.h ****  *  B) Inherit from OneBitGraphicsDisplayImpl and only provide DrawPixel(), Fill() and Update()
 203:../../libdaisy/src/hid/disp/display.h ****  *     like this:
 204:../../libdaisy/src/hid/disp/display.h ****  *  
 205:../../libdaisy/src/hid/disp/display.h ****  *      class MyDisplayClass : public OneBitGraphicsDisplayImpl<MyDisplayClass> 
 206:../../libdaisy/src/hid/disp/display.h ****  *      {
 207:../../libdaisy/src/hid/disp/display.h ****  *      public:
 208:../../libdaisy/src/hid/disp/display.h ****  *          void Fill() override { ... };
 209:../../libdaisy/src/hid/disp/display.h ****  *          void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override { ... };
 210:../../libdaisy/src/hid/disp/display.h ****  *          void Update() override { ... }
 211:../../libdaisy/src/hid/disp/display.h ****  *      };
 212:../../libdaisy/src/hid/disp/display.h ****  *  
 213:../../libdaisy/src/hid/disp/display.h ****  */
 214:../../libdaisy/src/hid/disp/display.h **** template <class ChildType>
 215:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplayImpl : public OneBitGraphicsDisplay
 216:../../libdaisy/src/hid/disp/display.h **** {
 217:../../libdaisy/src/hid/disp/display.h ****   public:
 218:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplayImpl() {}
 219:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
  73              		.loc 5 219 13 view .LVU6
  74              	.LBB4995:
  75              	.LBI4995:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 8


  23:../../libdaisy/src/hid/disp/display.h **** 
  76              		.loc 5 23 13 view .LVU7
  23:../../libdaisy/src/hid/disp/display.h **** 
  77              		.loc 5 23 13 is_stmt 0 view .LVU8
  78              	.LBE4995:
  79              	.LBE4994:
  80              	.LBE4993:
  81              	.LBB4996:
  82              	.LBI4996:
  83              		.file 6 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "hid/usb_midi.h"
  14:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  15:../../libdaisy/src/hid/midi.h **** 
  16:../../libdaisy/src/hid/midi.h **** namespace daisy
  17:../../libdaisy/src/hid/midi.h **** {
  18:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  19:../../libdaisy/src/hid/midi.h ****     @{ 
  20:../../libdaisy/src/hid/midi.h **** */
  21:../../libdaisy/src/hid/midi.h **** 
  22:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  23:../../libdaisy/src/hid/midi.h **** {
  24:../../libdaisy/src/hid/midi.h ****   public:
  25:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  27:../../libdaisy/src/hid/midi.h **** 
  28:../../libdaisy/src/hid/midi.h ****     struct Config
  29:../../libdaisy/src/hid/midi.h ****     {
  30:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  32:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  33:../../libdaisy/src/hid/midi.h **** 
  34:../../libdaisy/src/hid/midi.h ****         Config()
  35:../../libdaisy/src/hid/midi.h ****         {
  36:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  37:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  38:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  39:../../libdaisy/src/hid/midi.h ****         }
  40:../../libdaisy/src/hid/midi.h ****     };
  41:../../libdaisy/src/hid/midi.h **** 
  42:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  43:../../libdaisy/src/hid/midi.h ****     {
  44:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  45:../../libdaisy/src/hid/midi.h **** 
  46:../../libdaisy/src/hid/midi.h ****         //defaults
  47:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 9


  48:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  51:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  52:../../libdaisy/src/hid/midi.h **** 
  53:../../libdaisy/src/hid/midi.h ****         //user settings
  54:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
  56:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  57:../../libdaisy/src/hid/midi.h **** 
  58:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  59:../../libdaisy/src/hid/midi.h ****     }
  60:../../libdaisy/src/hid/midi.h **** 
  61:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  62:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  63:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  64:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  66:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  67:../../libdaisy/src/hid/midi.h **** 
  68:../../libdaisy/src/hid/midi.h ****   private:
  69:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  70:../../libdaisy/src/hid/midi.h **** };
  71:../../libdaisy/src/hid/midi.h **** 
  72:../../libdaisy/src/hid/midi.h **** /** 
  73:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  74:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  75:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  76:../../libdaisy/src/hid/midi.h ****     @author shensley
  77:../../libdaisy/src/hid/midi.h ****     @date March 2020
  78:../../libdaisy/src/hid/midi.h **** */
  79:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  80:../../libdaisy/src/hid/midi.h **** class MidiHandler
  81:../../libdaisy/src/hid/midi.h **** {
  82:../../libdaisy/src/hid/midi.h ****   public:
  83:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  84:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  84              		.loc 6 84 5 is_stmt 1 view .LVU9
  85              	.LBB4997:
  86              	.LBI4997:
  26:../../libdaisy/src/hid/midi.h **** 
  87              		.loc 6 26 5 view .LVU10
  26:../../libdaisy/src/hid/midi.h **** 
  88              		.loc 6 26 5 is_stmt 0 view .LVU11
  89              	.LBE4997:
  90              	.LBE4996:
  91              	.LBB4998:
  92              	.LBI4998:
  93              		.file 7 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 10


   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  94              		.loc 7 21 5 is_stmt 1 view .LVU12
  95              	.LBB4999:
  96              	.LBI4999:
  97              		.file 8 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../../libdaisy/src/hid/switch.h **** 
   8:../../libdaisy/src/hid/switch.h **** namespace daisy
   9:../../libdaisy/src/hid/switch.h **** {
  10:../../libdaisy/src/hid/switch.h **** /** 
  11:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/switch.h ****     @date December 2019
  15:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  16:../../libdaisy/src/hid/switch.h **** */
  17:../../libdaisy/src/hid/switch.h **** class Switch
  18:../../libdaisy/src/hid/switch.h **** {
  19:../../libdaisy/src/hid/switch.h ****   public:
  20:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libdaisy/src/hid/switch.h ****     enum Type
  22:../../libdaisy/src/hid/switch.h ****     {
  23:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libdaisy/src/hid/switch.h ****     };
  26:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libdaisy/src/hid/switch.h ****     enum Polarity
  28:../../libdaisy/src/hid/switch.h ****     {
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  30:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libdaisy/src/hid/switch.h ****     };
  32:../../libdaisy/src/hid/switch.h **** 
  33:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libdaisy/src/hid/switch.h ****     enum Pull
  35:../../libdaisy/src/hid/switch.h ****     {
  36:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libdaisy/src/hid/switch.h ****     };
  40:../../libdaisy/src/hid/switch.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 11


  41:../../libdaisy/src/hid/switch.h ****     Switch() {}
  42:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  98              		.loc 8 42 5 view .LVU13
  99              		.loc 8 42 5 is_stmt 0 view .LVU14
 100              	.LBE4999:
 101              	.LBE4998:
 102              	.LBB5000:
 103              	.LBI5000:
 104              		.file 9 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 105              		.loc 9 22 5 is_stmt 1 view .LVU15
 106              	.LBB5001:
 107              	.LBI5001:
 108              		.file 10 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 12


  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy/src/sys/system.h ****         }
  42:../../libdaisy/src/sys/system.h **** 
  43:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy/src/sys/system.h ****          ** */
  47:../../libdaisy/src/sys/system.h ****         void Boost()
  48:../../libdaisy/src/sys/system.h ****         {
  49:../../libdaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy/src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../libdaisy/src/sys/system.h ****         }
  54:../../libdaisy/src/sys/system.h **** 
  55:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy/src/sys/system.h ****     };
  60:../../libdaisy/src/sys/system.h **** 
  61:../../libdaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy/src/sys/system.h ****      * 
  63:../../libdaisy/src/sys/system.h ****      */
  64:../../libdaisy/src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy/src/sys/system.h ****     {
  66:../../libdaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy/src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy/src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy/src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy/src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy/src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy/src/sys/system.h ****         SDRAM,
  73:../../libdaisy/src/sys/system.h ****         QSPI,
  74:../../libdaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy/src/sys/system.h ****     };
  76:../../libdaisy/src/sys/system.h **** 
  77:../../libdaisy/src/sys/system.h ****     System() {}
  78:../../libdaisy/src/sys/system.h ****     ~System() {}
 109              		.loc 10 78 5 view .LVU16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 13


 110              		.loc 10 78 5 is_stmt 0 view .LVU17
 111              	.LBE5001:
 112              	.LBB5002:
 113              	.LBI5002:
 114              		.file 11 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
 115              		.loc 11 42 5 is_stmt 1 view .LVU18
 116              		.loc 11 42 5 is_stmt 0 view .LVU19
 117              	.LBE5002:
 118              	.LBB5003:
 119              	.LBI5003:
 120              		.file 12 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 14


   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 15


  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 121              		.loc 12 85 5 is_stmt 1 view .LVU20
 122              		.loc 12 85 5 is_stmt 0 view .LVU21
 123              	.LBE5003:
 124              	.LBB5004:
 125              	.LBI5004:
 126              		.file 13 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 16


  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 127              		.loc 13 63 5 is_stmt 1 view .LVU22
 128              		.loc 13 63 5 is_stmt 0 view .LVU23
 129              	.LBE5004:
 130              	.LBE5000:
 131              		.loc 3 41 20 view .LVU24
 132 0000 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE4414:
 136              		.weak	_ZN5daisy10DaisyPatchD1Ev
 137              		.thumb_set _ZN5daisy10DaisyPatchD1Ev,_ZN5daisy10DaisyPatchD2Ev
 138 0002 00BF     		.section	.text._Z2cbv,"ax",%progbits
 139              		.align	1
 140              		.p2align 2,,3
 141              		.global	_Z2cbv
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv5-d16
 147              	_Z2cbv:
 148              	.LFB5119:
 149              		.file 14 "Jellybeans.cpp"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 17


   1:Jellybeans.cpp **** /* 
   2:Jellybeans.cpp ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Jellybeans.cpp ****  * You may use, distribute and modify this code under the
   4:Jellybeans.cpp ****  * terms of the GNU AGPLv3 license.
   5:Jellybeans.cpp ****  * 
   6:Jellybeans.cpp ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Jellybeans.cpp ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Jellybeans.cpp ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Jellybeans.cpp ****  *
  10:Jellybeans.cpp ****  * 
  11:Jellybeans.cpp ****  * ====================================================
  12:Jellybeans.cpp ****  * =   __       _        _                            =
  13:Jellybeans.cpp ****  * =   \ \  ___| | |_   _| |__   ___  __ _ _ __  ___  =
  14:Jellybeans.cpp ****  * =    \ \/ _ \ | | | | | '_ \ / _ \/ _` | '_ \/ __| =
  15:Jellybeans.cpp ****  * = /\_/ /  __/ | | |_| | |_) |  __/ (_| | | | \__ \ =
  16:Jellybeans.cpp ****  * = \___/ \___|_|_|\__, |_.__/ \___|\__,_|_| |_|___/ =
  17:Jellybeans.cpp ****  * =                |___/                             =
  18:Jellybeans.cpp ****  * ====================================================
  19:Jellybeans.cpp ****  * 
  20:Jellybeans.cpp ****  * 
  21:Jellybeans.cpp ****  * Jellybeans is an arpeggiator eurorack module designed for the 
  22:Jellybeans.cpp ****  * Electrosmith Daisy Patch platform.
  23:Jellybeans.cpp ****  */
  24:Jellybeans.cpp **** 
  25:Jellybeans.cpp **** 
  26:Jellybeans.cpp **** #include "daisysp.h"
  27:Jellybeans.cpp **** #include "daisy_patch.h"
  28:Jellybeans.cpp **** #include "daisysp.h"
  29:Jellybeans.cpp **** #include "resources.h"
  30:Jellybeans.cpp **** 
  31:Jellybeans.cpp **** 
  32:Jellybeans.cpp **** #include <string>
  33:Jellybeans.cpp **** #include <array>
  34:Jellybeans.cpp **** 
  35:Jellybeans.cpp **** using namespace daisy;
  36:Jellybeans.cpp **** using namespace daisysp;
  37:Jellybeans.cpp **** using namespace jellybeans;
  38:Jellybeans.cpp **** 
  39:Jellybeans.cpp **** DaisyPatch patch;
  40:Jellybeans.cpp **** 
  41:Jellybeans.cpp **** // If true, the bottom row will display debug data instead of a menu item
  42:Jellybeans.cpp **** const bool debugMode = true;
  43:Jellybeans.cpp **** std::string debugString;
  44:Jellybeans.cpp **** 
  45:Jellybeans.cpp **** // The note vallue currently being sent to Patches' DAC's output 1
  46:Jellybeans.cpp **** // This is stored so that it's only calculated upon a change
  47:Jellybeans.cpp **** float arpNoteDacOutput1;
  48:Jellybeans.cpp **** 
  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
  50:Jellybeans.cpp **** const int     fontWidth = 7;
  51:Jellybeans.cpp **** const int     fontHeight = 10;
  52:Jellybeans.cpp **** 
  53:Jellybeans.cpp **** /// Menu navigating vars
  54:Jellybeans.cpp **** int  menuPos;
  55:Jellybeans.cpp **** bool isEditing;
  56:Jellybeans.cpp **** 
  57:Jellybeans.cpp **** void updateControls();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 18


  58:Jellybeans.cpp **** void updateOled();
  59:Jellybeans.cpp **** void updateOutputs();
  60:Jellybeans.cpp **** //void onClockPulseIn();
  61:Jellybeans.cpp **** void drawString(std::string, int, int);
  62:Jellybeans.cpp **** 
  63:Jellybeans.cpp **** Arp* arp;
  64:Jellybeans.cpp **** 
  65:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
  66:Jellybeans.cpp **** 
  67:Jellybeans.cpp **** // Reference vars to make the code more readable
  68:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
  69:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
  70:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
  71:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
  72:Jellybeans.cpp **** MenuItem *mRoot      = &menuItems[4];
  73:Jellybeans.cpp **** MenuItem *mMode      = &menuItems[5];
  74:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
  75:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
  76:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
  77:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
  78:Jellybeans.cpp **** 
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
  80:Jellybeans.cpp **** int patternCurCvVal, divisionCurCvVal, voicingCurCvVal, inversionCurCvVal;
  81:Jellybeans.cpp **** 
  82:Jellybeans.cpp **** // Callback functions invoked whenever menu parameters are changed
  83:Jellybeans.cpp **** void cb(){};
 150              		.loc 14 83 10 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155              		.loc 14 83 11 is_stmt 0 view .LVU26
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE5119:
 160 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 161              		.align	1
 162              		.p2align 2,,3
 163              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv5-d16
 169              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:
 170              	.LVL2:
 171              	.LFB5461:
 172              		.loc 4 17 13 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LBB5005:
 178              	.LBI5005:
 179              		.loc 5 219 13 view .LVU28
 180              	.LBB5006:
 181              	.LBI5006:
  23:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 19


 182              		.loc 5 23 13 view .LVU29
  23:../../libdaisy/src/hid/disp/display.h **** 
 183              		.loc 5 23 13 is_stmt 0 view .LVU30
 184              	.LBE5006:
 185              	.LBE5005:
 186              		.loc 4 17 29 view .LVU31
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE5461:
 191              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 192              		.thumb_set _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED
 193 0002 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 194              		.align	1
 195              		.p2align 2,,3
 196              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv5-d16
 202              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:
 203              	.LVL3:
 204              	.LFB5558:
  18:../../libdaisy/src/hid/disp/oled_display.h **** 
  19:../../libdaisy/src/hid/disp/oled_display.h ****     struct Config
  20:../../libdaisy/src/hid/disp/oled_display.h ****     {
  21:../../libdaisy/src/hid/disp/oled_display.h ****         typename DisplayDriver::Config driver_config;
  22:../../libdaisy/src/hid/disp/oled_display.h ****     };
  23:../../libdaisy/src/hid/disp/oled_display.h **** 
  24:../../libdaisy/src/hid/disp/oled_display.h ****     void Init(Config config) { driver_.Init(config.driver_config); }
  25:../../libdaisy/src/hid/disp/oled_display.h **** 
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Height() const override { return driver_.Height(); }
  27:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
  28:../../libdaisy/src/hid/disp/oled_display.h **** 
  29:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  30:../../libdaisy/src/hid/disp/oled_display.h ****     Fills the entire display with either on/off.
  31:../../libdaisy/src/hid/disp/oled_display.h ****     \param on Sets on or off.
  32:../../libdaisy/src/hid/disp/oled_display.h ****     */
  33:../../libdaisy/src/hid/disp/oled_display.h ****     void Fill(bool on) override { driver_.Fill(on); }
 205              		.loc 4 33 10 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LBB5007:
 211              	.LBI5007:
 212              		.file 15 "../../libdaisy/src/dev/oled_ssd130x.h"
   1:../../libdaisy/src/dev/oled_ssd130x.h **** #pragma once
   2:../../libdaisy/src/dev/oled_ssd130x.h **** #ifndef SA_OLED_SSD130X_H
   3:../../libdaisy/src/dev/oled_ssd130x.h **** #define SA_OLED_SSD130X_H /**< & */
   4:../../libdaisy/src/dev/oled_ssd130x.h **** 
   5:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/i2c.h"
   6:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/spi.h"
   7:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/gpio.h"
   8:../../libdaisy/src/dev/oled_ssd130x.h **** #include "sys/system.h"
   9:../../libdaisy/src/dev/oled_ssd130x.h **** 
  10:../../libdaisy/src/dev/oled_ssd130x.h **** namespace daisy
  11:../../libdaisy/src/dev/oled_ssd130x.h **** {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 20


  12:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  13:../../libdaisy/src/dev/oled_ssd130x.h ****  * I2C Transport for SSD1306 / SSD1309 OLED display devices
  14:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  15:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xI2CTransport
  16:../../libdaisy/src/dev/oled_ssd130x.h **** {
  17:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  18:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  19:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  20:../../libdaisy/src/dev/oled_ssd130x.h ****         I2CHandle::Config i2c_config;
  21:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t           i2c_address;
  22:../../libdaisy/src/dev/oled_ssd130x.h ****         void              Defaults()
  23:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  24:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.periph         = I2CHandle::Config::Peripheral::I2C_1;
  25:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.speed          = I2CHandle::Config::Speed::I2C_1MHZ;
  26:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.mode           = I2CHandle::Config::Mode::I2C_MASTER;
  27:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.scl = {DSY_GPIOB, 8};
  28:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.sda = {DSY_GPIOB, 9};
  29:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_address               = 0x3C;
  30:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  31:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  32:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  33:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  34:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_address_ = config.i2c_address;
  35:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.Init(config.i2c_config);
  36:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  37:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
  38:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  39:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t buf[2] = {0X00, cmd};
  40:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  41:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  42:../../libdaisy/src/dev/oled_ssd130x.h **** 
  43:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
  44:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  45:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < size; i++)
  46:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  47:../../libdaisy/src/dev/oled_ssd130x.h ****             uint8_t buf[2] = {0X40, buff[i]};
  48:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  49:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  50:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  51:../../libdaisy/src/dev/oled_ssd130x.h **** 
  52:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
  53:../../libdaisy/src/dev/oled_ssd130x.h ****     daisy::I2CHandle i2c_;
  54:../../libdaisy/src/dev/oled_ssd130x.h ****     uint8_t          i2c_address_;
  55:../../libdaisy/src/dev/oled_ssd130x.h **** };
  56:../../libdaisy/src/dev/oled_ssd130x.h **** 
  57:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  58:../../libdaisy/src/dev/oled_ssd130x.h ****  * 4 Wire SPI Transport for SSD1306 / SSD1309 OLED display devices
  59:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  60:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130x4WireSpiTransport
  61:../../libdaisy/src/dev/oled_ssd130x.h **** {
  62:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  63:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  64:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  65:../../libdaisy/src/dev/oled_ssd130x.h ****         struct
  66:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  67:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin dc;    /**< & */
  68:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin reset; /**< & */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 21


  69:../../libdaisy/src/dev/oled_ssd130x.h ****         } pin_config;
  70:../../libdaisy/src/dev/oled_ssd130x.h ****         void Defaults()
  71:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  72:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.dc    = {DSY_GPIOB, 4};
  73:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.reset = {DSY_GPIOB, 15};
  74:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  75:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  76:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  77:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  78:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize both GPIO
  79:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  80:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.pin  = config.pin_config.dc;
  81:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_dc_);
  82:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  83:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.pin  = config.pin_config.reset;
  84:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_reset_);
  85:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize SPI
  86:../../libdaisy/src/dev/oled_ssd130x.h ****         SpiHandle::Config spi_config;
  87:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.periph    = SpiHandle::Config::Peripheral::SPI_1;
  88:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.mode      = SpiHandle::Config::Mode::MASTER;
  89:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.direction = SpiHandle::Config::Direction::TWO_LINES_TX_ONLY;
  90:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.datasize  = 8;
  91:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_polarity = SpiHandle::Config::ClockPolarity::LOW;
  92:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_phase    = SpiHandle::Config::ClockPhase::ONE_EDGE;
  93:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.nss            = SpiHandle::Config::NSS::HARD_OUTPUT;
  94:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.baud_prescaler = SpiHandle::Config::BaudPrescaler::PS_8;
  95:../../libdaisy/src/dev/oled_ssd130x.h **** 
  96:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.sclk = {DSY_GPIOG, 11};
  97:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.miso = {DSY_GPIOX, 0};
  98:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.mosi = {DSY_GPIOB, 5};
  99:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.nss  = {DSY_GPIOG, 10};
 100:../../libdaisy/src/dev/oled_ssd130x.h **** 
 101:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.Init(spi_config);
 102:../../libdaisy/src/dev/oled_ssd130x.h **** 
 103:../../libdaisy/src/dev/oled_ssd130x.h ****         // Reset and Configure OLED.
 104:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 0);
 105:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 106:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 1);
 107:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 108:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
 110:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 0);
 112:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 113:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 114:../../libdaisy/src/dev/oled_ssd130x.h **** 
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
 116:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 1);
 118:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 119:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 120:../../libdaisy/src/dev/oled_ssd130x.h **** 
 121:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
 122:../../libdaisy/src/dev/oled_ssd130x.h ****     SpiHandle spi_;
 123:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_reset_;
 124:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_dc_;
 125:../../libdaisy/src/dev/oled_ssd130x.h **** };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 22


 126:../../libdaisy/src/dev/oled_ssd130x.h **** 
 127:../../libdaisy/src/dev/oled_ssd130x.h **** 
 128:../../libdaisy/src/dev/oled_ssd130x.h **** /**
 129:../../libdaisy/src/dev/oled_ssd130x.h ****  * A driver implementation for the SSD1306/SSD1309
 130:../../libdaisy/src/dev/oled_ssd130x.h ****  */
 131:../../libdaisy/src/dev/oled_ssd130x.h **** template <size_t width, size_t height, typename Transport>
 132:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xDriver
 133:../../libdaisy/src/dev/oled_ssd130x.h **** {
 134:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
 135:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
 136:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 137:../../libdaisy/src/dev/oled_ssd130x.h ****         typename Transport::Config transport_config;
 138:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 139:../../libdaisy/src/dev/oled_ssd130x.h **** 
 140:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(Config config)
 141:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 142:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.Init(config.transport_config);
 143:../../libdaisy/src/dev/oled_ssd130x.h **** 
 144:../../libdaisy/src/dev/oled_ssd130x.h ****         // Init routine...
 145:../../libdaisy/src/dev/oled_ssd130x.h **** 
 146:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Off
 147:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xaE);
 148:../../libdaisy/src/dev/oled_ssd130x.h ****         // Dimension dependent commands...
 149:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 150:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 151:../../libdaisy/src/dev/oled_ssd130x.h ****             case 16:
 152:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 153:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 154:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x60);
 155:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 156:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 157:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x0F);
 158:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 159:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 160:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x02);
 161:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 162:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32:
 163:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 164:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 165:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 166:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 167:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 168:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x1F);
 169:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 170:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 171:../../libdaisy/src/dev/oled_ssd130x.h ****                 if(width == 64)
 172:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 173:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x12);
 174:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 175:../../libdaisy/src/dev/oled_ssd130x.h ****                 else
 176:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 177:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x02);
 178:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 179:../../libdaisy/src/dev/oled_ssd130x.h **** 
 180:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 181:../../libdaisy/src/dev/oled_ssd130x.h ****             case 48:
 182:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 23


 183:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 184:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 185:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 186:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 187:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x2F);
 188:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 189:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 190:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 191:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 192:../../libdaisy/src/dev/oled_ssd130x.h ****             default: // 128
 193:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 194:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 195:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 196:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 197:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 198:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x3F);
 199:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 200:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 201:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 202:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 203:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 204:../../libdaisy/src/dev/oled_ssd130x.h **** 
 205:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Offset
 206:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD3);
 207:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x00);
 208:../../libdaisy/src/dev/oled_ssd130x.h ****         // Start Line Address
 209:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x40);
 210:../../libdaisy/src/dev/oled_ssd130x.h ****         // Normal Display
 211:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA6);
 212:../../libdaisy/src/dev/oled_ssd130x.h ****         // All On Resume
 213:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA4);
 214:../../libdaisy/src/dev/oled_ssd130x.h ****         // Charge Pump
 215:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8D);
 216:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x14);
 217:../../libdaisy/src/dev/oled_ssd130x.h ****         // Set Segment Remap
 218:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA1);
 219:../../libdaisy/src/dev/oled_ssd130x.h ****         // COM Output Scan Direction
 220:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xC8);
 221:../../libdaisy/src/dev/oled_ssd130x.h ****         // Contrast Control
 222:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x81);
 223:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8F);
 224:../../libdaisy/src/dev/oled_ssd130x.h ****         // Pre Charge
 225:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD9);
 226:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x25);
 227:../../libdaisy/src/dev/oled_ssd130x.h ****         // VCOM Detect
 228:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xDB);
 229:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x34);
 230:../../libdaisy/src/dev/oled_ssd130x.h **** 
 231:../../libdaisy/src/dev/oled_ssd130x.h **** 
 232:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display On
 233:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xAF); //--turn on oled panel
 234:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 235:../../libdaisy/src/dev/oled_ssd130x.h **** 
 236:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Width() const { return width; };
 237:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Height() const { return height; };
 238:../../libdaisy/src/dev/oled_ssd130x.h **** 
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 24


 240:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 241:../../libdaisy/src/dev/oled_ssd130x.h ****         if(x >= width || y >= height)
 242:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 243:../../libdaisy/src/dev/oled_ssd130x.h ****         if(on)
 244:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 245:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 246:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] &= ~(1 << (y % 8));
 247:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 248:../../libdaisy/src/dev/oled_ssd130x.h **** 
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     void Fill(bool on)
 213              		.loc 15 249 10 view .LVU33
 214              	.LBB5008:
 250:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < sizeof(buffer_); i++)
 215              		.loc 15 251 29 view .LVU34
 252:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 253:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[i] = on ? 0xff : 0x00;
 216              		.loc 15 253 24 is_stmt 0 view .LVU35
 217 0000 4942     		rsbs	r1, r1, #0
 218              	.LVL4:
 219              		.loc 15 253 24 view .LVU36
 220 0002 4FF48062 		mov	r2, #1024
 221 0006 1430     		adds	r0, r0, #20
 222              	.LVL5:
 223              		.loc 15 253 24 view .LVU37
 224 0008 C9B2     		uxtb	r1, r1
 225 000a FFF7FEBF 		b	memset
 226              	.LVL6:
 227              		.loc 15 253 24 view .LVU38
 228              	.LBE5008:
 229              	.LBE5007:
 230              		.cfi_endproc
 231              	.LFE5558:
 233 000e 00BF     		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data,"axG",%progbits,_ZNSt17
 234              		.align	1
 235              		.p2align 2,,3
 236              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv5-d16
 242              	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:
 243              	.LVL7:
 244              	.LFB5758:
 245              		.file 16 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Implementation of std::function -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Copyright (C) 2004-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 25


  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** /** @file include/bits/std_function.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #ifndef _GLIBCXX_STD_FUNCTION_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #define _GLIBCXX_STD_FUNCTION_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** # include <typeinfo>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/stl_function.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/invoke.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/refwrap.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #include <bits/functexcept.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Exception class thrown when class template function's
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  operator() is called with an empty target.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup exceptions
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class bad_function_call : public std::exception
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     virtual ~bad_function_call() noexcept;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const char* what() const noexcept;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trait identifying "location-invariant" types, meaning that the
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  address of the object (or any of its members) will not escape.
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Trivially copyable types are location-invariant and users can
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  specialize this trait for other types.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 26


  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Tp>
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __is_location_invariant
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : is_trivially_copyable<_Tp>::type
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Undefined_class;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union _Nocopy_types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_object;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_const_object;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (*_M_function_pointer)();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void (_Undefined_class::*_M_member_pointer)();
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   union [[gnu::may_alias]] _Any_data
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     void*       _M_access()       { return &_M_pod_data[0]; }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Tp&
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access()
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<_Tp*>(_M_access()); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const _Tp&
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_access() const
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Nocopy_types _M_unused;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     char _M_pod_data[sizeof(_Nocopy_types)];
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   enum _Manager_operation
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_type_info,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __get_functor_ptr,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __clone_functor,
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     __destroy_functor
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /// Base class of all polymorphic function object wrappers.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   class _Function_base
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_size = sizeof(_Nocopy_types);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     static const size_t _M_max_align = __alignof__(_Nocopy_types);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor>
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       class _Base_manager
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       protected:
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static const bool __stored_locally =
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 27


 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	(__is_location_invariant<_Functor>::value
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && sizeof(_Functor) <= _M_max_size
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && __alignof__(_Functor) <= _M_max_align
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	 && (_M_max_align % __alignof__(_Functor) == 0));
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef integral_constant<bool, __stored_locally> _Local_storage;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Retrieve a pointer to the function object
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static _Functor*
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_get_pointer(const _Any_data& __source)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  if _GLIBCXX17_CONSTEXPR (__stored_locally)
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      const _Functor& __f = __source._M_access<_Functor>();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      return const_cast<_Functor*>(std::__addressof(__f));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  else // have stored a pointer
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    return __source._M_access<_Functor*>();
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a location-invariant function object that fits within
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// an _Any_data structure.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, true_type)
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  ::new (__dest._M_access()) _Functor(__source._M_access<_Functor>());
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Clone a function object that is not location-invariant or
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// that cannot fit into an _Any_data structure.
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_clone(_Any_data& __dest, const _Any_data& __source, false_type)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __dest._M_access<_Functor*>() =
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    new _Functor(*__source._M_access<const _Functor*>());
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying a location-invariant object may still require
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// destruction.
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, true_type)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __victim._M_access<_Functor>().~_Functor();
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	// Destroying an object located on the heap.
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_destroy(_Any_data& __victim, false_type)
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  delete __victim._M_access<_Functor*>();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       public:
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static bool
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_Any_data& __dest, const _Any_data& __source,
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 28


 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  switch (__op)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_type_info:
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<const type_info*>() = &typeid(_Functor);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __get_functor_ptr:
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __clone_functor:
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_clone(__dest, __source, _Local_storage());
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    case __destroy_functor:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      _M_destroy(__dest, _Local_storage());
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	      break;
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return false;
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Signature>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const function<_Signature>& __f)
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return static_cast<bool>(__f); }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp* __fp)
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Class, typename _Tp>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(_Tp _Class::* __mp)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __mp != nullptr; }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	template<typename _Tp>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  static bool
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_not_empty_function(const _Tp&)
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return true; }
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, true_type)
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	static void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       };
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Function_base() : _M_manager(nullptr) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 29


 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     ~_Function_base()
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (_M_manager)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     bool _M_empty() const { return !_M_manager; }
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				  _Manager_operation);
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Any_data     _M_functor;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     _Manager_type _M_manager;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Signature, typename _Functor>
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Functor, typename... _ArgTypes>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class _Function_handler<_Res(_ArgTypes...), _Functor>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Function_base::_Base_manager<_Functor>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Function_base::_Base_manager<_Functor> _Base;
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static bool
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_manager(_Any_data& __dest, const _Any_data& __source,
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	switch (__op)
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_type_info:
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<const type_info*>() = &typeid(_Functor);
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  case __get_functor_ptr:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  default:
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _Base::_M_manager(__dest, __source, __op);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return false;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       static _Res
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
 246              		.loc 16 289 7 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 251              		.loc 16 88 37 view .LVU40
 252              	.LBB5009:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 30


 253              	.LBI5009:
 254              		.file 17 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\inv
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Implementation of INVOKE -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** /** @file include/bits/invoke.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #ifndef _GLIBCXX_INVOKE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #define _GLIBCXX_INVOKE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #include <type_traits>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /**
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @addtogroup utilities
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    *  @{
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****    */
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // Used by __invoke_impl instead of std::forward<_Tp> so that a
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // reference_wrapper is converted to an lvalue-reference.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Tp, typename _Up = typename __inv_unwrap<_Tp>::type>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Up&&
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invfwd(typename remove_reference<_Tp>::type& __t) noexcept
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return static_cast<_Up&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 31


  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Fn, typename... _Args>
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_ref, _MemFun&& __f, _Tp&& __t,
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (__invfwd<_Tp>(__t).*__f)(std::forward<_Args>(__args)...); }
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemFun, typename _Tp, typename... _Args>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 		  _Args&&... __args)
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return ((*std::forward<_Tp>(__t)).*__f)(std::forward<_Args>(__args)...);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_ref, _MemPtr&& __f, _Tp&& __t)
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return __invfwd<_Tp>(__t).*__f; }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _MemPtr, typename _Tp>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr _Res
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_impl(__invoke_memobj_deref, _MemPtr&& __f, _Tp&& __t)
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return (*std::forward<_Tp>(__t)).*__f; }
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   /// Invoke a callable object.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Callable, typename... _Args>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr typename __invoke_result<_Callable, _Args...>::type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke(_Callable&& __fn, _Args&&... __args)
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #if __cplusplus >= 201703L
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     noexcept(is_nothrow_invocable_r_v<_Res, _Callable, _Args...>)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       if constexpr (is_void_v<_Res>)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 32


 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	return std::__invoke_impl<__type>(__tag{},
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Callable>(__fn),
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					  std::forward<_Args>(__args)...);
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** #else // C++11
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_void = __enable_if_t<
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<is_void<_Res>, __is_invocable<_Callable, _Args...>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     using __can_invoke_as_nonvoid = __enable_if_t<
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       __and_<__not_<is_void<_Res>>,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 	     is_convertible<typename __invoke_result<_Callable, _Args...>::type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 			    _Res>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       >::value,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       _Res
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     >;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R>: Invoke a callable object and convert the result to R.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     constexpr __can_invoke_as_nonvoid<_Res, _Callable, _Args...>
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     {
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __result = __invoke_result<_Callable, _Args...>;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __type = typename __result::type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       using __tag = typename __result::__invoke_type;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****       return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 					std::forward<_Args>(__args)...);
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   // INVOKE<R> when R is cv void
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****   template<typename _Res, typename _Callable, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     _GLIBCXX14_CONSTEXPR __can_invoke_as_void<_Res, _Callable, _Args...>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     __invoke_r(_Callable&& __fn, _Args&&... __args)
 255              		.loc 17 148 5 view .LVU41
 256              	.LBB5010:
 257              	.LBB5011:
 258              	.LBI5011:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h ****     { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 259              		.loc 17 59 5 view .LVU42
 260              	.LBB5012:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 261              		.loc 17 60 36 is_stmt 0 view .LVU43
 262 0000 0368     		ldr	r3, [r0]
 263 0002 1847     		bx	r3	@ indirect register sibling call
 264              	.LVL8:
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\invoke.h **** 
 265              		.loc 17 60 36 view .LVU44
 266              	.LBE5012:
 267              	.LBE5011:
 268              	.LBE5010:
 269              	.LBE5009:
 270              		.cfi_endproc
 271              	.LFE5758:
 273              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 33


 274              		.align	1
 275              		.p2align 2,,3
 276              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu fpv5-d16
 282              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:
 283              	.LVL9:
 284              	.LFB6211:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 285              		.loc 4 26 14 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 290              		.loc 4 26 65 is_stmt 0 view .LVU46
 291 0000 4020     		movs	r0, #64
 292              	.LVL10:
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 293              		.loc 4 26 65 view .LVU47
 294 0002 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE6211:
 298              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 299              		.align	1
 300              		.p2align 2,,3
 301              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:
 308              	.LVL11:
 309              	.LFB6212:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 310              		.loc 4 27 14 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 315              		.loc 4 27 63 is_stmt 0 view .LVU49
 316 0000 8020     		movs	r0, #128
 317              	.LVL12:
  27:../../libdaisy/src/hid/disp/oled_display.h **** 
 318              		.loc 4 27 63 view .LVU50
 319 0002 7047     		bx	lr
 320              		.cfi_endproc
 321              	.LFE6212:
 323              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 324              		.align	1
 325              		.p2align 2,,3
 326              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 327              		.syntax unified
 328              		.thumb
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 34


 329              		.thumb_func
 330              		.fpu fpv5-d16
 332              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:
 333              	.LVL13:
 334              	.LFB5463:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 335              		.loc 4 17 13 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 339              		.loc 4 17 13 is_stmt 0 view .LVU52
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 344              		.loc 4 17 13 view .LVU53
 345 0002 0446     		mov	r4, r0
 346              	.LVL14:
 347              	.LBB5013:
 348              	.LBI5013:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 349              		.loc 4 17 13 is_stmt 1 view .LVU54
 350              	.LBB5014:
 351              	.LBI5014:
 352              		.loc 5 219 13 view .LVU55
 353              	.LBB5015:
 354              	.LBI5015:
  23:../../libdaisy/src/hid/disp/display.h **** 
 355              		.loc 5 23 13 view .LVU56
  23:../../libdaisy/src/hid/disp/display.h **** 
 356              		.loc 5 23 13 is_stmt 0 view .LVU57
 357              	.LBE5015:
 358              	.LBE5014:
 359              	.LBE5013:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 360              		.loc 4 17 29 view .LVU58
 361 0004 40F21441 		movw	r1, #1044
 362 0008 FFF7FEFF 		bl	_ZdlPvj
 363              	.LVL15:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 364              		.loc 4 17 29 view .LVU59
 365 000c 2046     		mov	r0, r4
 366 000e 10BD     		pop	{r4, pc}
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 367              		.loc 4 17 29 view .LVU60
 368              		.cfi_endproc
 369              	.LFE5463:
 371              		.section	.text._Z6cbRootv,"ax",%progbits
 372              		.align	1
 373              		.p2align 2,,3
 374              		.global	_Z6cbRootv
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv5-d16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 35


 380              	_Z6cbRootv:
 381              	.LFB5123:
  84:Jellybeans.cpp **** 
  85:Jellybeans.cpp **** void cbPattern(){
  86:Jellybeans.cpp ****     arp->setPattern(mPattern->getValue());
  87:Jellybeans.cpp **** };
  88:Jellybeans.cpp **** 
  89:Jellybeans.cpp **** void cbVoicing(){
  90:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->getValue());
  91:Jellybeans.cpp ****     arp->updateTraversal();
  92:Jellybeans.cpp **** };
  93:Jellybeans.cpp **** 
  94:Jellybeans.cpp **** void cbMode(){
  95:Jellybeans.cpp ****     arp->getChord()->setMode(mMode->getValue());
  96:Jellybeans.cpp ****     arp->updateTraversal();
  97:Jellybeans.cpp **** };
  98:Jellybeans.cpp **** 
  99:Jellybeans.cpp **** void cbRoot(){
 382              		.loc 14 99 14 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 100:Jellybeans.cpp ****     arp->getChord()->setRoot(mRoot->getIndex());
 386              		.loc 14 100 5 view .LVU62
  99:Jellybeans.cpp ****     arp->getChord()->setRoot(mRoot->getIndex());
 387              		.loc 14 99 14 is_stmt 0 view .LVU63
 388 0000 38B5     		push	{r3, r4, r5, lr}
 389              		.cfi_def_cfa_offset 16
 390              		.cfi_offset 3, -16
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 5, -8
 393              		.cfi_offset 14, -4
 394              		.loc 14 100 29 view .LVU64
 395 0002 094D     		ldr	r5, .L14
 396 0004 2868     		ldr	r0, [r5]
 397 0006 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 398              	.LVL16:
 399 000a 084B     		ldr	r3, .L14+4
 400 000c 0446     		mov	r4, r0
 401 000e 1868     		ldr	r0, [r3]
 402 0010 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8getIndexEv
 403              	.LVL17:
 404 0014 0146     		mov	r1, r0
 405 0016 2046     		mov	r0, r4
 406 0018 FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord7setRootEi
 407              	.LVL18:
 101:Jellybeans.cpp ****     arp->updateTraversal();
 408              		.loc 14 101 5 is_stmt 1 view .LVU65
 409              		.loc 14 101 25 is_stmt 0 view .LVU66
 410 001c 2868     		ldr	r0, [r5]
 102:Jellybeans.cpp **** };
 411              		.loc 14 102 1 view .LVU67
 412 001e BDE83840 		pop	{r3, r4, r5, lr}
 413              		.cfi_restore 14
 414              		.cfi_restore 5
 415              		.cfi_restore 4
 416              		.cfi_restore 3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 36


 417              		.cfi_def_cfa_offset 0
 101:Jellybeans.cpp ****     arp->updateTraversal();
 418              		.loc 14 101 25 view .LVU68
 419 0022 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 420              	.LVL19:
 421              	.L15:
 422 0026 00BF     		.align	2
 423              	.L14:
 424 0028 00000000 		.word	.LANCHOR0
 425 002c 00000000 		.word	.LANCHOR1
 426              		.cfi_endproc
 427              	.LFE5123:
 429              		.section	.text._Z8cbOctavev,"ax",%progbits
 430              		.align	1
 431              		.p2align 2,,3
 432              		.global	_Z8cbOctavev
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv5-d16
 438              	_Z8cbOctavev:
 439              	.LFB5124:
 103:Jellybeans.cpp **** 
 104:Jellybeans.cpp **** void cbOctave(){
 440              		.loc 14 104 16 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 105:Jellybeans.cpp ****     arp->getChord()->setOctave(mOct->getIndex());
 444              		.loc 14 105 5 view .LVU70
 104:Jellybeans.cpp ****     arp->getChord()->setOctave(mOct->getIndex());
 445              		.loc 14 104 16 is_stmt 0 view .LVU71
 446 0000 38B5     		push	{r3, r4, r5, lr}
 447              		.cfi_def_cfa_offset 16
 448              		.cfi_offset 3, -16
 449              		.cfi_offset 4, -12
 450              		.cfi_offset 5, -8
 451              		.cfi_offset 14, -4
 452              		.loc 14 105 31 view .LVU72
 453 0002 094D     		ldr	r5, .L18
 454 0004 2868     		ldr	r0, [r5]
 455 0006 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 456              	.LVL20:
 457 000a 084B     		ldr	r3, .L18+4
 458 000c 0446     		mov	r4, r0
 459 000e 1868     		ldr	r0, [r3]
 460 0010 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8getIndexEv
 461              	.LVL21:
 462 0014 0146     		mov	r1, r0
 463 0016 2046     		mov	r0, r4
 464 0018 FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord9setOctaveEi
 465              	.LVL22:
 106:Jellybeans.cpp ****     arp->updateTraversal();
 466              		.loc 14 106 5 is_stmt 1 view .LVU73
 467              		.loc 14 106 25 is_stmt 0 view .LVU74
 468 001c 2868     		ldr	r0, [r5]
 107:Jellybeans.cpp **** };
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 37


 469              		.loc 14 107 1 view .LVU75
 470 001e BDE83840 		pop	{r3, r4, r5, lr}
 471              		.cfi_restore 14
 472              		.cfi_restore 5
 473              		.cfi_restore 4
 474              		.cfi_restore 3
 475              		.cfi_def_cfa_offset 0
 106:Jellybeans.cpp ****     arp->updateTraversal();
 476              		.loc 14 106 25 view .LVU76
 477 0022 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 478              	.LVL23:
 479              	.L19:
 480 0026 00BF     		.align	2
 481              	.L18:
 482 0028 00000000 		.word	.LANCHOR0
 483 002c 00000000 		.word	.LANCHOR2
 484              		.cfi_endproc
 485              	.LFE5124:
 487              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra
 488              		.align	2
 489              	.LC23:
 490 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 490      635F7374 
 490      72696E67 
 490      3A3A5F4D 
 490      5F636F6E 
 491              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 492              		.align	1
 493              		.p2align 2,,3
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv5-d16
 499              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:
 500              	.LVL24:
 501              	.LFB6248:
 502              		.file 18 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 38


  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 39


  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 40


 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 41


 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 42


 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 43


 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 44


 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 45


 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 46


 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 503              		.loc 18 525 7 is_stmt 1 view -0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 8
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              	.LBB5075:
 508              	.LBB5076:
 509              	.LBI5076:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 47


 510              		.loc 18 190 7 view .LVU78
 511              	.LBE5076:
 512              	.LBE5075:
 513              		.loc 18 525 7 is_stmt 0 view .LVU79
 514 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 515              		.cfi_def_cfa_offset 20
 516              		.cfi_offset 4, -20
 517              		.cfi_offset 5, -16
 518              		.cfi_offset 6, -12
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521              	.LBB5155:
 522              	.LBB5078:
 523              	.LBB5077:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 524              		.loc 18 193 51 view .LVU80
 525 0002 00F10807 		add	r7, r0, #8
 526              	.LVL25:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 527              		.loc 18 193 51 view .LVU81
 528              	.LBE5077:
 529              	.LBE5078:
 530              	.LBB5079:
 531              	.LBI5079:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 532              		.loc 18 156 2 is_stmt 1 view .LVU82
 533              	.LBB5080:
 534              	.LBB5081:
 535              	.LBI5081:
 536              		.file 19 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 48


  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 49


  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 50


 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 537              		.loc 19 147 7 view .LVU83
 538              	.LBB5082:
 539              	.LBI5082:
 540              		.file 20 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 51


  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 541              		.loc 20 82 7 view .LVU84
 542              		.loc 20 82 7 is_stmt 0 view .LVU85
 543              	.LBE5082:
 544              	.LBE5081:
 545              	.LBE5080:
 546              	.LBE5079:
 547              	.LBE5155:
 548              		.loc 18 525 7 view .LVU86
 549 0006 83B0     		sub	sp, sp, #12
 550              		.cfi_def_cfa_offset 32
 551              	.LBB5156:
 552              	.LBB5084:
 553              	.LBB5083:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 554              		.loc 18 157 35 view .LVU87
 555 0008 0760     		str	r7, [r0]
 556              	.LVL26:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 557              		.loc 18 157 35 view .LVU88
 558              	.LBE5083:
 559              	.LBE5084:
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 52


 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 560              		.loc 18 527 21 view .LVU89
 561 000a 29B3     		cbz	r1, .L21
 562 000c 0446     		mov	r4, r0
 563              	.LBB5085:
 564              	.LBB5086:
 565              		.file 21 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 53


  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 54


 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 55


 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 56


 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 57


 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 58


 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 566              		.loc 21 357 25 view .LVU90
 567 000e 0846     		mov	r0, r1
 568              	.LVL27:
 569              		.loc 21 357 25 view .LVU91
 570 0010 0E46     		mov	r6, r1
 571              	.LVL28:
 572              		.loc 21 357 25 view .LVU92
 573              	.LBE5086:
 574              	.LBI5085:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 575              		.loc 21 351 7 is_stmt 1 view .LVU93
 576              	.LBB5087:
 577              		.loc 21 357 2 view .LVU94
 578              		.loc 21 357 25 is_stmt 0 view .LVU95
 579 0012 FFF7FEFF 		bl	strlen
 580              	.LVL29:
 581              		.loc 21 357 25 view .LVU96
 582              	.LBE5087:
 583              	.LBE5085:
 584              	.LBB5089:
 585              	.LBB5090:
 586              	.LBB5091:
 587              	.LBB5092:
 588              	.LBB5093:
 589              	.LBB5094:
 590              		.file 22 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\bas
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 59


  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 60


  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 61


 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 62


 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 591              		.loc 22 217 2 view .LVU97
 592 0016 0F28     		cmp	r0, #15
 593              	.LBE5094:
 594              	.LBE5093:
 595              	.LBE5092:
 596              	.LBE5091:
 597              	.LBE5090:
 598              	.LBE5089:
 599              	.LBB5152:
 600              	.LBB5088:
 601              		.loc 21 357 25 view .LVU98
 602 0018 0546     		mov	r5, r0
 603              	.LVL30:
 604              		.loc 21 357 25 view .LVU99
 605              	.LBE5088:
 606              	.LBE5152:
 607              	.LBB5153:
 608              	.LBI5089:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 609              		.loc 18 263 9 is_stmt 1 view .LVU100
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 63


 610              	.LBB5149:
 611              	.LBB5146:
 612              	.LBI5091:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 613              		.loc 18 243 9 view .LVU101
 614              	.LBB5143:
 615              	.LBB5140:
 616              	.LBI5093:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 617              		.loc 22 206 7 view .LVU102
 618              	.LBB5137:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 619              		.loc 22 215 12 is_stmt 0 view .LVU103
 620 001a 0190     		str	r0, [sp, #4]
 621              		.loc 22 217 2 view .LVU104
 622 001c 0DD8     		bhi	.L32
 623              	.LVL31:
 624              	.LBB5095:
 625              	.LBI5095:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 626              		.loc 18 186 7 is_stmt 1 view .LVU105
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 627              		.loc 18 186 7 is_stmt 0 view .LVU106
 628              	.LBE5095:
 629              	.LBB5096:
 630              	.LBI5096:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 631              		.loc 18 396 7 is_stmt 1 view .LVU107
 632              	.LBB5097:
 633              	.LBI5097:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 634              		.loc 18 346 7 view .LVU108
 635              	.LBB5098:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 636              		.loc 18 348 2 is_stmt 0 view .LVU109
 637 001e 0128     		cmp	r0, #1
 638 0020 08D1     		bne	.L25
 639              	.LVL32:
 640              	.LBB5099:
 641              	.LBI5099:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 642              		.loc 21 321 7 is_stmt 1 view .LVU110
 643              	.LBB5100:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 644              		.loc 21 322 9 view .LVU111
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 645              		.loc 21 322 14 is_stmt 0 view .LVU112
 646 0022 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 647 0024 2372     		strb	r3, [r4, #8]
 648              	.LVL33:
 649              	.L26:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 650              		.loc 21 322 14 view .LVU113
 651              	.LBE5100:
 652              	.LBE5099:
 653              	.LBE5098:
 654              	.LBE5097:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 64


 655              	.LBE5096:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 656              		.loc 22 232 15 view .LVU114
 657 0026 019B     		ldr	r3, [sp, #4]
 658              	.LVL34:
 659              	.LBB5116:
 660              	.LBI5116:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 661              		.loc 18 214 7 is_stmt 1 view .LVU115
 662              	.LBB5117:
 663              	.LBB5118:
 664              	.LBI5118:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 665              		.loc 18 182 7 view .LVU116
 666              	.LBE5118:
 667              	.LBB5120:
 668              	.LBB5121:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 669              		.loc 21 322 14 is_stmt 0 view .LVU117
 670 0028 0021     		movs	r1, #0
 671 002a 2268     		ldr	r2, [r4]
 672              	.LBE5121:
 673              	.LBE5120:
 674              	.LBB5123:
 675              	.LBB5119:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 676              		.loc 18 183 26 view .LVU118
 677 002c 6360     		str	r3, [r4, #4]
 678              	.LVL35:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 679              		.loc 18 183 26 view .LVU119
 680              	.LBE5119:
 681              	.LBE5123:
 682              	.LBB5124:
 683              	.LBI5124:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 684              		.loc 18 186 7 is_stmt 1 view .LVU120
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 685              		.loc 18 186 7 is_stmt 0 view .LVU121
 686              	.LBE5124:
 687              	.LBB5125:
 688              	.LBI5120:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 65


 689              		.loc 21 321 7 is_stmt 1 view .LVU122
 690              	.LBB5122:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 691              		.loc 21 322 9 view .LVU123
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 692              		.loc 21 322 14 is_stmt 0 view .LVU124
 693 002e D154     		strb	r1, [r2, r3]
 694              	.LVL36:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 695              		.loc 21 322 14 view .LVU125
 696              	.LBE5122:
 697              	.LBE5125:
 698              	.LBE5117:
 699              	.LBE5116:
 700              	.LBE5137:
 701              	.LBE5140:
 702              	.LBE5143:
 703              	.LBE5146:
 704              	.LBE5149:
 705              	.LBE5153:
 706              	.LBE5156:
 707              		.loc 18 527 77 view .LVU126
 708 0030 03B0     		add	sp, sp, #12
 709              		.cfi_remember_state
 710              		.cfi_def_cfa_offset 20
 711              		@ sp needed
 712 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 713              	.LVL37:
 714              	.L25:
 715              		.cfi_restore_state
 716              	.LBB5157:
 717              	.LBB5154:
 718              	.LBB5150:
 719              	.LBB5147:
 720              	.LBB5144:
 721              	.LBB5141:
 722              	.LBB5138:
 723              	.LBB5126:
 724              	.LBB5113:
 725              	.LBB5110:
 726              	.LBB5101:
 727              	.LBI5101:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 728              		.loc 18 346 7 is_stmt 1 view .LVU127
 729              	.LBB5102:
 730              	.LBI5102:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 66


 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 731              		.loc 21 387 7 view .LVU128
 732              	.LBB5103:
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 733              		.loc 21 389 2 view .LVU129
 734 0034 0028     		cmp	r0, #0
 735 0036 F6D0     		beq	.L26
 736 0038 08E0     		b	.L24
 737              	.LVL38:
 738              	.L32:
 739              		.loc 21 389 2 is_stmt 0 view .LVU130
 740              	.LBE5103:
 741              	.LBE5102:
 742              	.LBE5101:
 743              	.LBE5110:
 744              	.LBE5113:
 745              	.LBE5126:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 746              		.loc 22 219 13 view .LVU131
 747 003a 0022     		movs	r2, #0
 748 003c 01A9     		add	r1, sp, #4
 749 003e 2046     		mov	r0, r4
 750              	.LVL39:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 751              		.loc 22 219 13 view .LVU132
 752 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 753              	.LVL40:
 754              	.LBB5127:
 755              	.LBB5128:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 756              		.loc 18 211 31 view .LVU133
 757 0044 019B     		ldr	r3, [sp, #4]
 758              	.LBE5128:
 759              	.LBE5127:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 760              		.loc 22 219 13 view .LVU134
 761 0046 0746     		mov	r7, r0
 762              	.LVL41:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 67


 763              	.LBB5130:
 764              	.LBI5130:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 765              		.loc 18 178 7 is_stmt 1 view .LVU135
 766              	.LBB5131:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 767              		.loc 18 179 26 is_stmt 0 view .LVU136
 768 0048 2060     		str	r0, [r4]
 769              	.LVL42:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 770              		.loc 18 179 26 view .LVU137
 771              	.LBE5131:
 772              	.LBE5130:
 773              	.LBB5132:
 774              	.LBI5127:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 775              		.loc 18 210 7 is_stmt 1 view .LVU138
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 776              		.loc 18 210 7 is_stmt 0 view .LVU139
 777              	.LBE5132:
 778              	.LBB5133:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 779              		.loc 18 186 7 is_stmt 1 view .LVU140
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 780              		.loc 18 186 7 is_stmt 0 view .LVU141
 781              	.LBE5133:
 782              	.LBB5134:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 783              		.loc 18 396 7 is_stmt 1 view .LVU142
 784              	.LBB5114:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 785              		.loc 18 346 7 view .LVU143
 786              	.LBB5111:
 787              	.LBB5108:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 788              		.loc 18 346 7 view .LVU144
 789              	.LBB5106:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 790              		.loc 21 387 7 view .LVU145
 791              	.LBB5104:
 792              		.loc 21 389 2 view .LVU146
 793              	.LBE5104:
 794              	.LBE5106:
 795              	.LBE5108:
 796              	.LBE5111:
 797              	.LBE5114:
 798              	.LBE5134:
 799              	.LBB5135:
 800              	.LBB5129:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 801              		.loc 18 211 31 is_stmt 0 view .LVU147
 802 004a A360     		str	r3, [r4, #8]
 803              	.LVL43:
 804              	.L24:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 805              		.loc 18 211 31 view .LVU148
 806              	.LBE5129:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 68


 807              	.LBE5135:
 808              	.LBB5136:
 809              	.LBB5115:
 810              	.LBB5112:
 811              	.LBB5109:
 812              	.LBB5107:
 813              	.LBB5105:
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 814              		.loc 21 395 2 is_stmt 1 view .LVU149
 815              		.loc 21 395 49 is_stmt 0 view .LVU150
 816 004c 2A46     		mov	r2, r5
 817 004e 3146     		mov	r1, r6
 818 0050 3846     		mov	r0, r7
 819 0052 FFF7FEFF 		bl	memcpy
 820              	.LVL44:
 821              		.loc 21 395 66 view .LVU151
 822 0056 E6E7     		b	.L26
 823              	.LVL45:
 824              	.L21:
 825              		.loc 21 395 66 view .LVU152
 826              	.LBE5105:
 827              	.LBE5107:
 828              	.LBE5109:
 829              	.LBE5112:
 830              	.LBE5115:
 831              	.LBE5136:
 832              	.LBE5138:
 833              	.LBE5141:
 834              	.LBE5144:
 835              	.LBE5147:
 836              	.LBE5150:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 837              		.loc 18 263 9 is_stmt 1 view .LVU153
 838              	.LBB5151:
 839              	.LBB5148:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 840              		.loc 18 243 9 view .LVU154
 841              	.LBB5145:
 842              	.LBB5142:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 843              		.loc 22 206 7 view .LVU155
 844              	.LBB5139:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 845              		.loc 22 212 28 is_stmt 0 view .LVU156
 846 0058 0148     		ldr	r0, .L33
 847              	.LVL46:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 848              		.loc 22 212 28 view .LVU157
 849 005a FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 850              	.LVL47:
 851              	.L34:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 69


 852              		.loc 22 212 28 view .LVU158
 853 005e 00BF     		.align	2
 854              	.L33:
 855 0060 00000000 		.word	.LC23
 856              	.LBE5139:
 857              	.LBE5142:
 858              	.LBE5145:
 859              	.LBE5148:
 860              	.LBE5151:
 861              	.LBE5154:
 862              	.LBE5157:
 863              		.cfi_endproc
 864              	.LFE6248:
 866              		.section	.text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_opera
 867              		.align	1
 868              		.p2align 2,,3
 869              		.weak	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu fpv5-d16
 875              	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:
 876              	.LVL48:
 877              	.LFB5759:
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		 _Manager_operation __op)
 878              		.loc 16 268 7 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 883              		.loc 16 271 2 is_stmt 0 view .LVU160
 884 0000 2AB1     		cbz	r2, .L36
 885 0002 012A     		cmp	r2, #1
 886 0004 07D0     		beq	.L37
 887              	.LVL49:
 888              	.LBB5172:
 889              	.LBI5172:
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 		   _Manager_operation __op)
 890              		.loc 16 181 2 is_stmt 1 view .LVU161
 891              	.LBB5173:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 892              		.loc 16 184 4 is_stmt 0 view .LVU162
 893 0006 022A     		cmp	r2, #2
 894 0008 08D0     		beq	.L41
 895              	.L39:
 896              	.LVL50:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    {
 897              		.loc 16 184 4 view .LVU163
 898              	.LBE5173:
 899              	.LBE5172:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 900              		.loc 16 286 7 view .LVU164
 901 000a 0020     		movs	r0, #0
 902              	.LVL51:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 903              		.loc 16 286 7 view .LVU165
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 70


 904 000c 7047     		bx	lr
 905              	.LVL52:
 906              	.L36:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 907              		.loc 16 87 37 is_stmt 1 view .LVU166
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 908              		.loc 16 275 43 is_stmt 0 view .LVU167
 909 000e 054B     		ldr	r3, .L42
 910 0010 0360     		str	r3, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 911              		.loc 16 286 7 view .LVU168
 912 0012 0020     		movs	r0, #0
 913              	.LVL53:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 914              		.loc 16 286 7 view .LVU169
 915 0014 7047     		bx	lr
 916              	.LVL54:
 917              	.L37:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 918              		.loc 16 87 37 is_stmt 1 view .LVU170
 919              	.LBB5182:
 920              	.LBI5182:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 921              		.loc 16 136 2 view .LVU171
 922              	.LBB5183:
 923              	.LBB5184:
 924              	.LBI5184:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return *static_cast<const _Tp*>(_M_access()); }
 925              		.loc 16 97 7 view .LVU172
 926              	.LBB5185:
 927              	.LBI5185:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 928              		.loc 16 88 17 view .LVU173
 929              	.LBB5186:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 930              		.loc 16 88 37 view .LVU174
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 931              		.loc 16 88 37 is_stmt 0 view .LVU175
 932              	.LBE5186:
 933              	.LBE5185:
 934              	.LBE5184:
 935              	.LBE5183:
 936              	.LBE5182:
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    break;
 937              		.loc 16 279 36 view .LVU176
 938 0016 0160     		str	r1, [r0]
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 939              		.loc 16 286 7 view .LVU177
 940 0018 0020     		movs	r0, #0
 941              	.LVL55:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 942              		.loc 16 286 7 view .LVU178
 943 001a 7047     		bx	lr
 944              	.LVL56:
 945              	.L41:
 946              	.LBB5187:
 947              	.LBB5179:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 71


 948              	.LBB5174:
 949              	.LBI5174:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 950              		.loc 16 150 2 is_stmt 1 view .LVU179
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 951              		.loc 16 150 2 is_stmt 0 view .LVU180
 952              	.LBE5174:
 953              	.LBE5179:
 954              	.LBE5187:
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 955              		.loc 16 88 37 is_stmt 1 view .LVU181
 956              	.LBB5188:
 957              	.LBB5180:
 958              	.LBB5177:
 959              	.LBB5175:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 960              		.loc 16 152 4 is_stmt 0 view .LVU182
 961 001c 0B68     		ldr	r3, [r1]
 962              	.LVL57:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 963              		.loc 16 152 4 view .LVU183
 964              	.LBE5175:
 965              	.LBE5177:
 966              	.LBE5180:
 967              	.LBE5188:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 968              		.loc 16 87 37 is_stmt 1 view .LVU184
 969              		.file 23 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 72


  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 73


  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 74


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 970              		.loc 23 175 3 view .LVU185
 971              	.LBB5189:
 972              	.LBB5181:
 973              	.LBB5178:
 974              	.LBB5176:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 975              		.loc 16 152 4 is_stmt 0 view .LVU186
 976 001e 0360     		str	r3, [r0]
 977              	.LVL58:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 978              		.loc 16 152 4 view .LVU187
 979              	.LBE5176:
 980              	.LBE5178:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 981              		.loc 16 197 8 view .LVU188
 982 0020 F3E7     		b	.L39
 983              	.L43:
 984 0022 00BF     		.align	2
 985              	.L42:
 986 0024 00000000 		.word	_ZTIPFvvE
 987              	.LBE5181:
 988              	.LBE5189:
 989              		.cfi_endproc
 990              	.LFE5759:
 992              		.section	.rodata._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0.str1.4,"aM
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 75


 993              		.align	2
 994              	.LC24:
 995 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
 995      6F742063 
 995      72656174 
 995      65207374 
 995      643A3A76 
 996              		.section	.text.startup._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0,"ax"
 997              		.align	1
 998              		.p2align 2,,3
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv5-d16
 1004              	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0:
 1005              	.LVL59:
 1006              	.LFB6247:
 1007              		.file 24 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 76


  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 77


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 78


 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 79


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 80


 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 81


 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 82


 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 83


 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 84


 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 85


 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 86


 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 1008              		.loc 24 625 7 is_stmt 1 view -0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              		.loc 24 625 7 is_stmt 0 view .LVU190
 1013 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1014              		.cfi_def_cfa_offset 20
 1015              		.cfi_offset 4, -20
 1016              		.cfi_offset 5, -16
 1017              		.cfi_offset 6, -12
 1018              		.cfi_offset 7, -8
 1019              		.cfi_offset 14, -4
 1020 0002 83B0     		sub	sp, sp, #12
 1021              		.cfi_def_cfa_offset 32
 1022              	.LBB5233:
 1023              	.LBB5234:
 1024              	.LBB5235:
 1025              	.LBB5236:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1026              		.loc 24 98 47 view .LVU191
 1027 0004 0023     		movs	r3, #0
 1028              	.LBE5236:
 1029              	.LBE5235:
 1030              	.LBE5234:
 1031              	.LBE5233:
 1032              		.loc 24 625 7 view .LVU192
 1033 0006 02AC     		add	r4, sp, #8
 1034 0008 04E90600 		stmdb	r4, {r1, r2}
 1035 000c 0446     		mov	r4, r0
 1036              	.LBB5247:
 1037              	.LBB5248:
 1038              	.LBB5249:
 1039              	.LBB5250:
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 87


 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 88


 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 89


 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 90


 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 91


 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 92


 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 93


 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 94


1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 95


1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 96


1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 97


1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 98


1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 99


1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 100


1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 101


1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 102


1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 103


1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 104


1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 105


1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 106


1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 1040              		.loc 24 1769 2 view .LVU193
 1041 000e 0F48     		ldr	r0, .L51
 1042              	.LVL60:
 1043              		.loc 24 1769 2 view .LVU194
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 107


 1044              	.LBE5250:
 1045              	.LBE5249:
 1046              	.LBE5248:
 1047              	.LBE5247:
 1048              	.LBB5306:
 1049              	.LBI5233:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 1050              		.loc 24 293 7 is_stmt 1 view .LVU195
 1051              	.LBB5244:
 1052              	.LBI5234:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 1053              		.loc 24 136 2 view .LVU196
 1054              	.LBB5239:
 1055              	.LBI5239:
 1056              		.loc 19 147 7 view .LVU197
 1057              	.LBB5240:
 1058              	.LBI5240:
 1059              		.loc 20 82 7 view .LVU198
 1060              		.loc 20 82 7 is_stmt 0 view .LVU199
 1061              	.LBE5240:
 1062              	.LBE5239:
 1063              	.LBB5241:
 1064              	.LBI5235:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1065              		.loc 24 97 2 is_stmt 1 view .LVU200
 1066              	.LBE5241:
 1067              	.LBE5244:
 1068              	.LBE5306:
 1069              	.LBB5307:
 1070              	.LBB5302:
 1071              	.LBB5259:
 1072              	.LBB5255:
 1073              		.loc 24 1769 2 is_stmt 0 view .LVU201
 1074 0010 B0EB820F 		cmp	r0, r2, lsl #2
 1075              	.LBE5255:
 1076              	.LBE5259:
 1077              	.LBE5302:
 1078              	.LBE5307:
 1079              	.LBB5308:
 1080              	.LBB5245:
 1081              	.LBB5242:
 1082              	.LBB5237:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1083              		.loc 24 98 47 view .LVU202
 1084 0014 A360     		str	r3, [r4, #8]
 1085              	.LVL61:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1086              		.loc 24 98 47 view .LVU203
 1087              	.LBE5237:
 1088              	.LBE5242:
 1089              	.LBE5245:
 1090              	.LBE5308:
 1091              	.LBB5309:
 1092              	.LBI5309:
 1093              		.file 25 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\initializ
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 108


   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 109


  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 1094              		.loc 25 75 7 is_stmt 1 view .LVU204
 1095              		.loc 25 75 7 is_stmt 0 view .LVU205
 1096              	.LBE5309:
 1097              	.LBB5310:
 1098              	.LBI5310:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 1099              		.loc 25 79 7 is_stmt 1 view .LVU206
 1100              	.LBB5311:
 1101              	.LBB5312:
 1102              	.LBI5312:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1103              		.loc 25 71 7 view .LVU207
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 1104              		.loc 25 71 7 is_stmt 0 view .LVU208
 1105              	.LBE5312:
 1106              	.LBE5311:
 1107              	.LBE5310:
 1108              	.LBB5313:
 1109              	.LBI5247:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 1110              		.loc 24 1577 2 is_stmt 1 view .LVU209
 1111              	.LBB5303:
 1112              	.LBB5260:
 1113              	.LBI5249:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1114              		.loc 24 1767 7 view .LVU210
 1115              	.LBB5256:
 1116              	.LBB5251:
 1117              	.LBI5251:
 1118              		.loc 19 147 7 view .LVU211
 1119              	.LBB5252:
 1120              	.LBI5252:
 1121              		.loc 20 82 7 view .LVU212
 1122              		.loc 20 82 7 is_stmt 0 view .LVU213
 1123              	.LBE5252:
 1124              	.LBE5251:
 1125              	.LBB5253:
 1126              	.LBI5253:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 110


 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 1127              		.loc 19 162 7 is_stmt 1 view .LVU214
 1128              	.LBB5254:
 1129              	.LBI5254:
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 1130              		.loc 20 89 7 view .LVU215
 1131              	.LBE5254:
 1132              	.LBE5253:
 1133              	.LBE5256:
 1134              	.LBE5260:
 1135              	.LBE5303:
 1136              	.LBE5313:
 1137              	.LBB5314:
 1138              	.LBB5246:
 1139              	.LBB5243:
 1140              	.LBB5238:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 1141              		.loc 24 98 47 is_stmt 0 view .LVU216
 1142 0016 C4E90033 		strd	r3, r3, [r4]
 1143              	.LBE5238:
 1144              	.LBE5243:
 1145              	.LBE5246:
 1146              	.LBE5314:
 1147              	.LBB5315:
 1148              	.LBB5304:
 1149              	.LBB5261:
 1150              	.LBB5257:
 1151              		.loc 24 1769 2 view .LVU217
 1152 001a 14D3     		bcc	.L50
 1153              	.LVL62:
 1154              		.loc 24 1769 2 view .LVU218
 1155              	.LBE5257:
 1156              	.LBE5261:
 1157              	.LBB5262:
 1158              	.LBI5262:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1159              		.loc 24 343 7 is_stmt 1 view .LVU219
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 111


 1160 001c 9600     		lsls	r6, r2, #2
 1161              	.LVL63:
 1162              	.LBB5263:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1163              		.loc 24 346 18 is_stmt 0 view .LVU220
 1164 001e 76B1     		cbz	r6, .L46
 1165              	.LBB5264:
 1166              	.LBB5265:
 1167              	.LBB5266:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1168              		.loc 20 115 41 view .LVU221
 1169 0020 3046     		mov	r0, r6
 1170 0022 0F46     		mov	r7, r1
 1171              	.LVL64:
 1172              		.loc 20 115 41 view .LVU222
 1173              	.LBE5266:
 1174              	.LBE5265:
 1175              	.LBI5264:
 1176              		.file 26 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\all
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 112


  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 113


  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 114


 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 115


 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 116


 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 117


 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 118


 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 119


 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 1177              		.loc 26 459 7 is_stmt 1 view .LVU223
 1178              	.LBB5268:
 1179              	.LBI5265:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1180              		.loc 20 103 7 view .LVU224
 1181              	.LBB5267:
 1182              		.loc 20 115 41 is_stmt 0 view .LVU225
 1183 0024 FFF7FEFF 		bl	_Znwj
 1184              	.LVL65:
 1185 0028 0546     		mov	r5, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 120


 1186              	.LVL66:
 1187              		.loc 20 115 41 view .LVU226
 1188              	.LBE5267:
 1189              	.LBE5268:
 1190              	.LBE5264:
 1191              	.LBE5263:
 1192              	.LBE5262:
 1193              	.LBB5269:
 1194              	.LBB5270:
 1195              	.LBB5271:
 1196              	.LBB5272:
 1197              	.LBB5273:
 1198              	.LBB5274:
 1199              	.LBB5275:
 1200              	.LBB5276:
 1201              	.LBB5277:
 1202              	.LBB5278:
 1203              	.LBB5279:
 1204              		.file 27 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 121


  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 122


  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 123


 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 124


 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 125


 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 126


 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 127


 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1205              		.loc 27 426 23 view .LVU227
 1206 002a 3946     		mov	r1, r7
 1207 002c 3246     		mov	r2, r6
 1208              	.LBE5279:
 1209              	.LBE5278:
 1210              	.LBE5277:
 1211              	.LBE5276:
 1212              	.LBE5275:
 1213              	.LBE5274:
 1214              	.LBE5273:
 1215              	.LBE5272:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 128


 1216              	.LBE5271:
 1217              	.LBE5270:
 1218              	.LBE5269:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 1219              		.loc 24 1583 61 view .LVU228
 1220 002e 3544     		add	r5, r5, r6
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1221              		.loc 24 1582 6 view .LVU229
 1222 0030 2060     		str	r0, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 1223              		.loc 24 1583 36 view .LVU230
 1224 0032 A560     		str	r5, [r4, #8]
 1225              	.LVL67:
 1226              	.LBB5299:
 1227              	.LBI5269:
 1228              		.file 28 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 129


  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 130


  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 131


 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 132


 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 133


 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 1229              		.loc 28 323 5 is_stmt 1 view .LVU231
 1230              	.LBB5297:
 1231              	.LBI5270:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 134


 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 1232              		.loc 28 125 5 view .LVU232
 1233              	.LBB5295:
 1234              	.LBB5293:
 1235              	.LBI5272:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 1236              		.loc 28 107 9 view .LVU233
 1237              	.LBB5291:
 1238              	.LBI5273:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 135


 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 136


 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 1239              		.loc 27 560 5 view .LVU234
 1240              	.LBB5289:
 1241              	.LBI5274:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1242              		.loc 27 511 5 view .LVU235
 1243              	.LBB5287:
 1244              	.LBI5275:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1245              		.loc 27 505 5 view .LVU236
 1246              	.LBB5285:
 1247              	.LBI5276:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1248              		.loc 27 463 5 view .LVU237
 1249              	.LBB5283:
 1250              	.LBB5281:
 1251              	.LBI5278:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1252              		.loc 27 415 2 view .LVU238
 1253              	.LBB5280:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1254              		.loc 27 426 23 is_stmt 0 view .LVU239
 1255 0034 FFF7FEFF 		bl	memcpy
 1256              	.LVL68:
 1257              	.L47:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1258              		.loc 27 426 23 view .LVU240
 1259              	.LBE5280:
 1260              	.LBE5281:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 137


 1261              	.LBE5283:
 1262              	.LBE5285:
 1263              	.LBE5287:
 1264              	.LBE5289:
 1265              	.LBE5291:
 1266              	.LBE5293:
 1267              	.LBE5295:
 1268              	.LBE5297:
 1269              	.LBE5299:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 1270              		.loc 24 1584 28 view .LVU241
 1271 0038 6560     		str	r5, [r4, #4]
 1272              	.LVL69:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 1273              		.loc 24 1584 28 view .LVU242
 1274              	.LBE5304:
 1275              	.LBE5315:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 1276              		.loc 24 631 7 view .LVU243
 1277 003a 03B0     		add	sp, sp, #12
 1278              		.cfi_remember_state
 1279              		.cfi_def_cfa_offset 20
 1280              		@ sp needed
 1281 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 1282              	.LVL70:
 1283              	.L46:
 1284              		.cfi_restore_state
 1285              	.LBB5316:
 1286              	.LBB5305:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 1287              		.loc 24 1583 61 view .LVU244
 1288 003e 3546     		mov	r5, r6
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 1289              		.loc 24 1582 6 view .LVU245
 1290 0040 2660     		str	r6, [r4]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 1291              		.loc 24 1583 36 view .LVU246
 1292 0042 A660     		str	r6, [r4, #8]
 1293              	.LVL71:
 1294              	.LBB5300:
 1295              		.loc 28 323 5 is_stmt 1 view .LVU247
 1296              	.LBB5298:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 1297              		.loc 28 125 5 view .LVU248
 1298              	.LBB5296:
 1299              	.LBB5294:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 1300              		.loc 28 107 9 view .LVU249
 1301              	.LBB5292:
 1302              		.loc 27 560 5 view .LVU250
 1303              	.LBB5290:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1304              		.loc 27 511 5 view .LVU251
 1305              	.LBB5288:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1306              		.loc 27 505 5 view .LVU252
 1307              	.LBB5286:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 138


 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1308              		.loc 27 463 5 view .LVU253
 1309              	.LBB5284:
 1310              	.LBB5282:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1311              		.loc 27 415 2 view .LVU254
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1312              		.loc 27 415 2 is_stmt 0 view .LVU255
 1313 0044 F8E7     		b	.L47
 1314              	.LVL72:
 1315              	.L50:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1316              		.loc 27 415 2 view .LVU256
 1317              	.LBE5282:
 1318              	.LBE5284:
 1319              	.LBE5286:
 1320              	.LBE5288:
 1321              	.LBE5290:
 1322              	.LBE5292:
 1323              	.LBE5294:
 1324              	.LBE5296:
 1325              	.LBE5298:
 1326              	.LBE5300:
 1327              	.LBB5301:
 1328              	.LBB5258:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 1329              		.loc 24 1770 24 view .LVU257
 1330 0046 0248     		ldr	r0, .L51+4
 1331 0048 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1332              	.LVL73:
 1333              	.L52:
 1334              		.loc 24 1770 24 view .LVU258
 1335              		.align	2
 1336              	.L51:
 1337 004c FCFFFF7F 		.word	2147483644
 1338 0050 00000000 		.word	.LC24
 1339              	.LBE5258:
 1340              	.LBE5301:
 1341              	.LBE5305:
 1342              	.LBE5316:
 1343              		.cfi_endproc
 1344              	.LFE6247:
 1346              		.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev,"axG",%p
 1347              		.align	1
 1348              		.p2align 2,,3
 1349              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
 1350              		.syntax unified
 1351              		.thumb
 1352              		.thumb_func
 1353              		.fpu fpv5-d16
 1355              	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:
 1356              	.LVL74:
 1357              	.LFB6203:
 1358              		.file 29 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\array"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <array> -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 139


   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** /** @file include/array
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  *  This is a Standard C++ Library header.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #ifndef _GLIBCXX_ARRAY
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #define _GLIBCXX_ARRAY 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** # include <bits/c++0x_warning.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <utility>
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/functexcept.h>
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/stl_algobase.h>
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** #include <bits/range_access.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** {
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct __array_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp _Type[_Nm];
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp&
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       static constexpr _Tp*
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _S_ptr(const _Type& __t) noexcept
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp*>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 140


  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     };
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****  template<typename _Tp>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    struct __array_traits<_Tp, 0>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    {
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      struct _Type { };
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_swappable;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      typedef true_type _Is_nothrow_swappable;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp&
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return *static_cast<_Tp*>(nullptr); }
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      static constexpr _Tp*
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      _S_ptr(const _Type&) noexcept
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****      { return nullptr; }
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    };
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @ingroup sequences
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  <a href="tables.html#67">sequence</a>.
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  Sets support random access iterators.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****    *  @tparam  Nm  Number of elements.
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****   template<typename _Tp, std::size_t _Nm>
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     struct array
 1359              		.loc 29 94 12 is_stmt 1 view -0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
 1363              		.loc 29 94 12 is_stmt 0 view .LVU260
 1364 0000 70B5     		push	{r4, r5, r6, lr}
 1365              		.cfi_def_cfa_offset 16
 1366              		.cfi_offset 4, -16
 1367              		.cfi_offset 5, -12
 1368              		.cfi_offset 6, -8
 1369              		.cfi_offset 14, -4
 1370              		.loc 29 94 12 view .LVU261
 1371 0002 0646     		mov	r6, r0
 1372              	.LBB5336:
 1373 0004 00F5B465 		add	r5, r0, #1440
 1374 0008 00F5B264 		add	r4, r0, #1424
 1375              	.LVL75:
 1376              	.L55:
 1377              	.LBB5337:
 1378              	.LBB5338:
 1379              	.LBB5339:
 1380              	.LBB5340:
 1381              	.LBB5341:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 141


 1382              	.LBB5342:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1383              		.loc 18 187 28 discriminator 5 view .LVU262
 1384 000c 54F8080C 		ldr	r0, [r4, #-8]
 1385              	.LBE5342:
 1386              	.LBE5341:
 1387              	.LBE5340:
 1388              	.LBE5339:
 1389              	.LBE5338:
 1390              	.LBE5337:
 1391              		.loc 29 94 12 discriminator 5 view .LVU263
 1392 0010 183D     		subs	r5, r5, #24
 1393              	.LVL76:
 1394              	.LBB5361:
 1395              	.LBI5337:
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 142


 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 143


 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 1396              		.loc 18 657 7 is_stmt 1 discriminator 5 view .LVU264
 1397              	.LBB5356:
 1398              	.LBI5338:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1399              		.loc 18 229 7 discriminator 5 view .LVU265
 1400              	.LBB5354:
 1401              	.LBB5344:
 1402              	.LBI5340:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1403              		.loc 18 221 7 discriminator 5 view .LVU266
 1404              	.LBB5343:
 1405              	.LBI5341:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1406              		.loc 18 186 7 discriminator 5 view .LVU267
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1407              		.loc 18 186 7 is_stmt 0 discriminator 5 view .LVU268
 1408              	.LBE5343:
 1409              	.LBE5344:
 1410              	.LBB5345:
 1411              	.LBI5345:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1412              		.loc 18 236 7 is_stmt 1 discriminator 5 view .LVU269
 1413              	.LBB5346:
 1414              	.LBB5347:
 1415              	.LBI5347:
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 144


 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 1416              		.loc 26 491 7 discriminator 5 view .LVU270
 1417              	.LBB5348:
 1418              	.LBI5348:
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 1419              		.loc 20 120 7 discriminator 5 view .LVU271
 1420              	.LBE5348:
 1421              	.LBE5347:
 1422              	.LBE5346:
 1423              	.LBE5345:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1424              		.loc 18 231 2 is_stmt 0 discriminator 5 view .LVU272
 1425 0012 A042     		cmp	r0, r4
 1426              	.LBE5354:
 1427              	.LBE5356:
 1428              	.LBE5361:
 1429              		.loc 29 94 12 discriminator 5 view .LVU273
 1430 0014 A4F11804 		sub	r4, r4, #24
 1431              	.LBB5362:
 1432              	.LBB5357:
 1433              	.LBB5355:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1434              		.loc 18 231 2 discriminator 5 view .LVU274
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 145


 1435 0018 03D0     		beq	.L54
 1436              	.LBB5353:
 1437              	.LBB5352:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1438              		.loc 18 237 34 view .LVU275
 1439 001a A968     		ldr	r1, [r5, #8]
 1440              	.LBB5351:
 1441              	.LBB5350:
 1442              	.LBB5349:
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 1443              		.loc 20 133 19 view .LVU276
 1444 001c 0131     		adds	r1, r1, #1
 1445              	.LVL77:
 1446              		.loc 20 133 19 view .LVU277
 1447 001e FFF7FEFF 		bl	_ZdlPvj
 1448              	.LVL78:
 1449              	.L54:
 1450              		.loc 20 133 19 view .LVU278
 1451              	.LBE5349:
 1452              	.LBE5350:
 1453              	.LBE5351:
 1454              	.LBE5352:
 1455              	.LBE5353:
 1456              	.LBE5355:
 1457              	.LBE5357:
 1458              	.LBB5358:
 1459              	.LBI5358:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1460              		.loc 18 150 14 is_stmt 1 view .LVU279
 1461              	.LBB5359:
 1462              	.LBI5359:
 1463              		.loc 19 162 7 view .LVU280
 1464              	.LBB5360:
 1465              	.LBI5360:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1466              		.loc 20 89 7 view .LVU281
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1467              		.loc 20 89 7 is_stmt 0 view .LVU282
 1468              	.LBE5360:
 1469              	.LBE5359:
 1470              	.LBE5358:
 1471              	.LBE5362:
 1472              		.loc 29 94 12 view .LVU283
 1473 0022 AE42     		cmp	r6, r5
 1474 0024 F2D1     		bne	.L55
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 146


 1475              	.LBE5336:
 1476              		.loc 29 94 12 discriminator 7 view .LVU284
 1477 0026 3046     		mov	r0, r6
 1478 0028 70BD     		pop	{r4, r5, r6, pc}
 1479              		.loc 29 94 12 discriminator 7 view .LVU285
 1480              		.cfi_endproc
 1481              	.LFE6203:
 1483              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 1484              		.thumb_set _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev,_ZNSt5arrayI
 1485 002a 00BF     		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 1486              		.align	1
 1487              		.p2align 2,,3
 1488              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1492              		.fpu fpv5-d16
 1494              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:
 1495              	.LVL79:
 1496              	.LFB5563:
  34:../../libdaisy/src/hid/disp/oled_display.h **** 
  35:../../libdaisy/src/hid/disp/oled_display.h ****     /**
  36:../../libdaisy/src/hid/disp/oled_display.h ****     Sets the pixel at the specified coordinate to be on/off.
  37:../../libdaisy/src/hid/disp/oled_display.h ****     \param x   x Coordinate
  38:../../libdaisy/src/hid/disp/oled_display.h ****     \param y   y coordinate
  39:../../libdaisy/src/hid/disp/oled_display.h ****     \param on  on or off
  40:../../libdaisy/src/hid/disp/oled_display.h ****     */
  41:../../libdaisy/src/hid/disp/oled_display.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override
  42:../../libdaisy/src/hid/disp/oled_display.h ****     {
  43:../../libdaisy/src/hid/disp/oled_display.h ****         driver_.DrawPixel(x, y, on);
  44:../../libdaisy/src/hid/disp/oled_display.h ****     }
  45:../../libdaisy/src/hid/disp/oled_display.h **** 
  46:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  47:../../libdaisy/src/hid/disp/oled_display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
  48:../../libdaisy/src/hid/disp/oled_display.h ****     how the object was initialized.
  49:../../libdaisy/src/hid/disp/oled_display.h ****     */
  50:../../libdaisy/src/hid/disp/oled_display.h ****     void Update() override { driver_.Update(); }
 1497              		.loc 4 50 10 is_stmt 1 view -0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 8
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              	.LBB5373:
 1502              	.LBI5373:
 254:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 255:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 256:../../libdaisy/src/dev/oled_ssd130x.h **** 
 257:../../libdaisy/src/dev/oled_ssd130x.h ****     /**
 258:../../libdaisy/src/dev/oled_ssd130x.h ****      * Update the display 
 259:../../libdaisy/src/dev/oled_ssd130x.h ****     */
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     void Update()
 1503              		.loc 15 260 10 view .LVU287
 1504              	.LBB5374:
 261:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 262:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t i;
 263:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t high_column_addr;
 264:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 265:../../libdaisy/src/dev/oled_ssd130x.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 147


 266:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32: high_column_addr = 0x12; break;
 267:../../libdaisy/src/dev/oled_ssd130x.h **** 
 268:../../libdaisy/src/dev/oled_ssd130x.h ****             default: high_column_addr = 0x10; break;
 269:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         for(i = 0; i < (height / 8); i++)
 1505              		.loc 15 270 22 view .LVU288
 1506              	.LBE5374:
 1507              	.LBE5373:
 1508              		.loc 4 50 10 is_stmt 0 view .LVU289
 1509 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1510              		.cfi_def_cfa_offset 24
 1511              		.cfi_offset 4, -24
 1512              		.cfi_offset 5, -20
 1513              		.cfi_offset 6, -16
 1514              		.cfi_offset 7, -12
 1515              		.cfi_offset 8, -8
 1516              		.cfi_offset 14, -4
 1517              	.LBB5396:
 1518              	.LBB5394:
 1519              	.LBB5375:
 1520              	.LBB5376:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1521              		.loc 15 112 30 view .LVU290
 1522 0004 B024     		movs	r4, #176
 1523              	.LBE5376:
 1524              	.LBE5375:
 1525              	.LBE5394:
 1526              	.LBE5396:
 1527              		.loc 4 50 10 view .LVU291
 1528 0006 82B0     		sub	sp, sp, #8
 1529              		.cfi_def_cfa_offset 32
 1530              	.LBB5397:
 1531              	.LBB5395:
 1532              	.LBB5381:
 1533              	.LBB5377:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1534              		.loc 15 111 24 view .LVU292
 1535 0008 00F10806 		add	r6, r0, #8
 1536 000c 00F11005 		add	r5, r0, #16
 1537 0010 00F11408 		add	r8, r0, #20
 1538              	.LVL80:
 1539              	.L59:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1540              		.loc 15 111 24 view .LVU293
 1541 0014 0027     		movs	r7, #0
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1542              		.loc 15 111 23 view .LVU294
 1543 0016 2846     		mov	r0, r5
 1544 0018 8DF80740 		strb	r4, [sp, #7]
 1545              	.LVL81:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1546              		.loc 15 111 23 view .LVU295
 1547              	.LBE5377:
 1548              	.LBI5375:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1549              		.loc 15 109 10 is_stmt 1 view .LVU296
 1550              	.LBB5378:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 148


 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1551              		.loc 15 111 9 view .LVU297
 1552              	.LBE5378:
 1553              	.LBE5381:
 1554              		.loc 15 270 22 is_stmt 0 view .LVU298
 1555 001c 0134     		adds	r4, r4, #1
 1556              	.LVL82:
 1557              	.LBB5382:
 1558              	.LBB5379:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1559              		.loc 15 111 23 view .LVU299
 1560 001e 3946     		mov	r1, r7
 1561 0020 FFF7FEFF 		bl	dsy_gpio_write
 1562              	.LVL83:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1563              		.loc 15 112 9 is_stmt 1 view .LVU300
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1564              		.loc 15 112 30 is_stmt 0 view .LVU301
 1565 0024 6423     		movs	r3, #100
 1566 0026 0122     		movs	r2, #1
 1567 0028 0DF10701 		add	r1, sp, #7
 1568 002c 3046     		mov	r0, r6
 1569              	.LBE5379:
 1570              	.LBE5382:
 1571              		.loc 15 270 22 view .LVU302
 1572 002e E4B2     		uxtb	r4, r4
 1573              	.LBB5383:
 1574              	.LBB5380:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1575              		.loc 15 112 30 view .LVU303
 1576 0030 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1577              	.LVL84:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1578              		.loc 15 112 30 view .LVU304
 1579              	.LBE5380:
 1580              	.LBE5383:
 1581              	.LBB5384:
 1582              	.LBB5385:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1583              		.loc 15 111 23 view .LVU305
 1584 0034 3946     		mov	r1, r7
 1585 0036 2846     		mov	r0, r5
 1586 0038 8DF80770 		strb	r7, [sp, #7]
 1587              	.LVL85:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1588              		.loc 15 111 23 view .LVU306
 1589              	.LBE5385:
 1590              	.LBI5384:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1591              		.loc 15 109 10 is_stmt 1 view .LVU307
 1592              	.LBB5386:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1593              		.loc 15 111 9 view .LVU308
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1594              		.loc 15 111 23 is_stmt 0 view .LVU309
 1595 003c FFF7FEFF 		bl	dsy_gpio_write
 1596              	.LVL86:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 149


 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1597              		.loc 15 112 9 is_stmt 1 view .LVU310
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1598              		.loc 15 112 30 is_stmt 0 view .LVU311
 1599 0040 0122     		movs	r2, #1
 1600 0042 6423     		movs	r3, #100
 1601 0044 0DF10701 		add	r1, sp, #7
 1602 0048 3046     		mov	r0, r6
 1603 004a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1604              	.LVL87:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1605              		.loc 15 112 30 view .LVU312
 1606 004e 1023     		movs	r3, #16
 1607              	.LBE5386:
 1608              	.LBE5384:
 1609              	.LBB5387:
 1610              	.LBB5388:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1611              		.loc 15 111 23 view .LVU313
 1612 0050 3946     		mov	r1, r7
 1613 0052 2846     		mov	r0, r5
 1614 0054 8DF80730 		strb	r3, [sp, #7]
 1615              	.LVL88:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1616              		.loc 15 111 23 view .LVU314
 1617              	.LBE5388:
 1618              	.LBI5387:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1619              		.loc 15 109 10 is_stmt 1 view .LVU315
 1620              	.LBB5389:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1621              		.loc 15 111 9 view .LVU316
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 1622              		.loc 15 111 23 is_stmt 0 view .LVU317
 1623 0058 FFF7FEFF 		bl	dsy_gpio_write
 1624              	.LVL89:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1625              		.loc 15 112 9 is_stmt 1 view .LVU318
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1626              		.loc 15 112 30 is_stmt 0 view .LVU319
 1627 005c 6423     		movs	r3, #100
 1628 005e 0122     		movs	r2, #1
 1629 0060 0DF10701 		add	r1, sp, #7
 1630 0064 3046     		mov	r0, r6
 1631 0066 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1632              	.LVL90:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1633              		.loc 15 112 30 view .LVU320
 1634              	.LBE5389:
 1635              	.LBE5387:
 1636              	.LBB5390:
 1637              	.LBI5390:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 1638              		.loc 15 115 10 is_stmt 1 view .LVU321
 1639              	.LBB5391:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1640              		.loc 15 117 9 view .LVU322
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 150


 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 1641              		.loc 15 117 23 is_stmt 0 view .LVU323
 1642 006a 0121     		movs	r1, #1
 1643 006c 2846     		mov	r0, r5
 1644 006e FFF7FEFF 		bl	dsy_gpio_write
 1645              	.LVL91:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1646              		.loc 15 118 9 is_stmt 1 view .LVU324
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1647              		.loc 15 118 30 is_stmt 0 view .LVU325
 1648 0072 8022     		movs	r2, #128
 1649 0074 4146     		mov	r1, r8
 1650 0076 6423     		movs	r3, #100
 1651 0078 3046     		mov	r0, r6
 1652              	.LBE5391:
 1653              	.LBE5390:
 1654              		.loc 15 270 22 view .LVU326
 1655 007a 9044     		add	r8, r8, r2
 1656              	.LVL92:
 1657              	.LBB5393:
 1658              	.LBB5392:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1659              		.loc 15 118 30 view .LVU327
 1660 007c FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 1661              	.LVL93:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 1662              		.loc 15 118 30 view .LVU328
 1663              	.LBE5392:
 1664              	.LBE5393:
 1665              		.loc 15 270 9 is_stmt 1 view .LVU329
 1666              		.loc 15 270 22 view .LVU330
 1667 0080 B82C     		cmp	r4, #184
 1668 0082 C7D1     		bne	.L59
 1669              	.LBE5395:
 1670              	.LBE5397:
 1671              		.loc 4 50 48 is_stmt 0 view .LVU331
 1672 0084 02B0     		add	sp, sp, #8
 1673              		.cfi_def_cfa_offset 24
 1674              		@ sp needed
 1675 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1676              		.loc 4 50 48 view .LVU332
 1677              		.cfi_endproc
 1678              	.LFE5563:
 1680 008a 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG"
 1681              		.align	1
 1682              		.p2align 2,,3
 1683              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv5-d16
 1689              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:
 1690              	.LVL94:
 1691              	.LFB5537:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1692              		.loc 24 678 7 is_stmt 1 view -0
 1693              		.cfi_startproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 151


 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1696              		.loc 24 678 7 is_stmt 0 view .LVU334
 1697 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1698              		.cfi_def_cfa_offset 24
 1699              		.cfi_offset 3, -24
 1700              		.cfi_offset 4, -20
 1701              		.cfi_offset 5, -16
 1702              		.cfi_offset 6, -12
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705              	.LBB5448:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1706              		.loc 24 680 15 view .LVU335
 1707 0002 D0E90056 		ldrd	r5, r6, [r0]
 1708              	.LBE5448:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1709              		.loc 24 678 7 view .LVU336
 1710 0006 0746     		mov	r7, r0
 1711              	.LVL95:
 1712              	.LBB5498:
 1713              	.LBB5449:
 1714              	.LBI5449:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1715              		.loc 24 276 7 is_stmt 1 view .LVU337
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1716              		.loc 24 276 7 is_stmt 0 view .LVU338
 1717              	.LBE5449:
 1718              	.LBB5450:
 1719              	.LBI5450:
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 152


 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 153


 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 154


 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 155


 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1720              		.loc 26 735 5 is_stmt 1 view .LVU339
 1721              	.LBB5451:
 1722              	.LBB5452:
 1723              	.LBB5453:
 1724              	.LBB5454:
 1725              		.file 30 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** //
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 156


   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /** @file bits/stl_construct.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <new>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_types.h> // for iterator_traits
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 157


  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #include <bits/stl_iterator_base_funcs.h> // for advance
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** /* This file provides the C++17 functions std::destroy_at, std::destroy, and
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * std::destroy_n, and the C++20 function std::construct_at.
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * It also provides std::_Construct, std::_Destroy,and std::_Destroy_n functions
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * which are defined in all standard modes and so can be used in C++98-14 code.
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * The _Destroy functions will dispatch to destroy_at during constant
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * evaluation, because calls to that function are intercepted by the compiler
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  * to allow use in constant expressions.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****  */
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** {
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201703L
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template <typename _Tp>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR inline void
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     destroy_at(_Tp* __location)
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       if constexpr (__cplusplus > 201703L && is_array_v<_Tp>)
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (auto& __x : *__location)
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	    std::destroy_at(std::__addressof(__x));
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	}
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       else
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__location->~_Tp();
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     constexpr auto
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     construct_at(_Tp* __location, _Args&&... __args)
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif // C++20
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif// C++17
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * object's constructor with an initializer.
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus >= 201103L
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp, typename... _Args>
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_Tp* __p, _Args&&... __args)
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1, typename _T2>
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 158


 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _T1>
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     inline void
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Construct_novalue(_T1* __p)
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _ForwardIterator>
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX20_CONSTEXPR void
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last);
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   /**
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    * Destroy the object pointed to by a pointer type.
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****    */
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _GLIBCXX14_CONSTEXPR inline void
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     _Destroy(_Tp* __pointer)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #if __cplusplus > 201703L
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       std::destroy_at(__pointer);
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #else
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       __pointer->~_Tp();
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** #endif
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     }
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****   template<bool>
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     struct _Destroy_aux
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****       template<typename _ForwardIterator>
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	static _GLIBCXX20_CONSTEXPR void
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	{
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h **** 	  for (; __first != __last; ++__first)
 1726              		.loc 30 151 19 view .LVU340
 1727 0008 B542     		cmp	r5, r6
 1728 000a 0FD0     		beq	.L63
 1729 000c 05F10804 		add	r4, r5, #8
 1730              	.LVL96:
 1731              	.L65:
 1732              	.LBB5455:
 1733              	.LBI5455:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 1734              		.loc 30 135 5 view .LVU341
 1735              	.LBB5456:
 1736              	.LBI5456:
 1737              		.loc 18 657 7 view .LVU342
 1738              	.LBB5457:
 1739              	.LBI5457:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1740              		.loc 18 229 7 view .LVU343
 1741              	.LBB5458:
 1742              	.LBB5459:
 1743              	.LBI5459:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1744              		.loc 18 221 7 view .LVU344
 1745              	.LBB5460:
 1746              	.LBI5460:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 159


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1747              		.loc 18 186 7 view .LVU345
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1748              		.loc 18 186 7 is_stmt 0 view .LVU346
 1749              	.LBE5460:
 1750              	.LBE5459:
 1751              	.LBB5463:
 1752              	.LBI5463:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1753              		.loc 18 236 7 is_stmt 1 view .LVU347
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1754              		.loc 18 236 7 is_stmt 0 view .LVU348
 1755              	.LBE5463:
 1756              	.LBB5471:
 1757              	.LBB5462:
 1758              	.LBB5461:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1759              		.loc 18 187 28 view .LVU349
 1760 0010 54F8080C 		ldr	r0, [r4, #-8]
 1761              	.LVL97:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1762              		.loc 18 187 28 view .LVU350
 1763              	.LBE5461:
 1764              	.LBE5462:
 1765              	.LBE5471:
 1766              	.LBB5472:
 1767              	.LBB5464:
 1768              	.LBB5465:
 1769              	.LBI5465:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1770              		.loc 26 491 7 is_stmt 1 view .LVU351
 1771              	.LBB5466:
 1772              	.LBI5466:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1773              		.loc 20 120 7 view .LVU352
 1774              	.LBE5466:
 1775              	.LBE5465:
 1776              	.LBE5464:
 1777              	.LBE5472:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1778              		.loc 18 231 2 is_stmt 0 view .LVU353
 1779 0014 8442     		cmp	r4, r0
 1780              	.LBE5458:
 1781              	.LBE5457:
 1782              	.LBE5456:
 1783              	.LBE5455:
 1784              		.loc 30 151 19 view .LVU354
 1785 0016 04F11804 		add	r4, r4, #24
 1786              	.LBB5480:
 1787              	.LBB5479:
 1788              	.LBB5475:
 1789              	.LBB5474:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1790              		.loc 18 231 2 view .LVU355
 1791 001a 03D0     		beq	.L64
 1792              	.LBB5473:
 1793              	.LBB5470:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 160


 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1794              		.loc 18 237 34 view .LVU356
 1795 001c A968     		ldr	r1, [r5, #8]
 1796              	.LBB5469:
 1797              	.LBB5468:
 1798              	.LBB5467:
 1799              		.loc 20 133 19 view .LVU357
 1800 001e 0131     		adds	r1, r1, #1
 1801              	.LVL98:
 1802              		.loc 20 133 19 view .LVU358
 1803 0020 FFF7FEFF 		bl	_ZdlPvj
 1804              	.LVL99:
 1805              	.L64:
 1806              		.loc 20 133 19 view .LVU359
 1807              	.LBE5467:
 1808              	.LBE5468:
 1809              	.LBE5469:
 1810              	.LBE5470:
 1811              	.LBE5473:
 1812              	.LBE5474:
 1813              	.LBE5475:
 1814              	.LBB5476:
 1815              	.LBI5476:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1816              		.loc 18 150 14 is_stmt 1 view .LVU360
 1817              	.LBB5477:
 1818              	.LBI5477:
 1819              		.loc 19 162 7 view .LVU361
 1820              	.LBB5478:
 1821              	.LBI5478:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1822              		.loc 20 89 7 view .LVU362
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1823              		.loc 20 89 7 is_stmt 0 view .LVU363
 1824              	.LBE5478:
 1825              	.LBE5477:
 1826              	.LBE5476:
 1827              	.LBE5479:
 1828              	.LBE5480:
 1829              		.loc 30 151 4 is_stmt 1 view .LVU364
 1830 0024 1835     		adds	r5, r5, #24
 1831              	.LVL100:
 1832              		.loc 30 151 19 view .LVU365
 1833 0026 AE42     		cmp	r6, r5
 1834 0028 F2D1     		bne	.L65
 1835              	.LBE5454:
 1836              	.LBE5453:
 1837              	.LBE5452:
 1838              	.LBE5451:
 1839              	.LBE5450:
 1840              	.LBB5481:
 1841              	.LBB5482:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1842              		.loc 24 335 15 is_stmt 0 view .LVU366
 1843 002a 3E68     		ldr	r6, [r7]
 1844              	.LVL101:
 1845              	.L63:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 161


 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1846              		.loc 24 335 15 view .LVU367
 1847              	.LBE5482:
 1848              	.LBI5481:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1849              		.loc 24 333 7 is_stmt 1 view .LVU368
 1850              	.LBB5497:
 1851              	.LBB5483:
 1852              	.LBI5483:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1853              		.loc 24 350 7 view .LVU369
 1854              	.LBB5484:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1855              		.loc 24 353 2 is_stmt 0 view .LVU370
 1856 002c 26B1     		cbz	r6, .L66
 1857              	.LVL102:
 1858              	.LBB5485:
 1859              	.LBI5485:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1860              		.loc 26 491 7 is_stmt 1 view .LVU371
 1861              	.LBB5486:
 1862              	.LBB5487:
 1863              	.LBI5487:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1864              		.loc 20 120 7 view .LVU372
 1865              	.LBE5487:
 1866              	.LBE5486:
 1867              	.LBE5485:
 1868              	.LBE5484:
 1869              	.LBE5483:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1870              		.loc 24 336 35 is_stmt 0 view .LVU373
 1871 002e B968     		ldr	r1, [r7, #8]
 1872              	.LBB5493:
 1873              	.LBB5492:
 1874              	.LBB5491:
 1875              	.LBB5490:
 1876              	.LBB5489:
 1877              	.LBB5488:
 1878              		.loc 20 133 19 view .LVU374
 1879 0030 3046     		mov	r0, r6
 1880 0032 891B     		subs	r1, r1, r6
 1881 0034 FFF7FEFF 		bl	_ZdlPvj
 1882              	.LVL103:
 1883              	.L66:
 1884              		.loc 20 133 19 view .LVU375
 1885              	.LBE5488:
 1886              	.LBE5489:
 1887              	.LBE5490:
 1888              	.LBE5491:
 1889              	.LBE5492:
 1890              	.LBE5493:
 1891              	.LBB5494:
 1892              	.LBI5494:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 1893              		.loc 24 128 14 is_stmt 1 view .LVU376
 1894              	.LBB5495:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 162


 1895              	.LBI5495:
 1896              		.loc 19 162 7 view .LVU377
 1897              	.LBB5496:
 1898              	.LBI5496:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1899              		.loc 20 89 7 view .LVU378
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1900              		.loc 20 89 7 is_stmt 0 view .LVU379
 1901              	.LBE5496:
 1902              	.LBE5495:
 1903              	.LBE5494:
 1904              	.LBE5497:
 1905              	.LBE5481:
 1906              	.LBE5498:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1907              		.loc 24 683 7 view .LVU380
 1908 0038 3846     		mov	r0, r7
 1909 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1910              		.loc 24 683 7 view .LVU381
 1911              		.cfi_endproc
 1912              	.LFE5537:
 1914              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 1915              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev,_ZNSt6vec
 1916              		.section	.text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev,"axG",%progbits,_ZNSt5arrayIN10jellyb
 1917              		.align	1
 1918              		.p2align 2,,3
 1919              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
 1920              		.syntax unified
 1921              		.thumb
 1922              		.thumb_func
 1923              		.fpu fpv5-d16
 1925              	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:
 1926              	.LVL104:
 1927              	.LFB6209:
 1928              		.loc 29 94 12 is_stmt 1 view -0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 0
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 1932              		.loc 29 94 12 is_stmt 0 view .LVU383
 1933 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1934              		.cfi_def_cfa_offset 32
 1935              		.cfi_offset 3, -32
 1936              		.cfi_offset 4, -28
 1937              		.cfi_offset 5, -24
 1938              		.cfi_offset 6, -20
 1939              		.cfi_offset 7, -16
 1940              		.cfi_offset 8, -12
 1941              		.cfi_offset 9, -8
 1942              		.cfi_offset 14, -4
 1943              		.loc 29 94 12 view .LVU384
 1944 0004 8146     		mov	r9, r0
 1945 0006 00F50876 		add	r6, r0, #544
 1946 000a A0F11008 		sub	r8, r0, #16
 1947              	.LVL105:
 1948              	.L79:
 1949              	.LBB5564:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 163


 1950              	.LBB5565:
 1951              	.LBI5565:
 1952              		.file 31 "menuitem.h"
   1:menuitem.h    **** /* 
   2:menuitem.h    ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:menuitem.h    ****  * You may use, distribute and modify this code under the
   4:menuitem.h    ****  * terms of the GNU AGPLv3 license.
   5:menuitem.h    ****  * 
   6:menuitem.h    ****  * You should have received a copy of the GNU AGPLv3 license with
   7:menuitem.h    ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:menuitem.h    ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:menuitem.h    ****  */
  10:menuitem.h    **** 
  11:menuitem.h    **** #pragma once
  12:menuitem.h    **** 
  13:menuitem.h    **** #include <functional>
  14:menuitem.h    **** #include <vector>
  15:menuitem.h    **** #include <string>
  16:menuitem.h    **** 
  17:menuitem.h    **** namespace jellybeans {
  18:menuitem.h    **** 
  19:menuitem.h    ****     // Menu item whos value is an element of a list of predefined strings
  20:menuitem.h    ****     // They are also used to store settings
  21:menuitem.h    ****     class MenuItem {
 1953              		.loc 31 21 11 is_stmt 1 discriminator 5 view .LVU385
 1954              	.LBB5566:
 1955              	.LBI5566:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 				     std::forward<_ArgTypes>(__args)...);
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     };
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   /**
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @brief Primary class template for std::function.
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  @ingroup functors
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    *  Polymorphic function wrapper.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****    */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     class function<_Res(_ArgTypes...)>
 1956              		.loc 16 303 11 discriminator 5 view .LVU386
 1957              	.LBB5567:
 1958              	.LBI5567:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 1959              		.loc 16 242 5 discriminator 5 view .LVU387
 1960              	.LBB5568:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1961              		.loc 16 244 7 discriminator 5 view .LVU388
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1962              		.loc 16 244 11 is_stmt 0 discriminator 5 view .LVU389
 1963 000e B368     		ldr	r3, [r6, #8]
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 1964              		.loc 16 244 7 discriminator 5 view .LVU390
 1965 0010 1BB1     		cbz	r3, .L73
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1966              		.loc 16 245 2 is_stmt 1 view .LVU391
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 164


 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1967              		.loc 16 245 12 is_stmt 0 view .LVU392
 1968 0012 0322     		movs	r2, #3
 1969 0014 3146     		mov	r1, r6
 1970 0016 3046     		mov	r0, r6
 1971 0018 9847     		blx	r3
 1972              	.LVL106:
 1973              	.L73:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 1974              		.loc 16 245 12 view .LVU393
 1975              	.LBE5568:
 1976              	.LBE5567:
 1977              	.LBE5566:
 1978              	.LBB5569:
 1979              	.LBI5569:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1980              		.loc 24 678 7 is_stmt 1 view .LVU394
 1981              	.LBB5570:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 1982              		.loc 24 680 15 is_stmt 0 view .LVU395
 1983 001a 56E90457 		ldrd	r5, r7, [r6, #-16]
 1984              	.LVL107:
 1985              	.LBB5571:
 1986              	.LBI5571:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1987              		.loc 24 276 7 is_stmt 1 view .LVU396
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1988              		.loc 24 276 7 is_stmt 0 view .LVU397
 1989              	.LBE5571:
 1990              	.LBB5572:
 1991              	.LBI5572:
 1992              		.loc 26 735 5 is_stmt 1 view .LVU398
 1993              	.LBB5573:
 1994              	.LBB5574:
 1995              	.LBB5575:
 1996              	.LBB5576:
 1997              		.loc 30 151 19 view .LVU399
 1998 001e BD42     		cmp	r5, r7
 1999              	.LBE5576:
 2000              	.LBE5575:
 2001              	.LBE5574:
 2002              	.LBE5573:
 2003              	.LBE5572:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 2004              		.loc 24 680 15 is_stmt 0 view .LVU400
 2005 0020 2846     		mov	r0, r5
 2006              	.LBB5607:
 2007              	.LBB5606:
 2008              	.LBB5605:
 2009              	.LBB5604:
 2010              	.LBB5603:
 2011              		.loc 30 151 19 view .LVU401
 2012 0022 10D0     		beq	.L74
 2013 0024 05F10804 		add	r4, r5, #8
 2014              	.LVL108:
 2015              	.L76:
 2016              	.LBB5577:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 165


 2017              	.LBI5577:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 2018              		.loc 30 135 5 is_stmt 1 view .LVU402
 2019              	.LBB5578:
 2020              	.LBI5578:
 2021              		.loc 18 657 7 view .LVU403
 2022              	.LBB5579:
 2023              	.LBI5579:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2024              		.loc 18 229 7 view .LVU404
 2025              	.LBB5580:
 2026              	.LBB5581:
 2027              	.LBI5581:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2028              		.loc 18 221 7 view .LVU405
 2029              	.LBB5582:
 2030              	.LBI5582:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2031              		.loc 18 186 7 view .LVU406
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2032              		.loc 18 186 7 is_stmt 0 view .LVU407
 2033              	.LBE5582:
 2034              	.LBE5581:
 2035              	.LBB5585:
 2036              	.LBI5585:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2037              		.loc 18 236 7 is_stmt 1 view .LVU408
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2038              		.loc 18 236 7 is_stmt 0 view .LVU409
 2039              	.LBE5585:
 2040              	.LBB5593:
 2041              	.LBB5584:
 2042              	.LBB5583:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2043              		.loc 18 187 28 view .LVU410
 2044 0028 54F8080C 		ldr	r0, [r4, #-8]
 2045              	.LVL109:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2046              		.loc 18 187 28 view .LVU411
 2047              	.LBE5583:
 2048              	.LBE5584:
 2049              	.LBE5593:
 2050              	.LBB5594:
 2051              	.LBB5586:
 2052              	.LBB5587:
 2053              	.LBI5587:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2054              		.loc 26 491 7 is_stmt 1 view .LVU412
 2055              	.LBB5588:
 2056              	.LBI5588:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2057              		.loc 20 120 7 view .LVU413
 2058              	.LBE5588:
 2059              	.LBE5587:
 2060              	.LBE5586:
 2061              	.LBE5594:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 166


 2062              		.loc 18 231 2 is_stmt 0 view .LVU414
 2063 002c 8442     		cmp	r4, r0
 2064              	.LBE5580:
 2065              	.LBE5579:
 2066              	.LBE5578:
 2067              	.LBE5577:
 2068              		.loc 30 151 19 view .LVU415
 2069 002e 04F11804 		add	r4, r4, #24
 2070              	.LBB5602:
 2071              	.LBB5601:
 2072              	.LBB5597:
 2073              	.LBB5596:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2074              		.loc 18 231 2 view .LVU416
 2075 0032 03D0     		beq	.L75
 2076              	.LBB5595:
 2077              	.LBB5592:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2078              		.loc 18 237 34 view .LVU417
 2079 0034 A968     		ldr	r1, [r5, #8]
 2080              	.LBB5591:
 2081              	.LBB5590:
 2082              	.LBB5589:
 2083              		.loc 20 133 19 view .LVU418
 2084 0036 0131     		adds	r1, r1, #1
 2085              	.LVL110:
 2086              		.loc 20 133 19 view .LVU419
 2087 0038 FFF7FEFF 		bl	_ZdlPvj
 2088              	.LVL111:
 2089              	.L75:
 2090              		.loc 20 133 19 view .LVU420
 2091              	.LBE5589:
 2092              	.LBE5590:
 2093              	.LBE5591:
 2094              	.LBE5592:
 2095              	.LBE5595:
 2096              	.LBE5596:
 2097              	.LBE5597:
 2098              	.LBB5598:
 2099              	.LBI5598:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2100              		.loc 18 150 14 is_stmt 1 view .LVU421
 2101              	.LBB5599:
 2102              	.LBI5599:
 2103              		.loc 19 162 7 view .LVU422
 2104              	.LBB5600:
 2105              	.LBI5600:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2106              		.loc 20 89 7 view .LVU423
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2107              		.loc 20 89 7 is_stmt 0 view .LVU424
 2108              	.LBE5600:
 2109              	.LBE5599:
 2110              	.LBE5598:
 2111              	.LBE5601:
 2112              	.LBE5602:
 2113              		.loc 30 151 4 is_stmt 1 view .LVU425
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 167


 2114 003c 1835     		adds	r5, r5, #24
 2115              	.LVL112:
 2116              		.loc 30 151 19 view .LVU426
 2117 003e AF42     		cmp	r7, r5
 2118 0040 F2D1     		bne	.L76
 2119 0042 56F8100C 		ldr	r0, [r6, #-16]
 2120              	.L74:
 2121              	.LVL113:
 2122              		.loc 30 151 19 is_stmt 0 view .LVU427
 2123              	.LBE5603:
 2124              	.LBE5604:
 2125              	.LBE5605:
 2126              	.LBE5606:
 2127              	.LBE5607:
 2128              	.LBB5608:
 2129              	.LBI5608:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2130              		.loc 24 333 7 is_stmt 1 view .LVU428
 2131              	.LBB5609:
 2132              	.LBB5610:
 2133              	.LBI5610:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2134              		.loc 24 350 7 view .LVU429
 2135              	.LBB5611:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2136              		.loc 24 353 2 is_stmt 0 view .LVU430
 2137 0046 20B1     		cbz	r0, .L77
 2138              	.LVL114:
 2139              	.LBB5612:
 2140              	.LBI5612:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2141              		.loc 26 491 7 is_stmt 1 view .LVU431
 2142              	.LBB5613:
 2143              	.LBB5614:
 2144              	.LBI5614:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2145              		.loc 20 120 7 view .LVU432
 2146              	.LBE5614:
 2147              	.LBE5613:
 2148              	.LBE5612:
 2149              	.LBE5611:
 2150              	.LBE5610:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2151              		.loc 24 336 35 is_stmt 0 view .LVU433
 2152 0048 56F8081C 		ldr	r1, [r6, #-8]
 2153              	.LBB5620:
 2154              	.LBB5619:
 2155              	.LBB5618:
 2156              	.LBB5617:
 2157              	.LBB5616:
 2158              	.LBB5615:
 2159              		.loc 20 133 19 view .LVU434
 2160 004c 091A     		subs	r1, r1, r0
 2161 004e FFF7FEFF 		bl	_ZdlPvj
 2162              	.LVL115:
 2163              	.L77:
 2164              		.loc 20 133 19 view .LVU435
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 168


 2165              	.LBE5615:
 2166              	.LBE5616:
 2167              	.LBE5617:
 2168              	.LBE5618:
 2169              	.LBE5619:
 2170              	.LBE5620:
 2171              	.LBB5621:
 2172              	.LBI5621:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2173              		.loc 24 128 14 is_stmt 1 view .LVU436
 2174              	.LBB5622:
 2175              	.LBI5622:
 2176              		.loc 19 162 7 view .LVU437
 2177              	.LBB5623:
 2178              	.LBI5623:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2179              		.loc 20 89 7 view .LVU438
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2180              		.loc 20 89 7 is_stmt 0 view .LVU439
 2181              	.LBE5623:
 2182              	.LBE5622:
 2183              	.LBE5621:
 2184              	.LBE5609:
 2185              	.LBE5608:
 2186              	.LBE5570:
 2187              	.LBE5569:
 2188              	.LBB5624:
 2189              	.LBI5624:
 2190              		.loc 18 657 7 is_stmt 1 view .LVU440
 2191              	.LBB5625:
 2192              	.LBI5625:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2193              		.loc 18 229 7 view .LVU441
 2194              	.LBB5626:
 2195              	.LBB5627:
 2196              	.LBI5627:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2197              		.loc 18 221 7 view .LVU442
 2198              	.LBB5628:
 2199              	.LBI5628:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2200              		.loc 18 186 7 view .LVU443
 2201              	.LBB5629:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2202              		.loc 18 187 28 is_stmt 0 view .LVU444
 2203 0052 56F8280C 		ldr	r0, [r6, #-40]
 2204              	.LVL116:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2205              		.loc 18 187 28 view .LVU445
 2206              	.LBE5629:
 2207              	.LBE5628:
 2208              	.LBE5627:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2209              		.loc 18 231 2 view .LVU446
 2210 0056 A6F12003 		sub	r3, r6, #32
 2211 005a 9842     		cmp	r0, r3
 2212 005c 04D0     		beq	.L78
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 169


 2213              	.LVL117:
 2214              	.LBB5630:
 2215              	.LBI5630:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2216              		.loc 18 236 7 is_stmt 1 view .LVU447
 2217              	.LBB5631:
 2218              	.LBB5632:
 2219              	.LBI5632:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2220              		.loc 26 491 7 view .LVU448
 2221              	.LBB5633:
 2222              	.LBI5633:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2223              		.loc 20 120 7 view .LVU449
 2224              	.LBE5633:
 2225              	.LBE5632:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2226              		.loc 18 237 34 is_stmt 0 view .LVU450
 2227 005e 56F8201C 		ldr	r1, [r6, #-32]
 2228              	.LBB5636:
 2229              	.LBB5635:
 2230              	.LBB5634:
 2231              		.loc 20 133 19 view .LVU451
 2232 0062 0131     		adds	r1, r1, #1
 2233              	.LVL118:
 2234              		.loc 20 133 19 view .LVU452
 2235 0064 FFF7FEFF 		bl	_ZdlPvj
 2236              	.LVL119:
 2237              	.L78:
 2238              		.loc 20 133 19 view .LVU453
 2239              	.LBE5634:
 2240              	.LBE5635:
 2241              	.LBE5636:
 2242              	.LBE5631:
 2243              	.LBE5630:
 2244              	.LBE5626:
 2245              	.LBE5625:
 2246              	.LBB5637:
 2247              	.LBI5637:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2248              		.loc 18 150 14 is_stmt 1 view .LVU454
 2249              	.LBB5638:
 2250              	.LBI5638:
 2251              		.loc 19 162 7 view .LVU455
 2252              	.LBB5639:
 2253              	.LBI5639:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2254              		.loc 20 89 7 view .LVU456
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2255              		.loc 20 89 7 is_stmt 0 view .LVU457
 2256              	.LBE5639:
 2257              	.LBE5638:
 2258              	.LBE5637:
 2259              	.LBE5624:
 2260              	.LBE5565:
 2261              		.loc 29 94 12 view .LVU458
 2262 0068 383E     		subs	r6, r6, #56
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 170


 2263 006a 4645     		cmp	r6, r8
 2264 006c CFD1     		bne	.L79
 2265              	.LBE5564:
 2266              		.loc 29 94 12 discriminator 7 view .LVU459
 2267 006e 4846     		mov	r0, r9
 2268 0070 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2269              		.loc 29 94 12 discriminator 7 view .LVU460
 2270              		.cfi_endproc
 2271              	.LFE6209:
 2273              		.weak	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 2274              		.thumb_set _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev,_ZNSt5arrayIN10jellybeans8MenuItemELj10EE
 2275              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 2276              		.align	1
 2277              		.p2align 2,,3
 2278              		.syntax unified
 2279              		.thumb
 2280              		.thumb_func
 2281              		.fpu fpv5-d16
 2283              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 2284              	.LVL120:
 2285              	.LFB6232:
 2286              		.file 32 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1996,1997
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 171


  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Copyright (c) 1994
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Hewlett-Packard Company
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** /** @file bits/stl_tree.h
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****  */
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #ifndef _STL_TREE_H
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #define _STL_TREE_H 1
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #pragma GCC system_header
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_algobase.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/allocator.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/stl_function.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #include <ext/alloc_traits.h>
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <ext/aligned_buffer.h>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # include <bits/node_handle.h>
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** {
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201103L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // 1990), except that
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // linear time performance when used with the generic set algorithms
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 172


  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (set_union, etc.)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   //
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_node_base
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_color	_M_color;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_parent;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_left;
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Base_ptr		_M_right;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Base_ptr
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     static _Const_Base_ptr
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return __x;
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type offering value initialization guarantee on the compare functor.
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key_compare>
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_key_compare
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Key_compare		_M_key_compare;
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	is_nothrow_default_constructible<_Key_compare>::value)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 173


 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Key_compare& __comp)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Copy constructor added for consistency with C++98 mode.
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	noexcept(is_nothrow_copy_constructible<_Key_compare>::value)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__x._M_key_compare)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   // Helper type to manage default initialization of node count and header.
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   struct _Rb_tree_header
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   {
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_node_base	_M_header;
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     size_t		_M_node_count; // Keeps track of size of tree.
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header() _GLIBCXX_NOEXCEPT
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = _S_red;
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree_header(_Rb_tree_header&& __x) noexcept
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_header._M_parent != nullptr)
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x);
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_header._M_color = _S_red;
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_reset();
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree_header& __from)
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_color = __from._M_header._M_color;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = __from._M_header._M_parent;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = __from._M_header._M_left;
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = __from._M_header._M_right;
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent->_M_parent = &_M_header;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = __from._M_node_count;
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __from._M_reset();
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_reset()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 174


 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_parent = 0;
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Val>
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val _M_value_field;
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return std::__addressof(_M_value_field); }
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Val*
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr()
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Val*
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_valptr() const
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_iterator
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp  value_type;
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp& reference;
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp* pointer;
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 175


 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>		_Self;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Tp>*		_Link_type;
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 176


 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   };
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_const_iterator
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Tp	 value_type;
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp& reference;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Tp* pointer;
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>		_Self;
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*			_Link_type;
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node() { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       explicit
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reference
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pointer
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 177


 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self&
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Self
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Self __tmp = *this;
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node == __y._M_node; }
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if ! __cpp_lib_three_way_comparison
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __x._M_node != __y._M_node; }
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr _M_node;
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   void
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __x,
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base* __p,
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				_Rb_tree_node_base& __header) throw ();
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_node_base*
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { };
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { typedef void type; };
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     using __has_is_transparent_t
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       = typename __has_is_transparent<_Cmp, _SfinaeType>::type;
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Tree1, typename _Cmp2>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 178


 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     struct _Rb_tree_merge_helper { };
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc = allocator<_Val> >
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     class _Rb_tree
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // is empty.
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Reuse_or_alloc_node
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_root)
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_root->_M_parent = 0;
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_left)
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_nodes = 0;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	~_Reuse_or_alloc_node()
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg)
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg)
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__node)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_destroy_node(__node);
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 179


 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return __node;
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_extract()
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (!_M_nodes)
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_nodes;
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_nodes)
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_nodes->_M_right = 0;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  if (_M_nodes->_M_left)
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    {
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      while (_M_nodes->_M_right)
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      if (_M_nodes->_M_left)
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		    }
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else // __node is on the left.
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_M_nodes->_M_left = 0;
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root = 0;
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __node;
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_root;
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Base_ptr _M_nodes;
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // recycle.
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       struct _Alloc_node
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	template<typename _Arg>
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(const _Arg& __arg) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 180


 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  operator()(_Arg&& __arg) const
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       private:
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree& _M_t;
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       };
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Key 				key_type;
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Val 				value_type;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type* 			pointer;
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type* 		const_pointer;
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef value_type& 			reference;
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef const value_type& 		const_reference;
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef size_t 				size_type;
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Alloc 				allocator_type;
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Node_allocator&
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const _Node_allocator&
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl; }
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       allocator_type
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_node()
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_put_node(__node);
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_create_node(const value_type& __x)
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 181


 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(__tmp, __x);
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __tmp;
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __try
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       __node->_M_valptr(),
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				       std::forward<_Args>(__args)...);
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __catch(...)
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _M_put_node(__node);
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __throw_exception_again;
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_create_node(_Args&&... __args)
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	get_allocator().destroy(__p->_M_valptr());
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_destroy_node(__p);
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_put_node(__p);
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 182


 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_left = 0;
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __tmp->_M_right = 0;
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __tmp;
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if _GLIBCXX_INLINE_VERSION
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare>
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Key_compare,
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	struct _Rb_tree_impl
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_key_compare<_Key_compare>
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	, public _Rb_tree_header
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl()
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _GLIBCXX_NOEXCEPT_IF(
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		is_nothrow_default_constructible<_Node_allocator>::value
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		&& is_nothrow_default_constructible<_Base_key_compare>::value )
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator()
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Rb_tree_impl& __x)
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  , _Base_key_compare(__x._M_key_compare)
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(__a), _Base_key_compare(__comp)
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  explicit
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Node_allocator&& __a)
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a))
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)),
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Base_key_compare(std::move(__x)),
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _Rb_tree_header(std::move(__x))
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  { }
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	};
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 183


 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     protected:
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return static_cast<_Const_Link_type>
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Link_type __x)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// If we're asking for the key we're presumably using the comparison
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// object, and so this is a good place to sanity check it.
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "comparison object must be invocable "
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      "with two arguments of key type");
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # if __cplusplus >= 201703L
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 184


 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// 2542. Missing const requirements for associative containers
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  static_assert(
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      "comparison object must be invocable as const");
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** # endif // C++17
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++11
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _KeyOfValue()(*__x->_M_valptr());
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Link_type
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Link_type
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static const _Key&
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _S_key(static_cast<_Const_Link_type>(__x)); }
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Base_ptr
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       static _Const_Base_ptr
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       using insert_return_type = _Node_insert_return<
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 185


 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type>;
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    const key_type& __k);
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				   const key_type& __k);
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_lower(_Arg&& __x);
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // 233. Insertion hints in associative containers.
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 186


 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_leftmost() = _S_minimum(__root);
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_rightmost() = _S_maximum(__root);
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __root;
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(const _Rb_tree& __x)
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_copy(__x, __an);
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase(_Link_type __x);
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k);
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		     const _Key& __k) const;
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // allocation/deallocation
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus < 201103L
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() { }
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree() = default;
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != 0)
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 187


 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(_Node_allocator(__a))
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x);
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&&) = default;
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(is_nothrow_default_constructible<_Compare>::value)
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(std::move(__x._M_impl), std::move(__a))
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__x._M_root() != nullptr)
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_move_data(__x, false_type{});
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept( noexcept(
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 std::declval<typename _Alloc_traits::is_always_equal>())) )
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _Rb_tree(std::move(__x), std::move(__a),
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 typename _Alloc_traits::is_always_equal{})
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { }
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(const _Rb_tree& __x);
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Accessors.
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Compare
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       key_comp() const
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_key_compare; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 188


1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(end()); }
1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(end()); }
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       reverse_iterator
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return reverse_iterator(begin()); }
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_reverse_iterator
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return const_reverse_iterator(begin()); }
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NODISCARD bool
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count == 0; }
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       swap(_Rb_tree& __t)
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Insert/erase.
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique(_Arg&& __x);
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal(_Arg&& __x);
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 189


1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Arg>
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, bool>
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename... _Args>
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iter>
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using __same_value_type
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_unique(*__first);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 190


1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_emplace_equal(*__first);
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, bool>
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique(const value_type& __x);
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal(const value_type& __x);
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  _NodeGen&);
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _NodeGen>
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			 _NodeGen&);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Alloc_node __an(*this);
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 191


1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _InputIterator>
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (; __first != __last; ++__first)
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __position);
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator __result = __position;
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result._M_const_cast();
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // LWG 2059.
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __result = __position;
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++__result;
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __result;
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __position)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __position)
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__glibcxx_assert(__position != end());
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__position);
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 192


1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const key_type& __x);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase_aux(__first, __last);
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __last._M_const_cast();
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(iterator __first, iterator __last)
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase_aux(__first, __last); }
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_erase(_M_begin());
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Set operations.
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k);
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       find(const key_type& __k) const;
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       size_type
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       count(const key_type& __k) const;
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k)
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       lower_bound(const key_type& __k) const
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k)
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       const_iterator
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       upper_bound(const key_type& __k) const
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 193


1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<iterator, iterator>
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k);
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<const_iterator, const_iterator>
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       equal_range(const key_type& __k) const;
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201402L
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __j = end();
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __j;
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	size_type
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 194


1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	const_iterator
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __x = _M_begin();
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __y = _M_end();
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__x != 0)
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y = __x;
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __x = _S_right(__x);
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return const_iterator(__y);
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<iterator, iterator>
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Kt,
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	pair<const_iterator, const_iterator>
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __high = __low;
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    ++__high;
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return { __low, __high };
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 195


1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Debugging.
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       __rb_verify() const;
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree&
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator=(_Rb_tree&&)
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Iterator>
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     private:
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with equal allocator.
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree& __x, true_type)
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_impl._M_move_data(__x._M_impl); }
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_data(_Rb_tree&, false_type);
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with equal allocator.
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, true_type);
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // which might result in a copy not a move.
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(_Rb_tree&, false_type);
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus > 201402L
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     public:
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       insert_return_type
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_unique(node_type&& __nh)
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	insert_return_type __ret;
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret.position = end();
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 196


1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = true;
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.node = std::move(__nh);
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.position = iterator(__res.first);
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret.inserted = false;
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_equal(node_type&& __nh)
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__nh._M_ptr = nullptr;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = iterator(__res.first);
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Re-insert an extracted node.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 197


1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	iterator __ret;
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__nh.empty())
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __ret = end();
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__res.second)
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    else
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __nh._M_ptr = nullptr;
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __ret;
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const_iterator __pos)
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __ptr = _Rb_tree_rebalance_for_erase(
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __pos._M_const_cast()._M_node, _M_impl._M_header);
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	--_M_impl._M_node_count;
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Extract a node.
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       node_type
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       extract(const key_type& __k)
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	node_type __nh;
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	auto __pos = find(__k);
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (__pos != end())
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __nh = extract(const_iterator(__pos));
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __nh;
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	using _Compatible_tree
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename, typename>
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	friend class _Rb_tree_merge_helper;
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with unique keys.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 198


1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       /// Merge from a compatible container into one with equivalent keys.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       template<typename _Compare2>
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	void
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __pos = __i++;
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (__res.second)
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  --__src_impl._M_node_count;
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif // C++17
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator==(const _Rb_tree& __x, const _Rb_tree& __y)
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __x.size() == __y.size()
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  && std::equal(__x.begin(), __x.end(), __y.begin());
1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cpp_lib_three_way_comparison
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend auto
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=>(const _Rb_tree& __x, const _Rb_tree& __y)
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if constexpr (requires { typename __detail::__synth3way_t<_Val>; })
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return std::lexicographical_compare_three_way(__x.begin(), __x.end(),
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__y.begin(), __y.end(),
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							__detail::__synth3way);
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<(const _Rb_tree& __x, const _Rb_tree& __y)
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return std::lexicographical_compare(__x.begin(), __x.end(),
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					    __y.begin(), __y.end());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 199


1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator!=(const _Rb_tree& __x, const _Rb_tree& __y)
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x == __y); }
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>(const _Rb_tree& __x, const _Rb_tree& __y)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return __y < __x; }
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator<=(const _Rb_tree& __x, const _Rb_tree& __y)
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__y < __x); }
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       operator>=(const _Rb_tree& __x, const _Rb_tree& __y)
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return !(__x < __y); }
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     };
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     { __x.swap(__y); }
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_data(_Rb_tree& __x, false_type)
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__an](const value_type& __cval)
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline void
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       clear();
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 200


1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_move_data(__x, true_type());
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   __x._M_get_Node_allocator());
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // structure.
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_reset();
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__x._M_root() != nullptr)
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  auto __lbd =
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    [&__roan](const value_type& __cval)
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return __roan(std::move(__val));
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    };
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x.clear();
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(_Rb_tree&& __x)
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 201


1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Iterator>
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       void
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_M_impl._M_reset();
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	for (; __first != __last; ++__first)
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     operator=(const _Rb_tree& __x)
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (this != &__x)
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // Note that _Key may be a constant type.
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  && __this_alloc != __that_alloc)
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		{
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  // to erase nodes first.
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  clear();
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		}
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_reset();
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__x._M_root() != 0)
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_root() = _M_copy(__x, __roan);
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return *this;
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 202


1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _Arg&& __v,
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 const _Val& __v,
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		 _NodeGen& __node_gen)
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	++_M_impl._M_node_count;
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __insert_left = (__p == _M_end()
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						       _KeyOfValue()(__v)));
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    this->_M_impl._M_header);
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       ++_M_impl._M_node_count;
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__z);
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 203


1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__top->_M_parent = __p;
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__try
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    if (__x->_M_right)
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __p = __top;
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_left(__x);
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    while (__x != 0)
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      {
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p->_M_left = __y;
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__y->_M_parent = __p;
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		if (__x->_M_right)
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__p = __y;
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		__x = _S_left(__x);
1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      }
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__catch(...)
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  {
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_erase(__top);
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __throw_exception_again;
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  }
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return __top;
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 2287              		.loc 32 1913 5 is_stmt 1 view -0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 204


 2290              		@ frame_needed = 0, uses_anonymous_args = 0
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // Erase without rebalancing.
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 2291              		.loc 32 1917 18 view .LVU462
 2292 0000 E8B1     		cbz	r0, .L102
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
 2293              		.loc 32 1913 5 is_stmt 0 view .LVU463
 2294 0002 38B5     		push	{r3, r4, r5, lr}
 2295              		.cfi_def_cfa_offset 16
 2296              		.cfi_offset 3, -16
 2297              		.cfi_offset 4, -12
 2298              		.cfi_offset 5, -8
 2299              		.cfi_offset 14, -4
 2300 0004 0446     		mov	r4, r0
 2301              	.LVL121:
 2302              	.L93:
 2303              	.LBB5695:
 2304              	.LBB5696:
 2305              	.LBI5696:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2306              		.loc 32 797 7 is_stmt 1 view .LVU464
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2307              		.loc 32 797 7 is_stmt 0 view .LVU465
 2308 0006 2546     		mov	r5, r4
 2309              	.LBE5696:
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_erase(_S_right(__x));
 2310              		.loc 32 1919 12 view .LVU466
 2311 0008 E068     		ldr	r0, [r4, #12]
 2312 000a FFF7F9FF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2313              	.LVL122:
 2314              	.LBB5697:
 2315              	.LBI5697:
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 2316              		.loc 32 789 7 is_stmt 1 view .LVU467
 2317              	.LBB5698:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2318              		.loc 32 790 52 is_stmt 0 view .LVU468
 2319 000e A468     		ldr	r4, [r4, #8]
 2320              	.LVL123:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2321              		.loc 32 790 52 view .LVU469
 2322              	.LBE5698:
 2323              	.LBE5697:
 2324              	.LBB5699:
 2325              	.LBI5699:
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2326              		.loc 32 652 7 is_stmt 1 view .LVU470
 2327              	.LBB5700:
 2328              	.LBI5700:
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2329              		.loc 32 641 7 view .LVU471
 2330              	.LBB5701:
 2331              	.LBI5701:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 205


 2332              		.loc 26 527 2 view .LVU472
 2333              	.LBB5702:
 2334              	.LBI5702:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 2335              		.loc 20 154 2 view .LVU473
 2336              	.LBB5703:
 2337              	.LBI5703:
 2338              		.file 33 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 206


  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 207


  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 208


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 209


 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 2339              		.loc 33 211 12 view .LVU474
 2340              	.LBB5704:
 2341              	.LBI5704:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2342              		.loc 24 678 7 view .LVU475
 2343              	.LBB5705:
 2344              	.LBI5705:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2345              		.loc 24 276 7 view .LVU476
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2346              		.loc 24 276 7 is_stmt 0 view .LVU477
 2347              	.LBE5705:
 2348              	.LBB5706:
 2349              	.LBI5706:
 2350              		.loc 26 735 5 is_stmt 1 view .LVU478
 2351              		.loc 26 735 5 is_stmt 0 view .LVU479
 2352              	.LBE5706:
 2353              	.LBB5707:
 2354              	.LBI5707:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2355              		.loc 24 333 7 is_stmt 1 view .LVU480
 2356              	.LBB5708:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2357              		.loc 24 335 15 is_stmt 0 view .LVU481
 2358 0010 AB6A     		ldr	r3, [r5, #40]
 2359              	.LVL124:
 2360              	.LBB5709:
 2361              	.LBI5709:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2362              		.loc 24 350 7 is_stmt 1 view .LVU482
 2363              	.LBB5710:
 2364              	.LBB5711:
 2365              	.LBI5711:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2366              		.loc 26 491 7 view .LVU483
 2367              	.LBB5712:
 2368              	.LBB5713:
 2369              	.LBI5713:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2370              		.loc 20 120 7 view .LVU484
 2371              	.LBB5714:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2372              		.loc 20 133 19 is_stmt 0 view .LVU485
 2373 0012 1846     		mov	r0, r3
 2374              	.LBE5714:
 2375              	.LBE5713:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 210


 2376              	.LBE5712:
 2377              	.LBE5711:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2378              		.loc 24 353 2 view .LVU486
 2379 0014 1BB1     		cbz	r3, .L91
 2380              	.LBE5710:
 2381              	.LBE5709:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2382              		.loc 24 336 35 view .LVU487
 2383 0016 296B     		ldr	r1, [r5, #48]
 2384              	.LBB5720:
 2385              	.LBB5719:
 2386              	.LBB5718:
 2387              	.LBB5717:
 2388              	.LBB5716:
 2389              	.LBB5715:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2390              		.loc 20 133 19 view .LVU488
 2391 0018 C91A     		subs	r1, r1, r3
 2392 001a FFF7FEFF 		bl	_ZdlPvj
 2393              	.LVL125:
 2394              	.L91:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2395              		.loc 20 133 19 view .LVU489
 2396              	.LBE5715:
 2397              	.LBE5716:
 2398              	.LBE5717:
 2399              	.LBE5718:
 2400              	.LBE5719:
 2401              	.LBE5720:
 2402              	.LBB5721:
 2403              	.LBI5721:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2404              		.loc 24 128 14 is_stmt 1 view .LVU490
 2405              	.LBB5722:
 2406              	.LBI5722:
 2407              		.loc 19 162 7 view .LVU491
 2408              	.LBB5723:
 2409              	.LBI5723:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2410              		.loc 20 89 7 view .LVU492
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2411              		.loc 20 89 7 is_stmt 0 view .LVU493
 2412              	.LBE5723:
 2413              	.LBE5722:
 2414              	.LBE5721:
 2415              	.LBE5708:
 2416              	.LBE5707:
 2417              	.LBE5704:
 2418              	.LBB5724:
 2419              	.LBI5724:
 2420              		.loc 18 657 7 is_stmt 1 view .LVU494
 2421              	.LBB5725:
 2422              	.LBI5725:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2423              		.loc 18 229 7 view .LVU495
 2424              	.LBB5726:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 211


 2425              	.LBB5727:
 2426              	.LBI5727:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2427              		.loc 18 221 7 view .LVU496
 2428              	.LBB5728:
 2429              	.LBI5728:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2430              		.loc 18 186 7 view .LVU497
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2431              		.loc 18 186 7 is_stmt 0 view .LVU498
 2432              	.LBE5728:
 2433              	.LBE5727:
 2434              	.LBB5734:
 2435              	.LBI5734:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2436              		.loc 18 236 7 is_stmt 1 view .LVU499
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2437              		.loc 18 236 7 is_stmt 0 view .LVU500
 2438              	.LBE5734:
 2439              	.LBB5742:
 2440              	.LBB5730:
 2441              	.LBB5729:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2442              		.loc 18 187 28 view .LVU501
 2443 001e 2869     		ldr	r0, [r5, #16]
 2444              	.LVL126:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2445              		.loc 18 187 28 view .LVU502
 2446              	.LBE5729:
 2447              	.LBE5730:
 2448              	.LBB5731:
 2449              	.LBI5731:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2450              		.loc 18 200 7 is_stmt 1 view .LVU503
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2451              		.loc 18 200 7 is_stmt 0 view .LVU504
 2452              	.LBE5731:
 2453              	.LBE5742:
 2454              	.LBB5743:
 2455              	.LBB5735:
 2456              	.LBB5736:
 2457              	.LBI5736:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2458              		.loc 26 491 7 is_stmt 1 view .LVU505
 2459              	.LBB5737:
 2460              	.LBI5737:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2461              		.loc 20 120 7 view .LVU506
 2462              	.LBE5737:
 2463              	.LBE5736:
 2464              	.LBE5735:
 2465              	.LBE5743:
 2466              	.LBB5744:
 2467              	.LBB5733:
 2468              	.LBB5732:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2469              		.loc 18 203 57 is_stmt 0 view .LVU507
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 212


 2470 0020 05F11803 		add	r3, r5, #24
 2471              	.LVL127:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2472              		.loc 18 203 57 view .LVU508
 2473              	.LBE5732:
 2474              	.LBE5733:
 2475              	.LBE5744:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2476              		.loc 18 231 2 view .LVU509
 2477 0024 9842     		cmp	r0, r3
 2478 0026 03D0     		beq	.L92
 2479              	.LBB5745:
 2480              	.LBB5741:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2481              		.loc 18 237 34 view .LVU510
 2482 0028 A969     		ldr	r1, [r5, #24]
 2483              	.LBB5740:
 2484              	.LBB5739:
 2485              	.LBB5738:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2486              		.loc 20 133 19 view .LVU511
 2487 002a 0131     		adds	r1, r1, #1
 2488              	.LVL128:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2489              		.loc 20 133 19 view .LVU512
 2490 002c FFF7FEFF 		bl	_ZdlPvj
 2491              	.LVL129:
 2492              	.L92:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2493              		.loc 20 133 19 view .LVU513
 2494              	.LBE5738:
 2495              	.LBE5739:
 2496              	.LBE5740:
 2497              	.LBE5741:
 2498              	.LBE5745:
 2499              	.LBE5726:
 2500              	.LBE5725:
 2501              	.LBB5746:
 2502              	.LBI5746:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2503              		.loc 18 150 14 is_stmt 1 view .LVU514
 2504              	.LBB5747:
 2505              	.LBI5747:
 2506              		.loc 19 162 7 view .LVU515
 2507              	.LBB5748:
 2508              	.LBI5748:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2509              		.loc 20 89 7 view .LVU516
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2510              		.loc 20 89 7 is_stmt 0 view .LVU517
 2511              	.LBE5748:
 2512              	.LBE5747:
 2513              	.LBE5746:
 2514              	.LBE5724:
 2515              	.LBE5703:
 2516              	.LBE5702:
 2517              	.LBE5701:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 213


 2518              	.LBE5700:
 2519              	.LBB5749:
 2520              	.LBI5749:
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2521              		.loc 32 587 7 is_stmt 1 view .LVU518
 2522              	.LBB5750:
 2523              	.LBI5750:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2524              		.loc 26 491 7 view .LVU519
 2525              	.LBB5751:
 2526              	.LBI5751:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2527              		.loc 20 120 7 view .LVU520
 2528              	.LBB5752:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2529              		.loc 20 133 19 is_stmt 0 view .LVU521
 2530 0030 3421     		movs	r1, #52
 2531 0032 2846     		mov	r0, r5
 2532 0034 FFF7FEFF 		bl	_ZdlPvj
 2533              	.LVL130:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2534              		.loc 20 133 19 view .LVU522
 2535              	.LBE5752:
 2536              	.LBE5751:
 2537              	.LBE5750:
 2538              	.LBE5749:
 2539              	.LBE5699:
 2540              	.LBE5695:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2541              		.loc 32 1917 18 is_stmt 1 view .LVU523
 2542 0038 002C     		cmp	r4, #0
 2543 003a E4D1     		bne	.L93
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_drop_node(__x);
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __y;
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 2544              		.loc 32 1924 5 is_stmt 0 view .LVU524
 2545 003c 38BD     		pop	{r3, r4, r5, pc}
 2546              	.LVL131:
 2547              	.L102:
 2548              		.cfi_def_cfa_offset 0
 2549              		.cfi_restore 3
 2550              		.cfi_restore 4
 2551              		.cfi_restore 5
 2552              		.cfi_restore 14
 2553              		.loc 32 1924 5 view .LVU525
 2554 003e 7047     		bx	lr
 2555              		.cfi_endproc
 2556              	.LFE6232:
 2558              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 2559              		.align	1
 2560              		.p2align 2,,3
 2561              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 214


 2565              		.fpu fpv5-d16
 2567              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 2568              	.LVL132:
 2569              	.LFB6206:
 2570              		.file 34 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Map implementation -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Copyright (c) 1996,1997
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** /** @file bits/stl_map.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 215


  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifndef _STL_MAP_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #define _STL_MAP_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/functexcept.h>
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <bits/concept_check.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <initializer_list>
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #include <tuple>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** {
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class multimap;
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   /**
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @ingroup associative_containers
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Key  Type of key objects.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  value_type is std::pair<const Key,T>.
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  Maps support bidirectional iterators.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   */
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     class map
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     {
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Key					key_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Tp					mapped_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef std::pair<const _Key, _Tp>		value_type;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Compare					key_compare;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Alloc					allocator_type;
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 216


 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // concept requirements
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # if __cplusplus < 201103L
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** # endif
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 				_BinaryFunctionConcept)
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       static_assert(is_same<typename _Alloc::value_type, value_type>::value,
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  "std::map must have the same value_type as its allocator");
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       class value_compare
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       protected:
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	_Compare comp;
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	value_compare(_Compare __c)
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: comp(__c) { }
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       public:
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ return comp(__x.first, __y.first); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       };
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     private:
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// This turns a red-black tree into a [multi]map.
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// The actual tree structure.
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       _Rep_type _M_t;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****     public:
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // many of these are specified differently in ISO, but the following are
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // "functionally equivalent"
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::pointer		 pointer;
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_pointer	 const_pointer;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::reference		 reference;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Alloc_traits::const_reference	 const_reference;
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::iterator		 iterator;
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_iterator	 const_iterator;
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::size_type		 size_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 217


 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::difference_type	 difference_type;
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::reverse_iterator	 reverse_iterator;
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus > 201402L
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using node_type = typename _Rep_type::node_type;
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       using insert_return_type = typename _Rep_type::insert_return_type;
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       // (get_allocator() is also listed in this section)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Default constructor creates no elements.
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() : _M_t() { }
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map() = default;
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Creates a %map with no elements.
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const _Compare& __comp,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map copy constructor.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus < 201103L
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __x)
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__x._M_t) { }
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #else
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map&) = default;
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  %Map move constructor.
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The newly-created %map contains the exact contents of the moved
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  instance. The moved instance is a valid, but unspecified, %map.
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&&) = default;
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __l  An initializer_list.
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison object.
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements in the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 218


 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  initializer_list @a __l.
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  otherwise (where N is @a __l.size()).
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const allocator_type& __a = allocator_type())
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended default constructor.
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       explicit
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const allocator_type& __a)
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a)) { }
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended copy constructor.
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(const map& __m, const allocator_type& __a)
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended move constructor.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(map&& __m, const allocator_type& __a)
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended initialier-list constructor.
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       : _M_t(_Pair_alloc_type(__a))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /// Allocator-extended range constructor.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a)
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(_Pair_alloc_type(__a))
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #endif
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last)
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t()
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @brief  Builds a %map from a range.
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __first  An input iterator.
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __last  An input iterator.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 219


 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __comp  A comparison functor.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  @param  __a  An allocator object.
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  Create a %map consisting of copies of the elements from
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  distance(__first,__last)).
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       template<typename _InputIterator>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const _Compare& __comp,
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	    const allocator_type& __a = allocator_type())
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** #if __cplusplus >= 201103L
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       /**
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****        */
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h ****       ~map() = default;
 2571              		.loc 34 302 7 is_stmt 1 view -0
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 0
 2574              		@ frame_needed = 0, uses_anonymous_args = 0
 2575              		.loc 34 302 7 is_stmt 0 view .LVU527
 2576 0000 70B5     		push	{r4, r5, r6, lr}
 2577              		.cfi_def_cfa_offset 16
 2578              		.cfi_offset 4, -16
 2579              		.cfi_offset 5, -12
 2580              		.cfi_offset 6, -8
 2581              		.cfi_offset 14, -4
 2582              	.LBB5813:
 2583              	.LBB5814:
 2584              	.LBB5815:
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2585              		.loc 32 749 73 view .LVU528
 2586 0002 8568     		ldr	r5, [r0, #8]
 2587              	.LBE5815:
 2588              	.LBE5814:
 2589              	.LBE5813:
 2590              		.loc 34 302 7 view .LVU529
 2591 0004 0646     		mov	r6, r0
 2592              	.LVL133:
 2593              	.LBB5880:
 2594              	.LBI5813:
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _M_erase(_M_begin()); }
 2595              		.loc 32 990 7 is_stmt 1 view .LVU530
 2596              	.LBB5816:
 2597              	.LBI5814:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2598              		.loc 32 748 7 view .LVU531
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2599              		.loc 32 748 7 is_stmt 0 view .LVU532
 2600              	.LBE5816:
 2601              	.LBB5817:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 220


 2602              	.LBI5817:
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_erase(_Link_type __x)
 2603              		.loc 32 1913 5 is_stmt 1 view .LVU533
 2604              	.LBB5818:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2605              		.loc 32 1917 18 view .LVU534
 2606 0006 D5B1     		cbz	r5, .L106
 2607              	.LVL134:
 2608              	.L109:
 2609              	.LBB5819:
 2610              	.LBB5820:
 2611              	.LBI5820:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2612              		.loc 32 797 7 view .LVU535
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 2613              		.loc 32 797 7 is_stmt 0 view .LVU536
 2614 0008 2C46     		mov	r4, r5
 2615              	.LBE5820:
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Link_type __y = _S_left(__x);
 2616              		.loc 32 1919 12 view .LVU537
 2617 000a E868     		ldr	r0, [r5, #12]
 2618 000c FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2619              	.LVL135:
 2620              	.LBB5821:
 2621              	.LBI5821:
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 2622              		.loc 32 789 7 is_stmt 1 view .LVU538
 2623              	.LBB5822:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2624              		.loc 32 790 52 is_stmt 0 view .LVU539
 2625 0010 AD68     		ldr	r5, [r5, #8]
 2626              	.LVL136:
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 2627              		.loc 32 790 52 view .LVU540
 2628              	.LBE5822:
 2629              	.LBE5821:
 2630              	.LBB5823:
 2631              	.LBI5823:
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2632              		.loc 32 652 7 is_stmt 1 view .LVU541
 2633              	.LBB5824:
 2634              	.LBI5824:
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 2635              		.loc 32 641 7 view .LVU542
 2636              	.LBB5825:
 2637              	.LBI5825:
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 2638              		.loc 26 527 2 view .LVU543
 2639              	.LBB5826:
 2640              	.LBI5826:
 2641              		.loc 20 154 2 view .LVU544
 2642              	.LBB5827:
 2643              	.LBI5827:
 2644              		.loc 33 211 12 view .LVU545
 2645              	.LBB5828:
 2646              	.LBI5828:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 221


 2647              		.loc 24 678 7 view .LVU546
 2648              	.LBB5829:
 2649              	.LBI5829:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2650              		.loc 24 276 7 view .LVU547
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2651              		.loc 24 276 7 is_stmt 0 view .LVU548
 2652              	.LBE5829:
 2653              	.LBB5830:
 2654              	.LBI5830:
 2655              		.loc 26 735 5 is_stmt 1 view .LVU549
 2656              		.loc 26 735 5 is_stmt 0 view .LVU550
 2657              	.LBE5830:
 2658              	.LBB5831:
 2659              	.LBI5831:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2660              		.loc 24 333 7 is_stmt 1 view .LVU551
 2661              	.LBB5832:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2662              		.loc 24 335 15 is_stmt 0 view .LVU552
 2663 0012 A36A     		ldr	r3, [r4, #40]
 2664              	.LVL137:
 2665              	.LBB5833:
 2666              	.LBI5833:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2667              		.loc 24 350 7 is_stmt 1 view .LVU553
 2668              	.LBB5834:
 2669              	.LBB5835:
 2670              	.LBI5835:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2671              		.loc 26 491 7 view .LVU554
 2672              	.LBB5836:
 2673              	.LBB5837:
 2674              	.LBI5837:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2675              		.loc 20 120 7 view .LVU555
 2676              	.LBB5838:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2677              		.loc 20 133 19 is_stmt 0 view .LVU556
 2678 0014 1846     		mov	r0, r3
 2679              	.LBE5838:
 2680              	.LBE5837:
 2681              	.LBE5836:
 2682              	.LBE5835:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2683              		.loc 24 353 2 view .LVU557
 2684 0016 1BB1     		cbz	r3, .L107
 2685              	.LBE5834:
 2686              	.LBE5833:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2687              		.loc 24 336 35 view .LVU558
 2688 0018 216B     		ldr	r1, [r4, #48]
 2689              	.LBB5844:
 2690              	.LBB5843:
 2691              	.LBB5842:
 2692              	.LBB5841:
 2693              	.LBB5840:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 222


 2694              	.LBB5839:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2695              		.loc 20 133 19 view .LVU559
 2696 001a C91A     		subs	r1, r1, r3
 2697 001c FFF7FEFF 		bl	_ZdlPvj
 2698              	.LVL138:
 2699              	.L107:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2700              		.loc 20 133 19 view .LVU560
 2701              	.LBE5839:
 2702              	.LBE5840:
 2703              	.LBE5841:
 2704              	.LBE5842:
 2705              	.LBE5843:
 2706              	.LBE5844:
 2707              	.LBB5845:
 2708              	.LBI5845:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2709              		.loc 24 128 14 is_stmt 1 view .LVU561
 2710              	.LBB5846:
 2711              	.LBI5846:
 2712              		.loc 19 162 7 view .LVU562
 2713              	.LBB5847:
 2714              	.LBI5847:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2715              		.loc 20 89 7 view .LVU563
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2716              		.loc 20 89 7 is_stmt 0 view .LVU564
 2717              	.LBE5847:
 2718              	.LBE5846:
 2719              	.LBE5845:
 2720              	.LBE5832:
 2721              	.LBE5831:
 2722              	.LBE5828:
 2723              	.LBB5848:
 2724              	.LBI5848:
 2725              		.loc 18 657 7 is_stmt 1 view .LVU565
 2726              	.LBB5849:
 2727              	.LBI5849:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2728              		.loc 18 229 7 view .LVU566
 2729              	.LBB5850:
 2730              	.LBB5851:
 2731              	.LBI5851:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2732              		.loc 18 221 7 view .LVU567
 2733              	.LBB5852:
 2734              	.LBI5852:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2735              		.loc 18 186 7 view .LVU568
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2736              		.loc 18 186 7 is_stmt 0 view .LVU569
 2737              	.LBE5852:
 2738              	.LBE5851:
 2739              	.LBB5858:
 2740              	.LBI5858:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 223


 2741              		.loc 18 236 7 is_stmt 1 view .LVU570
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2742              		.loc 18 236 7 is_stmt 0 view .LVU571
 2743              	.LBE5858:
 2744              	.LBB5866:
 2745              	.LBB5854:
 2746              	.LBB5853:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2747              		.loc 18 187 28 view .LVU572
 2748 0020 2069     		ldr	r0, [r4, #16]
 2749              	.LVL139:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2750              		.loc 18 187 28 view .LVU573
 2751              	.LBE5853:
 2752              	.LBE5854:
 2753              	.LBB5855:
 2754              	.LBI5855:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2755              		.loc 18 200 7 is_stmt 1 view .LVU574
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2756              		.loc 18 200 7 is_stmt 0 view .LVU575
 2757              	.LBE5855:
 2758              	.LBE5866:
 2759              	.LBB5867:
 2760              	.LBB5859:
 2761              	.LBB5860:
 2762              	.LBI5860:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2763              		.loc 26 491 7 is_stmt 1 view .LVU576
 2764              	.LBB5861:
 2765              	.LBI5861:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2766              		.loc 20 120 7 view .LVU577
 2767              	.LBE5861:
 2768              	.LBE5860:
 2769              	.LBE5859:
 2770              	.LBE5867:
 2771              	.LBB5868:
 2772              	.LBB5857:
 2773              	.LBB5856:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2774              		.loc 18 203 57 is_stmt 0 view .LVU578
 2775 0022 04F11803 		add	r3, r4, #24
 2776              	.LVL140:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2777              		.loc 18 203 57 view .LVU579
 2778              	.LBE5856:
 2779              	.LBE5857:
 2780              	.LBE5868:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2781              		.loc 18 231 2 view .LVU580
 2782 0026 9842     		cmp	r0, r3
 2783 0028 03D0     		beq	.L108
 2784              	.LBB5869:
 2785              	.LBB5865:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2786              		.loc 18 237 34 view .LVU581
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 224


 2787 002a A169     		ldr	r1, [r4, #24]
 2788              	.LBB5864:
 2789              	.LBB5863:
 2790              	.LBB5862:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2791              		.loc 20 133 19 view .LVU582
 2792 002c 0131     		adds	r1, r1, #1
 2793              	.LVL141:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2794              		.loc 20 133 19 view .LVU583
 2795 002e FFF7FEFF 		bl	_ZdlPvj
 2796              	.LVL142:
 2797              	.L108:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2798              		.loc 20 133 19 view .LVU584
 2799              	.LBE5862:
 2800              	.LBE5863:
 2801              	.LBE5864:
 2802              	.LBE5865:
 2803              	.LBE5869:
 2804              	.LBE5850:
 2805              	.LBE5849:
 2806              	.LBB5870:
 2807              	.LBI5870:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2808              		.loc 18 150 14 is_stmt 1 view .LVU585
 2809              	.LBB5871:
 2810              	.LBI5871:
 2811              		.loc 19 162 7 view .LVU586
 2812              	.LBB5872:
 2813              	.LBI5872:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2814              		.loc 20 89 7 view .LVU587
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2815              		.loc 20 89 7 is_stmt 0 view .LVU588
 2816              	.LBE5872:
 2817              	.LBE5871:
 2818              	.LBE5870:
 2819              	.LBE5848:
 2820              	.LBE5827:
 2821              	.LBE5826:
 2822              	.LBE5825:
 2823              	.LBE5824:
 2824              	.LBB5873:
 2825              	.LBI5873:
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2826              		.loc 32 587 7 is_stmt 1 view .LVU589
 2827              	.LBB5874:
 2828              	.LBI5874:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2829              		.loc 26 491 7 view .LVU590
 2830              	.LBB5875:
 2831              	.LBI5875:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2832              		.loc 20 120 7 view .LVU591
 2833              	.LBB5876:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 225


 2834              		.loc 20 133 19 is_stmt 0 view .LVU592
 2835 0032 3421     		movs	r1, #52
 2836 0034 2046     		mov	r0, r4
 2837 0036 FFF7FEFF 		bl	_ZdlPvj
 2838              	.LVL143:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2839              		.loc 20 133 19 view .LVU593
 2840              	.LBE5876:
 2841              	.LBE5875:
 2842              	.LBE5874:
 2843              	.LBE5873:
 2844              	.LBE5823:
 2845              	.LBE5819:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2846              		.loc 32 1917 18 is_stmt 1 view .LVU594
 2847 003a 002D     		cmp	r5, #0
 2848 003c E4D1     		bne	.L109
 2849              	.LVL144:
 2850              	.L106:
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 2851              		.loc 32 1917 18 is_stmt 0 view .LVU595
 2852              	.LBE5818:
 2853              	.LBE5817:
 2854              	.LBB5877:
 2855              	.LBI5877:
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: public _Node_allocator
 2856              		.loc 32 677 9 is_stmt 1 view .LVU596
 2857              	.LBB5878:
 2858              	.LBI5878:
 2859              		.loc 19 162 7 view .LVU597
 2860              	.LBB5879:
 2861              	.LBI5879:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2862              		.loc 20 89 7 view .LVU598
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2863              		.loc 20 89 7 is_stmt 0 view .LVU599
 2864              	.LBE5879:
 2865              	.LBE5878:
 2866              	.LBE5877:
 2867              	.LBE5880:
 2868              		.loc 34 302 7 view .LVU600
 2869 003e 3046     		mov	r0, r6
 2870 0040 70BD     		pop	{r4, r5, r6, pc}
 2871              		.loc 34 302 7 view .LVU601
 2872              		.cfi_endproc
 2873              	.LFE6206:
 2875              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2876              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 2877 0042 00BF     		.section	.text._Z9cbPatternv,"ax",%progbits
 2878              		.align	1
 2879              		.p2align 2,,3
 2880              		.global	_Z9cbPatternv
 2881              		.syntax unified
 2882              		.thumb
 2883              		.thumb_func
 2884              		.fpu fpv5-d16
 2886              	_Z9cbPatternv:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 226


 2887              	.LFB5120:
  85:Jellybeans.cpp ****     arp->setPattern(mPattern->getValue());
 2888              		.loc 14 85 17 is_stmt 1 view -0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 24
 2891              		@ frame_needed = 0, uses_anonymous_args = 0
  86:Jellybeans.cpp **** };
 2892              		.loc 14 86 5 view .LVU603
  86:Jellybeans.cpp **** };
 2893              		.loc 14 86 20 is_stmt 0 view .LVU604
 2894 0000 0B4A     		ldr	r2, .L121
  86:Jellybeans.cpp **** };
 2895              		.loc 14 86 40 view .LVU605
 2896 0002 0C4B     		ldr	r3, .L121+4
  85:Jellybeans.cpp ****     arp->setPattern(mPattern->getValue());
 2897              		.loc 14 85 17 view .LVU606
 2898 0004 10B5     		push	{r4, lr}
 2899              		.cfi_def_cfa_offset 8
 2900              		.cfi_offset 4, -8
 2901              		.cfi_offset 14, -4
 2902 0006 86B0     		sub	sp, sp, #24
 2903              		.cfi_def_cfa_offset 32
  86:Jellybeans.cpp **** };
 2904              		.loc 14 86 20 view .LVU607
 2905 0008 1468     		ldr	r4, [r2]
  86:Jellybeans.cpp **** };
 2906              		.loc 14 86 40 view .LVU608
 2907 000a 1968     		ldr	r1, [r3]
 2908 000c 6846     		mov	r0, sp
 2909 000e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8getValueB5cxx11Ev
 2910              	.LVL145:
  86:Jellybeans.cpp **** };
 2911              		.loc 14 86 20 view .LVU609
 2912 0012 2046     		mov	r0, r4
 2913 0014 6946     		mov	r1, sp
 2914 0016 FFF7FEFF 		bl	_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 2915              	.LVL146:
 2916              	.LBB5898:
 2917              	.LBI5898:
 2918              		.loc 18 657 7 is_stmt 1 view .LVU610
 2919              	.LBB5899:
 2920              	.LBB5900:
 2921              	.LBI5900:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2922              		.loc 18 229 7 view .LVU611
 2923              	.LBB5901:
 2924              	.LBB5902:
 2925              	.LBI5902:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2926              		.loc 18 221 7 view .LVU612
 2927              	.LBB5903:
 2928              	.LBI5903:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2929              		.loc 18 186 7 view .LVU613
 2930              	.LBB5904:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2931              		.loc 18 187 28 is_stmt 0 view .LVU614
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 227


 2932 001a 0098     		ldr	r0, [sp]
 2933              	.LVL147:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2934              		.loc 18 187 28 view .LVU615
 2935              	.LBE5904:
 2936              	.LBE5903:
 2937              	.LBB5905:
 2938              	.LBI5905:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2939              		.loc 18 200 7 is_stmt 1 view .LVU616
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2940              		.loc 18 200 7 is_stmt 0 view .LVU617
 2941              	.LBE5905:
 2942              	.LBE5902:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2943              		.loc 18 231 2 view .LVU618
 2944 001c 02AB     		add	r3, sp, #8
 2945 001e 9842     		cmp	r0, r3
 2946 0020 03D0     		beq	.L118
 2947              	.LVL148:
 2948              	.LBB5906:
 2949              	.LBI5906:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2950              		.loc 18 236 7 is_stmt 1 view .LVU619
 2951              	.LBB5907:
 2952              	.LBB5908:
 2953              	.LBI5908:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2954              		.loc 26 491 7 view .LVU620
 2955              	.LBB5909:
 2956              	.LBI5909:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2957              		.loc 20 120 7 view .LVU621
 2958              	.LBE5909:
 2959              	.LBE5908:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2960              		.loc 18 237 34 is_stmt 0 view .LVU622
 2961 0022 0299     		ldr	r1, [sp, #8]
 2962              	.LBB5912:
 2963              	.LBB5911:
 2964              	.LBB5910:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2965              		.loc 20 133 19 view .LVU623
 2966 0024 0131     		adds	r1, r1, #1
 2967              	.LVL149:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2968              		.loc 20 133 19 view .LVU624
 2969 0026 FFF7FEFF 		bl	_ZdlPvj
 2970              	.LVL150:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2971              		.loc 20 133 19 view .LVU625
 2972              	.LBE5910:
 2973              	.LBE5911:
 2974              	.LBE5912:
 2975              	.LBE5907:
 2976              	.LBE5906:
 2977              	.LBE5901:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 228


 2978              	.LBE5900:
 2979              	.LBB5913:
 2980              	.LBI5913:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2981              		.loc 18 150 14 is_stmt 1 view .LVU626
 2982              	.LBB5914:
 2983              	.LBI5914:
 2984              		.loc 19 162 7 view .LVU627
 2985              	.LBB5915:
 2986              	.LBI5915:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2987              		.loc 20 89 7 view .LVU628
 2988              	.L118:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2989              		.loc 20 89 7 is_stmt 0 view .LVU629
 2990              	.LBE5915:
 2991              	.LBE5914:
 2992              	.LBE5913:
 2993              	.LBE5899:
 2994              	.LBE5898:
  87:Jellybeans.cpp **** 
 2995              		.loc 14 87 1 view .LVU630
 2996 002a 06B0     		add	sp, sp, #24
 2997              		.cfi_def_cfa_offset 8
 2998              		@ sp needed
 2999 002c 10BD     		pop	{r4, pc}
 3000              	.L122:
 3001 002e 00BF     		.align	2
 3002              	.L121:
 3003 0030 00000000 		.word	.LANCHOR0
 3004 0034 00000000 		.word	.LANCHOR3
 3005              		.cfi_endproc
 3006              	.LFE5120:
 3008              		.section	.text._Z9cbVoicingv,"ax",%progbits
 3009              		.align	1
 3010              		.p2align 2,,3
 3011              		.global	_Z9cbVoicingv
 3012              		.syntax unified
 3013              		.thumb
 3014              		.thumb_func
 3015              		.fpu fpv5-d16
 3017              	_Z9cbVoicingv:
 3018              	.LFB5121:
  89:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->getValue());
 3019              		.loc 14 89 17 is_stmt 1 view -0
 3020              		.cfi_startproc
 3021              		@ args = 0, pretend = 0, frame = 24
 3022              		@ frame_needed = 0, uses_anonymous_args = 0
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3023              		.loc 14 90 5 view .LVU632
  89:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->getValue());
 3024              		.loc 14 89 17 is_stmt 0 view .LVU633
 3025 0000 30B5     		push	{r4, r5, lr}
 3026              		.cfi_def_cfa_offset 12
 3027              		.cfi_offset 4, -12
 3028              		.cfi_offset 5, -8
 3029              		.cfi_offset 14, -4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 229


  90:Jellybeans.cpp ****     arp->updateTraversal();
 3030              		.loc 14 90 32 view .LVU634
 3031 0002 0E4D     		ldr	r5, .L126
  89:Jellybeans.cpp ****     arp->getChord()->setVoicing(mVoicing->getValue());
 3032              		.loc 14 89 17 view .LVU635
 3033 0004 87B0     		sub	sp, sp, #28
 3034              		.cfi_def_cfa_offset 40
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3035              		.loc 14 90 32 view .LVU636
 3036 0006 2868     		ldr	r0, [r5]
 3037 0008 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 3038              	.LVL151:
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3039              		.loc 14 90 52 view .LVU637
 3040 000c 0C4B     		ldr	r3, .L126+4
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3041              		.loc 14 90 32 view .LVU638
 3042 000e 0446     		mov	r4, r0
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3043              		.loc 14 90 52 view .LVU639
 3044 0010 6846     		mov	r0, sp
 3045 0012 1968     		ldr	r1, [r3]
 3046 0014 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8getValueB5cxx11Ev
 3047              	.LVL152:
  90:Jellybeans.cpp ****     arp->updateTraversal();
 3048              		.loc 14 90 32 view .LVU640
 3049 0018 2046     		mov	r0, r4
 3050 001a 6946     		mov	r1, sp
 3051 001c FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 3052              	.LVL153:
 3053              	.LBB5933:
 3054              	.LBI5933:
 3055              		.loc 18 657 7 is_stmt 1 view .LVU641
 3056              	.LBB5934:
 3057              	.LBB5935:
 3058              	.LBI5935:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3059              		.loc 18 229 7 view .LVU642
 3060              	.LBB5936:
 3061              	.LBB5937:
 3062              	.LBI5937:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3063              		.loc 18 221 7 view .LVU643
 3064              	.LBB5938:
 3065              	.LBI5938:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3066              		.loc 18 186 7 view .LVU644
 3067              	.LBB5939:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3068              		.loc 18 187 28 is_stmt 0 view .LVU645
 3069 0020 0098     		ldr	r0, [sp]
 3070              	.LVL154:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3071              		.loc 18 187 28 view .LVU646
 3072              	.LBE5939:
 3073              	.LBE5938:
 3074              	.LBB5940:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 230


 3075              	.LBI5940:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3076              		.loc 18 200 7 is_stmt 1 view .LVU647
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3077              		.loc 18 200 7 is_stmt 0 view .LVU648
 3078              	.LBE5940:
 3079              	.LBE5937:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3080              		.loc 18 231 2 view .LVU649
 3081 0022 02AB     		add	r3, sp, #8
 3082 0024 9842     		cmp	r0, r3
 3083 0026 03D0     		beq	.L124
 3084              	.LVL155:
 3085              	.LBB5941:
 3086              	.LBI5941:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3087              		.loc 18 236 7 is_stmt 1 view .LVU650
 3088              	.LBB5942:
 3089              	.LBB5943:
 3090              	.LBI5943:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3091              		.loc 26 491 7 view .LVU651
 3092              	.LBB5944:
 3093              	.LBI5944:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3094              		.loc 20 120 7 view .LVU652
 3095              	.LBE5944:
 3096              	.LBE5943:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3097              		.loc 18 237 34 is_stmt 0 view .LVU653
 3098 0028 0299     		ldr	r1, [sp, #8]
 3099              	.LBB5947:
 3100              	.LBB5946:
 3101              	.LBB5945:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3102              		.loc 20 133 19 view .LVU654
 3103 002a 0131     		adds	r1, r1, #1
 3104              	.LVL156:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3105              		.loc 20 133 19 view .LVU655
 3106 002c FFF7FEFF 		bl	_ZdlPvj
 3107              	.LVL157:
 3108              	.L124:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3109              		.loc 20 133 19 view .LVU656
 3110              	.LBE5945:
 3111              	.LBE5946:
 3112              	.LBE5947:
 3113              	.LBE5942:
 3114              	.LBE5941:
 3115              	.LBE5936:
 3116              	.LBE5935:
 3117              	.LBB5948:
 3118              	.LBI5948:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3119              		.loc 18 150 14 is_stmt 1 view .LVU657
 3120              	.LBB5949:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 231


 3121              	.LBI5949:
 3122              		.loc 19 162 7 view .LVU658
 3123              	.LBB5950:
 3124              	.LBI5950:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3125              		.loc 20 89 7 view .LVU659
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3126              		.loc 20 89 7 is_stmt 0 view .LVU660
 3127              	.LBE5950:
 3128              	.LBE5949:
 3129              	.LBE5948:
 3130              	.LBE5934:
 3131              	.LBE5933:
  91:Jellybeans.cpp **** };
 3132              		.loc 14 91 5 is_stmt 1 view .LVU661
  91:Jellybeans.cpp **** };
 3133              		.loc 14 91 25 is_stmt 0 view .LVU662
 3134 0030 2868     		ldr	r0, [r5]
  92:Jellybeans.cpp **** 
 3135              		.loc 14 92 1 view .LVU663
 3136 0032 07B0     		add	sp, sp, #28
 3137              		.cfi_def_cfa_offset 12
 3138              		@ sp needed
 3139 0034 BDE83040 		pop	{r4, r5, lr}
 3140              		.cfi_restore 14
 3141              		.cfi_restore 5
 3142              		.cfi_restore 4
 3143              		.cfi_def_cfa_offset 0
  91:Jellybeans.cpp **** };
 3144              		.loc 14 91 25 view .LVU664
 3145 0038 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 3146              	.LVL158:
 3147              	.L127:
 3148              		.align	2
 3149              	.L126:
 3150 003c 00000000 		.word	.LANCHOR0
 3151 0040 00000000 		.word	.LANCHOR4
 3152              		.cfi_endproc
 3153              	.LFE5121:
 3155              		.section	.text._Z6cbModev,"ax",%progbits
 3156              		.align	1
 3157              		.p2align 2,,3
 3158              		.global	_Z6cbModev
 3159              		.syntax unified
 3160              		.thumb
 3161              		.thumb_func
 3162              		.fpu fpv5-d16
 3164              	_Z6cbModev:
 3165              	.LFB5122:
  94:Jellybeans.cpp ****     arp->getChord()->setMode(mMode->getValue());
 3166              		.loc 14 94 14 is_stmt 1 view -0
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 24
 3169              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3170              		.loc 14 95 5 view .LVU666
  94:Jellybeans.cpp ****     arp->getChord()->setMode(mMode->getValue());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 232


 3171              		.loc 14 94 14 is_stmt 0 view .LVU667
 3172 0000 30B5     		push	{r4, r5, lr}
 3173              		.cfi_def_cfa_offset 12
 3174              		.cfi_offset 4, -12
 3175              		.cfi_offset 5, -8
 3176              		.cfi_offset 14, -4
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3177              		.loc 14 95 29 view .LVU668
 3178 0002 0E4D     		ldr	r5, .L131
  94:Jellybeans.cpp ****     arp->getChord()->setMode(mMode->getValue());
 3179              		.loc 14 94 14 view .LVU669
 3180 0004 87B0     		sub	sp, sp, #28
 3181              		.cfi_def_cfa_offset 40
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3182              		.loc 14 95 29 view .LVU670
 3183 0006 2868     		ldr	r0, [r5]
 3184 0008 FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 3185              	.LVL159:
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3186              		.loc 14 95 46 view .LVU671
 3187 000c 0C4B     		ldr	r3, .L131+4
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3188              		.loc 14 95 29 view .LVU672
 3189 000e 0446     		mov	r4, r0
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3190              		.loc 14 95 46 view .LVU673
 3191 0010 6846     		mov	r0, sp
 3192 0012 1968     		ldr	r1, [r3]
 3193 0014 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8getValueB5cxx11Ev
 3194              	.LVL160:
  95:Jellybeans.cpp ****     arp->updateTraversal();
 3195              		.loc 14 95 29 view .LVU674
 3196 0018 2046     		mov	r0, r4
 3197 001a 6946     		mov	r1, sp
 3198 001c FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord7setModeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 3199              	.LVL161:
 3200              	.LBB5968:
 3201              	.LBI5968:
 3202              		.loc 18 657 7 is_stmt 1 view .LVU675
 3203              	.LBB5969:
 3204              	.LBB5970:
 3205              	.LBI5970:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3206              		.loc 18 229 7 view .LVU676
 3207              	.LBB5971:
 3208              	.LBB5972:
 3209              	.LBI5972:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3210              		.loc 18 221 7 view .LVU677
 3211              	.LBB5973:
 3212              	.LBI5973:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3213              		.loc 18 186 7 view .LVU678
 3214              	.LBB5974:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3215              		.loc 18 187 28 is_stmt 0 view .LVU679
 3216 0020 0098     		ldr	r0, [sp]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 233


 3217              	.LVL162:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3218              		.loc 18 187 28 view .LVU680
 3219              	.LBE5974:
 3220              	.LBE5973:
 3221              	.LBB5975:
 3222              	.LBI5975:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3223              		.loc 18 200 7 is_stmt 1 view .LVU681
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3224              		.loc 18 200 7 is_stmt 0 view .LVU682
 3225              	.LBE5975:
 3226              	.LBE5972:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3227              		.loc 18 231 2 view .LVU683
 3228 0022 02AB     		add	r3, sp, #8
 3229 0024 9842     		cmp	r0, r3
 3230 0026 03D0     		beq	.L129
 3231              	.LVL163:
 3232              	.LBB5976:
 3233              	.LBI5976:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3234              		.loc 18 236 7 is_stmt 1 view .LVU684
 3235              	.LBB5977:
 3236              	.LBB5978:
 3237              	.LBI5978:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3238              		.loc 26 491 7 view .LVU685
 3239              	.LBB5979:
 3240              	.LBI5979:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3241              		.loc 20 120 7 view .LVU686
 3242              	.LBE5979:
 3243              	.LBE5978:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3244              		.loc 18 237 34 is_stmt 0 view .LVU687
 3245 0028 0299     		ldr	r1, [sp, #8]
 3246              	.LBB5982:
 3247              	.LBB5981:
 3248              	.LBB5980:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3249              		.loc 20 133 19 view .LVU688
 3250 002a 0131     		adds	r1, r1, #1
 3251              	.LVL164:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3252              		.loc 20 133 19 view .LVU689
 3253 002c FFF7FEFF 		bl	_ZdlPvj
 3254              	.LVL165:
 3255              	.L129:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3256              		.loc 20 133 19 view .LVU690
 3257              	.LBE5980:
 3258              	.LBE5981:
 3259              	.LBE5982:
 3260              	.LBE5977:
 3261              	.LBE5976:
 3262              	.LBE5971:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 234


 3263              	.LBE5970:
 3264              	.LBB5983:
 3265              	.LBI5983:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3266              		.loc 18 150 14 is_stmt 1 view .LVU691
 3267              	.LBB5984:
 3268              	.LBI5984:
 3269              		.loc 19 162 7 view .LVU692
 3270              	.LBB5985:
 3271              	.LBI5985:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3272              		.loc 20 89 7 view .LVU693
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3273              		.loc 20 89 7 is_stmt 0 view .LVU694
 3274              	.LBE5985:
 3275              	.LBE5984:
 3276              	.LBE5983:
 3277              	.LBE5969:
 3278              	.LBE5968:
  96:Jellybeans.cpp **** };
 3279              		.loc 14 96 5 is_stmt 1 view .LVU695
  96:Jellybeans.cpp **** };
 3280              		.loc 14 96 25 is_stmt 0 view .LVU696
 3281 0030 2868     		ldr	r0, [r5]
  97:Jellybeans.cpp **** 
 3282              		.loc 14 97 1 view .LVU697
 3283 0032 07B0     		add	sp, sp, #28
 3284              		.cfi_def_cfa_offset 12
 3285              		@ sp needed
 3286 0034 BDE83040 		pop	{r4, r5, lr}
 3287              		.cfi_restore 14
 3288              		.cfi_restore 5
 3289              		.cfi_restore 4
 3290              		.cfi_def_cfa_offset 0
  96:Jellybeans.cpp **** };
 3291              		.loc 14 96 25 view .LVU698
 3292 0038 FFF7FEBF 		b	_ZN10jellybeans3Arp15updateTraversalEv
 3293              	.LVL166:
 3294              	.L132:
 3295              		.align	2
 3296              	.L131:
 3297 003c 00000000 		.word	.LANCHOR0
 3298 0040 00000000 		.word	.LANCHOR5
 3299              		.cfi_endproc
 3300              	.LFE5122:
 3302              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3303              		.align	1
 3304              		.p2align 2,,3
 3305              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3306              		.syntax unified
 3307              		.thumb
 3308              		.thumb_func
 3309              		.fpu fpv5-d16
 3311              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3312              	.LVL167:
 3313              	.LFB5778:
 220:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 235


 221:../../libdaisy/src/hid/disp/display.h ****     void DrawLine(uint_fast8_t x1,
 222:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 223:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 224:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 225:../../libdaisy/src/hid/disp/display.h ****                   bool         on) override
 226:../../libdaisy/src/hid/disp/display.h ****     {
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaX = abs((int_fast16_t)x2 - (int_fast16_t)x1);
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 232:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 233:../../libdaisy/src/hid/disp/display.h **** 
 234:../../libdaisy/src/hid/disp/display.h ****         // If we write "ChildType::DrawPixel(x2, y2, on);", we end up with
 235:../../libdaisy/src/hid/disp/display.h ****         // all sorts of weird compiler errors when the Child class is a template
 236:../../libdaisy/src/hid/disp/display.h ****         // class. The only way around this is to use this very verbose syntax:
 237:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::DrawPixel(x2, y2, on);
 238:../../libdaisy/src/hid/disp/display.h **** 
 239:../../libdaisy/src/hid/disp/display.h ****         while((x1 != x2) || (y1 != y2))
 240:../../libdaisy/src/hid/disp/display.h ****         {
 241:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawPixel(x1, y1, on);
 242:../../libdaisy/src/hid/disp/display.h ****             error2 = error * 2;
 243:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 244:../../libdaisy/src/hid/disp/display.h ****             {
 245:../../libdaisy/src/hid/disp/display.h ****                 error -= deltaY;
 246:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 247:../../libdaisy/src/hid/disp/display.h ****             }
 248:../../libdaisy/src/hid/disp/display.h **** 
 249:../../libdaisy/src/hid/disp/display.h ****             if(error2 < deltaX)
 250:../../libdaisy/src/hid/disp/display.h ****             {
 251:../../libdaisy/src/hid/disp/display.h ****                 error += deltaX;
 252:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 253:../../libdaisy/src/hid/disp/display.h ****             }
 254:../../libdaisy/src/hid/disp/display.h ****         }
 255:../../libdaisy/src/hid/disp/display.h ****     }
 256:../../libdaisy/src/hid/disp/display.h **** 
 257:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(uint_fast8_t x1,
 258:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 259:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 260:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 261:../../libdaisy/src/hid/disp/display.h ****                   bool         on,
 262:../../libdaisy/src/hid/disp/display.h ****                   bool         fill = false) override
 263:../../libdaisy/src/hid/disp/display.h ****     {
 264:../../libdaisy/src/hid/disp/display.h ****         if(fill)
 265:../../libdaisy/src/hid/disp/display.h ****         {
 266:../../libdaisy/src/hid/disp/display.h ****             for(uint_fast8_t x = x1; x <= x2; x++)
 267:../../libdaisy/src/hid/disp/display.h ****             {
 268:../../libdaisy/src/hid/disp/display.h ****                 for(uint_fast8_t y = y1; y <= y2; y++)
 269:../../libdaisy/src/hid/disp/display.h ****                 {
 270:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))->ChildType::DrawPixel(x, y, on);
 271:../../libdaisy/src/hid/disp/display.h ****                 }
 272:../../libdaisy/src/hid/disp/display.h ****             }
 273:../../libdaisy/src/hid/disp/display.h ****         }
 274:../../libdaisy/src/hid/disp/display.h ****         else
 275:../../libdaisy/src/hid/disp/display.h ****         {
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y1, x2, y1, on);
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 236


 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 279:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 280:../../libdaisy/src/hid/disp/display.h ****         }
 281:../../libdaisy/src/hid/disp/display.h ****     }
 282:../../libdaisy/src/hid/disp/display.h **** 
 283:../../libdaisy/src/hid/disp/display.h ****     void DrawArc(uint_fast8_t x,
 284:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 285:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t radius,
 286:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t start_angle,
 287:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t sweep,
 288:../../libdaisy/src/hid/disp/display.h ****                  bool         on) override
 289:../../libdaisy/src/hid/disp/display.h ****     {
 290:../../libdaisy/src/hid/disp/display.h ****         // Values to calculate the circle
 291:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t t_x, t_y, err, e2;
 292:../../libdaisy/src/hid/disp/display.h **** 
 293:../../libdaisy/src/hid/disp/display.h ****         // Temporary values to speed up comparisons
 294:../../libdaisy/src/hid/disp/display.h ****         float t_sxy, t_syx, t_sxny, t_synx;
 295:../../libdaisy/src/hid/disp/display.h ****         float t_exy, t_eyx, t_exny, t_eynx;
 296:../../libdaisy/src/hid/disp/display.h **** 
 297:../../libdaisy/src/hid/disp/display.h ****         float start_angle_rad, end_angle_rad;
 298:../../libdaisy/src/hid/disp/display.h ****         float start_x, start_y, end_x, end_y;
 299:../../libdaisy/src/hid/disp/display.h **** 
 300:../../libdaisy/src/hid/disp/display.h ****         bool d1, d2, d3, d4;
 301:../../libdaisy/src/hid/disp/display.h **** 
 302:../../libdaisy/src/hid/disp/display.h ****         d1 = d2 = d3 = d4 = true;
 303:../../libdaisy/src/hid/disp/display.h **** 
 304:../../libdaisy/src/hid/disp/display.h ****         bool circle = false;
 305:../../libdaisy/src/hid/disp/display.h **** 
 306:../../libdaisy/src/hid/disp/display.h ****         if(sweep < 0)
 307:../../libdaisy/src/hid/disp/display.h ****         {
 308:../../libdaisy/src/hid/disp/display.h ****             start_angle += sweep;
 309:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 310:../../libdaisy/src/hid/disp/display.h ****         }
 311:../../libdaisy/src/hid/disp/display.h **** 
 312:../../libdaisy/src/hid/disp/display.h ****         start_angle_rad = deg2rad(start_angle);
 313:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 314:../../libdaisy/src/hid/disp/display.h **** 
 315:../../libdaisy/src/hid/disp/display.h ****         start_x = cos(start_angle_rad) * radius;
 316:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 317:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 318:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 319:../../libdaisy/src/hid/disp/display.h **** 
 320:../../libdaisy/src/hid/disp/display.h ****         // Check if start and endpoint are very near
 321:../../libdaisy/src/hid/disp/display.h ****         if((end_x - start_x) * (end_x - start_x)
 322:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 323:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 324:../../libdaisy/src/hid/disp/display.h ****         {
 325:../../libdaisy/src/hid/disp/display.h ****             if(sweep > 180)
 326:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 327:../../libdaisy/src/hid/disp/display.h ****             else
 328:../../libdaisy/src/hid/disp/display.h ****                 // Nothing to draw
 329:../../libdaisy/src/hid/disp/display.h ****                 return;
 330:../../libdaisy/src/hid/disp/display.h ****         }
 331:../../libdaisy/src/hid/disp/display.h **** 
 332:../../libdaisy/src/hid/disp/display.h ****         t_x = -radius;
 333:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 334:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 237


 335:../../libdaisy/src/hid/disp/display.h **** 
 336:../../libdaisy/src/hid/disp/display.h ****         do
 337:../../libdaisy/src/hid/disp/display.h ****         {
 338:../../libdaisy/src/hid/disp/display.h ****             if(!circle)
 339:../../libdaisy/src/hid/disp/display.h ****             {
 340:../../libdaisy/src/hid/disp/display.h ****                 t_sxy  = start_x * t_y;
 341:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 342:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 343:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 344:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 345:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 346:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 347:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 348:../../libdaisy/src/hid/disp/display.h **** 
 349:../../libdaisy/src/hid/disp/display.h ****                 if(sweep > 180)
 350:../../libdaisy/src/hid/disp/display.h ****                 {
 351:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 || t_exy - t_eynx > 0);
 352:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 353:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 354:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 355:../../libdaisy/src/hid/disp/display.h ****                 }
 356:../../libdaisy/src/hid/disp/display.h ****                 else
 357:../../libdaisy/src/hid/disp/display.h ****                 {
 358:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 && t_exy - t_eynx > 0);
 359:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 360:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 361:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 362:../../libdaisy/src/hid/disp/display.h ****                 }
 363:../../libdaisy/src/hid/disp/display.h ****             }
 364:../../libdaisy/src/hid/disp/display.h **** 
 365:../../libdaisy/src/hid/disp/display.h ****             if(d1)
 366:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 367:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y + t_y, on);
 368:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 369:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 370:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y + t_y, on);
 371:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 372:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 373:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y - t_y, on);
 374:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 375:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 376:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y - t_y, on);
 377:../../libdaisy/src/hid/disp/display.h **** 
 378:../../libdaisy/src/hid/disp/display.h ****             e2 = err;
 379:../../libdaisy/src/hid/disp/display.h ****             if(e2 <= t_y)
 380:../../libdaisy/src/hid/disp/display.h ****             {
 381:../../libdaisy/src/hid/disp/display.h ****                 t_y++;
 382:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 383:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 384:../../libdaisy/src/hid/disp/display.h ****                 {
 385:../../libdaisy/src/hid/disp/display.h ****                     e2 = 0;
 386:../../libdaisy/src/hid/disp/display.h ****                 }
 387:../../libdaisy/src/hid/disp/display.h ****             }
 388:../../libdaisy/src/hid/disp/display.h ****             if(e2 > t_x)
 389:../../libdaisy/src/hid/disp/display.h ****             {
 390:../../libdaisy/src/hid/disp/display.h ****                 t_x++;
 391:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 238


 392:../../libdaisy/src/hid/disp/display.h ****             }
 393:../../libdaisy/src/hid/disp/display.h ****         } while(t_x <= 0);
 394:../../libdaisy/src/hid/disp/display.h ****     }
 395:../../libdaisy/src/hid/disp/display.h **** 
 396:../../libdaisy/src/hid/disp/display.h ****     char WriteChar(char ch, FontDef font, bool on) override
 3314              		.loc 5 396 10 is_stmt 1 view -0
 3315              		.cfi_startproc
 3316              		@ args = 4, pretend = 0, frame = 16
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
 3318              		.loc 5 396 10 is_stmt 0 view .LVU700
 3319 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3320              		.cfi_def_cfa_offset 36
 3321              		.cfi_offset 4, -36
 3322              		.cfi_offset 5, -32
 3323              		.cfi_offset 6, -28
 3324              		.cfi_offset 7, -24
 3325              		.cfi_offset 8, -20
 3326              		.cfi_offset 9, -16
 3327              		.cfi_offset 10, -12
 3328              		.cfi_offset 11, -8
 3329              		.cfi_offset 14, -4
 3330 0004 85B0     		sub	sp, sp, #20
 3331              		.cfi_def_cfa_offset 56
 3332              	.LVL168:
 397:../../libdaisy/src/hid/disp/display.h ****     {
 398:../../libdaisy/src/hid/disp/display.h ****         uint32_t i, b, j;
 399:../../libdaisy/src/hid/disp/display.h **** 
 400:../../libdaisy/src/hid/disp/display.h ****         // Check if character is valid
 401:../../libdaisy/src/hid/disp/display.h ****         if(ch < 32 || ch > 126)
 3333              		.loc 5 401 20 view .LVU701
 3334 0006 A1F12005 		sub	r5, r1, #32
 396:../../libdaisy/src/hid/disp/display.h ****     {
 3335              		.loc 5 396 10 view .LVU702
 3336 000a 04AC     		add	r4, sp, #16
 3337 000c 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
 3338 0010 0091     		str	r1, [sp]
 3339 0012 04E90C00 		stmdb	r4, {r2, r3}
 3340              	.LVL169:
 3341              		.loc 5 401 9 view .LVU703
 3342 0016 EBB2     		uxtb	r3, r5
 3343 0018 5E2B     		cmp	r3, #94
 3344 001a 00F29580 		bhi	.L137
 402:../../libdaisy/src/hid/disp/display.h ****             return 0;
 403:../../libdaisy/src/hid/disp/display.h **** 
 404:../../libdaisy/src/hid/disp/display.h ****         // Check remaining space on current line
 405:../../libdaisy/src/hid/disp/display.h ****         if(Width() < (currentX_ + font.FontWidth)
 3345              		.loc 5 405 17 view .LVU704
 3346 001e 0368     		ldr	r3, [r0]
 3347 0020 8046     		mov	r8, r0
 3348 0022 5D4A     		ldr	r2, .L172
 3349 0024 DB68     		ldr	r3, [r3, #12]
 3350 0026 9DF80840 		ldrb	r4, [sp, #8]	@ zero_extendqisi2
 3351 002a 9342     		cmp	r3, r2
 3352 002c 9DF80960 		ldrb	r6, [sp, #9]	@ zero_extendqisi2
 3353 0030 40F09480 		bne	.L164
 3354 0034 8020     		movs	r0, #128
 3355              	.LVL170:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 239


 3356              	.L136:
 3357              		.loc 5 405 23 view .LVU705
 3358 0036 B8F80430 		ldrh	r3, [r8, #4]
 3359              		.loc 5 405 33 view .LVU706
 3360 003a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3361              		.loc 5 406 12 view .LVU707
 3362 003c 8342     		cmp	r3, r0
 3363 003e 00F38380 		bgt	.L137
 3364              		.loc 5 406 21 discriminator 2 view .LVU708
 3365 0042 D8F80030 		ldr	r3, [r8]
 3366 0046 554A     		ldr	r2, .L172+4
 3367 0048 9B68     		ldr	r3, [r3, #8]
 3368 004a 9342     		cmp	r3, r2
 3369 004c 40F08880 		bne	.L165
 3370              		.loc 5 406 21 view .LVU709
 3371 0050 4020     		movs	r0, #64
 3372              	.L138:
 3373              		.loc 5 406 27 discriminator 2 view .LVU710
 3374 0052 B8F80620 		ldrh	r2, [r8, #6]
 3375              		.loc 5 406 37 discriminator 2 view .LVU711
 3376 0056 9319     		adds	r3, r2, r6
 3377              		.loc 5 406 27 discriminator 2 view .LVU712
 3378 0058 0192     		str	r2, [sp, #4]
 3379              		.loc 5 406 12 discriminator 2 view .LVU713
 3380 005a 8342     		cmp	r3, r0
 3381 005c 74DC     		bgt	.L137
 3382              	.LVL171:
 407:../../libdaisy/src/hid/disp/display.h ****         {
 408:../../libdaisy/src/hid/disp/display.h ****             // Not enough space on current line
 409:../../libdaisy/src/hid/disp/display.h ****             return 0;
 410:../../libdaisy/src/hid/disp/display.h ****         }
 411:../../libdaisy/src/hid/disp/display.h **** 
 412:../../libdaisy/src/hid/disp/display.h ****         // Use the font to write
 413:../../libdaisy/src/hid/disp/display.h ****         for(i = 0; i < font.FontHeight; i++)
 3383              		.loc 5 413 22 is_stmt 1 view .LVU714
 3384 005e 002E     		cmp	r6, #0
 3385 0060 00F08980 		beq	.L139
 414:../../libdaisy/src/hid/disp/display.h ****         {
 415:../../libdaisy/src/hid/disp/display.h ****             b = font.data[(ch - 32) * font.FontHeight + i];
 3386              		.loc 5 415 37 is_stmt 0 view .LVU715
 3387 0064 06FB05F5 		mul	r5, r6, r5
 3388 0068 6FF00040 		mvn	r0, #-2147483648
 3389              		.loc 5 415 22 view .LVU716
 3390 006c 039B     		ldr	r3, [sp, #12]
 3391 006e 9646     		mov	lr, r2
 3392 0070 2844     		add	r0, r0, r5
 3393 0072 2E44     		add	r6, r6, r5
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 417:../../libdaisy/src/hid/disp/display.h ****             {
 418:../../libdaisy/src/hid/disp/display.h ****                 if((b << j) & 0x8000)
 419:../../libdaisy/src/hid/disp/display.h ****                 {
 420:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 421:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 422:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), on);
 423:../../libdaisy/src/hid/disp/display.h ****                 }
 424:../../libdaisy/src/hid/disp/display.h ****                 else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 240


 425:../../libdaisy/src/hid/disp/display.h ****                 {
 426:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 427:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 428:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), !on);
 429:../../libdaisy/src/hid/disp/display.h ****                 }
 430:../../libdaisy/src/hid/disp/display.h ****             }
 431:../../libdaisy/src/hid/disp/display.h ****         }
 432:../../libdaisy/src/hid/disp/display.h **** 
 433:../../libdaisy/src/hid/disp/display.h ****         // The current space is now taken
 434:../../libdaisy/src/hid/disp/display.h ****         SetCursor(currentX_ + font.FontWidth, currentY_);
 3394              		.loc 5 434 19 view .LVU717
 3395 0074 B8F804A0 		ldrh	r10, [r8, #4]
 3396 0078 03EB4000 		add	r0, r3, r0, lsl #1
 3397 007c 023B     		subs	r3, r3, #2
 3398 007e 03EB460B 		add	fp, r3, r6, lsl #1
 3399              	.LVL172:
 3400              	.L142:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3401              		.loc 5 415 15 view .LVU718
 3402 0082 30F8026F 		ldrh	r6, [r0, #2]!
 3403              	.LVL173:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3404              		.loc 5 416 26 is_stmt 1 view .LVU719
 3405 0086 BCB3     		cbz	r4, .L147
 3406              	.LBB6016:
 3407              	.LBB6017:
 3408              	.LBB6018:
 3409              	.LBB6019:
 3410              	.LBB6020:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3411              		.loc 15 246 55 is_stmt 0 view .LVU720
 3412 0088 0EF00703 		and	r3, lr, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3413              		.loc 15 246 49 view .LVU721
 3414 008c 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3415              		.loc 15 246 28 view .LVU722
 3416 0090 4FEADE02 		lsr	r2, lr, #3
 3417 0094 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3418              		.loc 15 246 49 view .LVU723
 3419 0096 0CFA03FC 		lsl	ip, ip, r3
 3420 009a 0AF11403 		add	r3, r10, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3421              		.loc 15 246 42 view .LVU724
 3422 009e 4FFA8CFC 		sxtb	ip, ip
 3423 00a2 03EBC212 		add	r2, r3, r2, lsl #7
 3424              	.LBE6020:
 3425              	.LBE6019:
 3426              	.LBE6018:
 3427              	.LBE6017:
 3428              	.LBE6016:
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3429              		.loc 5 416 19 view .LVU725
 3430 00a6 0023     		movs	r3, #0
 3431              	.LBB6038:
 3432              	.LBB6033:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 241


 3433              	.LBB6028:
 3434              	.LBB6024:
 3435              	.LBB6021:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3436              		.loc 15 246 42 view .LVU726
 3437 00a8 6FEA0C09 		mvn	r9, ip
 3438 00ac 4244     		add	r2, r2, r8
 3439 00ae 0EE0     		b	.L148
 3440              	.LVL174:
 3441              	.L166:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3442              		.loc 15 246 42 view .LVU727
 3443              	.LBE6021:
 3444              	.LBE6024:
 3445              	.LBE6028:
 3446              	.LBE6033:
 3447              	.LBE6038:
 3448              	.LBB6039:
 3449              	.LBI6039:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3450              		.loc 4 41 10 is_stmt 1 view .LVU728
 3451              	.LBB6040:
 3452              	.LBI6040:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3453              		.loc 15 239 10 view .LVU729
 3454              	.LBB6041:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3455              		.loc 15 241 9 is_stmt 0 view .LVU730
 3456 00b0 7F29     		cmp	r1, #127
 3457 00b2 07D8     		bhi	.L144
 3458 00b4 BEF13F0F 		cmp	lr, #63
 3459 00b8 04D8     		bhi	.L144
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3460              		.loc 15 244 42 view .LVU731
 3461 00ba 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3462              		.loc 15 243 9 view .LVU732
 3463 00bc 9FB1     		cbz	r7, .L146
 3464              	.L163:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3465              		.loc 15 243 9 view .LVU733
 3466              	.LBE6041:
 3467              	.LBE6040:
 3468              	.LBE6039:
 3469              	.LBB6042:
 3470              	.LBB6034:
 3471              	.LBB6029:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3472              		.loc 15 244 42 view .LVU734
 3473 00be 4CEA0505 		orr	r5, ip, r5
 3474 00c2 1570     		strb	r5, [r2]
 3475              	.L144:
 3476              	.LBE6029:
 3477              	.LBE6034:
 3478              	.LBE6042:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3479              		.loc 5 416 13 is_stmt 1 discriminator 2 view .LVU735
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 242


 3480 00c4 0133     		adds	r3, r3, #1
 3481              	.LVL175:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3482              		.loc 5 416 26 discriminator 2 view .LVU736
 3483 00c6 0132     		adds	r2, r2, #1
 3484 00c8 0131     		adds	r1, r1, #1
 3485 00ca 9C42     		cmp	r4, r3
 3486 00cc 14D0     		beq	.L147
 3487              	.LVL176:
 3488              	.L148:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3489              		.loc 5 418 23 is_stmt 0 view .LVU737
 3490 00ce 06FA03F5 		lsl	r5, r6, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3491              		.loc 5 418 17 view .LVU738
 3492 00d2 2D04     		lsls	r5, r5, #16
 3493 00d4 ECD4     		bmi	.L166
 3494              	.LVL177:
 3495              	.LBB6043:
 3496              	.LBI6016:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3497              		.loc 4 41 10 is_stmt 1 view .LVU739
 3498              	.LBB6035:
 3499              	.LBI6017:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3500              		.loc 15 239 10 view .LVU740
 3501              	.LBB6030:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3502              		.loc 15 241 9 is_stmt 0 view .LVU741
 3503 00d6 7F29     		cmp	r1, #127
 3504 00d8 F4D8     		bhi	.L144
 3505 00da BEF13F0F 		cmp	lr, #63
 3506 00de F1D8     		bhi	.L144
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3507              		.loc 15 244 42 view .LVU742
 3508 00e0 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3509              		.loc 15 243 9 view .LVU743
 3510 00e2 002F     		cmp	r7, #0
 3511 00e4 EBD0     		beq	.L163
 3512              	.L146:
 3513              	.LVL178:
 3514              	.LBB6025:
 3515              	.LBI6019:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3516              		.loc 15 239 10 is_stmt 1 view .LVU744
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3517              		.loc 15 239 10 is_stmt 0 view .LVU745
 3518              	.LBE6025:
 3519              	.LBE6030:
 3520              	.LBE6035:
 3521              	.LBE6043:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3522              		.loc 5 416 13 view .LVU746
 3523 00e6 0133     		adds	r3, r3, #1
 3524              	.LVL179:
 3525              	.LBB6044:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 243


 3526              	.LBB6036:
 3527              	.LBB6031:
 3528              	.LBB6026:
 3529              	.LBB6022:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3530              		.loc 15 246 42 view .LVU747
 3531 00e8 09EA0505 		and	r5, r9, r5
 3532              	.LBE6022:
 3533              	.LBE6026:
 3534              	.LBE6031:
 3535              	.LBE6036:
 3536              	.LBE6044:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3537              		.loc 5 416 26 view .LVU748
 3538 00ec 0132     		adds	r2, r2, #1
 3539 00ee 0131     		adds	r1, r1, #1
 3540 00f0 9C42     		cmp	r4, r3
 3541              	.LBB6045:
 3542              	.LBB6037:
 3543              	.LBB6032:
 3544              	.LBB6027:
 3545              	.LBB6023:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3546              		.loc 15 246 42 view .LVU749
 3547 00f2 02F8015C 		strb	r5, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3548              		.loc 15 246 42 view .LVU750
 3549              	.LBE6023:
 3550              	.LBE6027:
 3551              	.LBE6032:
 3552              	.LBE6037:
 3553              	.LBE6045:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3554              		.loc 5 416 13 is_stmt 1 view .LVU751
 3555              	.LVL180:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3556              		.loc 5 416 26 view .LVU752
 3557 00f6 EAD1     		bne	.L148
 3558              	.LVL181:
 3559              	.L147:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3560              		.loc 5 413 9 view .LVU753
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3561              		.loc 5 413 22 view .LVU754
 3562 00f8 5845     		cmp	r0, fp
 3563 00fa 0EF1010E 		add	lr, lr, #1
 3564 00fe C0D1     		bne	.L142
 3565              	.LVL182:
 3566              	.L141:
 3567              	.LBB6046:
 3568              	.LBB6047:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3569              		.loc 5 173 33 is_stmt 0 view .LVU755
 3570 0100 D8F80030 		ldr	r3, [r8]
 3571              	.LBE6047:
 3572              	.LBE6046:
 3573              		.loc 5 434 18 view .LVU756
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 244


 3574 0104 5444     		add	r4, r4, r10
 3575 0106 2449     		ldr	r1, .L172
 3576              	.LBB6053:
 3577              	.LBB6048:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3578              		.loc 5 173 33 view .LVU757
 3579 0108 DA68     		ldr	r2, [r3, #12]
 3580              	.LBE6048:
 3581              	.LBE6053:
 3582              		.loc 5 434 18 view .LVU758
 3583 010a A4B2     		uxth	r4, r4
 3584              	.LVL183:
 3585              	.LBB6054:
 3586              	.LBI6046:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 3587              		.loc 5 171 10 is_stmt 1 view .LVU759
 3588              	.LBB6049:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3589              		.loc 5 173 9 view .LVU760
 3590 010c 8A42     		cmp	r2, r1
 3591 010e 2DD1     		bne	.L167
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3592              		.loc 5 173 33 is_stmt 0 view .LVU761
 3593 0110 8020     		movs	r0, #128
 3594              	.L149:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3595              		.loc 5 173 19 view .LVU762
 3596 0112 8442     		cmp	r4, r0
 3597 0114 1CD2     		bcs	.L168
 3598              	.LVL184:
 3599              	.L150:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3600              		.loc 5 174 34 view .LVU763
 3601 0116 9B68     		ldr	r3, [r3, #8]
 3602 0118 204A     		ldr	r2, .L172+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3603              		.loc 5 173 19 view .LVU764
 3604 011a A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3605              		.loc 5 174 9 is_stmt 1 view .LVU765
 3606 011e 9342     		cmp	r3, r2
 3607 0120 21D1     		bne	.L169
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3608              		.loc 5 174 34 is_stmt 0 view .LVU766
 3609 0122 4020     		movs	r0, #64
 3610              	.L152:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3611              		.loc 5 174 19 view .LVU767
 3612 0124 019B     		ldr	r3, [sp, #4]
 3613 0126 8342     		cmp	r3, r0
 3614 0128 07D3     		bcc	.L153
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3615              		.loc 5 174 46 view .LVU768
 3616 012a D8F80030 		ldr	r3, [r8]
 3617 012e 1B4A     		ldr	r2, .L172+4
 3618 0130 9B68     		ldr	r3, [r3, #8]
 3619 0132 9342     		cmp	r3, r2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 245


 3620 0134 29D1     		bne	.L170
 3621 0136 3F23     		movs	r3, #63
 3622 0138 0193     		str	r3, [sp, #4]
 3623              	.LVL185:
 3624              	.L153:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3625              		.loc 5 174 19 view .LVU769
 3626 013a DDE90003 		ldrd	r0, r3, [sp]
 3627 013e A8F80630 		strh	r3, [r8, #6]	@ movhi
 3628              	.LVL186:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3629              		.loc 5 174 19 view .LVU770
 3630              	.LBE6049:
 3631              	.LBE6054:
 435:../../libdaisy/src/hid/disp/display.h **** 
 436:../../libdaisy/src/hid/disp/display.h ****         // Return written char for validation
 437:../../libdaisy/src/hid/disp/display.h ****         return ch;
 438:../../libdaisy/src/hid/disp/display.h ****     }
 3632              		.loc 5 438 5 view .LVU771
 3633 0142 05B0     		add	sp, sp, #20
 3634              		.cfi_remember_state
 3635              		.cfi_def_cfa_offset 36
 3636              		@ sp needed
 3637 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3638              	.LVL187:
 3639              	.L137:
 3640              		.cfi_restore_state
 402:../../libdaisy/src/hid/disp/display.h **** 
 3641              		.loc 5 402 20 view .LVU772
 3642 0148 0020     		movs	r0, #0
 3643              		.loc 5 438 5 view .LVU773
 3644 014a 05B0     		add	sp, sp, #20
 3645              		.cfi_remember_state
 3646              		.cfi_def_cfa_offset 36
 3647              		@ sp needed
 3648 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3649              	.LVL188:
 3650              	.L168:
 3651              		.cfi_restore_state
 3652              	.LBB6055:
 3653              	.LBB6050:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3654              		.loc 5 173 44 view .LVU774
 3655 0150 DA68     		ldr	r2, [r3, #12]
 3656 0152 1149     		ldr	r1, .L172
 3657 0154 8A42     		cmp	r2, r1
 3658 0156 11D1     		bne	.L171
 3659 0158 7F24     		movs	r4, #127
 3660              	.LVL189:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3661              		.loc 5 173 44 view .LVU775
 3662 015a DCE7     		b	.L150
 3663              	.LVL190:
 3664              	.L164:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3665              		.loc 5 173 44 view .LVU776
 3666              	.LBE6050:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 246


 3667              	.LBE6055:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3668              		.loc 5 405 17 view .LVU777
 3669 015c 9847     		blx	r3
 3670              	.LVL191:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3671              		.loc 5 405 17 view .LVU778
 3672 015e 6AE7     		b	.L136
 3673              	.L165:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3674              		.loc 5 406 21 discriminator 2 view .LVU779
 3675 0160 4046     		mov	r0, r8
 3676 0162 9847     		blx	r3
 3677              	.LVL192:
 3678 0164 75E7     		b	.L138
 3679              	.LVL193:
 3680              	.L169:
 3681              	.LBB6056:
 3682              	.LBB6051:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3683              		.loc 5 174 33 view .LVU780
 3684 0166 4046     		mov	r0, r8
 3685 0168 9847     		blx	r3
 3686              	.LVL194:
 3687 016a DBE7     		b	.L152
 3688              	.LVL195:
 3689              	.L167:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3690              		.loc 5 173 32 view .LVU781
 3691 016c 4046     		mov	r0, r8
 3692 016e 9047     		blx	r2
 3693              	.LVL196:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3694              		.loc 5 173 44 view .LVU782
 3695 0170 D8F80030 		ldr	r3, [r8]
 3696 0174 CDE7     		b	.L149
 3697              	.LVL197:
 3698              	.L139:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3699              		.loc 5 173 44 view .LVU783
 3700              	.LBE6051:
 3701              	.LBE6056:
 434:../../libdaisy/src/hid/disp/display.h **** 
 3702              		.loc 5 434 19 view .LVU784
 3703 0176 B8F804A0 		ldrh	r10, [r8, #4]
 3704 017a C1E7     		b	.L141
 3705              	.LVL198:
 3706              	.L171:
 3707              	.LBB6057:
 3708              	.LBB6052:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3709              		.loc 5 173 43 view .LVU785
 3710 017c 4046     		mov	r0, r8
 3711 017e 9047     		blx	r2
 3712              	.LVL199:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3713              		.loc 5 173 19 view .LVU786
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 247


 3714 0180 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3715              		.loc 5 174 34 view .LVU787
 3716 0182 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3717              		.loc 5 173 19 view .LVU788
 3718 0186 84B2     		uxth	r4, r0
 3719              	.LVL200:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 3720              		.loc 5 173 19 view .LVU789
 3721 0188 C5E7     		b	.L150
 3722              	.L170:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3723              		.loc 5 174 45 view .LVU790
 3724 018a 4046     		mov	r0, r8
 3725 018c 9847     		blx	r3
 3726              	.LVL201:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3727              		.loc 5 174 19 view .LVU791
 3728 018e 0138     		subs	r0, r0, #1
 3729 0190 83B2     		uxth	r3, r0
 3730 0192 0193     		str	r3, [sp, #4]
 3731              	.LVL202:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 3732              		.loc 5 174 19 view .LVU792
 3733 0194 D1E7     		b	.L153
 3734              	.L173:
 3735 0196 00BF     		.align	2
 3736              	.L172:
 3737 0198 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 3738 019c 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 3739              	.LBE6052:
 3740              	.LBE6057:
 3741              		.cfi_endproc
 3742              	.LFE5778:
 3744              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 3745              		.align	1
 3746              		.p2align 2,,3
 3747              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 3748              		.syntax unified
 3749              		.thumb
 3750              		.thumb_func
 3751              		.fpu fpv5-d16
 3753              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 3754              	.LVL203:
 3755              	.LFB5564:
 439:../../libdaisy/src/hid/disp/display.h **** 
 440:../../libdaisy/src/hid/disp/display.h ****     char WriteString(const char* str, FontDef font, bool on) override
 3756              		.loc 5 440 10 is_stmt 1 view -0
 3757              		.cfi_startproc
 3758              		@ args = 4, pretend = 0, frame = 32
 3759              		@ frame_needed = 0, uses_anonymous_args = 0
 3760              		.loc 5 440 10 is_stmt 0 view .LVU794
 3761 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3762              		.cfi_def_cfa_offset 36
 3763              		.cfi_offset 4, -36
 3764              		.cfi_offset 5, -32
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 248


 3765              		.cfi_offset 6, -28
 3766              		.cfi_offset 7, -24
 3767              		.cfi_offset 8, -20
 3768              		.cfi_offset 9, -16
 3769              		.cfi_offset 10, -12
 3770              		.cfi_offset 11, -8
 3771              		.cfi_offset 14, -4
 3772 0004 89B0     		sub	sp, sp, #36
 3773              		.cfi_def_cfa_offset 72
 3774              		.loc 5 440 10 view .LVU795
 3775 0006 08AC     		add	r4, sp, #32
 3776 0008 9DF84870 		ldrb	r7, [sp, #72]	@ zero_extendqisi2
 3777 000c 0191     		str	r1, [sp, #4]
 3778 000e 04E90C00 		stmdb	r4, {r2, r3}
 441:../../libdaisy/src/hid/disp/display.h ****     {
 442:../../libdaisy/src/hid/disp/display.h ****         // Write until null-byte
 443:../../libdaisy/src/hid/disp/display.h ****         while(*str)
 3779              		.loc 5 443 9 is_stmt 1 view .LVU796
 3780 0012 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3781 0014 002B     		cmp	r3, #0
 3782 0016 00F0AB80 		beq	.L198
 3783 001a 1A46     		mov	r2, r3
 3784 001c 9DF81880 		ldrb	r8, [sp, #24]	@ zero_extendqisi2
 3785 0020 9DF81930 		ldrb	r3, [sp, #25]	@ zero_extendqisi2
 3786 0024 0646     		mov	r6, r0
 3787 0026 4546     		mov	r5, r8
 3788 0028 9046     		mov	r8, r2
 3789 002a 0393     		str	r3, [sp, #12]
 3790 002c 079B     		ldr	r3, [sp, #28]
 3791 002e 0593     		str	r3, [sp, #20]
 3792              	.LVL204:
 3793              	.L199:
 3794              	.LBB6086:
 3795              	.LBI6086:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 3796              		.loc 5 396 10 view .LVU797
 3797              	.LBB6087:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3798              		.loc 5 401 20 is_stmt 0 view .LVU798
 3799 0030 A8F12004 		sub	r4, r8, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 3800              		.loc 5 401 9 view .LVU799
 3801 0034 E3B2     		uxtb	r3, r4
 3802 0036 5E2B     		cmp	r3, #94
 3803 0038 00F29E80 		bhi	.L180
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3804              		.loc 5 405 17 view .LVU800
 3805 003c 3368     		ldr	r3, [r6]
 3806 003e 5E4A     		ldr	r2, .L220
 3807 0040 DB68     		ldr	r3, [r3, #12]
 3808 0042 9342     		cmp	r3, r2
 3809 0044 40F09B80 		bne	.L213
 3810 0048 8020     		movs	r0, #128
 3811              	.L179:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3812              		.loc 5 405 23 view .LVU801
 3813 004a B388     		ldrh	r3, [r6, #4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 249


 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 3814              		.loc 5 405 33 view .LVU802
 3815 004c 2B44     		add	r3, r3, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3816              		.loc 5 406 12 view .LVU803
 3817 004e 8342     		cmp	r3, r0
 3818 0050 00F39280 		bgt	.L180
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3819              		.loc 5 406 21 view .LVU804
 3820 0054 3368     		ldr	r3, [r6]
 3821 0056 594A     		ldr	r2, .L220+4
 3822 0058 9B68     		ldr	r3, [r3, #8]
 3823 005a 9342     		cmp	r3, r2
 3824 005c 40F09280 		bne	.L214
 3825 0060 4020     		movs	r0, #64
 3826              	.L181:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3827              		.loc 5 406 27 view .LVU805
 3828 0062 F188     		ldrh	r1, [r6, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3829              		.loc 5 406 37 view .LVU806
 3830 0064 039A     		ldr	r2, [sp, #12]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3831              		.loc 5 406 27 view .LVU807
 3832 0066 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3833              		.loc 5 406 37 view .LVU808
 3834 0068 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 3835              		.loc 5 406 12 view .LVU809
 3836 006a 8342     		cmp	r3, r0
 3837 006c 00F38480 		bgt	.L180
 3838              	.LVL205:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 3839              		.loc 5 413 22 is_stmt 1 view .LVU810
 3840 0070 002A     		cmp	r2, #0
 3841 0072 00F09180 		beq	.L182
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3842              		.loc 5 415 37 is_stmt 0 view .LVU811
 3843 0076 02FB04F4 		mul	r4, r2, r4
 3844 007a 6FF00049 		mvn	r9, #-2147483648
 3845 007e 059B     		ldr	r3, [sp, #20]
 3846 0080 A144     		add	r9, r9, r4
 3847 0082 1444     		add	r4, r4, r2
 434:../../libdaisy/src/hid/disp/display.h **** 
 3848              		.loc 5 434 19 view .LVU812
 3849 0084 B6F804B0 		ldrh	fp, [r6, #4]
 3850 0088 03EB4909 		add	r9, r3, r9, lsl #1
 3851 008c 023B     		subs	r3, r3, #2
 3852 008e CDF81080 		str	r8, [sp, #16]
 3853 0092 03EB4403 		add	r3, r3, r4, lsl #1
 3854 0096 0C46     		mov	r4, r1
 3855 0098 9A46     		mov	r10, r3
 3856              	.LVL206:
 3857              	.L185:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 3858              		.loc 5 415 15 view .LVU813
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 250


 3859 009a 39F802CF 		ldrh	ip, [r9, #2]!
 3860              	.LVL207:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3861              		.loc 5 416 26 is_stmt 1 view .LVU814
 3862 009e A5B3     		cbz	r5, .L190
 3863              	.LBB6088:
 3864              	.LBB6089:
 3865              	.LBB6090:
 3866              	.LBB6091:
 3867              	.LBB6092:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3868              		.loc 15 246 55 is_stmt 0 view .LVU815
 3869 00a0 04F00703 		and	r3, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3870              		.loc 15 246 49 view .LVU816
 3871 00a4 4FF0010E 		mov	lr, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3872              		.loc 15 246 28 view .LVU817
 3873 00a8 E208     		lsrs	r2, r4, #3
 3874 00aa 5946     		mov	r1, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3875              		.loc 15 246 49 view .LVU818
 3876 00ac 0EFA03FE 		lsl	lr, lr, r3
 3877 00b0 0BF11403 		add	r3, fp, #20
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3878              		.loc 15 246 42 view .LVU819
 3879 00b4 4FFA8EFE 		sxtb	lr, lr
 3880 00b8 03EBC212 		add	r2, r3, r2, lsl #7
 3881              	.LBE6092:
 3882              	.LBE6091:
 3883              	.LBE6090:
 3884              	.LBE6089:
 3885              	.LBE6088:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3886              		.loc 5 416 19 view .LVU820
 3887 00bc 0023     		movs	r3, #0
 3888              	.LBB6110:
 3889              	.LBB6105:
 3890              	.LBB6100:
 3891              	.LBB6096:
 3892              	.LBB6093:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3893              		.loc 15 246 42 view .LVU821
 3894 00be 6FEA0E08 		mvn	r8, lr
 3895 00c2 3244     		add	r2, r2, r6
 3896 00c4 0DE0     		b	.L191
 3897              	.LVL208:
 3898              	.L215:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3899              		.loc 15 246 42 view .LVU822
 3900              	.LBE6093:
 3901              	.LBE6096:
 3902              	.LBE6100:
 3903              	.LBE6105:
 3904              	.LBE6110:
 3905              	.LBB6111:
 3906              	.LBI6111:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 251


  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3907              		.loc 4 41 10 is_stmt 1 view .LVU823
 3908              	.LBB6112:
 3909              	.LBI6112:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3910              		.loc 15 239 10 view .LVU824
 3911              	.LBB6113:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3912              		.loc 15 241 9 is_stmt 0 view .LVU825
 3913 00c6 7F29     		cmp	r1, #127
 3914 00c8 06D8     		bhi	.L187
 3915 00ca 3F2C     		cmp	r4, #63
 3916 00cc 04D8     		bhi	.L187
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3917              		.loc 15 244 42 view .LVU826
 3918 00ce 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3919              		.loc 15 243 9 view .LVU827
 3920 00d0 97B1     		cbz	r7, .L189
 3921              	.L212:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3922              		.loc 15 243 9 view .LVU828
 3923              	.LBE6113:
 3924              	.LBE6112:
 3925              	.LBE6111:
 3926              	.LBB6114:
 3927              	.LBB6106:
 3928              	.LBB6101:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3929              		.loc 15 244 42 view .LVU829
 3930 00d2 4EEA0000 		orr	r0, lr, r0
 3931 00d6 1070     		strb	r0, [r2]
 3932              	.L187:
 3933              	.LBE6101:
 3934              	.LBE6106:
 3935              	.LBE6114:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3936              		.loc 5 416 13 is_stmt 1 view .LVU830
 3937 00d8 0133     		adds	r3, r3, #1
 3938              	.LVL209:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3939              		.loc 5 416 26 view .LVU831
 3940 00da 0132     		adds	r2, r2, #1
 3941 00dc 0131     		adds	r1, r1, #1
 3942 00de AB42     		cmp	r3, r5
 3943 00e0 13D0     		beq	.L190
 3944              	.LVL210:
 3945              	.L191:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3946              		.loc 5 418 23 is_stmt 0 view .LVU832
 3947 00e2 0CFA03F0 		lsl	r0, ip, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 3948              		.loc 5 418 17 view .LVU833
 3949 00e6 0004     		lsls	r0, r0, #16
 3950 00e8 EDD4     		bmi	.L215
 3951              	.LVL211:
 3952              	.LBB6115:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 252


 3953              	.LBI6088:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 3954              		.loc 4 41 10 is_stmt 1 view .LVU834
 3955              	.LBB6107:
 3956              	.LBI6089:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3957              		.loc 15 239 10 view .LVU835
 3958              	.LBB6102:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 3959              		.loc 15 241 9 is_stmt 0 view .LVU836
 3960 00ea 7F29     		cmp	r1, #127
 3961 00ec F4D8     		bhi	.L187
 3962 00ee 3F2C     		cmp	r4, #63
 3963 00f0 F2D8     		bhi	.L187
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 3964              		.loc 15 244 42 view .LVU837
 3965 00f2 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 3966              		.loc 15 243 9 view .LVU838
 3967 00f4 002F     		cmp	r7, #0
 3968 00f6 ECD0     		beq	.L212
 3969              	.L189:
 3970              	.LVL212:
 3971              	.LBB6097:
 3972              	.LBI6091:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3973              		.loc 15 239 10 is_stmt 1 view .LVU839
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 3974              		.loc 15 239 10 is_stmt 0 view .LVU840
 3975              	.LBE6097:
 3976              	.LBE6102:
 3977              	.LBE6107:
 3978              	.LBE6115:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3979              		.loc 5 416 13 view .LVU841
 3980 00f8 0133     		adds	r3, r3, #1
 3981              	.LVL213:
 3982              	.LBB6116:
 3983              	.LBB6108:
 3984              	.LBB6103:
 3985              	.LBB6098:
 3986              	.LBB6094:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 3987              		.loc 15 246 42 view .LVU842
 3988 00fa 08EA0000 		and	r0, r8, r0
 3989              	.LBE6094:
 3990              	.LBE6098:
 3991              	.LBE6103:
 3992              	.LBE6108:
 3993              	.LBE6116:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 3994              		.loc 5 416 26 view .LVU843
 3995 00fe 0132     		adds	r2, r2, #1
 3996 0100 0131     		adds	r1, r1, #1
 3997 0102 AB42     		cmp	r3, r5
 3998              	.LBB6117:
 3999              	.LBB6109:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 253


 4000              	.LBB6104:
 4001              	.LBB6099:
 4002              	.LBB6095:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4003              		.loc 15 246 42 view .LVU844
 4004 0104 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4005              		.loc 15 246 42 view .LVU845
 4006              	.LBE6095:
 4007              	.LBE6099:
 4008              	.LBE6104:
 4009              	.LBE6109:
 4010              	.LBE6117:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4011              		.loc 5 416 13 is_stmt 1 view .LVU846
 4012              	.LVL214:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4013              		.loc 5 416 26 view .LVU847
 4014 0108 EBD1     		bne	.L191
 4015              	.LVL215:
 4016              	.L190:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 4017              		.loc 5 413 9 view .LVU848
 413:../../libdaisy/src/hid/disp/display.h ****         {
 4018              		.loc 5 413 22 view .LVU849
 4019 010a D145     		cmp	r9, r10
 4020 010c 04F10104 		add	r4, r4, #1
 4021 0110 C3D1     		bne	.L185
 4022 0112 DDF81080 		ldr	r8, [sp, #16]
 4023              	.LVL216:
 4024              	.L184:
 4025              	.LBB6118:
 4026              	.LBB6119:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4027              		.loc 5 173 33 is_stmt 0 view .LVU850
 4028 0116 3268     		ldr	r2, [r6]
 4029              	.LBE6119:
 4030              	.LBE6118:
 434:../../libdaisy/src/hid/disp/display.h **** 
 4031              		.loc 5 434 18 view .LVU851
 4032 0118 0BEB0504 		add	r4, fp, r5
 4033 011c 2649     		ldr	r1, .L220
 4034              	.LBB6124:
 4035              	.LBB6120:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4036              		.loc 5 173 33 view .LVU852
 4037 011e D368     		ldr	r3, [r2, #12]
 4038              	.LBE6120:
 4039              	.LBE6124:
 434:../../libdaisy/src/hid/disp/display.h **** 
 4040              		.loc 5 434 18 view .LVU853
 4041 0120 A4B2     		uxth	r4, r4
 4042              	.LVL217:
 4043              	.LBB6125:
 4044              	.LBI6118:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 4045              		.loc 5 171 10 is_stmt 1 view .LVU854
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 254


 4046              	.LBB6121:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4047              		.loc 5 173 9 view .LVU855
 4048 0122 8B42     		cmp	r3, r1
 4049 0124 34D1     		bne	.L216
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4050              		.loc 5 173 33 is_stmt 0 view .LVU856
 4051 0126 8020     		movs	r0, #128
 4052              	.L192:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4053              		.loc 5 173 19 view .LVU857
 4054 0128 8442     		cmp	r4, r0
 4055 012a 04D3     		bcc	.L193
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4056              		.loc 5 173 44 view .LVU858
 4057 012c D368     		ldr	r3, [r2, #12]
 4058 012e 2249     		ldr	r1, .L220
 4059 0130 8B42     		cmp	r3, r1
 4060 0132 3AD1     		bne	.L217
 4061 0134 7F24     		movs	r4, #127
 4062              	.LVL218:
 4063              	.L193:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4064              		.loc 5 174 34 view .LVU859
 4065 0136 9368     		ldr	r3, [r2, #8]
 4066 0138 204A     		ldr	r2, .L220+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4067              		.loc 5 173 19 view .LVU860
 4068 013a B480     		strh	r4, [r6, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4069              		.loc 5 174 9 is_stmt 1 view .LVU861
 4070 013c 9342     		cmp	r3, r2
 4071 013e 24D1     		bne	.L218
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4072              		.loc 5 174 34 is_stmt 0 view .LVU862
 4073 0140 4020     		movs	r0, #64
 4074              	.L195:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4075              		.loc 5 174 19 view .LVU863
 4076 0142 029B     		ldr	r3, [sp, #8]
 4077 0144 8342     		cmp	r3, r0
 4078 0146 06D3     		bcc	.L196
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4079              		.loc 5 174 46 view .LVU864
 4080 0148 3368     		ldr	r3, [r6]
 4081 014a 1C4A     		ldr	r2, .L220+4
 4082 014c 9B68     		ldr	r3, [r3, #8]
 4083 014e 9342     		cmp	r3, r2
 4084 0150 25D1     		bne	.L219
 4085 0152 3F23     		movs	r3, #63
 4086 0154 0293     		str	r3, [sp, #8]
 4087              	.LVL219:
 4088              	.L196:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4089              		.loc 5 174 19 view .LVU865
 4090 0156 029B     		ldr	r3, [sp, #8]
 4091 0158 F380     		strh	r3, [r6, #6]	@ movhi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 255


 4092              	.LVL220:
 4093              	.L178:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4094              		.loc 5 174 19 view .LVU866
 4095              	.LBE6121:
 4096              	.LBE6125:
 4097              	.LBE6087:
 4098              	.LBE6086:
 444:../../libdaisy/src/hid/disp/display.h ****         {
 445:../../libdaisy/src/hid/disp/display.h ****             if(((ChildType*)(this))->ChildType::WriteChar(*str, font, on)
 446:../../libdaisy/src/hid/disp/display.h ****                != *str)
 4099              		.loc 5 446 16 view .LVU867
 4100 015a 019B     		ldr	r3, [sp, #4]
 4101 015c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 4102              		.loc 5 445 13 view .LVU868
 4103 015e 4045     		cmp	r0, r8
 4104 0160 07D1     		bne	.L176
 4105              	.LVL221:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 4106              		.loc 5 443 9 is_stmt 1 view .LVU869
 4107 0162 13F8018F 		ldrb	r8, [r3, #1]!	@ zero_extendqisi2
 4108              	.LVL222:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 4109              		.loc 5 443 9 is_stmt 0 view .LVU870
 4110 0166 0193     		str	r3, [sp, #4]
 4111 0168 B8F1000F 		cmp	r8, #0
 4112 016c 7FF460AF 		bne	.L199
 4113              	.LVL223:
 4114              	.L198:
 4115              	.LBB6130:
 4116              	.LBB6128:
 402:../../libdaisy/src/hid/disp/display.h **** 
 4117              		.loc 5 402 20 view .LVU871
 4118 0170 0020     		movs	r0, #0
 4119              	.L176:
 4120              	.LBE6128:
 4121              	.LBE6130:
 447:../../libdaisy/src/hid/disp/display.h ****             {
 448:../../libdaisy/src/hid/disp/display.h ****                 // Char could not be written
 449:../../libdaisy/src/hid/disp/display.h ****                 return *str;
 450:../../libdaisy/src/hid/disp/display.h ****             }
 451:../../libdaisy/src/hid/disp/display.h **** 
 452:../../libdaisy/src/hid/disp/display.h ****             // Next char
 453:../../libdaisy/src/hid/disp/display.h ****             str++;
 454:../../libdaisy/src/hid/disp/display.h ****         }
 455:../../libdaisy/src/hid/disp/display.h **** 
 456:../../libdaisy/src/hid/disp/display.h ****         // Everything ok
 457:../../libdaisy/src/hid/disp/display.h ****         return *str;
 458:../../libdaisy/src/hid/disp/display.h ****     }
 4122              		.loc 5 458 5 view .LVU872
 4123 0172 09B0     		add	sp, sp, #36
 4124              		.cfi_remember_state
 4125              		.cfi_def_cfa_offset 36
 4126              		@ sp needed
 4127 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4128              	.LVL224:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 256


 4129              	.L180:
 4130              		.cfi_restore_state
 4131              	.LBB6131:
 4132              	.LBB6129:
 402:../../libdaisy/src/hid/disp/display.h **** 
 4133              		.loc 5 402 20 view .LVU873
 4134 0178 4FF00008 		mov	r8, #0
 4135              	.LVL225:
 402:../../libdaisy/src/hid/disp/display.h **** 
 4136              		.loc 5 402 20 view .LVU874
 4137 017c EDE7     		b	.L178
 4138              	.LVL226:
 4139              	.L213:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 4140              		.loc 5 405 17 view .LVU875
 4141 017e 3046     		mov	r0, r6
 4142 0180 9847     		blx	r3
 4143              	.LVL227:
 4144 0182 62E7     		b	.L179
 4145              	.L214:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4146              		.loc 5 406 21 view .LVU876
 4147 0184 3046     		mov	r0, r6
 4148 0186 9847     		blx	r3
 4149              	.LVL228:
 4150 0188 6BE7     		b	.L181
 4151              	.LVL229:
 4152              	.L218:
 4153              	.LBB6126:
 4154              	.LBB6122:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4155              		.loc 5 174 33 view .LVU877
 4156 018a 3046     		mov	r0, r6
 4157 018c 9847     		blx	r3
 4158              	.LVL230:
 4159 018e D8E7     		b	.L195
 4160              	.LVL231:
 4161              	.L216:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4162              		.loc 5 173 32 view .LVU878
 4163 0190 3046     		mov	r0, r6
 4164 0192 9847     		blx	r3
 4165              	.LVL232:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4166              		.loc 5 173 44 view .LVU879
 4167 0194 3268     		ldr	r2, [r6]
 4168 0196 C7E7     		b	.L192
 4169              	.LVL233:
 4170              	.L182:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4171              		.loc 5 173 44 view .LVU880
 4172              	.LBE6122:
 4173              	.LBE6126:
 434:../../libdaisy/src/hid/disp/display.h **** 
 4174              		.loc 5 434 19 view .LVU881
 4175 0198 B6F804B0 		ldrh	fp, [r6, #4]
 4176 019c BBE7     		b	.L184
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 257


 4177              	.LVL234:
 4178              	.L219:
 4179              	.LBB6127:
 4180              	.LBB6123:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4181              		.loc 5 174 45 view .LVU882
 4182 019e 3046     		mov	r0, r6
 4183 01a0 9847     		blx	r3
 4184              	.LVL235:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4185              		.loc 5 174 19 view .LVU883
 4186 01a2 431E     		subs	r3, r0, #1
 4187 01a4 9BB2     		uxth	r3, r3
 4188 01a6 0293     		str	r3, [sp, #8]
 4189              	.LVL236:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4190              		.loc 5 174 19 view .LVU884
 4191 01a8 D5E7     		b	.L196
 4192              	.LVL237:
 4193              	.L217:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4194              		.loc 5 173 43 view .LVU885
 4195 01aa 3046     		mov	r0, r6
 4196 01ac 9847     		blx	r3
 4197              	.LVL238:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4198              		.loc 5 173 19 view .LVU886
 4199 01ae 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 4200              		.loc 5 174 34 view .LVU887
 4201 01b0 3268     		ldr	r2, [r6]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4202              		.loc 5 173 19 view .LVU888
 4203 01b2 84B2     		uxth	r4, r0
 4204              	.LVL239:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 4205              		.loc 5 173 19 view .LVU889
 4206 01b4 BFE7     		b	.L193
 4207              	.L221:
 4208 01b6 00BF     		.align	2
 4209              	.L220:
 4210 01b8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 4211 01bc 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 4212              	.LBE6123:
 4213              	.LBE6127:
 4214              	.LBE6129:
 4215              	.LBE6131:
 4216              		.cfi_endproc
 4217              	.LFE5564:
 4219              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 4220              		.align	1
 4221              		.p2align 2,,3
 4222              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 4223              		.syntax unified
 4224              		.thumb
 4225              		.thumb_func
 4226              		.fpu fpv5-d16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 258


 4228              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjj
 4229              	.LVL240:
 4230              	.LFB5773:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4231              		.loc 4 41 10 is_stmt 1 view -0
 4232              		.cfi_startproc
 4233              		@ args = 0, pretend = 0, frame = 0
 4234              		@ frame_needed = 0, uses_anonymous_args = 0
 4235              		@ link register save eliminated.
 4236              	.LBB6136:
 4237              	.LBI6136:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4238              		.loc 15 239 10 view .LVU891
 4239              	.LBB6137:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4240              		.loc 15 241 9 is_stmt 0 view .LVU892
 4241 0000 7F29     		cmp	r1, #127
 4242 0002 1ED8     		bhi	.L222
 4243 0004 3F2A     		cmp	r2, #63
 4244 0006 1CD8     		bhi	.L222
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4245              		.loc 15 243 9 view .LVU893
 4246 0008 6BB1     		cbz	r3, .L224
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4247              		.loc 15 244 28 view .LVU894
 4248 000a D308     		lsrs	r3, r2, #3
 4249              	.LVL241:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4250              		.loc 15 244 48 view .LVU895
 4251 000c 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4252              		.loc 15 244 54 view .LVU896
 4253 0010 02F00702 		and	r2, r2, #7
 4254              	.LVL242:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4255              		.loc 15 244 42 view .LVU897
 4256 0014 01EBC313 		add	r3, r1, r3, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4257              		.loc 15 244 48 view .LVU898
 4258 0018 0CFA02F2 		lsl	r2, ip, r2
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4259              		.loc 15 244 42 view .LVU899
 4260 001c C118     		adds	r1, r0, r3
 4261              	.LVL243:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4262              		.loc 15 244 42 view .LVU900
 4263 001e 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 4264 0020 1A43     		orrs	r2, r2, r3
 4265 0022 0A75     		strb	r2, [r1, #20]
 4266 0024 7047     		bx	lr
 4267              	.LVL244:
 4268              	.L224:
 4269              	.LBB6138:
 4270              	.LBI6138:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4271              		.loc 15 239 10 is_stmt 1 view .LVU901
 4272              	.LBB6139:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 259


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4273              		.loc 15 246 28 is_stmt 0 view .LVU902
 4274 0026 D308     		lsrs	r3, r2, #3
 4275              	.LVL245:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4276              		.loc 15 246 49 view .LVU903
 4277 0028 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4278              		.loc 15 246 55 view .LVU904
 4279 002c 02F00702 		and	r2, r2, #7
 4280              	.LVL246:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4281              		.loc 15 246 42 view .LVU905
 4282 0030 01EBC313 		add	r3, r1, r3, lsl #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4283              		.loc 15 246 49 view .LVU906
 4284 0034 0CFA02FC 		lsl	ip, ip, r2
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4285              		.loc 15 246 42 view .LVU907
 4286 0038 C118     		adds	r1, r0, r3
 4287              	.LVL247:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4288              		.loc 15 246 42 view .LVU908
 4289 003a 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 4290 003c 22EA0C02 		bic	r2, r2, ip
 4291 0040 0A75     		strb	r2, [r1, #20]
 4292              	.LVL248:
 4293              	.L222:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4294              		.loc 15 246 42 view .LVU909
 4295              	.LBE6139:
 4296              	.LBE6138:
 4297              	.LBE6137:
 4298              	.LBE6136:
  44:../../libdaisy/src/hid/disp/oled_display.h **** 
 4299              		.loc 4 44 5 view .LVU910
 4300 0042 7047     		bx	lr
 4301              		.cfi_endproc
 4302              	.LFE5773:
 4304              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4305              		.align	1
 4306              		.p2align 2,,3
 4307              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4308              		.syntax unified
 4309              		.thumb
 4310              		.thumb_func
 4311              		.fpu fpv5-d16
 4313              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4314              	.LVL249:
 4315              	.LFB5559:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 4316              		.loc 5 221 10 is_stmt 1 view -0
 4317              		.cfi_startproc
 4318              		@ args = 8, pretend = 0, frame = 8
 4319              		@ frame_needed = 0, uses_anonymous_args = 0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 4320              		.loc 5 221 10 is_stmt 0 view .LVU912
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 260


 4321 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4322              		.cfi_def_cfa_offset 36
 4323              		.cfi_offset 4, -36
 4324              		.cfi_offset 5, -32
 4325              		.cfi_offset 6, -28
 4326              		.cfi_offset 7, -24
 4327              		.cfi_offset 8, -20
 4328              		.cfi_offset 9, -16
 4329              		.cfi_offset 10, -12
 4330              		.cfi_offset 11, -8
 4331              		.cfi_offset 14, -4
 4332 0004 83B0     		sub	sp, sp, #12
 4333              		.cfi_def_cfa_offset 48
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 4334              		.loc 5 227 52 view .LVU913
 4335 0006 5C1A     		subs	r4, r3, r1
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 4336              		.loc 5 221 10 view .LVU914
 4337 0008 0C9E     		ldr	r6, [sp, #48]
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 4338              		.loc 5 227 22 view .LVU915
 4339 000a 002C     		cmp	r4, #0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 4340              		.loc 5 221 10 view .LVU916
 4341 000c 9DF83490 		ldrb	r9, [sp, #52]	@ zero_extendqisi2
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 4342              		.loc 5 228 52 view .LVU917
 4343 0010 A6EB0208 		sub	r8, r6, r2
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 4344              		.loc 5 227 22 view .LVU918
 4345 0014 B8BF     		it	lt
 4346 0016 6442     		rsblt	r4, r4, #0
 4347              	.LVL250:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 4348              		.loc 5 228 22 view .LVU919
 4349 0018 B8F1000F 		cmp	r8, #0
 4350 001c B8BF     		it	lt
 4351 001e C8F10008 		rsblt	r8, r8, #0
 4352              	.LVL251:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 4353              		.loc 5 229 42 view .LVU920
 4354 0022 8B42     		cmp	r3, r1
 4355 0024 8CBF     		ite	hi
 4356 0026 4FF0010A 		movhi	r10, #1
 4357 002a 4FF0FF3A 		movls	r10, #-1
 4358              	.LVL252:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4359              		.loc 5 230 42 view .LVU921
 4360 002e 9642     		cmp	r6, r2
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 4361              		.loc 5 231 22 view .LVU922
 4362 0030 A4EB080C 		sub	ip, r4, r8
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4363              		.loc 5 230 42 view .LVU923
 4364 0034 51D8     		bhi	.L227
 4365              	.LVL253:
 4366              	.LBB6156:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 261


 4367              	.LBI6156:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4368              		.loc 4 41 10 is_stmt 1 discriminator 4 view .LVU924
 4369              	.LBB6157:
 4370              	.LBI6157:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4371              		.loc 15 239 10 discriminator 4 view .LVU925
 4372              	.LBE6157:
 4373              	.LBE6156:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4374              		.loc 5 230 42 is_stmt 0 discriminator 4 view .LVU926
 4375 0036 4FF0FF35 		mov	r5, #-1
 4376              	.LBB6173:
 4377              	.LBB6167:
 4378              	.LBB6158:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4379              		.loc 15 241 9 discriminator 4 view .LVU927
 4380 003a 7F2B     		cmp	r3, #127
 4381              	.LBE6158:
 4382              	.LBE6167:
 4383              	.LBE6173:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4384              		.loc 5 230 42 discriminator 4 view .LVU928
 4385 003c 0195     		str	r5, [sp, #4]
 4386              	.LBB6174:
 4387              	.LBB6168:
 4388              	.LBB6163:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4389              		.loc 15 241 9 discriminator 4 view .LVU929
 4390 003e 12D8     		bhi	.L228
 4391 0040 3F2E     		cmp	r6, #63
 4392 0042 10D8     		bhi	.L228
 4393              	.LVL254:
 4394              	.L239:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4395              		.loc 15 244 28 view .LVU930
 4396 0044 F508     		lsrs	r5, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4397              		.loc 15 244 54 view .LVU931
 4398 0046 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4399              		.loc 15 244 48 view .LVU932
 4400 004a 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4401              		.loc 15 244 42 view .LVU933
 4402 004c 03EBC515 		add	r5, r3, r5, lsl #7
 4403 0050 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4404              		.loc 15 243 9 view .LVU934
 4405 0052 B9F1000F 		cmp	r9, #0
 4406 0056 47D0     		beq	.L229
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4407              		.loc 15 244 48 view .LVU935
 4408 0058 07FA0EF7 		lsl	r7, r7, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4409              		.loc 15 244 42 view .LVU936
 4410 005c 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 262


 4411 0060 47EA0E07 		orr	r7, r7, lr
 4412 0064 2F75     		strb	r7, [r5, #20]
 4413              	.LVL255:
 4414              	.L228:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4415              		.loc 15 244 42 view .LVU937
 4416              	.LBE6163:
 4417              	.LBE6168:
 4418              	.LBE6174:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4419              		.loc 5 239 26 is_stmt 1 view .LVU938
 4420 0066 9642     		cmp	r6, r2
 4421 0068 01D1     		bne	.L232
 4422              	.L251:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4423              		.loc 5 239 26 is_stmt 0 view .LVU939
 4424 006a 8B42     		cmp	r3, r1
 4425 006c 29D0     		beq	.L225
 4426              	.L232:
 4427              	.LVL256:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4428              		.loc 5 243 23 view .LVU940
 4429 006e C8F10007 		rsb	r7, r8, #0
 4430              	.L234:
 4431              	.LVL257:
 4432              	.LBB6175:
 4433              	.LBI6175:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4434              		.loc 4 41 10 is_stmt 1 view .LVU941
 4435              	.LBB6176:
 4436              	.LBI6176:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4437              		.loc 15 239 10 view .LVU942
 4438              	.LBB6177:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4439              		.loc 15 241 9 is_stmt 0 view .LVU943
 4440 0072 7F29     		cmp	r1, #127
 4441 0074 14D8     		bhi	.L235
 4442 0076 3F2A     		cmp	r2, #63
 4443 0078 12D8     		bhi	.L235
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4444              		.loc 15 244 28 view .LVU944
 4445 007a D508     		lsrs	r5, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4446              		.loc 15 244 54 view .LVU945
 4447 007c 02F0070B 		and	fp, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4448              		.loc 15 244 48 view .LVU946
 4449 0080 4FF0010E 		mov	lr, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4450              		.loc 15 244 42 view .LVU947
 4451 0084 01EBC515 		add	r5, r1, r5, lsl #7
 4452 0088 0544     		add	r5, r5, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4453              		.loc 15 243 9 view .LVU948
 4454 008a B9F1000F 		cmp	r9, #0
 4455 008e 1BD0     		beq	.L236
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 263


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4456              		.loc 15 244 48 view .LVU949
 4457 0090 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4458              		.loc 15 244 42 view .LVU950
 4459 0094 95F814B0 		ldrb	fp, [r5, #20]	@ zero_extendqisi2
 4460 0098 4EEA0B0E 		orr	lr, lr, fp
 4461 009c 85F814E0 		strb	lr, [r5, #20]
 4462              	.L235:
 4463              	.LVL258:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4464              		.loc 15 244 42 view .LVU951
 4465              	.LBE6177:
 4466              	.LBE6176:
 4467              	.LBE6175:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4468              		.loc 5 243 13 view .LVU952
 4469 00a0 B7EB4C0F 		cmp	r7, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 4470              		.loc 5 242 20 view .LVU953
 4471 00a4 4FEA4C05 		lsl	r5, ip, #1
 4472              	.LVL259:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 4473              		.loc 5 243 13 view .LVU954
 4474 00a8 02DA     		bge	.L237
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 4475              		.loc 5 245 23 view .LVU955
 4476 00aa ACEB080C 		sub	ip, ip, r8
 4477              	.LVL260:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 4478              		.loc 5 246 20 view .LVU956
 4479 00ae 5144     		add	r1, r1, r10
 4480              	.LVL261:
 4481              	.L237:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 4482              		.loc 5 249 13 view .LVU957
 4483 00b0 AC42     		cmp	r4, r5
 4484 00b2 02DD     		ble	.L238
 252:../../libdaisy/src/hid/disp/display.h ****             }
 4485              		.loc 5 252 20 view .LVU958
 4486 00b4 019D     		ldr	r5, [sp, #4]
 4487              	.LVL262:
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 4488              		.loc 5 251 23 view .LVU959
 4489 00b6 A444     		add	ip, ip, r4
 4490              	.LVL263:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 4491              		.loc 5 252 20 view .LVU960
 4492 00b8 2A44     		add	r2, r2, r5
 4493              	.LVL264:
 4494              	.L238:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4495              		.loc 5 239 26 is_stmt 1 view .LVU961
 4496 00ba 9942     		cmp	r1, r3
 4497 00bc D9D1     		bne	.L234
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4498              		.loc 5 239 26 is_stmt 0 view .LVU962
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 264


 4499 00be 9642     		cmp	r6, r2
 4500 00c0 D7D1     		bne	.L234
 4501              	.L225:
 255:../../libdaisy/src/hid/disp/display.h **** 
 4502              		.loc 5 255 5 view .LVU963
 4503 00c2 03B0     		add	sp, sp, #12
 4504              		.cfi_remember_state
 4505              		.cfi_def_cfa_offset 36
 4506              		@ sp needed
 4507 00c4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4508              	.LVL265:
 4509              	.L236:
 4510              		.cfi_restore_state
 4511              	.LBB6182:
 4512              	.LBB6181:
 4513              	.LBB6180:
 4514              	.LBB6178:
 4515              	.LBI6178:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4516              		.loc 15 239 10 is_stmt 1 view .LVU964
 4517              	.LBB6179:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4518              		.loc 15 246 49 is_stmt 0 view .LVU965
 4519 00c8 0EFA0BFB 		lsl	fp, lr, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4520              		.loc 15 246 42 view .LVU966
 4521 00cc 95F814E0 		ldrb	lr, [r5, #20]	@ zero_extendqisi2
 4522 00d0 2EEA0B0E 		bic	lr, lr, fp
 4523 00d4 85F814E0 		strb	lr, [r5, #20]
 4524 00d8 E2E7     		b	.L235
 4525              	.LVL266:
 4526              	.L227:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4527              		.loc 15 246 42 view .LVU967
 4528              	.LBE6179:
 4529              	.LBE6178:
 4530              	.LBE6180:
 4531              	.LBE6181:
 4532              	.LBE6182:
 4533              	.LBB6183:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4534              		.loc 4 41 10 is_stmt 1 view .LVU968
 4535              	.LBB6169:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4536              		.loc 15 239 10 view .LVU969
 4537              	.LBE6169:
 4538              	.LBE6183:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4539              		.loc 5 230 42 is_stmt 0 view .LVU970
 4540 00da 0125     		movs	r5, #1
 4541              	.LBB6184:
 4542              	.LBB6170:
 4543              	.LBB6164:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4544              		.loc 15 241 9 view .LVU971
 4545 00dc 7F2B     		cmp	r3, #127
 4546              	.LBE6164:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 265


 4547              	.LBE6170:
 4548              	.LBE6184:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 4549              		.loc 5 230 42 view .LVU972
 4550 00de 0195     		str	r5, [sp, #4]
 4551              	.LBB6185:
 4552              	.LBB6171:
 4553              	.LBB6165:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4554              		.loc 15 241 9 view .LVU973
 4555 00e0 C5D8     		bhi	.L232
 4556 00e2 3F2E     		cmp	r6, #63
 4557 00e4 AED9     		bls	.L239
 4558 00e6 C2E7     		b	.L232
 4559              	.LVL267:
 4560              	.L229:
 4561              	.LBB6159:
 4562              	.LBI6159:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4563              		.loc 15 239 10 is_stmt 1 view .LVU974
 4564              	.LBB6160:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4565              		.loc 15 246 49 is_stmt 0 view .LVU975
 4566 00e8 07FA0EFE 		lsl	lr, r7, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4567              		.loc 15 246 42 view .LVU976
 4568 00ec 2F7D     		ldrb	r7, [r5, #20]	@ zero_extendqisi2
 4569              	.LBE6160:
 4570              	.LBE6159:
 4571              	.LBE6165:
 4572              	.LBE6171:
 4573              	.LBE6185:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4574              		.loc 5 239 26 view .LVU977
 4575 00ee 9642     		cmp	r6, r2
 4576              	.LBB6186:
 4577              	.LBB6172:
 4578              	.LBB6166:
 4579              	.LBB6162:
 4580              	.LBB6161:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4581              		.loc 15 246 42 view .LVU978
 4582 00f0 27EA0E07 		bic	r7, r7, lr
 4583 00f4 2F75     		strb	r7, [r5, #20]
 4584              	.LVL268:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4585              		.loc 15 246 42 view .LVU979
 4586              	.LBE6161:
 4587              	.LBE6162:
 4588              	.LBE6166:
 4589              	.LBE6172:
 4590              	.LBE6186:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 4591              		.loc 5 239 26 is_stmt 1 view .LVU980
 4592 00f6 B8D0     		beq	.L251
 4593 00f8 B9E7     		b	.L232
 4594              		.cfi_endproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 266


 4595              	.LFE5559:
 4597 00fa 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4598              		.align	1
 4599              		.p2align 2,,3
 4600              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4601              		.syntax unified
 4602              		.thumb
 4603              		.thumb_func
 4604              		.fpu fpv5-d16
 4606              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4607              	.LVL269:
 4608              	.LFB6214:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4609              		.loc 5 283 10 view -0
 4610              		.cfi_startproc
 4611              		@ args = 12, pretend = 0, frame = 8
 4612              		@ frame_needed = 0, uses_anonymous_args = 0
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4613              		.loc 5 283 10 is_stmt 0 view .LVU982
 4614 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4615              		.cfi_def_cfa_offset 36
 4616              		.cfi_offset 4, -36
 4617              		.cfi_offset 5, -32
 4618              		.cfi_offset 6, -28
 4619              		.cfi_offset 7, -24
 4620              		.cfi_offset 8, -20
 4621              		.cfi_offset 9, -16
 4622              		.cfi_offset 10, -12
 4623              		.cfi_offset 11, -8
 4624              		.cfi_offset 14, -4
 4625 0004 2DED068B 		vpush.64	{d8, d9, d10}
 4626              		.cfi_def_cfa_offset 60
 4627              		.cfi_offset 80, -60
 4628              		.cfi_offset 81, -56
 4629              		.cfi_offset 82, -52
 4630              		.cfi_offset 83, -48
 4631              		.cfi_offset 84, -44
 4632              		.cfi_offset 85, -40
 4633 0008 83B0     		sub	sp, sp, #12
 4634              		.cfi_def_cfa_offset 72
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4635              		.loc 5 283 10 view .LVU983
 4636 000a 1F46     		mov	r7, r3
 4637 000c 8046     		mov	r8, r0
 4638 000e 0D46     		mov	r5, r1
 4639 0010 9DF85030 		ldrb	r3, [sp, #80]	@ zero_extendqisi2
 4640              	.LVL270:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 4641              		.loc 5 283 10 view .LVU984
 4642 0014 1646     		mov	r6, r2
 4643 0016 0193     		str	r3, [sp, #4]
 306:../../libdaisy/src/hid/disp/display.h ****         {
 4644              		.loc 5 306 9 view .LVU985
 4645 0018 139B     		ldr	r3, [sp, #76]
 4646 001a 002B     		cmp	r3, #0
 4647 001c C0F22182 		blt	.L253
 313:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 267


 4648              		.loc 5 313 27 view .LVU986
 4649 0020 129A     		ldr	r2, [sp, #72]
 4650              	.LVL271:
 313:../../libdaisy/src/hid/disp/display.h **** 
 4651              		.loc 5 313 27 view .LVU987
 4652 0022 1344     		add	r3, r3, r2
 4653 0024 06EE103A 		vmov	s12, r3	@ int
 4654              	.LVL272:
 4655              	.L254:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4656              		.loc 5 312 27 view .LVU988
 4657 0028 DDED127A 		vldr.32	s15, [sp, #72]	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4658              		.loc 5 313 27 view .LVU989
 4659 002c B8EEC66B 		vcvt.f64.s32	d6, s12
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4660              		.loc 5 312 27 view .LVU990
 4661 0030 9FEDCD4B 		vldr.64	d4, .L329
 4662 0034 B8EEE77B 		vcvt.f64.s32	d7, s15
 4663 0038 9FEDCD5B 		vldr.64	d5, .L329+8
 4664 003c 27EE047B 		vmul.f64	d7, d7, d4
 313:../../libdaisy/src/hid/disp/display.h **** 
 4665              		.loc 5 313 27 view .LVU991
 4666 0040 26EE046B 		vmul.f64	d6, d6, d4
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4667              		.loc 5 312 27 view .LVU992
 4668 0044 87EE050B 		vdiv.f64	d0, d7, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 4669              		.loc 5 313 27 view .LVU993
 4670 0048 86EE05AB 		vdiv.f64	d10, d6, d5
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 4671              		.loc 5 312 25 view .LVU994
 4672 004c F7EEC08B 		vcvt.f32.f64	s17, d0
 4673              	.LVL273:
 4674              	.LBB6219:
 4675              	.LBB6220:
 4676              		.file 35 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 268


  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 269


  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 270


 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4677              		.loc 35 185 26 view .LVU995
 4678 0050 B0EE680A 		vmov.f32	s0, s17
 4679 0054 FFF7FEFF 		bl	cosf
 4680              	.LVL274:
 4681              		.loc 35 185 26 view .LVU996
 4682              	.LBE6220:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 271


 4683              	.LBE6219:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4684              		.loc 5 315 17 view .LVU997
 4685 0058 07EE907A 		vmov	s15, r7	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 4686              		.loc 5 313 25 view .LVU998
 4687 005c B7EECAAB 		vcvt.f32.f64	s20, d10
 4688              	.LVL275:
 4689              	.LBB6223:
 4690              	.LBI6219:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4691              		.loc 35 184 3 is_stmt 1 view .LVU999
 4692              	.LBB6221:
 4693              		.loc 35 185 5 view .LVU1000
 4694              		.loc 35 185 5 is_stmt 0 view .LVU1001
 4695              	.LBE6221:
 4696              	.LBE6223:
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4697              		.loc 5 315 17 view .LVU1002
 4698 0060 F8EE679A 		vcvt.f32.u32	s19, s15
 4699              	.LBB6224:
 4700              	.LBB6222:
 4701              		.loc 35 185 26 view .LVU1003
 4702 0064 B0EE408A 		vmov.f32	s16, s0
 4703              	.LBE6222:
 4704              	.LBE6224:
 4705              	.LBB6225:
 4706              	.LBB6226:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 272


 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 273


 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 274


 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 275


 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4707              		.loc 35 426 26 view .LVU1004
 4708 0068 B0EE680A 		vmov.f32	s0, s17
 4709 006c FFF7FEFF 		bl	sinf
 4710              	.LVL276:
 4711              	.LBE6226:
 4712              	.LBE6225:
 316:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 4713              		.loc 5 316 17 view .LVU1005
 4714 0070 60EE698A 		vnmul.f32	s17, s0, s19
 4715              	.LVL277:
 4716              	.LBB6228:
 4717              	.LBB6229:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4718              		.loc 35 185 26 view .LVU1006
 4719 0074 B0EE4A0A 		vmov.f32	s0, s20
 4720 0078 FFF7FEFF 		bl	cosf
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 276


 4721              	.LVL278:
 4722 007c B0EE409A 		vmov.f32	s18, s0
 4723              	.LBE6229:
 4724              	.LBE6228:
 4725              	.LBB6231:
 4726              	.LBB6232:
 4727              		.loc 35 426 26 view .LVU1007
 4728 0080 B0EE4A0A 		vmov.f32	s0, s20
 4729 0084 FFF7FEFF 		bl	sinf
 4730              	.LVL279:
 4731              	.LBE6232:
 4732              	.LBE6231:
 318:../../libdaisy/src/hid/disp/display.h **** 
 4733              		.loc 5 318 17 view .LVU1008
 4734 0088 20EE690A 		vnmul.f32	s0, s0, s19
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 4735              		.loc 5 315 17 view .LVU1009
 4736 008c 29EE888A 		vmul.f32	s16, s19, s16
 4737              	.LVL280:
 4738              	.LBB6234:
 4739              	.LBI6225:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4740              		.loc 35 425 3 is_stmt 1 view .LVU1010
 4741              	.LBB6227:
 4742              		.loc 35 426 5 view .LVU1011
 4743              		.loc 35 426 5 is_stmt 0 view .LVU1012
 4744              	.LBE6227:
 4745              	.LBE6234:
 4746              	.LBB6235:
 4747              	.LBI6228:
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 4748              		.loc 35 184 3 is_stmt 1 view .LVU1013
 4749              	.LBB6230:
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4750              		.loc 35 185 5 view .LVU1014
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath **** 
 4751              		.loc 35 185 5 is_stmt 0 view .LVU1015
 4752              	.LBE6230:
 4753              	.LBE6235:
 317:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 4754              		.loc 5 317 17 view .LVU1016
 4755 0090 29EE899A 		vmul.f32	s18, s19, s18
 4756              	.LVL281:
 4757              	.LBB6236:
 4758              	.LBI6231:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 4759              		.loc 35 425 3 is_stmt 1 view .LVU1017
 4760              	.LBB6233:
 4761              		.loc 35 426 5 view .LVU1018
 4762              		.loc 35 426 5 is_stmt 0 view .LVU1019
 4763              	.LBE6233:
 4764              	.LBE6236:
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4765              		.loc 5 322 25 view .LVU1020
 4766 0094 70EE687A 		vsub.f32	s15, s0, s17
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4767              		.loc 5 321 9 view .LVU1021
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 277


 4768 0098 F0EE006A 		vmov.f32	s13, #2.0e+0
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4769              		.loc 5 321 19 view .LVU1022
 4770 009c 39EE487A 		vsub.f32	s14, s18, s16
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4771              		.loc 5 322 36 view .LVU1023
 4772 00a0 67EEA77A 		vmul.f32	s15, s15, s15
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 4773              		.loc 5 322 16 view .LVU1024
 4774 00a4 E7EE077A 		vfma.f32	s15, s14, s14
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 4775              		.loc 5 321 9 view .LVU1025
 4776 00a8 F4EEE67A 		vcmpe.f32	s15, s13
 4777 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4778 00b0 06D5     		bpl	.L311
 325:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 4779              		.loc 5 325 13 view .LVU1026
 4780 00b2 139B     		ldr	r3, [sp, #76]
 4781 00b4 B42B     		cmp	r3, #180
 4782 00b6 40F39680 		ble	.L252
 326:../../libdaisy/src/hid/disp/display.h ****             else
 4783              		.loc 5 326 24 view .LVU1027
 4784 00ba 4FF00109 		mov	r9, #1
 4785 00be 01E0     		b	.L255
 4786              	.L311:
 304:../../libdaisy/src/hid/disp/display.h **** 
 4787              		.loc 5 304 14 view .LVU1028
 4788 00c0 4FF00009 		mov	r9, #0
 4789              	.L255:
 4790              	.LVL282:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4791              		.loc 5 302 27 view .LVU1029
 4792 00c4 0124     		movs	r4, #1
 332:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 4793              		.loc 5 332 13 view .LVU1030
 4794 00c6 7842     		rsbs	r0, r7, #0
 4795              	.LVL283:
 333:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 4796              		.loc 5 333 13 view .LVU1031
 4797 00c8 4FF0000C 		mov	ip, #0
 4798 00cc 0095     		str	r5, [sp]
 334:../../libdaisy/src/hid/disp/display.h **** 
 4799              		.loc 5 334 17 view .LVU1032
 4800 00ce E31B     		subs	r3, r4, r7
 302:../../libdaisy/src/hid/disp/display.h **** 
 4801              		.loc 5 302 17 view .LVU1033
 4802 00d0 2146     		mov	r1, r4
 302:../../libdaisy/src/hid/disp/display.h **** 
 4803              		.loc 5 302 22 view .LVU1034
 4804 00d2 2746     		mov	r7, r4
 4805              	.LVL284:
 302:../../libdaisy/src/hid/disp/display.h **** 
 4806              		.loc 5 302 12 view .LVU1035
 4807 00d4 2246     		mov	r2, r4
 334:../../libdaisy/src/hid/disp/display.h **** 
 4808              		.loc 5 334 17 view .LVU1036
 4809 00d6 A340     		lsls	r3, r3, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 278


 4810              	.LVL285:
 4811              	.L281:
 338:../../libdaisy/src/hid/disp/display.h ****             {
 4812              		.loc 5 338 13 view .LVU1037
 4813 00d8 B9F1000F 		cmp	r9, #0
 4814 00dc 6AD1     		bne	.L257
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4815              		.loc 5 343 34 view .LVU1038
 4816 00de 4242     		rsbs	r2, r0, #0
 4817              	.LVL286:
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4818              		.loc 5 340 24 view .LVU1039
 4819 00e0 06EE90CA 		vmov	s13, ip	@ int
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4820              		.loc 5 342 34 view .LVU1040
 4821 00e4 CCF10001 		rsb	r1, ip, #0
 4822              	.LVL287:
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4823              		.loc 5 343 34 view .LVU1041
 4824 00e8 07EE102A 		vmov	s14, r2	@ int
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4825              		.loc 5 340 24 view .LVU1042
 4826 00ec B8EEE66A 		vcvt.f32.s32	s12, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4827              		.loc 5 342 34 view .LVU1043
 4828 00f0 07EE901A 		vmov	s15, r1	@ int
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4829              		.loc 5 341 24 view .LVU1044
 4830 00f4 06EE900A 		vmov	s13, r0	@ int
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4831              		.loc 5 343 34 view .LVU1045
 4832 00f8 B8EEC77A 		vcvt.f32.s32	s14, s14
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4833              		.loc 5 349 17 view .LVU1046
 4834 00fc 139A     		ldr	r2, [sp, #76]
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 4835              		.loc 5 340 24 view .LVU1047
 4836 00fe 66EE084A 		vmul.f32	s9, s12, s16
 4837              	.LVL288:
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4838              		.loc 5 342 34 view .LVU1048
 4839 0102 F8EEE77A 		vcvt.f32.s32	s15, s15
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4840              		.loc 5 349 17 view .LVU1049
 4841 0106 B42A     		cmp	r2, #180
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 4842              		.loc 5 343 24 view .LVU1050
 4843 0108 27EE284A 		vmul.f32	s8, s14, s17
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4844              		.loc 5 341 24 view .LVU1051
 4845 010c F8EEE66A 		vcvt.f32.s32	s13, s13
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 4846              		.loc 5 342 24 view .LVU1052
 4847 0110 67EE885A 		vmul.f32	s11, s15, s16
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4848              		.loc 5 351 33 view .LVU1053
 4849 0114 74EEC43A 		vsub.f32	s7, s9, s8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 279


 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 4850              		.loc 5 341 24 view .LVU1054
 4851 0118 26EEA85A 		vmul.f32	s10, s13, s17
 4852              	.LVL289:
 344:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 4853              		.loc 5 344 24 view .LVU1055
 4854 011c 26EE096A 		vmul.f32	s12, s12, s18
 4855              	.LVL290:
 345:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 4856              		.loc 5 345 24 view .LVU1056
 4857 0120 66EE806A 		vmul.f32	s13, s13, s0
 4858              	.LVL291:
 346:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 4859              		.loc 5 346 24 view .LVU1057
 4860 0124 67EE897A 		vmul.f32	s15, s15, s18
 4861              	.LVL292:
 347:../../libdaisy/src/hid/disp/display.h **** 
 4862              		.loc 5 347 24 view .LVU1058
 4863 0128 27EE007A 		vmul.f32	s14, s14, s0
 4864              	.LVL293:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4865              		.loc 5 351 46 view .LVU1059
 4866 012c F5EEC03A 		vcmpe.f32	s7, #0
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 4867              		.loc 5 349 17 view .LVU1060
 4868 0130 40F3F280 		ble	.L258
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4869              		.loc 5 351 46 view .LVU1061
 4870 0134 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4871 0138 00F17F81 		bmi	.L284
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4872              		.loc 5 351 55 discriminator 2 view .LVU1062
 4873 013c 76EE473A 		vsub.f32	s7, s12, s14
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4874              		.loc 5 352 33 discriminator 2 view .LVU1063
 4875 0140 74EEC54A 		vsub.f32	s9, s9, s10
 4876              	.LVL294:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4877              		.loc 5 351 46 discriminator 2 view .LVU1064
 4878 0144 F5EEC03A 		vcmpe.f32	s7, #0
 4879 0148 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4880              		.loc 5 352 45 discriminator 2 view .LVU1065
 4881 014c F5EEC04A 		vcmpe.f32	s9, #0
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 4882              		.loc 5 351 46 discriminator 2 view .LVU1066
 4883 0150 CCBF     		ite	gt
 4884 0152 0122     		movgt	r2, #1
 4885 0154 0022     		movle	r2, #0
 4886              	.LVL295:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4887              		.loc 5 352 45 discriminator 2 view .LVU1067
 4888 0156 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4889 015a 00F17781 		bmi	.L285
 4890              	.L327:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4891              		.loc 5 352 54 discriminator 2 view .LVU1068
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 280


 4892 015e 36EE666A 		vsub.f32	s12, s12, s13
 4893              	.LVL296:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4894              		.loc 5 353 34 discriminator 2 view .LVU1069
 4895 0162 35EEC55A 		vsub.f32	s10, s11, s10
 4896              	.LVL297:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4897              		.loc 5 352 45 discriminator 2 view .LVU1070
 4898 0166 B5EEC06A 		vcmpe.f32	s12, #0
 4899 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4900              		.loc 5 353 46 discriminator 2 view .LVU1071
 4901 016e B5EEC05A 		vcmpe.f32	s10, #0
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 4902              		.loc 5 352 45 discriminator 2 view .LVU1072
 4903 0172 CCBF     		ite	gt
 4904 0174 0121     		movgt	r1, #1
 4905 0176 0021     		movle	r1, #0
 4906              	.LVL298:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4907              		.loc 5 353 46 discriminator 2 view .LVU1073
 4908 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4909 017c 00F16F81 		bmi	.L286
 4910              	.L328:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4911              		.loc 5 353 56 discriminator 2 view .LVU1074
 4912 0180 77EEE66A 		vsub.f32	s13, s15, s13
 4913              	.LVL299:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4914              		.loc 5 353 46 discriminator 2 view .LVU1075
 4915 0184 F5EEC06A 		vcmpe.f32	s13, #0
 4916 0188 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4917 018c CCBF     		ite	gt
 4918 018e 0127     		movgt	r7, #1
 4919              	.LVL300:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 4920              		.loc 5 353 46 discriminator 2 view .LVU1076
 4921 0190 0027     		movle	r7, #0
 4922              	.L261:
 4923              	.LVL301:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4924              		.loc 5 354 34 discriminator 6 view .LVU1077
 4925 0192 75EEC45A 		vsub.f32	s11, s11, s8
 4926              	.LVL302:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 4927              		.loc 5 354 47 discriminator 6 view .LVU1078
 4928 0196 F5EEC05A 		vcmpe.f32	s11, #0
 4929 019a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4930 019e 00F14781 		bmi	.L287
 4931              	.L317:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4932              		.loc 5 361 57 discriminator 1 view .LVU1079
 4933 01a2 77EEC77A 		vsub.f32	s15, s15, s14
 4934              	.LVL303:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4935              		.loc 5 361 47 discriminator 1 view .LVU1080
 4936 01a6 F5EEC07A 		vcmpe.f32	s15, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 281


 4937 01aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4938 01ae CCBF     		ite	gt
 4939 01b0 0124     		movgt	r4, #1
 4940              	.LVL304:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 4941              		.loc 5 361 47 discriminator 1 view .LVU1081
 4942 01b2 0024     		movle	r4, #0
 4943              	.LVL305:
 4944              	.L257:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4945              		.loc 5 365 13 view .LVU1082
 4946 01b4 002A     		cmp	r2, #0
 4947 01b6 40F08A80 		bne	.L318
 4948              	.L269:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4949              		.loc 5 368 13 view .LVU1083
 4950 01ba 0029     		cmp	r1, #0
 4951 01bc 64D1     		bne	.L319
 4952              	.L271:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4953              		.loc 5 371 13 view .LVU1084
 4954 01be BFB9     		cbnz	r7, .L320
 4955              	.L273:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 4956              		.loc 5 374 13 view .LVU1085
 4957 01c0 C4BB     		cbnz	r4, .L321
 4958              	.L275:
 4959              	.LVL306:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 4960              		.loc 5 379 13 view .LVU1086
 4961 01c2 9C45     		cmp	ip, r3
 4962 01c4 58DB     		blt	.L292
 4963              	.L323:
 381:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 4964              		.loc 5 381 17 view .LVU1087
 4965 01c6 0CF1010C 		add	ip, ip, #1
 4966              	.LVL307:
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4967              		.loc 5 382 38 view .LVU1088
 4968 01ca 03EB4C0E 		add	lr, r3, ip, lsl #1
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4969              		.loc 5 383 17 view .LVU1089
 4970 01ce 1CEB000F 		cmn	ip, r0
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 4971              		.loc 5 382 21 view .LVU1090
 4972 01d2 0EF1010E 		add	lr, lr, #1
 4973              	.LVL308:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 4974              		.loc 5 383 17 view .LVU1091
 4975 01d6 00F0C080 		beq	.L322
 4976              	.LVL309:
 4977              	.L277:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 4978              		.loc 5 388 13 view .LVU1092
 4979 01da 9842     		cmp	r0, r3
 4980 01dc 4FDB     		blt	.L278
 4981              	.L293:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 282


 388:../../libdaisy/src/hid/disp/display.h ****             {
 4982              		.loc 5 388 13 view .LVU1093
 4983 01de 7346     		mov	r3, lr
 4984              	.LVL310:
 4985              	.L279:
 393:../../libdaisy/src/hid/disp/display.h ****     }
 4986              		.loc 5 393 21 is_stmt 1 view .LVU1094
 4987 01e0 0028     		cmp	r0, #0
 4988 01e2 7FF779AF 		ble	.L281
 4989              	.LVL311:
 4990              	.L252:
 394:../../libdaisy/src/hid/disp/display.h **** 
 4991              		.loc 5 394 5 is_stmt 0 view .LVU1095
 4992 01e6 03B0     		add	sp, sp, #12
 4993              		.cfi_remember_state
 4994              		.cfi_def_cfa_offset 60
 4995              		@ sp needed
 4996 01e8 BDEC068B 		vldm	sp!, {d8-d10}
 4997              		.cfi_restore 84
 4998              		.cfi_restore 85
 4999              		.cfi_restore 82
 5000              		.cfi_restore 83
 5001              		.cfi_restore 80
 5002              		.cfi_restore 81
 5003              		.cfi_def_cfa_offset 36
 5004              	.LVL312:
 394:../../libdaisy/src/hid/disp/display.h **** 
 5005              		.loc 5 394 5 view .LVU1096
 5006 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5007              	.LVL313:
 5008              	.L320:
 5009              		.cfi_restore_state
 373:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 5010              		.loc 5 373 43 view .LVU1097
 5011 01f0 009D     		ldr	r5, [sp]
 5012 01f2 A6EB0C0E 		sub	lr, r6, ip
 5013 01f6 00EB050A 		add	r10, r0, r5
 5014              	.LVL314:
 5015              	.LBB6237:
 5016              	.LBI6237:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5017              		.loc 4 41 10 is_stmt 1 view .LVU1098
 5018              	.LBB6238:
 5019              	.LBI6238:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5020              		.loc 15 239 10 view .LVU1099
 5021              	.LBB6239:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5022              		.loc 15 241 9 is_stmt 0 view .LVU1100
 5023 01fa BAF17F0F 		cmp	r10, #127
 5024 01fe DFD8     		bhi	.L273
 5025 0200 BEF13F0F 		cmp	lr, #63
 5026 0204 DCD8     		bhi	.L273
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5027              		.loc 15 244 28 view .LVU1101
 5028 0206 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 283


 5029              		.loc 15 243 9 view .LVU1102
 5030 020a 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5031              		.loc 15 244 42 view .LVU1103
 5032 020c 0AEBCB1A 		add	r10, r10, fp, lsl #7
 5033              	.LVL315:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5034              		.loc 15 243 9 view .LVU1104
 5035 0210 002D     		cmp	r5, #0
 5036 0212 00F0B180 		beq	.L274
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5037              		.loc 15 244 54 view .LVU1105
 5038 0216 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5039              		.loc 15 244 42 view .LVU1106
 5040 021a C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5041              		.loc 15 244 48 view .LVU1107
 5042 021c 4FF0010E 		mov	lr, #1
 5043              	.LVL316:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5044              		.loc 15 244 48 view .LVU1108
 5045 0220 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5046              		.loc 15 244 42 view .LVU1109
 5047 0224 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5048 0228 4EEA0B0E 		orr	lr, lr, fp
 5049 022c 8AF814E0 		strb	lr, [r10, #20]
 5050              	.LVL317:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5051              		.loc 15 244 42 view .LVU1110
 5052              	.LBE6239:
 5053              	.LBE6238:
 5054              	.LBE6237:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5055              		.loc 5 374 13 view .LVU1111
 5056 0230 002C     		cmp	r4, #0
 5057 0232 C6D0     		beq	.L275
 5058              	.L321:
 376:../../libdaisy/src/hid/disp/display.h **** 
 5059              		.loc 5 376 43 view .LVU1112
 5060 0234 009D     		ldr	r5, [sp]
 5061 0236 A6EB0C0E 		sub	lr, r6, ip
 5062 023a A5EB000A 		sub	r10, r5, r0
 5063              	.LVL318:
 5064              	.LBB6244:
 5065              	.LBI6244:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5066              		.loc 4 41 10 is_stmt 1 view .LVU1113
 5067              	.LBB6245:
 5068              	.LBI6245:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5069              		.loc 15 239 10 view .LVU1114
 5070              	.LBB6246:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5071              		.loc 15 241 9 is_stmt 0 view .LVU1115
 5072 023e BAF17F0F 		cmp	r10, #127
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 284


 5073 0242 BED8     		bhi	.L275
 5074 0244 BEF13F0F 		cmp	lr, #63
 5075 0248 BBD8     		bhi	.L275
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5076              		.loc 15 244 28 view .LVU1116
 5077 024a 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5078              		.loc 15 243 9 view .LVU1117
 5079 024e 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5080              		.loc 15 244 42 view .LVU1118
 5081 0250 0AEBCB1A 		add	r10, r10, fp, lsl #7
 5082              	.LVL319:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5083              		.loc 15 243 9 view .LVU1119
 5084 0254 002D     		cmp	r5, #0
 5085 0256 00F0AE80 		beq	.L276
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5086              		.loc 15 244 54 view .LVU1120
 5087 025a 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5088              		.loc 15 244 42 view .LVU1121
 5089 025e C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5090              		.loc 15 244 48 view .LVU1122
 5091 0260 4FF0010E 		mov	lr, #1
 5092              	.LVL320:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5093              		.loc 15 244 48 view .LVU1123
 5094              	.LBE6246:
 5095              	.LBE6245:
 5096              	.LBE6244:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 5097              		.loc 5 379 13 view .LVU1124
 5098 0264 9C45     		cmp	ip, r3
 5099              	.LBB6253:
 5100              	.LBB6251:
 5101              	.LBB6249:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5102              		.loc 15 244 48 view .LVU1125
 5103 0266 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5104              		.loc 15 244 42 view .LVU1126
 5105 026a 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5106 026e 4EEA0B0E 		orr	lr, lr, fp
 5107 0272 8AF814E0 		strb	lr, [r10, #20]
 5108              	.LVL321:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5109              		.loc 15 244 42 view .LVU1127
 5110              	.LBE6249:
 5111              	.LBE6251:
 5112              	.LBE6253:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 5113              		.loc 5 379 13 view .LVU1128
 5114 0276 A6DA     		bge	.L323
 5115              	.L292:
 388:../../libdaisy/src/hid/disp/display.h ****             {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 285


 5116              		.loc 5 388 13 view .LVU1129
 5117 0278 9842     		cmp	r0, r3
 5118 027a 9E46     		mov	lr, r3
 5119              	.LVL322:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 5120              		.loc 5 388 13 view .LVU1130
 5121 027c AFDA     		bge	.L293
 5122              	.LVL323:
 5123              	.L278:
 390:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 5124              		.loc 5 390 17 view .LVU1131
 5125 027e 0130     		adds	r0, r0, #1
 5126              	.LVL324:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 5127              		.loc 5 391 38 view .LVU1132
 5128 0280 0EEB4003 		add	r3, lr, r0, lsl #1
 391:../../libdaisy/src/hid/disp/display.h ****             }
 5129              		.loc 5 391 21 view .LVU1133
 5130 0284 0133     		adds	r3, r3, #1
 5131              	.LVL325:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 5132              		.loc 5 391 21 view .LVU1134
 5133 0286 ABE7     		b	.L279
 5134              	.L319:
 370:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 5135              		.loc 5 370 43 view .LVU1135
 5136 0288 009D     		ldr	r5, [sp]
 5137 028a 0CEB060E 		add	lr, ip, r6
 5138 028e 00EB050A 		add	r10, r0, r5
 5139              	.LVL326:
 5140              	.LBB6254:
 5141              	.LBI6254:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5142              		.loc 4 41 10 is_stmt 1 view .LVU1136
 5143              	.LBB6255:
 5144              	.LBI6255:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5145              		.loc 15 239 10 view .LVU1137
 5146              	.LBB6256:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5147              		.loc 15 241 9 is_stmt 0 view .LVU1138
 5148 0292 BAF17F0F 		cmp	r10, #127
 5149 0296 92D8     		bhi	.L271
 5150 0298 BEF13F0F 		cmp	lr, #63
 5151 029c 8FD8     		bhi	.L271
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5152              		.loc 15 244 28 view .LVU1139
 5153 029e 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5154              		.loc 15 243 9 view .LVU1140
 5155 02a2 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5156              		.loc 15 244 42 view .LVU1141
 5157 02a4 0AEBCB1A 		add	r10, r10, fp, lsl #7
 5158              	.LVL327:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5159              		.loc 15 243 9 view .LVU1142
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 286


 5160 02a8 002D     		cmp	r5, #0
 5161 02aa 73D0     		beq	.L272
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5162              		.loc 15 244 54 view .LVU1143
 5163 02ac 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5164              		.loc 15 244 42 view .LVU1144
 5165 02b0 C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5166              		.loc 15 244 48 view .LVU1145
 5167 02b2 4FF0010E 		mov	lr, #1
 5168              	.LVL328:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5169              		.loc 15 244 48 view .LVU1146
 5170 02b6 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5171              		.loc 15 244 42 view .LVU1147
 5172 02ba 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5173 02be 4EEA0B0E 		orr	lr, lr, fp
 5174 02c2 8AF814E0 		strb	lr, [r10, #20]
 5175              	.LVL329:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5176              		.loc 15 244 42 view .LVU1148
 5177              	.LBE6256:
 5178              	.LBE6255:
 5179              	.LBE6254:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5180              		.loc 5 371 13 view .LVU1149
 5181 02c6 002F     		cmp	r7, #0
 5182 02c8 3FF47AAF 		beq	.L273
 5183 02cc 90E7     		b	.L320
 5184              	.L318:
 367:../../libdaisy/src/hid/disp/display.h ****             if(d2)
 5185              		.loc 5 367 43 view .LVU1150
 5186 02ce 009D     		ldr	r5, [sp]
 5187 02d0 0CEB060E 		add	lr, ip, r6
 5188 02d4 A5EB000A 		sub	r10, r5, r0
 5189              	.LVL330:
 5190              	.LBB6261:
 5191              	.LBI6261:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5192              		.loc 4 41 10 is_stmt 1 view .LVU1151
 5193              	.LBB6262:
 5194              	.LBI6262:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5195              		.loc 15 239 10 view .LVU1152
 5196              	.LBB6263:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 5197              		.loc 15 241 9 is_stmt 0 view .LVU1153
 5198 02d8 BAF17F0F 		cmp	r10, #127
 5199 02dc 3FF66DAF 		bhi	.L269
 5200 02e0 BEF13F0F 		cmp	lr, #63
 5201 02e4 3FF669AF 		bhi	.L269
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5202              		.loc 15 244 28 view .LVU1154
 5203 02e8 4FEADE0B 		lsr	fp, lr, #3
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 287


 5204              		.loc 15 243 9 view .LVU1155
 5205 02ec 019D     		ldr	r5, [sp, #4]
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5206              		.loc 15 244 42 view .LVU1156
 5207 02ee 0AEBCB1A 		add	r10, r10, fp, lsl #7
 5208              	.LVL331:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 5209              		.loc 15 243 9 view .LVU1157
 5210 02f2 002D     		cmp	r5, #0
 5211 02f4 6DD0     		beq	.L270
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5212              		.loc 15 244 54 view .LVU1158
 5213 02f6 0EF0070B 		and	fp, lr, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5214              		.loc 15 244 42 view .LVU1159
 5215 02fa C244     		add	r10, r10, r8
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5216              		.loc 15 244 48 view .LVU1160
 5217 02fc 4FF0010E 		mov	lr, #1
 5218              	.LVL332:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5219              		.loc 15 244 48 view .LVU1161
 5220 0300 0EFA0BFE 		lsl	lr, lr, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5221              		.loc 15 244 42 view .LVU1162
 5222 0304 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5223 0308 4EEA0B0E 		orr	lr, lr, fp
 5224 030c 8AF814E0 		strb	lr, [r10, #20]
 5225              	.LVL333:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 5226              		.loc 15 244 42 view .LVU1163
 5227              	.LBE6263:
 5228              	.LBE6262:
 5229              	.LBE6261:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5230              		.loc 5 368 13 view .LVU1164
 5231 0310 0029     		cmp	r1, #0
 5232 0312 3FF454AF 		beq	.L271
 5233 0316 B7E7     		b	.L319
 5234              	.LVL334:
 5235              	.L258:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 5236              		.loc 5 358 46 view .LVU1165
 5237 0318 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5238 031c 7ED4     		bmi	.L324
 5239 031e 4A46     		mov	r2, r9
 5240              	.L262:
 5241              	.LVL335:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5242              		.loc 5 359 33 discriminator 6 view .LVU1166
 5243 0320 74EEC54A 		vsub.f32	s9, s9, s10
 5244              	.LVL336:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5245              		.loc 5 359 45 discriminator 6 view .LVU1167
 5246 0324 F5EEC04A 		vcmpe.f32	s9, #0
 5247 0328 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5248 032c 6CD4     		bmi	.L325
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 288


 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5249              		.loc 5 359 45 view .LVU1168
 5250 032e 0021     		movs	r1, #0
 5251              	.LVL337:
 5252              	.L264:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5253              		.loc 5 360 34 discriminator 6 view .LVU1169
 5254 0330 35EEC55A 		vsub.f32	s10, s11, s10
 5255              	.LVL338:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5256              		.loc 5 360 46 discriminator 6 view .LVU1170
 5257 0334 B5EEC05A 		vcmpe.f32	s10, #0
 5258 0338 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5259 033c 5AD4     		bmi	.L326
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5260              		.loc 5 360 46 view .LVU1171
 5261 033e 0027     		movs	r7, #0
 5262              	.LVL339:
 5263              	.L266:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 5264              		.loc 5 361 34 discriminator 6 view .LVU1172
 5265 0340 75EEC45A 		vsub.f32	s11, s11, s8
 5266              	.LVL340:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 5267              		.loc 5 361 47 discriminator 6 view .LVU1173
 5268 0344 F5EEC05A 		vcmpe.f32	s11, #0
 5269 0348 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5270 034c 3FF529AF 		bmi	.L317
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 5271              		.loc 5 361 47 view .LVU1174
 5272 0350 0024     		movs	r4, #0
 5273              	.LVL341:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5274              		.loc 5 365 13 view .LVU1175
 5275 0352 002A     		cmp	r2, #0
 5276 0354 3FF431AF 		beq	.L269
 5277 0358 B9E7     		b	.L318
 5278              	.LVL342:
 5279              	.L322:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 5280              		.loc 5 383 32 discriminator 1 view .LVU1176
 5281 035a 9842     		cmp	r0, r3
 5282 035c 8FDB     		blt	.L278
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 5283              		.loc 5 385 24 view .LVU1177
 5284 035e 0023     		movs	r3, #0
 5285              	.LVL343:
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 5286              		.loc 5 385 24 view .LVU1178
 5287 0360 3BE7     		b	.L277
 5288              	.L330:
 5289 0362 00BFAFF3 		.align	3
 5289      0080
 5290              	.L329:
 5291 0368 7A008BFC 		.word	-57999238
 5292 036c FA210940 		.word	1074340346
 5293 0370 00000000 		.word	0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 289


 5294 0374 00806640 		.word	1080459264
 5295              	.LVL344:
 5296              	.L274:
 5297              	.LBB6268:
 5298              	.LBB6243:
 5299              	.LBB6242:
 5300              	.LBB6240:
 5301              	.LBI6240:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5302              		.loc 15 239 10 is_stmt 1 view .LVU1179
 5303              	.LBB6241:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5304              		.loc 15 246 42 is_stmt 0 view .LVU1180
 5305 0378 C244     		add	r10, r10, r8
 5306              	.LVL345:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5307              		.loc 15 246 49 view .LVU1181
 5308 037a 4FF0010B 		mov	fp, #1
 5309              	.LVL346:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5310              		.loc 15 246 55 view .LVU1182
 5311 037e 0EF0070E 		and	lr, lr, #7
 5312              	.LVL347:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5313              		.loc 15 246 49 view .LVU1183
 5314 0382 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5315              		.loc 15 246 42 view .LVU1184
 5316 0386 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5317 038a 2BEA0E0E 		bic	lr, fp, lr
 5318 038e 8AF814E0 		strb	lr, [r10, #20]
 5319              	.LVL348:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5320              		.loc 15 246 42 view .LVU1185
 5321 0392 15E7     		b	.L273
 5322              	.LVL349:
 5323              	.L272:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5324              		.loc 15 246 42 view .LVU1186
 5325              	.LBE6241:
 5326              	.LBE6240:
 5327              	.LBE6242:
 5328              	.LBE6243:
 5329              	.LBE6268:
 5330              	.LBB6269:
 5331              	.LBB6260:
 5332              	.LBB6259:
 5333              	.LBB6257:
 5334              	.LBI6257:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5335              		.loc 15 239 10 is_stmt 1 view .LVU1187
 5336              	.LBB6258:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5337              		.loc 15 246 42 is_stmt 0 view .LVU1188
 5338 0394 C244     		add	r10, r10, r8
 5339              	.LVL350:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 290


 5340              		.loc 15 246 49 view .LVU1189
 5341 0396 4FF0010B 		mov	fp, #1
 5342              	.LVL351:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5343              		.loc 15 246 55 view .LVU1190
 5344 039a 0EF0070E 		and	lr, lr, #7
 5345              	.LVL352:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5346              		.loc 15 246 49 view .LVU1191
 5347 039e 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5348              		.loc 15 246 42 view .LVU1192
 5349 03a2 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5350 03a6 2BEA0E0E 		bic	lr, fp, lr
 5351 03aa 8AF814E0 		strb	lr, [r10, #20]
 5352              	.LVL353:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5353              		.loc 15 246 42 view .LVU1193
 5354              	.LBE6258:
 5355              	.LBE6257:
 5356              	.LBE6259:
 5357              	.LBE6260:
 5358              	.LBE6269:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5359              		.loc 5 371 13 view .LVU1194
 5360 03ae 002F     		cmp	r7, #0
 5361 03b0 3FF406AF 		beq	.L273
 5362 03b4 1CE7     		b	.L320
 5363              	.LVL354:
 5364              	.L276:
 5365              	.LBB6270:
 5366              	.LBB6252:
 5367              	.LBB6250:
 5368              	.LBB6247:
 5369              	.LBI6247:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5370              		.loc 15 239 10 is_stmt 1 view .LVU1195
 5371              	.LBB6248:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5372              		.loc 15 246 42 is_stmt 0 view .LVU1196
 5373 03b6 C244     		add	r10, r10, r8
 5374              	.LVL355:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5375              		.loc 15 246 49 view .LVU1197
 5376 03b8 4FF0010B 		mov	fp, #1
 5377              	.LVL356:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5378              		.loc 15 246 55 view .LVU1198
 5379 03bc 0EF0070E 		and	lr, lr, #7
 5380              	.LVL357:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5381              		.loc 15 246 49 view .LVU1199
 5382 03c0 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5383              		.loc 15 246 42 view .LVU1200
 5384 03c4 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5385 03c8 2BEA0E0E 		bic	lr, fp, lr
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 291


 5386 03cc 8AF814E0 		strb	lr, [r10, #20]
 5387              	.LVL358:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5388              		.loc 15 246 42 view .LVU1201
 5389 03d0 F7E6     		b	.L275
 5390              	.LVL359:
 5391              	.L270:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5392              		.loc 15 246 42 view .LVU1202
 5393              	.LBE6248:
 5394              	.LBE6247:
 5395              	.LBE6250:
 5396              	.LBE6252:
 5397              	.LBE6270:
 5398              	.LBB6271:
 5399              	.LBB6267:
 5400              	.LBB6266:
 5401              	.LBB6264:
 5402              	.LBI6264:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 5403              		.loc 15 239 10 is_stmt 1 view .LVU1203
 5404              	.LBB6265:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5405              		.loc 15 246 42 is_stmt 0 view .LVU1204
 5406 03d2 C244     		add	r10, r10, r8
 5407              	.LVL360:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5408              		.loc 15 246 49 view .LVU1205
 5409 03d4 4FF0010B 		mov	fp, #1
 5410              	.LVL361:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5411              		.loc 15 246 55 view .LVU1206
 5412 03d8 0EF0070E 		and	lr, lr, #7
 5413              	.LVL362:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5414              		.loc 15 246 49 view .LVU1207
 5415 03dc 0BFA0EFE 		lsl	lr, fp, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5416              		.loc 15 246 42 view .LVU1208
 5417 03e0 9AF814B0 		ldrb	fp, [r10, #20]	@ zero_extendqisi2
 5418 03e4 2BEA0E0E 		bic	lr, fp, lr
 5419 03e8 8AF814E0 		strb	lr, [r10, #20]
 5420              	.LVL363:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5421              		.loc 15 246 42 view .LVU1209
 5422              	.LBE6265:
 5423              	.LBE6264:
 5424              	.LBE6266:
 5425              	.LBE6267:
 5426              	.LBE6271:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5427              		.loc 5 368 13 view .LVU1210
 5428 03ec 0029     		cmp	r1, #0
 5429 03ee 3FF4E6AE 		beq	.L271
 5430 03f2 49E7     		b	.L319
 5431              	.LVL364:
 5432              	.L326:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 292


 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5433              		.loc 5 360 56 discriminator 1 view .LVU1211
 5434 03f4 77EEE66A 		vsub.f32	s13, s15, s13
 5435              	.LVL365:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5436              		.loc 5 360 46 discriminator 1 view .LVU1212
 5437 03f8 F5EEC06A 		vcmpe.f32	s13, #0
 5438 03fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5439 0400 CCBF     		ite	gt
 5440 0402 0127     		movgt	r7, #1
 5441              	.LVL366:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 5442              		.loc 5 360 46 discriminator 1 view .LVU1213
 5443 0404 0027     		movle	r7, #0
 5444 0406 9BE7     		b	.L266
 5445              	.LVL367:
 5446              	.L325:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5447              		.loc 5 359 54 discriminator 1 view .LVU1214
 5448 0408 36EE666A 		vsub.f32	s12, s12, s13
 5449              	.LVL368:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 5450              		.loc 5 359 45 discriminator 1 view .LVU1215
 5451 040c B5EEC06A 		vcmpe.f32	s12, #0
 5452 0410 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5453 0414 CCBF     		ite	gt
 5454 0416 0121     		movgt	r1, #1
 5455 0418 0021     		movle	r1, #0
 5456 041a 89E7     		b	.L264
 5457              	.LVL369:
 5458              	.L324:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 5459              		.loc 5 358 55 discriminator 1 view .LVU1216
 5460 041c 76EE473A 		vsub.f32	s7, s12, s14
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 5461              		.loc 5 358 46 discriminator 1 view .LVU1217
 5462 0420 F5EEC03A 		vcmpe.f32	s7, #0
 5463 0424 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5464 0428 CCBF     		ite	gt
 5465 042a 0122     		movgt	r2, #1
 5466 042c 0022     		movle	r2, #0
 5467 042e 77E7     		b	.L262
 5468              	.LVL370:
 5469              	.L287:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 5470              		.loc 5 354 47 view .LVU1218
 5471 0430 0124     		movs	r4, #1
 5472              	.LVL371:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5473              		.loc 5 365 13 view .LVU1219
 5474 0432 002A     		cmp	r2, #0
 5475 0434 3FF4C1AE 		beq	.L269
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 5476              		.loc 5 365 13 view .LVU1220
 5477 0438 49E7     		b	.L318
 5478              	.LVL372:
 5479              	.L284:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 293


 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5480              		.loc 5 352 33 view .LVU1221
 5481 043a 74EEC54A 		vsub.f32	s9, s9, s10
 5482              	.LVL373:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 5483              		.loc 5 351 46 view .LVU1222
 5484 043e 0122     		movs	r2, #1
 5485              	.LVL374:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5486              		.loc 5 352 45 view .LVU1223
 5487 0440 F5EEC04A 		vcmpe.f32	s9, #0
 5488 0444 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5489 0448 7FF589AE 		bpl	.L327
 5490              	.L285:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5491              		.loc 5 353 34 view .LVU1224
 5492 044c 35EEC55A 		vsub.f32	s10, s11, s10
 5493              	.LVL375:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 5494              		.loc 5 352 45 view .LVU1225
 5495 0450 0121     		movs	r1, #1
 5496              	.LVL376:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5497              		.loc 5 353 46 view .LVU1226
 5498 0452 B5EEC05A 		vcmpe.f32	s10, #0
 5499 0456 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5500 045a 7FF591AE 		bpl	.L328
 5501              	.LVL377:
 5502              	.L286:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5503              		.loc 5 353 46 view .LVU1227
 5504 045e 0127     		movs	r7, #1
 5505              	.LVL378:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 5506              		.loc 5 353 46 view .LVU1228
 5507 0460 97E6     		b	.L261
 5508              	.LVL379:
 5509              	.L253:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5510              		.loc 5 308 25 view .LVU1229
 5511 0462 DDE91223 		ldrd	r2, r3, [sp, #72]
 5512              	.LVL380:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5513              		.loc 5 308 25 view .LVU1230
 5514 0466 1344     		add	r3, r3, r2
 5515              	.LVL381:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5516              		.loc 5 308 25 view .LVU1231
 5517 0468 06EE102A 		vmov	s12, r2	@ int
 5518 046c 1293     		str	r3, [sp, #72]
 5519 046e 139B     		ldr	r3, [sp, #76]
 5520              	.LVL382:
 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5521              		.loc 5 308 25 view .LVU1232
 5522 0470 5B42     		rsbs	r3, r3, #0
 5523 0472 1393     		str	r3, [sp, #76]
 5524              	.LVL383:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 294


 308:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 5525              		.loc 5 308 25 view .LVU1233
 5526 0474 D8E5     		b	.L254
 5527              		.cfi_endproc
 5528              	.LFE6214:
 5530 0476 00BF     		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 5531              		.align	1
 5532              		.p2align 2,,3
 5533              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 5534              		.syntax unified
 5535              		.thumb
 5536              		.thumb_func
 5537              		.fpu fpv5-d16
 5539              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 5540              	.LVL384:
 5541              	.LFB6215:
 459:../../libdaisy/src/hid/disp/display.h **** 
 460:../../libdaisy/src/hid/disp/display.h ****     Rectangle WriteStringAligned(const char*    str,
 5542              		.loc 5 460 15 is_stmt 1 view -0
 5543              		.cfi_startproc
 5544              		@ args = 12, pretend = 0, frame = 32
 5545              		@ frame_needed = 0, uses_anonymous_args = 0
 5546              		.loc 5 460 15 is_stmt 0 view .LVU1235
 5547 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5548              		.cfi_def_cfa_offset 36
 5549              		.cfi_offset 4, -36
 5550              		.cfi_offset 5, -32
 5551              		.cfi_offset 6, -28
 5552              		.cfi_offset 7, -24
 5553              		.cfi_offset 8, -20
 5554              		.cfi_offset 9, -16
 5555              		.cfi_offset 10, -12
 5556              		.cfi_offset 11, -8
 5557              		.cfi_offset 14, -4
 5558 0004 89B0     		sub	sp, sp, #36
 5559              		.cfi_def_cfa_offset 72
 5560              		.loc 5 460 15 view .LVU1236
 5561 0006 1D46     		mov	r5, r3
 5562 0008 8846     		mov	r8, r1
 5563              	.LVL385:
 5564              	.LBB6410:
 5565              	.LBI6410:
 461:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 462:../../libdaisy/src/hid/disp/display.h ****                                  Rectangle      boundingBox,
 463:../../libdaisy/src/hid/disp/display.h ****                                  Alignment      alignment,
 464:../../libdaisy/src/hid/disp/display.h ****                                  bool           on) override
 465:../../libdaisy/src/hid/disp/display.h ****     {
 466:../../libdaisy/src/hid/disp/display.h ****         const auto alignedRect
 467:../../libdaisy/src/hid/disp/display.h ****             = GetTextRect(str, font).AlignedWithin(boundingBox, alignment);
 468:../../libdaisy/src/hid/disp/display.h ****         SetCursor(alignedRect.GetX(), alignedRect.GetY());
 469:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 470:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 471:../../libdaisy/src/hid/disp/display.h ****     }
 472:../../libdaisy/src/hid/disp/display.h **** 
 473:../../libdaisy/src/hid/disp/display.h ****   private:
 474:../../libdaisy/src/hid/disp/display.h ****     uint32_t strlen(const char* string)
 475:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 295


 476:../../libdaisy/src/hid/disp/display.h ****         uint32_t result = 0;
 477:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 478:../../libdaisy/src/hid/disp/display.h ****             result++;
 479:../../libdaisy/src/hid/disp/display.h ****         return result;
 480:../../libdaisy/src/hid/disp/display.h ****     }
 481:../../libdaisy/src/hid/disp/display.h **** 
 482:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetTextRect(const char* text, const FontDef& font)
 5566              		.loc 5 482 15 is_stmt 1 view .LVU1237
 5567              	.LBB6411:
 5568              	.LBB6412:
 5569              	.LBI6412:
 474:../../libdaisy/src/hid/disp/display.h ****     {
 5570              		.loc 5 474 14 view .LVU1238
 5571              	.LBB6413:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5572              		.loc 5 477 25 view .LVU1239
 5573              	.LBE6413:
 5574              	.LBE6412:
 5575              	.LBE6411:
 5576              	.LBE6410:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5577              		.loc 5 460 15 is_stmt 0 view .LVU1240
 5578 000a 0690     		str	r0, [sp, #24]
 5579              	.LBB6428:
 5580              	.LBB6424:
 5581              	.LBB6417:
 5582              	.LBB6414:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5583              		.loc 5 477 25 view .LVU1241
 5584 000c 1046     		mov	r0, r2
 5585              	.LVL386:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5586              		.loc 5 477 25 view .LVU1242
 5587              	.LBE6414:
 5588              	.LBE6417:
 5589              	.LBE6424:
 5590              	.LBE6428:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5591              		.loc 5 460 15 view .LVU1243
 5592 000e 129C     		ldr	r4, [sp, #72]
 5593              	.LBB6429:
 5594              	.LBB6425:
 5595              	.LBB6418:
 5596              	.LBB6415:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5597              		.loc 5 477 25 view .LVU1244
 5598 0010 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5599              	.LVL387:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5600              		.loc 5 477 25 view .LVU1245
 5601              	.LBE6415:
 5602              	.LBE6418:
 5603              	.LBE6425:
 5604              	.LBE6429:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5605              		.loc 5 460 15 view .LVU1246
 5606 0014 1399     		ldr	r1, [sp, #76]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 296


 5607              	.LVL388:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 5608              		.loc 5 460 15 view .LVU1247
 5609 0016 9DF85060 		ldrb	r6, [sp, #80]	@ zero_extendqisi2
 5610 001a 0092     		str	r2, [sp]
 5611              	.LBB6430:
 5612              	.LBB6426:
 5613              	.LBB6419:
 5614              	.LBB6416:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5615              		.loc 5 477 25 view .LVU1248
 5616 001c 33B1     		cbz	r3, .L332
 476:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 5617              		.loc 5 476 18 view .LVU1249
 5618 001e 0022     		movs	r2, #0
 5619              	.LVL389:
 5620              	.L333:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5621              		.loc 5 477 25 view .LVU1250
 5622 0020 10F8013B 		ldrb	r3, [r0], #1	@ zero_extendqisi2
 5623              	.LVL390:
 478:../../libdaisy/src/hid/disp/display.h ****         return result;
 5624              		.loc 5 478 13 view .LVU1251
 5625 0024 0132     		adds	r2, r2, #1
 5626              	.LVL391:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 5627              		.loc 5 477 25 is_stmt 1 view .LVU1252
 5628 0026 002B     		cmp	r3, #0
 5629 0028 FAD1     		bne	.L333
 5630              	.LBE6416:
 5631              	.LBE6419:
 483:../../libdaisy/src/hid/disp/display.h ****     {
 484:../../libdaisy/src/hid/disp/display.h ****         const auto numChars = strlen(text);
 485:../../libdaisy/src/hid/disp/display.h ****         return {int16_t(numChars * font.FontWidth), font.FontHeight};
 5632              		.loc 5 485 68 is_stmt 0 view .LVU1253
 5633 002a 93B2     		uxth	r3, r2
 5634              	.LVL392:
 5635              	.L332:
 5636              		.loc 5 485 68 view .LVU1254
 5637 002c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 5638              		.loc 5 485 58 view .LVU1255
 5639 002e 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 5640              		.loc 5 485 68 view .LVU1256
 5641 0030 12FB03F3 		smulbb	r3, r2, r3
 5642 0034 02B2     		sxth	r2, r0
 5643              	.LVL393:
 5644              	.LBB6420:
 5645              	.LBI6420:
 5646              		.file 36 "../../libdaisy/src/hid/disp/graphics_common.h"
   1:../../libdaisy/src/hid/disp/graphics_common.h **** #pragma once
   2:../../libdaisy/src/hid/disp/graphics_common.h **** 
   3:../../libdaisy/src/hid/disp/graphics_common.h **** #include <cstdint>
   4:../../libdaisy/src/hid/disp/graphics_common.h **** 
   5:../../libdaisy/src/hid/disp/graphics_common.h **** namespace daisy
   6:../../libdaisy/src/hid/disp/graphics_common.h **** {
   7:../../libdaisy/src/hid/disp/graphics_common.h **** /** Justifications */
   8:../../libdaisy/src/hid/disp/graphics_common.h **** enum class Alignment
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 297


   9:../../libdaisy/src/hid/disp/graphics_common.h **** {
  10:../../libdaisy/src/hid/disp/graphics_common.h ****     centered,
  11:../../libdaisy/src/hid/disp/graphics_common.h ****     topLeft,
  12:../../libdaisy/src/hid/disp/graphics_common.h ****     topCentered,
  13:../../libdaisy/src/hid/disp/graphics_common.h ****     topRight,
  14:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomLeft,
  15:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomCentered,
  16:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomRight,
  17:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredLeft,
  18:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredRight
  19:../../libdaisy/src/hid/disp/graphics_common.h **** };
  20:../../libdaisy/src/hid/disp/graphics_common.h **** 
  21:../../libdaisy/src/hid/disp/graphics_common.h **** class Rectangle
  22:../../libdaisy/src/hid/disp/graphics_common.h **** {
  23:../../libdaisy/src/hid/disp/graphics_common.h ****   public:
  24:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle() : x_(0), y_(0), width_(0), height_(0) {}
  25:../../libdaisy/src/hid/disp/graphics_common.h **** 
  26:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t width, int16_t height)
 5647              		.loc 36 26 5 is_stmt 1 view .LVU1257
 5648              	.LBB6421:
 5649              	.LBI6421:
  27:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(0), y_(0), width_(max(0, width)), height_(max(0, height))
  28:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  29:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  30:../../libdaisy/src/hid/disp/graphics_common.h **** 
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t x, int16_t y, int16_t width, int16_t height)
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
  33:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  34:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  35:../../libdaisy/src/hid/disp/graphics_common.h **** 
  36:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(const Rectangle& other) { *this = other; }
  37:../../libdaisy/src/hid/disp/graphics_common.h **** 
  38:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle& operator=(const Rectangle& other)
  39:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  40:../../libdaisy/src/hid/disp/graphics_common.h ****         x_      = other.x_;
  41:../../libdaisy/src/hid/disp/graphics_common.h ****         y_      = other.y_;
  42:../../libdaisy/src/hid/disp/graphics_common.h ****         width_  = other.width_;
  43:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = other.height_;
  44:../../libdaisy/src/hid/disp/graphics_common.h ****         return *this;
  45:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  46:../../libdaisy/src/hid/disp/graphics_common.h **** 
  47:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator==(const Rectangle& other) const
  48:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  49:../../libdaisy/src/hid/disp/graphics_common.h ****         return (x_ == other.x_) && (y_ == other.y_) && (width_ == other.width_)
  50:../../libdaisy/src/hid/disp/graphics_common.h ****                && (height_ == other.height_);
  51:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  52:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator!=(const Rectangle& other) const { return !(*this == other); }
  53:../../libdaisy/src/hid/disp/graphics_common.h **** 
  54:../../libdaisy/src/hid/disp/graphics_common.h ****     bool IsEmpty() const { return (width_ <= 0) || (height_ <= 0); }
  55:../../libdaisy/src/hid/disp/graphics_common.h **** 
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetX() const { return x_; }
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
  58:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
  59:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetHeight() const { return height_; }
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetRight() const { return x_ + width_; }
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 298


  63:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
  64:../../libdaisy/src/hid/disp/graphics_common.h **** 
  65:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithX(int16_t x) const { return {x, y_, width_, height_}; }
  66:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithY(int16_t y) const { return {x_, y, width_, height_}; }
  67:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidth(int16_t width) const
  68:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  69:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height_};
  70:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  71:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeight(int16_t height) const
  72:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  73:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, height};
  74:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  75:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSize(int16_t width, int16_t height) const
  76:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  77:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height};
  78:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  79:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidthKeepingCenter(int16_t width) const
  80:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  81:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height_)
  82:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  83:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  84:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeightKeepingCenter(int16_t height) const
  85:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  86:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width_, height)
  87:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  88:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  89:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSizeKeepingCenter(int16_t width, int16_t height) const
  90:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  91:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height)
  92:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  93:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  94:../../libdaisy/src/hid/disp/graphics_common.h **** 
  95:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t sizeToReduce) const
  96:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  97:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + sizeToReduce),
  98:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + sizeToReduce),
  99:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * sizeToReduce),
 100:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * sizeToReduce)};
 101:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 102:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t xToReduce, int16_t yToReduce) const
 103:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 104:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + xToReduce),
 105:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + yToReduce),
 106:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * xToReduce),
 107:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * yToReduce)};
 108:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 109:../../libdaisy/src/hid/disp/graphics_common.h **** 
 110:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Translated(int16_t x, int16_t y) const
 111:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 112:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + x), int16_t(y_ + y), width_, height_};
 113:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 114:../../libdaisy/src/hid/disp/graphics_common.h **** 
 115:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithLeft(int16_t left) const
 116:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 117:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t((x_ - left) + width_);
 118:../../libdaisy/src/hid/disp/graphics_common.h ****         return {left, y_, newWidth, height_};
 119:../../libdaisy/src/hid/disp/graphics_common.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 299


 120:../../libdaisy/src/hid/disp/graphics_common.h **** 
 121:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithRight(int16_t right) const
 122:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 123:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t(right - x_);
 124:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, newWidth, height_};
 125:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 126:../../libdaisy/src/hid/disp/graphics_common.h **** 
 127:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTop(int16_t top) const
 128:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 129:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t((y_ - top) + height_);
 130:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, top, width_, newHeight};
 131:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 132:../../libdaisy/src/hid/disp/graphics_common.h **** 
 133:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithBottom(int16_t bottom) const
 134:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 135:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t(bottom - y_);
 136:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, newHeight};
 137:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 138:../../libdaisy/src/hid/disp/graphics_common.h **** 
 139:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedLeft(int16_t pxToTrim) const
 140:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 141:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 142:../../libdaisy/src/hid/disp/graphics_common.h ****             int16_t(x_ + pxToTrim), y_, int16_t(width_ - pxToTrim), height_};
 143:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 144:../../libdaisy/src/hid/disp/graphics_common.h **** 
 145:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedRight(int16_t pxToTrim) const
 146:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 147:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, int16_t(width_ - pxToTrim), height_};
 148:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 149:../../libdaisy/src/hid/disp/graphics_common.h **** 
 150:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedTop(int16_t pxToTrim) const
 151:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 152:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 153:../../libdaisy/src/hid/disp/graphics_common.h ****             x_, int16_t(y_ + pxToTrim), width_, int16_t(height_ - pxToTrim)};
 154:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 155:../../libdaisy/src/hid/disp/graphics_common.h **** 
 156:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedBottom(int16_t pxToTrim) const
 157:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 158:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, int16_t(height_ - pxToTrim)};
 159:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 160:../../libdaisy/src/hid/disp/graphics_common.h **** 
 161:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterX(int16_t centerX) const
 162:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 163:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()), y_, width_, height_};
 164:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 165:../../libdaisy/src/hid/disp/graphics_common.h **** 
 166:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterY(int16_t centerY) const
 167:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 168:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + centerY - GetCenterY()), width_, height_};
 169:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 170:../../libdaisy/src/hid/disp/graphics_common.h **** 
 171:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenter(int16_t centerX, int16_t centerY) const
 172:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 173:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()),
 174:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + centerY - GetCenterY()),
 175:../../libdaisy/src/hid/disp/graphics_common.h ****                 width_,
 176:../../libdaisy/src/hid/disp/graphics_common.h ****                 height_};
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 300


 177:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 178:../../libdaisy/src/hid/disp/graphics_common.h **** 
 179:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromLeft(int16_t pxToRemove)
 180:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 181:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithWidth(min(pxToRemove, width_));
 182:../../libdaisy/src/hid/disp/graphics_common.h ****         x_ += min(pxToRemove, width_);
 183:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ = max(int16_t(width_ - pxToRemove), 0);
 184:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 185:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 186:../../libdaisy/src/hid/disp/graphics_common.h **** 
 187:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromRight(int16_t pxToRemove)
 188:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 189:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, width_);
 190:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ -= canRemove;
 191:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + width_), y_, canRemove, height_};
 192:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 193:../../libdaisy/src/hid/disp/graphics_common.h **** 
 194:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromTop(int16_t pxToRemove)
 195:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 196:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithHeight(min(pxToRemove, height_));
 197:../../libdaisy/src/hid/disp/graphics_common.h ****         y_ += min(pxToRemove, height_);
 198:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = max(height_ - pxToRemove, 0);
 199:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 200:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 201:../../libdaisy/src/hid/disp/graphics_common.h **** 
 202:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromBottom(int16_t pxToRemove)
 203:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 204:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, height_);
 205:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ -= canRemove;
 206:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + height_), width_, canRemove};
 207:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 208:../../libdaisy/src/hid/disp/graphics_common.h **** 
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle AlignedWithin(const Rectangle& other, Alignment alignment) const
 210:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         switch(alignment)
 212:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 213:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topLeft:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 215:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 218:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 219:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 220:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topCentered:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 223:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 224:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 225:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomLeft:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 228:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 229:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 230:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomRight:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 233:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 301


 234:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 235:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomCentered:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 238:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 239:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 240:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredLeft:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 243:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 244:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 245:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredRight:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 248:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 249:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 250:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centered:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 253:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 254:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 255:../../libdaisy/src/hid/disp/graphics_common.h ****             default: return {};
 256:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 257:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 258:../../libdaisy/src/hid/disp/graphics_common.h **** 
 259:../../libdaisy/src/hid/disp/graphics_common.h ****   private:
 260:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t x_, y_, width_, height_;
 261:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t max(int16_t a, int16_t b) { return (a > b) ? a : b; }
 5650              		.loc 36 261 13 view .LVU1258
 5651              	.LBE6421:
 5652              	.LBE6420:
 5653              	.LBE6426:
 5654              	.LBE6430:
 5655              		.loc 36 261 41 view .LVU1259
 5656              	.LBB6431:
 5657              	.LBB6427:
 5658              	.LBB6423:
 5659              	.LBB6422:
 5660              	.LBI6422:
 5661              		.loc 36 261 13 view .LVU1260
 5662              	.LBE6422:
 5663              	.LBE6423:
 5664              	.LBE6427:
 5665              	.LBE6431:
 5666              		.loc 36 261 41 view .LVU1261
 5667              	.LBB6432:
 5668              	.LBI6432:
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5669              		.loc 36 209 15 view .LVU1262
 5670              	.LBB6433:
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 5671              		.loc 36 211 9 view .LVU1263
 5672 0036 1BB2     		sxth	r3, r3
 5673 0038 23EAE373 		bic	r3, r3, r3, asr #31
 5674 003c 0829     		cmp	r1, #8
 5675 003e 00F2A981 		bhi	.L334
 5676 0042 DFE811F0 		tbh	[pc, r1, lsl #1]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 302


 5677              	.L336:
 5678 0046 0201     		.2byte	(.L344-.L336)/2
 5679 0048 1401     		.2byte	(.L343-.L336)/2
 5680 004a 2001     		.2byte	(.L342-.L336)/2
 5681 004c 3401     		.2byte	(.L341-.L336)/2
 5682 004e 4201     		.2byte	(.L340-.L336)/2
 5683 0050 5001     		.2byte	(.L339-.L336)/2
 5684 0052 6701     		.2byte	(.L338-.L336)/2
 5685 0054 7101     		.2byte	(.L337-.L336)/2
 5686 0056 0900     		.2byte	(.L335-.L336)/2
 5687              		.p2align 1
 5688              	.L335:
 245:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5689              		.loc 36 245 13 view .LVU1264
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5690              		.loc 36 246 17 view .LVU1265
 5691              	.LVL394:
 5692              	.LBB6434:
 5693              	.LBI6434:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5694              		.loc 36 60 13 view .LVU1266
 5695              	.LBB6435:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5696              		.loc 36 60 32 view .LVU1267
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5697              		.loc 36 60 42 is_stmt 0 view .LVU1268
 5698 0058 A188     		ldrh	r1, [r4, #4]
 5699              	.LVL395:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5700              		.loc 36 60 42 view .LVU1269
 5701 005a 2788     		ldrh	r7, [r4]
 5702 005c 0F44     		add	r7, r7, r1
 5703              	.LBE6435:
 5704              	.LBE6434:
 5705              	.LBB6436:
 5706              	.LBB6437:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5707              		.loc 36 63 54 view .LVU1270
 5708 005e B4F90610 		ldrsh	r1, [r4, #6]
 5709              	.LBE6437:
 5710              	.LBE6436:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5711              		.loc 36 246 50 view .LVU1271
 5712 0062 FF1A     		subs	r7, r7, r3
 5713              	.LBB6441:
 5714              	.LBB6438:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5715              		.loc 36 63 54 view .LVU1272
 5716 0064 0029     		cmp	r1, #0
 5717              	.LBE6438:
 5718              	.LBE6441:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5719              		.loc 36 246 50 view .LVU1273
 5720 0066 BFB2     		uxth	r7, r7
 5721              	.LVL396:
 5722              	.LBB6442:
 5723              	.LBI6436:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 303


  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5724              		.loc 36 63 13 is_stmt 1 view .LVU1274
 5725              	.LBB6439:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5726              		.loc 36 63 34 view .LVU1275
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5727              		.loc 36 63 34 is_stmt 0 view .LVU1276
 5728              	.LBE6439:
 5729              	.LBE6442:
 5730              	.LBB6443:
 5731              	.LBI6443:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5732              		.loc 36 63 13 is_stmt 1 view .LVU1277
 5733              	.LBB6444:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5734              		.loc 36 63 34 view .LVU1278
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5735              		.loc 36 63 34 is_stmt 0 view .LVU1279
 5736              	.LBE6444:
 5737              	.LBE6443:
 5738              	.LBB6445:
 5739              	.LBB6440:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5740              		.loc 36 63 54 view .LVU1280
 5741 0068 C0F2FF80 		blt	.L407
 5742              	.L351:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5743              		.loc 36 63 54 view .LVU1281
 5744              	.LBE6440:
 5745              	.LBE6445:
 5746              	.LBB6446:
 5747              	.LBB6447:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5748              		.loc 36 63 44 view .LVU1282
 5749 006c B4F802C0 		ldrh	ip, [r4, #2]
 5750              	.LBE6447:
 5751              	.LBE6446:
 5752              	.LBB6453:
 5753              	.LBB6454:
 5754              	.LBB6455:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5755              		.loc 36 32 66 view .LVU1283
 5756 0070 0698     		ldr	r0, [sp, #24]
 5757              	.LBE6455:
 5758              	.LBE6454:
 5759              	.LBE6453:
 5760              	.LBB6466:
 5761              	.LBB6448:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5762              		.loc 36 63 44 view .LVU1284
 5763 0072 0CEB6104 		add	r4, ip, r1, asr #1
 5764              	.LVL397:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5765              		.loc 36 63 44 view .LVU1285
 5766              	.LBE6448:
 5767              	.LBE6466:
 5768              	.LBB6467:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 304


 5769              	.LBB6462:
 5770              	.LBB6458:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5771              		.loc 36 32 66 view .LVU1286
 5772 0076 C280     		strh	r2, [r0, #6]	@ movhi
 5773              	.LBE6458:
 5774              	.LBE6462:
 5775              	.LBE6467:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5776              		.loc 36 252 58 view .LVU1287
 5777 0078 A4EB5202 		sub	r2, r4, r2, lsr #1
 5778              	.LBB6468:
 5779              	.LBB6463:
 5780              	.LBB6459:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5781              		.loc 36 32 66 view .LVU1288
 5782 007c 8380     		strh	r3, [r0, #4]	@ movhi
 5783 007e 0780     		strh	r7, [r0]	@ movhi
 5784              	.LBE6459:
 5785              	.LBE6463:
 5786              	.LBE6468:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5787              		.loc 36 252 58 view .LVU1289
 5788 0080 94B2     		uxth	r4, r2
 5789              	.LVL398:
 5790              	.LBB6469:
 5791              	.LBI6453:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5792              		.loc 36 31 5 is_stmt 1 view .LVU1290
 5793              	.LBB6464:
 5794              	.LBB6460:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5795              		.loc 36 32 66 is_stmt 0 view .LVU1291
 5796 0082 4480     		strh	r4, [r0, #2]	@ movhi
 5797              	.LVL399:
 5798              	.LBB6456:
 5799              	.LBI6456:
 5800              		.loc 36 261 13 is_stmt 1 view .LVU1292
 5801              	.LBE6456:
 5802              	.LBE6460:
 5803              	.LBE6464:
 5804              	.LBE6469:
 5805              	.LBE6433:
 5806              	.LBE6432:
 5807              		.loc 36 261 41 view .LVU1293
 5808              	.LBB6656:
 5809              	.LBB6634:
 5810              	.LBB6470:
 5811              	.LBB6465:
 5812              	.LBB6461:
 5813              	.LBB6457:
 5814              	.LBI6457:
 5815              		.loc 36 261 13 view .LVU1294
 5816              	.LBE6457:
 5817              	.LBE6461:
 5818              	.LBE6465:
 5819              	.LBE6470:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 305


 5820              	.LBE6634:
 5821              	.LBE6656:
 5822              		.loc 36 261 41 view .LVU1295
 5823              	.L345:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 5824              		.loc 36 56 28 view .LVU1296
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 5825              		.loc 36 57 28 view .LVU1297
 5826              	.LBB6657:
 5827              	.LBI6657:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 5828              		.loc 5 171 10 view .LVU1298
 5829              	.LBB6658:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5830              		.loc 5 173 9 view .LVU1299
 5831 0084 A64A     		ldr	r2, .L417
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5832              		.loc 5 173 33 is_stmt 0 view .LVU1300
 5833 0086 D8F80030 		ldr	r3, [r8]
 5834 008a 1146     		mov	r1, r2
 5835 008c 0192     		str	r2, [sp, #4]
 5836 008e DA68     		ldr	r2, [r3, #12]
 5837 0090 8A42     		cmp	r2, r1
 5838 0092 40F08D81 		bne	.L353
 5839 0096 8020     		movs	r0, #128
 5840              	.LVL400:
 5841              	.L354:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5842              		.loc 5 173 19 view .LVU1301
 5843 0098 B842     		cmp	r0, r7
 5844 009a 05D8     		bhi	.L355
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5845              		.loc 5 173 44 view .LVU1302
 5846 009c DA68     		ldr	r2, [r3, #12]
 5847 009e 0199     		ldr	r1, [sp, #4]
 5848 00a0 8A42     		cmp	r2, r1
 5849 00a2 40F09A81 		bne	.L408
 5850 00a6 7F27     		movs	r7, #127
 5851              	.L355:
 5852 00a8 9E4A     		ldr	r2, .L417+4
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5853              		.loc 5 174 34 view .LVU1303
 5854 00aa 9B68     		ldr	r3, [r3, #8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 5855              		.loc 5 173 19 view .LVU1304
 5856 00ac A8F80470 		strh	r7, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5857              		.loc 5 174 9 is_stmt 1 view .LVU1305
 5858 00b0 9342     		cmp	r3, r2
 5859 00b2 0392     		str	r2, [sp, #12]
 5860 00b4 40F08981 		bne	.L385
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5861              		.loc 5 174 34 is_stmt 0 view .LVU1306
 5862 00b8 4020     		movs	r0, #64
 5863              	.L357:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5864              		.loc 5 174 19 view .LVU1307
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 306


 5865 00ba A042     		cmp	r0, r4
 5866 00bc 07D8     		bhi	.L359
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5867              		.loc 5 174 46 view .LVU1308
 5868 00be D8F80030 		ldr	r3, [r8]
 5869 00c2 039A     		ldr	r2, [sp, #12]
 5870 00c4 9B68     		ldr	r3, [r3, #8]
 5871 00c6 9342     		cmp	r3, r2
 5872 00c8 40F08281 		bne	.L409
 5873 00cc 3F24     		movs	r4, #63
 5874              	.L359:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5875              		.loc 5 174 46 view .LVU1309
 5876              	.LBE6658:
 5877              	.LBE6657:
 5878              	.LBB6662:
 5879              	.LBB6663:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5880              		.loc 5 443 9 view .LVU1310
 5881 00ce 009B     		ldr	r3, [sp]
 5882              	.LBE6663:
 5883              	.LBE6662:
 5884              	.LBB6711:
 5885              	.LBB6659:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5886              		.loc 5 174 19 view .LVU1311
 5887 00d0 A8F80640 		strh	r4, [r8, #6]	@ movhi
 5888              	.LVL401:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 5889              		.loc 5 174 19 view .LVU1312
 5890              	.LBE6659:
 5891              	.LBE6711:
 5892              	.LBB6712:
 5893              	.LBB6708:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5894              		.loc 5 443 9 view .LVU1313
 5895 00d4 93F800B0 		ldrb	fp, [r3]	@ zero_extendqisi2
 5896 00d8 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 5897              	.LVL402:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5898              		.loc 5 443 9 view .LVU1314
 5899 00da 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 5900              	.LVL403:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5901              		.loc 5 443 9 view .LVU1315
 5902 00dc 0493     		str	r3, [sp, #16]
 5903              	.LVL404:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5904              		.loc 5 443 9 view .LVU1316
 5905 00de 6B68     		ldr	r3, [r5, #4]
 5906 00e0 0793     		str	r3, [sp, #28]
 5907              	.LVL405:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5908              		.loc 5 443 9 view .LVU1317
 5909              	.LBE6708:
 5910              	.LBI6662:
 440:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 307


 5911              		.loc 5 440 10 is_stmt 1 view .LVU1318
 5912              	.LBB6709:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 5913              		.loc 5 443 9 view .LVU1319
 5914 00e2 BBF1000F 		cmp	fp, #0
 5915 00e6 00F0AC80 		beq	.L331
 5916              	.LVL406:
 5917              	.L361:
 5918              	.LBB6664:
 5919              	.LBI6664:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 5920              		.loc 5 396 10 view .LVU1320
 5921              	.LBB6665:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5922              		.loc 5 401 20 is_stmt 0 view .LVU1321
 5923 00ea ABF12005 		sub	r5, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 5924              		.loc 5 401 9 view .LVU1322
 5925 00ee EBB2     		uxtb	r3, r5
 5926 00f0 5E2B     		cmp	r3, #94
 5927 00f2 00F22E81 		bhi	.L365
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5928              		.loc 5 405 17 view .LVU1323
 5929 00f6 D8F80030 		ldr	r3, [r8]
 5930 00fa 019A     		ldr	r2, [sp, #4]
 5931 00fc DB68     		ldr	r3, [r3, #12]
 5932 00fe 9342     		cmp	r3, r2
 5933 0100 40F02A81 		bne	.L410
 5934 0104 8020     		movs	r0, #128
 5935              	.L364:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5936              		.loc 5 405 23 view .LVU1324
 5937 0106 B8F80430 		ldrh	r3, [r8, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 5938              		.loc 5 405 33 view .LVU1325
 5939 010a 2344     		add	r3, r3, r4
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5940              		.loc 5 406 12 view .LVU1326
 5941 010c 9842     		cmp	r0, r3
 5942 010e C0F22081 		blt	.L365
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5943              		.loc 5 406 21 view .LVU1327
 5944 0112 D8F80030 		ldr	r3, [r8]
 5945 0116 039A     		ldr	r2, [sp, #12]
 5946 0118 9B68     		ldr	r3, [r3, #8]
 5947 011a 9342     		cmp	r3, r2
 5948 011c 40F01F81 		bne	.L411
 5949 0120 4020     		movs	r0, #64
 5950              	.L366:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5951              		.loc 5 406 27 view .LVU1328
 5952 0122 B8F80610 		ldrh	r1, [r8, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5953              		.loc 5 406 37 view .LVU1329
 5954 0126 049A     		ldr	r2, [sp, #16]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5955              		.loc 5 406 27 view .LVU1330
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 308


 5956 0128 0291     		str	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5957              		.loc 5 406 37 view .LVU1331
 5958 012a 8B18     		adds	r3, r1, r2
 406:../../libdaisy/src/hid/disp/display.h ****         {
 5959              		.loc 5 406 12 view .LVU1332
 5960 012c 9842     		cmp	r0, r3
 5961 012e C0F21081 		blt	.L365
 5962              	.LVL407:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 5963              		.loc 5 413 22 is_stmt 1 view .LVU1333
 5964 0132 002A     		cmp	r2, #0
 5965 0134 00F01E81 		beq	.L367
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5966              		.loc 5 415 37 is_stmt 0 view .LVU1334
 5967 0138 02FB05F5 		mul	r5, r2, r5
 5968 013c 6FF0004E 		mvn	lr, #-2147483648
 5969 0140 079B     		ldr	r3, [sp, #28]
 5970 0142 AE44     		add	lr, lr, r5
 5971 0144 1544     		add	r5, r5, r2
 5972 0146 CDF814B0 		str	fp, [sp, #20]
 5973 014a 03EB4E0E 		add	lr, r3, lr, lsl #1
 5974 014e 023B     		subs	r3, r3, #2
 434:../../libdaisy/src/hid/disp/display.h **** 
 5975              		.loc 5 434 19 view .LVU1335
 5976 0150 B8F804A0 		ldrh	r10, [r8, #4]
 5977 0154 03EB4503 		add	r3, r3, r5, lsl #1
 5978 0158 0D46     		mov	r5, r1
 5979 015a 9B46     		mov	fp, r3
 5980              	.LVL408:
 5981              	.L370:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 5982              		.loc 5 415 15 view .LVU1336
 5983 015c 3EF8027F 		ldrh	r7, [lr, #2]!
 5984              	.LVL409:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 5985              		.loc 5 416 26 is_stmt 1 view .LVU1337
 5986 0160 A4B3     		cbz	r4, .L375
 5987              	.LBB6666:
 5988              	.LBB6667:
 5989              	.LBB6668:
 5990              	.LBB6669:
 5991              	.LBB6670:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5992              		.loc 15 246 55 is_stmt 0 view .LVU1338
 5993 0162 05F00703 		and	r3, r5, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5994              		.loc 15 246 49 view .LVU1339
 5995 0166 4FF0010C 		mov	ip, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5996              		.loc 15 246 28 view .LVU1340
 5997 016a EA08     		lsrs	r2, r5, #3
 5998 016c 5146     		mov	r1, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 5999              		.loc 15 246 49 view .LVU1341
 6000 016e 0CFA03FC 		lsl	ip, ip, r3
 6001 0172 0AF11403 		add	r3, r10, #20
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 309


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6002              		.loc 15 246 42 view .LVU1342
 6003 0176 4FFA8CFC 		sxtb	ip, ip
 6004 017a 03EBC212 		add	r2, r3, r2, lsl #7
 6005              	.LBE6670:
 6006              	.LBE6669:
 6007              	.LBE6668:
 6008              	.LBE6667:
 6009              	.LBE6666:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6010              		.loc 5 416 19 view .LVU1343
 6011 017e 0023     		movs	r3, #0
 6012              	.LBB6688:
 6013              	.LBB6683:
 6014              	.LBB6678:
 6015              	.LBB6674:
 6016              	.LBB6671:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6017              		.loc 15 246 42 view .LVU1344
 6018 0180 6FEA0C09 		mvn	r9, ip
 6019 0184 4244     		add	r2, r2, r8
 6020 0186 0DE0     		b	.L376
 6021              	.LVL410:
 6022              	.L412:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6023              		.loc 15 246 42 view .LVU1345
 6024              	.LBE6671:
 6025              	.LBE6674:
 6026              	.LBE6678:
 6027              	.LBE6683:
 6028              	.LBE6688:
 6029              	.LBB6689:
 6030              	.LBI6689:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6031              		.loc 4 41 10 is_stmt 1 view .LVU1346
 6032              	.LBB6690:
 6033              	.LBI6690:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6034              		.loc 15 239 10 view .LVU1347
 6035              	.LBB6691:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6036              		.loc 15 241 9 is_stmt 0 view .LVU1348
 6037 0188 7F29     		cmp	r1, #127
 6038 018a 06D8     		bhi	.L372
 6039 018c 3F2D     		cmp	r5, #63
 6040 018e 04D8     		bhi	.L372
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6041              		.loc 15 244 42 view .LVU1349
 6042 0190 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6043              		.loc 15 243 9 view .LVU1350
 6044 0192 96B1     		cbz	r6, .L374
 6045              	.L406:
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6046              		.loc 15 243 9 view .LVU1351
 6047              	.LBE6691:
 6048              	.LBE6690:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 310


 6049              	.LBE6689:
 6050              	.LBB6692:
 6051              	.LBB6684:
 6052              	.LBB6679:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6053              		.loc 15 244 42 view .LVU1352
 6054 0194 4CEA0000 		orr	r0, ip, r0
 6055 0198 1070     		strb	r0, [r2]
 6056              	.L372:
 6057              	.LBE6679:
 6058              	.LBE6684:
 6059              	.LBE6692:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6060              		.loc 5 416 13 is_stmt 1 view .LVU1353
 6061 019a 0133     		adds	r3, r3, #1
 6062              	.LVL411:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6063              		.loc 5 416 26 view .LVU1354
 6064 019c 0132     		adds	r2, r2, #1
 6065 019e 0131     		adds	r1, r1, #1
 6066 01a0 9C42     		cmp	r4, r3
 6067 01a2 13D0     		beq	.L375
 6068              	.LVL412:
 6069              	.L376:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 6070              		.loc 5 418 23 is_stmt 0 view .LVU1355
 6071 01a4 07FA03F0 		lsl	r0, r7, r3
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 6072              		.loc 5 418 17 view .LVU1356
 6073 01a8 0004     		lsls	r0, r0, #16
 6074 01aa EDD4     		bmi	.L412
 6075              	.LVL413:
 6076              	.LBB6693:
 6077              	.LBI6666:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6078              		.loc 4 41 10 is_stmt 1 view .LVU1357
 6079              	.LBB6685:
 6080              	.LBI6667:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6081              		.loc 15 239 10 view .LVU1358
 6082              	.LBB6680:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 6083              		.loc 15 241 9 is_stmt 0 view .LVU1359
 6084 01ac 7F29     		cmp	r1, #127
 6085 01ae F4D8     		bhi	.L372
 6086 01b0 3F2D     		cmp	r5, #63
 6087 01b2 F2D8     		bhi	.L372
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 6088              		.loc 15 244 42 view .LVU1360
 6089 01b4 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 6090              		.loc 15 243 9 view .LVU1361
 6091 01b6 002E     		cmp	r6, #0
 6092 01b8 ECD0     		beq	.L406
 6093              	.L374:
 6094              	.LVL414:
 6095              	.LBB6675:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 311


 6096              	.LBI6669:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6097              		.loc 15 239 10 is_stmt 1 view .LVU1362
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6098              		.loc 15 239 10 is_stmt 0 view .LVU1363
 6099              	.LBE6675:
 6100              	.LBE6680:
 6101              	.LBE6685:
 6102              	.LBE6693:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6103              		.loc 5 416 13 view .LVU1364
 6104 01ba 0133     		adds	r3, r3, #1
 6105              	.LVL415:
 6106              	.LBB6694:
 6107              	.LBB6686:
 6108              	.LBB6681:
 6109              	.LBB6676:
 6110              	.LBB6672:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6111              		.loc 15 246 42 view .LVU1365
 6112 01bc 09EA0000 		and	r0, r9, r0
 6113              	.LBE6672:
 6114              	.LBE6676:
 6115              	.LBE6681:
 6116              	.LBE6686:
 6117              	.LBE6694:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6118              		.loc 5 416 26 view .LVU1366
 6119 01c0 0132     		adds	r2, r2, #1
 6120 01c2 0131     		adds	r1, r1, #1
 6121 01c4 9C42     		cmp	r4, r3
 6122              	.LBB6695:
 6123              	.LBB6687:
 6124              	.LBB6682:
 6125              	.LBB6677:
 6126              	.LBB6673:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6127              		.loc 15 246 42 view .LVU1367
 6128 01c6 02F8010C 		strb	r0, [r2, #-1]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 6129              		.loc 15 246 42 view .LVU1368
 6130              	.LBE6673:
 6131              	.LBE6677:
 6132              	.LBE6682:
 6133              	.LBE6687:
 6134              	.LBE6695:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6135              		.loc 5 416 13 is_stmt 1 view .LVU1369
 6136              	.LVL416:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 6137              		.loc 5 416 26 view .LVU1370
 6138 01ca EBD1     		bne	.L376
 6139              	.LVL417:
 6140              	.L375:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 6141              		.loc 5 413 9 view .LVU1371
 413:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 312


 6142              		.loc 5 413 22 view .LVU1372
 6143 01cc F345     		cmp	fp, lr
 6144 01ce 05F10105 		add	r5, r5, #1
 6145 01d2 C3D1     		bne	.L370
 6146 01d4 DDF814B0 		ldr	fp, [sp, #20]
 6147              	.LVL418:
 6148              	.L369:
 6149              	.LBB6696:
 6150              	.LBB6697:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6151              		.loc 5 173 33 is_stmt 0 view .LVU1373
 6152 01d8 D8F80020 		ldr	r2, [r8]
 6153              	.LBE6697:
 6154              	.LBE6696:
 434:../../libdaisy/src/hid/disp/display.h **** 
 6155              		.loc 5 434 18 view .LVU1374
 6156 01dc 0AEB0405 		add	r5, r10, r4
 6157 01e0 0199     		ldr	r1, [sp, #4]
 6158              	.LBB6702:
 6159              	.LBB6698:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6160              		.loc 5 173 33 view .LVU1375
 6161 01e2 D368     		ldr	r3, [r2, #12]
 6162              	.LBE6698:
 6163              	.LBE6702:
 434:../../libdaisy/src/hid/disp/display.h **** 
 6164              		.loc 5 434 18 view .LVU1376
 6165 01e4 ADB2     		uxth	r5, r5
 6166              	.LVL419:
 6167              	.LBB6703:
 6168              	.LBI6696:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 6169              		.loc 5 171 10 is_stmt 1 view .LVU1377
 6170              	.LBB6699:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6171              		.loc 5 173 9 view .LVU1378
 6172 01e6 8B42     		cmp	r3, r1
 6173 01e8 40F0BF80 		bne	.L413
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6174              		.loc 5 173 33 is_stmt 0 view .LVU1379
 6175 01ec 8020     		movs	r0, #128
 6176              	.L377:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6177              		.loc 5 173 19 view .LVU1380
 6178 01ee 8542     		cmp	r5, r0
 6179 01f0 05D3     		bcc	.L378
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6180              		.loc 5 173 44 view .LVU1381
 6181 01f2 D368     		ldr	r3, [r2, #12]
 6182 01f4 0199     		ldr	r1, [sp, #4]
 6183 01f6 8B42     		cmp	r3, r1
 6184 01f8 40F0C580 		bne	.L414
 6185 01fc 7F25     		movs	r5, #127
 6186              	.LVL420:
 6187              	.L378:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6188              		.loc 5 174 34 view .LVU1382
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 313


 6189 01fe 9368     		ldr	r3, [r2, #8]
 6190 0200 039A     		ldr	r2, [sp, #12]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 6191              		.loc 5 173 19 view .LVU1383
 6192 0202 A8F80450 		strh	r5, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6193              		.loc 5 174 9 is_stmt 1 view .LVU1384
 6194 0206 9342     		cmp	r3, r2
 6195 0208 40F0AC80 		bne	.L415
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6196              		.loc 5 174 34 is_stmt 0 view .LVU1385
 6197 020c 4020     		movs	r0, #64
 6198              	.L380:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6199              		.loc 5 174 19 view .LVU1386
 6200 020e 029B     		ldr	r3, [sp, #8]
 6201 0210 8342     		cmp	r3, r0
 6202 0212 08D3     		bcc	.L381
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6203              		.loc 5 174 46 view .LVU1387
 6204 0214 D8F80030 		ldr	r3, [r8]
 6205 0218 039A     		ldr	r2, [sp, #12]
 6206 021a 9B68     		ldr	r3, [r3, #8]
 6207 021c 9342     		cmp	r3, r2
 6208 021e 40F0AC80 		bne	.L416
 6209 0222 3F23     		movs	r3, #63
 6210 0224 0293     		str	r3, [sp, #8]
 6211              	.LVL421:
 6212              	.L381:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6213              		.loc 5 174 19 view .LVU1388
 6214 0226 029B     		ldr	r3, [sp, #8]
 6215 0228 A8F80630 		strh	r3, [r8, #6]	@ movhi
 6216              	.LVL422:
 6217              	.L363:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 6218              		.loc 5 174 19 view .LVU1389
 6219              	.LBE6699:
 6220              	.LBE6703:
 6221              	.LBE6665:
 6222              	.LBE6664:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 6223              		.loc 5 445 13 view .LVU1390
 6224 022c 009A     		ldr	r2, [sp]
 6225 022e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6226 0230 5B45     		cmp	r3, fp
 6227 0232 06D1     		bne	.L331
 6228              	.LVL423:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 6229              		.loc 5 443 9 is_stmt 1 view .LVU1391
 6230 0234 12F801BF 		ldrb	fp, [r2, #1]!	@ zero_extendqisi2
 6231              	.LVL424:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 6232              		.loc 5 443 9 is_stmt 0 view .LVU1392
 6233 0238 0092     		str	r2, [sp]
 6234 023a BBF1000F 		cmp	fp, #0
 6235 023e 7FF454AF 		bne	.L361
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 314


 6236              	.LVL425:
 6237              	.L331:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 6238              		.loc 5 443 9 view .LVU1393
 6239              	.LBE6709:
 6240              	.LBE6712:
 471:../../libdaisy/src/hid/disp/display.h **** 
 6241              		.loc 5 471 5 view .LVU1394
 6242 0242 0698     		ldr	r0, [sp, #24]
 6243 0244 09B0     		add	sp, sp, #36
 6244              		.cfi_remember_state
 6245              		.cfi_def_cfa_offset 36
 6246              		@ sp needed
 6247 0246 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6248              	.LVL426:
 6249              	.L344:
 6250              		.cfi_restore_state
 6251              	.LBB6713:
 6252              	.LBB6635:
 250:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6253              		.loc 36 250 13 is_stmt 1 view .LVU1395
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6254              		.loc 36 251 17 view .LVU1396
 6255              	.LBB6471:
 6256              	.LBI6471:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6257              		.loc 36 62 13 view .LVU1397
 6258              	.LBB6472:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6259              		.loc 36 62 34 view .LVU1398
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6260              		.loc 36 62 34 is_stmt 0 view .LVU1399
 6261              	.LBE6472:
 6262              	.LBE6471:
 6263              	.LBB6474:
 6264              	.LBI6474:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6265              		.loc 36 62 13 is_stmt 1 view .LVU1400
 6266              	.LBB6475:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6267              		.loc 36 62 34 view .LVU1401
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6268              		.loc 36 62 34 is_stmt 0 view .LVU1402
 6269              	.LBE6475:
 6270              	.LBE6474:
 6271              	.LBB6476:
 6272              	.LBB6473:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6273              		.loc 36 62 53 view .LVU1403
 6274 024a B4F90410 		ldrsh	r1, [r4, #4]
 6275              	.LVL427:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6276              		.loc 36 62 44 view .LVU1404
 6277 024e 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6278              		.loc 36 62 53 view .LVU1405
 6279 0250 0029     		cmp	r1, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 315


 6280 0252 B8BF     		it	lt
 6281 0254 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6282              		.loc 36 62 44 view .LVU1406
 6283 0256 07EB6107 		add	r7, r7, r1, asr #1
 6284              	.LBE6473:
 6285              	.LBE6476:
 6286              	.LBB6477:
 6287              	.LBB6449:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6288              		.loc 36 63 54 view .LVU1407
 6289 025a B4F90610 		ldrsh	r1, [r4, #6]
 6290              	.LBE6449:
 6291              	.LBE6477:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6292              		.loc 36 251 58 view .LVU1408
 6293 025e A7EB6307 		sub	r7, r7, r3, asr #1
 6294              	.LBB6478:
 6295              	.LBB6450:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6296              		.loc 36 63 54 view .LVU1409
 6297 0262 0029     		cmp	r1, #0
 6298              	.LBE6450:
 6299              	.LBE6478:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6300              		.loc 36 251 58 view .LVU1410
 6301 0264 BFB2     		uxth	r7, r7
 6302              	.LVL428:
 6303              	.LBB6479:
 6304              	.LBI6446:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6305              		.loc 36 63 13 is_stmt 1 view .LVU1411
 6306              	.LBB6451:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6307              		.loc 36 63 34 view .LVU1412
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6308              		.loc 36 63 34 is_stmt 0 view .LVU1413
 6309              	.LBE6451:
 6310              	.LBE6479:
 6311              	.LBB6480:
 6312              	.LBI6480:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6313              		.loc 36 63 13 is_stmt 1 view .LVU1414
 6314              	.LBB6481:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6315              		.loc 36 63 34 view .LVU1415
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6316              		.loc 36 63 34 is_stmt 0 view .LVU1416
 6317              	.LBE6481:
 6318              	.LBE6480:
 6319              	.LBB6482:
 6320              	.LBB6452:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6321              		.loc 36 63 54 view .LVU1417
 6322 0266 BFF601AF 		bge	.L351
 6323              	.L407:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 316


 6324              		.loc 36 63 54 view .LVU1418
 6325 026a 0131     		adds	r1, r1, #1
 6326 026c FEE6     		b	.L351
 6327              	.LVL429:
 6328              	.L343:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6329              		.loc 36 63 54 view .LVU1419
 6330              	.LBE6452:
 6331              	.LBE6482:
 213:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 6332              		.loc 36 213 13 is_stmt 1 view .LVU1420
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 6333              		.loc 36 214 17 view .LVU1421
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 6334              		.loc 36 214 31 is_stmt 0 view .LVU1422
 6335 026e B4F90070 		ldrsh	r7, [r4]
 6336              	.LBB6483:
 6337              	.LBB6484:
 6338              	.LBB6485:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6339              		.loc 36 32 66 view .LVU1423
 6340 0272 0699     		ldr	r1, [sp, #24]
 6341              	.LVL430:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6342              		.loc 36 32 66 view .LVU1424
 6343              	.LBE6485:
 6344              	.LBE6484:
 6345              	.LBE6483:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 6346              		.loc 36 214 41 view .LVU1425
 6347 0274 B4F90240 		ldrsh	r4, [r4, #2]
 6348              	.LVL431:
 6349              	.LBB6498:
 6350              	.LBI6483:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6351              		.loc 36 31 5 is_stmt 1 view .LVU1426
 6352              	.LBB6493:
 6353              	.LBB6488:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6354              		.loc 36 32 66 is_stmt 0 view .LVU1427
 6355 0278 0F80     		strh	r7, [r1]	@ movhi
 6356              	.LBE6488:
 6357              	.LBE6493:
 6358              	.LBE6498:
 6359              	.LBE6635:
 6360              	.LBE6713:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6361              		.loc 5 468 18 view .LVU1428
 6362 027a BFB2     		uxth	r7, r7
 6363              	.LVL432:
 6364              	.LBB6714:
 6365              	.LBB6636:
 6366              	.LBB6499:
 6367              	.LBB6494:
 6368              	.LBB6489:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6369              		.loc 36 32 66 view .LVU1429
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 317


 6370 027c 4C80     		strh	r4, [r1, #2]	@ movhi
 6371              	.LBE6489:
 6372              	.LBE6494:
 6373              	.LBE6499:
 6374              	.LBE6636:
 6375              	.LBE6714:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6376              		.loc 5 468 18 view .LVU1430
 6377 027e A4B2     		uxth	r4, r4
 6378              	.LVL433:
 6379              	.LBB6715:
 6380              	.LBB6637:
 6381              	.LBB6500:
 6382              	.LBB6495:
 6383              	.LBB6490:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6384              		.loc 36 32 66 view .LVU1431
 6385 0280 8B80     		strh	r3, [r1, #4]	@ movhi
 6386              	.LVL434:
 6387              	.LBB6486:
 6388              	.LBI6486:
 6389              		.loc 36 261 13 is_stmt 1 view .LVU1432
 6390              	.LBE6486:
 6391              	.LBE6490:
 6392              	.LBE6495:
 6393              	.LBE6500:
 6394              	.LBE6637:
 6395              	.LBE6715:
 6396              		.loc 36 261 41 view .LVU1433
 6397              	.LBB6716:
 6398              	.LBB6638:
 6399              	.LBB6501:
 6400              	.LBB6496:
 6401              	.LBB6491:
 6402              	.LBB6487:
 6403              	.LBI6487:
 6404              		.loc 36 261 13 view .LVU1434
 6405              	.LBE6487:
 6406              	.LBE6491:
 6407              	.LBE6496:
 6408              	.LBE6501:
 6409              	.LBE6638:
 6410              	.LBE6716:
 6411              		.loc 36 261 41 view .LVU1435
 6412              	.LBB6717:
 6413              	.LBB6639:
 6414              	.LBB6502:
 6415              	.LBB6497:
 6416              	.LBB6492:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6417              		.loc 36 32 66 is_stmt 0 view .LVU1436
 6418 0282 CA80     		strh	r2, [r1, #6]	@ movhi
 6419              	.LBE6492:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6420              		.loc 36 34 5 view .LVU1437
 6421 0284 FEE6     		b	.L345
 6422              	.LVL435:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 318


 6423              	.L342:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6424              		.loc 36 34 5 view .LVU1438
 6425              	.LBE6497:
 6426              	.LBE6502:
 220:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6427              		.loc 36 220 13 is_stmt 1 view .LVU1439
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6428              		.loc 36 221 17 view .LVU1440
 6429              	.LBB6503:
 6430              	.LBI6503:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6431              		.loc 36 62 13 view .LVU1441
 6432              	.LBB6504:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6433              		.loc 36 62 34 view .LVU1442
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6434              		.loc 36 62 34 is_stmt 0 view .LVU1443
 6435              	.LBE6504:
 6436              	.LBE6503:
 6437              	.LBB6507:
 6438              	.LBI6507:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6439              		.loc 36 62 13 is_stmt 1 view .LVU1444
 6440              	.LBB6508:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6441              		.loc 36 62 34 view .LVU1445
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6442              		.loc 36 62 34 is_stmt 0 view .LVU1446
 6443              	.LBE6508:
 6444              	.LBE6507:
 6445              	.LBB6509:
 6446              	.LBB6505:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6447              		.loc 36 62 53 view .LVU1447
 6448 0286 B4F90410 		ldrsh	r1, [r4, #4]
 6449              	.LVL436:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6450              		.loc 36 62 44 view .LVU1448
 6451 028a 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6452              		.loc 36 62 53 view .LVU1449
 6453 028c 0029     		cmp	r1, #0
 6454              	.LBE6505:
 6455              	.LBE6509:
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6456              		.loc 36 222 31 view .LVU1450
 6457 028e B4F90240 		ldrsh	r4, [r4, #2]
 6458              	.LVL437:
 6459              	.LBB6510:
 6460              	.LBB6506:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6461              		.loc 36 62 53 view .LVU1451
 6462 0292 B8BF     		it	lt
 6463 0294 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6464              		.loc 36 62 44 view .LVU1452
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 319


 6465 0296 07EB6107 		add	r7, r7, r1, asr #1
 6466              	.LBE6506:
 6467              	.LBE6510:
 6468              	.LBB6511:
 6469              	.LBB6512:
 6470              	.LBB6513:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6471              		.loc 36 32 66 view .LVU1453
 6472 029a 0699     		ldr	r1, [sp, #24]
 6473 029c 8B80     		strh	r3, [r1, #4]	@ movhi
 6474              	.LBE6513:
 6475              	.LBE6512:
 6476              	.LBE6511:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6477              		.loc 36 221 58 view .LVU1454
 6478 029e A7EB6303 		sub	r3, r7, r3, asr #1
 6479              	.LBB6524:
 6480              	.LBB6520:
 6481              	.LBB6516:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6482              		.loc 36 32 66 view .LVU1455
 6483 02a2 4C80     		strh	r4, [r1, #2]	@ movhi
 6484              	.LBE6516:
 6485              	.LBE6520:
 6486              	.LBE6524:
 6487              	.LBE6639:
 6488              	.LBE6717:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6489              		.loc 5 468 18 view .LVU1456
 6490 02a4 A4B2     		uxth	r4, r4
 6491              	.LBB6718:
 6492              	.LBB6640:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6493              		.loc 36 221 58 view .LVU1457
 6494 02a6 9FB2     		uxth	r7, r3
 6495              	.LVL438:
 6496              	.LBB6525:
 6497              	.LBI6511:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6498              		.loc 36 31 5 is_stmt 1 view .LVU1458
 6499              	.LBB6521:
 6500              	.LBB6517:
 6501              	.LBB6514:
 6502              	.LBI6514:
 6503              		.loc 36 261 13 view .LVU1459
 6504              	.LBE6514:
 6505              	.LBE6517:
 6506              	.LBE6521:
 6507              	.LBE6525:
 6508              	.LBE6640:
 6509              	.LBE6718:
 6510              		.loc 36 261 41 view .LVU1460
 6511              	.LBB6719:
 6512              	.LBB6641:
 6513              	.LBB6526:
 6514              	.LBB6522:
 6515              	.LBB6518:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 320


 6516              	.LBB6515:
 6517              	.LBI6515:
 6518              		.loc 36 261 13 view .LVU1461
 6519              	.LBE6515:
 6520              	.LBE6518:
 6521              	.LBE6522:
 6522              	.LBE6526:
 6523              	.LBE6641:
 6524              	.LBE6719:
 6525              		.loc 36 261 41 view .LVU1462
 6526              	.LBB6720:
 6527              	.LBB6642:
 6528              	.LBB6527:
 6529              	.LBB6523:
 6530              	.LBB6519:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6531              		.loc 36 32 66 is_stmt 0 view .LVU1463
 6532 02a8 CA80     		strh	r2, [r1, #6]	@ movhi
 6533 02aa 0F80     		strh	r7, [r1]	@ movhi
 6534              	.LBE6519:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6535              		.loc 36 34 5 view .LVU1464
 6536 02ac EAE6     		b	.L345
 6537              	.LVL439:
 6538              	.L341:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6539              		.loc 36 34 5 view .LVU1465
 6540              	.LBE6523:
 6541              	.LBE6527:
 215:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6542              		.loc 36 215 13 is_stmt 1 view .LVU1466
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6543              		.loc 36 216 17 view .LVU1467
 6544              	.LBB6528:
 6545              	.LBI6528:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6546              		.loc 36 60 13 view .LVU1468
 6547              	.LBB6529:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6548              		.loc 36 60 32 view .LVU1469
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6549              		.loc 36 60 42 is_stmt 0 view .LVU1470
 6550 02ae A188     		ldrh	r1, [r4, #4]
 6551              	.LVL440:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6552              		.loc 36 60 42 view .LVU1471
 6553 02b0 2788     		ldrh	r7, [r4]
 6554              	.LBE6529:
 6555              	.LBE6528:
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6556              		.loc 36 217 31 view .LVU1472
 6557 02b2 B4F90240 		ldrsh	r4, [r4, #2]
 6558              	.LVL441:
 6559              	.LBB6531:
 6560              	.LBB6530:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6561              		.loc 36 60 42 view .LVU1473
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 321


 6562 02b6 0F44     		add	r7, r7, r1
 6563              	.LBE6530:
 6564              	.LBE6531:
 6565              	.LBB6532:
 6566              	.LBB6533:
 6567              	.LBB6534:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6568              		.loc 36 32 66 view .LVU1474
 6569 02b8 0699     		ldr	r1, [sp, #24]
 6570 02ba 8B80     		strh	r3, [r1, #4]	@ movhi
 6571              	.LBE6534:
 6572              	.LBE6533:
 6573              	.LBE6532:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6574              		.loc 36 216 50 view .LVU1475
 6575 02bc FB1A     		subs	r3, r7, r3
 6576              	.LBB6545:
 6577              	.LBB6541:
 6578              	.LBB6537:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6579              		.loc 36 32 66 view .LVU1476
 6580 02be 4C80     		strh	r4, [r1, #2]	@ movhi
 6581              	.LBE6537:
 6582              	.LBE6541:
 6583              	.LBE6545:
 6584              	.LBE6642:
 6585              	.LBE6720:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6586              		.loc 5 468 18 view .LVU1477
 6587 02c0 A4B2     		uxth	r4, r4
 6588              	.LBB6721:
 6589              	.LBB6643:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 6590              		.loc 36 216 50 view .LVU1478
 6591 02c2 9FB2     		uxth	r7, r3
 6592              	.LVL442:
 6593              	.LBB6546:
 6594              	.LBI6532:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6595              		.loc 36 31 5 is_stmt 1 view .LVU1479
 6596              	.LBB6542:
 6597              	.LBB6538:
 6598              	.LBB6535:
 6599              	.LBI6535:
 6600              		.loc 36 261 13 view .LVU1480
 6601              	.LBE6535:
 6602              	.LBE6538:
 6603              	.LBE6542:
 6604              	.LBE6546:
 6605              	.LBE6643:
 6606              	.LBE6721:
 6607              		.loc 36 261 41 view .LVU1481
 6608              	.LBB6722:
 6609              	.LBB6644:
 6610              	.LBB6547:
 6611              	.LBB6543:
 6612              	.LBB6539:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 322


 6613              	.LBB6536:
 6614              	.LBI6536:
 6615              		.loc 36 261 13 view .LVU1482
 6616              	.LBE6536:
 6617              	.LBE6539:
 6618              	.LBE6543:
 6619              	.LBE6547:
 6620              	.LBE6644:
 6621              	.LBE6722:
 6622              		.loc 36 261 41 view .LVU1483
 6623              	.LBB6723:
 6624              	.LBB6645:
 6625              	.LBB6548:
 6626              	.LBB6544:
 6627              	.LBB6540:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6628              		.loc 36 32 66 is_stmt 0 view .LVU1484
 6629 02c4 CA80     		strh	r2, [r1, #6]	@ movhi
 6630 02c6 0F80     		strh	r7, [r1]	@ movhi
 6631              	.LBE6540:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6632              		.loc 36 34 5 view .LVU1485
 6633 02c8 DCE6     		b	.L345
 6634              	.LVL443:
 6635              	.L340:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6636              		.loc 36 34 5 view .LVU1486
 6637              	.LBE6544:
 6638              	.LBE6548:
 225:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6639              		.loc 36 225 13 is_stmt 1 view .LVU1487
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6640              		.loc 36 226 17 view .LVU1488
 6641              	.LBB6549:
 6642              	.LBB6550:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6643              		.loc 36 61 43 is_stmt 0 view .LVU1489
 6644 02ca E788     		ldrh	r7, [r4, #6]
 6645 02cc 6188     		ldrh	r1, [r4, #2]
 6646              	.LVL444:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6647              		.loc 36 61 43 view .LVU1490
 6648 02ce 3944     		add	r1, r1, r7
 6649              	.LBE6550:
 6650              	.LBE6549:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6651              		.loc 36 226 31 view .LVU1491
 6652 02d0 B4F90070 		ldrsh	r7, [r4]
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6653              		.loc 36 227 51 view .LVU1492
 6654 02d4 081A     		subs	r0, r1, r0
 6655              	.LVL445:
 6656              	.LBB6552:
 6657              	.LBI6549:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6658              		.loc 36 61 13 is_stmt 1 view .LVU1493
 6659              	.LBB6551:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 323


  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6660              		.loc 36 61 33 view .LVU1494
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6661              		.loc 36 61 33 is_stmt 0 view .LVU1495
 6662              	.LBE6551:
 6663              	.LBE6552:
 6664              	.LBB6553:
 6665              	.LBB6554:
 6666              	.LBB6555:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6667              		.loc 36 32 66 view .LVU1496
 6668 02d6 0699     		ldr	r1, [sp, #24]
 6669              	.LBE6555:
 6670              	.LBE6554:
 6671              	.LBE6553:
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6672              		.loc 36 227 51 view .LVU1497
 6673 02d8 84B2     		uxth	r4, r0
 6674              	.LVL446:
 6675              	.LBB6565:
 6676              	.LBB6561:
 6677              	.LBB6558:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6678              		.loc 36 32 66 view .LVU1498
 6679 02da 0F80     		strh	r7, [r1]	@ movhi
 6680 02dc 8B80     		strh	r3, [r1, #4]	@ movhi
 6681              	.LVL447:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6682              		.loc 36 32 66 view .LVU1499
 6683              	.LBE6558:
 6684              	.LBE6561:
 6685              	.LBI6553:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6686              		.loc 36 31 5 is_stmt 1 view .LVU1500
 6687              	.LBE6565:
 6688              	.LBE6645:
 6689              	.LBE6723:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6690              		.loc 5 468 18 is_stmt 0 view .LVU1501
 6691 02de BFB2     		uxth	r7, r7
 6692              	.LVL448:
 6693              	.LBB6724:
 6694              	.LBB6646:
 6695              	.LBB6566:
 6696              	.LBB6562:
 6697              	.LBB6559:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6698              		.loc 36 32 66 view .LVU1502
 6699 02e0 CA80     		strh	r2, [r1, #6]	@ movhi
 6700 02e2 4C80     		strh	r4, [r1, #2]	@ movhi
 6701              	.LVL449:
 6702              	.LBB6556:
 6703              	.LBI6556:
 6704              		.loc 36 261 13 is_stmt 1 view .LVU1503
 6705              	.LBE6556:
 6706              	.LBE6559:
 6707              	.LBE6562:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 324


 6708              	.LBE6566:
 6709              	.LBE6646:
 6710              	.LBE6724:
 6711              		.loc 36 261 41 view .LVU1504
 6712              	.LBB6725:
 6713              	.LBB6647:
 6714              	.LBB6567:
 6715              	.LBB6563:
 6716              	.LBB6560:
 6717              	.LBB6557:
 6718              	.LBI6557:
 6719              		.loc 36 261 13 view .LVU1505
 6720              	.LBE6557:
 6721              	.LBE6560:
 6722              	.LBE6563:
 6723              	.LBE6567:
 6724              	.LBE6647:
 6725              	.LBE6725:
 6726              		.loc 36 261 41 view .LVU1506
 6727              	.LBB6726:
 6728              	.LBB6648:
 6729              	.LBB6568:
 6730              	.LBB6564:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6731              		.loc 36 34 5 is_stmt 0 view .LVU1507
 6732 02e4 CEE6     		b	.L345
 6733              	.LVL450:
 6734              	.L339:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6735              		.loc 36 34 5 view .LVU1508
 6736              	.LBE6564:
 6737              	.LBE6568:
 235:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 6738              		.loc 36 235 13 is_stmt 1 view .LVU1509
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6739              		.loc 36 236 17 view .LVU1510
 6740              	.LBB6569:
 6741              	.LBI6569:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6742              		.loc 36 62 13 view .LVU1511
 6743              	.LBB6570:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6744              		.loc 36 62 34 view .LVU1512
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6745              		.loc 36 62 34 is_stmt 0 view .LVU1513
 6746              	.LBE6570:
 6747              	.LBE6569:
 6748              	.LBB6572:
 6749              	.LBI6572:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6750              		.loc 36 62 13 is_stmt 1 view .LVU1514
 6751              	.LBB6573:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6752              		.loc 36 62 34 view .LVU1515
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6753              		.loc 36 62 34 is_stmt 0 view .LVU1516
 6754              	.LBE6573:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 325


 6755              	.LBE6572:
 6756              	.LBB6574:
 6757              	.LBB6571:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6758              		.loc 36 62 53 view .LVU1517
 6759 02e6 B4F90410 		ldrsh	r1, [r4, #4]
 6760              	.LVL451:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6761              		.loc 36 62 44 view .LVU1518
 6762 02ea 2788     		ldrh	r7, [r4]
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6763              		.loc 36 62 53 view .LVU1519
 6764 02ec 0029     		cmp	r1, #0
 6765 02ee B8BF     		it	lt
 6766 02f0 0131     		addlt	r1, r1, #1
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 6767              		.loc 36 62 44 view .LVU1520
 6768 02f2 07EB6107 		add	r7, r7, r1, asr #1
 6769              	.LBE6571:
 6770              	.LBE6574:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6771              		.loc 36 236 58 view .LVU1521
 6772 02f6 A7EB6307 		sub	r7, r7, r3, asr #1
 6773              	.L405:
 6774              	.LBB6575:
 6775              	.LBB6576:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6776              		.loc 36 61 43 view .LVU1522
 6777 02fa B4F802C0 		ldrh	ip, [r4, #2]
 6778              	.LBE6576:
 6779              	.LBE6575:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6780              		.loc 36 236 58 view .LVU1523
 6781 02fe BFB2     		uxth	r7, r7
 6782              	.LVL452:
 6783              	.LBB6579:
 6784              	.LBI6575:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6785              		.loc 36 61 13 is_stmt 1 view .LVU1524
 6786              	.LBB6577:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6787              		.loc 36 61 33 view .LVU1525
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6788              		.loc 36 61 43 is_stmt 0 view .LVU1526
 6789 0300 E488     		ldrh	r4, [r4, #6]
 6790              	.LVL453:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6791              		.loc 36 61 43 view .LVU1527
 6792              	.LBE6577:
 6793              	.LBE6579:
 6794              	.LBB6580:
 6795              	.LBB6581:
 6796              	.LBB6582:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6797              		.loc 36 32 66 view .LVU1528
 6798 0302 0699     		ldr	r1, [sp, #24]
 6799              	.LBE6582:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 326


 6800              	.LBE6581:
 6801              	.LBE6580:
 6802              	.LBB6594:
 6803              	.LBB6578:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 6804              		.loc 36 61 43 view .LVU1529
 6805 0304 6444     		add	r4, r4, ip
 6806              	.LBE6578:
 6807              	.LBE6594:
 6808              	.LBB6595:
 6809              	.LBB6589:
 6810              	.LBB6585:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6811              		.loc 36 32 66 view .LVU1530
 6812 0306 8B80     		strh	r3, [r1, #4]	@ movhi
 6813              	.LBE6585:
 6814              	.LBE6589:
 6815              	.LBE6595:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6816              		.loc 36 237 51 view .LVU1531
 6817 0308 201A     		subs	r0, r4, r0
 6818              	.LBB6596:
 6819              	.LBB6590:
 6820              	.LBB6586:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6821              		.loc 36 32 66 view .LVU1532
 6822 030a CA80     		strh	r2, [r1, #6]	@ movhi
 6823 030c 0F80     		strh	r7, [r1]	@ movhi
 6824              	.LBE6586:
 6825              	.LBE6590:
 6826              	.LBE6596:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6827              		.loc 36 237 51 view .LVU1533
 6828 030e 84B2     		uxth	r4, r0
 6829              	.LVL454:
 6830              	.LBB6597:
 6831              	.LBI6580:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6832              		.loc 36 31 5 is_stmt 1 view .LVU1534
 6833              	.LBB6591:
 6834              	.LBB6587:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6835              		.loc 36 32 66 is_stmt 0 view .LVU1535
 6836 0310 4C80     		strh	r4, [r1, #2]	@ movhi
 6837              	.LVL455:
 6838              	.LBB6583:
 6839              	.LBI6583:
 6840              		.loc 36 261 13 is_stmt 1 view .LVU1536
 6841              	.LBE6583:
 6842              	.LBE6587:
 6843              	.LBE6591:
 6844              	.LBE6597:
 6845              	.LBE6648:
 6846              	.LBE6726:
 6847              		.loc 36 261 41 view .LVU1537
 6848              	.LBB6727:
 6849              	.LBB6649:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 327


 6850              	.LBB6598:
 6851              	.LBB6592:
 6852              	.LBB6588:
 6853              	.LBB6584:
 6854              	.LBI6584:
 6855              		.loc 36 261 13 view .LVU1538
 6856              	.LBE6584:
 6857              	.LBE6588:
 6858              	.LBE6592:
 6859              	.LBE6598:
 6860              	.LBE6649:
 6861              	.LBE6727:
 6862              		.loc 36 261 41 view .LVU1539
 6863              	.LBB6728:
 6864              	.LBB6650:
 6865              	.LBB6599:
 6866              	.LBB6593:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6867              		.loc 36 34 5 is_stmt 0 view .LVU1540
 6868 0312 B7E6     		b	.L345
 6869              	.LVL456:
 6870              	.L338:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6871              		.loc 36 34 5 view .LVU1541
 6872              	.LBE6593:
 6873              	.LBE6599:
 230:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 6874              		.loc 36 230 13 is_stmt 1 view .LVU1542
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6875              		.loc 36 231 17 view .LVU1543
 6876              	.LBB6600:
 6877              	.LBI6600:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6878              		.loc 36 60 13 view .LVU1544
 6879              	.LBB6601:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6880              		.loc 36 60 32 view .LVU1545
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6881              		.loc 36 60 42 is_stmt 0 view .LVU1546
 6882 0314 2788     		ldrh	r7, [r4]
 6883 0316 A188     		ldrh	r1, [r4, #4]
 6884              	.LVL457:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 6885              		.loc 36 60 42 view .LVU1547
 6886 0318 0F44     		add	r7, r7, r1
 6887              	.LBE6601:
 6888              	.LBE6600:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 6889              		.loc 36 231 50 view .LVU1548
 6890 031a FF1A     		subs	r7, r7, r3
 6891 031c EDE7     		b	.L405
 6892              	.L418:
 6893 031e 00BF     		.align	2
 6894              	.L417:
 6895 0320 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 6896 0324 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 6897              	.LVL458:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 328


 6898              	.L337:
 240:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 6899              		.loc 36 240 13 is_stmt 1 view .LVU1549
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6900              		.loc 36 241 17 view .LVU1550
 6901              	.LBB6602:
 6902              	.LBB6603:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6903              		.loc 36 63 54 is_stmt 0 view .LVU1551
 6904 0328 B4F90610 		ldrsh	r1, [r4, #6]
 6905              	.LVL459:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6906              		.loc 36 63 44 view .LVU1552
 6907 032c B4F802C0 		ldrh	ip, [r4, #2]
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6908              		.loc 36 63 54 view .LVU1553
 6909 0330 0029     		cmp	r1, #0
 6910              	.LBE6603:
 6911              	.LBE6602:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 6912              		.loc 36 241 31 view .LVU1554
 6913 0332 B4F90070 		ldrsh	r7, [r4]
 6914              	.LVL460:
 6915              	.LBB6607:
 6916              	.LBI6602:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6917              		.loc 36 63 13 is_stmt 1 view .LVU1555
 6918              	.LBB6604:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6919              		.loc 36 63 34 view .LVU1556
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6920              		.loc 36 63 34 is_stmt 0 view .LVU1557
 6921              	.LBE6604:
 6922              	.LBE6607:
 6923              	.LBB6608:
 6924              	.LBI6608:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6925              		.loc 36 63 13 is_stmt 1 view .LVU1558
 6926              	.LBB6609:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6927              		.loc 36 63 34 view .LVU1559
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6928              		.loc 36 63 34 is_stmt 0 view .LVU1560
 6929              	.LBE6609:
 6930              	.LBE6608:
 6931              	.LBB6610:
 6932              	.LBB6611:
 6933              	.LBB6612:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6934              		.loc 36 32 66 view .LVU1561
 6935 0336 0698     		ldr	r0, [sp, #24]
 6936              	.LBE6612:
 6937              	.LBE6611:
 6938              	.LBE6610:
 6939              	.LBB6624:
 6940              	.LBB6605:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 329


 6941              		.loc 36 63 54 view .LVU1562
 6942 0338 B8BF     		it	lt
 6943 033a 0131     		addlt	r1, r1, #1
 6944              	.LBE6605:
 6945              	.LBE6624:
 6946              	.LBB6625:
 6947              	.LBB6619:
 6948              	.LBB6615:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6949              		.loc 36 32 66 view .LVU1563
 6950 033c C280     		strh	r2, [r0, #6]	@ movhi
 6951              	.LBE6615:
 6952              	.LBE6619:
 6953              	.LBE6625:
 6954              	.LBB6626:
 6955              	.LBB6606:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6956              		.loc 36 63 44 view .LVU1564
 6957 033e 0CEB6104 		add	r4, ip, r1, asr #1
 6958              	.LVL461:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 6959              		.loc 36 63 44 view .LVU1565
 6960              	.LBE6606:
 6961              	.LBE6626:
 6962              	.LBB6627:
 6963              	.LBB6620:
 6964              	.LBB6616:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6965              		.loc 36 32 66 view .LVU1566
 6966 0342 0780     		strh	r7, [r0]	@ movhi
 6967 0344 8380     		strh	r3, [r0, #4]	@ movhi
 6968              	.LBE6616:
 6969              	.LBE6620:
 6970              	.LBE6627:
 6971              	.LBE6650:
 6972              	.LBE6728:
 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 6973              		.loc 5 468 18 view .LVU1567
 6974 0346 BFB2     		uxth	r7, r7
 6975              	.LBB6729:
 6976              	.LBB6651:
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 6977              		.loc 36 242 58 view .LVU1568
 6978 0348 A4EB5202 		sub	r2, r4, r2, lsr #1
 6979 034c 94B2     		uxth	r4, r2
 6980              	.LVL462:
 6981              	.LBB6628:
 6982              	.LBI6610:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 6983              		.loc 36 31 5 is_stmt 1 view .LVU1569
 6984              	.LBB6621:
 6985              	.LBB6617:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 6986              		.loc 36 32 66 is_stmt 0 view .LVU1570
 6987 034e 4480     		strh	r4, [r0, #2]	@ movhi
 6988              	.LVL463:
 6989              	.LBB6613:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 330


 6990              	.LBI6613:
 6991              		.loc 36 261 13 is_stmt 1 view .LVU1571
 6992              	.LBE6613:
 6993              	.LBE6617:
 6994              	.LBE6621:
 6995              	.LBE6628:
 6996              	.LBE6651:
 6997              	.LBE6729:
 6998              		.loc 36 261 41 view .LVU1572
 6999              	.LBB6730:
 7000              	.LBB6652:
 7001              	.LBB6629:
 7002              	.LBB6622:
 7003              	.LBB6618:
 7004              	.LBB6614:
 7005              	.LBI6614:
 7006              		.loc 36 261 13 view .LVU1573
 7007              	.LBE6614:
 7008              	.LBE6618:
 7009              	.LBE6622:
 7010              	.LBE6629:
 7011              	.LBE6652:
 7012              	.LBE6730:
 7013              		.loc 36 261 41 view .LVU1574
 7014              	.LBB6731:
 7015              	.LBB6653:
 7016              	.LBB6630:
 7017              	.LBB6623:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7018              		.loc 36 34 5 is_stmt 0 view .LVU1575
 7019 0350 98E6     		b	.L345
 7020              	.LVL464:
 7021              	.L365:
  34:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7022              		.loc 36 34 5 view .LVU1576
 7023              	.LBE6623:
 7024              	.LBE6630:
 7025              	.LBE6653:
 7026              	.LBE6731:
 7027              	.LBB6732:
 7028              	.LBB6710:
 7029              	.LBB6707:
 7030              	.LBB6706:
 402:../../libdaisy/src/hid/disp/display.h **** 
 7031              		.loc 5 402 20 view .LVU1577
 7032 0352 4FF0000B 		mov	fp, #0
 7033              	.LVL465:
 402:../../libdaisy/src/hid/disp/display.h **** 
 7034              		.loc 5 402 20 view .LVU1578
 7035 0356 69E7     		b	.L363
 7036              	.LVL466:
 7037              	.L410:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 7038              		.loc 5 405 17 view .LVU1579
 7039 0358 4046     		mov	r0, r8
 7040 035a 9847     		blx	r3
 7041              	.LVL467:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 331


 7042 035c D3E6     		b	.L364
 7043              	.L411:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 7044              		.loc 5 406 21 view .LVU1580
 7045 035e 4046     		mov	r0, r8
 7046 0360 9847     		blx	r3
 7047              	.LVL468:
 7048 0362 DEE6     		b	.L366
 7049              	.LVL469:
 7050              	.L415:
 7051              	.LBB6704:
 7052              	.LBB6700:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7053              		.loc 5 174 33 view .LVU1581
 7054 0364 4046     		mov	r0, r8
 7055 0366 9847     		blx	r3
 7056              	.LVL470:
 7057 0368 51E7     		b	.L380
 7058              	.LVL471:
 7059              	.L413:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7060              		.loc 5 173 32 view .LVU1582
 7061 036a 4046     		mov	r0, r8
 7062 036c 9847     		blx	r3
 7063              	.LVL472:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7064              		.loc 5 173 44 view .LVU1583
 7065 036e D8F80020 		ldr	r2, [r8]
 7066 0372 3CE7     		b	.L377
 7067              	.LVL473:
 7068              	.L367:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7069              		.loc 5 173 44 view .LVU1584
 7070              	.LBE6700:
 7071              	.LBE6704:
 434:../../libdaisy/src/hid/disp/display.h **** 
 7072              		.loc 5 434 19 view .LVU1585
 7073 0374 B8F804A0 		ldrh	r10, [r8, #4]
 7074 0378 2EE7     		b	.L369
 7075              	.LVL474:
 7076              	.L416:
 7077              	.LBB6705:
 7078              	.LBB6701:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7079              		.loc 5 174 45 view .LVU1586
 7080 037a 4046     		mov	r0, r8
 7081 037c 9847     		blx	r3
 7082              	.LVL475:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7083              		.loc 5 174 19 view .LVU1587
 7084 037e 0138     		subs	r0, r0, #1
 7085 0380 83B2     		uxth	r3, r0
 7086 0382 0293     		str	r3, [sp, #8]
 7087              	.LVL476:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7088              		.loc 5 174 19 view .LVU1588
 7089 0384 4FE7     		b	.L381
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 332


 7090              	.LVL477:
 7091              	.L414:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7092              		.loc 5 173 43 view .LVU1589
 7093 0386 4046     		mov	r0, r8
 7094 0388 9847     		blx	r3
 7095              	.LVL478:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7096              		.loc 5 173 19 view .LVU1590
 7097 038a 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7098              		.loc 5 174 34 view .LVU1591
 7099 038c D8F80020 		ldr	r2, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7100              		.loc 5 173 19 view .LVU1592
 7101 0390 85B2     		uxth	r5, r0
 7102              	.LVL479:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7103              		.loc 5 173 19 view .LVU1593
 7104 0392 34E7     		b	.L378
 7105              	.LVL480:
 7106              	.L334:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7107              		.loc 5 173 19 view .LVU1594
 7108              	.LBE6701:
 7109              	.LBE6705:
 7110              	.LBE6706:
 7111              	.LBE6707:
 7112              	.LBE6710:
 7113              	.LBE6732:
 7114              	.LBB6733:
 7115              	.LBB6654:
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 7116              		.loc 36 255 13 is_stmt 1 view .LVU1595
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 7117              		.loc 36 255 22 view .LVU1596
 7118              	.LBB6631:
 7119              	.LBI6631:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7120              		.loc 36 24 5 view .LVU1597
 7121              	.LBE6631:
 7122              	.LBE6654:
 7123              	.LBE6733:
 7124              	.LBB6734:
 7125              	.LBB6660:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7126              		.loc 5 173 33 is_stmt 0 view .LVU1598
 7127 0394 D8F80030 		ldr	r3, [r8]
 7128              	.LBE6660:
 7129              	.LBE6734:
 7130              	.LBB6735:
 7131              	.LBB6655:
 7132              	.LBB6633:
 7133              	.LBB6632:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7134              		.loc 36 24 53 view .LVU1599
 7135 0398 0024     		movs	r4, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 333


 7136              	.LVL481:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7137              		.loc 36 24 53 view .LVU1600
 7138 039a 069A     		ldr	r2, [sp, #24]
 7139 039c 1249     		ldr	r1, .L419
 7140              	.LVL482:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7141              		.loc 36 24 53 view .LVU1601
 7142 039e 1480     		strh	r4, [r2]	@ movhi
 7143 03a0 5480     		strh	r4, [r2, #2]	@ movhi
 7144 03a2 9480     		strh	r4, [r2, #4]	@ movhi
 7145 03a4 D480     		strh	r4, [r2, #6]	@ movhi
 7146              	.LVL483:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 7147              		.loc 36 24 53 view .LVU1602
 7148              	.LBE6632:
 7149              	.LBE6633:
 7150              	.LBE6655:
 7151              	.LBE6735:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 7152              		.loc 36 56 28 is_stmt 1 view .LVU1603
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 7153              		.loc 36 57 28 view .LVU1604
 7154              	.LBB6736:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 7155              		.loc 5 171 10 view .LVU1605
 7156              	.LBB6661:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7157              		.loc 5 173 9 view .LVU1606
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7158              		.loc 5 173 33 is_stmt 0 view .LVU1607
 7159 03a6 DA68     		ldr	r2, [r3, #12]
 7160 03a8 0191     		str	r1, [sp, #4]
 7161 03aa 8A42     		cmp	r2, r1
 7162 03ac 05D0     		beq	.L352
 7163 03ae 2746     		mov	r7, r4
 7164              	.LVL484:
 7165              	.L353:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7166              		.loc 5 173 32 view .LVU1608
 7167 03b0 4046     		mov	r0, r8
 7168 03b2 9047     		blx	r2
 7169              	.LVL485:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7170              		.loc 5 173 44 view .LVU1609
 7171 03b4 D8F80030 		ldr	r3, [r8]
 7172 03b8 6EE6     		b	.L354
 7173              	.LVL486:
 7174              	.L352:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7175              		.loc 5 174 34 view .LVU1610
 7176 03ba 9B68     		ldr	r3, [r3, #8]
 7177 03bc 0B4A     		ldr	r2, .L419+4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7178              		.loc 5 173 19 view .LVU1611
 7179 03be A8F80440 		strh	r4, [r8, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 334


 7180              		.loc 5 174 9 is_stmt 1 view .LVU1612
 7181 03c2 9342     		cmp	r3, r2
 7182 03c4 0392     		str	r2, [sp, #12]
 7183 03c6 3FF482AE 		beq	.L359
 7184              	.LVL487:
 7185              	.L385:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7186              		.loc 5 174 33 is_stmt 0 view .LVU1613
 7187 03ca 4046     		mov	r0, r8
 7188 03cc 9847     		blx	r3
 7189              	.LVL488:
 7190 03ce 74E6     		b	.L357
 7191              	.L409:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7192              		.loc 5 174 45 view .LVU1614
 7193 03d0 4046     		mov	r0, r8
 7194 03d2 9847     		blx	r3
 7195              	.LVL489:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7196              		.loc 5 174 19 view .LVU1615
 7197 03d4 0138     		subs	r0, r0, #1
 7198 03d6 84B2     		uxth	r4, r0
 7199 03d8 79E6     		b	.L359
 7200              	.L408:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7201              		.loc 5 173 43 view .LVU1616
 7202 03da 4046     		mov	r0, r8
 7203 03dc 9047     		blx	r2
 7204              	.LVL490:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7205              		.loc 5 173 19 view .LVU1617
 7206 03de 0138     		subs	r0, r0, #1
 174:../../libdaisy/src/hid/disp/display.h ****     }
 7207              		.loc 5 174 34 view .LVU1618
 7208 03e0 D8F80030 		ldr	r3, [r8]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 7209              		.loc 5 173 19 view .LVU1619
 7210 03e4 87B2     		uxth	r7, r0
 7211 03e6 5FE6     		b	.L355
 7212              	.L420:
 7213              		.align	2
 7214              	.L419:
 7215 03e8 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 7216 03ec 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 7217              	.LBE6661:
 7218              	.LBE6736:
 7219              		.cfi_endproc
 7220              	.LFE6215:
 7222              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 7223              		.align	1
 7224              		.p2align 2,,3
 7225              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 7226              		.syntax unified
 7227              		.thumb
 7228              		.thumb_func
 7229              		.fpu fpv5-d16
 7231              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 335


 7232              	.LVL491:
 7233              	.LFB6213:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7234              		.loc 5 257 10 is_stmt 1 view -0
 7235              		.cfi_startproc
 7236              		@ args = 12, pretend = 0, frame = 24
 7237              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7238              		.loc 5 257 10 is_stmt 0 view .LVU1621
 7239 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7240              		.cfi_def_cfa_offset 36
 7241              		.cfi_offset 4, -36
 7242              		.cfi_offset 5, -32
 7243              		.cfi_offset 6, -28
 7244              		.cfi_offset 7, -24
 7245              		.cfi_offset 8, -20
 7246              		.cfi_offset 9, -16
 7247              		.cfi_offset 10, -12
 7248              		.cfi_offset 11, -8
 7249              		.cfi_offset 14, -4
 7250 0004 87B0     		sub	sp, sp, #28
 7251              		.cfi_def_cfa_offset 64
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7252              		.loc 5 257 10 view .LVU1622
 7253 0006 9DF84850 		ldrb	r5, [sp, #72]	@ zero_extendqisi2
 7254 000a 109C     		ldr	r4, [sp, #64]
 7255 000c 2E46     		mov	r6, r5
 7256 000e 0195     		str	r5, [sp, #4]
 7257 0010 9DF84450 		ldrb	r5, [sp, #68]	@ zero_extendqisi2
 7258              	.LBB6806:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 7259              		.loc 5 264 9 view .LVU1623
 7260 0014 9EB3     		cbz	r6, .L422
 7261              	.LVL492:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 7262              		.loc 5 264 9 view .LVU1624
 7263              	.LBE6806:
 7264              	.LBB6928:
 7265              	.LBB6929:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7266              		.loc 5 266 40 is_stmt 1 view .LVU1625
 7267 0016 9942     		cmp	r1, r3
 7268 0018 2ED8     		bhi	.L421
 7269 001a 9946     		mov	r9, r3
 7270              	.LVL493:
 7271              	.L425:
 7272              	.LBB6930:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7273              		.loc 5 268 44 view .LVU1626
 7274 001c A242     		cmp	r2, r4
 7275 001e 28D8     		bhi	.L428
 7276              	.LBB6931:
 7277              	.LBB6932:
 7278              	.LBB6933:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7279              		.loc 15 241 14 is_stmt 0 view .LVU1627
 7280 0020 7F29     		cmp	r1, #127
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 336


 7281 0022 1646     		mov	r6, r2
 7282 0024 94BF     		ite	ls
 7283 0026 0023     		movls	r3, #0
 7284 0028 0123     		movhi	r3, #1
 7285 002a 08E0     		b	.L429
 7286              	.LVL494:
 7287              	.L512:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7288              		.loc 15 244 42 view .LVU1628
 7289 002c 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 7290 0030 4EEA080E 		orr	lr, lr, r8
 7291 0034 8CF814E0 		strb	lr, [ip, #20]
 7292              	.LVL495:
 7293              	.L426:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7294              		.loc 15 244 42 view .LVU1629
 7295              	.LBE6933:
 7296              	.LBE6932:
 7297              	.LBE6931:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7298              		.loc 5 268 17 is_stmt 1 view .LVU1630
 7299 0038 0136     		adds	r6, r6, #1
 7300              	.LVL496:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7301              		.loc 5 268 44 view .LVU1631
 7302 003a B442     		cmp	r4, r6
 7303 003c 19D3     		bcc	.L428
 7304              	.L429:
 7305              	.LVL497:
 7306              	.LBB6947:
 7307              	.LBI6931:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7308              		.loc 4 41 10 view .LVU1632
 7309              	.LBB6944:
 7310              	.LBI6932:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7311              		.loc 15 239 10 view .LVU1633
 7312              	.LBB6941:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7313              		.loc 15 241 9 is_stmt 0 view .LVU1634
 7314 003e 3F2E     		cmp	r6, #63
 7315 0040 FAD8     		bhi	.L426
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7316              		.loc 15 241 9 view .LVU1635
 7317 0042 002B     		cmp	r3, #0
 7318 0044 F8D1     		bne	.L426
 7319              	.LVL498:
 7320              	.LBB6934:
 7321              	.LBI6934:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7322              		.loc 15 239 10 is_stmt 1 view .LVU1636
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7323              		.loc 15 239 10 is_stmt 0 view .LVU1637
 7324              	.LBE6934:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7325              		.loc 15 244 28 view .LVU1638
 7326 0046 4FEAD60C 		lsr	ip, r6, #3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 337


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7327              		.loc 15 244 54 view .LVU1639
 7328 004a 06F0070E 		and	lr, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7329              		.loc 15 244 48 view .LVU1640
 7330 004e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7331              		.loc 15 244 42 view .LVU1641
 7332 0052 01EBCC1C 		add	ip, r1, ip, lsl #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7333              		.loc 15 244 48 view .LVU1642
 7334 0056 08FA0EFE 		lsl	lr, r8, lr
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7335              		.loc 15 244 42 view .LVU1643
 7336 005a 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7337              		.loc 15 243 9 view .LVU1644
 7338 005c 002D     		cmp	r5, #0
 7339 005e E5D1     		bne	.L512
 7340              	.LBB6938:
 7341              	.LBB6935:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7342              		.loc 15 246 42 view .LVU1645
 7343 0060 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 7344              	.LBE6935:
 7345              	.LBE6938:
 7346              	.LBE6941:
 7347              	.LBE6944:
 7348              	.LBE6947:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7349              		.loc 5 268 17 view .LVU1646
 7350 0064 0136     		adds	r6, r6, #1
 7351              	.LVL499:
 7352              	.LBB6948:
 7353              	.LBB6945:
 7354              	.LBB6942:
 7355              	.LBB6939:
 7356              	.LBB6936:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7357              		.loc 15 246 42 view .LVU1647
 7358 0066 2BEA0E0A 		bic	r10, fp, lr
 7359              	.LBE6936:
 7360              	.LBE6939:
 7361              	.LBE6942:
 7362              	.LBE6945:
 7363              	.LBE6948:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7364              		.loc 5 268 44 view .LVU1648
 7365 006a B442     		cmp	r4, r6
 7366              	.LBB6949:
 7367              	.LBB6946:
 7368              	.LBB6943:
 7369              	.LBB6940:
 7370              	.LBB6937:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7371              		.loc 15 246 42 view .LVU1649
 7372 006c 8CF814A0 		strb	r10, [ip, #20]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 338


 7373              	.LVL500:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 7374              		.loc 15 246 42 view .LVU1650
 7375              	.LBE6937:
 7376              	.LBE6940:
 7377              	.LBE6943:
 7378              	.LBE6946:
 7379              	.LBE6949:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7380              		.loc 5 268 17 is_stmt 1 view .LVU1651
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7381              		.loc 5 268 44 view .LVU1652
 7382 0070 E5D2     		bcs	.L429
 7383              	.LVL501:
 7384              	.L428:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 7385              		.loc 5 268 44 is_stmt 0 view .LVU1653
 7386              	.LBE6930:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7387              		.loc 5 266 13 is_stmt 1 view .LVU1654
 7388 0072 0131     		adds	r1, r1, #1
 7389              	.LVL502:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7390              		.loc 5 266 40 view .LVU1655
 7391 0074 8945     		cmp	r9, r1
 7392 0076 D1D2     		bcs	.L425
 7393              	.LVL503:
 7394              	.L421:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 7395              		.loc 5 266 40 is_stmt 0 view .LVU1656
 7396              	.LBE6929:
 7397              	.LBE6928:
 281:../../libdaisy/src/hid/disp/display.h **** 
 7398              		.loc 5 281 5 view .LVU1657
 7399 0078 07B0     		add	sp, sp, #28
 7400              		.cfi_remember_state
 7401              		.cfi_def_cfa_offset 36
 7402              		@ sp needed
 7403 007a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7404              	.LVL504:
 7405              	.L422:
 7406              		.cfi_restore_state
 7407              	.LBB6950:
 7408              	.LBB6807:
 7409              	.LBI6807:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7410              		.loc 5 221 10 is_stmt 1 view .LVU1658
 7411              	.LBB6808:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7412              		.loc 5 227 52 is_stmt 0 view .LVU1659
 7413 007e A3EB0108 		sub	r8, r3, r1
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7414              		.loc 5 227 22 view .LVU1660
 7415 0082 B8F1000F 		cmp	r8, #0
 7416 0086 B8BF     		it	lt
 7417 0088 C8F10008 		rsblt	r8, r8, #0
 7418              	.LVL505:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 339


 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7419              		.loc 5 229 42 view .LVU1661
 7420 008c 9942     		cmp	r1, r3
 7421 008e C0F04E81 		bcc	.L430
 7422              	.LVL506:
 7423              	.LBB6809:
 7424              	.LBI6809:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7425              		.loc 4 41 10 is_stmt 1 view .LVU1662
 7426              	.LBB6810:
 7427              	.LBI6810:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7428              		.loc 15 239 10 view .LVU1663
 7429              	.LBB6811:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7430              		.loc 15 241 14 is_stmt 0 view .LVU1664
 7431 0092 7F2B     		cmp	r3, #127
 7432              	.LBE6811:
 7433              	.LBE6810:
 7434              	.LBE6809:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7435              		.loc 5 229 42 view .LVU1665
 7436 0094 4FF0FF3A 		mov	r10, #-1
 7437              	.LBB6822:
 7438              	.LBB6818:
 7439              	.LBB6814:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7440              		.loc 15 241 14 view .LVU1666
 7441 0098 94BF     		ite	ls
 7442 009a 0026     		movls	r6, #0
 7443 009c 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7444              		.loc 15 241 28 view .LVU1667
 7445 009e 3F2A     		cmp	r2, #63
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7446              		.loc 15 241 14 view .LVU1668
 7447 00a0 0096     		str	r6, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7448              		.loc 15 241 28 view .LVU1669
 7449 00a2 94BF     		ite	ls
 7450 00a4 0027     		movls	r7, #0
 7451 00a6 0127     		movhi	r7, #1
 7452 00a8 0297     		str	r7, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7453              		.loc 15 241 9 view .LVU1670
 7454 00aa A6B9     		cbnz	r6, .L431
 7455 00ac 9FB9     		cbnz	r7, .L431
 7456              	.LVL507:
 7457              	.L472:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7458              		.loc 15 244 28 view .LVU1671
 7459 00ae D608     		lsrs	r6, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7460              		.loc 15 244 54 view .LVU1672
 7461 00b0 02F0070C 		and	ip, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7462              		.loc 15 244 48 view .LVU1673
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 340


 7463 00b4 0127     		movs	r7, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7464              		.loc 15 244 42 view .LVU1674
 7465 00b6 03EBC616 		add	r6, r3, r6, lsl #7
 7466 00ba 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7467              		.loc 15 243 9 view .LVU1675
 7468 00bc 002D     		cmp	r5, #0
 7469 00be 00F09481 		beq	.L432
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7470              		.loc 15 244 48 view .LVU1676
 7471 00c2 07FA0CF7 		lsl	r7, r7, ip
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7472              		.loc 15 244 42 view .LVU1677
 7473 00c6 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7474 00ca 47EA0C07 		orr	r7, r7, ip
 7475 00ce 3775     		strb	r7, [r6, #20]
 7476 00d0 0026     		movs	r6, #0
 7477 00d2 0296     		str	r6, [sp, #8]
 7478 00d4 0096     		str	r6, [sp]
 7479              	.L431:
 7480              	.LVL508:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7481              		.loc 15 244 42 view .LVU1678
 7482              	.LBE6814:
 7483              	.LBE6818:
 7484              	.LBE6822:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7485              		.loc 5 239 26 is_stmt 1 view .LVU1679
 7486 00d6 9942     		cmp	r1, r3
 7487 00d8 00F09781 		beq	.L513
 7488              	.L434:
 7489              	.LVL509:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7490              		.loc 5 227 22 is_stmt 0 view .LVU1680
 7491 00dc 4646     		mov	r6, r8
 7492 00de 9446     		mov	ip, r2
 7493 00e0 8E46     		mov	lr, r1
 7494              	.LVL510:
 7495              	.L436:
 7496              	.LBB6823:
 7497              	.LBI6823:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7498              		.loc 4 41 10 is_stmt 1 view .LVU1681
 7499              	.LBB6824:
 7500              	.LBI6824:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7501              		.loc 15 239 10 view .LVU1682
 7502              	.LBB6825:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7503              		.loc 15 241 9 is_stmt 0 view .LVU1683
 7504 00e2 BEF17F0F 		cmp	lr, #127
 7505 00e6 16D8     		bhi	.L437
 7506 00e8 BCF13F0F 		cmp	ip, #63
 7507 00ec 13D8     		bhi	.L437
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7508              		.loc 15 244 28 view .LVU1684
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 341


 7509 00ee 4FEADC07 		lsr	r7, ip, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7510              		.loc 15 244 54 view .LVU1685
 7511 00f2 0CF0070B 		and	fp, ip, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7512              		.loc 15 244 48 view .LVU1686
 7513 00f6 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7514              		.loc 15 244 42 view .LVU1687
 7515 00fa 0EEBC717 		add	r7, lr, r7, lsl #7
 7516 00fe 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7517              		.loc 15 243 9 view .LVU1688
 7518 0100 002D     		cmp	r5, #0
 7519 0102 00F03981 		beq	.L438
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7520              		.loc 15 244 48 view .LVU1689
 7521 0106 09FA0BF9 		lsl	r9, r9, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7522              		.loc 15 244 42 view .LVU1690
 7523 010a 97F814B0 		ldrb	fp, [r7, #20]	@ zero_extendqisi2
 7524 010e 49EA0B09 		orr	r9, r9, fp
 7525 0112 87F81490 		strb	r9, [r7, #20]
 7526              	.L437:
 7527              	.LVL511:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7528              		.loc 15 244 42 view .LVU1691
 7529              	.LBE6825:
 7530              	.LBE6824:
 7531              	.LBE6823:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7532              		.loc 5 243 13 view .LVU1692
 7533 0116 7700     		lsls	r7, r6, #1
 7534              	.LVL512:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7535              		.loc 5 246 20 view .LVU1693
 7536 0118 18BF     		it	ne
 7537 011a D644     		addne	lr, lr, r10
 7538              	.LVL513:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7539              		.loc 5 249 13 view .LVU1694
 7540 011c B845     		cmp	r8, r7
 7541 011e 02DD     		ble	.L440
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7542              		.loc 5 251 23 view .LVU1695
 7543 0120 4644     		add	r6, r6, r8
 7544              	.LVL514:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7545              		.loc 5 252 20 view .LVU1696
 7546 0122 0CF1FF3C 		add	ip, ip, #-1
 7547              	.LVL515:
 7548              	.L440:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7549              		.loc 5 239 26 is_stmt 1 view .LVU1697
 7550 0126 7345     		cmp	r3, lr
 7551 0128 DBD1     		bne	.L436
 239:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 342


 7552              		.loc 5 239 26 is_stmt 0 view .LVU1698
 7553 012a 6245     		cmp	r2, ip
 7554 012c D9D1     		bne	.L436
 7555 012e 0026     		movs	r6, #0
 7556              	.LVL516:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7557              		.loc 5 239 26 view .LVU1699
 7558 0130 0496     		str	r6, [sp, #16]
 7559              	.LVL517:
 7560              	.L433:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7561              		.loc 5 239 26 view .LVU1700
 7562              	.LBE6808:
 7563              	.LBE6807:
 7564              	.LBB6838:
 7565              	.LBI6838:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7566              		.loc 5 221 10 is_stmt 1 view .LVU1701
 7567              	.LBB6839:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7568              		.loc 5 228 52 is_stmt 0 view .LVU1702
 7569 0132 A4EB0209 		sub	r9, r4, r2
 7570              	.LBB6840:
 7571              	.LBB6841:
 7572              	.LBB6842:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7573              		.loc 15 241 9 view .LVU1703
 7574 0136 009F     		ldr	r7, [sp]
 7575              	.LBE6842:
 7576              	.LBE6841:
 7577              	.LBE6840:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7578              		.loc 5 228 22 view .LVU1704
 7579 0138 B9F1000F 		cmp	r9, #0
 7580 013c B8BF     		it	lt
 7581 013e C9F10009 		rsblt	r9, r9, #0
 7582              	.LVL518:
 7583              	.LBB6857:
 7584              	.LBB6851:
 7585              	.LBB6845:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7586              		.loc 15 241 28 view .LVU1705
 7587 0142 3F2C     		cmp	r4, #63
 7588 0144 94BF     		ite	ls
 7589 0146 0026     		movls	r6, #0
 7590 0148 0126     		movhi	r6, #1
 7591              	.LBE6845:
 7592              	.LBE6851:
 7593              	.LBE6857:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7594              		.loc 5 230 42 view .LVU1706
 7595 014a A242     		cmp	r2, r4
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7596              		.loc 5 231 22 view .LVU1707
 7597 014c C9F10008 		rsb	r8, r9, #0
 7598              	.LVL519:
 7599              	.LBB6858:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 343


 7600              	.LBI6840:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7601              		.loc 4 41 10 is_stmt 1 view .LVU1708
 7602              	.LBB6852:
 7603              	.LBI6841:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7604              		.loc 15 239 10 view .LVU1709
 7605              	.LBB6846:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7606              		.loc 15 241 28 is_stmt 0 view .LVU1710
 7607 0150 0396     		str	r6, [sp, #12]
 7608              	.LBE6846:
 7609              	.LBE6852:
 7610              	.LBE6858:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7611              		.loc 5 230 42 view .LVU1711
 7612 0152 C0F02381 		bcc	.L441
 7613              	.LVL520:
 7614              	.LBB6859:
 7615              	.LBB6853:
 7616              	.LBB6847:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7617              		.loc 15 241 9 view .LVU1712
 7618 0156 002F     		cmp	r7, #0
 7619 0158 40F05081 		bne	.L476
 7620 015c 002E     		cmp	r6, #0
 7621 015e 40F04D81 		bne	.L476
 7622              	.LBE6847:
 7623              	.LBE6853:
 7624              	.LBE6859:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7625              		.loc 5 230 42 view .LVU1713
 7626 0162 4FF0FF36 		mov	r6, #-1
 7627 0166 0096     		str	r6, [sp]
 7628              	.LBB6860:
 7629              	.LBB6854:
 7630              	.LBB6848:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7631              		.loc 15 244 28 view .LVU1714
 7632 0168 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7633              		.loc 15 244 42 view .LVU1715
 7634 016a 03EBC616 		add	r6, r3, r6, lsl #7
 7635 016e 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7636              		.loc 15 243 9 view .LVU1716
 7637 0170 002D     		cmp	r5, #0
 7638 0172 00F01E81 		beq	.L443
 7639              	.LVL521:
 7640              	.L515:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7641              		.loc 15 244 48 view .LVU1717
 7642 0176 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7643              		.loc 15 244 54 view .LVU1718
 7644 017a 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 344


 7645              		.loc 15 244 48 view .LVU1719
 7646 017e 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7647              		.loc 15 244 42 view .LVU1720
 7648 0182 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7649 0186 47EA0C07 		orr	r7, r7, ip
 7650 018a 3775     		strb	r7, [r6, #20]
 7651 018c 0026     		movs	r6, #0
 7652 018e 0396     		str	r6, [sp, #12]
 7653              	.L442:
 7654              	.LVL522:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7655              		.loc 15 244 42 view .LVU1721
 7656              	.LBE6848:
 7657              	.LBE6854:
 7658              	.LBE6860:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7659              		.loc 5 239 26 is_stmt 1 view .LVU1722
 7660 0190 A242     		cmp	r2, r4
 7661 0192 00F03D81 		beq	.L514
 7662              	.L445:
 7663              	.LVL523:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7664              		.loc 5 230 42 is_stmt 0 view .LVU1723
 7665 0196 C446     		mov	ip, r8
 7666 0198 1646     		mov	r6, r2
 7667 019a 1F46     		mov	r7, r3
 7668 019c 0592     		str	r2, [sp, #20]
 7669              	.LVL524:
 7670              	.L447:
 7671              	.LBB6861:
 7672              	.LBI6861:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7673              		.loc 4 41 10 is_stmt 1 view .LVU1724
 7674              	.LBB6862:
 7675              	.LBI6862:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7676              		.loc 15 239 10 view .LVU1725
 7677              	.LBB6863:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7678              		.loc 15 241 9 is_stmt 0 view .LVU1726
 7679 019e 7F2F     		cmp	r7, #127
 7680 01a0 15D8     		bhi	.L448
 7681 01a2 3F2E     		cmp	r6, #63
 7682 01a4 13D8     		bhi	.L448
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7683              		.loc 15 244 28 view .LVU1727
 7684 01a6 4FEAD60E 		lsr	lr, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7685              		.loc 15 244 54 view .LVU1728
 7686 01aa 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7687              		.loc 15 244 48 view .LVU1729
 7688 01ae 4FF0010A 		mov	r10, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7689              		.loc 15 244 42 view .LVU1730
 7690 01b2 07EBCE1E 		add	lr, r7, lr, lsl #7
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 345


 7691 01b6 8644     		add	lr, lr, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7692              		.loc 15 243 9 view .LVU1731
 7693 01b8 002D     		cmp	r5, #0
 7694 01ba 00F0E680 		beq	.L449
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7695              		.loc 15 244 48 view .LVU1732
 7696 01be 0AFA0BFA 		lsl	r10, r10, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7697              		.loc 15 244 42 view .LVU1733
 7698 01c2 9EF814B0 		ldrb	fp, [lr, #20]	@ zero_extendqisi2
 7699 01c6 4AEA0B0A 		orr	r10, r10, fp
 7700 01ca 8EF814A0 		strb	r10, [lr, #20]
 7701              	.L448:
 7702              	.LVL525:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7703              		.loc 15 244 42 view .LVU1734
 7704              	.LBE6863:
 7705              	.LBE6862:
 7706              	.LBE6861:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7707              		.loc 5 243 13 view .LVU1735
 7708 01ce B8EB4C0F 		cmp	r8, ip, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7709              		.loc 5 242 20 view .LVU1736
 7710 01d2 4FEA4C0E 		lsl	lr, ip, #1
 7711              	.LVL526:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7712              		.loc 5 243 13 view .LVU1737
 7713 01d6 02DA     		bge	.L450
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7714              		.loc 5 245 23 view .LVU1738
 7715 01d8 ACEB090C 		sub	ip, ip, r9
 7716              	.LVL527:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7717              		.loc 5 246 20 view .LVU1739
 7718 01dc 013F     		subs	r7, r7, #1
 7719              	.LVL528:
 7720              	.L450:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7721              		.loc 5 249 13 view .LVU1740
 7722 01de BEF1000F 		cmp	lr, #0
 7723 01e2 01D0     		beq	.L451
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7724              		.loc 5 252 20 view .LVU1741
 7725 01e4 009A     		ldr	r2, [sp]
 7726 01e6 1644     		add	r6, r6, r2
 7727              	.LVL529:
 7728              	.L451:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7729              		.loc 5 239 26 is_stmt 1 view .LVU1742
 7730 01e8 BB42     		cmp	r3, r7
 7731 01ea D8D1     		bne	.L447
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7732              		.loc 5 239 26 is_stmt 0 view .LVU1743
 7733 01ec B442     		cmp	r4, r6
 7734 01ee D6D1     		bne	.L447
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 346


 7735 01f0 059A     		ldr	r2, [sp, #20]
 7736              	.LVL530:
 7737              	.L444:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7738              		.loc 5 239 26 view .LVU1744
 7739              	.LBE6839:
 7740              	.LBE6838:
 7741              	.LBB6874:
 7742              	.LBI6874:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7743              		.loc 5 221 10 is_stmt 1 view .LVU1745
 7744              	.LBB6875:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7745              		.loc 5 227 52 is_stmt 0 view .LVU1746
 7746 01f2 A1EB030E 		sub	lr, r1, r3
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7747              		.loc 5 227 22 view .LVU1747
 7748 01f6 BEF1000F 		cmp	lr, #0
 7749 01fa B8BF     		it	lt
 7750 01fc CEF1000E 		rsblt	lr, lr, #0
 7751              	.LVL531:
 7752              	.LBB6876:
 7753              	.LBB6877:
 7754              	.LBB6878:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7755              		.loc 15 241 14 view .LVU1748
 7756 0200 7F29     		cmp	r1, #127
 7757 0202 94BF     		ite	ls
 7758 0204 4FF0000A 		movls	r10, #0
 7759 0208 4FF0010A 		movhi	r10, #1
 7760              	.LBE6878:
 7761              	.LBE6877:
 7762              	.LBE6876:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 7763              		.loc 5 229 42 view .LVU1749
 7764 020c 9942     		cmp	r1, r3
 7765 020e 8CBF     		ite	hi
 7766 0210 4FF00109 		movhi	r9, #1
 7767 0214 4FF0FF39 		movls	r9, #-1
 7768              	.LVL532:
 7769              	.LBB6885:
 7770              	.LBI6876:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7771              		.loc 4 41 10 is_stmt 1 view .LVU1750
 7772              	.LBB6883:
 7773              	.LBI6877:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7774              		.loc 15 239 10 view .LVU1751
 7775              	.LBB6881:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7776              		.loc 15 241 9 is_stmt 0 view .LVU1752
 7777 0218 BAF1000F 		cmp	r10, #0
 7778 021c 13D1     		bne	.L453
 7779 021e 039E     		ldr	r6, [sp, #12]
 7780 0220 8EB9     		cbnz	r6, .L453
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7781              		.loc 15 244 28 view .LVU1753
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 347


 7782 0222 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7783              		.loc 15 244 42 view .LVU1754
 7784 0224 01EBC616 		add	r6, r1, r6, lsl #7
 7785 0228 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7786              		.loc 15 243 9 view .LVU1755
 7787 022a 002D     		cmp	r5, #0
 7788 022c 00F0D380 		beq	.L454
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7789              		.loc 15 244 48 view .LVU1756
 7790 0230 4FF0010C 		mov	ip, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7791              		.loc 15 244 54 view .LVU1757
 7792 0234 04F00707 		and	r7, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7793              		.loc 15 244 48 view .LVU1758
 7794 0238 0CFA07F7 		lsl	r7, ip, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7795              		.loc 15 244 42 view .LVU1759
 7796 023c 96F814C0 		ldrb	ip, [r6, #20]	@ zero_extendqisi2
 7797 0240 47EA0C07 		orr	r7, r7, ip
 7798 0244 3775     		strb	r7, [r6, #20]
 7799              	.L453:
 7800              	.LVL533:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7801              		.loc 15 244 42 view .LVU1760
 7802              	.LBE6881:
 7803              	.LBE6883:
 7804              	.LBE6885:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7805              		.loc 5 239 26 is_stmt 1 view .LVU1761
 7806 0246 049E     		ldr	r6, [sp, #16]
 7807 0248 26BB     		cbnz	r6, .L455
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 7808              		.loc 5 227 22 is_stmt 0 view .LVU1762
 7809 024a 7746     		mov	r7, lr
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7810              		.loc 5 239 26 view .LVU1763
 7811 024c 2646     		mov	r6, r4
 7812              	.LVL534:
 7813              	.L456:
 7814              	.LBB6886:
 7815              	.LBI6886:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7816              		.loc 4 41 10 is_stmt 1 view .LVU1764
 7817              	.LBB6887:
 7818              	.LBI6887:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7819              		.loc 15 239 10 view .LVU1765
 7820              	.LBB6888:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7821              		.loc 15 241 9 is_stmt 0 view .LVU1766
 7822 024e 7F2B     		cmp	r3, #127
 7823 0250 14D8     		bhi	.L458
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7824              		.loc 15 241 9 view .LVU1767
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 348


 7825 0252 3F2E     		cmp	r6, #63
 7826 0254 12D8     		bhi	.L458
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7827              		.loc 15 244 28 view .LVU1768
 7828 0256 4FEAD60C 		lsr	ip, r6, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7829              		.loc 15 244 54 view .LVU1769
 7830 025a 06F0070B 		and	fp, r6, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7831              		.loc 15 244 48 view .LVU1770
 7832 025e 4FF00108 		mov	r8, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7833              		.loc 15 244 42 view .LVU1771
 7834 0262 03EBCC1C 		add	ip, r3, ip, lsl #7
 7835 0266 8444     		add	ip, ip, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7836              		.loc 15 243 9 view .LVU1772
 7837 0268 002D     		cmp	r5, #0
 7838 026a 73D0     		beq	.L459
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7839              		.loc 15 244 48 view .LVU1773
 7840 026c 08FA0BF8 		lsl	r8, r8, fp
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7841              		.loc 15 244 42 view .LVU1774
 7842 0270 9CF814B0 		ldrb	fp, [ip, #20]	@ zero_extendqisi2
 7843 0274 48EA0B08 		orr	r8, r8, fp
 7844 0278 8CF81480 		strb	r8, [ip, #20]
 7845              	.L458:
 7846              	.LVL535:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7847              		.loc 15 244 42 view .LVU1775
 7848              	.LBE6888:
 7849              	.LBE6887:
 7850              	.LBE6886:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7851              		.loc 5 243 13 view .LVU1776
 7852 027c 5FEA470C 		lsls	ip, r7, #1
 7853              	.LVL536:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7854              		.loc 5 246 20 view .LVU1777
 7855 0280 18BF     		it	ne
 7856 0282 4B44     		addne	r3, r3, r9
 7857              	.LVL537:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7858              		.loc 5 249 13 view .LVU1778
 7859 0284 E645     		cmp	lr, ip
 7860 0286 01DD     		ble	.L461
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 7861              		.loc 5 251 23 view .LVU1779
 7862 0288 7744     		add	r7, r7, lr
 7863              	.LVL538:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7864              		.loc 5 252 20 view .LVU1780
 7865 028a 013E     		subs	r6, r6, #1
 7866              	.LVL539:
 7867              	.L461:
 239:../../libdaisy/src/hid/disp/display.h ****         {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 349


 7868              		.loc 5 239 26 is_stmt 1 view .LVU1781
 7869 028c 9942     		cmp	r1, r3
 7870 028e DED1     		bne	.L456
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7871              		.loc 5 239 26 is_stmt 0 view .LVU1782
 7872 0290 B442     		cmp	r4, r6
 7873 0292 DCD1     		bne	.L456
 7874              	.LVL540:
 7875              	.L455:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7876              		.loc 5 239 26 view .LVU1783
 7877              	.LBE6875:
 7878              	.LBE6874:
 7879              	.LBB6897:
 7880              	.LBI6897:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 7881              		.loc 5 221 10 is_stmt 1 view .LVU1784
 7882              	.LBB6898:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7883              		.loc 5 228 52 is_stmt 0 view .LVU1785
 7884 0294 A2EB040E 		sub	lr, r2, r4
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 7885              		.loc 5 228 22 view .LVU1786
 7886 0298 BEF1000F 		cmp	lr, #0
 7887 029c B8BF     		it	lt
 7888 029e CEF1000E 		rsblt	lr, lr, #0
 7889              	.LVL541:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 7890              		.loc 5 230 42 view .LVU1787
 7891 02a2 A242     		cmp	r2, r4
 7892 02a4 8CBF     		ite	hi
 7893 02a6 4FF00108 		movhi	r8, #1
 7894 02aa 4FF0FF38 		movls	r8, #-1
 7895              	.LVL542:
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 7896              		.loc 5 231 22 view .LVU1788
 7897 02ae CEF1000C 		rsb	ip, lr, #0
 7898              	.LVL543:
 7899              	.LBB6899:
 7900              	.LBI6899:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7901              		.loc 4 41 10 is_stmt 1 view .LVU1789
 7902              	.LBB6900:
 7903              	.LBI6900:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7904              		.loc 15 239 10 view .LVU1790
 7905              	.LBB6901:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7906              		.loc 15 241 9 is_stmt 0 view .LVU1791
 7907 02b2 BAF1000F 		cmp	r10, #0
 7908 02b6 0ED1     		bne	.L463
 7909 02b8 029B     		ldr	r3, [sp, #8]
 7910 02ba 63B9     		cbnz	r3, .L463
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7911              		.loc 15 244 28 view .LVU1792
 7912 02bc D308     		lsrs	r3, r2, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 350


 7913              		.loc 15 244 54 view .LVU1793
 7914 02be 02F00707 		and	r7, r2, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7915              		.loc 15 244 48 view .LVU1794
 7916 02c2 0126     		movs	r6, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7917              		.loc 15 244 42 view .LVU1795
 7918 02c4 01EBC313 		add	r3, r1, r3, lsl #7
 7919 02c8 0344     		add	r3, r3, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7920              		.loc 15 243 9 view .LVU1796
 7921 02ca 002D     		cmp	r5, #0
 7922 02cc 7CD0     		beq	.L464
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7923              		.loc 15 244 48 view .LVU1797
 7924 02ce BE40     		lsls	r6, r6, r7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7925              		.loc 15 244 42 view .LVU1798
 7926 02d0 1F7D     		ldrb	r7, [r3, #20]	@ zero_extendqisi2
 7927 02d2 3E43     		orrs	r6, r6, r7
 7928 02d4 1E75     		strb	r6, [r3, #20]
 7929              	.L463:
 7930              	.LVL544:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7931              		.loc 15 244 42 view .LVU1799
 7932              	.LBE6901:
 7933              	.LBE6900:
 7934              	.LBE6899:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7935              		.loc 5 239 26 is_stmt 1 view .LVU1800
 7936 02d6 019B     		ldr	r3, [sp, #4]
 7937 02d8 002B     		cmp	r3, #0
 7938 02da 7FF4CDAE 		bne	.L421
 7939 02de 6646     		mov	r6, ip
 7940 02e0 0B46     		mov	r3, r1
 7941              	.LVL545:
 7942              	.L465:
 7943              	.LBB6906:
 7944              	.LBI6906:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7945              		.loc 4 41 10 view .LVU1801
 7946              	.LBB6907:
 7947              	.LBI6907:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 7948              		.loc 15 239 10 view .LVU1802
 7949              	.LBB6908:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7950              		.loc 15 241 9 is_stmt 0 view .LVU1803
 7951 02e2 7F2B     		cmp	r3, #127
 7952 02e4 12D8     		bhi	.L467
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 7953              		.loc 15 241 9 view .LVU1804
 7954 02e6 3F2C     		cmp	r4, #63
 7955 02e8 10D8     		bhi	.L467
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7956              		.loc 15 244 28 view .LVU1805
 7957 02ea E708     		lsrs	r7, r4, #3
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 351


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7958              		.loc 15 244 54 view .LVU1806
 7959 02ec 04F0070A 		and	r10, r4, #7
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7960              		.loc 15 244 48 view .LVU1807
 7961 02f0 4FF00109 		mov	r9, #1
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7962              		.loc 15 244 42 view .LVU1808
 7963 02f4 03EBC717 		add	r7, r3, r7, lsl #7
 7964 02f8 0744     		add	r7, r7, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 7965              		.loc 15 243 9 view .LVU1809
 7966 02fa A5B3     		cbz	r5, .L468
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7967              		.loc 15 244 48 view .LVU1810
 7968 02fc 09FA0AF9 		lsl	r9, r9, r10
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7969              		.loc 15 244 42 view .LVU1811
 7970 0300 97F814A0 		ldrb	r10, [r7, #20]	@ zero_extendqisi2
 7971 0304 49EA0A09 		orr	r9, r9, r10
 7972 0308 87F81490 		strb	r9, [r7, #20]
 7973              	.L467:
 7974              	.LVL546:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 7975              		.loc 15 244 42 view .LVU1812
 7976              	.LBE6908:
 7977              	.LBE6907:
 7978              	.LBE6906:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7979              		.loc 5 243 13 view .LVU1813
 7980 030c BCEB460F 		cmp	ip, r6, lsl #1
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 7981              		.loc 5 242 20 view .LVU1814
 7982 0310 4FEA4607 		lsl	r7, r6, #1
 7983              	.LVL547:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 7984              		.loc 5 243 13 view .LVU1815
 7985 0314 02DA     		bge	.L469
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 7986              		.loc 5 245 23 view .LVU1816
 7987 0316 A6EB0E06 		sub	r6, r6, lr
 7988              	.LVL548:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 7989              		.loc 5 246 20 view .LVU1817
 7990 031a 013B     		subs	r3, r3, #1
 7991              	.LVL549:
 7992              	.L469:
 249:../../libdaisy/src/hid/disp/display.h ****             {
 7993              		.loc 5 249 13 view .LVU1818
 7994 031c 07B1     		cbz	r7, .L470
 252:../../libdaisy/src/hid/disp/display.h ****             }
 7995              		.loc 5 252 20 view .LVU1819
 7996 031e 4444     		add	r4, r4, r8
 7997              	.LVL550:
 7998              	.L470:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 7999              		.loc 5 239 26 is_stmt 1 view .LVU1820
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 352


 8000 0320 9942     		cmp	r1, r3
 8001 0322 DED1     		bne	.L465
 239:../../libdaisy/src/hid/disp/display.h ****         {
 8002              		.loc 5 239 26 is_stmt 0 view .LVU1821
 8003 0324 A242     		cmp	r2, r4
 8004 0326 DCD1     		bne	.L465
 8005              	.LBE6898:
 8006              	.LBE6897:
 8007              	.LBE6950:
 281:../../libdaisy/src/hid/disp/display.h **** 
 8008              		.loc 5 281 5 view .LVU1822
 8009 0328 07B0     		add	sp, sp, #28
 8010              		.cfi_remember_state
 8011              		.cfi_def_cfa_offset 36
 8012              		@ sp needed
 8013 032a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8014              	.LVL551:
 8015              	.L430:
 8016              		.cfi_restore_state
 8017              	.LBB6951:
 8018              	.LBB6917:
 8019              	.LBB6834:
 8020              	.LBB6830:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 8021              		.loc 4 41 10 is_stmt 1 view .LVU1823
 8022              	.LBB6819:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8023              		.loc 15 239 10 view .LVU1824
 8024              	.LBB6815:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8025              		.loc 15 241 28 is_stmt 0 view .LVU1825
 8026 032e 3F2A     		cmp	r2, #63
 8027              	.LBE6815:
 8028              	.LBE6819:
 8029              	.LBE6830:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 8030              		.loc 5 229 42 view .LVU1826
 8031 0330 4FF0010A 		mov	r10, #1
 8032              	.LBB6831:
 8033              	.LBB6820:
 8034              	.LBB6816:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8035              		.loc 15 241 28 view .LVU1827
 8036 0334 94BF     		ite	ls
 8037 0336 0026     		movls	r6, #0
 8038 0338 0126     		movhi	r6, #1
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8039              		.loc 15 241 14 view .LVU1828
 8040 033a 7F2B     		cmp	r3, #127
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8041              		.loc 15 241 28 view .LVU1829
 8042 033c 0296     		str	r6, [sp, #8]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8043              		.loc 15 241 14 view .LVU1830
 8044 033e 94BF     		ite	ls
 8045 0340 0027     		movls	r7, #0
 8046 0342 0127     		movhi	r7, #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 353


 8047 0344 0097     		str	r7, [sp]
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8048              		.loc 15 241 9 view .LVU1831
 8049 0346 002E     		cmp	r6, #0
 8050 0348 7FF4C8AE 		bne	.L434
 8051 034c 002F     		cmp	r7, #0
 8052 034e 3FF4AEAE 		beq	.L472
 8053 0352 C3E6     		b	.L434
 8054              	.LVL552:
 8055              	.L459:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8056              		.loc 15 241 9 view .LVU1832
 8057              	.LBE6816:
 8058              	.LBE6820:
 8059              	.LBE6831:
 8060              	.LBE6834:
 8061              	.LBE6917:
 8062              	.LBB6918:
 8063              	.LBB6895:
 8064              	.LBB6893:
 8065              	.LBB6892:
 8066              	.LBB6891:
 8067              	.LBB6889:
 8068              	.LBI6889:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8069              		.loc 15 239 10 is_stmt 1 view .LVU1833
 8070              	.LBB6890:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8071              		.loc 15 246 49 is_stmt 0 view .LVU1834
 8072 0354 08FA0BFB 		lsl	fp, r8, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8073              		.loc 15 246 42 view .LVU1835
 8074 0358 9CF81480 		ldrb	r8, [ip, #20]	@ zero_extendqisi2
 8075 035c 28EA0B08 		bic	r8, r8, fp
 8076 0360 8CF81480 		strb	r8, [ip, #20]
 8077 0364 8AE7     		b	.L458
 8078              	.LVL553:
 8079              	.L468:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8080              		.loc 15 246 42 view .LVU1836
 8081              	.LBE6890:
 8082              	.LBE6889:
 8083              	.LBE6891:
 8084              	.LBE6892:
 8085              	.LBE6893:
 8086              	.LBE6895:
 8087              	.LBE6918:
 8088              	.LBB6919:
 8089              	.LBB6915:
 8090              	.LBB6913:
 8091              	.LBB6912:
 8092              	.LBB6911:
 8093              	.LBB6909:
 8094              	.LBI6909:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8095              		.loc 15 239 10 is_stmt 1 view .LVU1837
 8096              	.LBB6910:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 354


 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8097              		.loc 15 246 49 is_stmt 0 view .LVU1838
 8098 0366 09FA0AFA 		lsl	r10, r9, r10
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8099              		.loc 15 246 42 view .LVU1839
 8100 036a 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 8101 036e 29EA0A09 		bic	r9, r9, r10
 8102 0372 87F81490 		strb	r9, [r7, #20]
 8103 0376 C9E7     		b	.L467
 8104              	.LVL554:
 8105              	.L438:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8106              		.loc 15 246 42 view .LVU1840
 8107              	.LBE6910:
 8108              	.LBE6909:
 8109              	.LBE6911:
 8110              	.LBE6912:
 8111              	.LBE6913:
 8112              	.LBE6915:
 8113              	.LBE6919:
 8114              	.LBB6920:
 8115              	.LBB6835:
 8116              	.LBB6832:
 8117              	.LBB6829:
 8118              	.LBB6828:
 8119              	.LBB6826:
 8120              	.LBI6826:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8121              		.loc 15 239 10 is_stmt 1 view .LVU1841
 8122              	.LBB6827:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8123              		.loc 15 246 49 is_stmt 0 view .LVU1842
 8124 0378 09FA0BFB 		lsl	fp, r9, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8125              		.loc 15 246 42 view .LVU1843
 8126 037c 97F81490 		ldrb	r9, [r7, #20]	@ zero_extendqisi2
 8127 0380 29EA0B09 		bic	r9, r9, fp
 8128 0384 87F81490 		strb	r9, [r7, #20]
 8129 0388 C5E6     		b	.L437
 8130              	.LVL555:
 8131              	.L449:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8132              		.loc 15 246 42 view .LVU1844
 8133              	.LBE6827:
 8134              	.LBE6826:
 8135              	.LBE6828:
 8136              	.LBE6829:
 8137              	.LBE6832:
 8138              	.LBE6835:
 8139              	.LBE6920:
 8140              	.LBB6921:
 8141              	.LBB6871:
 8142              	.LBB6868:
 8143              	.LBB6867:
 8144              	.LBB6866:
 8145              	.LBB6864:
 8146              	.LBI6864:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 355


 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8147              		.loc 15 239 10 is_stmt 1 view .LVU1845
 8148              	.LBB6865:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8149              		.loc 15 246 49 is_stmt 0 view .LVU1846
 8150 038a 0AFA0BFB 		lsl	fp, r10, fp
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8151              		.loc 15 246 42 view .LVU1847
 8152 038e 9EF814A0 		ldrb	r10, [lr, #20]	@ zero_extendqisi2
 8153 0392 2AEA0B0A 		bic	r10, r10, fp
 8154 0396 8EF814A0 		strb	r10, [lr, #20]
 8155 039a 18E7     		b	.L448
 8156              	.LVL556:
 8157              	.L441:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8158              		.loc 15 246 42 view .LVU1848
 8159              	.LBE6865:
 8160              	.LBE6864:
 8161              	.LBE6866:
 8162              	.LBE6867:
 8163              	.LBE6868:
 8164              	.LBB6869:
 8165              	.LBB6855:
 8166              	.LBB6849:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 8167              		.loc 15 241 9 view .LVU1849
 8168 039c 97BB     		cbnz	r7, .L480
 8169 039e 8EBB     		cbnz	r6, .L480
 8170              	.LBE6849:
 8171              	.LBE6855:
 8172              	.LBE6869:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 8173              		.loc 5 230 42 view .LVU1850
 8174 03a0 0126     		movs	r6, #1
 8175 03a2 0096     		str	r6, [sp]
 8176              	.LBB6870:
 8177              	.LBB6856:
 8178              	.LBB6850:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 8179              		.loc 15 244 28 view .LVU1851
 8180 03a4 E608     		lsrs	r6, r4, #3
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 8181              		.loc 15 244 42 view .LVU1852
 8182 03a6 03EBC616 		add	r6, r3, r6, lsl #7
 8183 03aa 0644     		add	r6, r6, r0
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 8184              		.loc 15 243 9 view .LVU1853
 8185 03ac 002D     		cmp	r5, #0
 8186 03ae 7FF4E2AE 		bne	.L515
 8187              	.LVL557:
 8188              	.L443:
 8189              	.LBB6843:
 8190              	.LBI6843:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8191              		.loc 15 239 10 is_stmt 1 view .LVU1854
 8192              	.LBB6844:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 356


 8193              		.loc 15 246 49 is_stmt 0 view .LVU1855
 8194 03b2 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8195              		.loc 15 246 55 view .LVU1856
 8196 03b4 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8197              		.loc 15 246 42 view .LVU1857
 8198 03b8 0395     		str	r5, [sp, #12]
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8199              		.loc 15 246 49 view .LVU1858
 8200 03ba 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8201              		.loc 15 246 42 view .LVU1859
 8202 03be 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 8203 03c0 27EA0C07 		bic	r7, r7, ip
 8204 03c4 3775     		strb	r7, [r6, #20]
 8205 03c6 E3E6     		b	.L442
 8206              	.LVL558:
 8207              	.L464:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8208              		.loc 15 246 42 view .LVU1860
 8209              	.LBE6844:
 8210              	.LBE6843:
 8211              	.LBE6850:
 8212              	.LBE6856:
 8213              	.LBE6870:
 8214              	.LBE6871:
 8215              	.LBE6921:
 8216              	.LBB6922:
 8217              	.LBB6916:
 8218              	.LBB6914:
 8219              	.LBB6905:
 8220              	.LBB6904:
 8221              	.LBB6902:
 8222              	.LBI6902:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8223              		.loc 15 239 10 is_stmt 1 view .LVU1861
 8224              	.LBB6903:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8225              		.loc 15 246 49 is_stmt 0 view .LVU1862
 8226 03c8 06FA07F7 		lsl	r7, r6, r7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8227              		.loc 15 246 42 view .LVU1863
 8228 03cc 1E7D     		ldrb	r6, [r3, #20]	@ zero_extendqisi2
 8229 03ce 26EA0706 		bic	r6, r6, r7
 8230 03d2 1E75     		strb	r6, [r3, #20]
 8231 03d4 7FE7     		b	.L463
 8232              	.LVL559:
 8233              	.L454:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8234              		.loc 15 246 42 view .LVU1864
 8235              	.LBE6903:
 8236              	.LBE6902:
 8237              	.LBE6904:
 8238              	.LBE6905:
 8239              	.LBE6914:
 8240              	.LBE6916:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 357


 8241              	.LBE6922:
 8242              	.LBB6923:
 8243              	.LBB6896:
 8244              	.LBB6894:
 8245              	.LBB6884:
 8246              	.LBB6882:
 8247              	.LBB6879:
 8248              	.LBI6879:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8249              		.loc 15 239 10 is_stmt 1 view .LVU1865
 8250              	.LBB6880:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8251              		.loc 15 246 49 is_stmt 0 view .LVU1866
 8252 03d6 0127     		movs	r7, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8253              		.loc 15 246 55 view .LVU1867
 8254 03d8 04F0070C 		and	ip, r4, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8255              		.loc 15 246 49 view .LVU1868
 8256 03dc 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8257              		.loc 15 246 42 view .LVU1869
 8258 03e0 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 8259 03e2 27EA0C07 		bic	r7, r7, ip
 8260 03e6 3775     		strb	r7, [r6, #20]
 8261 03e8 2DE7     		b	.L453
 8262              	.LVL560:
 8263              	.L432:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8264              		.loc 15 246 42 view .LVU1870
 8265              	.LBE6880:
 8266              	.LBE6879:
 8267              	.LBE6882:
 8268              	.LBE6884:
 8269              	.LBE6894:
 8270              	.LBE6896:
 8271              	.LBE6923:
 8272              	.LBB6924:
 8273              	.LBB6836:
 8274              	.LBB6833:
 8275              	.LBB6821:
 8276              	.LBB6817:
 8277              	.LBB6812:
 8278              	.LBI6812:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 8279              		.loc 15 239 10 is_stmt 1 view .LVU1871
 8280              	.LBB6813:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8281              		.loc 15 246 49 is_stmt 0 view .LVU1872
 8282 03ea 07FA0CFC 		lsl	ip, r7, ip
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8283              		.loc 15 246 42 view .LVU1873
 8284 03ee 377D     		ldrb	r7, [r6, #20]	@ zero_extendqisi2
 8285 03f0 0295     		str	r5, [sp, #8]
 8286 03f2 27EA0C07 		bic	r7, r7, ip
 8287 03f6 0095     		str	r5, [sp]
 8288 03f8 3775     		strb	r7, [r6, #20]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 358


 8289 03fa 6CE6     		b	.L431
 8290              	.LVL561:
 8291              	.L476:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 8292              		.loc 15 246 42 view .LVU1874
 8293              	.LBE6813:
 8294              	.LBE6812:
 8295              	.LBE6817:
 8296              	.LBE6821:
 8297              	.LBE6833:
 8298              	.LBE6836:
 8299              	.LBE6924:
 8300              	.LBB6925:
 8301              	.LBB6872:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 8302              		.loc 5 230 42 view .LVU1875
 8303 03fc 4FF0FF36 		mov	r6, #-1
 8304 0400 0096     		str	r6, [sp]
 8305 0402 C5E6     		b	.L442
 8306              	.LVL562:
 8307              	.L480:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 8308              		.loc 5 230 42 view .LVU1876
 8309 0404 0126     		movs	r6, #1
 8310 0406 0096     		str	r6, [sp]
 8311 0408 C5E6     		b	.L445
 8312              	.LVL563:
 8313              	.L513:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 8314              		.loc 5 230 42 view .LVU1877
 8315              	.LBE6872:
 8316              	.LBE6925:
 8317              	.LBB6926:
 8318              	.LBB6837:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 8319              		.loc 5 239 19 view .LVU1878
 8320 040a 0126     		movs	r6, #1
 8321 040c 0496     		str	r6, [sp, #16]
 8322 040e 90E6     		b	.L433
 8323              	.LVL564:
 8324              	.L514:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 8325              		.loc 5 239 19 view .LVU1879
 8326              	.LBE6837:
 8327              	.LBE6926:
 8328              	.LBB6927:
 8329              	.LBB6873:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 8330              		.loc 5 239 33 view .LVU1880
 8331 0410 0126     		movs	r6, #1
 8332 0412 0196     		str	r6, [sp, #4]
 8333 0414 EDE6     		b	.L444
 8334              	.LBE6873:
 8335              	.LBE6927:
 8336              	.LBE6951:
 8337              		.cfi_endproc
 8338              	.LFE6213:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 359


 8340 0416 00BF     		.section	.text._ZNSt14_Function_baseD2Ev,"axG",%progbits,_ZNSt14_Function_baseD5Ev,comdat
 8341              		.align	1
 8342              		.p2align 2,,3
 8343              		.weak	_ZNSt14_Function_baseD2Ev
 8344              		.syntax unified
 8345              		.thumb
 8346              		.thumb_func
 8347              		.fpu fpv5-d16
 8349              	_ZNSt14_Function_baseD2Ev:
 8350              	.LVL565:
 8351              	.LFB5043:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8352              		.loc 16 242 5 is_stmt 1 view -0
 8353              		.cfi_startproc
 8354              		@ args = 0, pretend = 0, frame = 0
 8355              		@ frame_needed = 0, uses_anonymous_args = 0
 8356              	.LBB6953:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8357              		.loc 16 244 7 view .LVU1882
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8358              		.loc 16 244 11 is_stmt 0 view .LVU1883
 8359 0000 8368     		ldr	r3, [r0, #8]
 8360              	.LBE6953:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8361              		.loc 16 242 5 view .LVU1884
 8362 0002 10B5     		push	{r4, lr}
 8363              		.cfi_def_cfa_offset 8
 8364              		.cfi_offset 4, -8
 8365              		.cfi_offset 14, -4
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 8366              		.loc 16 242 5 view .LVU1885
 8367 0004 0446     		mov	r4, r0
 8368              	.LBB6954:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 8369              		.loc 16 244 7 view .LVU1886
 8370 0006 13B1     		cbz	r3, .L517
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8371              		.loc 16 245 2 is_stmt 1 view .LVU1887
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8372              		.loc 16 245 12 is_stmt 0 view .LVU1888
 8373 0008 0322     		movs	r2, #3
 8374 000a 0146     		mov	r1, r0
 8375 000c 9847     		blx	r3
 8376              	.LVL566:
 8377              	.L517:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 8378              		.loc 16 245 12 view .LVU1889
 8379              	.LBE6954:
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8380              		.loc 16 246 5 view .LVU1890
 8381 000e 2046     		mov	r0, r4
 8382 0010 10BD     		pop	{r4, pc}
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8383              		.loc 16 246 5 view .LVU1891
 8384              		.cfi_endproc
 8385              	.LFE5043:
 8387              		.weak	_ZNSt14_Function_baseD1Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 360


 8388              		.thumb_set _ZNSt14_Function_baseD1Ev,_ZNSt14_Function_baseD2Ev
 8389 0012 00BF     		.section	.text._ZN10jellybeans8MenuItemaSEOS0_.isra.0,"ax",%progbits
 8390              		.align	1
 8391              		.p2align 2,,3
 8392              		.syntax unified
 8393              		.thumb
 8394              		.thumb_func
 8395              		.fpu fpv5-d16
 8397              	_ZN10jellybeans8MenuItemaSEOS0_.isra.0:
 8398              	.LVL567:
 8399              	.LFB6224:
 8400              		.loc 31 21 11 is_stmt 1 view -0
 8401              		.cfi_startproc
 8402              		@ args = 0, pretend = 0, frame = 24
 8403              		@ frame_needed = 0, uses_anonymous_args = 0
 8404              	.LBB7069:
 8405              	.LBB7070:
 8406              	.LBB7071:
 8407              	.LBB7072:
 8408              	.LBB7073:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8409              		.loc 18 187 28 is_stmt 0 view .LVU1893
 8410 0000 0B46     		mov	r3, r1
 8411              	.LBE7073:
 8412              	.LBE7072:
 8413              	.LBE7071:
 8414              	.LBE7070:
 8415              	.LBE7069:
 8416              		.loc 31 21 11 view .LVU1894
 8417 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 8418              		.cfi_def_cfa_offset 20
 8419              		.cfi_offset 4, -20
 8420              		.cfi_offset 5, -16
 8421              		.cfi_offset 6, -12
 8422              		.cfi_offset 7, -8
 8423              		.cfi_offset 14, -4
 8424 0004 0C46     		mov	r4, r1
 8425              	.LBB7157:
 8426              	.LBB7129:
 8427              	.LBB7078:
 8428              	.LBB7075:
 8429              	.LBB7074:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8430              		.loc 18 187 28 view .LVU1895
 8431 0006 53F8081B 		ldr	r1, [r3], #8
 8432              	.LBE7074:
 8433              	.LBE7075:
 8434              	.LBE7078:
 8435              	.LBE7129:
 8436              	.LBE7157:
 8437              		.loc 31 21 11 view .LVU1896
 8438 000a 0546     		mov	r5, r0
 8439              	.LVL568:
 8440              	.LBB7158:
 8441              	.LBI7069:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 361


 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 8442              		.loc 18 703 7 is_stmt 1 view .LVU1897
 8443              	.LBB7130:
 8444              	.LBI7130:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8445              		.loc 18 221 7 view .LVU1898
 8446              	.LBB7131:
 8447              	.LBI7131:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8448              		.loc 18 186 7 view .LVU1899
 8449              	.LBE7131:
 8450              	.LBE7130:
 8451              	.LBE7158:
 8452              		.loc 31 21 11 is_stmt 0 view .LVU1900
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 362


 8453 000c 87B0     		sub	sp, sp, #28
 8454              		.cfi_def_cfa_offset 48
 8455              	.LBB7159:
 8456              	.LBB7137:
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 8457              		.loc 18 718 2 view .LVU1901
 8458 000e 9942     		cmp	r1, r3
 8459              	.LBE7137:
 8460              	.LBB7138:
 8461              	.LBB7133:
 8462              	.LBB7132:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8463              		.loc 18 187 28 view .LVU1902
 8464 0010 0068     		ldr	r0, [r0]
 8465              	.LVL569:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8466              		.loc 18 187 28 view .LVU1903
 8467              	.LBE7132:
 8468              	.LBE7133:
 8469              	.LBB7134:
 8470              	.LBI7134:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8471              		.loc 18 200 7 is_stmt 1 view .LVU1904
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8472              		.loc 18 200 7 is_stmt 0 view .LVU1905
 8473              	.LBE7134:
 8474              	.LBE7138:
 8475              	.LBB7139:
 8476              	.LBB7079:
 8477              	.LBI7071:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8478              		.loc 18 221 7 is_stmt 1 view .LVU1906
 8479              	.LBB7076:
 8480              	.LBI7072:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8481              		.loc 18 186 7 view .LVU1907
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8482              		.loc 18 186 7 is_stmt 0 view .LVU1908
 8483              	.LBE7076:
 8484              	.LBB7077:
 8485              	.LBI7077:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8486              		.loc 18 200 7 is_stmt 1 view .LVU1909
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 363


 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8487              		.loc 18 200 7 is_stmt 0 view .LVU1910
 8488              	.LBE7077:
 8489              	.LBE7079:
 8490              		.loc 18 718 2 view .LVU1911
 8491 0012 56D0     		beq	.L536
 8492              	.LVL570:
 8493              		.loc 18 718 2 view .LVU1912
 8494              	.LBE7139:
 8495              	.LBB7140:
 8496              	.LBB7136:
 8497              	.LBB7135:
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8498              		.loc 18 203 57 view .LVU1913
 8499 0014 05F10802 		add	r2, r5, #8
 8500              	.LBE7135:
 8501              	.LBE7136:
 8502              	.LBE7140:
 8503              	.LBB7141:
 8504              	.LBB7080:
 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 8505              		.loc 18 732 6 view .LVU1914
 8506 0018 9042     		cmp	r0, r2
 8507 001a 4BD0     		beq	.L537
 8508              	.LVL571:
 8509              	.LBB7081:
 8510              	.LBB7082:
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 364


 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 365


 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 366


 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 8511              		.loc 18 908 16 view .LVU1915
 8512 001c 6268     		ldr	r2, [r4, #4]
 8513              	.LBE7082:
 8514              	.LBE7081:
 8515              	.LBB7084:
 8516              	.LBB7085:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8517              		.loc 18 179 26 view .LVU1916
 8518 001e 2960     		str	r1, [r5]
 8519              	.LBE7085:
 8520              	.LBE7084:
 8521              	.LBB7086:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 367


 8522              	.LBB7087:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8523              		.loc 18 183 26 view .LVU1917
 8524 0020 6A60     		str	r2, [r5, #4]
 8525              	.LBE7087:
 8526              	.LBE7086:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 8527              		.loc 18 746 17 view .LVU1918
 8528 0022 A168     		ldr	r1, [r4, #8]
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 8529              		.loc 18 738 18 view .LVU1919
 8530 0024 AA68     		ldr	r2, [r5, #8]
 8531              	.LVL572:
 8532              	.LBB7089:
 8533              	.LBI7084:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 8534              		.loc 18 178 7 is_stmt 1 view .LVU1920
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 8535              		.loc 18 178 7 is_stmt 0 view .LVU1921
 8536              	.LBE7089:
 8537              	.LBB7090:
 8538              	.LBI7081:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 8539              		.loc 18 907 7 is_stmt 1 view .LVU1922
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 8540              		.loc 18 907 7 is_stmt 0 view .LVU1923
 8541              	.LBE7090:
 8542              	.LBB7091:
 8543              	.LBI7086:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 8544              		.loc 18 182 7 is_stmt 1 view .LVU1924
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 8545              		.loc 18 182 7 is_stmt 0 view .LVU1925
 8546              	.LBE7091:
 8547              	.LBB7092:
 8548              	.LBI7092:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 8549              		.loc 18 210 7 is_stmt 1 view .LVU1926
 8550              	.LBB7093:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8551              		.loc 18 211 31 is_stmt 0 view .LVU1927
 8552 0026 A960     		str	r1, [r5, #8]
 8553              	.LVL573:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8554              		.loc 18 211 31 view .LVU1928
 8555              	.LBE7093:
 8556              	.LBE7092:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 8557              		.loc 18 747 6 view .LVU1929
 8558 0028 0028     		cmp	r0, #0
 8559 002a 48D0     		beq	.L528
 8560              	.LVL574:
 8561              	.LBB7095:
 8562              	.LBI7095:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 8563              		.loc 18 178 7 is_stmt 1 view .LVU1930
 8564              	.LBB7096:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 368


 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8565              		.loc 18 179 26 is_stmt 0 view .LVU1931
 8566 002c 2060     		str	r0, [r4]
 8567              	.LVL575:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8568              		.loc 18 179 26 view .LVU1932
 8569              	.LBE7096:
 8570              	.LBE7095:
 8571              	.LBB7097:
 8572              	.LBI7097:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 8573              		.loc 18 210 7 is_stmt 1 view .LVU1933
 8574              	.LBB7098:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8575              		.loc 18 211 31 is_stmt 0 view .LVU1934
 8576 002e A260     		str	r2, [r4, #8]
 8577              	.LVL576:
 8578              	.L526:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8579              		.loc 18 211 31 view .LVU1935
 8580              	.LBE7098:
 8581              	.LBE7097:
 8582              	.LBE7080:
 8583              	.LBE7141:
 8584              	.LBB7142:
 8585              	.LBI7142:
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 369


 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 8586              		.loc 18 994 7 is_stmt 1 view .LVU1936
 8587              	.LBB7143:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 370


 8588              	.LBI7143:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8589              		.loc 18 214 7 view .LVU1937
 8590              	.LBB7144:
 8591              	.LBI7144:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 8592              		.loc 18 182 7 view .LVU1938
 8593              	.LBE7144:
 8594              	.LBB7147:
 8595              	.LBB7148:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8596              		.loc 18 187 28 is_stmt 0 view .LVU1939
 8597 0030 2368     		ldr	r3, [r4]
 8598              	.LBE7148:
 8599              	.LBE7147:
 8600              	.LBB7149:
 8601              	.LBB7145:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8602              		.loc 18 183 26 view .LVU1940
 8603 0032 0027     		movs	r7, #0
 8604              	.LBE7145:
 8605              	.LBE7149:
 8606              	.LBE7143:
 8607              	.LBE7142:
 8608              	.LBE7159:
 8609              	.LBB7160:
 8610              	.LBB7161:
 8611              	.LBB7162:
 8612              	.LBB7163:
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 371


1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __position);
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase(iterator __first, iterator __last);
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Constant-time move assignment when source object's memory can be
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // moved, either because the source's allocator will move too
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // or because the allocators are equal.
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_move_assign(vector&& __x, true_type) noexcept
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector __tmp(get_allocator());
 8613              		.loc 24 1817 9 view .LVU1941
 8614 0034 02AE     		add	r6, sp, #8
 8615              	.LBE7163:
 8616              	.LBE7162:
 8617              	.LBE7161:
 8618              	.LBE7160:
 8619              	.LBB7218:
 8620              	.LBB7155:
 8621              	.LBB7154:
 8622              	.LBB7150:
 8623              	.LBB7146:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8624              		.loc 18 183 26 view .LVU1942
 8625 0036 6760     		str	r7, [r4, #4]
 8626              	.LVL577:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8627              		.loc 18 183 26 view .LVU1943
 8628              	.LBE7146:
 8629              	.LBE7150:
 8630              	.LBB7151:
 8631              	.LBI7147:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8632              		.loc 18 186 7 is_stmt 1 view .LVU1944
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8633              		.loc 18 186 7 is_stmt 0 view .LVU1945
 8634              	.LBE7151:
 8635              	.LBB7152:
 8636              	.LBI7152:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 8637              		.loc 21 321 7 is_stmt 1 view .LVU1946
 8638              	.LBB7153:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8639              		.loc 21 322 9 view .LVU1947
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 8640              		.loc 21 322 14 is_stmt 0 view .LVU1948
 8641 0038 1F70     		strb	r7, [r3]
 8642              	.LVL578:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 372


 8643              		.loc 21 322 14 view .LVU1949
 8644              	.LBE7153:
 8645              	.LBE7152:
 8646              	.LBE7154:
 8647              	.LBE7155:
 8648              	.LBE7218:
 8649              	.LBB7219:
 8650              	.LBI7160:
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8651              		.loc 24 709 7 is_stmt 1 view .LVU1950
 8652              	.LBB7217:
 8653              	.LBB7216:
 8654              	.LBI7162:
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8655              		.loc 24 1815 7 view .LVU1951
 8656              	.LBB7215:
 8657              	.LBB7164:
 8658              	.LBI7164:
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 8659              		.loc 24 284 7 view .LVU1952
 8660              	.LBB7165:
 8661              	.LBI7165:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8662              		.loc 19 147 7 view .LVU1953
 8663              	.LBB7166:
 8664              	.LBI7166:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8665              		.loc 20 82 7 view .LVU1954
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8666              		.loc 20 82 7 is_stmt 0 view .LVU1955
 8667              	.LBE7166:
 8668              	.LBE7165:
 8669              	.LBE7164:
 8670              	.LBB7167:
 8671              	.LBI7167:
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 8672              		.loc 24 497 7 is_stmt 1 view .LVU1956
 8673              	.LBB7168:
 8674              	.LBI7168:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 8675              		.loc 24 293 7 view .LVU1957
 8676              	.LBB7169:
 8677              	.LBI7169:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 8678              		.loc 24 136 2 view .LVU1958
 8679              	.LBB7170:
 8680              	.LBI7170:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8681              		.loc 19 147 7 view .LVU1959
 8682              	.LBB7171:
 8683              	.LBI7171:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8684              		.loc 20 82 7 view .LVU1960
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8685              		.loc 20 82 7 is_stmt 0 view .LVU1961
 8686              	.LBE7171:
 8687              	.LBE7170:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 373


 8688              	.LBB7172:
 8689              	.LBI7172:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8690              		.loc 24 97 2 is_stmt 1 view .LVU1962
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8691              		.loc 24 97 2 is_stmt 0 view .LVU1963
 8692              	.LBE7172:
 8693              	.LBE7169:
 8694              	.LBE7168:
 8695              	.LBE7167:
 8696              	.LBB7173:
 8697              	.LBI7173:
 8698              		.loc 19 162 7 is_stmt 1 view .LVU1964
 8699              	.LBB7174:
 8700              	.LBI7174:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8701              		.loc 20 89 7 view .LVU1965
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8702              		.loc 20 89 7 is_stmt 0 view .LVU1966
 8703              	.LBE7174:
 8704              	.LBE7173:
 8705              	.LBB7175:
 8706              	.LBI7175:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8707              		.loc 24 117 2 is_stmt 1 view .LVU1967
 8708              	.LBB7176:
 8709              	.LBB7177:
 8710              	.LBI7177:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8711              		.loc 24 97 2 view .LVU1968
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8712              		.loc 24 97 2 is_stmt 0 view .LVU1969
 8713              	.LBE7177:
 8714              	.LBB7178:
 8715              	.LBI7178:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8716              		.loc 24 109 2 is_stmt 1 view .LVU1970
 8717              	.LBE7178:
 8718              	.LBE7176:
 8719              	.LBE7175:
 8720              		.loc 24 1817 9 is_stmt 0 view .LVU1971
 8721 003a 3046     		mov	r0, r6
 8722              	.LBB7194:
 8723              	.LBB7191:
 8724              	.LBB7182:
 8725              	.LBB7179:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8726              		.loc 24 111 19 view .LVU1972
 8727 003c AB69     		ldr	r3, [r5, #24]
 8728              	.LVL579:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8729              		.loc 24 111 19 view .LVU1973
 8730              	.LBE7179:
 8731              	.LBE7182:
 8732              	.LBB7183:
 8733              	.LBB7184:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 374


 8734              		.loc 24 113 28 view .LVU1974
 8735 003e 226A     		ldr	r2, [r4, #32]
 8736              	.LBE7184:
 8737              	.LBE7183:
 8738              	.LBE7191:
 8739              	.LBE7194:
 8740              	.LBB7195:
 8741              	.LBB7196:
 8742              	.LBB7197:
 8743              	.LBB7198:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8744              		.loc 24 111 13 view .LVU1975
 8745 0040 0293     		str	r3, [sp, #8]
 8746              	.LBE7198:
 8747              	.LBE7197:
 8748              	.LBE7196:
 8749              	.LBE7195:
 8750              	.LBB7211:
 8751              	.LBB7192:
 8752              	.LBB7187:
 8753              	.LBB7180:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8754              		.loc 24 112 20 view .LVU1976
 8755 0042 EB69     		ldr	r3, [r5, #28]
 8756              	.LVL580:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8757              		.loc 24 112 20 view .LVU1977
 8758              	.LBE7180:
 8759              	.LBE7187:
 8760              	.LBE7192:
 8761              	.LBE7211:
 8762              	.LBB7212:
 8763              	.LBB7209:
 8764              	.LBB7201:
 8765              	.LBB7199:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8766              		.loc 24 112 14 view .LVU1978
 8767 0044 0393     		str	r3, [sp, #12]
 8768              	.LBE7199:
 8769              	.LBE7201:
 8770              	.LBE7209:
 8771              	.LBE7212:
 8772              	.LBB7213:
 8773              	.LBB7193:
 8774              	.LBB7188:
 8775              	.LBB7185:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8776              		.loc 24 111 19 view .LVU1979
 8777 0046 A369     		ldr	r3, [r4, #24]
 8778              	.LVL581:
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 8779              		.loc 24 111 13 view .LVU1980
 8780 0048 AB61     		str	r3, [r5, #24]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8781              		.loc 24 112 20 view .LVU1981
 8782 004a E369     		ldr	r3, [r4, #28]
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 375


 8783              		.loc 24 112 14 view .LVU1982
 8784 004c EB61     		str	r3, [r5, #28]
 8785              	.LVL582:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8786              		.loc 24 112 14 view .LVU1983
 8787              	.LBE7185:
 8788              	.LBE7188:
 8789              	.LBB7189:
 8790              	.LBB7181:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8791              		.loc 24 113 28 view .LVU1984
 8792 004e 2B6A     		ldr	r3, [r5, #32]
 8793              	.LVL583:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8794              		.loc 24 113 28 view .LVU1985
 8795              	.LBE7181:
 8796              	.LBE7189:
 8797              	.LBB7190:
 8798              	.LBI7183:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8799              		.loc 24 109 2 is_stmt 1 view .LVU1986
 8800              	.LBB7186:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8801              		.loc 24 113 22 is_stmt 0 view .LVU1987
 8802 0050 2A62     		str	r2, [r5, #32]
 8803              	.LVL584:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8804              		.loc 24 113 22 view .LVU1988
 8805              	.LBE7186:
 8806              	.LBE7190:
 8807              	.LBE7193:
 8808              	.LBE7213:
 8809              	.LBB7214:
 8810              	.LBI7195:
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8811              		.loc 24 117 2 is_stmt 1 view .LVU1989
 8812              	.LBB7210:
 8813              	.LBB7202:
 8814              	.LBI7202:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8815              		.loc 24 97 2 view .LVU1990
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8816              		.loc 24 97 2 is_stmt 0 view .LVU1991
 8817              	.LBE7202:
 8818              	.LBB7203:
 8819              	.LBI7197:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8820              		.loc 24 109 2 is_stmt 1 view .LVU1992
 8821              	.LBE7203:
 8822              	.LBB7204:
 8823              	.LBB7205:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8824              		.loc 24 113 22 is_stmt 0 view .LVU1993
 8825 0052 2762     		str	r7, [r4, #32]
 8826              	.LBE7205:
 8827              	.LBE7204:
 8828              	.LBB7207:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 376


 8829              	.LBB7200:
 8830 0054 0493     		str	r3, [sp, #16]
 8831              	.LVL585:
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 8832              		.loc 24 113 22 view .LVU1994
 8833              	.LBE7200:
 8834              	.LBE7207:
 8835              	.LBB7208:
 8836              	.LBI7204:
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 8837              		.loc 24 109 2 is_stmt 1 view .LVU1995
 8838              	.LBB7206:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 8839              		.loc 24 112 14 is_stmt 0 view .LVU1996
 8840 0056 C4E90677 		strd	r7, r7, [r4, #24]
 8841              	.LBE7206:
 8842              	.LBE7208:
 8843              	.LBE7210:
 8844              	.LBE7214:
 8845              		.loc 24 1817 9 view .LVU1997
 8846 005a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 8847              	.LVL586:
 8848              		.loc 24 1817 9 view .LVU1998
 8849              	.LBE7215:
 8850              	.LBE7216:
 8851              	.LBE7217:
 8852              	.LBE7219:
 8853              		.loc 31 21 11 view .LVU1999
 8854 005e 636A     		ldr	r3, [r4, #36]
 8855              	.LBB7220:
 8856              	.LBB7221:
 8857              	.LBB7222:
 8858              	.LBB7223:
 8859              	.LBB7224:
 8860              	.LBB7225:
 8861              	.LBB7226:
 8862              		.file 37 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\mov
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 377


  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 378


  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     struct __move_if_noexcept_cond
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****                     is_copy_constructible<_Tp>>::type { };
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Conditionally convert a value to an rvalue.
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __x  A thing of arbitrary type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter, possibly cast to an rvalue-reference.
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  Same as std::move unless the type's move constructor could throw and the
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  type is copyable, in which case an lvalue-reference is returned instead.
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move_if_noexcept(_Tp& __x) noexcept
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::move(__x); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // declval, from type_traits.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus > 201402L
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2296. std::addressof should be constexpr
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # define __cpp_lib_addressof_constexpr 201603
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Returns the actual address of the object or function
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         referenced by r, even in the presence of an overloaded
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *         operator&.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 379


 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __r  Reference to an object or function.
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   The actual address.
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX17_CONSTEXPR _Tp*
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     addressof(_Tp& __r) noexcept
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return std::__addressof(__r); }
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // 2598. addressof works on temporaries
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     const _Tp* addressof(const _Tp&&) = delete;
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // C++11 version of std::exchange for internal use.
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template <typename _Tp, typename _Up = _Tp>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _Tp
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __exchange(_Tp& __obj, _Up&& __new_val)
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __old_val = std::move(__obj);
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __obj = std::forward<_Up>(__new_val);
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return __old_val;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /// @} group utilities
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) std::move(__val)
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_MOVE(__val) (__val)
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _GLIBCXX_FORWARD(_Tp, __val) (__val)
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Swaps two values.
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __a  A thing of arbitrary type.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __b  Another thing of arbitrary type.
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return   Nothing.
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX20_CONSTEXPR
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_constructible<_Tp>,
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 			      is_move_assignable<_Tp>>::value>::type
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #else
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     void
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     swap(_Tp& __a, _Tp& __b)
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 				is_nothrow_move_assignable<_Tp>>::value)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 380


 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       // concept requirements
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       _Tp __tmp = _GLIBCXX_MOVE(__a);
 8863              		.loc 37 197 11 view .LVU2000
 8864 0060 04F1280E 		add	lr, r4, #40
 8865              	.LBE7226:
 8866              	.LBE7225:
 8867              	.LBE7224:
 8868              	.LBE7223:
 8869              	.LBE7222:
 8870              	.LBB7242:
 8871              	.LBB7243:
 8872              	.LBB7244:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8873              		.loc 37 198 7 view .LVU2001
 8874 0064 05F1280C 		add	ip, r5, #40
 8875              	.LBE7244:
 8876              	.LBE7243:
 8877              	.LBE7242:
 8878              	.LBE7221:
 8879              	.LBE7220:
 8880              		.loc 31 21 11 view .LVU2002
 8881 0068 6B62     		str	r3, [r5, #36]
 8882              	.LVL587:
 8883              	.LBB7261:
 8884              	.LBI7220:
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       private _Function_base
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Func,
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename _Res2 = __invoke_result<_Func&, _ArgTypes...>>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	: __is_invocable_impl<_Res2, _Res>::type
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ };
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // Used so the return type convertibility checks aren't done when
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // performing overload resolution for copy construction/assignment.
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Tp>
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	struct _Callable<function, _Tp> : false_type { };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Cond, typename _Tp>
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	using _Requires = typename enable_if<_Cond::value, _Tp>::type;
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     public:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       typedef _Res result_type;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.1] construct/copy/destroy
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Default construct creates an empty function call wrapper.
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function() noexcept
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 381


 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Creates an empty function call wrapper.
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(nullptr_t) noexcept
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base() { }
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function copy constructor.
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object with identical call signature.
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c bool(*this) == bool(__x)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains a copy of the target of @a
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __x (if it has one).
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(const function& __x);
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move constructor.
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function object rvalue with identical call signature.
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function contains the target of @a __x
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  (if it has one).
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(function&& __x) noexcept : _Function_base()
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	__x.swap(*this);
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Builds a %function that targets a copy of the incoming
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function object.
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The newly-created %function object will target a copy of
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @a __f. If @a __f is @c reference_wrapper<F>, then this function
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, the newly-created object will be empty.
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor,
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<__not_<is_same<_Functor, function>>, void>,
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	       typename = _Requires<_Callable<_Functor>, void>>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(_Functor);
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment operator.
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c (bool)*this == (bool)x
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 382


 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is copied to @c *this. If @a __x has no
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(const function& __x)
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(__x).swap(*this);
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function move-assignment operator.
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function rvalue with identical call signature.
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @a __x is moved to @c *this. If @a __x has no
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  target, then @c *this will be empty.
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __x targets a function pointer or a reference to a function
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object, then this operation will not throw an %exception.
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(function&& __x) noexcept
 8885              		.loc 16 414 7 is_stmt 1 view .LVU2003
 8886              	.LBB7260:
 8887              	.LBB7253:
 8888              	.LBI7222:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 8889              		.loc 16 357 7 view .LVU2004
 8890              	.LBB7241:
 8891              	.LBB7239:
 8892              	.LBI7239:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8893              		.loc 16 240 5 view .LVU2005
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 8894              		.loc 16 240 5 is_stmt 0 view .LVU2006
 8895              	.LBE7239:
 8896              	.LBB7240:
 8897              	.LBI7224:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function(std::move(__x)).swap(*this);
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to zero.
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @post @c !(bool)*this
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns @c *this
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The target of @c *this is deallocated, leaving it empty.
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function&
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       operator=(nullptr_t) noexcept
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 383


 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_M_manager)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager(_M_functor, _M_functor, __destroy_functor);
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = nullptr;
 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = nullptr;
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  }
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	return *this;
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief %Function assignment to a new target.
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __f A %function object that is callable with parameters of
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  type @c T1, @c T2, ..., @c TN and returns a value convertible
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  to @c Res.
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c *this
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This  %function object wrapper will target a copy of @a
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f. If @a __f is @c reference_wrapper<F>, then this function
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  object will contain a reference to the function object @c
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  __f.get(). If @a __f is a NULL function pointer or NULL
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer-to-member, @c this object will be empty.
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  If @a __f is a non-NULL function pointer or an object of type @c
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  reference_wrapper<F>, this function will not throw.
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_Requires<_Callable<typename decay<_Functor>::type>, function&>
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(_Functor&& __f)
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(std::forward<_Functor>(__f)).swap(*this);
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /// @overload
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	function&
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	operator=(reference_wrapper<_Functor> __f) noexcept
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  function(__f).swap(*this);
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  return *this;
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.2] function modifiers
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Swap the targets of two %function objects.
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @param __x A %function with identical call signature.
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  Swap the targets of @c this function object and @a __f. This
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  function will not throw an %exception.
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       void swap(function& __x) noexcept
 8898              		.loc 16 481 12 is_stmt 1 view .LVU2007
 8899              	.LBB7229:
 8900              	.LBI7225:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8901              		.loc 37 189 5 view .LVU2008
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 384


 8902              	.LBB7227:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8903              		.loc 37 197 11 is_stmt 0 view .LVU2009
 8904 006a 6B46     		mov	r3, sp
 8905 006c 9EE80300 		ldm	lr, {r0, r1}
 8906 0070 83E80300 		stm	r3, {r0, r1}
 8907              		.loc 37 198 7 view .LVU2010
 8908 0074 96E80300 		ldm	r6, {r0, r1}
 8909 0078 8EE80300 		stm	lr, {r0, r1}
 8910              	.LBE7227:
 8911              	.LBE7229:
 8912              	.LBB7230:
 8913              	.LBB7231:
 8914              		.loc 37 198 11 view .LVU2011
 8915 007c 0599     		ldr	r1, [sp, #20]
 8916              	.LBE7231:
 8917              	.LBE7230:
 8918              	.LBB7233:
 8919              	.LBB7234:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8920              		.loc 37 197 11 view .LVU2012
 8921 007e 226B     		ldr	r2, [r4, #48]
 8922              		.loc 37 198 11 view .LVU2013
 8923 0080 2763     		str	r7, [r4, #48]
 8924              	.LBE7234:
 8925              	.LBE7233:
 8926              	.LBB7235:
 8927              	.LBB7232:
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __a = _GLIBCXX_MOVE(__b);
 8928              		.loc 37 197 11 view .LVU2014
 8929 0082 676B     		ldr	r7, [r4, #52]
 8930              		.loc 37 198 11 view .LVU2015
 8931 0084 6163     		str	r1, [r4, #52]
 8932              	.LBE7232:
 8933              	.LBE7235:
 8934              	.LBB7236:
 8935              	.LBB7228:
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8936              		.loc 37 199 7 view .LVU2016
 8937 0086 93E80300 		ldm	r3, {r0, r1}
 8938 008a 86E80300 		stm	r6, {r0, r1}
 8939              	.LVL588:
 8940              		.loc 37 199 7 view .LVU2017
 8941              	.LBE7228:
 8942              	.LBE7236:
 8943              	.LBB7237:
 8944              	.LBI7233:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8945              		.loc 37 189 5 is_stmt 1 view .LVU2018
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8946              		.loc 37 189 5 is_stmt 0 view .LVU2019
 8947              	.LBE7237:
 8948              	.LBB7238:
 8949              	.LBI7230:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8950              		.loc 37 189 5 is_stmt 1 view .LVU2020
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 385


 8951              		.loc 37 189 5 is_stmt 0 view .LVU2021
 8952              	.LBE7238:
 8953              	.LBE7240:
 8954              	.LBE7241:
 8955              	.LBE7253:
 8956              	.LBB7254:
 8957              	.LBI7242:
 8958              		.loc 16 481 12 is_stmt 1 view .LVU2022
 8959              	.LBB7246:
 8960              	.LBI7243:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8961              		.loc 37 189 5 view .LVU2023
 8962              	.LBB7245:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8963              		.loc 37 198 7 is_stmt 0 view .LVU2024
 8964 008e 9CE80300 		ldm	ip, {r0, r1}
 8965 0092 86E80300 		stm	r6, {r0, r1}
 8966              		.loc 37 199 7 view .LVU2025
 8967 0096 93E80300 		ldm	r3, {r0, r1}
 8968 009a 8CE80300 		stm	ip, {r0, r1}
 8969              	.LVL589:
 8970              		.loc 37 199 7 view .LVU2026
 8971              	.LBE7245:
 8972              	.LBE7246:
 8973              	.LBB7247:
 8974              	.LBI7247:
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
 8975              		.loc 37 189 5 is_stmt 1 view .LVU2027
 8976              	.LBB7248:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8977              		.loc 37 198 11 is_stmt 0 view .LVU2028
 8978 009e 2B6B     		ldr	r3, [r5, #48]
 8979              	.LBE7248:
 8980              	.LBE7247:
 8981              	.LBE7254:
 8982              	.LBB7255:
 8983              	.LBB7256:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 8984              		.loc 16 303 11 view .LVU2029
 8985 00a0 3046     		mov	r0, r6
 8986              	.LBE7256:
 8987              	.LBE7255:
 8988              	.LBB7258:
 8989              	.LBB7250:
 8990              	.LBB7249:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 8991              		.loc 37 198 11 view .LVU2030
 8992 00a2 0493     		str	r3, [sp, #16]
 8993              	.LBE7249:
 8994              	.LBE7250:
 8995              	.LBB7251:
 8996              	.LBB7252:
 8997 00a4 6B6B     		ldr	r3, [r5, #52]
 8998              		.loc 37 199 11 view .LVU2031
 8999 00a6 C5E90C27 		strd	r2, r7, [r5, #48]
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 9000              		.loc 37 198 11 view .LVU2032
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 386


 9001 00aa 0593     		str	r3, [sp, #20]
 9002              	.LVL590:
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       __b = _GLIBCXX_MOVE(__tmp);
 9003              		.loc 37 198 11 view .LVU2033
 9004              	.LBE7252:
 9005              	.LBE7251:
 9006              	.LBE7258:
 9007              	.LBB7259:
 9008              	.LBI7255:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 9009              		.loc 16 303 11 is_stmt 1 view .LVU2034
 9010              	.LBB7257:
 9011 00ac FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 9012              	.LVL591:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 9013              		.loc 16 303 11 is_stmt 0 view .LVU2035
 9014              	.LBE7257:
 9015              	.LBE7259:
 9016              	.LBE7260:
 9017              	.LBE7261:
 9018              		.loc 31 21 11 view .LVU2036
 9019 00b0 07B0     		add	sp, sp, #28
 9020              		.cfi_remember_state
 9021              		.cfi_def_cfa_offset 20
 9022              		@ sp needed
 9023 00b2 F0BD     		pop	{r4, r5, r6, r7, pc}
 9024              	.LVL592:
 9025              	.L537:
 9026              		.cfi_restore_state
 9027              	.LBB7262:
 9028              	.LBB7156:
 9029              	.LBB7105:
 9030              	.LBB7099:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 9031              		.loc 18 178 7 is_stmt 1 view .LVU2037
 9032              	.LBE7099:
 9033              	.LBB7100:
 9034              	.LBB7083:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9035              		.loc 18 908 16 is_stmt 0 view .LVU2038
 9036 00b4 6268     		ldr	r2, [r4, #4]
 9037              	.LBE7083:
 9038              	.LBE7100:
 9039              	.LBB7101:
 9040              	.LBB7088:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9041              		.loc 18 183 26 view .LVU2039
 9042 00b6 C5E90012 		strd	r1, r2, [r5]
 9043              	.LBE7088:
 9044              	.LBE7101:
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 9045              		.loc 18 746 17 view .LVU2040
 9046 00ba A268     		ldr	r2, [r4, #8]
 9047              	.LVL593:
 9048              	.LBB7102:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 9049              		.loc 18 210 7 is_stmt 1 view .LVU2041
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 387


 9050              	.LBB7094:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9051              		.loc 18 211 31 is_stmt 0 view .LVU2042
 9052 00bc AA60     		str	r2, [r5, #8]
 9053              	.LVL594:
 9054              	.L528:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9055              		.loc 18 211 31 view .LVU2043
 9056              	.LBE7094:
 9057              	.LBE7102:
 9058              	.LBB7103:
 9059              	.LBI7103:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 9060              		.loc 18 178 7 is_stmt 1 view .LVU2044
 9061              	.LBB7104:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9062              		.loc 18 179 26 is_stmt 0 view .LVU2045
 9063 00be 2360     		str	r3, [r4]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9064              		.loc 18 179 33 view .LVU2046
 9065 00c0 B6E7     		b	.L526
 9066              	.LVL595:
 9067              	.L536:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9068              		.loc 18 179 33 view .LVU2047
 9069              	.LBE7104:
 9070              	.LBE7103:
 9071              	.LBE7105:
 9072              	.LBB7106:
 9073              	.LBI7106:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9074              		.loc 18 901 7 is_stmt 1 view .LVU2048
 9075              	.LBB7107:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9076              		.loc 18 902 16 is_stmt 0 view .LVU2049
 9077 00c2 6268     		ldr	r2, [r4, #4]
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9078              		.loc 18 902 16 view .LVU2050
 9079              	.LBE7107:
 9080              	.LBE7106:
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 9081              		.loc 18 721 6 view .LVU2051
 9082 00c4 2AB1     		cbz	r2, .L524
 9083              	.LVL596:
 9084              	.LBB7108:
 9085              	.LBI7108:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9086              		.loc 18 346 7 is_stmt 1 view .LVU2052
 9087              	.LBB7109:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 9088              		.loc 18 348 2 is_stmt 0 view .LVU2053
 9089 00c6 012A     		cmp	r2, #1
 9090 00c8 07D0     		beq	.L538
 9091              	.LVL597:
 9092              	.LBB7110:
 9093              	.LBI7110:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 388


 9094              		.loc 18 346 7 is_stmt 1 view .LVU2054
 9095              	.LBB7111:
 9096              	.LBB7112:
 9097              	.LBI7112:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 9098              		.loc 21 387 7 view .LVU2055
 9099              	.LBB7113:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 9100              		.loc 21 389 2 view .LVU2056
 9101              		.loc 21 395 2 view .LVU2057
 9102              		.loc 21 395 49 is_stmt 0 view .LVU2058
 9103 00ca FFF7FEFF 		bl	memcpy
 9104              	.LVL598:
 9105              		.loc 21 395 49 view .LVU2059
 9106 00ce 2868     		ldr	r0, [r5]
 9107 00d0 6268     		ldr	r2, [r4, #4]
 9108              	.LVL599:
 9109              	.L524:
 9110              		.loc 21 395 49 view .LVU2060
 9111              	.LBE7113:
 9112              	.LBE7112:
 9113              	.LBE7111:
 9114              	.LBE7110:
 9115              	.LBE7109:
 9116              	.LBE7108:
 9117              	.LBB7117:
 9118              	.LBI7117:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9119              		.loc 18 901 7 is_stmt 1 view .LVU2061
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 9120              		.loc 18 901 7 is_stmt 0 view .LVU2062
 9121              	.LBE7117:
 9122              	.LBB7118:
 9123              	.LBI7118:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9124              		.loc 18 214 7 is_stmt 1 view .LVU2063
 9125              	.LBB7119:
 9126              	.LBB7120:
 9127              	.LBI7120:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 9128              		.loc 18 182 7 view .LVU2064
 9129              	.LBE7120:
 9130              	.LBB7122:
 9131              	.LBB7123:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9132              		.loc 21 322 14 is_stmt 0 view .LVU2065
 9133 00d2 0023     		movs	r3, #0
 9134              	.LBE7123:
 9135              	.LBE7122:
 9136              	.LBB7125:
 9137              	.LBB7121:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9138              		.loc 18 183 26 view .LVU2066
 9139 00d4 6A60     		str	r2, [r5, #4]
 9140              	.LVL600:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9141              		.loc 18 183 26 view .LVU2067
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 389


 9142              	.LBE7121:
 9143              	.LBE7125:
 9144              	.LBB7126:
 9145              	.LBI7126:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9146              		.loc 18 186 7 is_stmt 1 view .LVU2068
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9147              		.loc 18 186 7 is_stmt 0 view .LVU2069
 9148              	.LBE7126:
 9149              	.LBB7127:
 9150              	.LBI7122:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9151              		.loc 21 321 7 is_stmt 1 view .LVU2070
 9152              	.LBB7124:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9153              		.loc 21 322 9 view .LVU2071
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9154              		.loc 21 322 14 is_stmt 0 view .LVU2072
 9155 00d6 8354     		strb	r3, [r0, r2]
 9156              	.LVL601:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9157              		.loc 21 322 14 view .LVU2073
 9158              	.LBE7124:
 9159              	.LBE7127:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9160              		.loc 18 218 7 view .LVU2074
 9161 00d8 AAE7     		b	.L526
 9162              	.LVL602:
 9163              	.L538:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9164              		.loc 18 218 7 view .LVU2075
 9165              	.LBE7119:
 9166              	.LBE7118:
 9167              	.LBB7128:
 9168              	.LBB7116:
 9169              	.LBB7114:
 9170              	.LBI7114:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9171              		.loc 21 321 7 is_stmt 1 view .LVU2076
 9172              	.LBB7115:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9173              		.loc 21 322 9 view .LVU2077
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9174              		.loc 21 322 16 is_stmt 0 view .LVU2078
 9175 00da 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 9176              	.LVL603:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9177              		.loc 21 322 14 view .LVU2079
 9178 00dc 0370     		strb	r3, [r0]
 9179 00de 2868     		ldr	r0, [r5]
 9180              	.LVL604:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9181              		.loc 21 322 14 view .LVU2080
 9182 00e0 6268     		ldr	r2, [r4, #4]
 9183              	.LVL605:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9184              		.loc 21 322 22 view .LVU2081
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 390


 9185 00e2 F6E7     		b	.L524
 9186              	.LBE7115:
 9187              	.LBE7114:
 9188              	.LBE7116:
 9189              	.LBE7128:
 9190              	.LBE7156:
 9191              	.LBE7262:
 9192              		.cfi_endproc
 9193              	.LFE6224:
 9195              		.section	.text._ZN10jellybeans8MenuItemD2Ev,"axG",%progbits,_ZN10jellybeans8MenuItemD5Ev,comdat
 9196              		.align	1
 9197              		.p2align 2,,3
 9198              		.weak	_ZN10jellybeans8MenuItemD2Ev
 9199              		.syntax unified
 9200              		.thumb
 9201              		.thumb_func
 9202              		.fpu fpv5-d16
 9204              	_ZN10jellybeans8MenuItemD2Ev:
 9205              	.LVL606:
 9206              	.LFB5115:
 9207              		.loc 31 21 11 is_stmt 1 view -0
 9208              		.cfi_startproc
 9209              		@ args = 0, pretend = 0, frame = 0
 9210              		@ frame_needed = 0, uses_anonymous_args = 0
 9211              		.loc 31 21 11 is_stmt 0 view .LVU2083
 9212 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9213              		.cfi_def_cfa_offset 24
 9214              		.cfi_offset 3, -24
 9215              		.cfi_offset 4, -20
 9216              		.cfi_offset 5, -16
 9217              		.cfi_offset 6, -12
 9218              		.cfi_offset 7, -8
 9219              		.cfi_offset 14, -4
 9220              	.LBB7325:
 9221              	.LBB7326:
 9222              	.LBB7327:
 9223              	.LBB7328:
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 9224              		.loc 16 244 11 view .LVU2084
 9225 0002 036B     		ldr	r3, [r0, #48]
 9226              	.LBE7328:
 9227              	.LBE7327:
 9228              	.LBE7326:
 9229              	.LBE7325:
 9230              		.loc 31 21 11 view .LVU2085
 9231 0004 0746     		mov	r7, r0
 9232              	.LVL607:
 9233              	.LBB7334:
 9234              	.LBI7325:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 9235              		.loc 16 303 11 is_stmt 1 view .LVU2086
 9236              	.LBB7333:
 9237              	.LBB7331:
 9238              	.LBI7327:
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 9239              		.loc 16 242 5 view .LVU2087
 9240              	.LBB7329:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 391


 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	_M_manager(_M_functor, _M_functor, __destroy_functor);
 9241              		.loc 16 244 7 view .LVU2088
 9242 0006 23B1     		cbz	r3, .L540
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 9243              		.loc 16 245 2 view .LVU2089
 9244              	.LBE7329:
 9245              	.LBE7331:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 9246              		.loc 16 303 11 is_stmt 0 view .LVU2090
 9247 0008 00F12801 		add	r1, r0, #40
 9248              	.LVL608:
 9249              	.LBB7332:
 9250              	.LBB7330:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 9251              		.loc 16 245 12 view .LVU2091
 9252 000c 0322     		movs	r2, #3
 9253 000e 0846     		mov	r0, r1
 9254              	.LVL609:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 9255              		.loc 16 245 12 view .LVU2092
 9256 0010 9847     		blx	r3
 9257              	.LVL610:
 9258              	.L540:
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 9259              		.loc 16 245 12 view .LVU2093
 9260              	.LBE7330:
 9261              	.LBE7332:
 9262              	.LBE7333:
 9263              	.LBE7334:
 9264              	.LBB7335:
 9265              	.LBI7335:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9266              		.loc 24 678 7 is_stmt 1 view .LVU2094
 9267              	.LBB7336:
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 9268              		.loc 24 680 15 is_stmt 0 view .LVU2095
 9269 0012 D7E90656 		ldrd	r5, r6, [r7, #24]
 9270              	.LVL611:
 9271              	.LBB7337:
 9272              	.LBI7337:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 9273              		.loc 24 276 7 is_stmt 1 view .LVU2096
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 9274              		.loc 24 276 7 is_stmt 0 view .LVU2097
 9275              	.LBE7337:
 9276              	.LBB7338:
 9277              	.LBI7338:
 9278              		.loc 26 735 5 is_stmt 1 view .LVU2098
 9279              	.LBB7339:
 9280              	.LBB7340:
 9281              	.LBB7341:
 9282              	.LBB7342:
 9283              		.loc 30 151 19 view .LVU2099
 9284 0016 B542     		cmp	r5, r6
 9285 0018 0FD0     		beq	.L541
 9286 001a 05F10804 		add	r4, r5, #8
 9287              	.LVL612:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 392


 9288              	.L543:
 9289              	.LBB7343:
 9290              	.LBI7343:
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     {
 9291              		.loc 30 135 5 view .LVU2100
 9292              	.LBB7344:
 9293              	.LBI7344:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9294              		.loc 18 657 7 view .LVU2101
 9295              	.LBB7345:
 9296              	.LBI7345:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9297              		.loc 18 229 7 view .LVU2102
 9298              	.LBB7346:
 9299              	.LBB7347:
 9300              	.LBI7347:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9301              		.loc 18 221 7 view .LVU2103
 9302              	.LBB7348:
 9303              	.LBI7348:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9304              		.loc 18 186 7 view .LVU2104
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9305              		.loc 18 186 7 is_stmt 0 view .LVU2105
 9306              	.LBE7348:
 9307              	.LBE7347:
 9308              	.LBB7351:
 9309              	.LBI7351:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9310              		.loc 18 236 7 is_stmt 1 view .LVU2106
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9311              		.loc 18 236 7 is_stmt 0 view .LVU2107
 9312              	.LBE7351:
 9313              	.LBB7359:
 9314              	.LBB7350:
 9315              	.LBB7349:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9316              		.loc 18 187 28 view .LVU2108
 9317 001e 54F8080C 		ldr	r0, [r4, #-8]
 9318              	.LVL613:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9319              		.loc 18 187 28 view .LVU2109
 9320              	.LBE7349:
 9321              	.LBE7350:
 9322              	.LBE7359:
 9323              	.LBB7360:
 9324              	.LBB7352:
 9325              	.LBB7353:
 9326              	.LBI7353:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9327              		.loc 26 491 7 is_stmt 1 view .LVU2110
 9328              	.LBB7354:
 9329              	.LBI7354:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9330              		.loc 20 120 7 view .LVU2111
 9331              	.LBE7354:
 9332              	.LBE7353:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 393


 9333              	.LBE7352:
 9334              	.LBE7360:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9335              		.loc 18 231 2 is_stmt 0 view .LVU2112
 9336 0022 8442     		cmp	r4, r0
 9337              	.LBE7346:
 9338              	.LBE7345:
 9339              	.LBE7344:
 9340              	.LBE7343:
 9341              		.loc 30 151 19 view .LVU2113
 9342 0024 04F11804 		add	r4, r4, #24
 9343              	.LBB7368:
 9344              	.LBB7367:
 9345              	.LBB7363:
 9346              	.LBB7362:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9347              		.loc 18 231 2 view .LVU2114
 9348 0028 03D0     		beq	.L542
 9349              	.LBB7361:
 9350              	.LBB7358:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9351              		.loc 18 237 34 view .LVU2115
 9352 002a A968     		ldr	r1, [r5, #8]
 9353              	.LBB7357:
 9354              	.LBB7356:
 9355              	.LBB7355:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9356              		.loc 20 133 19 view .LVU2116
 9357 002c 0131     		adds	r1, r1, #1
 9358              	.LVL614:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9359              		.loc 20 133 19 view .LVU2117
 9360 002e FFF7FEFF 		bl	_ZdlPvj
 9361              	.LVL615:
 9362              	.L542:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9363              		.loc 20 133 19 view .LVU2118
 9364              	.LBE7355:
 9365              	.LBE7356:
 9366              	.LBE7357:
 9367              	.LBE7358:
 9368              	.LBE7361:
 9369              	.LBE7362:
 9370              	.LBE7363:
 9371              	.LBB7364:
 9372              	.LBI7364:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9373              		.loc 18 150 14 is_stmt 1 view .LVU2119
 9374              	.LBB7365:
 9375              	.LBI7365:
 9376              		.loc 19 162 7 view .LVU2120
 9377              	.LBB7366:
 9378              	.LBI7366:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9379              		.loc 20 89 7 view .LVU2121
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9380              		.loc 20 89 7 is_stmt 0 view .LVU2122
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 394


 9381              	.LBE7366:
 9382              	.LBE7365:
 9383              	.LBE7364:
 9384              	.LBE7367:
 9385              	.LBE7368:
 9386              		.loc 30 151 4 is_stmt 1 view .LVU2123
 9387 0032 1835     		adds	r5, r5, #24
 9388              	.LVL616:
 9389              		.loc 30 151 19 view .LVU2124
 9390 0034 AE42     		cmp	r6, r5
 9391 0036 F2D1     		bne	.L543
 9392              	.LBE7342:
 9393              	.LBE7341:
 9394              	.LBE7340:
 9395              	.LBE7339:
 9396              	.LBE7338:
 9397              	.LBB7369:
 9398              	.LBB7370:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 9399              		.loc 24 335 15 is_stmt 0 view .LVU2125
 9400 0038 BE69     		ldr	r6, [r7, #24]
 9401              	.LVL617:
 9402              	.L541:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 9403              		.loc 24 335 15 view .LVU2126
 9404              	.LBE7370:
 9405              	.LBI7369:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9406              		.loc 24 333 7 is_stmt 1 view .LVU2127
 9407              	.LBB7385:
 9408              	.LBB7371:
 9409              	.LBI7371:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9410              		.loc 24 350 7 view .LVU2128
 9411              	.LBB7372:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 9412              		.loc 24 353 2 is_stmt 0 view .LVU2129
 9413 003a 26B1     		cbz	r6, .L544
 9414              	.LVL618:
 9415              	.LBB7373:
 9416              	.LBI7373:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9417              		.loc 26 491 7 is_stmt 1 view .LVU2130
 9418              	.LBB7374:
 9419              	.LBB7375:
 9420              	.LBI7375:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9421              		.loc 20 120 7 view .LVU2131
 9422              	.LBE7375:
 9423              	.LBE7374:
 9424              	.LBE7373:
 9425              	.LBE7372:
 9426              	.LBE7371:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9427              		.loc 24 336 35 is_stmt 0 view .LVU2132
 9428 003c 396A     		ldr	r1, [r7, #32]
 9429              	.LBB7381:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 395


 9430              	.LBB7380:
 9431              	.LBB7379:
 9432              	.LBB7378:
 9433              	.LBB7377:
 9434              	.LBB7376:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9435              		.loc 20 133 19 view .LVU2133
 9436 003e 3046     		mov	r0, r6
 9437 0040 891B     		subs	r1, r1, r6
 9438 0042 FFF7FEFF 		bl	_ZdlPvj
 9439              	.LVL619:
 9440              	.L544:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9441              		.loc 20 133 19 view .LVU2134
 9442              	.LBE7376:
 9443              	.LBE7377:
 9444              	.LBE7378:
 9445              	.LBE7379:
 9446              	.LBE7380:
 9447              	.LBE7381:
 9448              	.LBB7382:
 9449              	.LBI7382:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 9450              		.loc 24 128 14 is_stmt 1 view .LVU2135
 9451              	.LBB7383:
 9452              	.LBI7383:
 9453              		.loc 19 162 7 view .LVU2136
 9454              	.LBB7384:
 9455              	.LBI7384:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9456              		.loc 20 89 7 view .LVU2137
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9457              		.loc 20 89 7 is_stmt 0 view .LVU2138
 9458              	.LBE7384:
 9459              	.LBE7383:
 9460              	.LBE7382:
 9461              	.LBE7385:
 9462              	.LBE7369:
 9463              	.LBE7336:
 9464              	.LBE7335:
 9465              	.LBB7386:
 9466              	.LBI7386:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9467              		.loc 18 657 7 is_stmt 1 view .LVU2139
 9468              	.LBB7387:
 9469              	.LBI7387:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9470              		.loc 18 229 7 view .LVU2140
 9471              	.LBB7388:
 9472              	.LBB7389:
 9473              	.LBI7389:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9474              		.loc 18 221 7 view .LVU2141
 9475              	.LBB7390:
 9476              	.LBI7390:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9477              		.loc 18 186 7 view .LVU2142
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 396


 9478              	.LBB7391:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9479              		.loc 18 187 28 is_stmt 0 view .LVU2143
 9480 0046 3B46     		mov	r3, r7
 9481 0048 53F8080B 		ldr	r0, [r3], #8
 9482              	.LVL620:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9483              		.loc 18 187 28 view .LVU2144
 9484              	.LBE7391:
 9485              	.LBE7390:
 9486              	.LBB7392:
 9487              	.LBI7392:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9488              		.loc 18 200 7 is_stmt 1 view .LVU2145
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9489              		.loc 18 200 7 is_stmt 0 view .LVU2146
 9490              	.LBE7392:
 9491              	.LBE7389:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9492              		.loc 18 231 2 view .LVU2147
 9493 004c 9842     		cmp	r0, r3
 9494 004e 03D0     		beq	.L545
 9495              	.LVL621:
 9496              	.LBB7393:
 9497              	.LBI7393:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9498              		.loc 18 236 7 is_stmt 1 view .LVU2148
 9499              	.LBB7394:
 9500              	.LBB7395:
 9501              	.LBI7395:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9502              		.loc 26 491 7 view .LVU2149
 9503              	.LBB7396:
 9504              	.LBI7396:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9505              		.loc 20 120 7 view .LVU2150
 9506              	.LBE7396:
 9507              	.LBE7395:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9508              		.loc 18 237 34 is_stmt 0 view .LVU2151
 9509 0050 B968     		ldr	r1, [r7, #8]
 9510              	.LBB7399:
 9511              	.LBB7398:
 9512              	.LBB7397:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9513              		.loc 20 133 19 view .LVU2152
 9514 0052 0131     		adds	r1, r1, #1
 9515              	.LVL622:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9516              		.loc 20 133 19 view .LVU2153
 9517 0054 FFF7FEFF 		bl	_ZdlPvj
 9518              	.LVL623:
 9519              	.L545:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9520              		.loc 20 133 19 view .LVU2154
 9521              	.LBE7397:
 9522              	.LBE7398:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 397


 9523              	.LBE7399:
 9524              	.LBE7394:
 9525              	.LBE7393:
 9526              	.LBE7388:
 9527              	.LBE7387:
 9528              	.LBB7400:
 9529              	.LBI7400:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9530              		.loc 18 150 14 is_stmt 1 view .LVU2155
 9531              	.LBB7401:
 9532              	.LBI7401:
 9533              		.loc 19 162 7 view .LVU2156
 9534              	.LBB7402:
 9535              	.LBI7402:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9536              		.loc 20 89 7 view .LVU2157
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9537              		.loc 20 89 7 is_stmt 0 view .LVU2158
 9538              	.LBE7402:
 9539              	.LBE7401:
 9540              	.LBE7400:
 9541              	.LBE7386:
 9542              		.loc 31 21 11 view .LVU2159
 9543 0058 3846     		mov	r0, r7
 9544 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9545              		.loc 31 21 11 view .LVU2160
 9546              		.cfi_endproc
 9547              	.LFE5115:
 9549              		.weak	_ZN10jellybeans8MenuItemD1Ev
 9550              		.thumb_set _ZN10jellybeans8MenuItemD1Ev,_ZN10jellybeans8MenuItemD2Ev
 9551              		.section	.text._Z14updateControlsv,"ax",%progbits
 9552              		.align	1
 9553              		.p2align 2,,3
 9554              		.global	_Z14updateControlsv
 9555              		.syntax unified
 9556              		.thumb
 9557              		.thumb_func
 9558              		.fpu fpv5-d16
 9560              	_Z14updateControlsv:
 9561              	.LFB5133:
 108:Jellybeans.cpp **** 
 109:Jellybeans.cpp **** int main(void) {
 110:Jellybeans.cpp ****     // Initialize hardware
 111:Jellybeans.cpp ****     patch.Init();
 112:Jellybeans.cpp **** 
 113:Jellybeans.cpp ****     // Initialize arp
 114:Jellybeans.cpp ****     arp = new Arp();
 115:Jellybeans.cpp **** 
 116:Jellybeans.cpp ****     // Initialize menu items
 117:Jellybeans.cpp ****     // Note that the positions of items 0-3 need to remain fixed
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 398


 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 128:Jellybeans.cpp **** 
 129:Jellybeans.cpp ****     // Initialize CV params
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 138:Jellybeans.cpp **** 
 139:Jellybeans.cpp ****     // Initialize variables
 140:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 141:Jellybeans.cpp ****     menuPos     = 0;
 142:Jellybeans.cpp ****     isEditing   = false;
 143:Jellybeans.cpp ****     debugString = "I'm a debug string";
 144:Jellybeans.cpp **** 
 145:Jellybeans.cpp ****     patch.StartAdc();
 146:Jellybeans.cpp **** 
 147:Jellybeans.cpp ****     // Main event loop
 148:Jellybeans.cpp ****     while(1){
 149:Jellybeans.cpp ****         updateControls();
 150:Jellybeans.cpp ****         updateOled();
 151:Jellybeans.cpp ****         updateOutputs();
 152:Jellybeans.cpp ****     }
 153:Jellybeans.cpp **** }
 154:Jellybeans.cpp **** 
 155:Jellybeans.cpp **** // Handle any input to Patches' controls
 156:Jellybeans.cpp **** void updateControls() {
 9562              		.loc 14 156 23 is_stmt 1 view -0
 9563              		.cfi_startproc
 9564              		@ args = 0, pretend = 0, frame = 0
 9565              		@ frame_needed = 0, uses_anonymous_args = 0
 157:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 9566              		.loc 14 157 5 view .LVU2162
 156:Jellybeans.cpp ****     patch.ProcessAnalogControls();
 9567              		.loc 14 156 23 is_stmt 0 view .LVU2163
 9568 0000 38B5     		push	{r3, r4, r5, lr}
 9569              		.cfi_def_cfa_offset 16
 9570              		.cfi_offset 3, -16
 9571              		.cfi_offset 4, -12
 9572              		.cfi_offset 5, -8
 9573              		.cfi_offset 14, -4
 9574              		.loc 14 157 32 view .LVU2164
 9575 0002 4A48     		ldr	r0, .L571
 9576 0004 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
 9577              	.LVL624:
 158:Jellybeans.cpp ****     patch.ProcessDigitalControls();
 9578              		.loc 14 158 5 is_stmt 1 view .LVU2165
 9579              		.loc 14 158 33 is_stmt 0 view .LVU2166
 9580 0008 4848     		ldr	r0, .L571
 9581 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
 9582              	.LVL625:
 159:Jellybeans.cpp **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 399


 160:Jellybeans.cpp ****     // Parse CV values
 161:Jellybeans.cpp ****     int curCvVal;
 9583              		.loc 14 161 5 is_stmt 1 view .LVU2167
 162:Jellybeans.cpp ****     // Pattern
 163:Jellybeans.cpp ****     curCvVal = static_cast<int>(patternParam.Process());
 9584              		.loc 14 163 5 view .LVU2168
 9585              		.loc 14 163 53 is_stmt 0 view .LVU2169
 9586 000e 4848     		ldr	r0, .L571+4
 9587 0010 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 9588              	.LVL626:
 9589              		.loc 14 163 14 view .LVU2170
 9590 0014 FDEEC07A 		vcvt.s32.f32	s15, s0
 164:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 9591              		.loc 14 164 17 view .LVU2171
 9592 0018 464D     		ldr	r5, .L571+8
 163:Jellybeans.cpp ****     if(curCvVal != patternCurCvVal){
 9593              		.loc 14 163 14 view .LVU2172
 9594 001a 17EE904A 		vmov	r4, s15	@ int
 9595              	.LVL627:
 9596              		.loc 14 164 5 is_stmt 1 view .LVU2173
 9597 001e 2B68     		ldr	r3, [r5]
 9598 0020 A342     		cmp	r3, r4
 9599 0022 05D0     		beq	.L555
 165:Jellybeans.cpp ****         menuItems[0].setIndex(curCvVal);
 9600              		.loc 14 165 9 view .LVU2174
 9601              	.LVL628:
 9602              	.LBB7403:
 9603              	.LBI7403:
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _Tp 	    			      value_type;
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*			      pointer;
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*                       const_pointer;
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type&                   	      reference;
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type&             	      const_reference;
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef value_type*          		      iterator;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef const value_type*			      const_iterator;
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::size_t                    	      size_type;
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::ptrdiff_t                   	      difference_type;
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<iterator>	      reverse_iterator;
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef std::reverse_iterator<const_iterator>   const_reverse_iterator;
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Support for zero-sized arrays mandatory.
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typedef _GLIBCXX_STD_C::__array_traits<_Tp, _Nm> _AT_Type;
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       typename _AT_Type::_Type                         _M_elems;
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // No explicit construct/copy/destroy for aggregate type.
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // DR 776.
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       fill(const value_type& __u)
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::fill_n(begin(), size(), __u); }
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX20_CONSTEXPR void
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       swap(array& __other)
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       noexcept(_AT_Type::_Is_nothrow_swappable::value)
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { std::swap_ranges(begin(), end(), __other.begin()); }
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 400


 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Iterators.
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() noexcept
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data()); }
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       begin() const noexcept
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR iterator
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() noexcept
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return iterator(data() + _Nm); }
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       end() const noexcept
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() noexcept
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(end()); }
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rbegin() const noexcept
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() noexcept
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return reverse_iterator(begin()); }
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       rend() const noexcept
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cbegin() const noexcept
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data()); }
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_iterator
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       cend() const noexcept
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_iterator(data() + _Nm); }
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crbegin() const noexcept
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(end()); }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR const_reverse_iterator
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       crend() const noexcept
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_reverse_iterator(begin()); }
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Capacity.
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       size() const noexcept { return _Nm; }
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       constexpr size_type
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       max_size() const noexcept { return _Nm; }
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX_NODISCARD constexpr bool
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 401


 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       empty() const noexcept { return size() == 0; }
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       // Element access.
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       _GLIBCXX17_CONSTEXPR reference
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       operator[](size_type __n) noexcept
 9604              		.loc 29 185 7 view .LVU2175
 9605              	.LBB7404:
 9606              	.LBI7404:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9607              		.loc 29 55 7 view .LVU2176
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9608              		.loc 29 55 7 is_stmt 0 view .LVU2177
 9609              	.LBE7404:
 9610              	.LBE7403:
 9611              		.loc 14 165 30 view .LVU2178
 9612 0024 17EE901A 		vmov	r1, s15	@ int
 9613 0028 4348     		ldr	r0, .L571+12
 9614 002a FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9615              	.LVL629:
 166:Jellybeans.cpp ****         patternCurCvVal = curCvVal;
 9616              		.loc 14 166 9 is_stmt 1 view .LVU2179
 9617              		.loc 14 166 25 is_stmt 0 view .LVU2180
 9618 002e 2C60     		str	r4, [r5]
 9619              	.L555:
 167:Jellybeans.cpp ****     }
 168:Jellybeans.cpp ****     // Division
 169:Jellybeans.cpp ****     curCvVal = static_cast<int>(divisionParam.Process());
 9620              		.loc 14 169 5 is_stmt 1 view .LVU2181
 9621              		.loc 14 169 54 is_stmt 0 view .LVU2182
 9622 0030 4248     		ldr	r0, .L571+16
 9623 0032 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 9624              	.LVL630:
 9625              		.loc 14 169 14 view .LVU2183
 9626 0036 FDEEC07A 		vcvt.s32.f32	s15, s0
 170:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 9627              		.loc 14 170 17 view .LVU2184
 9628 003a 414D     		ldr	r5, .L571+20
 169:Jellybeans.cpp ****     if(curCvVal != divisionCurCvVal){
 9629              		.loc 14 169 14 view .LVU2185
 9630 003c 17EE904A 		vmov	r4, s15	@ int
 9631              	.LVL631:
 9632              		.loc 14 170 5 is_stmt 1 view .LVU2186
 9633 0040 2B68     		ldr	r3, [r5]
 9634 0042 A342     		cmp	r3, r4
 9635 0044 05D0     		beq	.L556
 171:Jellybeans.cpp ****         menuItems[1].setIndex(curCvVal);
 9636              		.loc 14 171 9 view .LVU2187
 9637              	.LVL632:
 9638              	.LBB7405:
 9639              	.LBI7405:
 9640              		.loc 29 185 7 view .LVU2188
 9641              	.LBB7406:
 9642              	.LBI7406:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9643              		.loc 29 55 7 view .LVU2189
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9644              		.loc 29 55 7 is_stmt 0 view .LVU2190
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 402


 9645              	.LBE7406:
 9646              	.LBE7405:
 9647              		.loc 14 171 30 view .LVU2191
 9648 0046 17EE901A 		vmov	r1, s15	@ int
 9649 004a 3E48     		ldr	r0, .L571+24
 9650 004c FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9651              	.LVL633:
 172:Jellybeans.cpp ****         divisionCurCvVal = curCvVal;
 9652              		.loc 14 172 9 is_stmt 1 view .LVU2192
 9653              		.loc 14 172 26 is_stmt 0 view .LVU2193
 9654 0050 2C60     		str	r4, [r5]
 9655              	.L556:
 173:Jellybeans.cpp ****     }
 174:Jellybeans.cpp ****     // Voicing
 175:Jellybeans.cpp ****     curCvVal = static_cast<int>(voicingParam.Process());
 9656              		.loc 14 175 5 is_stmt 1 view .LVU2194
 9657              		.loc 14 175 53 is_stmt 0 view .LVU2195
 9658 0052 3D48     		ldr	r0, .L571+28
 9659 0054 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 9660              	.LVL634:
 9661              		.loc 14 175 14 view .LVU2196
 9662 0058 FDEEC07A 		vcvt.s32.f32	s15, s0
 176:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 9663              		.loc 14 176 17 view .LVU2197
 9664 005c 3B4D     		ldr	r5, .L571+32
 175:Jellybeans.cpp ****     if(curCvVal != voicingCurCvVal){
 9665              		.loc 14 175 14 view .LVU2198
 9666 005e 17EE904A 		vmov	r4, s15	@ int
 9667              	.LVL635:
 9668              		.loc 14 176 5 is_stmt 1 view .LVU2199
 9669 0062 2B68     		ldr	r3, [r5]
 9670 0064 A342     		cmp	r3, r4
 9671 0066 05D0     		beq	.L557
 177:Jellybeans.cpp ****         menuItems[2].setIndex(curCvVal);
 9672              		.loc 14 177 9 view .LVU2200
 9673              	.LVL636:
 9674              	.LBB7407:
 9675              	.LBI7407:
 9676              		.loc 29 185 7 view .LVU2201
 9677              	.LBB7408:
 9678              	.LBI7408:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9679              		.loc 29 55 7 view .LVU2202
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9680              		.loc 29 55 7 is_stmt 0 view .LVU2203
 9681              	.LBE7408:
 9682              	.LBE7407:
 9683              		.loc 14 177 30 view .LVU2204
 9684 0068 17EE901A 		vmov	r1, s15	@ int
 9685 006c 3848     		ldr	r0, .L571+36
 9686 006e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9687              	.LVL637:
 178:Jellybeans.cpp ****         voicingCurCvVal = curCvVal;
 9688              		.loc 14 178 9 is_stmt 1 view .LVU2205
 9689              		.loc 14 178 25 is_stmt 0 view .LVU2206
 9690 0072 2C60     		str	r4, [r5]
 9691              	.L557:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 403


 179:Jellybeans.cpp ****     }
 180:Jellybeans.cpp ****     // Inversion
 181:Jellybeans.cpp ****     curCvVal = static_cast<int>(inversionParam.Process());
 9692              		.loc 14 181 5 is_stmt 1 view .LVU2207
 9693              		.loc 14 181 55 is_stmt 0 view .LVU2208
 9694 0074 3748     		ldr	r0, .L571+40
 9695 0076 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 9696              	.LVL638:
 9697              		.loc 14 181 14 view .LVU2209
 9698 007a FDEEC07A 		vcvt.s32.f32	s15, s0
 182:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 9699              		.loc 14 182 17 view .LVU2210
 9700 007e 364D     		ldr	r5, .L571+44
 181:Jellybeans.cpp ****     if(curCvVal != inversionCurCvVal){
 9701              		.loc 14 181 14 view .LVU2211
 9702 0080 17EE904A 		vmov	r4, s15	@ int
 9703              	.LVL639:
 9704              		.loc 14 182 5 is_stmt 1 view .LVU2212
 9705 0084 2B68     		ldr	r3, [r5]
 9706 0086 A342     		cmp	r3, r4
 9707 0088 05D0     		beq	.L558
 183:Jellybeans.cpp ****         menuItems[3].setIndex(curCvVal);
 9708              		.loc 14 183 9 view .LVU2213
 9709              	.LVL640:
 9710              	.LBB7409:
 9711              	.LBI7409:
 9712              		.loc 29 185 7 view .LVU2214
 9713              	.LBB7410:
 9714              	.LBI7410:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9715              		.loc 29 55 7 view .LVU2215
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9716              		.loc 29 55 7 is_stmt 0 view .LVU2216
 9717              	.LBE7410:
 9718              	.LBE7409:
 9719              		.loc 14 183 30 view .LVU2217
 9720 008a 17EE901A 		vmov	r1, s15	@ int
 9721 008e 3348     		ldr	r0, .L571+48
 9722 0090 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem8setIndexEi
 9723              	.LVL641:
 184:Jellybeans.cpp ****         inversionCurCvVal = curCvVal;
 9724              		.loc 14 184 9 is_stmt 1 view .LVU2218
 9725              		.loc 14 184 27 is_stmt 0 view .LVU2219
 9726 0094 2C60     		str	r4, [r5]
 9727              	.L558:
 185:Jellybeans.cpp ****     }
 186:Jellybeans.cpp **** 
 187:Jellybeans.cpp ****     if(!isEditing)
 9728              		.loc 14 187 5 is_stmt 1 view .LVU2220
 9729              	.LBB7411:
 9730              		.loc 14 187 8 is_stmt 0 view .LVU2221
 9731 0096 324C     		ldr	r4, .L571+52
 9732              	.LVL642:
 9733              		.loc 14 187 5 view .LVU2222
 9734 0098 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9735 009a DBB9     		cbnz	r3, .L559
 188:Jellybeans.cpp ****     {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 404


 189:Jellybeans.cpp ****         // Update menu position
 190:Jellybeans.cpp ****         menuPos += patch.encoder.Increment();
 9736              		.loc 14 190 9 is_stmt 1 view .LVU2223
 9737              	.LVL643:
 9738              	.LBB7412:
 9739              	.LBI7412:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h ****      * Update rate is to be deprecated in a future release
  25:../../libdaisy/src/hid/encoder.h ****      */
  26:../../libdaisy/src/hid/encoder.h ****     void Init(dsy_gpio_pin a,
  27:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin b,
  28:../../libdaisy/src/hid/encoder.h ****               dsy_gpio_pin click,
  29:../../libdaisy/src/hid/encoder.h ****               float        update_rate = 0.f);
  30:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  31:../../libdaisy/src/hid/encoder.h ****      * In order for events not to be missed, its important that the Edge/Pressed checks be made at 
  32:../../libdaisy/src/hid/encoder.h ****      */
  33:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  34:../../libdaisy/src/hid/encoder.h **** 
  35:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  36:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 9740              		.loc 7 36 20 view .LVU2224
 9741              	.LBB7413:
 9742              		.loc 7 36 40 view .LVU2225
 9743              		.loc 7 36 40 is_stmt 0 view .LVU2226
 9744              	.LBE7413:
 9745              	.LBE7412:
 9746              		.loc 14 190 17 view .LVU2227
 9747 009c 3149     		ldr	r1, .L571+56
 9748              	.LBB7415:
 9749              	.LBB7414:
 9750              		.loc 7 36 47 view .LVU2228
 9751 009e 234D     		ldr	r5, .L571
 9752              	.LBE7414:
 9753              	.LBE7415:
 9754              		.loc 14 190 17 view .LVU2229
 9755 00a0 0A68     		ldr	r2, [r1]
 9756 00a2 686D     		ldr	r0, [r5, #84]
 9757 00a4 0244     		add	r2, r2, r0
 191:Jellybeans.cpp ****     
 192:Jellybeans.cpp ****         if (menuPos > (int) menuItems.size() - 1) {
 9758              		.loc 14 192 9 is_stmt 1 view .LVU2230
 9759 00a6 092A     		cmp	r2, #9
 9760 00a8 23DC     		bgt	.L569
 193:Jellybeans.cpp ****             menuPos = (int) menuItems.size() - 1;
 194:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9761              		.loc 14 194 16 view .LVU2231
 190:Jellybeans.cpp ****     
 9762              		.loc 14 190 17 is_stmt 0 view .LVU2232
 9763 00aa 002A     		cmp	r2, #0
 9764 00ac C8BF     		it	gt
 9765 00ae 1346     		movgt	r3, r2
 9766 00b0 0B60     		str	r3, [r1]
 9767              	.L561:
 195:Jellybeans.cpp ****             menuPos = 0;
 196:Jellybeans.cpp ****         }
 197:Jellybeans.cpp **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 405


 198:Jellybeans.cpp ****         isEditing = patch.encoder.RisingEdge();
 9768              		.loc 14 198 9 is_stmt 1 view .LVU2233
 9769              	.LVL644:
 9770              	.LBB7416:
 9771              	.LBI7416:
  37:../../libdaisy/src/hid/encoder.h **** 
  38:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed. */
  39:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 9772              		.loc 7 39 17 view .LVU2234
 9773              	.LBE7416:
 9774              	.LBE7411:
 9775              		.loc 7 39 38 view .LVU2235
 9776              	.LBB7446:
 9777              	.LBB7423:
 9778              	.LBB7417:
 9779              	.LBI7417:
  43:../../libdaisy/src/hid/switch.h **** 
  44:../../libdaisy/src/hid/switch.h ****     /** 
  45:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libdaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libdaisy/src/hid/switch.h ****     */
  52:../../libdaisy/src/hid/switch.h ****     void
  53:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libdaisy/src/hid/switch.h **** 
  55:../../libdaisy/src/hid/switch.h ****     /**
  56:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  57:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libdaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libdaisy/src/hid/switch.h ****     */
  60:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libdaisy/src/hid/switch.h **** 
  62:../../libdaisy/src/hid/switch.h ****     /** 
  63:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libdaisy/src/hid/switch.h ****     */
  67:../../libdaisy/src/hid/switch.h ****     void Debounce();
  68:../../libdaisy/src/hid/switch.h **** 
  69:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 9780              		.loc 8 70 17 view .LVU2236
 9781              	.LBB7418:
 9782              		.loc 8 70 38 view .LVU2237
 9783              		.loc 8 70 38 is_stmt 0 view .LVU2238
 9784              	.LBE7418:
 9785              	.LBE7417:
 9786              	.LBE7423:
 9787              	.LBE7446:
 199:Jellybeans.cpp ****     }
 200:Jellybeans.cpp ****     else
 201:Jellybeans.cpp ****     {
 202:Jellybeans.cpp ****         // Update selected menu item's value
 203:Jellybeans.cpp ****         int inc = patch.encoder.Increment();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 406


 204:Jellybeans.cpp ****         if (inc > 0){
 205:Jellybeans.cpp ****             menuItems[menuPos].increment();
 206:Jellybeans.cpp ****         } else if (inc < 0){
 207:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 208:Jellybeans.cpp ****         }
 209:Jellybeans.cpp **** 
 210:Jellybeans.cpp ****         isEditing = !patch.encoder.RisingEdge();
 211:Jellybeans.cpp ****     }
 212:Jellybeans.cpp **** 
 213:Jellybeans.cpp ****     // Update step with respect to clock
 214:Jellybeans.cpp ****     // Accept input from either GATE IN
 215:Jellybeans.cpp ****     //
 216:Jellybeans.cpp ****     // Currently, we'll just do 1 step per clock pulse
 217:Jellybeans.cpp ****     if(patch.gate_input[0].Trig() || patch.gate_input[1].Trig())
 9788              		.loc 14 217 5 is_stmt 1 view .LVU2239
 9789              	.LBB7447:
 9790              	.LBB7424:
 9791              	.LBB7421:
 9792              	.LBB7419:
 9793              		.loc 8 70 55 is_stmt 0 view .LVU2240
 9794 00b2 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9795              	.LBE7419:
 9796              	.LBE7421:
 9797              	.LBE7424:
 9798              	.LBE7447:
 9799              		.loc 14 217 32 view .LVU2241
 9800 00b6 2C48     		ldr	r0, .L571+60
 9801              	.LBB7448:
 9802              	.LBB7425:
 9803              	.LBB7422:
 9804              	.LBB7420:
 9805              		.loc 8 70 55 view .LVU2242
 9806 00b8 A3F17F03 		sub	r3, #127
 9807 00bc B3FA83F3 		clz	r3, r3
 9808 00c0 5B09     		lsrs	r3, r3, #5
 9809 00c2 2370     		strb	r3, [r4]
 9810              	.LBE7420:
 9811              	.LBE7422:
 9812              	.LBE7425:
 9813              	.LBE7448:
 9814              		.loc 14 217 32 view .LVU2243
 9815 00c4 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9816              	.LVL645:
 9817              		.loc 14 217 35 view .LVU2244
 9818 00c8 50BB     		cbnz	r0, .L567
 9819              	.L566:
 9820              		.loc 14 217 62 discriminator 2 view .LVU2245
 9821 00ca 2848     		ldr	r0, .L571+64
 9822 00cc FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9823              	.LVL646:
 9824              		.loc 14 217 35 discriminator 2 view .LVU2246
 9825 00d0 30BB     		cbnz	r0, .L567
 218:Jellybeans.cpp ****     {
 219:Jellybeans.cpp ****         arp->onClockPulse();
 220:Jellybeans.cpp ****     }
 221:Jellybeans.cpp **** }
 9826              		.loc 14 221 1 view .LVU2247
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 407


 9827 00d2 38BD     		pop	{r3, r4, r5, pc}
 9828              	.L559:
 9829              	.LBB7449:
 9830              	.LBB7426:
 203:Jellybeans.cpp ****         if (inc > 0){
 9831              		.loc 14 203 9 is_stmt 1 view .LVU2248
 9832              	.LVL647:
 9833              	.LBB7427:
 9834              	.LBI7427:
  36:../../libdaisy/src/hid/encoder.h **** 
 9835              		.loc 7 36 20 view .LVU2249
 9836              	.LBB7428:
  36:../../libdaisy/src/hid/encoder.h **** 
 9837              		.loc 7 36 40 view .LVU2250
  36:../../libdaisy/src/hid/encoder.h **** 
 9838              		.loc 7 36 47 is_stmt 0 view .LVU2251
 9839 00d4 154D     		ldr	r5, .L571
 9840 00d6 6B6D     		ldr	r3, [r5, #84]
 9841              	.LVL648:
  36:../../libdaisy/src/hid/encoder.h **** 
 9842              		.loc 7 36 47 view .LVU2252
 9843              	.LBE7428:
 9844              	.LBE7427:
 204:Jellybeans.cpp ****             menuItems[menuPos].increment();
 9845              		.loc 14 204 9 is_stmt 1 view .LVU2253
 9846 00d8 002B     		cmp	r3, #0
 9847 00da 0DDC     		bgt	.L570
 206:Jellybeans.cpp ****             menuItems[menuPos].decrement();
 9848              		.loc 14 206 16 view .LVU2254
 9849 00dc 15D0     		beq	.L565
 207:Jellybeans.cpp ****         }
 9850              		.loc 14 207 13 view .LVU2255
 9851              	.LVL649:
 9852              	.LBB7429:
 9853              	.LBI7429:
 9854              		.loc 29 185 7 view .LVU2256
 9855              	.LBB7430:
 9856              	.LBI7430:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9857              		.loc 29 55 7 view .LVU2257
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9858              		.loc 29 55 7 is_stmt 0 view .LVU2258
 9859              	.LBE7430:
 9860              	.LBE7429:
 207:Jellybeans.cpp ****         }
 9861              		.loc 14 207 30 view .LVU2259
 9862 00de 214B     		ldr	r3, .L571+56
 9863              	.LVL650:
 9864              	.LBB7433:
 9865              	.LBB7432:
 9866              	.LBB7431:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9867              		.loc 29 56 41 view .LVU2260
 9868 00e0 1548     		ldr	r0, .L571+12
 9869 00e2 1B68     		ldr	r3, [r3]
 9870 00e4 C3EBC303 		rsb	r3, r3, r3, lsl #3
 9871              	.LBE7431:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 408


 9872              	.LBE7432:
 9873              	.LBE7433:
 207:Jellybeans.cpp ****         }
 9874              		.loc 14 207 41 view .LVU2261
 9875 00e8 00EBC300 		add	r0, r0, r3, lsl #3
 9876 00ec FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9decrementEv
 9877              	.LVL651:
 207:Jellybeans.cpp ****         }
 9878              		.loc 14 207 41 view .LVU2262
 9879 00f0 0BE0     		b	.L565
 9880              	.L569:
 207:Jellybeans.cpp ****         }
 9881              		.loc 14 207 41 view .LVU2263
 9882              	.LBE7426:
 193:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9883              		.loc 14 193 13 is_stmt 1 view .LVU2264
 193:Jellybeans.cpp ****         } else if (menuPos <= 0) {
 9884              		.loc 14 193 21 is_stmt 0 view .LVU2265
 9885 00f2 0923     		movs	r3, #9
 9886 00f4 0B60     		str	r3, [r1]
 9887 00f6 DCE7     		b	.L561
 9888              	.LVL652:
 9889              	.L570:
 9890              	.LBB7443:
 205:Jellybeans.cpp ****         } else if (inc < 0){
 9891              		.loc 14 205 13 is_stmt 1 view .LVU2266
 9892              	.LBB7434:
 9893              	.LBI7434:
 9894              		.loc 29 185 7 view .LVU2267
 9895              	.LBB7435:
 9896              	.LBI7435:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9897              		.loc 29 55 7 view .LVU2268
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 9898              		.loc 29 55 7 is_stmt 0 view .LVU2269
 9899              	.LBE7435:
 9900              	.LBE7434:
 205:Jellybeans.cpp ****         } else if (inc < 0){
 9901              		.loc 14 205 30 view .LVU2270
 9902 00f8 1A4B     		ldr	r3, .L571+56
 9903              	.LVL653:
 9904              	.LBB7438:
 9905              	.LBB7437:
 9906              	.LBB7436:
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array **** 
 9907              		.loc 29 56 41 view .LVU2271
 9908 00fa 0F48     		ldr	r0, .L571+12
 9909 00fc 1B68     		ldr	r3, [r3]
 9910 00fe C3EBC303 		rsb	r3, r3, r3, lsl #3
 9911              	.LBE7436:
 9912              	.LBE7437:
 9913              	.LBE7438:
 205:Jellybeans.cpp ****         } else if (inc < 0){
 9914              		.loc 14 205 41 view .LVU2272
 9915 0102 00EBC300 		add	r0, r0, r3, lsl #3
 9916 0106 FFF7FEFF 		bl	_ZN10jellybeans8MenuItem9incrementEv
 9917              	.LVL654:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 409


 9918              	.L565:
 210:Jellybeans.cpp ****     }
 9919              		.loc 14 210 9 is_stmt 1 view .LVU2273
 9920              	.LBB7439:
 9921              	.LBI7439:
 9922              		.loc 7 39 17 view .LVU2274
 9923              	.LBE7439:
 9924              	.LBE7443:
 9925              	.LBE7449:
 9926              		.loc 7 39 38 view .LVU2275
 9927              	.LBB7450:
 9928              	.LBB7444:
 9929              	.LBB7442:
 9930              	.LBB7440:
 9931              	.LBI7440:
 9932              		.loc 8 70 17 view .LVU2276
 9933              	.LBB7441:
 9934              		.loc 8 70 38 view .LVU2277
 9935              		.loc 8 70 38 is_stmt 0 view .LVU2278
 9936              	.LBE7441:
 9937              	.LBE7440:
 9938              	.LBE7442:
 210:Jellybeans.cpp ****     }
 9939              		.loc 14 210 21 view .LVU2279
 9940 010a 95F84130 		ldrb	r3, [r5, #65]	@ zero_extendqisi2
 9941              	.LBE7444:
 9942              	.LBE7450:
 217:Jellybeans.cpp ****     {
 9943              		.loc 14 217 32 view .LVU2280
 9944 010e 1648     		ldr	r0, .L571+60
 9945              	.LBB7451:
 9946              	.LBB7445:
 210:Jellybeans.cpp ****     }
 9947              		.loc 14 210 21 view .LVU2281
 9948 0110 7F3B     		subs	r3, r3, #127
 9949 0112 18BF     		it	ne
 9950 0114 0123     		movne	r3, #1
 9951 0116 2370     		strb	r3, [r4]
 9952              	.LBE7445:
 9953              	.LBE7451:
 217:Jellybeans.cpp ****     {
 9954              		.loc 14 217 5 is_stmt 1 view .LVU2282
 217:Jellybeans.cpp ****     {
 9955              		.loc 14 217 32 is_stmt 0 view .LVU2283
 9956 0118 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 9957              	.LVL655:
 217:Jellybeans.cpp ****     {
 9958              		.loc 14 217 35 view .LVU2284
 9959 011c 0028     		cmp	r0, #0
 9960 011e D4D0     		beq	.L566
 9961              	.L567:
 219:Jellybeans.cpp ****     }
 9962              		.loc 14 219 9 is_stmt 1 view .LVU2285
 219:Jellybeans.cpp ****     }
 9963              		.loc 14 219 26 is_stmt 0 view .LVU2286
 9964 0120 134B     		ldr	r3, .L571+68
 9965 0122 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 410


 9966              		.loc 14 221 1 view .LVU2287
 9967 0124 BDE83840 		pop	{r3, r4, r5, lr}
 9968              		.cfi_restore 14
 9969              		.cfi_restore 5
 9970              		.cfi_restore 4
 9971              		.cfi_restore 3
 9972              		.cfi_def_cfa_offset 0
 219:Jellybeans.cpp ****     }
 9973              		.loc 14 219 26 view .LVU2288
 9974 0128 FFF7FEBF 		b	_ZN10jellybeans3Arp12onClockPulseEv
 9975              	.LVL656:
 9976              	.L572:
 9977              		.align	2
 9978              	.L571:
 9979 012c 00000000 		.word	patch
 9980 0130 00000000 		.word	.LANCHOR6
 9981 0134 00000000 		.word	.LANCHOR7
 9982 0138 00000000 		.word	.LANCHOR8
 9983 013c 00000000 		.word	.LANCHOR9
 9984 0140 00000000 		.word	.LANCHOR10
 9985 0144 38000000 		.word	.LANCHOR8+56
 9986 0148 00000000 		.word	.LANCHOR11
 9987 014c 00000000 		.word	.LANCHOR12
 9988 0150 70000000 		.word	.LANCHOR8+112
 9989 0154 00000000 		.word	.LANCHOR13
 9990 0158 00000000 		.word	.LANCHOR14
 9991 015c A8000000 		.word	.LANCHOR8+168
 9992 0160 00000000 		.word	.LANCHOR15
 9993 0164 00000000 		.word	.LANCHOR16
 9994 0168 D8000000 		.word	patch+216
 9995 016c DE000000 		.word	patch+222
 9996 0170 00000000 		.word	.LANCHOR0
 9997              		.cfi_endproc
 9998              	.LFE5133:
 10000              		.section	.text._Z13updateOutputsv,"ax",%progbits
 10001              		.align	1
 10002              		.p2align 2,,3
 10003              		.global	_Z13updateOutputsv
 10004              		.syntax unified
 10005              		.thumb
 10006              		.thumb_func
 10007              		.fpu fpv5-d16
 10009              	_Z13updateOutputsv:
 10010              	.LFB5136:
 222:Jellybeans.cpp **** 
 223:Jellybeans.cpp **** // Update Patches' screen
 224:Jellybeans.cpp **** //
 225:Jellybeans.cpp **** // Display on Daisy Patch is 128x64p
 226:Jellybeans.cpp **** // With 7x10 font, this means it's limited to:
 227:Jellybeans.cpp **** //  - 18 chars horizontally (w/2p to spare)
 228:Jellybeans.cpp **** //  - 6 chars vertically (w/4p to spare)
 229:Jellybeans.cpp **** void updateOled() {
 230:Jellybeans.cpp ****     // Clear display
 231:Jellybeans.cpp ****     patch.display.Fill(false);  
 232:Jellybeans.cpp **** 
 233:Jellybeans.cpp ****     // Draw the top bar
 234:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 411


 235:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 236:Jellybeans.cpp **** 
 237:Jellybeans.cpp ****     // Draw the cursor indicator
 238:Jellybeans.cpp ****     drawString(">", 0, 11);
 239:Jellybeans.cpp **** 
 240:Jellybeans.cpp ****     int listSize = 5;
 241:Jellybeans.cpp **** 
 242:Jellybeans.cpp ****     if (debugMode){
 243:Jellybeans.cpp ****         // If in debug mode, reserve the bottom menu item's space for debug data
 244:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 245:Jellybeans.cpp **** 
 246:Jellybeans.cpp ****         listSize--;
 247:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 248:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 249:Jellybeans.cpp ****     }
 250:Jellybeans.cpp **** 
 251:Jellybeans.cpp ****     // Draw each menu item
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 253:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 255:Jellybeans.cpp ****         }    
 256:Jellybeans.cpp ****     }
 257:Jellybeans.cpp **** 
 258:Jellybeans.cpp ****     // Write display buffer to OLED
 259:Jellybeans.cpp ****     patch.display.Update();
 260:Jellybeans.cpp **** }
 261:Jellybeans.cpp **** 
 262:Jellybeans.cpp **** // Updates Patches' output values
 263:Jellybeans.cpp **** void updateOutputs()
 264:Jellybeans.cpp **** {
 10011              		.loc 14 264 1 is_stmt 1 view -0
 10012              		.cfi_startproc
 10013              		@ args = 0, pretend = 0, frame = 0
 10014              		@ frame_needed = 0, uses_anonymous_args = 0
 265:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, arp->getDacValue());
 10015              		.loc 14 265 5 view .LVU2290
 264:Jellybeans.cpp ****     patch.seed.dac.WriteValue(DacHandle::Channel::ONE, arp->getDacValue());
 10016              		.loc 14 264 1 is_stmt 0 view .LVU2291
 10017 0000 10B5     		push	{r4, lr}
 10018              		.cfi_def_cfa_offset 8
 10019              		.cfi_offset 4, -8
 10020              		.cfi_offset 14, -4
 10021              		.loc 14 265 72 view .LVU2292
 10022 0002 0B4C     		ldr	r4, .L575
 10023 0004 2068     		ldr	r0, [r4]
 10024 0006 FFF7FEFF 		bl	_ZN10jellybeans3Arp11getDacValueEv
 10025              	.LVL657:
 10026              		.loc 14 265 30 view .LVU2293
 10027 000a BCEEC00A 		vcvt.u32.f32	s0, s0
 10028 000e 0021     		movs	r1, #0
 10029 0010 0848     		ldr	r0, .L575+4
 10030 0012 10EE103A 		vmov	r3, s0	@ int
 10031 0016 9AB2     		uxth	r2, r3
 10032 0018 FFF7FEFF 		bl	_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
 10033              	.LVL658:
 266:Jellybeans.cpp ****     dsy_gpio_write(&patch.gate_output, arp->getTrig());
 10034              		.loc 14 266 5 is_stmt 1 view .LVU2294
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 412


 10035              		.loc 14 266 52 is_stmt 0 view .LVU2295
 10036 001c 2068     		ldr	r0, [r4]
 10037 001e FFF7FEFF 		bl	_ZN10jellybeans3Arp7getTrigEv
 10038              	.LVL659:
 10039 0022 0146     		mov	r1, r0
 10040              		.loc 14 266 19 view .LVU2296
 10041 0024 0448     		ldr	r0, .L575+8
 267:Jellybeans.cpp **** }
 10042              		.loc 14 267 1 view .LVU2297
 10043 0026 BDE81040 		pop	{r4, lr}
 10044              		.cfi_restore 14
 10045              		.cfi_restore 4
 10046              		.cfi_def_cfa_offset 0
 266:Jellybeans.cpp ****     dsy_gpio_write(&patch.gate_output, arp->getTrig());
 10047              		.loc 14 266 19 view .LVU2298
 10048 002a FFF7FEBF 		b	dsy_gpio_write
 10049              	.LVL660:
 10050              	.L576:
 10051 002e 00BF     		.align	2
 10052              	.L575:
 10053 0030 00000000 		.word	.LANCHOR0
 10054 0034 20000000 		.word	patch+32
 10055 0038 B4950000 		.word	patch+38324
 10056              		.cfi_endproc
 10057              	.LFE5136:
 10059              		.section	.text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii,"ax",%progbits
 10060              		.align	1
 10061              		.p2align 2,,3
 10062              		.global	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10063              		.syntax unified
 10064              		.thumb
 10065              		.thumb_func
 10066              		.fpu fpv5-d16
 10068              	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:
 10069              	.LVL661:
 10070              	.LFB5137:
 268:Jellybeans.cpp **** 
 269:Jellybeans.cpp **** /*
 270:Jellybeans.cpp ****  * Utility functions
 271:Jellybeans.cpp ****  */
 272:Jellybeans.cpp **** 
 273:Jellybeans.cpp **** // Utility to perform a silly little dance where we set the cursor, 
 274:Jellybeans.cpp **** // convert a std::string to char*, and pass it to WriteString()
 275:Jellybeans.cpp **** void drawString(std::string str, int x, int y){
 10071              		.loc 14 275 47 is_stmt 1 view -0
 10072              		.cfi_startproc
 10073              		@ args = 0, pretend = 0, frame = 16
 10074              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 10075              		.loc 14 276 5 view .LVU2300
 10076              	.LBB7493:
 10077              	.LBI7493:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 10078              		.loc 5 171 10 view .LVU2301
 10079              	.LBB7494:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10080              		.loc 5 173 9 view .LVU2302
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 413


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10081              		.loc 5 173 19 is_stmt 0 view .LVU2303
 10082 0000 89B2     		uxth	r1, r1
 10083              	.LVL662:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10084              		.loc 5 173 19 view .LVU2304
 10085 0002 4A4B     		ldr	r3, .L599
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10086              		.loc 5 174 19 view .LVU2305
 10087 0004 92B2     		uxth	r2, r2
 10088              	.LVL663:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10089              		.loc 5 173 19 view .LVU2306
 10090 0006 7F29     		cmp	r1, #127
 10091 0008 28BF     		it	cs
 10092 000a 7F21     		movcs	r1, #127
 10093              	.LVL664:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10094              		.loc 5 174 19 view .LVU2307
 10095 000c 3F2A     		cmp	r2, #63
 10096              	.LBE7494:
 10097              	.LBE7493:
 275:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 10098              		.loc 14 275 47 view .LVU2308
 10099 000e 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10100              		.cfi_def_cfa_offset 36
 10101              		.cfi_offset 4, -36
 10102              		.cfi_offset 5, -32
 10103              		.cfi_offset 6, -28
 10104              		.cfi_offset 7, -24
 10105              		.cfi_offset 8, -20
 10106              		.cfi_offset 9, -16
 10107              		.cfi_offset 10, -12
 10108              		.cfi_offset 11, -8
 10109              		.cfi_offset 14, -4
 10110              	.LBB7498:
 10111              	.LBB7495:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10112              		.loc 5 174 19 view .LVU2309
 10113 0012 28BF     		it	cs
 10114 0014 3F22     		movcs	r2, #63
 10115              	.LVL665:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10116              		.loc 5 174 19 view .LVU2310
 10117              	.LBE7495:
 10118              	.LBE7498:
 10119              	.LBB7499:
 10120              	.LBB7500:
 10121              	.LBB7501:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10122              		.loc 18 187 28 view .LVU2311
 10123 0016 D0F800A0 		ldr	r10, [r0]
 10124              	.LBE7501:
 10125              	.LBE7500:
 10126              	.LBE7499:
 10127              	.LBB7503:
 10128              	.LBB7496:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 414


 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10129              		.loc 5 173 19 view .LVU2312
 10130 001a 4548     		ldr	r0, .L599+4
 10131              	.LVL666:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10132              		.loc 5 173 19 view .LVU2313
 10133              	.LBE7496:
 10134              	.LBE7503:
 275:Jellybeans.cpp ****     patch.display.SetCursor(x, y);
 10135              		.loc 14 275 47 view .LVU2314
 10136 001c 85B0     		sub	sp, sp, #20
 10137              		.cfi_def_cfa_offset 56
 10138 001e 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 10139              	.LBB7504:
 10140              	.LBB7497:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10141              		.loc 5 174 19 view .LVU2315
 10142 0020 A0F8A621 		strh	r2, [r0, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10143              		.loc 5 173 19 view .LVU2316
 10144 0024 A0F8A411 		strh	r1, [r0, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10145              		.loc 5 174 9 is_stmt 1 view .LVU2317
 10146              	.LVL667:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10147              		.loc 5 174 9 is_stmt 0 view .LVU2318
 10148              	.LBE7497:
 10149              	.LBE7504:
 277:Jellybeans.cpp ****     char* cstr = &str[0];
 10150              		.loc 14 277 5 is_stmt 1 view .LVU2319
 10151              	.LBB7505:
 10152              	.LBI7499:
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 415


1020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
 10153              		.loc 18 1034 7 view .LVU2320
 10154              	.LBB7502:
 10155              	.LBI7500:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10156              		.loc 18 186 7 view .LVU2321
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10157              		.loc 18 186 7 is_stmt 0 view .LVU2322
 10158              	.LBE7502:
 10159              	.LBE7505:
 278:Jellybeans.cpp ****     patch.display.WriteString(cstr, font, true);
 10160              		.loc 14 278 5 is_stmt 1 view .LVU2323
 10161              		.loc 14 278 5 is_stmt 0 view .LVU2324
 10162 0028 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 10163              	.LBB7506:
 10164              	.LBB7507:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10165              		.loc 5 443 9 view .LVU2325
 10166 002a 9AF800B0 		ldrb	fp, [r10]	@ zero_extendqisi2
 10167 002e 5B68     		ldr	r3, [r3, #4]
 10168 0030 0292     		str	r2, [sp, #8]
 10169              	.LVL668:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10170              		.loc 5 443 9 view .LVU2326
 10171 0032 0393     		str	r3, [sp, #12]
 10172              	.LVL669:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10173              		.loc 5 443 9 view .LVU2327
 10174              	.LBE7507:
 10175              	.LBI7506:
 440:../../libdaisy/src/hid/disp/display.h ****     {
 10176              		.loc 5 440 10 is_stmt 1 view .LVU2328
 10177              	.LBB7547:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10178              		.loc 5 443 9 view .LVU2329
 10179 0034 BBF1000F 		cmp	fp, #0
 10180 0038 72D0     		beq	.L577
 10181              	.LVL670:
 10182              	.L578:
 10183              	.LBB7508:
 10184              	.LBI7508:
 396:../../libdaisy/src/hid/disp/display.h ****     {
 10185              		.loc 5 396 10 view .LVU2330
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 416


 10186              	.LBB7509:
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 10187              		.loc 5 401 20 is_stmt 0 view .LVU2331
 10188 003a ABF12003 		sub	r3, fp, #32
 401:../../libdaisy/src/hid/disp/display.h ****             return 0;
 10189              		.loc 5 401 9 view .LVU2332
 10190 003e DAB2     		uxtb	r2, r3
 10191 0040 5E2A     		cmp	r2, #94
 10192 0042 70D8     		bhi	.L591
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 10193              		.loc 5 405 23 view .LVU2333
 10194 0044 3A49     		ldr	r1, .L599+4
 10195 0046 B1F8A4E1 		ldrh	lr, [r1, #420]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 10196              		.loc 5 405 33 view .LVU2334
 10197 004a 0EEB0502 		add	r2, lr, r5
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10198              		.loc 5 406 12 view .LVU2335
 10199 004e 802A     		cmp	r2, #128
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 10200              		.loc 5 405 33 view .LVU2336
 10201 0050 0192     		str	r2, [sp, #4]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10202              		.loc 5 406 12 view .LVU2337
 10203 0052 68DC     		bgt	.L591
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10204              		.loc 5 406 27 view .LVU2338
 10205 0054 B1F8A621 		ldrh	r2, [r1, #422]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10206              		.loc 5 406 37 view .LVU2339
 10207 0058 0299     		ldr	r1, [sp, #8]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10208              		.loc 5 406 27 view .LVU2340
 10209 005a 0092     		str	r2, [sp]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10210              		.loc 5 406 37 view .LVU2341
 10211 005c 0A44     		add	r2, r2, r1
 406:../../libdaisy/src/hid/disp/display.h ****         {
 10212              		.loc 5 406 12 view .LVU2342
 10213 005e 402A     		cmp	r2, #64
 10214 0060 61DC     		bgt	.L591
 10215              	.LVL671:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 10216              		.loc 5 413 22 is_stmt 1 view .LVU2343
 10217 0062 0029     		cmp	r1, #0
 10218 0064 45D0     		beq	.L582
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 10219              		.loc 5 415 37 is_stmt 0 view .LVU2344
 10220 0066 029A     		ldr	r2, [sp, #8]
 10221 0068 6FF00047 		mvn	r7, #-2147483648
 10222 006c 0098     		ldr	r0, [sp]
 10223 006e 02FB03F3 		mul	r3, r2, r3
 10224 0072 1F44     		add	r7, r7, r3
 10225 0074 1344     		add	r3, r3, r2
 10226 0076 039A     		ldr	r2, [sp, #12]
 10227 0078 A2F10209 		sub	r9, r2, #2
 10228 007c 02EB4707 		add	r7, r2, r7, lsl #1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 417


 10229 0080 09EB4309 		add	r9, r9, r3, lsl #1
 10230              	.LVL672:
 10231              	.L583:
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 10232              		.loc 5 415 15 view .LVU2345
 10233 0084 37F802CF 		ldrh	ip, [r7, #2]!
 10234              	.LVL673:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10235              		.loc 5 416 26 is_stmt 1 view .LVU2346
 10236 0088 7DB3     		cbz	r5, .L586
 10237              	.LBB7510:
 10238              	.LBB7511:
 10239              	.LBB7512:
 10240              	.LBB7513:
 10241              	.LBB7514:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10242              		.loc 15 246 55 is_stmt 0 view .LVU2347
 10243 008a 00F00703 		and	r3, r0, #7
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10244              		.loc 15 246 49 view .LVU2348
 10245 008e 0126     		movs	r6, #1
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10246              		.loc 15 246 28 view .LVU2349
 10247 0090 C208     		lsrs	r2, r0, #3
 10248              	.LBE7514:
 10249              	.LBE7513:
 10250              	.LBE7512:
 10251              	.LBE7511:
 10252              	.LBE7510:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10253              		.loc 5 416 19 view .LVU2350
 10254 0092 0024     		movs	r4, #0
 10255              	.LBB7533:
 10256              	.LBB7528:
 10257              	.LBB7524:
 10258              	.LBB7519:
 10259              	.LBB7515:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10260              		.loc 15 246 49 view .LVU2351
 10261 0094 9E40     		lsls	r6, r6, r3
 10262 0096 49F2B413 		movw	r3, #37300
 10263 009a 7344     		add	r3, r3, lr
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10264              		.loc 15 246 42 view .LVU2352
 10265 009c 76B2     		sxtb	r6, r6
 10266 009e 03EBC213 		add	r3, r3, r2, lsl #7
 10267 00a2 244A     		ldr	r2, .L599+8
 10268 00a4 6FEA0608 		mvn	r8, r6
 10269 00a8 1344     		add	r3, r3, r2
 10270 00aa 7246     		mov	r2, lr
 10271 00ac 0BE0     		b	.L587
 10272              	.LVL674:
 10273              	.L598:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10274              		.loc 15 246 42 view .LVU2353
 10275              	.LBE7515:
 10276              	.LBE7519:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 418


 10277              	.LBE7524:
 10278              	.LBE7528:
 10279              	.LBE7533:
 10280              	.LBB7534:
 10281              	.LBB7535:
 10282              	.LBB7536:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 10283              		.loc 15 241 9 view .LVU2354
 10284 00ae 7F2A     		cmp	r2, #127
 10285 00b0 04D8     		bhi	.L585
 10286 00b2 3F28     		cmp	r0, #63
 10287 00b4 02D8     		bhi	.L585
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10288              		.loc 15 244 42 view .LVU2355
 10289 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10290 00b8 3143     		orrs	r1, r1, r6
 10291 00ba 1970     		strb	r1, [r3]
 10292              	.L585:
 10293              	.LVL675:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10294              		.loc 15 244 42 view .LVU2356
 10295              	.LBE7536:
 10296              	.LBE7535:
 10297              	.LBE7534:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10298              		.loc 5 416 13 is_stmt 1 view .LVU2357
 10299 00bc 0134     		adds	r4, r4, #1
 10300              	.LVL676:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10301              		.loc 5 416 26 view .LVU2358
 10302 00be 0133     		adds	r3, r3, #1
 10303 00c0 0132     		adds	r2, r2, #1
 10304 00c2 A542     		cmp	r5, r4
 10305 00c4 11D0     		beq	.L586
 10306              	.LVL677:
 10307              	.L587:
 10308              	.LBB7538:
 10309              	.LBI7534:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 10310              		.loc 4 41 10 view .LVU2359
 10311              	.LBB7537:
 10312              	.LBI7535:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10313              		.loc 15 239 10 view .LVU2360
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10314              		.loc 15 239 10 is_stmt 0 view .LVU2361
 10315              	.LBE7537:
 10316              	.LBE7538:
 10317              	.LBB7539:
 10318              	.LBI7510:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 10319              		.loc 4 41 10 is_stmt 1 view .LVU2362
 10320              	.LBB7529:
 10321              	.LBI7511:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10322              		.loc 15 239 10 view .LVU2363
 10323              	.LBE7529:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 419


 10324              	.LBE7539:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 10325              		.loc 5 418 23 is_stmt 0 view .LVU2364
 10326 00c6 0CFA04F1 		lsl	r1, ip, r4
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 10327              		.loc 5 418 17 view .LVU2365
 10328 00ca 0904     		lsls	r1, r1, #16
 10329 00cc EFD4     		bmi	.L598
 10330              	.LVL678:
 10331              	.LBB7540:
 10332              	.LBB7530:
 10333              	.LBB7525:
 10334              	.LBB7520:
 10335              	.LBI7513:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10336              		.loc 15 239 10 is_stmt 1 view .LVU2366
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10337              		.loc 15 239 10 is_stmt 0 view .LVU2367
 10338              	.LBE7520:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 10339              		.loc 15 241 9 view .LVU2368
 10340 00ce 7F2A     		cmp	r2, #127
 10341 00d0 F4D8     		bhi	.L585
 10342 00d2 3F28     		cmp	r0, #63
 10343 00d4 F2D8     		bhi	.L585
 10344              	.LBB7521:
 10345              	.LBB7516:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10346              		.loc 15 246 42 view .LVU2369
 10347 00d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10348              	.LBE7516:
 10349              	.LBE7521:
 10350              	.LBE7525:
 10351              	.LBE7530:
 10352              	.LBE7540:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10353              		.loc 5 416 13 view .LVU2370
 10354 00d8 0134     		adds	r4, r4, #1
 10355              	.LVL679:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10356              		.loc 5 416 26 view .LVU2371
 10357 00da 0133     		adds	r3, r3, #1
 10358 00dc 0132     		adds	r2, r2, #1
 10359              	.LBB7541:
 10360              	.LBB7531:
 10361              	.LBB7526:
 10362              	.LBB7522:
 10363              	.LBB7517:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10364              		.loc 15 246 42 view .LVU2372
 10365 00de 08EA0101 		and	r1, r8, r1
 10366              	.LBE7517:
 10367              	.LBE7522:
 10368              	.LBE7526:
 10369              	.LBE7531:
 10370              	.LBE7541:
 416:../../libdaisy/src/hid/disp/display.h ****             {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 420


 10371              		.loc 5 416 26 view .LVU2373
 10372 00e2 A542     		cmp	r5, r4
 10373              	.LBB7542:
 10374              	.LBB7532:
 10375              	.LBB7527:
 10376              	.LBB7523:
 10377              	.LBB7518:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10378              		.loc 15 246 42 view .LVU2374
 10379 00e4 03F8011C 		strb	r1, [r3, #-1]
 10380              	.LVL680:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 10381              		.loc 15 246 42 view .LVU2375
 10382              	.LBE7518:
 10383              	.LBE7523:
 10384              	.LBE7527:
 10385              	.LBE7532:
 10386              	.LBE7542:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10387              		.loc 5 416 13 is_stmt 1 view .LVU2376
 416:../../libdaisy/src/hid/disp/display.h ****             {
 10388              		.loc 5 416 26 view .LVU2377
 10389 00e8 EDD1     		bne	.L587
 10390              	.LVL681:
 10391              	.L586:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 10392              		.loc 5 413 9 view .LVU2378
 413:../../libdaisy/src/hid/disp/display.h ****         {
 10393              		.loc 5 413 22 view .LVU2379
 10394 00ea B945     		cmp	r9, r7
 10395 00ec 00F10100 		add	r0, r0, #1
 10396 00f0 C8D1     		bne	.L583
 10397              	.LVL682:
 10398              	.L582:
 10399              	.LBB7543:
 10400              	.LBI7543:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 10401              		.loc 5 171 10 view .LVU2380
 10402              	.LBB7544:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10403              		.loc 5 173 9 view .LVU2381
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10404              		.loc 5 174 19 is_stmt 0 view .LVU2382
 10405 00f2 009A     		ldr	r2, [sp]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10406              		.loc 5 173 19 view .LVU2383
 10407 00f4 BDF80430 		ldrh	r3, [sp, #4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10408              		.loc 5 174 19 view .LVU2384
 10409 00f8 3F2A     		cmp	r2, #63
 10410 00fa 0D49     		ldr	r1, .L599+4
 10411 00fc 28BF     		it	cs
 10412 00fe 3F22     		movcs	r2, #63
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10413              		.loc 5 173 19 view .LVU2385
 10414 0100 7F2B     		cmp	r3, #127
 10415 0102 28BF     		it	cs
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 421


 10416 0104 7F23     		movcs	r3, #127
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10417              		.loc 5 174 19 view .LVU2386
 10418 0106 A1F8A621 		strh	r2, [r1, #422]	@ movhi
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 10419              		.loc 5 173 19 view .LVU2387
 10420 010a A1F8A431 		strh	r3, [r1, #420]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10421              		.loc 5 174 9 is_stmt 1 view .LVU2388
 10422              	.LVL683:
 10423              	.L579:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 10424              		.loc 5 174 9 is_stmt 0 view .LVU2389
 10425              	.LBE7544:
 10426              	.LBE7543:
 10427              	.LBE7509:
 10428              	.LBE7508:
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 10429              		.loc 5 445 13 view .LVU2390
 10430 010e 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 10431 0112 5B45     		cmp	r3, fp
 10432 0114 04D1     		bne	.L577
 10433              	.LVL684:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10434              		.loc 5 443 9 is_stmt 1 view .LVU2391
 10435 0116 1AF801BF 		ldrb	fp, [r10, #1]!	@ zero_extendqisi2
 10436              	.LVL685:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10437              		.loc 5 443 9 is_stmt 0 view .LVU2392
 10438 011a BBF1000F 		cmp	fp, #0
 10439 011e 8CD1     		bne	.L578
 10440              	.L577:
 443:../../libdaisy/src/hid/disp/display.h ****         {
 10441              		.loc 5 443 9 view .LVU2393
 10442              	.LBE7547:
 10443              	.LBE7506:
 279:Jellybeans.cpp **** }...
 10444              		.loc 14 279 1 view .LVU2394
 10445 0120 05B0     		add	sp, sp, #20
 10446              		.cfi_remember_state
 10447              		.cfi_def_cfa_offset 36
 10448              		@ sp needed
 10449 0122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10450              	.LVL686:
 10451              	.L591:
 10452              		.cfi_restore_state
 10453              	.LBB7549:
 10454              	.LBB7548:
 10455              	.LBB7546:
 10456              	.LBB7545:
 402:../../libdaisy/src/hid/disp/display.h **** 
 10457              		.loc 5 402 20 view .LVU2395
 10458 0126 4FF0000B 		mov	fp, #0
 10459              	.LVL687:
 402:../../libdaisy/src/hid/disp/display.h **** 
 10460              		.loc 5 402 20 view .LVU2396
 10461 012a F0E7     		b	.L579
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 422


 10462              	.L600:
 10463              		.align	2
 10464              	.L599:
 10465 012c 00000000 		.word	.LANCHOR17
 10466 0130 00900000 		.word	patch+36864
 10467 0134 00000000 		.word	patch
 10468              	.LBE7545:
 10469              	.LBE7546:
 10470              	.LBE7548:
 10471              	.LBE7549:
 10472              		.cfi_endproc
 10473              	.LFE5137:
 10475              		.section	.text._Z10updateOledv,"ax",%progbits
 10476              		.align	1
 10477              		.p2align 2,,3
 10478              		.global	_Z10updateOledv
 10479              		.syntax unified
 10480              		.thumb
 10481              		.thumb_func
 10482              		.fpu fpv5-d16
 10484              	_Z10updateOledv:
 10485              	.LFB5135:
 229:Jellybeans.cpp **** void updateOled() {
 10486              		.loc 14 229 19 is_stmt 1 view -0
 10487              		.cfi_startproc
 10488              		@ args = 0, pretend = 0, frame = 32
 10489              		@ frame_needed = 0, uses_anonymous_args = 0
 231:Jellybeans.cpp ****     patch.display.Fill(false);  
 10490              		.loc 14 231 5 view .LVU2398
 10491              	.LVL688:
 10492              	.LBB7849:
 10493              	.LBI7849:
  33:../../libdaisy/src/hid/disp/oled_display.h **** 
 10494              		.loc 4 33 10 view .LVU2399
 10495              	.LBB7850:
 10496              	.LBI7850:
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10497              		.loc 15 249 10 view .LVU2400
 10498              	.LBB7851:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 10499              		.loc 15 251 29 view .LVU2401
 10500              	.LBE7851:
 10501              	.LBE7850:
 10502              	.LBE7849:
 229:Jellybeans.cpp **** void updateOled() {
 10503              		.loc 14 229 19 is_stmt 0 view .LVU2402
 10504 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 10505              		.cfi_def_cfa_offset 20
 10506              		.cfi_offset 4, -20
 10507              		.cfi_offset 5, -16
 10508              		.cfi_offset 6, -12
 10509              		.cfi_offset 7, -8
 10510              		.cfi_offset 14, -4
 234:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 10511              		.loc 14 234 30 view .LVU2403
 10512 0002 8B4C     		ldr	r4, .L648
 229:Jellybeans.cpp **** void updateOled() {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 423


 10513              		.loc 14 229 19 view .LVU2404
 10514 0004 89B0     		sub	sp, sp, #36
 10515              		.cfi_def_cfa_offset 56
 10516              	.LBB7856:
 10517              	.LBB7854:
 10518              	.LBB7852:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 10519              		.loc 15 253 24 view .LVU2405
 10520 0006 4FF48062 		mov	r2, #1024
 10521 000a 0021     		movs	r1, #0
 10522 000c 8948     		ldr	r0, .L648+4
 10523              	.LBE7852:
 10524              	.LBE7854:
 10525              	.LBE7856:
 10526              	.LBB7857:
 10527              	.LBB7858:
 10528              	.LBB7859:
 10529              	.LBB7860:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10530              		.loc 18 231 2 view .LVU2406
 10531 000e 04AD     		add	r5, sp, #16
 10532              	.LBE7860:
 10533              	.LBE7859:
 10534              	.LBE7858:
 10535              	.LBE7857:
 10536              	.LBB7878:
 10537              	.LBB7855:
 10538              	.LBB7853:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 10539              		.loc 15 253 24 view .LVU2407
 10540 0010 FFF7FEFF 		bl	memset
 10541              	.LVL689:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 10542              		.loc 15 253 24 view .LVU2408
 10543              	.LBE7853:
 10544              	.LBE7855:
 10545              	.LBE7878:
 234:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 10546              		.loc 14 234 5 is_stmt 1 view .LVU2409
 234:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 10547              		.loc 14 234 30 is_stmt 0 view .LVU2410
 10548 0014 2168     		ldr	r1, [r4]
 10549 0016 02A8     		add	r0, sp, #8
 10550 0018 FFF7FEFF 		bl	_ZN10jellybeans3Arp8toStringB5cxx11Ev
 10551              	.LVL690:
 234:Jellybeans.cpp ****     drawString(arp->toString(), 0, 0);
 10552              		.loc 14 234 15 view .LVU2411
 10553 001c 0022     		movs	r2, #0
 10554 001e 02A8     		add	r0, sp, #8
 10555 0020 1146     		mov	r1, r2
 10556 0022 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10557              	.LVL691:
 10558              	.LBB7879:
 10559              	.LBI7857:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10560              		.loc 18 657 7 is_stmt 1 view .LVU2412
 10561              	.LBB7877:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 424


 10562              	.LBB7873:
 10563              	.LBI7859:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10564              		.loc 18 229 7 view .LVU2413
 10565              	.LBB7872:
 10566              	.LBB7861:
 10567              	.LBI7861:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10568              		.loc 18 221 7 view .LVU2414
 10569              	.LBB7862:
 10570              	.LBI7862:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10571              		.loc 18 186 7 view .LVU2415
 10572              	.LBB7863:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10573              		.loc 18 187 28 is_stmt 0 view .LVU2416
 10574 0026 0298     		ldr	r0, [sp, #8]
 10575              	.LVL692:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10576              		.loc 18 187 28 view .LVU2417
 10577              	.LBE7863:
 10578              	.LBE7862:
 10579              	.LBB7864:
 10580              	.LBI7864:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10581              		.loc 18 200 7 is_stmt 1 view .LVU2418
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10582              		.loc 18 200 7 is_stmt 0 view .LVU2419
 10583              	.LBE7864:
 10584              	.LBE7861:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10585              		.loc 18 231 2 view .LVU2420
 10586 0028 A842     		cmp	r0, r5
 10587 002a 03D0     		beq	.L602
 10588              	.LVL693:
 10589              	.LBB7865:
 10590              	.LBI7865:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10591              		.loc 18 236 7 is_stmt 1 view .LVU2421
 10592              	.LBB7866:
 10593              	.LBB7867:
 10594              	.LBI7867:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10595              		.loc 26 491 7 view .LVU2422
 10596              	.LBB7868:
 10597              	.LBI7868:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10598              		.loc 20 120 7 view .LVU2423
 10599              	.LBE7868:
 10600              	.LBE7867:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10601              		.loc 18 237 34 is_stmt 0 view .LVU2424
 10602 002c 0499     		ldr	r1, [sp, #16]
 10603              	.LBB7871:
 10604              	.LBB7870:
 10605              	.LBB7869:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 425


 10606              		.loc 20 133 19 view .LVU2425
 10607 002e 0131     		adds	r1, r1, #1
 10608              	.LVL694:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10609              		.loc 20 133 19 view .LVU2426
 10610 0030 FFF7FEFF 		bl	_ZdlPvj
 10611              	.LVL695:
 10612              	.L602:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10613              		.loc 20 133 19 view .LVU2427
 10614              	.LBE7869:
 10615              	.LBE7870:
 10616              	.LBE7871:
 10617              	.LBE7866:
 10618              	.LBE7865:
 10619              	.LBE7872:
 10620              	.LBE7873:
 10621              	.LBB7874:
 10622              	.LBI7874:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10623              		.loc 18 150 14 is_stmt 1 view .LVU2428
 10624              	.LBB7875:
 10625              	.LBI7875:
 10626              		.loc 19 162 7 view .LVU2429
 10627              	.LBB7876:
 10628              	.LBI7876:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10629              		.loc 20 89 7 view .LVU2430
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10630              		.loc 20 89 7 is_stmt 0 view .LVU2431
 10631              	.LBE7876:
 10632              	.LBE7875:
 10633              	.LBE7874:
 10634              	.LBE7877:
 10635              	.LBE7879:
 235:Jellybeans.cpp ****     patch.display.DrawLine(0, 11, 128, 11, true);
 10636              		.loc 14 235 5 is_stmt 1 view .LVU2432
 10637              	.LBB7880:
 10638              	.LBI7880:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 10639              		.loc 5 221 10 view .LVU2433
 10640              	.LBB7881:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10641              		.loc 5 239 26 view .LVU2434
 10642 0034 804B     		ldr	r3, .L648+8
 10643 0036 03F18001 		add	r1, r3, #128
 10644              	.LVL696:
 10645              	.L603:
 10646              	.LBB7882:
 10647              	.LBI7882:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 10648              		.loc 4 41 10 view .LVU2435
 10649              	.LBB7883:
 10650              	.LBI7883:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 10651              		.loc 15 239 10 view .LVU2436
 10652              	.LBB7884:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 426


 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10653              		.loc 15 244 42 is_stmt 0 view .LVU2437
 10654 003a 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 10655              	.LVL697:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10656              		.loc 15 244 42 view .LVU2438
 10657 003e 42F00802 		orr	r2, r2, #8
 10658              	.LBE7884:
 10659              	.LBE7883:
 10660              	.LBE7882:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10661              		.loc 5 239 26 view .LVU2439
 10662 0042 9942     		cmp	r1, r3
 10663              	.LBB7887:
 10664              	.LBB7886:
 10665              	.LBB7885:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10666              		.loc 15 244 42 view .LVU2440
 10667 0044 1A70     		strb	r2, [r3]
 10668              	.LVL698:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 10669              		.loc 15 244 42 view .LVU2441
 10670              	.LBE7885:
 10671              	.LBE7886:
 10672              	.LBE7887:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10673              		.loc 5 239 26 is_stmt 1 view .LVU2442
 10674 0046 F8D1     		bne	.L603
 10675              	.LVL699:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 10676              		.loc 5 239 26 is_stmt 0 view .LVU2443
 10677              	.LBE7881:
 10678              	.LBE7880:
 238:Jellybeans.cpp ****     drawString(">", 0, 11);
 10679              		.loc 14 238 5 is_stmt 1 view .LVU2444
 10680              	.LBB7888:
 10681              	.LBI7888:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10682              		.loc 19 144 7 view .LVU2445
 10683              	.LBB7889:
 10684              	.LBI7889:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10685              		.loc 20 79 7 view .LVU2446
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10686              		.loc 20 79 7 is_stmt 0 view .LVU2447
 10687              	.LBE7889:
 10688              	.LBE7888:
 10689              	.LBB7890:
 10690              	.LBI7890:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 10691              		.loc 18 525 7 is_stmt 1 view .LVU2448
 10692              	.LBB7891:
 10693              	.LBB7892:
 10694              	.LBI7892:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10695              		.loc 18 190 7 view .LVU2449
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 427


 10696              		.loc 18 190 7 is_stmt 0 view .LVU2450
 10697              	.LBE7892:
 10698              	.LBB7893:
 10699              	.LBI7893:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10700              		.loc 18 156 2 is_stmt 1 view .LVU2451
 10701              	.LBB7894:
 10702              	.LBB7895:
 10703              	.LBB7896:
 10704              	.LBI7896:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10705              		.loc 19 147 7 view .LVU2452
 10706              	.LBB7897:
 10707              	.LBI7897:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10708              		.loc 20 82 7 view .LVU2453
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10709              		.loc 20 82 7 is_stmt 0 view .LVU2454
 10710              	.LBE7897:
 10711              	.LBE7896:
 10712              	.LBE7895:
 10713              	.LBE7894:
 10714              	.LBE7893:
 10715              	.LBB7898:
 10716              	.LBB7899:
 10717              	.LBB7900:
 10718              	.LBB7901:
 10719              	.LBB7902:
 10720              	.LBB7903:
 10721              	.LBB7904:
 10722              	.LBB7905:
 10723              	.LBB7906:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10724              		.loc 18 183 26 view .LVU2455
 10725 0048 0122     		movs	r2, #1
 10726              	.LBE7906:
 10727              	.LBE7905:
 10728              	.LBE7904:
 10729              	.LBB7909:
 10730              	.LBB7910:
 10731              	.LBB7911:
 10732              	.LBB7912:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10733              		.loc 21 322 14 view .LVU2456
 10734 004a 3E23     		movs	r3, #62
 10735              	.LBE7912:
 10736              	.LBE7911:
 10737              	.LBE7910:
 10738              	.LBE7909:
 10739              	.LBE7903:
 10740              	.LBE7902:
 10741              	.LBE7901:
 10742              	.LBE7900:
 10743              	.LBE7899:
 10744              	.LBE7898:
 10745              	.LBE7891:
 10746              	.LBE7890:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 428


 238:Jellybeans.cpp ****     drawString(">", 0, 11);
 10747              		.loc 14 238 15 view .LVU2457
 10748 004c 02A8     		add	r0, sp, #8
 10749              	.LVL700:
 238:Jellybeans.cpp ****     drawString(">", 0, 11);
 10750              		.loc 14 238 15 view .LVU2458
 10751 004e 0021     		movs	r1, #0
 10752              	.LBB7925:
 10753              	.LBB7924:
 10754              	.LBB7923:
 10755              	.LBB7922:
 10756              	.LBB7921:
 10757              	.LBB7920:
 10758              	.LBB7919:
 10759              	.LBB7918:
 10760              	.LBB7916:
 10761              	.LBB7915:
 10762              	.LBB7914:
 10763              	.LBB7913:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10764              		.loc 21 322 14 view .LVU2459
 10765 0050 ADF81030 		strh	r3, [sp, #16]	@ movhi
 10766              	.LVL701:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 10767              		.loc 21 322 14 view .LVU2460
 10768              	.LBE7913:
 10769              	.LBE7914:
 10770              	.LBE7915:
 10771              	.LBE7916:
 10772              	.LBB7917:
 10773              	.LBB7908:
 10774              	.LBB7907:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10775              		.loc 18 183 26 view .LVU2461
 10776 0054 CDE90252 		strd	r5, r2, [sp, #8]
 10777              	.LBE7907:
 10778              	.LBE7908:
 10779              	.LBE7917:
 10780              	.LBE7918:
 10781              	.LBE7919:
 10782              	.LBE7920:
 10783              	.LBE7921:
 10784              	.LBE7922:
 10785              	.LBE7923:
 10786              	.LBE7924:
 10787              	.LBE7925:
 238:Jellybeans.cpp ****     drawString(">", 0, 11);
 10788              		.loc 14 238 15 view .LVU2462
 10789 0058 0B22     		movs	r2, #11
 10790 005a FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 10791              	.LVL702:
 10792              	.LBB7926:
 10793              	.LBI7926:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10794              		.loc 18 657 7 is_stmt 1 view .LVU2463
 10795              	.LBB7927:
 10796              	.LBB7928:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 429


 10797              	.LBI7928:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10798              		.loc 18 229 7 view .LVU2464
 10799              	.LBB7929:
 10800              	.LBB7930:
 10801              	.LBI7930:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10802              		.loc 18 221 7 view .LVU2465
 10803              	.LBB7931:
 10804              	.LBI7931:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10805              		.loc 18 186 7 view .LVU2466
 10806              	.LBB7932:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10807              		.loc 18 187 28 is_stmt 0 view .LVU2467
 10808 005e 0298     		ldr	r0, [sp, #8]
 10809              	.LVL703:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10810              		.loc 18 187 28 view .LVU2468
 10811              	.LBE7932:
 10812              	.LBE7931:
 10813              	.LBB7933:
 10814              	.LBI7933:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10815              		.loc 18 200 7 is_stmt 1 view .LVU2469
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10816              		.loc 18 200 7 is_stmt 0 view .LVU2470
 10817              	.LBE7933:
 10818              	.LBE7930:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10819              		.loc 18 231 2 view .LVU2471
 10820 0060 A842     		cmp	r0, r5
 10821 0062 03D0     		beq	.L604
 10822              	.LVL704:
 10823              	.LBB7934:
 10824              	.LBI7934:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10825              		.loc 18 236 7 is_stmt 1 view .LVU2472
 10826              	.LBB7935:
 10827              	.LBB7936:
 10828              	.LBI7936:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10829              		.loc 26 491 7 view .LVU2473
 10830              	.LBB7937:
 10831              	.LBI7937:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10832              		.loc 20 120 7 view .LVU2474
 10833              	.LBE7937:
 10834              	.LBE7936:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10835              		.loc 18 237 34 is_stmt 0 view .LVU2475
 10836 0064 0499     		ldr	r1, [sp, #16]
 10837              	.LBB7940:
 10838              	.LBB7939:
 10839              	.LBB7938:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10840              		.loc 20 133 19 view .LVU2476
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 430


 10841 0066 0131     		adds	r1, r1, #1
 10842              	.LVL705:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10843              		.loc 20 133 19 view .LVU2477
 10844 0068 FFF7FEFF 		bl	_ZdlPvj
 10845              	.LVL706:
 10846              	.L604:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10847              		.loc 20 133 19 view .LVU2478
 10848              	.LBE7938:
 10849              	.LBE7939:
 10850              	.LBE7940:
 10851              	.LBE7935:
 10852              	.LBE7934:
 10853              	.LBE7929:
 10854              	.LBE7928:
 10855              	.LBB7941:
 10856              	.LBI7941:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10857              		.loc 18 150 14 is_stmt 1 view .LVU2479
 10858              	.LBB7942:
 10859              	.LBI7942:
 10860              		.loc 19 162 7 view .LVU2480
 10861              	.LBB7943:
 10862              	.LBI7943:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10863              		.loc 20 89 7 view .LVU2481
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10864              		.loc 20 89 7 is_stmt 0 view .LVU2482
 10865              	.LBE7943:
 10866              	.LBE7942:
 10867              	.LBE7941:
 10868              	.LBE7927:
 10869              	.LBE7926:
 10870              	.LBB7944:
 10871              	.LBI7944:
 10872              		.loc 19 162 7 is_stmt 1 view .LVU2483
 10873              	.LBB7945:
 10874              	.LBI7945:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10875              		.loc 20 89 7 view .LVU2484
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10876              		.loc 20 89 7 is_stmt 0 view .LVU2485
 10877              	.LBE7945:
 10878              	.LBE7944:
 240:Jellybeans.cpp ****     int listSize = 5;
 10879              		.loc 14 240 5 is_stmt 1 view .LVU2486
 242:Jellybeans.cpp ****     if (debugMode){
 10880              		.loc 14 242 5 view .LVU2487
 244:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10881              		.loc 14 244 9 view .LVU2488
 244:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10882              		.loc 14 244 49 is_stmt 0 view .LVU2489
 10883 006c 2068     		ldr	r0, [r4]
 10884 006e FFF7FEFF 		bl	_ZN10jellybeans3Arp8getChordEv
 10885              	.LVL707:
 10886 0072 0146     		mov	r1, r0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 431


 10887 0074 02A8     		add	r0, sp, #8
 10888              	.LVL708:
 10889              	.LBB7946:
 10890              	.LBB7947:
 10891              	.LBB7948:
 10892              	.LBB7949:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10893              		.loc 18 187 28 view .LVU2490
 10894 0076 714C     		ldr	r4, .L648+12
 10895              	.LBE7949:
 10896              	.LBE7948:
 10897              	.LBE7947:
 10898              	.LBE7946:
 244:Jellybeans.cpp ****         debugString = arp->getChord()->toString();
 10899              		.loc 14 244 49 view .LVU2491
 10900 0078 FFF7FEFF 		bl	_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
 10901              	.LVL709:
 10902              	.LBB8043:
 10903              	.LBI7946:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 10904              		.loc 18 703 7 is_stmt 1 view .LVU2492
 10905              	.LBB7954:
 10906              	.LBI7947:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10907              		.loc 18 221 7 view .LVU2493
 10908              	.LBB7951:
 10909              	.LBI7948:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10910              		.loc 18 186 7 view .LVU2494
 10911              	.LBE7951:
 10912              	.LBE7954:
 10913              	.LBB7955:
 10914              	.LBB7956:
 10915              	.LBB7957:
 10916              	.LBB7958:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10917              		.loc 18 187 28 is_stmt 0 view .LVU2495
 10918 007c 029B     		ldr	r3, [sp, #8]
 10919              	.LBE7958:
 10920              	.LBE7957:
 10921              	.LBE7956:
 10922              	.LBE7955:
 10923              	.LBB8027:
 10924              	.LBB7952:
 10925              	.LBB7950:
 10926 007e 2068     		ldr	r0, [r4]
 10927              	.LVL710:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10928              		.loc 18 187 28 view .LVU2496
 10929              	.LBE7950:
 10930              	.LBE7952:
 10931              	.LBB7953:
 10932              	.LBI7953:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10933              		.loc 18 200 7 is_stmt 1 view .LVU2497
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10934              		.loc 18 200 7 is_stmt 0 view .LVU2498
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 432


 10935              	.LBE7953:
 10936              	.LBE8027:
 10937              	.LBB8028:
 10938              	.LBB7961:
 10939              	.LBI7956:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10940              		.loc 18 221 7 is_stmt 1 view .LVU2499
 10941              	.LBB7959:
 10942              	.LBI7957:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10943              		.loc 18 186 7 view .LVU2500
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10944              		.loc 18 186 7 is_stmt 0 view .LVU2501
 10945              	.LBE7959:
 10946              	.LBB7960:
 10947              	.LBI7960:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10948              		.loc 18 200 7 is_stmt 1 view .LVU2502
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10949              		.loc 18 200 7 is_stmt 0 view .LVU2503
 10950              	.LBE7960:
 10951              	.LBE7961:
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 10952              		.loc 18 718 2 view .LVU2504
 10953 0080 AB42     		cmp	r3, r5
 10954 0082 00F0BC80 		beq	.L641
 10955              	.LVL711:
 10956              	.LBB7962:
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 10957              		.loc 18 732 6 view .LVU2505
 10958 0086 04F10802 		add	r2, r4, #8
 10959 008a 9042     		cmp	r0, r2
 10960 008c 63D0     		beq	.L642
 10961              	.LVL712:
 10962              	.LBB7963:
 10963              	.LBB7964:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10964              		.loc 18 211 31 view .LVU2506
 10965 008e 049A     		ldr	r2, [sp, #16]
 10966              	.LBE7964:
 10967              	.LBE7963:
 10968              	.LBB7967:
 10969              	.LBB7968:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10970              		.loc 18 179 26 view .LVU2507
 10971 0090 2360     		str	r3, [r4]
 10972              	.LBE7968:
 10973              	.LBE7967:
 10974              	.LBB7969:
 10975              	.LBB7970:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10976              		.loc 18 183 26 view .LVU2508
 10977 0092 039B     		ldr	r3, [sp, #12]
 10978 0094 6360     		str	r3, [r4, #4]
 10979              	.LBE7970:
 10980              	.LBE7969:
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 433


 10981              		.loc 18 738 18 view .LVU2509
 10982 0096 A368     		ldr	r3, [r4, #8]
 10983              	.LVL713:
 10984              	.LBB7972:
 10985              	.LBI7967:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10986              		.loc 18 178 7 is_stmt 1 view .LVU2510
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 10987              		.loc 18 178 7 is_stmt 0 view .LVU2511
 10988              	.LBE7972:
 10989              	.LBB7973:
 10990              	.LBI7973:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10991              		.loc 18 907 7 is_stmt 1 view .LVU2512
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 10992              		.loc 18 907 7 is_stmt 0 view .LVU2513
 10993              	.LBE7973:
 10994              	.LBB7974:
 10995              	.LBI7969:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10996              		.loc 18 182 7 is_stmt 1 view .LVU2514
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 10997              		.loc 18 182 7 is_stmt 0 view .LVU2515
 10998              	.LBE7974:
 10999              	.LBB7975:
 11000              	.LBI7963:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11001              		.loc 18 210 7 is_stmt 1 view .LVU2516
 11002              	.LBB7965:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11003              		.loc 18 211 31 is_stmt 0 view .LVU2517
 11004 0098 A260     		str	r2, [r4, #8]
 11005              	.LVL714:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11006              		.loc 18 211 31 view .LVU2518
 11007              	.LBE7965:
 11008              	.LBE7975:
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 11009              		.loc 18 747 6 view .LVU2519
 11010 009a 0028     		cmp	r0, #0
 11011 009c 60D0     		beq	.L610
 11012              	.LVL715:
 11013              	.LBB7976:
 11014              	.LBI7976:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11015              		.loc 18 178 7 is_stmt 1 view .LVU2520
 11016              	.LBB7977:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11017              		.loc 18 179 26 is_stmt 0 view .LVU2521
 11018 009e 0290     		str	r0, [sp, #8]
 11019              	.LVL716:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11020              		.loc 18 179 26 view .LVU2522
 11021              	.LBE7977:
 11022              	.LBE7976:
 11023              	.LBB7978:
 11024              	.LBI7978:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 434


 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11025              		.loc 18 210 7 is_stmt 1 view .LVU2523
 11026              	.LBB7979:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11027              		.loc 18 211 31 is_stmt 0 view .LVU2524
 11028 00a0 0493     		str	r3, [sp, #16]
 11029              	.LVL717:
 11030              	.L608:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11031              		.loc 18 211 31 view .LVU2525
 11032              	.LBE7979:
 11033              	.LBE7978:
 11034              	.LBE7962:
 11035              	.LBE8028:
 11036              	.LBB8029:
 11037              	.LBI8029:
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 11038              		.loc 18 994 7 is_stmt 1 view .LVU2526
 11039              	.LBB8030:
 11040              	.LBI8030:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11041              		.loc 18 214 7 view .LVU2527
 11042              	.LBB8031:
 11043              	.LBI8031:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11044              		.loc 18 182 7 view .LVU2528
 11045              	.LBB8032:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11046              		.loc 18 183 26 is_stmt 0 view .LVU2529
 11047 00a2 0023     		movs	r3, #0
 11048 00a4 0393     		str	r3, [sp, #12]
 11049              	.LVL718:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11050              		.loc 18 183 26 view .LVU2530
 11051              	.LBE8032:
 11052              	.LBE8031:
 11053              	.LBB8033:
 11054              	.LBI8033:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11055              		.loc 18 186 7 is_stmt 1 view .LVU2531
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11056              		.loc 18 186 7 is_stmt 0 view .LVU2532
 11057              	.LBE8033:
 11058              	.LBB8035:
 11059              	.LBI8035:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11060              		.loc 21 321 7 is_stmt 1 view .LVU2533
 11061              	.LBB8036:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11062              		.loc 21 322 9 view .LVU2534
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11063              		.loc 21 322 14 is_stmt 0 view .LVU2535
 11064 00a6 0370     		strb	r3, [r0]
 11065              	.LVL719:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11066              		.loc 21 322 14 view .LVU2536
 11067              	.LBE8036:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 435


 11068              	.LBE8035:
 11069              	.LBE8030:
 11070              	.LBE8029:
 11071              	.LBE8043:
 11072              	.LBB8044:
 11073              	.LBI8044:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11074              		.loc 18 657 7 is_stmt 1 view .LVU2537
 11075              	.LBB8045:
 11076              	.LBB8046:
 11077              	.LBI8046:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11078              		.loc 18 229 7 view .LVU2538
 11079              	.LBB8047:
 11080              	.LBB8048:
 11081              	.LBI8048:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11082              		.loc 18 221 7 view .LVU2539
 11083              	.LBB8049:
 11084              	.LBI8049:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11085              		.loc 18 186 7 view .LVU2540
 11086              	.LBB8050:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11087              		.loc 18 187 28 is_stmt 0 view .LVU2541
 11088 00a8 0298     		ldr	r0, [sp, #8]
 11089              	.LVL720:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11090              		.loc 18 187 28 view .LVU2542
 11091              	.LBE8050:
 11092              	.LBE8049:
 11093              	.LBB8051:
 11094              	.LBI8051:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11095              		.loc 18 200 7 is_stmt 1 view .LVU2543
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11096              		.loc 18 200 7 is_stmt 0 view .LVU2544
 11097              	.LBE8051:
 11098              	.LBE8048:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11099              		.loc 18 231 2 view .LVU2545
 11100 00aa A842     		cmp	r0, r5
 11101 00ac 03D0     		beq	.L611
 11102              	.LVL721:
 11103              	.LBB8052:
 11104              	.LBI8052:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11105              		.loc 18 236 7 is_stmt 1 view .LVU2546
 11106              	.LBB8053:
 11107              	.LBB8054:
 11108              	.LBI8054:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11109              		.loc 26 491 7 view .LVU2547
 11110              	.LBB8055:
 11111              	.LBI8055:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11112              		.loc 20 120 7 view .LVU2548
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 436


 11113              	.LBE8055:
 11114              	.LBE8054:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11115              		.loc 18 237 34 is_stmt 0 view .LVU2549
 11116 00ae 0499     		ldr	r1, [sp, #16]
 11117              	.LBB8058:
 11118              	.LBB8057:
 11119              	.LBB8056:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11120              		.loc 20 133 19 view .LVU2550
 11121 00b0 0131     		adds	r1, r1, #1
 11122              	.LVL722:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11123              		.loc 20 133 19 view .LVU2551
 11124 00b2 FFF7FEFF 		bl	_ZdlPvj
 11125              	.LVL723:
 11126              	.L611:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11127              		.loc 20 133 19 view .LVU2552
 11128              	.LBE8056:
 11129              	.LBE8057:
 11130              	.LBE8058:
 11131              	.LBE8053:
 11132              	.LBE8052:
 11133              	.LBE8047:
 11134              	.LBE8046:
 11135              	.LBB8059:
 11136              	.LBI8059:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11137              		.loc 18 150 14 is_stmt 1 view .LVU2553
 11138              	.LBB8060:
 11139              	.LBI8060:
 11140              		.loc 19 162 7 view .LVU2554
 11141              	.LBB8061:
 11142              	.LBI8061:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11143              		.loc 20 89 7 view .LVU2555
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11144              		.loc 20 89 7 is_stmt 0 view .LVU2556
 11145              	.LBE8061:
 11146              	.LBE8060:
 11147              	.LBE8059:
 11148              	.LBE8045:
 11149              	.LBE8044:
 246:Jellybeans.cpp ****         listSize--;
 11150              		.loc 14 246 9 is_stmt 1 view .LVU2557
 247:Jellybeans.cpp ****         patch.display.DrawLine(0, 53, 128, 53, true);
 11151              		.loc 14 247 9 view .LVU2558
 11152              	.LBB8062:
 11153              	.LBI8062:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 11154              		.loc 5 221 10 view .LVU2559
 11155              	.LBB8063:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 11156              		.loc 5 239 26 view .LVU2560
 11157 00b6 624B     		ldr	r3, .L648+16
 11158 00b8 03F18001 		add	r1, r3, #128
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 437


 11159              	.LVL724:
 11160              	.L612:
 11161              	.LBB8064:
 11162              	.LBI8064:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 11163              		.loc 4 41 10 view .LVU2561
 11164              	.LBB8065:
 11165              	.LBI8065:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11166              		.loc 15 239 10 view .LVU2562
 11167              	.LBB8066:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 11168              		.loc 15 244 42 is_stmt 0 view .LVU2563
 11169 00bc 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
 11170              	.LVL725:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 11171              		.loc 15 244 42 view .LVU2564
 11172 00c0 42F02002 		orr	r2, r2, #32
 11173              	.LBE8066:
 11174              	.LBE8065:
 11175              	.LBE8064:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 11176              		.loc 5 239 26 view .LVU2565
 11177 00c4 9942     		cmp	r1, r3
 11178              	.LBB8069:
 11179              	.LBB8068:
 11180              	.LBB8067:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 11181              		.loc 15 244 42 view .LVU2566
 11182 00c6 1A70     		strb	r2, [r3]
 11183              	.LVL726:
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 11184              		.loc 15 244 42 view .LVU2567
 11185              	.LBE8067:
 11186              	.LBE8068:
 11187              	.LBE8069:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 11188              		.loc 5 239 26 is_stmt 1 view .LVU2568
 11189 00c8 F8D1     		bne	.L612
 11190              	.LVL727:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 11191              		.loc 5 239 26 is_stmt 0 view .LVU2569
 11192              	.LBE8063:
 11193              	.LBE8062:
 248:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 11194              		.loc 14 248 9 is_stmt 1 view .LVU2570
 11195              	.LBB8070:
 11196              	.LBI8070:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 11197              		.loc 18 448 7 view .LVU2571
 11198              	.LBB8071:
 11199              	.LBB8072:
 11200              	.LBB8073:
 11201              	.LBI8073:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11202              		.loc 18 190 7 view .LVU2572
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 438


 11203              		.loc 18 190 7 is_stmt 0 view .LVU2573
 11204              	.LBE8073:
 11205              	.LBB8074:
 11206              	.LBI8074:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 11207              		.loc 18 290 7 is_stmt 1 view .LVU2574
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 11208              		.loc 18 290 7 is_stmt 0 view .LVU2575
 11209              	.LBE8074:
 11210              	.LBB8075:
 11211              	.LBI8075:
 11212              		.file 38 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\allo
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 439


  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 11213              		.loc 38 97 29 is_stmt 1 view .LVU2576
 11214              	.LBB8076:
 11215              	.LBI8076:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 11216              		.loc 26 558 7 view .LVU2577
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 440


 11217              	.LBB8077:
 11218              	.LBI8077:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11219              		.loc 19 147 7 view .LVU2578
 11220              	.LBB8078:
 11221              	.LBI8078:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11222              		.loc 20 82 7 view .LVU2579
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11223              		.loc 20 82 7 is_stmt 0 view .LVU2580
 11224              	.LBE8078:
 11225              	.LBE8077:
 11226              	.LBE8076:
 11227              	.LBE8075:
 11228              	.LBB8079:
 11229              	.LBI8079:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11230              		.loc 18 159 2 is_stmt 1 view .LVU2581
 11231              	.LBB8080:
 11232              	.LBB8081:
 11233              	.LBB8082:
 11234              	.LBI8082:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 11235              		.loc 37 101 5 view .LVU2582
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 11236              		.loc 37 101 5 is_stmt 0 view .LVU2583
 11237              	.LBE8082:
 11238              	.LBB8083:
 11239              	.LBI8083:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11240              		.loc 19 147 7 is_stmt 1 view .LVU2584
 11241              	.LBB8084:
 11242              	.LBI8084:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11243              		.loc 20 82 7 view .LVU2585
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11244              		.loc 20 82 7 is_stmt 0 view .LVU2586
 11245              	.LBE8084:
 11246              	.LBE8083:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11247              		.loc 18 160 46 view .LVU2587
 11248 00ca 0295     		str	r5, [sp, #8]
 11249              	.LVL728:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11250              		.loc 18 160 46 view .LVU2588
 11251              	.LBE8081:
 11252              	.LBE8080:
 11253              	.LBE8079:
 11254              	.LBB8085:
 11255              	.LBI8085:
 11256              		.loc 19 162 7 is_stmt 1 view .LVU2589
 11257              	.LBB8086:
 11258              	.LBI8086:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11259              		.loc 20 89 7 view .LVU2590
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11260              		.loc 20 89 7 is_stmt 0 view .LVU2591
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 441


 11261              	.LBE8086:
 11262              	.LBE8085:
 11263              	.LBB8087:
 11264              	.LBI8087:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11265              		.loc 18 186 7 is_stmt 1 view .LVU2592
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11266              		.loc 18 186 7 is_stmt 0 view .LVU2593
 11267              	.LBE8087:
 11268              	.LBB8088:
 11269              	.LBI8088:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11270              		.loc 18 186 7 is_stmt 1 view .LVU2594
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11271              		.loc 18 186 7 is_stmt 0 view .LVU2595
 11272              	.LBE8088:
 11273              	.LBB8089:
 11274              	.LBI8089:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11275              		.loc 18 907 7 is_stmt 1 view .LVU2596
 11276              	.LBB8090:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11277              		.loc 18 908 16 is_stmt 0 view .LVU2597
 11278 00cc D4E90064 		ldrd	r6, r4, [r4]
 11279              	.LVL729:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11280              		.loc 18 908 16 view .LVU2598
 11281              	.LBE8090:
 11282              	.LBE8089:
 11283              	.LBB8091:
 11284              	.LBI8091:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 11285              		.loc 18 263 9 is_stmt 1 view .LVU2599
 11286              	.LBB8092:
 11287              	.LBB8093:
 11288              	.LBI8093:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 11289              		.loc 18 243 9 view .LVU2600
 11290              	.LBB8094:
 11291              	.LBB8095:
 11292              	.LBI8095:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 11293              		.loc 22 206 7 view .LVU2601
 11294              	.LBB8096:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 11295              		.loc 22 211 42 is_stmt 0 view .LVU2602
 11296 00d0 E642     		cmn	r6, r4
 11297 00d2 02D0     		beq	.L613
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 11298              		.loc 22 211 42 view .LVU2603
 11299 00d4 002E     		cmp	r6, #0
 11300 00d6 00F0A880 		beq	.L643
 11301              	.L613:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11302              		.loc 22 217 2 view .LVU2604
 11303 00da 0F2C     		cmp	r4, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 442


 11304              		.loc 22 215 12 view .LVU2605
 11305 00dc 0194     		str	r4, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 11306              		.loc 22 217 2 view .LVU2606
 11307 00de 7FD8     		bhi	.L644
 11308              	.LVL730:
 11309              	.LBB8097:
 11310              	.LBI8097:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11311              		.loc 18 186 7 is_stmt 1 view .LVU2607
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11312              		.loc 18 186 7 is_stmt 0 view .LVU2608
 11313              	.LBE8097:
 11314              	.LBB8099:
 11315              	.LBI8099:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11316              		.loc 18 392 7 is_stmt 1 view .LVU2609
 11317              	.LBB8100:
 11318              	.LBI8100:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11319              		.loc 18 346 7 view .LVU2610
 11320              	.LBB8101:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 11321              		.loc 18 348 2 is_stmt 0 view .LVU2611
 11322 00e0 012C     		cmp	r4, #1
 11323 00e2 7AD1     		bne	.L616
 11324              	.LVL731:
 11325              	.LBB8102:
 11326              	.LBI8102:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11327              		.loc 21 321 7 is_stmt 1 view .LVU2612
 11328              	.LBB8103:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11329              		.loc 21 322 9 view .LVU2613
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11330              		.loc 21 322 16 is_stmt 0 view .LVU2614
 11331 00e4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11332              		.loc 21 322 22 view .LVU2615
 11333 00e6 2A46     		mov	r2, r5
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11334              		.loc 21 322 14 view .LVU2616
 11335 00e8 8DF81030 		strb	r3, [sp, #16]
 11336              	.LVL732:
 11337              	.L617:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11338              		.loc 21 322 14 view .LVU2617
 11339              	.LBE8103:
 11340              	.LBE8102:
 11341              	.LBE8101:
 11342              	.LBE8100:
 11343              	.LBE8099:
 11344              	.LBB8119:
 11345              	.LBI8119:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11346              		.loc 18 214 7 is_stmt 1 view .LVU2618
 11347              	.LBB8120:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 443


 11348              	.LBB8121:
 11349              	.LBI8121:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 11350              		.loc 18 182 7 view .LVU2619
 11351              	.LBE8121:
 11352              	.LBB8123:
 11353              	.LBB8124:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11354              		.loc 21 322 14 is_stmt 0 view .LVU2620
 11355 00ec 0023     		movs	r3, #0
 11356              	.LBE8124:
 11357              	.LBE8123:
 11358              	.LBE8120:
 11359              	.LBE8119:
 11360              	.LBE8096:
 11361              	.LBE8095:
 11362              	.LBE8094:
 11363              	.LBE8093:
 11364              	.LBE8092:
 11365              	.LBE8091:
 11366              	.LBE8072:
 11367              	.LBE8071:
 11368              	.LBE8070:
 248:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 11369              		.loc 14 248 19 view .LVU2621
 11370 00ee 02A8     		add	r0, sp, #8
 11371              	.LVL733:
 11372              	.LBB8183:
 11373              	.LBB8179:
 11374              	.LBB8175:
 11375              	.LBB8171:
 11376              	.LBB8167:
 11377              	.LBB8163:
 11378              	.LBB8159:
 11379              	.LBB8155:
 11380              	.LBB8151:
 11381              	.LBB8136:
 11382              	.LBB8133:
 11383              	.LBB8127:
 11384              	.LBB8122:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11385              		.loc 18 183 26 view .LVU2622
 11386 00f0 0394     		str	r4, [sp, #12]
 11387              	.LVL734:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11388              		.loc 18 183 26 view .LVU2623
 11389              	.LBE8122:
 11390              	.LBE8127:
 11391              	.LBB8128:
 11392              	.LBI8128:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11393              		.loc 18 186 7 is_stmt 1 view .LVU2624
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11394              		.loc 18 186 7 is_stmt 0 view .LVU2625
 11395              	.LBE8128:
 11396              	.LBB8130:
 11397              	.LBI8123:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 444


 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 11398              		.loc 21 321 7 is_stmt 1 view .LVU2626
 11399              	.LBB8125:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11400              		.loc 21 322 9 view .LVU2627
 11401              	.LBE8125:
 11402              	.LBE8130:
 11403              	.LBE8133:
 11404              	.LBE8136:
 11405              	.LBE8151:
 11406              	.LBE8155:
 11407              	.LBE8159:
 11408              	.LBE8163:
 11409              	.LBE8167:
 11410              	.LBE8171:
 11411              	.LBE8175:
 11412              	.LBE8179:
 11413              	.LBE8183:
 248:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 11414              		.loc 14 248 19 is_stmt 0 view .LVU2628
 11415 00f2 0221     		movs	r1, #2
 11416              	.LBB8184:
 11417              	.LBB8180:
 11418              	.LBB8176:
 11419              	.LBB8172:
 11420              	.LBB8168:
 11421              	.LBB8164:
 11422              	.LBB8160:
 11423              	.LBB8156:
 11424              	.LBB8152:
 11425              	.LBB8137:
 11426              	.LBB8134:
 11427              	.LBB8131:
 11428              	.LBB8126:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11429              		.loc 21 322 14 view .LVU2629
 11430 00f4 1355     		strb	r3, [r2, r4]
 11431              	.LVL735:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11432              		.loc 21 322 14 view .LVU2630
 11433              	.LBE8126:
 11434              	.LBE8131:
 11435              	.LBE8134:
 11436              	.LBE8137:
 11437              	.LBE8152:
 11438              	.LBE8156:
 11439              	.LBE8160:
 11440              	.LBE8164:
 11441              	.LBE8168:
 11442              	.LBE8172:
 11443              	.LBE8176:
 11444              	.LBE8180:
 11445              	.LBE8184:
 248:Jellybeans.cpp ****         drawString(debugString, 2, 54);
 11446              		.loc 14 248 19 view .LVU2631
 11447 00f6 3622     		movs	r2, #54
 11448 00f8 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 445


 11449              	.LVL736:
 11450              	.LBB8185:
 11451              	.LBI8185:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11452              		.loc 18 657 7 is_stmt 1 view .LVU2632
 11453              	.LBB8186:
 11454              	.LBB8187:
 11455              	.LBI8187:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11456              		.loc 18 229 7 view .LVU2633
 11457              	.LBB8188:
 11458              	.LBB8189:
 11459              	.LBI8189:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11460              		.loc 18 221 7 view .LVU2634
 11461              	.LBB8190:
 11462              	.LBI8190:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11463              		.loc 18 186 7 view .LVU2635
 11464              	.LBB8191:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11465              		.loc 18 187 28 is_stmt 0 view .LVU2636
 11466 00fc 0298     		ldr	r0, [sp, #8]
 11467              	.LVL737:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11468              		.loc 18 187 28 view .LVU2637
 11469              	.LBE8191:
 11470              	.LBE8190:
 11471              	.LBB8192:
 11472              	.LBI8192:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11473              		.loc 18 200 7 is_stmt 1 view .LVU2638
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11474              		.loc 18 200 7 is_stmt 0 view .LVU2639
 11475              	.LBE8192:
 11476              	.LBE8189:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11477              		.loc 18 231 2 view .LVU2640
 11478 00fe A842     		cmp	r0, r5
 11479 0100 03D0     		beq	.L618
 11480              	.LVL738:
 11481              	.LBB8193:
 11482              	.LBI8193:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11483              		.loc 18 236 7 is_stmt 1 view .LVU2641
 11484              	.LBB8194:
 11485              	.LBB8195:
 11486              	.LBI8195:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11487              		.loc 26 491 7 view .LVU2642
 11488              	.LBB8196:
 11489              	.LBI8196:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11490              		.loc 20 120 7 view .LVU2643
 11491              	.LBE8196:
 11492              	.LBE8195:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 446


 11493              		.loc 18 237 34 is_stmt 0 view .LVU2644
 11494 0102 0499     		ldr	r1, [sp, #16]
 11495              	.LBB8199:
 11496              	.LBB8198:
 11497              	.LBB8197:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11498              		.loc 20 133 19 view .LVU2645
 11499 0104 0131     		adds	r1, r1, #1
 11500              	.LVL739:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11501              		.loc 20 133 19 view .LVU2646
 11502 0106 FFF7FEFF 		bl	_ZdlPvj
 11503              	.LVL740:
 11504              	.L618:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11505              		.loc 20 133 19 view .LVU2647
 11506              	.LBE8197:
 11507              	.LBE8198:
 11508              	.LBE8199:
 11509              	.LBE8194:
 11510              	.LBE8193:
 11511              	.LBE8188:
 11512              	.LBE8187:
 11513              	.LBB8200:
 11514              	.LBI8200:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11515              		.loc 18 150 14 is_stmt 1 view .LVU2648
 11516              	.LBB8201:
 11517              	.LBI8201:
 11518              		.loc 19 162 7 view .LVU2649
 11519              	.LBB8202:
 11520              	.LBI8202:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11521              		.loc 20 89 7 view .LVU2650
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11522              		.loc 20 89 7 is_stmt 0 view .LVU2651
 11523              	.LBE8202:
 11524              	.LBE8201:
 11525              	.LBE8200:
 11526              	.LBE8186:
 11527              	.LBE8185:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11528              		.loc 14 252 5 is_stmt 1 view .LVU2652
 11529              	.LBB8203:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11530              		.loc 14 252 13 is_stmt 0 view .LVU2653
 11531 010a 4E4F     		ldr	r7, .L648+20
 11532 010c 4E4E     		ldr	r6, .L648+24
 11533 010e 3C68     		ldr	r4, [r7]
 11534              	.LVL741:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11535              		.loc 14 252 28 is_stmt 1 view .LVU2654
 11536 0110 C4EBC403 		rsb	r3, r4, r4, lsl #3
 11537 0114 06EBC306 		add	r6, r6, r3, lsl #3
 11538 0118 05E0     		b	.L621
 11539              	.L619:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 447


 11540              		.loc 14 252 5 discriminator 2 view .LVU2655
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11541              		.loc 14 252 38 is_stmt 0 discriminator 2 view .LVU2656
 11542 011a 3B68     		ldr	r3, [r7]
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11543              		.loc 14 252 5 discriminator 2 view .LVU2657
 11544 011c 0134     		adds	r4, r4, #1
 11545              	.LVL742:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11546              		.loc 14 252 28 is_stmt 1 discriminator 2 view .LVU2658
 11547 011e 3836     		adds	r6, r6, #56
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11548              		.loc 14 252 38 is_stmt 0 discriminator 2 view .LVU2659
 11549 0120 0433     		adds	r3, r3, #4
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11550              		.loc 14 252 28 discriminator 2 view .LVU2660
 11551 0122 A342     		cmp	r3, r4
 11552 0124 20DD     		ble	.L645
 11553              	.L621:
 253:Jellybeans.cpp ****         if (i < (int) menuItems.size()){
 11554              		.loc 14 253 9 is_stmt 1 view .LVU2661
 11555 0126 092C     		cmp	r4, #9
 11556 0128 F7DC     		bgt	.L619
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11557              		.loc 14 254 13 view .LVU2662
 11558              	.LVL743:
 11559              	.LBB8204:
 11560              	.LBI8204:
 11561              		.loc 29 185 7 view .LVU2663
 11562              	.LBB8205:
 11563              	.LBI8205:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 11564              		.loc 29 55 7 view .LVU2664
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 11565              		.loc 29 55 7 is_stmt 0 view .LVU2665
 11566              	.LBE8205:
 11567              	.LBE8204:
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11568              		.loc 14 254 54 view .LVU2666
 11569 012a 3146     		mov	r1, r6
 11570 012c 02A8     		add	r0, sp, #8
 11571              	.LVL744:
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11572              		.loc 14 254 54 view .LVU2667
 11573 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItem16getDisplayStringB5cxx11Ev
 11574              	.LVL745:
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11575              		.loc 14 254 71 view .LVU2668
 11576 0132 3B68     		ldr	r3, [r7]
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11577              		.loc 14 254 23 view .LVU2669
 11578 0134 02A8     		add	r0, sp, #8
 11579              	.LVL746:
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11580              		.loc 14 254 23 view .LVU2670
 11581 0136 0721     		movs	r1, #7
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 448


 11582              		.loc 14 254 71 view .LVU2671
 11583 0138 E31A     		subs	r3, r4, r3
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11584              		.loc 14 254 82 view .LVU2672
 11585 013a 03EB8303 		add	r3, r3, r3, lsl #2
 11586 013e 5A00     		lsls	r2, r3, #1
 254:Jellybeans.cpp ****             drawString(menuItems[i].getDisplayString(), fontWidth, (i - menuPos) * fontHeight + 12)
 11587              		.loc 14 254 23 view .LVU2673
 11588 0140 0C32     		adds	r2, r2, #12
 11589 0142 FFF7FEFF 		bl	_Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
 11590              	.LVL747:
 11591              	.LBB8206:
 11592              	.LBI8206:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11593              		.loc 18 657 7 is_stmt 1 view .LVU2674
 11594              	.LBB8207:
 11595              	.LBB8208:
 11596              	.LBI8208:
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11597              		.loc 18 229 7 view .LVU2675
 11598              	.LBB8209:
 11599              	.LBB8210:
 11600              	.LBI8210:
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11601              		.loc 18 221 7 view .LVU2676
 11602              	.LBB8211:
 11603              	.LBI8211:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11604              		.loc 18 186 7 view .LVU2677
 11605              	.LBB8212:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11606              		.loc 18 187 28 is_stmt 0 view .LVU2678
 11607 0146 0298     		ldr	r0, [sp, #8]
 11608              	.LVL748:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11609              		.loc 18 187 28 view .LVU2679
 11610              	.LBE8212:
 11611              	.LBE8211:
 11612              	.LBB8213:
 11613              	.LBI8213:
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11614              		.loc 18 200 7 is_stmt 1 view .LVU2680
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11615              		.loc 18 200 7 is_stmt 0 view .LVU2681
 11616              	.LBE8213:
 11617              	.LBE8210:
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11618              		.loc 18 231 2 view .LVU2682
 11619 0148 A842     		cmp	r0, r5
 11620 014a E6D0     		beq	.L619
 11621              	.LVL749:
 11622              	.LBB8214:
 11623              	.LBI8214:
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11624              		.loc 18 236 7 is_stmt 1 view .LVU2683
 11625              	.LBB8215:
 11626              	.LBB8216:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 449


 11627              	.LBI8216:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11628              		.loc 26 491 7 view .LVU2684
 11629              	.LBB8217:
 11630              	.LBI8217:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11631              		.loc 20 120 7 view .LVU2685
 11632              	.LBE8217:
 11633              	.LBE8216:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11634              		.loc 18 237 34 is_stmt 0 view .LVU2686
 11635 014c 0499     		ldr	r1, [sp, #16]
 11636              	.LBB8220:
 11637              	.LBB8219:
 11638              	.LBB8218:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11639              		.loc 20 133 19 view .LVU2687
 11640 014e 0131     		adds	r1, r1, #1
 11641              	.LVL750:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11642              		.loc 20 133 19 view .LVU2688
 11643 0150 FFF7FEFF 		bl	_ZdlPvj
 11644              	.LVL751:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11645              		.loc 20 133 19 view .LVU2689
 11646              	.LBE8218:
 11647              	.LBE8219:
 11648              	.LBE8220:
 11649              	.LBE8215:
 11650              	.LBE8214:
 11651              	.LBE8209:
 11652              	.LBE8208:
 11653              	.LBB8224:
 11654              	.LBI8224:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11655              		.loc 18 150 14 is_stmt 1 view .LVU2690
 11656              	.LBB8225:
 11657              	.LBI8225:
 11658              		.loc 19 162 7 view .LVU2691
 11659              	.LBB8226:
 11660              	.LBI8226:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11661              		.loc 20 89 7 view .LVU2692
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11662              		.loc 20 89 7 is_stmt 0 view .LVU2693
 11663              	.LBE8226:
 11664              	.LBE8225:
 11665              	.LBE8224:
 11666              	.LBB8227:
 11667              	.LBB8223:
 11668              	.LBB8222:
 11669              	.LBB8221:
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11670              		.loc 18 237 79 view .LVU2694
 11671 0154 E1E7     		b	.L619
 11672              	.LVL752:
 11673              	.L642:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 450


 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11674              		.loc 18 237 79 view .LVU2695
 11675              	.LBE8221:
 11676              	.LBE8222:
 11677              	.LBE8223:
 11678              	.LBE8227:
 11679              	.LBE8207:
 11680              	.LBE8206:
 11681              	.LBE8203:
 11682              	.LBB8228:
 11683              	.LBB8039:
 11684              	.LBB7985:
 11685              	.LBB7980:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11686              		.loc 18 178 7 is_stmt 1 view .LVU2696
 11687              	.LBE7980:
 11688              	.LBB7981:
 11689              	.LBB7971:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11690              		.loc 18 183 26 is_stmt 0 view .LVU2697
 11691 0156 039A     		ldr	r2, [sp, #12]
 11692 0158 C4E90032 		strd	r3, r2, [r4]
 11693              	.LVL753:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11694              		.loc 18 183 26 view .LVU2698
 11695              	.LBE7971:
 11696              	.LBE7981:
 11697              	.LBB7982:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11698              		.loc 18 210 7 is_stmt 1 view .LVU2699
 11699              	.LBB7966:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11700              		.loc 18 211 31 is_stmt 0 view .LVU2700
 11701 015c 049B     		ldr	r3, [sp, #16]
 11702              	.LVL754:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11703              		.loc 18 211 31 view .LVU2701
 11704 015e A360     		str	r3, [r4, #8]
 11705              	.LVL755:
 11706              	.L610:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11707              		.loc 18 211 31 view .LVU2702
 11708              	.LBE7966:
 11709              	.LBE7982:
 11710              	.LBB7983:
 11711              	.LBI7983:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11712              		.loc 18 178 7 is_stmt 1 view .LVU2703
 11713              	.LBB7984:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11714              		.loc 18 179 26 is_stmt 0 view .LVU2704
 11715 0160 0295     		str	r5, [sp, #8]
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11716              		.loc 18 179 33 view .LVU2705
 11717 0162 04AD     		add	r5, sp, #16
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11718              		.loc 18 179 33 view .LVU2706
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 451


 11719 0164 2846     		mov	r0, r5
 11720 0166 9CE7     		b	.L608
 11721              	.LVL756:
 11722              	.L645:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11723              		.loc 18 179 33 view .LVU2707
 11724 0168 324E     		ldr	r6, .L648+4
 11725              	.LBE7984:
 11726              	.LBE7983:
 11727              	.LBE7985:
 11728              	.LBE8039:
 11729              	.LBE8228:
 11730              	.LBB8229:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11731              		.loc 14 252 28 view .LVU2708
 11732 016a B024     		movs	r4, #176
 11733              	.LVL757:
 11734              	.L622:
 252:Jellybeans.cpp ****     for(int i = menuPos; i < menuPos + listSize; i++){
 11735              		.loc 14 252 28 view .LVU2709
 11736 016c 0025     		movs	r5, #0
 11737              	.LBE8229:
 11738              	.LBB8230:
 11739              	.LBB8231:
 11740              	.LBB8232:
 11741              	.LBB8233:
 11742              	.LBB8234:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11743              		.loc 15 111 23 view .LVU2710
 11744 016e 3748     		ldr	r0, .L648+28
 11745 0170 8DF80840 		strb	r4, [sp, #8]
 11746              	.LVL758:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11747              		.loc 15 111 23 view .LVU2711
 11748              	.LBE8234:
 11749              	.LBI8233:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11750              		.loc 15 109 10 is_stmt 1 view .LVU2712
 11751              	.LBB8235:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11752              		.loc 15 111 9 view .LVU2713
 11753              	.LBE8235:
 11754              	.LBE8233:
 11755              		.loc 15 270 22 is_stmt 0 view .LVU2714
 11756 0174 0134     		adds	r4, r4, #1
 11757              	.LVL759:
 11758              	.LBB8238:
 11759              	.LBB8236:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11760              		.loc 15 111 23 view .LVU2715
 11761 0176 2946     		mov	r1, r5
 11762 0178 FFF7FEFF 		bl	dsy_gpio_write
 11763              	.LVL760:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11764              		.loc 15 112 9 is_stmt 1 view .LVU2716
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11765              		.loc 15 112 30 is_stmt 0 view .LVU2717
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 452


 11766 017c 6423     		movs	r3, #100
 11767 017e 0122     		movs	r2, #1
 11768 0180 02A9     		add	r1, sp, #8
 11769              	.LVL761:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11770              		.loc 15 112 30 view .LVU2718
 11771 0182 3348     		ldr	r0, .L648+32
 11772              	.LVL762:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11773              		.loc 15 112 30 view .LVU2719
 11774              	.LBE8236:
 11775              	.LBE8238:
 11776              		.loc 15 270 22 view .LVU2720
 11777 0184 E4B2     		uxtb	r4, r4
 11778              	.LBB8239:
 11779              	.LBB8237:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11780              		.loc 15 112 30 view .LVU2721
 11781 0186 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11782              	.LVL763:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11783              		.loc 15 112 30 view .LVU2722
 11784              	.LBE8237:
 11785              	.LBE8239:
 11786              	.LBB8240:
 11787              	.LBB8241:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11788              		.loc 15 111 23 view .LVU2723
 11789 018a 2946     		mov	r1, r5
 11790 018c 2F48     		ldr	r0, .L648+28
 11791 018e 8DF80850 		strb	r5, [sp, #8]
 11792              	.LVL764:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11793              		.loc 15 111 23 view .LVU2724
 11794              	.LBE8241:
 11795              	.LBI8240:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11796              		.loc 15 109 10 is_stmt 1 view .LVU2725
 11797              	.LBB8242:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11798              		.loc 15 111 9 view .LVU2726
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11799              		.loc 15 111 23 is_stmt 0 view .LVU2727
 11800 0192 FFF7FEFF 		bl	dsy_gpio_write
 11801              	.LVL765:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11802              		.loc 15 112 9 is_stmt 1 view .LVU2728
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11803              		.loc 15 112 30 is_stmt 0 view .LVU2729
 11804 0196 0122     		movs	r2, #1
 11805 0198 6423     		movs	r3, #100
 11806 019a 02A9     		add	r1, sp, #8
 11807              	.LVL766:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11808              		.loc 15 112 30 view .LVU2730
 11809 019c 2C48     		ldr	r0, .L648+32
 11810              	.LVL767:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 453


 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11811              		.loc 15 112 30 view .LVU2731
 11812 019e FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11813              	.LVL768:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11814              		.loc 15 112 30 view .LVU2732
 11815 01a2 1023     		movs	r3, #16
 11816              	.LBE8242:
 11817              	.LBE8240:
 11818              	.LBB8243:
 11819              	.LBB8244:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11820              		.loc 15 111 23 view .LVU2733
 11821 01a4 2946     		mov	r1, r5
 11822 01a6 2948     		ldr	r0, .L648+28
 11823 01a8 8DF80830 		strb	r3, [sp, #8]
 11824              	.LVL769:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11825              		.loc 15 111 23 view .LVU2734
 11826              	.LBE8244:
 11827              	.LBI8243:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11828              		.loc 15 109 10 is_stmt 1 view .LVU2735
 11829              	.LBB8245:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11830              		.loc 15 111 9 view .LVU2736
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 11831              		.loc 15 111 23 is_stmt 0 view .LVU2737
 11832 01ac FFF7FEFF 		bl	dsy_gpio_write
 11833              	.LVL770:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11834              		.loc 15 112 9 is_stmt 1 view .LVU2738
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11835              		.loc 15 112 30 is_stmt 0 view .LVU2739
 11836 01b0 6423     		movs	r3, #100
 11837 01b2 0122     		movs	r2, #1
 11838 01b4 02A9     		add	r1, sp, #8
 11839              	.LVL771:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11840              		.loc 15 112 30 view .LVU2740
 11841 01b6 2648     		ldr	r0, .L648+32
 11842              	.LVL772:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11843              		.loc 15 112 30 view .LVU2741
 11844 01b8 FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11845              	.LVL773:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11846              		.loc 15 112 30 view .LVU2742
 11847              	.LBE8245:
 11848              	.LBE8243:
 11849              	.LBB8246:
 11850              	.LBI8246:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 11851              		.loc 15 115 10 is_stmt 1 view .LVU2743
 11852              	.LBB8247:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11853              		.loc 15 117 9 view .LVU2744
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 454


 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 11854              		.loc 15 117 23 is_stmt 0 view .LVU2745
 11855 01bc 0121     		movs	r1, #1
 11856 01be 2348     		ldr	r0, .L648+28
 11857 01c0 FFF7FEFF 		bl	dsy_gpio_write
 11858              	.LVL774:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11859              		.loc 15 118 9 is_stmt 1 view .LVU2746
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11860              		.loc 15 118 30 is_stmt 0 view .LVU2747
 11861 01c4 8022     		movs	r2, #128
 11862 01c6 3146     		mov	r1, r6
 11863 01c8 6423     		movs	r3, #100
 11864 01ca 2148     		ldr	r0, .L648+32
 11865              	.LVL775:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11866              		.loc 15 118 30 view .LVU2748
 11867              	.LBE8247:
 11868              	.LBE8246:
 11869              		.loc 15 270 22 view .LVU2749
 11870 01cc 1644     		add	r6, r6, r2
 11871              	.LVL776:
 11872              	.LBB8249:
 11873              	.LBB8248:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11874              		.loc 15 118 30 view .LVU2750
 11875 01ce FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 11876              	.LVL777:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 11877              		.loc 15 118 30 view .LVU2751
 11878              	.LBE8248:
 11879              	.LBE8249:
 11880              		.loc 15 270 9 is_stmt 1 view .LVU2752
 11881              		.loc 15 270 22 view .LVU2753
 11882 01d2 B82C     		cmp	r4, #184
 11883 01d4 CAD1     		bne	.L622
 11884              	.LBE8232:
 11885              	.LBE8231:
 11886              	.LBE8230:
 260:Jellybeans.cpp **** }
 11887              		.loc 14 260 1 is_stmt 0 view .LVU2754
 11888 01d6 09B0     		add	sp, sp, #36
 11889              		.cfi_remember_state
 11890              		.cfi_def_cfa_offset 20
 11891              		@ sp needed
 11892 01d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 11893              	.LVL778:
 11894              	.L616:
 11895              		.cfi_restore_state
 11896              	.LBB8250:
 11897              	.LBB8181:
 11898              	.LBB8177:
 11899              	.LBB8173:
 11900              	.LBB8169:
 11901              	.LBB8165:
 11902              	.LBB8161:
 11903              	.LBB8157:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 455


 11904              	.LBB8153:
 11905              	.LBB8138:
 11906              	.LBB8116:
 11907              	.LBB8113:
 11908              	.LBB8104:
 11909              	.LBI8104:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11910              		.loc 18 346 7 is_stmt 1 view .LVU2755
 11911              	.LBB8105:
 11912              	.LBI8105:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11913              		.loc 21 387 7 view .LVU2756
 11914              	.LBB8106:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11915              		.loc 21 389 2 view .LVU2757
 11916 01da 24BB     		cbnz	r4, .L646
 11917 01dc 2A46     		mov	r2, r5
 11918 01de 85E7     		b	.L617
 11919              	.LVL779:
 11920              	.L644:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11921              		.loc 21 389 2 is_stmt 0 view .LVU2758
 11922              	.LBE8106:
 11923              	.LBE8105:
 11924              	.LBE8104:
 11925              	.LBE8113:
 11926              	.LBE8116:
 11927              	.LBE8138:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11928              		.loc 22 219 13 view .LVU2759
 11929 01e0 0022     		movs	r2, #0
 11930 01e2 01A9     		add	r1, sp, #4
 11931 01e4 02A8     		add	r0, sp, #8
 11932              	.LVL780:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 11933              		.loc 22 219 13 view .LVU2760
 11934 01e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 11935              	.LVL781:
 11936              	.LBB8139:
 11937              	.LBI8139:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 11938              		.loc 18 178 7 is_stmt 1 view .LVU2761
 11939              	.LBE8139:
 11940              	.LBB8141:
 11941              	.LBB8142:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11942              		.loc 18 211 31 is_stmt 0 view .LVU2762
 11943 01ea 019B     		ldr	r3, [sp, #4]
 11944              	.LBE8142:
 11945              	.LBE8141:
 11946              	.LBB8144:
 11947              	.LBB8140:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11948              		.loc 18 179 26 view .LVU2763
 11949 01ec 0290     		str	r0, [sp, #8]
 11950              	.LVL782:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 456


 11951              		.loc 18 179 26 view .LVU2764
 11952              	.LBE8140:
 11953              	.LBE8144:
 11954              	.LBB8145:
 11955              	.LBI8141:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11956              		.loc 18 210 7 is_stmt 1 view .LVU2765
 11957              	.LBB8143:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11958              		.loc 18 211 31 is_stmt 0 view .LVU2766
 11959 01ee 0493     		str	r3, [sp, #16]
 11960              	.LVL783:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11961              		.loc 18 211 31 view .LVU2767
 11962              	.LBE8143:
 11963              	.LBE8145:
 11964              	.LBB8146:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11965              		.loc 18 186 7 is_stmt 1 view .LVU2768
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11966              		.loc 18 186 7 is_stmt 0 view .LVU2769
 11967              	.LBE8146:
 11968              	.LBB8147:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 11969              		.loc 18 392 7 is_stmt 1 view .LVU2770
 11970              	.LBB8117:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11971              		.loc 18 346 7 view .LVU2771
 11972              	.LBB8114:
 11973              	.LBB8111:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11974              		.loc 18 346 7 view .LVU2772
 11975              	.LBB8109:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 11976              		.loc 21 387 7 view .LVU2773
 11977              	.LBB8107:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 11978              		.loc 21 389 2 view .LVU2774
 11979              	.L615:
 11980              		.loc 21 395 2 view .LVU2775
 11981              		.loc 21 395 49 is_stmt 0 view .LVU2776
 11982 01f0 2246     		mov	r2, r4
 11983 01f2 3146     		mov	r1, r6
 11984 01f4 FFF7FEFF 		bl	memcpy
 11985              	.LVL784:
 11986              		.loc 21 395 49 view .LVU2777
 11987              	.LBE8107:
 11988              	.LBE8109:
 11989              	.LBE8111:
 11990              	.LBE8114:
 11991              	.LBE8117:
 11992              	.LBE8147:
 11993              	.LBB8148:
 11994              	.LBB8135:
 11995              	.LBB8132:
 11996              	.LBB8129:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 457


 11997              		.loc 18 187 28 view .LVU2778
 11998 01f8 DDE90142 		ldrd	r4, r2, [sp, #4]
 11999              	.LVL785:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12000              		.loc 18 187 28 view .LVU2779
 12001              	.LBE8129:
 12002              	.LBE8132:
 12003              	.LBE8135:
 12004              	.LBE8148:
 12005              	.LBB8149:
 12006              	.LBB8118:
 12007              	.LBB8115:
 12008              	.LBB8112:
 12009              	.LBB8110:
 12010              	.LBB8108:
 12011              		.loc 21 395 66 view .LVU2780
 12012 01fc 76E7     		b	.L617
 12013              	.LVL786:
 12014              	.L641:
 12015              		.loc 21 395 66 view .LVU2781
 12016              	.LBE8108:
 12017              	.LBE8110:
 12018              	.LBE8112:
 12019              	.LBE8115:
 12020              	.LBE8118:
 12021              	.LBE8149:
 12022              	.LBE8153:
 12023              	.LBE8157:
 12024              	.LBE8161:
 12025              	.LBE8165:
 12026              	.LBE8169:
 12027              	.LBE8173:
 12028              	.LBE8177:
 12029              	.LBE8181:
 12030              	.LBE8250:
 12031              	.LBB8251:
 12032              	.LBB8040:
 12033              	.LBB7986:
 12034              	.LBI7986:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12035              		.loc 18 901 7 is_stmt 1 view .LVU2782
 12036              	.LBB7987:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12037              		.loc 18 902 16 is_stmt 0 view .LVU2783
 12038 01fe 039A     		ldr	r2, [sp, #12]
 12039              	.LVL787:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12040              		.loc 18 902 16 view .LVU2784
 12041              	.LBE7987:
 12042              	.LBE7986:
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 12043              		.loc 18 721 6 view .LVU2785
 12044 0200 32B1     		cbz	r2, .L606
 12045              	.LVL788:
 12046              	.LBB7988:
 12047              	.LBI7988:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 458


 12048              		.loc 18 346 7 is_stmt 1 view .LVU2786
 12049              	.LBB7989:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12050              		.loc 18 348 2 is_stmt 0 view .LVU2787
 12051 0202 012A     		cmp	r2, #1
 12052 0204 09D0     		beq	.L647
 12053              	.LVL789:
 12054              	.LBB7990:
 12055              	.LBI7990:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12056              		.loc 18 346 7 is_stmt 1 view .LVU2788
 12057              	.LBB7991:
 12058              	.LBB7992:
 12059              	.LBI7992:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12060              		.loc 21 387 7 view .LVU2789
 12061              	.LBB7993:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12062              		.loc 21 389 2 view .LVU2790
 12063              		.loc 21 395 2 view .LVU2791
 12064              		.loc 21 395 49 is_stmt 0 view .LVU2792
 12065 0206 2946     		mov	r1, r5
 12066 0208 FFF7FEFF 		bl	memcpy
 12067              	.LVL790:
 12068              		.loc 21 395 49 view .LVU2793
 12069              	.LBE7993:
 12070              	.LBE7992:
 12071              	.LBE7991:
 12072              	.LBE7990:
 12073              	.LBE7989:
 12074              	.LBE7988:
 12075              	.LBB8000:
 12076              	.LBB8001:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12077              		.loc 18 902 16 view .LVU2794
 12078 020c 039A     		ldr	r2, [sp, #12]
 12079              	.LBE8001:
 12080              	.LBE8000:
 12081              	.LBB8003:
 12082              	.LBB8004:
 12083              	.LBB8005:
 12084              	.LBB8006:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12085              		.loc 18 187 28 view .LVU2795
 12086 020e 2068     		ldr	r0, [r4]
 12087              	.LVL791:
 12088              	.L606:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12089              		.loc 18 187 28 view .LVU2796
 12090              	.LBE8006:
 12091              	.LBE8005:
 12092              	.LBE8004:
 12093              	.LBE8003:
 12094              	.LBB8020:
 12095              	.LBI8000:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12096              		.loc 18 901 7 is_stmt 1 view .LVU2797
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 459


 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12097              		.loc 18 901 7 is_stmt 0 view .LVU2798
 12098              	.LBE8020:
 12099              	.LBB8021:
 12100              	.LBI8003:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12101              		.loc 18 214 7 is_stmt 1 view .LVU2799
 12102              	.LBB8017:
 12103              	.LBB8008:
 12104              	.LBI8008:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12105              		.loc 18 182 7 view .LVU2800
 12106              	.LBE8008:
 12107              	.LBB8010:
 12108              	.LBB8011:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12109              		.loc 21 322 14 is_stmt 0 view .LVU2801
 12110 0210 0023     		movs	r3, #0
 12111              	.LBE8011:
 12112              	.LBE8010:
 12113              	.LBB8013:
 12114              	.LBB8009:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12115              		.loc 18 183 26 view .LVU2802
 12116 0212 6260     		str	r2, [r4, #4]
 12117              	.LVL792:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12118              		.loc 18 183 26 view .LVU2803
 12119              	.LBE8009:
 12120              	.LBE8013:
 12121              	.LBB8014:
 12122              	.LBI8005:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12123              		.loc 18 186 7 is_stmt 1 view .LVU2804
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12124              		.loc 18 186 7 is_stmt 0 view .LVU2805
 12125              	.LBE8014:
 12126              	.LBB8015:
 12127              	.LBI8010:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12128              		.loc 21 321 7 is_stmt 1 view .LVU2806
 12129              	.LBB8012:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12130              		.loc 21 322 9 view .LVU2807
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12131              		.loc 21 322 14 is_stmt 0 view .LVU2808
 12132 0214 8354     		strb	r3, [r0, r2]
 12133              	.LVL793:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12134              		.loc 21 322 14 view .LVU2809
 12135              	.LBE8012:
 12136              	.LBE8015:
 12137              	.LBE8017:
 12138              	.LBE8021:
 12139              	.LBE8040:
 12140              	.LBB8041:
 12141              	.LBB8038:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 460


 12142              	.LBB8037:
 12143              	.LBB8034:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12144              		.loc 18 187 28 view .LVU2810
 12145 0216 0298     		ldr	r0, [sp, #8]
 12146              	.LBE8034:
 12147              	.LBE8037:
 12148              	.LBE8038:
 12149              	.LBE8041:
 12150              	.LBB8042:
 12151              	.LBB8022:
 12152              	.LBB8018:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12153              		.loc 18 218 7 view .LVU2811
 12154 0218 43E7     		b	.L608
 12155              	.LVL794:
 12156              	.L647:
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12157              		.loc 18 218 7 view .LVU2812
 12158              	.LBE8018:
 12159              	.LBE8022:
 12160              	.LBB8023:
 12161              	.LBB7998:
 12162              	.LBB7994:
 12163              	.LBI7994:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12164              		.loc 21 321 7 is_stmt 1 view .LVU2813
 12165              	.LBB7995:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12166              		.loc 21 322 9 view .LVU2814
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12167              		.loc 21 322 16 is_stmt 0 view .LVU2815
 12168 021a 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12169              		.loc 21 322 14 view .LVU2816
 12170 021e 0370     		strb	r3, [r0]
 12171              	.LBE7995:
 12172              	.LBE7994:
 12173              	.LBE7998:
 12174              	.LBE8023:
 12175              	.LBB8024:
 12176              	.LBB8002:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12177              		.loc 18 902 16 view .LVU2817
 12178 0220 039A     		ldr	r2, [sp, #12]
 12179              	.LVL795:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12180              		.loc 18 902 16 view .LVU2818
 12181              	.LBE8002:
 12182              	.LBE8024:
 12183              	.LBB8025:
 12184              	.LBB8019:
 12185              	.LBB8016:
 12186              	.LBB8007:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12187              		.loc 18 187 28 view .LVU2819
 12188 0222 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 461


 12189              	.LVL796:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12190              		.loc 18 187 28 view .LVU2820
 12191              	.LBE8007:
 12192              	.LBE8016:
 12193              	.LBE8019:
 12194              	.LBE8025:
 12195              	.LBB8026:
 12196              	.LBB7999:
 12197              	.LBB7997:
 12198              	.LBB7996:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12199              		.loc 21 322 22 view .LVU2821
 12200 0224 F4E7     		b	.L606
 12201              	.LVL797:
 12202              	.L646:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12203              		.loc 21 322 22 view .LVU2822
 12204              	.LBE7996:
 12205              	.LBE7997:
 12206              	.LBE7999:
 12207              	.LBE8026:
 12208              	.LBE8042:
 12209              	.LBE8251:
 12210              	.LBB8252:
 12211              	.LBB8182:
 12212              	.LBB8178:
 12213              	.LBB8174:
 12214              	.LBB8170:
 12215              	.LBB8166:
 12216              	.LBB8162:
 12217              	.LBB8158:
 12218              	.LBB8154:
 12219              	.LBB8150:
 12220              	.LBB8098:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12221              		.loc 18 187 28 view .LVU2823
 12222 0226 2846     		mov	r0, r5
 12223 0228 E2E7     		b	.L615
 12224              	.LVL798:
 12225              	.L643:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12226              		.loc 18 187 28 view .LVU2824
 12227              	.LBE8098:
 12228              	.LBE8150:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 12229              		.loc 22 212 28 view .LVU2825
 12230 022a 0A48     		ldr	r0, .L648+36
 12231 022c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 12232              	.LVL799:
 12233              	.L649:
 12234              		.align	2
 12235              	.L648:
 12236 0230 00000000 		.word	.LANCHOR0
 12237 0234 B4910000 		.word	patch+37300
 12238 0238 33920000 		.word	patch+37427
 12239 023c 00000000 		.word	.LANCHOR18
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 462


 12240 0240 B3940000 		.word	patch+38067
 12241 0244 00000000 		.word	.LANCHOR16
 12242 0248 00000000 		.word	.LANCHOR8
 12243 024c B0910000 		.word	patch+37296
 12244 0250 A8910000 		.word	patch+37288
 12245 0254 00000000 		.word	.LC23
 12246              	.LBE8154:
 12247              	.LBE8158:
 12248              	.LBE8162:
 12249              	.LBE8166:
 12250              	.LBE8170:
 12251              	.LBE8174:
 12252              	.LBE8178:
 12253              	.LBE8182:
 12254              	.LBE8252:
 12255              		.cfi_endproc
 12256              	.LFE5135:
 12258              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16ini
 12259              		.align	1
 12260              		.p2align 2,,3
 12261              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_
 12262              		.syntax unified
 12263              		.thumb
 12264              		.thumb_func
 12265              		.fpu fpv5-d16
 12267              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5
 12268              	.LVL800:
 12269              	.LFB5474:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12270              		.loc 24 625 7 is_stmt 1 view -0
 12271              		.cfi_startproc
 12272              		@ args = 0, pretend = 0, frame = 16
 12273              		@ frame_needed = 0, uses_anonymous_args = 0
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12274              		.loc 24 625 7 is_stmt 0 view .LVU2827
 12275 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 12276              		.cfi_def_cfa_offset 32
 12277              		.cfi_offset 4, -32
 12278              		.cfi_offset 5, -28
 12279              		.cfi_offset 6, -24
 12280              		.cfi_offset 7, -20
 12281              		.cfi_offset 8, -16
 12282              		.cfi_offset 9, -12
 12283              		.cfi_offset 10, -8
 12284              		.cfi_offset 14, -4
 12285 0004 84B0     		sub	sp, sp, #16
 12286              		.cfi_def_cfa_offset 48
 12287              	.LBB8350:
 12288              	.LBB8351:
 12289              	.LBB8352:
 12290              	.LBB8353:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12291              		.loc 24 98 47 view .LVU2828
 12292 0006 0024     		movs	r4, #0
 12293              	.LBE8353:
 12294              	.LBE8352:
 12295              	.LBE8351:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 463


 12296              	.LBE8350:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12297              		.loc 24 625 7 view .LVU2829
 12298 0008 6B46     		mov	r3, sp
 12299              	.LVL801:
 12300              	.LBB8364:
 12301              	.LBB8361:
 12302              	.LBB8356:
 12303              	.LBB8354:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12304              		.loc 24 98 47 view .LVU2830
 12305 000a 8460     		str	r4, [r0, #8]
 12306              	.LBE8354:
 12307              	.LBE8356:
 12308              	.LBE8361:
 12309              	.LBE8364:
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 12310              		.loc 24 625 7 view .LVU2831
 12311 000c 83E80600 		stm	r3, {r1, r2}
 12312              	.LVL802:
 12313              	.LBB8365:
 12314              	.LBI8350:
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 12315              		.loc 24 293 7 is_stmt 1 view .LVU2832
 12316              	.LBB8362:
 12317              	.LBI8351:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 12318              		.loc 24 136 2 view .LVU2833
 12319              	.LBB8357:
 12320              	.LBI8357:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12321              		.loc 19 147 7 view .LVU2834
 12322              	.LBB8358:
 12323              	.LBI8358:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12324              		.loc 20 82 7 view .LVU2835
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12325              		.loc 20 82 7 is_stmt 0 view .LVU2836
 12326              	.LBE8358:
 12327              	.LBE8357:
 12328              	.LBB8359:
 12329              	.LBI8352:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12330              		.loc 24 97 2 is_stmt 1 view .LVU2837
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 12331              		.loc 24 97 2 is_stmt 0 view .LVU2838
 12332              	.LBE8359:
 12333              	.LBE8362:
 12334              	.LBE8365:
 12335              	.LBB8366:
 12336              	.LBI8366:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12337              		.loc 25 75 7 is_stmt 1 view .LVU2839
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12338              		.loc 25 75 7 is_stmt 0 view .LVU2840
 12339              	.LBE8366:
 12340              	.LBB8367:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 464


 12341              	.LBI8367:
 12342              		.loc 25 79 7 is_stmt 1 view .LVU2841
 12343              	.LBB8368:
 12344              	.LBB8369:
 12345              	.LBI8369:
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12346              		.loc 25 71 7 view .LVU2842
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 12347              		.loc 25 71 7 is_stmt 0 view .LVU2843
 12348              	.LBE8369:
 12349              		.loc 25 79 45 view .LVU2844
 12350 0010 02EB4203 		add	r3, r2, r2, lsl #1
 12351              	.LVL803:
 12352              		.loc 25 79 45 view .LVU2845
 12353              	.LBE8368:
 12354              	.LBE8367:
 12355              	.LBB8371:
 12356              	.LBB8372:
 12357              	.LBB8373:
 12358              	.LBB8374:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12359              		.loc 24 1769 2 view .LVU2846
 12360 0014 2F4A     		ldr	r2, .L676
 12361 0016 B2EBC30F 		cmp	r2, r3, lsl #3
 12362              	.LBE8374:
 12363              	.LBE8373:
 12364              	.LBE8372:
 12365              	.LBE8371:
 12366              	.LBB8553:
 12367              	.LBB8370:
 12368              		.loc 25 79 52 view .LVU2847
 12369 001a 01EBC309 		add	r9, r1, r3, lsl #3
 12370              	.LVL804:
 12371              		.loc 25 79 52 view .LVU2848
 12372              	.LBE8370:
 12373              	.LBE8553:
 12374              	.LBB8554:
 12375              	.LBI8371:
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 12376              		.loc 24 1577 2 is_stmt 1 view .LVU2849
 12377              	.LBB8548:
 12378              	.LBB8382:
 12379              	.LBI8373:
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12380              		.loc 24 1767 7 view .LVU2850
 12381              	.LBB8379:
 12382              	.LBB8375:
 12383              	.LBI8375:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12384              		.loc 19 147 7 view .LVU2851
 12385              	.LBB8376:
 12386              	.LBI8376:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12387              		.loc 20 82 7 view .LVU2852
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12388              		.loc 20 82 7 is_stmt 0 view .LVU2853
 12389              	.LBE8376:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 465


 12390              	.LBE8375:
 12391              	.LBB8377:
 12392              	.LBI8377:
 12393              		.loc 19 162 7 is_stmt 1 view .LVU2854
 12394              	.LBB8378:
 12395              	.LBI8378:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12396              		.loc 20 89 7 view .LVU2855
 12397              	.LBE8378:
 12398              	.LBE8377:
 12399              	.LBE8379:
 12400              	.LBE8382:
 12401              	.LBE8548:
 12402              	.LBE8554:
 12403              	.LBB8555:
 12404              	.LBB8363:
 12405              	.LBB8360:
 12406              	.LBB8355:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 12407              		.loc 24 98 47 is_stmt 0 view .LVU2856
 12408 001e C0E90044 		strd	r4, r4, [r0]
 12409              	.LBE8355:
 12410              	.LBE8360:
 12411              	.LBE8363:
 12412              	.LBE8555:
 12413              	.LBB8556:
 12414              	.LBB8549:
 12415              	.LBB8383:
 12416              	.LBB8380:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12417              		.loc 24 1769 2 view .LVU2857
 12418 0022 53D3     		bcc	.L672
 12419              	.LVL805:
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
 12420              		.loc 24 1769 2 view .LVU2858
 12421              	.LBE8380:
 12422              	.LBE8383:
 12423              	.LBB8384:
 12424              	.LBI8384:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12425              		.loc 24 343 7 is_stmt 1 view .LVU2859
 12426 0024 DC00     		lsls	r4, r3, #3
 12427              	.LVL806:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 12428              		.loc 24 343 7 is_stmt 0 view .LVU2860
 12429 0026 8046     		mov	r8, r0
 12430              	.LBB8385:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12431              		.loc 24 346 18 view .LVU2861
 12432 0028 002C     		cmp	r4, #0
 12433 002a 43D0     		beq	.L652
 12434 002c 0E46     		mov	r6, r1
 12435              	.LVL807:
 12436              	.LBB8386:
 12437              	.LBI8386:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 12438              		.loc 26 459 7 is_stmt 1 view .LVU2862
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 466


 12439              	.LBB8387:
 12440              	.LBI8387:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12441              		.loc 20 103 7 view .LVU2863
 12442              	.LBB8388:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12443              		.loc 20 115 41 is_stmt 0 view .LVU2864
 12444 002e 2046     		mov	r0, r4
 12445              	.LVL808:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12446              		.loc 20 115 41 view .LVU2865
 12447 0030 FFF7FEFF 		bl	_Znwj
 12448              	.LVL809:
 12449              	.LBE8388:
 12450              	.LBE8387:
 12451              	.LBE8386:
 12452              	.LBE8385:
 12453              	.LBE8384:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12454              		.loc 24 1583 61 view .LVU2866
 12455 0034 0444     		add	r4, r4, r0
 12456              	.LVL810:
 12457              	.LBB8394:
 12458              	.LBB8395:
 12459              	.LBB8396:
 12460              	.LBB8397:
 12461              	.LBB8398:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12462              		.loc 28 90 23 view .LVU2867
 12463 0036 B145     		cmp	r9, r6
 12464              	.LBE8398:
 12465              	.LBE8397:
 12466              	.LBE8396:
 12467              	.LBE8395:
 12468              	.LBE8394:
 12469              	.LBB8540:
 12470              	.LBB8392:
 12471              	.LBB8391:
 12472              	.LBB8390:
 12473              	.LBB8389:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12474              		.loc 20 115 41 view .LVU2868
 12475 0038 0746     		mov	r7, r0
 12476              	.LVL811:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 12477              		.loc 20 115 41 view .LVU2869
 12478              	.LBE8389:
 12479              	.LBE8390:
 12480              	.LBE8391:
 12481              	.LBE8392:
 12482              	.LBE8540:
 12483              	.LBB8541:
 12484              	.LBI8394:
 12485              		.loc 28 323 5 is_stmt 1 view .LVU2870
 12486              	.LBB8535:
 12487              	.LBB8530:
 12488              	.LBB8525:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 467


 12489              	.LBB8520:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12490              		.loc 28 90 23 view .LVU2871
 12491              	.LBE8520:
 12492              	.LBE8525:
 12493              	.LBE8530:
 12494              	.LBE8535:
 12495              	.LBE8541:
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12496              		.loc 24 1583 36 is_stmt 0 view .LVU2872
 12497 003a C8F80840 		str	r4, [r8, #8]
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12498              		.loc 24 1582 6 view .LVU2873
 12499 003e C8F80000 		str	r0, [r8]
 12500              	.LBB8542:
 12501              	.LBB8536:
 12502              	.LBB8531:
 12503              	.LBB8526:
 12504              	.LBB8521:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12505              		.loc 28 90 23 view .LVU2874
 12506 0042 3AD0     		beq	.L653
 12507 0044 00F11804 		add	r4, r0, #24
 12508 0048 0BE0     		b	.L659
 12509              	.LVL812:
 12510              	.L675:
 12511              	.LBB8399:
 12512              	.LBB8400:
 12513              	.LBB8401:
 12514              	.LBB8402:
 12515              	.LBB8403:
 12516              	.LBB8404:
 12517              	.LBB8405:
 12518              	.LBB8406:
 12519              	.LBB8407:
 12520              	.LBB8408:
 12521              	.LBB8409:
 12522              	.LBB8410:
 12523              	.LBB8411:
 12524              	.LBI8411:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12525              		.loc 21 321 7 is_stmt 1 view .LVU2875
 12526              	.LBB8412:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12527              		.loc 21 322 9 view .LVU2876
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12528              		.loc 21 322 16 is_stmt 0 view .LVU2877
 12529 004a 9AF80030 		ldrb	r3, [r10]	@ zero_extendqisi2
 12530              	.LVL813:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12531              		.loc 21 322 14 view .LVU2878
 12532 004e 04F8103C 		strb	r3, [r4, #-16]
 12533              	.LVL814:
 12534              	.L658:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12535              		.loc 21 322 14 view .LVU2879
 12536              	.LBE8412:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 468


 12537              	.LBE8411:
 12538              	.LBE8410:
 12539              	.LBE8409:
 12540              	.LBE8408:
 12541              	.LBB8433:
 12542              	.LBI8433:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12543              		.loc 18 214 7 is_stmt 1 view .LVU2880
 12544              	.LBB8434:
 12545              	.LBB8435:
 12546              	.LBI8435:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12547              		.loc 18 182 7 view .LVU2881
 12548              	.LBE8435:
 12549              	.LBE8434:
 12550              	.LBE8433:
 12551              	.LBE8407:
 12552              	.LBE8406:
 12553              	.LBE8405:
 12554              	.LBE8404:
 12555              	.LBE8403:
 12556              	.LBE8402:
 12557              	.LBE8401:
 12558              	.LBE8400:
 12559              	.LBE8399:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12560              		.loc 28 90 8 is_stmt 0 view .LVU2882
 12561 0052 1836     		adds	r6, r6, #24
 12562              	.LBB8515:
 12563              	.LBB8511:
 12564              	.LBB8507:
 12565              	.LBB8486:
 12566              	.LBB8482:
 12567              	.LBB8478:
 12568              	.LBB8474:
 12569              	.LBB8470:
 12570              	.LBB8466:
 12571              	.LBB8450:
 12572              	.LBB8447:
 12573              	.LBB8437:
 12574              	.LBB8438:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12575              		.loc 21 322 14 view .LVU2883
 12576 0054 0023     		movs	r3, #0
 12577              	.LBE8438:
 12578              	.LBE8437:
 12579              	.LBB8441:
 12580              	.LBB8436:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12581              		.loc 18 183 26 view .LVU2884
 12582 0056 44F8145C 		str	r5, [r4, #-20]
 12583              	.LVL815:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12584              		.loc 18 183 26 view .LVU2885
 12585              	.LBE8436:
 12586              	.LBE8441:
 12587              	.LBB8442:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 469


 12588              	.LBI8442:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12589              		.loc 18 186 7 is_stmt 1 view .LVU2886
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12590              		.loc 18 186 7 is_stmt 0 view .LVU2887
 12591              	.LBE8442:
 12592              	.LBB8444:
 12593              	.LBI8437:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12594              		.loc 21 321 7 is_stmt 1 view .LVU2888
 12595              	.LBB8439:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12596              		.loc 21 322 9 view .LVU2889
 12597              	.LBE8439:
 12598              	.LBE8444:
 12599              	.LBE8447:
 12600              	.LBE8450:
 12601              	.LBE8466:
 12602              	.LBE8470:
 12603              	.LBE8474:
 12604              	.LBE8478:
 12605              	.LBE8482:
 12606              	.LBE8486:
 12607              	.LBE8507:
 12608              	.LBE8511:
 12609              	.LBE8515:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12610              		.loc 28 90 23 is_stmt 0 view .LVU2890
 12611 005a 1834     		adds	r4, r4, #24
 12612              	.LVL816:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12613              		.loc 28 90 23 view .LVU2891
 12614 005c B145     		cmp	r9, r6
 12615              	.LBB8516:
 12616              	.LBB8512:
 12617              	.LBB8508:
 12618              	.LBB8487:
 12619              	.LBB8483:
 12620              	.LBB8479:
 12621              	.LBB8475:
 12622              	.LBB8471:
 12623              	.LBB8467:
 12624              	.LBB8451:
 12625              	.LBB8448:
 12626              	.LBB8445:
 12627              	.LBB8440:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12628              		.loc 21 322 14 view .LVU2892
 12629 005e 4355     		strb	r3, [r0, r5]
 12630              	.LVL817:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12631              		.loc 21 322 14 view .LVU2893
 12632              	.LBE8440:
 12633              	.LBE8445:
 12634              	.LBE8448:
 12635              	.LBE8451:
 12636              	.LBE8467:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 470


 12637              	.LBE8471:
 12638              	.LBE8475:
 12639              	.LBE8479:
 12640              	.LBE8483:
 12641              	.LBE8487:
 12642              	.LBE8508:
 12643              	.LBE8512:
 12644              	.LBE8516:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12645              		.loc 28 90 8 is_stmt 1 view .LVU2894
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12646              		.loc 28 90 23 view .LVU2895
 12647 0060 2BD0     		beq	.L653
 12648              	.L659:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12649              		.loc 28 90 23 is_stmt 0 view .LVU2896
 12650 0062 A4F11000 		sub	r0, r4, #16
 12651 0066 A4F11803 		sub	r3, r4, #24
 12652              	.LVL818:
 12653              	.LBB8517:
 12654              	.LBI8399:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 12655              		.loc 30 108 5 is_stmt 1 view .LVU2897
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 12656              		.loc 30 108 5 is_stmt 0 view .LVU2898
 12657              	.LBE8517:
 12658              	.LBE8521:
 12659              	.LBE8526:
 12660              	.LBE8531:
 12661              	.LBE8536:
 12662              	.LBE8542:
 12663              	.LBE8549:
 12664              	.LBE8556:
 12665              		.loc 23 175 3 is_stmt 1 view .LVU2899
 12666              	.LBB8557:
 12667              	.LBB8550:
 12668              	.LBB8543:
 12669              	.LBB8537:
 12670              	.LBB8532:
 12671              	.LBB8527:
 12672              	.LBB8522:
 12673              	.LBB8518:
 12674              	.LBB8513:
 12675              	.LBI8400:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12676              		.loc 18 448 7 view .LVU2900
 12677              	.LBB8509:
 12678              	.LBB8488:
 12679              	.LBI8488:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12680              		.loc 18 190 7 view .LVU2901
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12681              		.loc 18 190 7 is_stmt 0 view .LVU2902
 12682              	.LBE8488:
 12683              	.LBB8489:
 12684              	.LBI8489:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 471


 12685              		.loc 18 290 7 is_stmt 1 view .LVU2903
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12686              		.loc 18 290 7 is_stmt 0 view .LVU2904
 12687              	.LBE8489:
 12688              	.LBB8490:
 12689              	.LBI8490:
 12690              		.loc 38 97 29 is_stmt 1 view .LVU2905
 12691              	.LBB8491:
 12692              	.LBI8491:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12693              		.loc 26 558 7 view .LVU2906
 12694              	.LBB8492:
 12695              	.LBI8492:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12696              		.loc 19 147 7 view .LVU2907
 12697              	.LBB8493:
 12698              	.LBI8493:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12699              		.loc 20 82 7 view .LVU2908
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12700              		.loc 20 82 7 is_stmt 0 view .LVU2909
 12701              	.LBE8493:
 12702              	.LBE8492:
 12703              	.LBE8491:
 12704              	.LBE8490:
 12705              	.LBB8494:
 12706              	.LBI8494:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12707              		.loc 18 159 2 is_stmt 1 view .LVU2910
 12708              	.LBB8495:
 12709              	.LBB8496:
 12710              	.LBI8496:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12711              		.loc 37 101 5 view .LVU2911
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 12712              		.loc 37 101 5 is_stmt 0 view .LVU2912
 12713              	.LBE8496:
 12714              	.LBB8497:
 12715              	.LBI8497:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12716              		.loc 19 147 7 is_stmt 1 view .LVU2913
 12717              	.LBB8498:
 12718              	.LBI8498:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12719              		.loc 20 82 7 view .LVU2914
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12720              		.loc 20 82 7 is_stmt 0 view .LVU2915
 12721 006a 2746     		mov	r7, r4
 12722              	.LBE8498:
 12723              	.LBE8497:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12724              		.loc 18 160 46 view .LVU2916
 12725 006c 44F8180C 		str	r0, [r4, #-24]
 12726              	.LVL819:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12727              		.loc 18 160 46 view .LVU2917
 12728              	.LBE8495:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 472


 12729              	.LBE8494:
 12730              	.LBB8499:
 12731              	.LBI8499:
 12732              		.loc 19 162 7 is_stmt 1 view .LVU2918
 12733              	.LBB8500:
 12734              	.LBI8500:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12735              		.loc 20 89 7 view .LVU2919
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12736              		.loc 20 89 7 is_stmt 0 view .LVU2920
 12737              	.LBE8500:
 12738              	.LBE8499:
 12739              	.LBB8501:
 12740              	.LBI8501:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12741              		.loc 18 186 7 is_stmt 1 view .LVU2921
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12742              		.loc 18 186 7 is_stmt 0 view .LVU2922
 12743              	.LBE8501:
 12744              	.LBB8502:
 12745              	.LBI8502:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12746              		.loc 18 186 7 is_stmt 1 view .LVU2923
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12747              		.loc 18 186 7 is_stmt 0 view .LVU2924
 12748              	.LBE8502:
 12749              	.LBB8503:
 12750              	.LBI8503:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 12751              		.loc 18 907 7 is_stmt 1 view .LVU2925
 12752              	.LBB8504:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12753              		.loc 18 908 16 is_stmt 0 view .LVU2926
 12754 0070 D6E900A5 		ldrd	r10, r5, [r6]
 12755              	.LVL820:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12756              		.loc 18 908 16 view .LVU2927
 12757              	.LBE8504:
 12758              	.LBE8503:
 12759              	.LBB8505:
 12760              	.LBI8402:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12761              		.loc 18 263 9 is_stmt 1 view .LVU2928
 12762              	.LBB8484:
 12763              	.LBB8480:
 12764              	.LBI8404:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12765              		.loc 18 243 9 view .LVU2929
 12766              	.LBB8476:
 12767              	.LBB8472:
 12768              	.LBI8406:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12769              		.loc 22 206 7 view .LVU2930
 12770              	.LBB8468:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12771              		.loc 22 211 42 is_stmt 0 view .LVU2931
 12772 0074 1AEB050F 		cmn	r10, r5
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 473


 12773 0078 02D0     		beq	.L654
 12774 007a BAF1000F 		cmp	r10, #0
 12775 007e 22D0     		beq	.L673
 12776              	.L654:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12777              		.loc 22 217 2 view .LVU2932
 12778 0080 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 12779              		.loc 22 215 12 view .LVU2933
 12780 0082 0395     		str	r5, [sp, #12]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 12781              		.loc 22 217 2 view .LVU2934
 12782 0084 04D8     		bhi	.L674
 12783              	.LVL821:
 12784              	.LBB8452:
 12785              	.LBI8452:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12786              		.loc 18 186 7 is_stmt 1 view .LVU2935
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12787              		.loc 18 186 7 is_stmt 0 view .LVU2936
 12788              	.LBE8452:
 12789              	.LBB8453:
 12790              	.LBI8408:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12791              		.loc 18 392 7 is_stmt 1 view .LVU2937
 12792              	.LBB8429:
 12793              	.LBI8409:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12794              		.loc 18 346 7 view .LVU2938
 12795              	.LBB8425:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 12796              		.loc 18 348 2 is_stmt 0 view .LVU2939
 12797 0086 012D     		cmp	r5, #1
 12798 0088 DFD0     		beq	.L675
 12799              	.LVL822:
 12800              	.LBB8413:
 12801              	.LBI8413:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12802              		.loc 18 346 7 is_stmt 1 view .LVU2940
 12803              	.LBB8414:
 12804              	.LBI8414:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12805              		.loc 21 387 7 view .LVU2941
 12806              	.LBB8415:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12807              		.loc 21 389 2 view .LVU2942
 12808 008a 002D     		cmp	r5, #0
 12809 008c E1D0     		beq	.L658
 12810 008e 09E0     		b	.L656
 12811              	.LVL823:
 12812              	.L674:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12813              		.loc 21 389 2 is_stmt 0 view .LVU2943
 12814              	.LBE8415:
 12815              	.LBE8414:
 12816              	.LBE8413:
 12817              	.LBE8425:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 474


 12818              	.LBE8429:
 12819              	.LBE8453:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 12820              		.loc 22 219 13 view .LVU2944
 12821 0090 1846     		mov	r0, r3
 12822 0092 0022     		movs	r2, #0
 12823 0094 03A9     		add	r1, sp, #12
 12824 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 12825              	.LVL824:
 12826              	.LBB8454:
 12827              	.LBB8455:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12828              		.loc 18 211 31 view .LVU2945
 12829 009a 039B     		ldr	r3, [sp, #12]
 12830              	.LVL825:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12831              		.loc 18 211 31 view .LVU2946
 12832              	.LBE8455:
 12833              	.LBE8454:
 12834              	.LBB8457:
 12835              	.LBI8457:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 12836              		.loc 18 178 7 is_stmt 1 view .LVU2947
 12837              	.LBB8458:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12838              		.loc 18 179 26 is_stmt 0 view .LVU2948
 12839 009c 44F8180C 		str	r0, [r4, #-24]
 12840              	.LVL826:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12841              		.loc 18 179 26 view .LVU2949
 12842              	.LBE8458:
 12843              	.LBE8457:
 12844              	.LBB8459:
 12845              	.LBI8454:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12846              		.loc 18 210 7 is_stmt 1 view .LVU2950
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12847              		.loc 18 210 7 is_stmt 0 view .LVU2951
 12848              	.LBE8459:
 12849              	.LBB8460:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12850              		.loc 18 186 7 is_stmt 1 view .LVU2952
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12851              		.loc 18 186 7 is_stmt 0 view .LVU2953
 12852              	.LBE8460:
 12853              	.LBB8461:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 12854              		.loc 18 392 7 is_stmt 1 view .LVU2954
 12855              	.LBB8430:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12856              		.loc 18 346 7 view .LVU2955
 12857              	.LBB8426:
 12858              	.LBB8422:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12859              		.loc 18 346 7 view .LVU2956
 12860              	.LBB8419:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 475


 12861              		.loc 21 387 7 view .LVU2957
 12862              	.LBB8416:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 12863              		.loc 21 389 2 view .LVU2958
 12864              	.LBE8416:
 12865              	.LBE8419:
 12866              	.LBE8422:
 12867              	.LBE8426:
 12868              	.LBE8430:
 12869              	.LBE8461:
 12870              	.LBB8462:
 12871              	.LBB8456:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12872              		.loc 18 211 31 is_stmt 0 view .LVU2959
 12873 00a0 44F8103C 		str	r3, [r4, #-16]
 12874              	.L656:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12875              		.loc 18 211 31 view .LVU2960
 12876              	.LBE8456:
 12877              	.LBE8462:
 12878              	.LBB8463:
 12879              	.LBB8431:
 12880              	.LBB8427:
 12881              	.LBB8423:
 12882              	.LBB8420:
 12883              	.LBB8417:
 12884              		.loc 21 395 2 is_stmt 1 view .LVU2961
 12885              		.loc 21 395 49 is_stmt 0 view .LVU2962
 12886 00a4 2A46     		mov	r2, r5
 12887 00a6 5146     		mov	r1, r10
 12888 00a8 FFF7FEFF 		bl	memcpy
 12889              	.LVL827:
 12890              		.loc 21 395 49 view .LVU2963
 12891              	.LBE8417:
 12892              	.LBE8420:
 12893              	.LBE8423:
 12894              	.LBE8427:
 12895              	.LBE8431:
 12896              	.LBE8463:
 12897              		.loc 22 232 15 view .LVU2964
 12898 00ac 039D     		ldr	r5, [sp, #12]
 12899              	.LVL828:
 12900              	.LBB8464:
 12901              	.LBB8449:
 12902              	.LBB8446:
 12903              	.LBB8443:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12904              		.loc 18 187 28 view .LVU2965
 12905 00ae 54F8180C 		ldr	r0, [r4, #-24]
 12906              	.LBE8443:
 12907              	.LBE8446:
 12908              	.LBE8449:
 12909              	.LBE8464:
 12910              	.LBB8465:
 12911              	.LBB8432:
 12912              	.LBB8428:
 12913              	.LBB8424:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 476


 12914              	.LBB8421:
 12915              	.LBB8418:
 12916              		.loc 21 395 66 view .LVU2966
 12917 00b2 CEE7     		b	.L658
 12918              	.LVL829:
 12919              	.L652:
 12920              		.loc 21 395 66 view .LVU2967
 12921              	.LBE8418:
 12922              	.LBE8421:
 12923              	.LBE8424:
 12924              	.LBE8428:
 12925              	.LBE8432:
 12926              	.LBE8465:
 12927              	.LBE8468:
 12928              	.LBE8472:
 12929              	.LBE8476:
 12930              	.LBE8480:
 12931              	.LBE8484:
 12932              	.LBE8505:
 12933              	.LBE8509:
 12934              	.LBE8513:
 12935              	.LBE8518:
 12936              	.LBE8522:
 12937              	.LBE8527:
 12938              	.LBE8532:
 12939              	.LBE8537:
 12940              	.LBE8543:
 12941              	.LBB8544:
 12942              	.LBB8393:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 12943              		.loc 24 346 18 view .LVU2968
 12944 00b4 2746     		mov	r7, r4
 12945              	.LBE8393:
 12946              	.LBE8544:
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 12947              		.loc 24 1582 6 view .LVU2969
 12948 00b6 0460     		str	r4, [r0]
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 12949              		.loc 24 1583 36 view .LVU2970
 12950 00b8 8460     		str	r4, [r0, #8]
 12951              	.LVL830:
 12952              	.LBB8545:
 12953              		.loc 28 323 5 is_stmt 1 view .LVU2971
 12954              	.LBB8538:
 12955              	.LBB8533:
 12956              	.LBB8528:
 12957              	.LBB8523:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12958              		.loc 28 90 23 view .LVU2972
 12959              	.L653:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 12960              		.loc 28 90 23 is_stmt 0 view .LVU2973
 12961              	.LBE8523:
 12962              	.LBE8528:
 12963              	.LBE8533:
 12964              	.LBE8538:
 12965              	.LBE8545:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 477


 12966              	.LBE8550:
 12967              	.LBE8557:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12968              		.loc 24 631 7 view .LVU2974
 12969 00ba 4046     		mov	r0, r8
 12970              	.LBB8558:
 12971              	.LBB8551:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12972              		.loc 24 1584 28 view .LVU2975
 12973 00bc C8F80470 		str	r7, [r8, #4]
 12974              	.LVL831:
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 12975              		.loc 24 1584 28 view .LVU2976
 12976              	.LBE8551:
 12977              	.LBE8558:
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 12978              		.loc 24 631 7 view .LVU2977
 12979 00c0 04B0     		add	sp, sp, #16
 12980              		.cfi_remember_state
 12981              		.cfi_def_cfa_offset 32
 12982              		@ sp needed
 12983 00c2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 12984              	.LVL832:
 12985              	.L673:
 12986              		.cfi_restore_state
 12987              	.LBB8559:
 12988              	.LBB8552:
 12989              	.LBB8546:
 12990              	.LBB8539:
 12991              	.LBB8534:
 12992              	.LBB8529:
 12993              	.LBB8524:
 12994              	.LBB8519:
 12995              	.LBB8514:
 12996              	.LBB8510:
 12997              	.LBB8506:
 12998              	.LBB8485:
 12999              	.LBB8481:
 13000              	.LBB8477:
 13001              	.LBB8473:
 13002              	.LBB8469:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 13003              		.loc 22 212 28 view .LVU2978
 13004 00c6 0448     		ldr	r0, .L676+4
 13005 00c8 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 13006              	.LVL833:
 13007              	.L672:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 13008              		.loc 22 212 28 view .LVU2979
 13009              	.LBE8469:
 13010              	.LBE8473:
 13011              	.LBE8477:
 13012              	.LBE8481:
 13013              	.LBE8485:
 13014              	.LBE8506:
 13015              	.LBE8510:
 13016              	.LBE8514:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 478


 13017              	.LBE8519:
 13018              	.LBE8524:
 13019              	.LBE8529:
 13020              	.LBE8534:
 13021              	.LBE8539:
 13022              	.LBE8546:
 13023              	.LBB8547:
 13024              	.LBB8381:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 13025              		.loc 24 1770 24 view .LVU2980
 13026 00cc 0348     		ldr	r0, .L676+8
 13027              	.LVL834:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 13028              		.loc 24 1770 24 view .LVU2981
 13029 00ce FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 13030              	.LVL835:
 13031              	.L677:
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 13032              		.loc 24 1770 24 view .LVU2982
 13033 00d2 00BF     		.align	2
 13034              	.L676:
 13035 00d4 F8FFFF7F 		.word	2147483640
 13036 00d8 00000000 		.word	.LC23
 13037 00dc 00000000 		.word	.LC24
 13038              	.LBE8381:
 13039              	.LBE8547:
 13040              	.LBE8552:
 13041              	.LBE8559:
 13042              		.cfi_endproc
 13043              	.LFE5474:
 13045              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_
 13046              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initial
 13047              		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 13048              		.align	1
 13049              		.p2align 2,,3
 13050              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS
 13051              		.syntax unified
 13052              		.thumb
 13053              		.thumb_func
 13054              		.fpu fpv5-d16
 13056              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EE
 13057              	.LVL836:
 13058              	.LFB5506:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 479


 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 480


 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 481


 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 13059              		.loc 33 352 12 is_stmt 1 view -0
 13060              		.cfi_startproc
 13061              		@ args = 0, pretend = 0, frame = 8
 13062              		@ frame_needed = 0, uses_anonymous_args = 0
 13063              		.loc 33 352 12 is_stmt 0 view .LVU2984
 13064 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13065              		.cfi_def_cfa_offset 24
 13066              		.cfi_offset 4, -24
 13067              		.cfi_offset 5, -20
 13068              		.cfi_offset 6, -16
 13069              		.cfi_offset 7, -12
 13070              		.cfi_offset 8, -8
 13071              		.cfi_offset 14, -4
 13072 0004 0446     		mov	r4, r0
 13073              	.LBB8624:
 13074              	.LBB8625:
 13075              	.LBB8626:
 13076              	.LBB8627:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 13077              		.loc 18 193 51 view .LVU2985
 13078 0006 00F10807 		add	r7, r0, #8
 13079              	.LBE8627:
 13080              	.LBE8626:
 13081              	.LBE8625:
 13082              	.LBE8624:
 13083              		.loc 33 352 12 view .LVU2986
 13084 000a 82B0     		sub	sp, sp, #8
 13085              		.cfi_def_cfa_offset 32
 13086              	.LBB8736:
 13087              	.LBB8716:
 13088              	.LBB8628:
 13089              	.LBB8629:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13090              		.loc 21 357 25 view .LVU2987
 13091 000c 0846     		mov	r0, r1
 13092              	.LVL837:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13093              		.loc 21 357 25 view .LVU2988
 13094              	.LBE8629:
 13095              	.LBE8628:
 13096              	.LBB8633:
 13097              	.LBB8634:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13098              		.loc 18 157 35 view .LVU2989
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 482


 13099 000e 2760     		str	r7, [r4]
 13100              	.LBE8634:
 13101              	.LBE8633:
 13102              	.LBE8716:
 13103              	.LBE8736:
 13104              		.loc 33 352 12 view .LVU2990
 13105 0010 8846     		mov	r8, r1
 13106              	.LVL838:
 13107              	.LBB8737:
 13108              	.LBB8717:
 13109              	.LBI8717:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13110              		.loc 37 76 5 is_stmt 1 view .LVU2991
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13111              		.loc 37 76 5 is_stmt 0 view .LVU2992
 13112              	.LBE8717:
 13113              	.LBB8718:
 13114              	.LBI8718:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13115              		.loc 19 144 7 is_stmt 1 view .LVU2993
 13116              	.LBB8719:
 13117              	.LBI8719:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13118              		.loc 20 79 7 view .LVU2994
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13119              		.loc 20 79 7 is_stmt 0 view .LVU2995
 13120              	.LBE8719:
 13121              	.LBE8718:
 13122              	.LBB8720:
 13123              	.LBI8625:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 13124              		.loc 18 525 7 is_stmt 1 view .LVU2996
 13125              	.LBB8638:
 13126              	.LBI8626:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13127              		.loc 18 190 7 view .LVU2997
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13128              		.loc 18 190 7 is_stmt 0 view .LVU2998
 13129              	.LBE8638:
 13130              	.LBB8639:
 13131              	.LBI8633:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 13132              		.loc 18 156 2 is_stmt 1 view .LVU2999
 13133              	.LBB8637:
 13134              	.LBB8635:
 13135              	.LBI8635:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13136              		.loc 19 147 7 view .LVU3000
 13137              	.LBB8636:
 13138              	.LBI8636:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13139              		.loc 20 82 7 view .LVU3001
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13140              		.loc 20 82 7 is_stmt 0 view .LVU3002
 13141              	.LBE8636:
 13142              	.LBE8635:
 13143              	.LBE8637:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 483


 13144              	.LBE8639:
 13145              	.LBB8640:
 13146              	.LBI8628:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13147              		.loc 21 351 7 is_stmt 1 view .LVU3003
 13148              	.LBB8630:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13149              		.loc 21 357 2 view .LVU3004
 13150              	.LBE8630:
 13151              	.LBE8640:
 13152              	.LBE8720:
 13153              	.LBE8737:
 13154              		.loc 33 352 12 is_stmt 0 view .LVU3005
 13155 0012 1546     		mov	r5, r2
 13156              	.LBB8738:
 13157              	.LBB8721:
 13158              	.LBB8641:
 13159              	.LBB8631:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13160              		.loc 21 357 25 view .LVU3006
 13161 0014 FFF7FEFF 		bl	strlen
 13162              	.LVL839:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13163              		.loc 21 357 25 view .LVU3007
 13164              	.LBE8631:
 13165              	.LBE8641:
 13166              	.LBB8642:
 13167              	.LBB8643:
 13168              	.LBB8644:
 13169              	.LBB8645:
 13170              	.LBB8646:
 13171              	.LBB8647:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13172              		.loc 22 217 2 view .LVU3008
 13173 0018 0F28     		cmp	r0, #15
 13174              	.LBE8647:
 13175              	.LBE8646:
 13176              	.LBE8645:
 13177              	.LBE8644:
 13178              	.LBE8643:
 13179              	.LBE8642:
 13180              	.LBB8712:
 13181              	.LBB8632:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13182              		.loc 21 357 25 view .LVU3009
 13183 001a 0646     		mov	r6, r0
 13184              	.LVL840:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13185              		.loc 21 357 25 view .LVU3010
 13186              	.LBE8632:
 13187              	.LBE8712:
 13188              	.LBB8713:
 13189              	.LBI8642:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 13190              		.loc 18 263 9 is_stmt 1 view .LVU3011
 13191              	.LBB8709:
 13192              	.LBB8706:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 484


 13193              	.LBI8644:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 13194              		.loc 18 243 9 view .LVU3012
 13195              	.LBB8703:
 13196              	.LBB8700:
 13197              	.LBI8646:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 13198              		.loc 22 206 7 view .LVU3013
 13199              	.LBB8697:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 13200              		.loc 22 215 12 is_stmt 0 view .LVU3014
 13201 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13202              		.loc 22 217 2 view .LVU3015
 13203 001e 17D8     		bhi	.L687
 13204              	.LVL841:
 13205              	.LBB8648:
 13206              	.LBI8648:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13207              		.loc 18 186 7 is_stmt 1 view .LVU3016
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13208              		.loc 18 186 7 is_stmt 0 view .LVU3017
 13209              	.LBE8648:
 13210              	.LBB8649:
 13211              	.LBI8649:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13212              		.loc 18 396 7 is_stmt 1 view .LVU3018
 13213              	.LBB8650:
 13214              	.LBI8650:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13215              		.loc 18 346 7 view .LVU3019
 13216              	.LBB8651:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 13217              		.loc 18 348 2 is_stmt 0 view .LVU3020
 13218 0020 0128     		cmp	r0, #1
 13219 0022 12D1     		bne	.L681
 13220              	.LVL842:
 13221              	.LBB8652:
 13222              	.LBI8652:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13223              		.loc 21 321 7 is_stmt 1 view .LVU3021
 13224              	.LBB8653:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13225              		.loc 21 322 9 view .LVU3022
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13226              		.loc 21 322 14 is_stmt 0 view .LVU3023
 13227 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 13228 0028 2372     		strb	r3, [r4, #8]
 13229              	.LVL843:
 13230              	.L682:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13231              		.loc 21 322 14 view .LVU3024
 13232              	.LBE8653:
 13233              	.LBE8652:
 13234              	.LBE8651:
 13235              	.LBE8650:
 13236              	.LBE8649:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 485


 13237              	.LBB8669:
 13238              	.LBI8669:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13239              		.loc 18 214 7 is_stmt 1 view .LVU3025
 13240              	.LBB8670:
 13241              	.LBB8671:
 13242              	.LBI8671:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13243              		.loc 18 182 7 view .LVU3026
 13244              	.LBE8671:
 13245              	.LBB8673:
 13246              	.LBB8674:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13247              		.loc 21 322 14 is_stmt 0 view .LVU3027
 13248 002a 0023     		movs	r3, #0
 13249              	.LBE8674:
 13250              	.LBE8673:
 13251              	.LBB8677:
 13252              	.LBB8672:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13253              		.loc 18 183 26 view .LVU3028
 13254 002c 6660     		str	r6, [r4, #4]
 13255              	.LVL844:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13256              		.loc 18 183 26 view .LVU3029
 13257              	.LBE8672:
 13258              	.LBE8677:
 13259              	.LBB8678:
 13260              	.LBI8678:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13261              		.loc 18 186 7 is_stmt 1 view .LVU3030
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13262              		.loc 18 186 7 is_stmt 0 view .LVU3031
 13263              	.LBE8678:
 13264              	.LBB8680:
 13265              	.LBI8673:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13266              		.loc 21 321 7 is_stmt 1 view .LVU3032
 13267              	.LBB8675:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13268              		.loc 21 322 9 view .LVU3033
 13269              	.LBE8675:
 13270              	.LBE8680:
 13271              	.LBE8670:
 13272              	.LBE8669:
 13273              	.LBE8697:
 13274              	.LBE8700:
 13275              	.LBE8703:
 13276              	.LBE8706:
 13277              	.LBE8709:
 13278              	.LBE8713:
 13279              	.LBE8721:
 13280              	.LBE8738:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13281              		.loc 33 353 68 is_stmt 0 view .LVU3034
 13282 002e 2046     		mov	r0, r4
 13283              	.LBB8739:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 486


 13284              	.LBB8722:
 13285              	.LBB8714:
 13286              	.LBB8710:
 13287              	.LBB8707:
 13288              	.LBB8704:
 13289              	.LBB8701:
 13290              	.LBB8698:
 13291              	.LBB8685:
 13292              	.LBB8683:
 13293              	.LBB8681:
 13294              	.LBB8676:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13295              		.loc 21 322 14 view .LVU3035
 13296 0030 BB55     		strb	r3, [r7, r6]
 13297              	.LVL845:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13298              		.loc 21 322 14 view .LVU3036
 13299              	.LBE8676:
 13300              	.LBE8681:
 13301              	.LBE8683:
 13302              	.LBE8685:
 13303              	.LBE8698:
 13304              	.LBE8701:
 13305              	.LBE8704:
 13306              	.LBE8707:
 13307              	.LBE8710:
 13308              	.LBE8714:
 13309              	.LBE8722:
 13310              	.LBB8723:
 13311              	.LBI8723:
 13312              		.loc 19 162 7 is_stmt 1 view .LVU3037
 13313              	.LBB8724:
 13314              	.LBI8724:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13315              		.loc 20 89 7 view .LVU3038
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13316              		.loc 20 89 7 is_stmt 0 view .LVU3039
 13317              	.LBE8724:
 13318              	.LBE8723:
 13319              	.LBB8725:
 13320              	.LBI8725:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13321              		.loc 37 76 5 is_stmt 1 view .LVU3040
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13322              		.loc 37 76 5 is_stmt 0 view .LVU3041
 13323              	.LBE8725:
 13324              	.LBB8726:
 13325              	.LBI8726:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13326              		.loc 24 572 7 is_stmt 1 view .LVU3042
 13327              	.LBB8727:
 13328              	.LBI8727:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13329              		.loc 24 308 7 view .LVU3043
 13330              	.LBB8728:
 13331              	.LBI8728:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 487


 13332              		.loc 24 143 2 view .LVU3044
 13333              	.LBB8729:
 13334              	.LBI8729:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13335              		.loc 37 101 5 view .LVU3045
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13336              		.loc 37 101 5 is_stmt 0 view .LVU3046
 13337              	.LBE8729:
 13338              	.LBB8730:
 13339              	.LBI8730:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13340              		.loc 19 147 7 is_stmt 1 view .LVU3047
 13341              	.LBB8731:
 13342              	.LBI8731:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13343              		.loc 20 82 7 view .LVU3048
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13344              		.loc 20 82 7 is_stmt 0 view .LVU3049
 13345              	.LBE8731:
 13346              	.LBE8730:
 13347              	.LBB8732:
 13348              	.LBI8732:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13349              		.loc 37 101 5 is_stmt 1 view .LVU3050
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13350              		.loc 37 101 5 is_stmt 0 view .LVU3051
 13351              	.LBE8732:
 13352              	.LBB8733:
 13353              	.LBI8733:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13354              		.loc 24 102 2 is_stmt 1 view .LVU3052
 13355              	.LBB8734:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13356              		.loc 24 104 43 is_stmt 0 view .LVU3053
 13357 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13358              		.loc 24 105 17 view .LVU3054
 13359 0036 2B60     		str	r3, [r5]
 13360              	.LVL846:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13361              		.loc 24 104 43 view .LVU3055
 13362 0038 E261     		str	r2, [r4, #28]
 13363 003a AA68     		ldr	r2, [r5, #8]
 13364 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13365              		.loc 24 105 33 view .LVU3056
 13366 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13367              		.loc 24 105 57 view .LVU3057
 13368 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13369              		.loc 24 104 43 view .LVU3058
 13370 0042 2262     		str	r2, [r4, #32]
 13371              	.LBE8734:
 13372              	.LBE8733:
 13373              	.LBE8728:
 13374              	.LBE8727:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 488


 13375              	.LBE8726:
 13376              	.LBE8739:
 13377              		.loc 33 353 68 view .LVU3059
 13378 0044 02B0     		add	sp, sp, #8
 13379              		.cfi_remember_state
 13380              		.cfi_def_cfa_offset 24
 13381              		@ sp needed
 13382 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13383              	.LVL847:
 13384              	.L681:
 13385              		.cfi_restore_state
 13386              	.LBB8740:
 13387              	.LBB8735:
 13388              	.LBB8715:
 13389              	.LBB8711:
 13390              	.LBB8708:
 13391              	.LBB8705:
 13392              	.LBB8702:
 13393              	.LBB8699:
 13394              	.LBB8686:
 13395              	.LBB8666:
 13396              	.LBB8663:
 13397              	.LBB8654:
 13398              	.LBI8654:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13399              		.loc 18 346 7 is_stmt 1 view .LVU3060
 13400              	.LBB8655:
 13401              	.LBI8655:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13402              		.loc 21 387 7 view .LVU3061
 13403              	.LBB8656:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13404              		.loc 21 389 2 view .LVU3062
 13405 004a 0028     		cmp	r0, #0
 13406 004c EDD0     		beq	.L682
 13407 004e 08E0     		b	.L680
 13408              	.LVL848:
 13409              	.L687:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13410              		.loc 21 389 2 is_stmt 0 view .LVU3063
 13411              	.LBE8656:
 13412              	.LBE8655:
 13413              	.LBE8654:
 13414              	.LBE8663:
 13415              	.LBE8666:
 13416              	.LBE8686:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13417              		.loc 22 219 13 view .LVU3064
 13418 0050 0022     		movs	r2, #0
 13419 0052 01A9     		add	r1, sp, #4
 13420 0054 2046     		mov	r0, r4
 13421              	.LVL849:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13422              		.loc 22 219 13 view .LVU3065
 13423 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13424              	.LVL850:
 13425              	.LBB8687:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 489


 13426              	.LBB8688:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13427              		.loc 18 211 31 view .LVU3066
 13428 005a 019B     		ldr	r3, [sp, #4]
 13429              	.LBE8688:
 13430              	.LBE8687:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13431              		.loc 22 219 13 view .LVU3067
 13432 005c 0746     		mov	r7, r0
 13433              	.LVL851:
 13434              	.LBB8690:
 13435              	.LBI8690:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13436              		.loc 18 178 7 is_stmt 1 view .LVU3068
 13437              	.LBB8691:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13438              		.loc 18 179 26 is_stmt 0 view .LVU3069
 13439 005e 2060     		str	r0, [r4]
 13440              	.LVL852:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13441              		.loc 18 179 26 view .LVU3070
 13442              	.LBE8691:
 13443              	.LBE8690:
 13444              	.LBB8692:
 13445              	.LBI8687:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13446              		.loc 18 210 7 is_stmt 1 view .LVU3071
 13447              	.LBB8689:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13448              		.loc 18 211 31 is_stmt 0 view .LVU3072
 13449 0060 A360     		str	r3, [r4, #8]
 13450              	.LVL853:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13451              		.loc 18 211 31 view .LVU3073
 13452              	.LBE8689:
 13453              	.LBE8692:
 13454              	.LBB8693:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13455              		.loc 18 186 7 is_stmt 1 view .LVU3074
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13456              		.loc 18 186 7 is_stmt 0 view .LVU3075
 13457              	.LBE8693:
 13458              	.LBB8694:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13459              		.loc 18 396 7 is_stmt 1 view .LVU3076
 13460              	.LBB8667:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13461              		.loc 18 346 7 view .LVU3077
 13462              	.LBB8664:
 13463              	.LBB8661:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13464              		.loc 18 346 7 view .LVU3078
 13465              	.LBB8659:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13466              		.loc 21 387 7 view .LVU3079
 13467              	.LBB8657:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 490


 13468              		.loc 21 389 2 view .LVU3080
 13469              	.L680:
 13470              		.loc 21 395 2 view .LVU3081
 13471              		.loc 21 395 49 is_stmt 0 view .LVU3082
 13472 0062 3246     		mov	r2, r6
 13473 0064 3846     		mov	r0, r7
 13474 0066 4146     		mov	r1, r8
 13475 0068 FFF7FEFF 		bl	memcpy
 13476              	.LVL854:
 13477              	.LBE8657:
 13478              	.LBE8659:
 13479              	.LBE8661:
 13480              	.LBE8664:
 13481              	.LBE8667:
 13482              	.LBE8694:
 13483              		.loc 22 232 15 view .LVU3083
 13484 006c 019E     		ldr	r6, [sp, #4]
 13485              	.LVL855:
 13486              	.LBB8695:
 13487              	.LBB8684:
 13488              	.LBB8682:
 13489              	.LBB8679:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13490              		.loc 18 187 28 view .LVU3084
 13491 006e 2768     		ldr	r7, [r4]
 13492              	.LVL856:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13493              		.loc 18 187 28 view .LVU3085
 13494              	.LBE8679:
 13495              	.LBE8682:
 13496              	.LBE8684:
 13497              	.LBE8695:
 13498              	.LBB8696:
 13499              	.LBB8668:
 13500              	.LBB8665:
 13501              	.LBB8662:
 13502              	.LBB8660:
 13503              	.LBB8658:
 13504              		.loc 21 395 66 view .LVU3086
 13505 0070 DBE7     		b	.L682
 13506              	.LBE8658:
 13507              	.LBE8660:
 13508              	.LBE8662:
 13509              	.LBE8665:
 13510              	.LBE8668:
 13511              	.LBE8696:
 13512              	.LBE8699:
 13513              	.LBE8702:
 13514              	.LBE8705:
 13515              	.LBE8708:
 13516              	.LBE8711:
 13517              	.LBE8715:
 13518              	.LBE8735:
 13519              	.LBE8740:
 13520              		.cfi_endproc
 13521              	.LFE5506:
 13523              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 491


 13524              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 13525 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 13526              		.align	1
 13527              		.p2align 2,,3
 13528              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS
 13529              		.syntax unified
 13530              		.thumb
 13531              		.thumb_func
 13532              		.fpu fpv5-d16
 13534              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EE
 13535              	.LVL857:
 13536              	.LFB5510:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13537              		.loc 33 352 12 is_stmt 1 view -0
 13538              		.cfi_startproc
 13539              		@ args = 0, pretend = 0, frame = 8
 13540              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13541              		.loc 33 352 12 is_stmt 0 view .LVU3088
 13542 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 13543              		.cfi_def_cfa_offset 24
 13544              		.cfi_offset 4, -24
 13545              		.cfi_offset 5, -20
 13546              		.cfi_offset 6, -16
 13547              		.cfi_offset 7, -12
 13548              		.cfi_offset 8, -8
 13549              		.cfi_offset 14, -4
 13550 0004 0446     		mov	r4, r0
 13551              	.LBB8805:
 13552              	.LBB8806:
 13553              	.LBB8807:
 13554              	.LBB8808:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 13555              		.loc 18 193 51 view .LVU3089
 13556 0006 00F10807 		add	r7, r0, #8
 13557              	.LBE8808:
 13558              	.LBE8807:
 13559              	.LBE8806:
 13560              	.LBE8805:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13561              		.loc 33 352 12 view .LVU3090
 13562 000a 82B0     		sub	sp, sp, #8
 13563              		.cfi_def_cfa_offset 32
 13564              	.LBB8917:
 13565              	.LBB8897:
 13566              	.LBB8809:
 13567              	.LBB8810:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13568              		.loc 21 357 25 view .LVU3091
 13569 000c 0846     		mov	r0, r1
 13570              	.LVL858:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13571              		.loc 21 357 25 view .LVU3092
 13572              	.LBE8810:
 13573              	.LBE8809:
 13574              	.LBB8814:
 13575              	.LBB8815:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 492


 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13576              		.loc 18 157 35 view .LVU3093
 13577 000e 2760     		str	r7, [r4]
 13578              	.LBE8815:
 13579              	.LBE8814:
 13580              	.LBE8897:
 13581              	.LBE8917:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13582              		.loc 33 352 12 view .LVU3094
 13583 0010 8846     		mov	r8, r1
 13584              	.LVL859:
 13585              	.LBB8918:
 13586              	.LBB8898:
 13587              	.LBI8898:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13588              		.loc 37 76 5 is_stmt 1 view .LVU3095
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13589              		.loc 37 76 5 is_stmt 0 view .LVU3096
 13590              	.LBE8898:
 13591              	.LBB8899:
 13592              	.LBI8899:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13593              		.loc 19 144 7 is_stmt 1 view .LVU3097
 13594              	.LBB8900:
 13595              	.LBI8900:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13596              		.loc 20 79 7 view .LVU3098
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13597              		.loc 20 79 7 is_stmt 0 view .LVU3099
 13598              	.LBE8900:
 13599              	.LBE8899:
 13600              	.LBB8901:
 13601              	.LBI8806:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 13602              		.loc 18 525 7 is_stmt 1 view .LVU3100
 13603              	.LBB8819:
 13604              	.LBI8807:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13605              		.loc 18 190 7 view .LVU3101
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13606              		.loc 18 190 7 is_stmt 0 view .LVU3102
 13607              	.LBE8819:
 13608              	.LBB8820:
 13609              	.LBI8814:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 13610              		.loc 18 156 2 is_stmt 1 view .LVU3103
 13611              	.LBB8818:
 13612              	.LBB8816:
 13613              	.LBI8816:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13614              		.loc 19 147 7 view .LVU3104
 13615              	.LBB8817:
 13616              	.LBI8817:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13617              		.loc 20 82 7 view .LVU3105
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13618              		.loc 20 82 7 is_stmt 0 view .LVU3106
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 493


 13619              	.LBE8817:
 13620              	.LBE8816:
 13621              	.LBE8818:
 13622              	.LBE8820:
 13623              	.LBB8821:
 13624              	.LBI8809:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13625              		.loc 21 351 7 is_stmt 1 view .LVU3107
 13626              	.LBB8811:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13627              		.loc 21 357 2 view .LVU3108
 13628              	.LBE8811:
 13629              	.LBE8821:
 13630              	.LBE8901:
 13631              	.LBE8918:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 13632              		.loc 33 352 12 is_stmt 0 view .LVU3109
 13633 0012 1546     		mov	r5, r2
 13634              	.LBB8919:
 13635              	.LBB8902:
 13636              	.LBB8822:
 13637              	.LBB8812:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13638              		.loc 21 357 25 view .LVU3110
 13639 0014 FFF7FEFF 		bl	strlen
 13640              	.LVL860:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13641              		.loc 21 357 25 view .LVU3111
 13642              	.LBE8812:
 13643              	.LBE8822:
 13644              	.LBB8823:
 13645              	.LBB8824:
 13646              	.LBB8825:
 13647              	.LBB8826:
 13648              	.LBB8827:
 13649              	.LBB8828:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13650              		.loc 22 217 2 view .LVU3112
 13651 0018 0F28     		cmp	r0, #15
 13652              	.LBE8828:
 13653              	.LBE8827:
 13654              	.LBE8826:
 13655              	.LBE8825:
 13656              	.LBE8824:
 13657              	.LBE8823:
 13658              	.LBB8893:
 13659              	.LBB8813:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13660              		.loc 21 357 25 view .LVU3113
 13661 001a 0646     		mov	r6, r0
 13662              	.LVL861:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 13663              		.loc 21 357 25 view .LVU3114
 13664              	.LBE8813:
 13665              	.LBE8893:
 13666              	.LBB8894:
 13667              	.LBI8823:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 494


 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 13668              		.loc 18 263 9 is_stmt 1 view .LVU3115
 13669              	.LBB8890:
 13670              	.LBB8887:
 13671              	.LBI8825:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 13672              		.loc 18 243 9 view .LVU3116
 13673              	.LBB8884:
 13674              	.LBB8881:
 13675              	.LBI8827:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 13676              		.loc 22 206 7 view .LVU3117
 13677              	.LBB8878:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 13678              		.loc 22 215 12 is_stmt 0 view .LVU3118
 13679 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 13680              		.loc 22 217 2 view .LVU3119
 13681 001e 17D8     		bhi	.L697
 13682              	.LVL862:
 13683              	.LBB8829:
 13684              	.LBI8829:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13685              		.loc 18 186 7 is_stmt 1 view .LVU3120
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13686              		.loc 18 186 7 is_stmt 0 view .LVU3121
 13687              	.LBE8829:
 13688              	.LBB8830:
 13689              	.LBI8830:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13690              		.loc 18 396 7 is_stmt 1 view .LVU3122
 13691              	.LBB8831:
 13692              	.LBI8831:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13693              		.loc 18 346 7 view .LVU3123
 13694              	.LBB8832:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 13695              		.loc 18 348 2 is_stmt 0 view .LVU3124
 13696 0020 0128     		cmp	r0, #1
 13697 0022 12D1     		bne	.L691
 13698              	.LVL863:
 13699              	.LBB8833:
 13700              	.LBI8833:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13701              		.loc 21 321 7 is_stmt 1 view .LVU3125
 13702              	.LBB8834:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13703              		.loc 21 322 9 view .LVU3126
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13704              		.loc 21 322 14 is_stmt 0 view .LVU3127
 13705 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 13706 0028 2372     		strb	r3, [r4, #8]
 13707              	.LVL864:
 13708              	.L692:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13709              		.loc 21 322 14 view .LVU3128
 13710              	.LBE8834:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 495


 13711              	.LBE8833:
 13712              	.LBE8832:
 13713              	.LBE8831:
 13714              	.LBE8830:
 13715              	.LBB8850:
 13716              	.LBI8850:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13717              		.loc 18 214 7 is_stmt 1 view .LVU3129
 13718              	.LBB8851:
 13719              	.LBB8852:
 13720              	.LBI8852:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13721              		.loc 18 182 7 view .LVU3130
 13722              	.LBE8852:
 13723              	.LBB8854:
 13724              	.LBB8855:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13725              		.loc 21 322 14 is_stmt 0 view .LVU3131
 13726 002a 0023     		movs	r3, #0
 13727              	.LBE8855:
 13728              	.LBE8854:
 13729              	.LBB8858:
 13730              	.LBB8853:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13731              		.loc 18 183 26 view .LVU3132
 13732 002c 6660     		str	r6, [r4, #4]
 13733              	.LVL865:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13734              		.loc 18 183 26 view .LVU3133
 13735              	.LBE8853:
 13736              	.LBE8858:
 13737              	.LBB8859:
 13738              	.LBI8859:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13739              		.loc 18 186 7 is_stmt 1 view .LVU3134
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13740              		.loc 18 186 7 is_stmt 0 view .LVU3135
 13741              	.LBE8859:
 13742              	.LBB8861:
 13743              	.LBI8854:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13744              		.loc 21 321 7 is_stmt 1 view .LVU3136
 13745              	.LBB8856:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13746              		.loc 21 322 9 view .LVU3137
 13747              	.LBE8856:
 13748              	.LBE8861:
 13749              	.LBE8851:
 13750              	.LBE8850:
 13751              	.LBE8878:
 13752              	.LBE8881:
 13753              	.LBE8884:
 13754              	.LBE8887:
 13755              	.LBE8890:
 13756              	.LBE8894:
 13757              	.LBE8902:
 13758              	.LBE8919:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 496


 13759              		.loc 33 353 68 is_stmt 0 view .LVU3138
 13760 002e 2046     		mov	r0, r4
 13761              	.LBB8920:
 13762              	.LBB8903:
 13763              	.LBB8895:
 13764              	.LBB8891:
 13765              	.LBB8888:
 13766              	.LBB8885:
 13767              	.LBB8882:
 13768              	.LBB8879:
 13769              	.LBB8866:
 13770              	.LBB8864:
 13771              	.LBB8862:
 13772              	.LBB8857:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13773              		.loc 21 322 14 view .LVU3139
 13774 0030 BB55     		strb	r3, [r7, r6]
 13775              	.LVL866:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13776              		.loc 21 322 14 view .LVU3140
 13777              	.LBE8857:
 13778              	.LBE8862:
 13779              	.LBE8864:
 13780              	.LBE8866:
 13781              	.LBE8879:
 13782              	.LBE8882:
 13783              	.LBE8885:
 13784              	.LBE8888:
 13785              	.LBE8891:
 13786              	.LBE8895:
 13787              	.LBE8903:
 13788              	.LBB8904:
 13789              	.LBI8904:
 13790              		.loc 19 162 7 is_stmt 1 view .LVU3141
 13791              	.LBB8905:
 13792              	.LBI8905:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13793              		.loc 20 89 7 view .LVU3142
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13794              		.loc 20 89 7 is_stmt 0 view .LVU3143
 13795              	.LBE8905:
 13796              	.LBE8904:
 13797              	.LBB8906:
 13798              	.LBI8906:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13799              		.loc 37 76 5 is_stmt 1 view .LVU3144
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 13800              		.loc 37 76 5 is_stmt 0 view .LVU3145
 13801              	.LBE8906:
 13802              	.LBB8907:
 13803              	.LBI8907:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13804              		.loc 24 572 7 is_stmt 1 view .LVU3146
 13805              	.LBB8908:
 13806              	.LBI8908:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 13807              		.loc 24 308 7 view .LVU3147
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 497


 13808              	.LBB8909:
 13809              	.LBI8909:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 13810              		.loc 24 143 2 view .LVU3148
 13811              	.LBB8910:
 13812              	.LBI8910:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13813              		.loc 37 101 5 view .LVU3149
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13814              		.loc 37 101 5 is_stmt 0 view .LVU3150
 13815              	.LBE8910:
 13816              	.LBB8911:
 13817              	.LBI8911:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13818              		.loc 19 147 7 is_stmt 1 view .LVU3151
 13819              	.LBB8912:
 13820              	.LBI8912:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13821              		.loc 20 82 7 view .LVU3152
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13822              		.loc 20 82 7 is_stmt 0 view .LVU3153
 13823              	.LBE8912:
 13824              	.LBE8911:
 13825              	.LBB8913:
 13826              	.LBI8913:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13827              		.loc 37 101 5 is_stmt 1 view .LVU3154
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13828              		.loc 37 101 5 is_stmt 0 view .LVU3155
 13829              	.LBE8913:
 13830              	.LBB8914:
 13831              	.LBI8914:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 13832              		.loc 24 102 2 is_stmt 1 view .LVU3156
 13833              	.LBB8915:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13834              		.loc 24 104 43 is_stmt 0 view .LVU3157
 13835 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13836              		.loc 24 105 17 view .LVU3158
 13837 0036 2B60     		str	r3, [r5]
 13838              	.LVL867:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13839              		.loc 24 104 43 view .LVU3159
 13840 0038 E261     		str	r2, [r4, #28]
 13841 003a AA68     		ldr	r2, [r5, #8]
 13842 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13843              		.loc 24 105 33 view .LVU3160
 13844 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 13845              		.loc 24 105 57 view .LVU3161
 13846 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 13847              		.loc 24 104 43 view .LVU3162
 13848 0042 2262     		str	r2, [r4, #32]
 13849              	.LBE8915:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 498


 13850              	.LBE8914:
 13851              	.LBE8909:
 13852              	.LBE8908:
 13853              	.LBE8907:
 13854              	.LBE8920:
 13855              		.loc 33 353 68 view .LVU3163
 13856 0044 02B0     		add	sp, sp, #8
 13857              		.cfi_remember_state
 13858              		.cfi_def_cfa_offset 24
 13859              		@ sp needed
 13860 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 13861              	.LVL868:
 13862              	.L691:
 13863              		.cfi_restore_state
 13864              	.LBB8921:
 13865              	.LBB8916:
 13866              	.LBB8896:
 13867              	.LBB8892:
 13868              	.LBB8889:
 13869              	.LBB8886:
 13870              	.LBB8883:
 13871              	.LBB8880:
 13872              	.LBB8867:
 13873              	.LBB8847:
 13874              	.LBB8844:
 13875              	.LBB8835:
 13876              	.LBI8835:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13877              		.loc 18 346 7 is_stmt 1 view .LVU3164
 13878              	.LBB8836:
 13879              	.LBI8836:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 13880              		.loc 21 387 7 view .LVU3165
 13881              	.LBB8837:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13882              		.loc 21 389 2 view .LVU3166
 13883 004a 0028     		cmp	r0, #0
 13884 004c EDD0     		beq	.L692
 13885 004e 08E0     		b	.L690
 13886              	.LVL869:
 13887              	.L697:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13888              		.loc 21 389 2 is_stmt 0 view .LVU3167
 13889              	.LBE8837:
 13890              	.LBE8836:
 13891              	.LBE8835:
 13892              	.LBE8844:
 13893              	.LBE8847:
 13894              	.LBE8867:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13895              		.loc 22 219 13 view .LVU3168
 13896 0050 0022     		movs	r2, #0
 13897 0052 01A9     		add	r1, sp, #4
 13898 0054 2046     		mov	r0, r4
 13899              	.LVL870:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13900              		.loc 22 219 13 view .LVU3169
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 499


 13901 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 13902              	.LVL871:
 13903              	.LBB8868:
 13904              	.LBB8869:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13905              		.loc 18 211 31 view .LVU3170
 13906 005a 019B     		ldr	r3, [sp, #4]
 13907              	.LBE8869:
 13908              	.LBE8868:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 13909              		.loc 22 219 13 view .LVU3171
 13910 005c 0746     		mov	r7, r0
 13911              	.LVL872:
 13912              	.LBB8871:
 13913              	.LBI8871:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 13914              		.loc 18 178 7 is_stmt 1 view .LVU3172
 13915              	.LBB8872:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13916              		.loc 18 179 26 is_stmt 0 view .LVU3173
 13917 005e 2060     		str	r0, [r4]
 13918              	.LVL873:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13919              		.loc 18 179 26 view .LVU3174
 13920              	.LBE8872:
 13921              	.LBE8871:
 13922              	.LBB8873:
 13923              	.LBI8868:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13924              		.loc 18 210 7 is_stmt 1 view .LVU3175
 13925              	.LBB8870:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13926              		.loc 18 211 31 is_stmt 0 view .LVU3176
 13927 0060 A360     		str	r3, [r4, #8]
 13928              	.LVL874:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13929              		.loc 18 211 31 view .LVU3177
 13930              	.LBE8870:
 13931              	.LBE8873:
 13932              	.LBB8874:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13933              		.loc 18 186 7 is_stmt 1 view .LVU3178
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 13934              		.loc 18 186 7 is_stmt 0 view .LVU3179
 13935              	.LBE8874:
 13936              	.LBB8875:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 13937              		.loc 18 396 7 is_stmt 1 view .LVU3180
 13938              	.LBB8848:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13939              		.loc 18 346 7 view .LVU3181
 13940              	.LBB8845:
 13941              	.LBB8842:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13942              		.loc 18 346 7 view .LVU3182
 13943              	.LBB8840:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 500


 13944              		.loc 21 387 7 view .LVU3183
 13945              	.LBB8838:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 13946              		.loc 21 389 2 view .LVU3184
 13947              	.L690:
 13948              		.loc 21 395 2 view .LVU3185
 13949              		.loc 21 395 49 is_stmt 0 view .LVU3186
 13950 0062 3246     		mov	r2, r6
 13951 0064 3846     		mov	r0, r7
 13952 0066 4146     		mov	r1, r8
 13953 0068 FFF7FEFF 		bl	memcpy
 13954              	.LVL875:
 13955              	.LBE8838:
 13956              	.LBE8840:
 13957              	.LBE8842:
 13958              	.LBE8845:
 13959              	.LBE8848:
 13960              	.LBE8875:
 13961              		.loc 22 232 15 view .LVU3187
 13962 006c 019E     		ldr	r6, [sp, #4]
 13963              	.LVL876:
 13964              	.LBB8876:
 13965              	.LBB8865:
 13966              	.LBB8863:
 13967              	.LBB8860:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13968              		.loc 18 187 28 view .LVU3188
 13969 006e 2768     		ldr	r7, [r4]
 13970              	.LVL877:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13971              		.loc 18 187 28 view .LVU3189
 13972              	.LBE8860:
 13973              	.LBE8863:
 13974              	.LBE8865:
 13975              	.LBE8876:
 13976              	.LBB8877:
 13977              	.LBB8849:
 13978              	.LBB8846:
 13979              	.LBB8843:
 13980              	.LBB8841:
 13981              	.LBB8839:
 13982              		.loc 21 395 66 view .LVU3190
 13983 0070 DBE7     		b	.L692
 13984              	.LBE8839:
 13985              	.LBE8841:
 13986              	.LBE8843:
 13987              	.LBE8846:
 13988              	.LBE8849:
 13989              	.LBE8877:
 13990              	.LBE8880:
 13991              	.LBE8883:
 13992              	.LBE8886:
 13993              	.LBE8889:
 13994              	.LBE8892:
 13995              	.LBE8896:
 13996              	.LBE8916:
 13997              	.LBE8921:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 501


 13998              		.cfi_endproc
 13999              	.LFE5510:
 14001              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS
 14002              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 14003 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 14004              		.align	1
 14005              		.p2align 2,,3
 14006              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS
 14007              		.syntax unified
 14008              		.thumb
 14009              		.thumb_func
 14010              		.fpu fpv5-d16
 14012              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS9_Lb1EE
 14013              	.LVL878:
 14014              	.LFB5514:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14015              		.loc 33 352 12 is_stmt 1 view -0
 14016              		.cfi_startproc
 14017              		@ args = 0, pretend = 0, frame = 8
 14018              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14019              		.loc 33 352 12 is_stmt 0 view .LVU3192
 14020 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 14021              		.cfi_def_cfa_offset 24
 14022              		.cfi_offset 4, -24
 14023              		.cfi_offset 5, -20
 14024              		.cfi_offset 6, -16
 14025              		.cfi_offset 7, -12
 14026              		.cfi_offset 8, -8
 14027              		.cfi_offset 14, -4
 14028 0004 0446     		mov	r4, r0
 14029              	.LBB8986:
 14030              	.LBB8987:
 14031              	.LBB8988:
 14032              	.LBB8989:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 14033              		.loc 18 193 51 view .LVU3193
 14034 0006 00F10807 		add	r7, r0, #8
 14035              	.LBE8989:
 14036              	.LBE8988:
 14037              	.LBE8987:
 14038              	.LBE8986:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14039              		.loc 33 352 12 view .LVU3194
 14040 000a 82B0     		sub	sp, sp, #8
 14041              		.cfi_def_cfa_offset 32
 14042              	.LBB9098:
 14043              	.LBB9078:
 14044              	.LBB8990:
 14045              	.LBB8991:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14046              		.loc 21 357 25 view .LVU3195
 14047 000c 0846     		mov	r0, r1
 14048              	.LVL879:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14049              		.loc 21 357 25 view .LVU3196
 14050              	.LBE8991:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 502


 14051              	.LBE8990:
 14052              	.LBB8995:
 14053              	.LBB8996:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14054              		.loc 18 157 35 view .LVU3197
 14055 000e 2760     		str	r7, [r4]
 14056              	.LBE8996:
 14057              	.LBE8995:
 14058              	.LBE9078:
 14059              	.LBE9098:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14060              		.loc 33 352 12 view .LVU3198
 14061 0010 8846     		mov	r8, r1
 14062              	.LVL880:
 14063              	.LBB9099:
 14064              	.LBB9079:
 14065              	.LBI9079:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14066              		.loc 37 76 5 is_stmt 1 view .LVU3199
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14067              		.loc 37 76 5 is_stmt 0 view .LVU3200
 14068              	.LBE9079:
 14069              	.LBB9080:
 14070              	.LBI9080:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14071              		.loc 19 144 7 is_stmt 1 view .LVU3201
 14072              	.LBB9081:
 14073              	.LBI9081:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14074              		.loc 20 79 7 view .LVU3202
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14075              		.loc 20 79 7 is_stmt 0 view .LVU3203
 14076              	.LBE9081:
 14077              	.LBE9080:
 14078              	.LBB9082:
 14079              	.LBI8987:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 14080              		.loc 18 525 7 is_stmt 1 view .LVU3204
 14081              	.LBB9000:
 14082              	.LBI8988:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14083              		.loc 18 190 7 view .LVU3205
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14084              		.loc 18 190 7 is_stmt 0 view .LVU3206
 14085              	.LBE9000:
 14086              	.LBB9001:
 14087              	.LBI8995:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 14088              		.loc 18 156 2 is_stmt 1 view .LVU3207
 14089              	.LBB8999:
 14090              	.LBB8997:
 14091              	.LBI8997:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14092              		.loc 19 147 7 view .LVU3208
 14093              	.LBB8998:
 14094              	.LBI8998:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 503


 14095              		.loc 20 82 7 view .LVU3209
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14096              		.loc 20 82 7 is_stmt 0 view .LVU3210
 14097              	.LBE8998:
 14098              	.LBE8997:
 14099              	.LBE8999:
 14100              	.LBE9001:
 14101              	.LBB9002:
 14102              	.LBI8990:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14103              		.loc 21 351 7 is_stmt 1 view .LVU3211
 14104              	.LBB8992:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14105              		.loc 21 357 2 view .LVU3212
 14106              	.LBE8992:
 14107              	.LBE9002:
 14108              	.LBE9082:
 14109              	.LBE9099:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14110              		.loc 33 352 12 is_stmt 0 view .LVU3213
 14111 0012 1546     		mov	r5, r2
 14112              	.LBB9100:
 14113              	.LBB9083:
 14114              	.LBB9003:
 14115              	.LBB8993:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14116              		.loc 21 357 25 view .LVU3214
 14117 0014 FFF7FEFF 		bl	strlen
 14118              	.LVL881:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14119              		.loc 21 357 25 view .LVU3215
 14120              	.LBE8993:
 14121              	.LBE9003:
 14122              	.LBB9004:
 14123              	.LBB9005:
 14124              	.LBB9006:
 14125              	.LBB9007:
 14126              	.LBB9008:
 14127              	.LBB9009:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14128              		.loc 22 217 2 view .LVU3216
 14129 0018 0F28     		cmp	r0, #15
 14130              	.LBE9009:
 14131              	.LBE9008:
 14132              	.LBE9007:
 14133              	.LBE9006:
 14134              	.LBE9005:
 14135              	.LBE9004:
 14136              	.LBB9074:
 14137              	.LBB8994:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14138              		.loc 21 357 25 view .LVU3217
 14139 001a 0646     		mov	r6, r0
 14140              	.LVL882:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14141              		.loc 21 357 25 view .LVU3218
 14142              	.LBE8994:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 504


 14143              	.LBE9074:
 14144              	.LBB9075:
 14145              	.LBI9004:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14146              		.loc 18 263 9 is_stmt 1 view .LVU3219
 14147              	.LBB9071:
 14148              	.LBB9068:
 14149              	.LBI9006:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14150              		.loc 18 243 9 view .LVU3220
 14151              	.LBB9065:
 14152              	.LBB9062:
 14153              	.LBI9008:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14154              		.loc 22 206 7 view .LVU3221
 14155              	.LBB9059:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14156              		.loc 22 215 12 is_stmt 0 view .LVU3222
 14157 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14158              		.loc 22 217 2 view .LVU3223
 14159 001e 17D8     		bhi	.L707
 14160              	.LVL883:
 14161              	.LBB9010:
 14162              	.LBI9010:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14163              		.loc 18 186 7 is_stmt 1 view .LVU3224
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14164              		.loc 18 186 7 is_stmt 0 view .LVU3225
 14165              	.LBE9010:
 14166              	.LBB9011:
 14167              	.LBI9011:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 14168              		.loc 18 396 7 is_stmt 1 view .LVU3226
 14169              	.LBB9012:
 14170              	.LBI9012:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14171              		.loc 18 346 7 view .LVU3227
 14172              	.LBB9013:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14173              		.loc 18 348 2 is_stmt 0 view .LVU3228
 14174 0020 0128     		cmp	r0, #1
 14175 0022 12D1     		bne	.L701
 14176              	.LVL884:
 14177              	.LBB9014:
 14178              	.LBI9014:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14179              		.loc 21 321 7 is_stmt 1 view .LVU3229
 14180              	.LBB9015:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14181              		.loc 21 322 9 view .LVU3230
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14182              		.loc 21 322 14 is_stmt 0 view .LVU3231
 14183 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 14184 0028 2372     		strb	r3, [r4, #8]
 14185              	.LVL885:
 14186              	.L702:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 505


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14187              		.loc 21 322 14 view .LVU3232
 14188              	.LBE9015:
 14189              	.LBE9014:
 14190              	.LBE9013:
 14191              	.LBE9012:
 14192              	.LBE9011:
 14193              	.LBB9031:
 14194              	.LBI9031:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14195              		.loc 18 214 7 is_stmt 1 view .LVU3233
 14196              	.LBB9032:
 14197              	.LBB9033:
 14198              	.LBI9033:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 14199              		.loc 18 182 7 view .LVU3234
 14200              	.LBE9033:
 14201              	.LBB9035:
 14202              	.LBB9036:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14203              		.loc 21 322 14 is_stmt 0 view .LVU3235
 14204 002a 0023     		movs	r3, #0
 14205              	.LBE9036:
 14206              	.LBE9035:
 14207              	.LBB9039:
 14208              	.LBB9034:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14209              		.loc 18 183 26 view .LVU3236
 14210 002c 6660     		str	r6, [r4, #4]
 14211              	.LVL886:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14212              		.loc 18 183 26 view .LVU3237
 14213              	.LBE9034:
 14214              	.LBE9039:
 14215              	.LBB9040:
 14216              	.LBI9040:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14217              		.loc 18 186 7 is_stmt 1 view .LVU3238
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14218              		.loc 18 186 7 is_stmt 0 view .LVU3239
 14219              	.LBE9040:
 14220              	.LBB9042:
 14221              	.LBI9035:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14222              		.loc 21 321 7 is_stmt 1 view .LVU3240
 14223              	.LBB9037:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14224              		.loc 21 322 9 view .LVU3241
 14225              	.LBE9037:
 14226              	.LBE9042:
 14227              	.LBE9032:
 14228              	.LBE9031:
 14229              	.LBE9059:
 14230              	.LBE9062:
 14231              	.LBE9065:
 14232              	.LBE9068:
 14233              	.LBE9071:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 506


 14234              	.LBE9075:
 14235              	.LBE9083:
 14236              	.LBE9100:
 14237              		.loc 33 353 68 is_stmt 0 view .LVU3242
 14238 002e 2046     		mov	r0, r4
 14239              	.LBB9101:
 14240              	.LBB9084:
 14241              	.LBB9076:
 14242              	.LBB9072:
 14243              	.LBB9069:
 14244              	.LBB9066:
 14245              	.LBB9063:
 14246              	.LBB9060:
 14247              	.LBB9047:
 14248              	.LBB9045:
 14249              	.LBB9043:
 14250              	.LBB9038:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14251              		.loc 21 322 14 view .LVU3243
 14252 0030 BB55     		strb	r3, [r7, r6]
 14253              	.LVL887:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14254              		.loc 21 322 14 view .LVU3244
 14255              	.LBE9038:
 14256              	.LBE9043:
 14257              	.LBE9045:
 14258              	.LBE9047:
 14259              	.LBE9060:
 14260              	.LBE9063:
 14261              	.LBE9066:
 14262              	.LBE9069:
 14263              	.LBE9072:
 14264              	.LBE9076:
 14265              	.LBE9084:
 14266              	.LBB9085:
 14267              	.LBI9085:
 14268              		.loc 19 162 7 is_stmt 1 view .LVU3245
 14269              	.LBB9086:
 14270              	.LBI9086:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14271              		.loc 20 89 7 view .LVU3246
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14272              		.loc 20 89 7 is_stmt 0 view .LVU3247
 14273              	.LBE9086:
 14274              	.LBE9085:
 14275              	.LBB9087:
 14276              	.LBI9087:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14277              		.loc 37 76 5 is_stmt 1 view .LVU3248
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14278              		.loc 37 76 5 is_stmt 0 view .LVU3249
 14279              	.LBE9087:
 14280              	.LBB9088:
 14281              	.LBI9088:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14282              		.loc 24 572 7 is_stmt 1 view .LVU3250
 14283              	.LBB9089:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 507


 14284              	.LBI9089:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14285              		.loc 24 308 7 view .LVU3251
 14286              	.LBB9090:
 14287              	.LBI9090:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 14288              		.loc 24 143 2 view .LVU3252
 14289              	.LBB9091:
 14290              	.LBI9091:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14291              		.loc 37 101 5 view .LVU3253
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14292              		.loc 37 101 5 is_stmt 0 view .LVU3254
 14293              	.LBE9091:
 14294              	.LBB9092:
 14295              	.LBI9092:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14296              		.loc 19 147 7 is_stmt 1 view .LVU3255
 14297              	.LBB9093:
 14298              	.LBI9093:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14299              		.loc 20 82 7 view .LVU3256
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14300              		.loc 20 82 7 is_stmt 0 view .LVU3257
 14301              	.LBE9093:
 14302              	.LBE9092:
 14303              	.LBB9094:
 14304              	.LBI9094:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14305              		.loc 37 101 5 is_stmt 1 view .LVU3258
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14306              		.loc 37 101 5 is_stmt 0 view .LVU3259
 14307              	.LBE9094:
 14308              	.LBB9095:
 14309              	.LBI9095:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 14310              		.loc 24 102 2 is_stmt 1 view .LVU3260
 14311              	.LBB9096:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 14312              		.loc 24 104 43 is_stmt 0 view .LVU3261
 14313 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 14314              		.loc 24 105 17 view .LVU3262
 14315 0036 2B60     		str	r3, [r5]
 14316              	.LVL888:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 14317              		.loc 24 104 43 view .LVU3263
 14318 0038 E261     		str	r2, [r4, #28]
 14319 003a AA68     		ldr	r2, [r5, #8]
 14320 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 14321              		.loc 24 105 33 view .LVU3264
 14322 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 14323              		.loc 24 105 57 view .LVU3265
 14324 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 508


 14325              		.loc 24 104 43 view .LVU3266
 14326 0042 2262     		str	r2, [r4, #32]
 14327              	.LBE9096:
 14328              	.LBE9095:
 14329              	.LBE9090:
 14330              	.LBE9089:
 14331              	.LBE9088:
 14332              	.LBE9101:
 14333              		.loc 33 353 68 view .LVU3267
 14334 0044 02B0     		add	sp, sp, #8
 14335              		.cfi_remember_state
 14336              		.cfi_def_cfa_offset 24
 14337              		@ sp needed
 14338 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 14339              	.LVL889:
 14340              	.L701:
 14341              		.cfi_restore_state
 14342              	.LBB9102:
 14343              	.LBB9097:
 14344              	.LBB9077:
 14345              	.LBB9073:
 14346              	.LBB9070:
 14347              	.LBB9067:
 14348              	.LBB9064:
 14349              	.LBB9061:
 14350              	.LBB9048:
 14351              	.LBB9028:
 14352              	.LBB9025:
 14353              	.LBB9016:
 14354              	.LBI9016:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14355              		.loc 18 346 7 is_stmt 1 view .LVU3268
 14356              	.LBB9017:
 14357              	.LBI9017:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14358              		.loc 21 387 7 view .LVU3269
 14359              	.LBB9018:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14360              		.loc 21 389 2 view .LVU3270
 14361 004a 0028     		cmp	r0, #0
 14362 004c EDD0     		beq	.L702
 14363 004e 08E0     		b	.L700
 14364              	.LVL890:
 14365              	.L707:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14366              		.loc 21 389 2 is_stmt 0 view .LVU3271
 14367              	.LBE9018:
 14368              	.LBE9017:
 14369              	.LBE9016:
 14370              	.LBE9025:
 14371              	.LBE9028:
 14372              	.LBE9048:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14373              		.loc 22 219 13 view .LVU3272
 14374 0050 0022     		movs	r2, #0
 14375 0052 01A9     		add	r1, sp, #4
 14376 0054 2046     		mov	r0, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 509


 14377              	.LVL891:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14378              		.loc 22 219 13 view .LVU3273
 14379 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 14380              	.LVL892:
 14381              	.LBB9049:
 14382              	.LBB9050:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14383              		.loc 18 211 31 view .LVU3274
 14384 005a 019B     		ldr	r3, [sp, #4]
 14385              	.LBE9050:
 14386              	.LBE9049:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14387              		.loc 22 219 13 view .LVU3275
 14388 005c 0746     		mov	r7, r0
 14389              	.LVL893:
 14390              	.LBB9052:
 14391              	.LBI9052:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 14392              		.loc 18 178 7 is_stmt 1 view .LVU3276
 14393              	.LBB9053:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14394              		.loc 18 179 26 is_stmt 0 view .LVU3277
 14395 005e 2060     		str	r0, [r4]
 14396              	.LVL894:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14397              		.loc 18 179 26 view .LVU3278
 14398              	.LBE9053:
 14399              	.LBE9052:
 14400              	.LBB9054:
 14401              	.LBI9049:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14402              		.loc 18 210 7 is_stmt 1 view .LVU3279
 14403              	.LBB9051:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14404              		.loc 18 211 31 is_stmt 0 view .LVU3280
 14405 0060 A360     		str	r3, [r4, #8]
 14406              	.LVL895:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14407              		.loc 18 211 31 view .LVU3281
 14408              	.LBE9051:
 14409              	.LBE9054:
 14410              	.LBB9055:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14411              		.loc 18 186 7 is_stmt 1 view .LVU3282
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14412              		.loc 18 186 7 is_stmt 0 view .LVU3283
 14413              	.LBE9055:
 14414              	.LBB9056:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 14415              		.loc 18 396 7 is_stmt 1 view .LVU3284
 14416              	.LBB9029:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14417              		.loc 18 346 7 view .LVU3285
 14418              	.LBB9026:
 14419              	.LBB9023:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 510


 14420              		.loc 18 346 7 view .LVU3286
 14421              	.LBB9021:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14422              		.loc 21 387 7 view .LVU3287
 14423              	.LBB9019:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14424              		.loc 21 389 2 view .LVU3288
 14425              	.L700:
 14426              		.loc 21 395 2 view .LVU3289
 14427              		.loc 21 395 49 is_stmt 0 view .LVU3290
 14428 0062 3246     		mov	r2, r6
 14429 0064 3846     		mov	r0, r7
 14430 0066 4146     		mov	r1, r8
 14431 0068 FFF7FEFF 		bl	memcpy
 14432              	.LVL896:
 14433              	.LBE9019:
 14434              	.LBE9021:
 14435              	.LBE9023:
 14436              	.LBE9026:
 14437              	.LBE9029:
 14438              	.LBE9056:
 14439              		.loc 22 232 15 view .LVU3291
 14440 006c 019E     		ldr	r6, [sp, #4]
 14441              	.LVL897:
 14442              	.LBB9057:
 14443              	.LBB9046:
 14444              	.LBB9044:
 14445              	.LBB9041:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14446              		.loc 18 187 28 view .LVU3292
 14447 006e 2768     		ldr	r7, [r4]
 14448              	.LVL898:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14449              		.loc 18 187 28 view .LVU3293
 14450              	.LBE9041:
 14451              	.LBE9044:
 14452              	.LBE9046:
 14453              	.LBE9057:
 14454              	.LBB9058:
 14455              	.LBB9030:
 14456              	.LBB9027:
 14457              	.LBB9024:
 14458              	.LBB9022:
 14459              	.LBB9020:
 14460              		.loc 21 395 66 view .LVU3294
 14461 0070 DBE7     		b	.L702
 14462              	.LBE9020:
 14463              	.LBE9022:
 14464              	.LBE9024:
 14465              	.LBE9027:
 14466              	.LBE9030:
 14467              	.LBE9058:
 14468              	.LBE9061:
 14469              	.LBE9064:
 14470              	.LBE9067:
 14471              	.LBE9070:
 14472              	.LBE9073:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 511


 14473              	.LBE9077:
 14474              	.LBE9097:
 14475              	.LBE9102:
 14476              		.cfi_endproc
 14477              	.LFE5514:
 14479              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS
 14480              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 14481 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 14482              		.align	1
 14483              		.p2align 2,,3
 14484              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS
 14485              		.syntax unified
 14486              		.thumb
 14487              		.thumb_func
 14488              		.fpu fpv5-d16
 14490              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS9_Lb1EE
 14491              	.LVL899:
 14492              	.LFB5530:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14493              		.loc 33 352 12 is_stmt 1 view -0
 14494              		.cfi_startproc
 14495              		@ args = 0, pretend = 0, frame = 8
 14496              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14497              		.loc 33 352 12 is_stmt 0 view .LVU3296
 14498 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 14499              		.cfi_def_cfa_offset 24
 14500              		.cfi_offset 4, -24
 14501              		.cfi_offset 5, -20
 14502              		.cfi_offset 6, -16
 14503              		.cfi_offset 7, -12
 14504              		.cfi_offset 8, -8
 14505              		.cfi_offset 14, -4
 14506 0004 0446     		mov	r4, r0
 14507              	.LBB9167:
 14508              	.LBB9168:
 14509              	.LBB9169:
 14510              	.LBB9170:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 14511              		.loc 18 193 51 view .LVU3297
 14512 0006 00F10807 		add	r7, r0, #8
 14513              	.LBE9170:
 14514              	.LBE9169:
 14515              	.LBE9168:
 14516              	.LBE9167:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14517              		.loc 33 352 12 view .LVU3298
 14518 000a 82B0     		sub	sp, sp, #8
 14519              		.cfi_def_cfa_offset 32
 14520              	.LBB9279:
 14521              	.LBB9259:
 14522              	.LBB9171:
 14523              	.LBB9172:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14524              		.loc 21 357 25 view .LVU3299
 14525 000c 0846     		mov	r0, r1
 14526              	.LVL900:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 512


 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14527              		.loc 21 357 25 view .LVU3300
 14528              	.LBE9172:
 14529              	.LBE9171:
 14530              	.LBB9176:
 14531              	.LBB9177:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14532              		.loc 18 157 35 view .LVU3301
 14533 000e 2760     		str	r7, [r4]
 14534              	.LBE9177:
 14535              	.LBE9176:
 14536              	.LBE9259:
 14537              	.LBE9279:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14538              		.loc 33 352 12 view .LVU3302
 14539 0010 8846     		mov	r8, r1
 14540              	.LVL901:
 14541              	.LBB9280:
 14542              	.LBB9260:
 14543              	.LBI9260:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14544              		.loc 37 76 5 is_stmt 1 view .LVU3303
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14545              		.loc 37 76 5 is_stmt 0 view .LVU3304
 14546              	.LBE9260:
 14547              	.LBB9261:
 14548              	.LBI9261:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 14549              		.loc 19 144 7 is_stmt 1 view .LVU3305
 14550              	.LBB9262:
 14551              	.LBI9262:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14552              		.loc 20 79 7 view .LVU3306
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14553              		.loc 20 79 7 is_stmt 0 view .LVU3307
 14554              	.LBE9262:
 14555              	.LBE9261:
 14556              	.LBB9263:
 14557              	.LBI9168:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 14558              		.loc 18 525 7 is_stmt 1 view .LVU3308
 14559              	.LBB9181:
 14560              	.LBI9169:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14561              		.loc 18 190 7 view .LVU3309
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14562              		.loc 18 190 7 is_stmt 0 view .LVU3310
 14563              	.LBE9181:
 14564              	.LBB9182:
 14565              	.LBI9176:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 14566              		.loc 18 156 2 is_stmt 1 view .LVU3311
 14567              	.LBB9180:
 14568              	.LBB9178:
 14569              	.LBI9178:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14570              		.loc 19 147 7 view .LVU3312
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 513


 14571              	.LBB9179:
 14572              	.LBI9179:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14573              		.loc 20 82 7 view .LVU3313
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14574              		.loc 20 82 7 is_stmt 0 view .LVU3314
 14575              	.LBE9179:
 14576              	.LBE9178:
 14577              	.LBE9180:
 14578              	.LBE9182:
 14579              	.LBB9183:
 14580              	.LBI9171:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14581              		.loc 21 351 7 is_stmt 1 view .LVU3315
 14582              	.LBB9173:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14583              		.loc 21 357 2 view .LVU3316
 14584              	.LBE9173:
 14585              	.LBE9183:
 14586              	.LBE9263:
 14587              	.LBE9280:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14588              		.loc 33 352 12 is_stmt 0 view .LVU3317
 14589 0012 1546     		mov	r5, r2
 14590              	.LBB9281:
 14591              	.LBB9264:
 14592              	.LBB9184:
 14593              	.LBB9174:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14594              		.loc 21 357 25 view .LVU3318
 14595 0014 FFF7FEFF 		bl	strlen
 14596              	.LVL902:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14597              		.loc 21 357 25 view .LVU3319
 14598              	.LBE9174:
 14599              	.LBE9184:
 14600              	.LBB9185:
 14601              	.LBB9186:
 14602              	.LBB9187:
 14603              	.LBB9188:
 14604              	.LBB9189:
 14605              	.LBB9190:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14606              		.loc 22 217 2 view .LVU3320
 14607 0018 0F28     		cmp	r0, #15
 14608              	.LBE9190:
 14609              	.LBE9189:
 14610              	.LBE9188:
 14611              	.LBE9187:
 14612              	.LBE9186:
 14613              	.LBE9185:
 14614              	.LBB9255:
 14615              	.LBB9175:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14616              		.loc 21 357 25 view .LVU3321
 14617 001a 0646     		mov	r6, r0
 14618              	.LVL903:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 514


 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 14619              		.loc 21 357 25 view .LVU3322
 14620              	.LBE9175:
 14621              	.LBE9255:
 14622              	.LBB9256:
 14623              	.LBI9185:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 14624              		.loc 18 263 9 is_stmt 1 view .LVU3323
 14625              	.LBB9252:
 14626              	.LBB9249:
 14627              	.LBI9187:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 14628              		.loc 18 243 9 view .LVU3324
 14629              	.LBB9246:
 14630              	.LBB9243:
 14631              	.LBI9189:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 14632              		.loc 22 206 7 view .LVU3325
 14633              	.LBB9240:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 14634              		.loc 22 215 12 is_stmt 0 view .LVU3326
 14635 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 14636              		.loc 22 217 2 view .LVU3327
 14637 001e 17D8     		bhi	.L717
 14638              	.LVL904:
 14639              	.LBB9191:
 14640              	.LBI9191:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14641              		.loc 18 186 7 is_stmt 1 view .LVU3328
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14642              		.loc 18 186 7 is_stmt 0 view .LVU3329
 14643              	.LBE9191:
 14644              	.LBB9192:
 14645              	.LBI9192:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 14646              		.loc 18 396 7 is_stmt 1 view .LVU3330
 14647              	.LBB9193:
 14648              	.LBI9193:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14649              		.loc 18 346 7 view .LVU3331
 14650              	.LBB9194:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 14651              		.loc 18 348 2 is_stmt 0 view .LVU3332
 14652 0020 0128     		cmp	r0, #1
 14653 0022 12D1     		bne	.L711
 14654              	.LVL905:
 14655              	.LBB9195:
 14656              	.LBI9195:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14657              		.loc 21 321 7 is_stmt 1 view .LVU3333
 14658              	.LBB9196:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14659              		.loc 21 322 9 view .LVU3334
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14660              		.loc 21 322 14 is_stmt 0 view .LVU3335
 14661 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 515


 14662 0028 2372     		strb	r3, [r4, #8]
 14663              	.LVL906:
 14664              	.L712:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14665              		.loc 21 322 14 view .LVU3336
 14666              	.LBE9196:
 14667              	.LBE9195:
 14668              	.LBE9194:
 14669              	.LBE9193:
 14670              	.LBE9192:
 14671              	.LBB9212:
 14672              	.LBI9212:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14673              		.loc 18 214 7 is_stmt 1 view .LVU3337
 14674              	.LBB9213:
 14675              	.LBB9214:
 14676              	.LBI9214:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 14677              		.loc 18 182 7 view .LVU3338
 14678              	.LBE9214:
 14679              	.LBB9216:
 14680              	.LBB9217:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14681              		.loc 21 322 14 is_stmt 0 view .LVU3339
 14682 002a 0023     		movs	r3, #0
 14683              	.LBE9217:
 14684              	.LBE9216:
 14685              	.LBB9220:
 14686              	.LBB9215:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14687              		.loc 18 183 26 view .LVU3340
 14688 002c 6660     		str	r6, [r4, #4]
 14689              	.LVL907:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14690              		.loc 18 183 26 view .LVU3341
 14691              	.LBE9215:
 14692              	.LBE9220:
 14693              	.LBB9221:
 14694              	.LBI9221:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14695              		.loc 18 186 7 is_stmt 1 view .LVU3342
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14696              		.loc 18 186 7 is_stmt 0 view .LVU3343
 14697              	.LBE9221:
 14698              	.LBB9223:
 14699              	.LBI9216:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 14700              		.loc 21 321 7 is_stmt 1 view .LVU3344
 14701              	.LBB9218:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14702              		.loc 21 322 9 view .LVU3345
 14703              	.LBE9218:
 14704              	.LBE9223:
 14705              	.LBE9213:
 14706              	.LBE9212:
 14707              	.LBE9240:
 14708              	.LBE9243:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 516


 14709              	.LBE9246:
 14710              	.LBE9249:
 14711              	.LBE9252:
 14712              	.LBE9256:
 14713              	.LBE9264:
 14714              	.LBE9281:
 14715              		.loc 33 353 68 is_stmt 0 view .LVU3346
 14716 002e 2046     		mov	r0, r4
 14717              	.LBB9282:
 14718              	.LBB9265:
 14719              	.LBB9257:
 14720              	.LBB9253:
 14721              	.LBB9250:
 14722              	.LBB9247:
 14723              	.LBB9244:
 14724              	.LBB9241:
 14725              	.LBB9228:
 14726              	.LBB9226:
 14727              	.LBB9224:
 14728              	.LBB9219:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14729              		.loc 21 322 14 view .LVU3347
 14730 0030 BB55     		strb	r3, [r7, r6]
 14731              	.LVL908:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 14732              		.loc 21 322 14 view .LVU3348
 14733              	.LBE9219:
 14734              	.LBE9224:
 14735              	.LBE9226:
 14736              	.LBE9228:
 14737              	.LBE9241:
 14738              	.LBE9244:
 14739              	.LBE9247:
 14740              	.LBE9250:
 14741              	.LBE9253:
 14742              	.LBE9257:
 14743              	.LBE9265:
 14744              	.LBB9266:
 14745              	.LBI9266:
 14746              		.loc 19 162 7 is_stmt 1 view .LVU3349
 14747              	.LBB9267:
 14748              	.LBI9267:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14749              		.loc 20 89 7 view .LVU3350
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14750              		.loc 20 89 7 is_stmt 0 view .LVU3351
 14751              	.LBE9267:
 14752              	.LBE9266:
 14753              	.LBB9268:
 14754              	.LBI9268:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14755              		.loc 37 76 5 is_stmt 1 view .LVU3352
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 14756              		.loc 37 76 5 is_stmt 0 view .LVU3353
 14757              	.LBE9268:
 14758              	.LBB9269:
 14759              	.LBI9269:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 517


 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14760              		.loc 24 572 7 is_stmt 1 view .LVU3354
 14761              	.LBB9270:
 14762              	.LBI9270:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 14763              		.loc 24 308 7 view .LVU3355
 14764              	.LBB9271:
 14765              	.LBI9271:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 14766              		.loc 24 143 2 view .LVU3356
 14767              	.LBB9272:
 14768              	.LBI9272:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14769              		.loc 37 101 5 view .LVU3357
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14770              		.loc 37 101 5 is_stmt 0 view .LVU3358
 14771              	.LBE9272:
 14772              	.LBB9273:
 14773              	.LBI9273:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14774              		.loc 19 147 7 is_stmt 1 view .LVU3359
 14775              	.LBB9274:
 14776              	.LBI9274:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14777              		.loc 20 82 7 view .LVU3360
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 14778              		.loc 20 82 7 is_stmt 0 view .LVU3361
 14779              	.LBE9274:
 14780              	.LBE9273:
 14781              	.LBB9275:
 14782              	.LBI9275:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14783              		.loc 37 101 5 is_stmt 1 view .LVU3362
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 14784              		.loc 37 101 5 is_stmt 0 view .LVU3363
 14785              	.LBE9275:
 14786              	.LBB9276:
 14787              	.LBI9276:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 14788              		.loc 24 102 2 is_stmt 1 view .LVU3364
 14789              	.LBB9277:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 14790              		.loc 24 104 43 is_stmt 0 view .LVU3365
 14791 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 14792              		.loc 24 105 17 view .LVU3366
 14793 0036 2B60     		str	r3, [r5]
 14794              	.LVL909:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 14795              		.loc 24 104 43 view .LVU3367
 14796 0038 E261     		str	r2, [r4, #28]
 14797 003a AA68     		ldr	r2, [r5, #8]
 14798 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 14799              		.loc 24 105 33 view .LVU3368
 14800 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 518


 14801              		.loc 24 105 57 view .LVU3369
 14802 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 14803              		.loc 24 104 43 view .LVU3370
 14804 0042 2262     		str	r2, [r4, #32]
 14805              	.LBE9277:
 14806              	.LBE9276:
 14807              	.LBE9271:
 14808              	.LBE9270:
 14809              	.LBE9269:
 14810              	.LBE9282:
 14811              		.loc 33 353 68 view .LVU3371
 14812 0044 02B0     		add	sp, sp, #8
 14813              		.cfi_remember_state
 14814              		.cfi_def_cfa_offset 24
 14815              		@ sp needed
 14816 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 14817              	.LVL910:
 14818              	.L711:
 14819              		.cfi_restore_state
 14820              	.LBB9283:
 14821              	.LBB9278:
 14822              	.LBB9258:
 14823              	.LBB9254:
 14824              	.LBB9251:
 14825              	.LBB9248:
 14826              	.LBB9245:
 14827              	.LBB9242:
 14828              	.LBB9229:
 14829              	.LBB9209:
 14830              	.LBB9206:
 14831              	.LBB9197:
 14832              	.LBI9197:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14833              		.loc 18 346 7 is_stmt 1 view .LVU3372
 14834              	.LBB9198:
 14835              	.LBI9198:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14836              		.loc 21 387 7 view .LVU3373
 14837              	.LBB9199:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14838              		.loc 21 389 2 view .LVU3374
 14839 004a 0028     		cmp	r0, #0
 14840 004c EDD0     		beq	.L712
 14841 004e 08E0     		b	.L710
 14842              	.LVL911:
 14843              	.L717:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14844              		.loc 21 389 2 is_stmt 0 view .LVU3375
 14845              	.LBE9199:
 14846              	.LBE9198:
 14847              	.LBE9197:
 14848              	.LBE9206:
 14849              	.LBE9209:
 14850              	.LBE9229:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14851              		.loc 22 219 13 view .LVU3376
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 519


 14852 0050 0022     		movs	r2, #0
 14853 0052 01A9     		add	r1, sp, #4
 14854 0054 2046     		mov	r0, r4
 14855              	.LVL912:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14856              		.loc 22 219 13 view .LVU3377
 14857 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 14858              	.LVL913:
 14859              	.LBB9230:
 14860              	.LBB9231:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14861              		.loc 18 211 31 view .LVU3378
 14862 005a 019B     		ldr	r3, [sp, #4]
 14863              	.LBE9231:
 14864              	.LBE9230:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 14865              		.loc 22 219 13 view .LVU3379
 14866 005c 0746     		mov	r7, r0
 14867              	.LVL914:
 14868              	.LBB9233:
 14869              	.LBI9233:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 14870              		.loc 18 178 7 is_stmt 1 view .LVU3380
 14871              	.LBB9234:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14872              		.loc 18 179 26 is_stmt 0 view .LVU3381
 14873 005e 2060     		str	r0, [r4]
 14874              	.LVL915:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14875              		.loc 18 179 26 view .LVU3382
 14876              	.LBE9234:
 14877              	.LBE9233:
 14878              	.LBB9235:
 14879              	.LBI9230:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14880              		.loc 18 210 7 is_stmt 1 view .LVU3383
 14881              	.LBB9232:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14882              		.loc 18 211 31 is_stmt 0 view .LVU3384
 14883 0060 A360     		str	r3, [r4, #8]
 14884              	.LVL916:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14885              		.loc 18 211 31 view .LVU3385
 14886              	.LBE9232:
 14887              	.LBE9235:
 14888              	.LBB9236:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14889              		.loc 18 186 7 is_stmt 1 view .LVU3386
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 14890              		.loc 18 186 7 is_stmt 0 view .LVU3387
 14891              	.LBE9236:
 14892              	.LBB9237:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 14893              		.loc 18 396 7 is_stmt 1 view .LVU3388
 14894              	.LBB9210:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14895              		.loc 18 346 7 view .LVU3389
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 520


 14896              	.LBB9207:
 14897              	.LBB9204:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 14898              		.loc 18 346 7 view .LVU3390
 14899              	.LBB9202:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 14900              		.loc 21 387 7 view .LVU3391
 14901              	.LBB9200:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 14902              		.loc 21 389 2 view .LVU3392
 14903              	.L710:
 14904              		.loc 21 395 2 view .LVU3393
 14905              		.loc 21 395 49 is_stmt 0 view .LVU3394
 14906 0062 3246     		mov	r2, r6
 14907 0064 3846     		mov	r0, r7
 14908 0066 4146     		mov	r1, r8
 14909 0068 FFF7FEFF 		bl	memcpy
 14910              	.LVL917:
 14911              	.LBE9200:
 14912              	.LBE9202:
 14913              	.LBE9204:
 14914              	.LBE9207:
 14915              	.LBE9210:
 14916              	.LBE9237:
 14917              		.loc 22 232 15 view .LVU3395
 14918 006c 019E     		ldr	r6, [sp, #4]
 14919              	.LVL918:
 14920              	.LBB9238:
 14921              	.LBB9227:
 14922              	.LBB9225:
 14923              	.LBB9222:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14924              		.loc 18 187 28 view .LVU3396
 14925 006e 2768     		ldr	r7, [r4]
 14926              	.LVL919:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 14927              		.loc 18 187 28 view .LVU3397
 14928              	.LBE9222:
 14929              	.LBE9225:
 14930              	.LBE9227:
 14931              	.LBE9238:
 14932              	.LBB9239:
 14933              	.LBB9211:
 14934              	.LBB9208:
 14935              	.LBB9205:
 14936              	.LBB9203:
 14937              	.LBB9201:
 14938              		.loc 21 395 66 view .LVU3398
 14939 0070 DBE7     		b	.L712
 14940              	.LBE9201:
 14941              	.LBE9203:
 14942              	.LBE9205:
 14943              	.LBE9208:
 14944              	.LBE9211:
 14945              	.LBE9239:
 14946              	.LBE9242:
 14947              	.LBE9245:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 521


 14948              	.LBE9248:
 14949              	.LBE9251:
 14950              	.LBE9254:
 14951              	.LBE9258:
 14952              	.LBE9278:
 14953              	.LBE9283:
 14954              		.cfi_endproc
 14955              	.LFE5530:
 14957              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA4_KcS
 14958              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 14959 0072 00BF     		.section	.text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC
 14960              		.align	1
 14961              		.p2align 2,,3
 14962              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS
 14963              		.syntax unified
 14964              		.thumb
 14965              		.thumb_func
 14966              		.fpu fpv5-d16
 14968              	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS9_Lb1EE
 14969              	.LVL920:
 14970              	.LFB5534:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14971              		.loc 33 352 12 is_stmt 1 view -0
 14972              		.cfi_startproc
 14973              		@ args = 0, pretend = 0, frame = 8
 14974              		@ frame_needed = 0, uses_anonymous_args = 0
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14975              		.loc 33 352 12 is_stmt 0 view .LVU3400
 14976 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 14977              		.cfi_def_cfa_offset 24
 14978              		.cfi_offset 4, -24
 14979              		.cfi_offset 5, -20
 14980              		.cfi_offset 6, -16
 14981              		.cfi_offset 7, -12
 14982              		.cfi_offset 8, -8
 14983              		.cfi_offset 14, -4
 14984 0004 0446     		mov	r4, r0
 14985              	.LBB9348:
 14986              	.LBB9349:
 14987              	.LBB9350:
 14988              	.LBB9351:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 14989              		.loc 18 193 51 view .LVU3401
 14990 0006 00F10807 		add	r7, r0, #8
 14991              	.LBE9351:
 14992              	.LBE9350:
 14993              	.LBE9349:
 14994              	.LBE9348:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 14995              		.loc 33 352 12 view .LVU3402
 14996 000a 82B0     		sub	sp, sp, #8
 14997              		.cfi_def_cfa_offset 32
 14998              	.LBB9460:
 14999              	.LBB9440:
 15000              	.LBB9352:
 15001              	.LBB9353:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 522


 15002              		.loc 21 357 25 view .LVU3403
 15003 000c 0846     		mov	r0, r1
 15004              	.LVL921:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15005              		.loc 21 357 25 view .LVU3404
 15006              	.LBE9353:
 15007              	.LBE9352:
 15008              	.LBB9357:
 15009              	.LBB9358:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15010              		.loc 18 157 35 view .LVU3405
 15011 000e 2760     		str	r7, [r4]
 15012              	.LBE9358:
 15013              	.LBE9357:
 15014              	.LBE9440:
 15015              	.LBE9460:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 15016              		.loc 33 352 12 view .LVU3406
 15017 0010 8846     		mov	r8, r1
 15018              	.LVL922:
 15019              	.LBB9461:
 15020              	.LBB9441:
 15021              	.LBI9441:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15022              		.loc 37 76 5 is_stmt 1 view .LVU3407
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15023              		.loc 37 76 5 is_stmt 0 view .LVU3408
 15024              	.LBE9441:
 15025              	.LBB9442:
 15026              	.LBI9442:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 15027              		.loc 19 144 7 is_stmt 1 view .LVU3409
 15028              	.LBB9443:
 15029              	.LBI9443:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15030              		.loc 20 79 7 view .LVU3410
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15031              		.loc 20 79 7 is_stmt 0 view .LVU3411
 15032              	.LBE9443:
 15033              	.LBE9442:
 15034              	.LBB9444:
 15035              	.LBI9349:
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 15036              		.loc 18 525 7 is_stmt 1 view .LVU3412
 15037              	.LBB9362:
 15038              	.LBI9350:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15039              		.loc 18 190 7 view .LVU3413
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15040              		.loc 18 190 7 is_stmt 0 view .LVU3414
 15041              	.LBE9362:
 15042              	.LBB9363:
 15043              	.LBI9357:
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 15044              		.loc 18 156 2 is_stmt 1 view .LVU3415
 15045              	.LBB9361:
 15046              	.LBB9359:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 523


 15047              	.LBI9359:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15048              		.loc 19 147 7 view .LVU3416
 15049              	.LBB9360:
 15050              	.LBI9360:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15051              		.loc 20 82 7 view .LVU3417
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15052              		.loc 20 82 7 is_stmt 0 view .LVU3418
 15053              	.LBE9360:
 15054              	.LBE9359:
 15055              	.LBE9361:
 15056              	.LBE9363:
 15057              	.LBB9364:
 15058              	.LBI9352:
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15059              		.loc 21 351 7 is_stmt 1 view .LVU3419
 15060              	.LBB9354:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15061              		.loc 21 357 2 view .LVU3420
 15062              	.LBE9354:
 15063              	.LBE9364:
 15064              	.LBE9444:
 15065              	.LBE9461:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 15066              		.loc 33 352 12 is_stmt 0 view .LVU3421
 15067 0012 1546     		mov	r5, r2
 15068              	.LBB9462:
 15069              	.LBB9445:
 15070              	.LBB9365:
 15071              	.LBB9355:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15072              		.loc 21 357 25 view .LVU3422
 15073 0014 FFF7FEFF 		bl	strlen
 15074              	.LVL923:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15075              		.loc 21 357 25 view .LVU3423
 15076              	.LBE9355:
 15077              	.LBE9365:
 15078              	.LBB9366:
 15079              	.LBB9367:
 15080              	.LBB9368:
 15081              	.LBB9369:
 15082              	.LBB9370:
 15083              	.LBB9371:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 15084              		.loc 22 217 2 view .LVU3424
 15085 0018 0F28     		cmp	r0, #15
 15086              	.LBE9371:
 15087              	.LBE9370:
 15088              	.LBE9369:
 15089              	.LBE9368:
 15090              	.LBE9367:
 15091              	.LBE9366:
 15092              	.LBB9436:
 15093              	.LBB9356:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 524


 15094              		.loc 21 357 25 view .LVU3425
 15095 001a 0646     		mov	r6, r0
 15096              	.LVL924:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 15097              		.loc 21 357 25 view .LVU3426
 15098              	.LBE9356:
 15099              	.LBE9436:
 15100              	.LBB9437:
 15101              	.LBI9366:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 15102              		.loc 18 263 9 is_stmt 1 view .LVU3427
 15103              	.LBB9433:
 15104              	.LBB9430:
 15105              	.LBI9368:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 15106              		.loc 18 243 9 view .LVU3428
 15107              	.LBB9427:
 15108              	.LBB9424:
 15109              	.LBI9370:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 15110              		.loc 22 206 7 view .LVU3429
 15111              	.LBB9421:
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 15112              		.loc 22 215 12 is_stmt 0 view .LVU3430
 15113 001c 0190     		str	r0, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 15114              		.loc 22 217 2 view .LVU3431
 15115 001e 17D8     		bhi	.L727
 15116              	.LVL925:
 15117              	.LBB9372:
 15118              	.LBI9372:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15119              		.loc 18 186 7 is_stmt 1 view .LVU3432
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15120              		.loc 18 186 7 is_stmt 0 view .LVU3433
 15121              	.LBE9372:
 15122              	.LBB9373:
 15123              	.LBI9373:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 15124              		.loc 18 396 7 is_stmt 1 view .LVU3434
 15125              	.LBB9374:
 15126              	.LBI9374:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15127              		.loc 18 346 7 view .LVU3435
 15128              	.LBB9375:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 15129              		.loc 18 348 2 is_stmt 0 view .LVU3436
 15130 0020 0128     		cmp	r0, #1
 15131 0022 12D1     		bne	.L721
 15132              	.LVL926:
 15133              	.LBB9376:
 15134              	.LBI9376:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15135              		.loc 21 321 7 is_stmt 1 view .LVU3437
 15136              	.LBB9377:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15137              		.loc 21 322 9 view .LVU3438
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 525


 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15138              		.loc 21 322 14 is_stmt 0 view .LVU3439
 15139 0024 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 15140 0028 2372     		strb	r3, [r4, #8]
 15141              	.LVL927:
 15142              	.L722:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15143              		.loc 21 322 14 view .LVU3440
 15144              	.LBE9377:
 15145              	.LBE9376:
 15146              	.LBE9375:
 15147              	.LBE9374:
 15148              	.LBE9373:
 15149              	.LBB9393:
 15150              	.LBI9393:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15151              		.loc 18 214 7 is_stmt 1 view .LVU3441
 15152              	.LBB9394:
 15153              	.LBB9395:
 15154              	.LBI9395:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 15155              		.loc 18 182 7 view .LVU3442
 15156              	.LBE9395:
 15157              	.LBB9397:
 15158              	.LBB9398:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15159              		.loc 21 322 14 is_stmt 0 view .LVU3443
 15160 002a 0023     		movs	r3, #0
 15161              	.LBE9398:
 15162              	.LBE9397:
 15163              	.LBB9401:
 15164              	.LBB9396:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15165              		.loc 18 183 26 view .LVU3444
 15166 002c 6660     		str	r6, [r4, #4]
 15167              	.LVL928:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15168              		.loc 18 183 26 view .LVU3445
 15169              	.LBE9396:
 15170              	.LBE9401:
 15171              	.LBB9402:
 15172              	.LBI9402:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15173              		.loc 18 186 7 is_stmt 1 view .LVU3446
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15174              		.loc 18 186 7 is_stmt 0 view .LVU3447
 15175              	.LBE9402:
 15176              	.LBB9404:
 15177              	.LBI9397:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15178              		.loc 21 321 7 is_stmt 1 view .LVU3448
 15179              	.LBB9399:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15180              		.loc 21 322 9 view .LVU3449
 15181              	.LBE9399:
 15182              	.LBE9404:
 15183              	.LBE9394:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 526


 15184              	.LBE9393:
 15185              	.LBE9421:
 15186              	.LBE9424:
 15187              	.LBE9427:
 15188              	.LBE9430:
 15189              	.LBE9433:
 15190              	.LBE9437:
 15191              	.LBE9445:
 15192              	.LBE9462:
 15193              		.loc 33 353 68 is_stmt 0 view .LVU3450
 15194 002e 2046     		mov	r0, r4
 15195              	.LBB9463:
 15196              	.LBB9446:
 15197              	.LBB9438:
 15198              	.LBB9434:
 15199              	.LBB9431:
 15200              	.LBB9428:
 15201              	.LBB9425:
 15202              	.LBB9422:
 15203              	.LBB9409:
 15204              	.LBB9407:
 15205              	.LBB9405:
 15206              	.LBB9400:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15207              		.loc 21 322 14 view .LVU3451
 15208 0030 BB55     		strb	r3, [r7, r6]
 15209              	.LVL929:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15210              		.loc 21 322 14 view .LVU3452
 15211              	.LBE9400:
 15212              	.LBE9405:
 15213              	.LBE9407:
 15214              	.LBE9409:
 15215              	.LBE9422:
 15216              	.LBE9425:
 15217              	.LBE9428:
 15218              	.LBE9431:
 15219              	.LBE9434:
 15220              	.LBE9438:
 15221              	.LBE9446:
 15222              	.LBB9447:
 15223              	.LBI9447:
 15224              		.loc 19 162 7 is_stmt 1 view .LVU3453
 15225              	.LBB9448:
 15226              	.LBI9448:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15227              		.loc 20 89 7 view .LVU3454
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15228              		.loc 20 89 7 is_stmt 0 view .LVU3455
 15229              	.LBE9448:
 15230              	.LBE9447:
 15231              	.LBB9449:
 15232              	.LBI9449:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15233              		.loc 37 76 5 is_stmt 1 view .LVU3456
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 15234              		.loc 37 76 5 is_stmt 0 view .LVU3457
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 527


 15235              	.LBE9449:
 15236              	.LBB9450:
 15237              	.LBI9450:
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15238              		.loc 24 572 7 is_stmt 1 view .LVU3458
 15239              	.LBB9451:
 15240              	.LBI9451:
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15241              		.loc 24 308 7 view .LVU3459
 15242              	.LBB9452:
 15243              	.LBI9452:
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 15244              		.loc 24 143 2 view .LVU3460
 15245              	.LBB9453:
 15246              	.LBI9453:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15247              		.loc 37 101 5 view .LVU3461
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15248              		.loc 37 101 5 is_stmt 0 view .LVU3462
 15249              	.LBE9453:
 15250              	.LBB9454:
 15251              	.LBI9454:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15252              		.loc 19 147 7 is_stmt 1 view .LVU3463
 15253              	.LBB9455:
 15254              	.LBI9455:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15255              		.loc 20 82 7 view .LVU3464
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15256              		.loc 20 82 7 is_stmt 0 view .LVU3465
 15257              	.LBE9455:
 15258              	.LBE9454:
 15259              	.LBB9456:
 15260              	.LBI9456:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15261              		.loc 37 101 5 is_stmt 1 view .LVU3466
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15262              		.loc 37 101 5 is_stmt 0 view .LVU3467
 15263              	.LBE9456:
 15264              	.LBB9457:
 15265              	.LBI9457:
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 15266              		.loc 24 102 2 is_stmt 1 view .LVU3468
 15267              	.LBB9458:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 15268              		.loc 24 104 43 is_stmt 0 view .LVU3469
 15269 0032 D5E90012 		ldrd	r1, r2, [r5]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 15270              		.loc 24 105 17 view .LVU3470
 15271 0036 2B60     		str	r3, [r5]
 15272              	.LVL930:
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 15273              		.loc 24 104 43 view .LVU3471
 15274 0038 E261     		str	r2, [r4, #28]
 15275 003a AA68     		ldr	r2, [r5, #8]
 15276 003c A161     		str	r1, [r4, #24]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 528


 15277              		.loc 24 105 33 view .LVU3472
 15278 003e 6B60     		str	r3, [r5, #4]
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 15279              		.loc 24 105 57 view .LVU3473
 15280 0040 AB60     		str	r3, [r5, #8]
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 15281              		.loc 24 104 43 view .LVU3474
 15282 0042 2262     		str	r2, [r4, #32]
 15283              	.LBE9458:
 15284              	.LBE9457:
 15285              	.LBE9452:
 15286              	.LBE9451:
 15287              	.LBE9450:
 15288              	.LBE9463:
 15289              		.loc 33 353 68 view .LVU3475
 15290 0044 02B0     		add	sp, sp, #8
 15291              		.cfi_remember_state
 15292              		.cfi_def_cfa_offset 24
 15293              		@ sp needed
 15294 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 15295              	.LVL931:
 15296              	.L721:
 15297              		.cfi_restore_state
 15298              	.LBB9464:
 15299              	.LBB9459:
 15300              	.LBB9439:
 15301              	.LBB9435:
 15302              	.LBB9432:
 15303              	.LBB9429:
 15304              	.LBB9426:
 15305              	.LBB9423:
 15306              	.LBB9410:
 15307              	.LBB9390:
 15308              	.LBB9387:
 15309              	.LBB9378:
 15310              	.LBI9378:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15311              		.loc 18 346 7 is_stmt 1 view .LVU3476
 15312              	.LBB9379:
 15313              	.LBI9379:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15314              		.loc 21 387 7 view .LVU3477
 15315              	.LBB9380:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15316              		.loc 21 389 2 view .LVU3478
 15317 004a 0028     		cmp	r0, #0
 15318 004c EDD0     		beq	.L722
 15319 004e 08E0     		b	.L720
 15320              	.LVL932:
 15321              	.L727:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15322              		.loc 21 389 2 is_stmt 0 view .LVU3479
 15323              	.LBE9380:
 15324              	.LBE9379:
 15325              	.LBE9378:
 15326              	.LBE9387:
 15327              	.LBE9390:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 529


 15328              	.LBE9410:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 15329              		.loc 22 219 13 view .LVU3480
 15330 0050 0022     		movs	r2, #0
 15331 0052 01A9     		add	r1, sp, #4
 15332 0054 2046     		mov	r0, r4
 15333              	.LVL933:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 15334              		.loc 22 219 13 view .LVU3481
 15335 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 15336              	.LVL934:
 15337              	.LBB9411:
 15338              	.LBB9412:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15339              		.loc 18 211 31 view .LVU3482
 15340 005a 019B     		ldr	r3, [sp, #4]
 15341              	.LBE9412:
 15342              	.LBE9411:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 15343              		.loc 22 219 13 view .LVU3483
 15344 005c 0746     		mov	r7, r0
 15345              	.LVL935:
 15346              	.LBB9414:
 15347              	.LBI9414:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 15348              		.loc 18 178 7 is_stmt 1 view .LVU3484
 15349              	.LBB9415:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15350              		.loc 18 179 26 is_stmt 0 view .LVU3485
 15351 005e 2060     		str	r0, [r4]
 15352              	.LVL936:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15353              		.loc 18 179 26 view .LVU3486
 15354              	.LBE9415:
 15355              	.LBE9414:
 15356              	.LBB9416:
 15357              	.LBI9411:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 15358              		.loc 18 210 7 is_stmt 1 view .LVU3487
 15359              	.LBB9413:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15360              		.loc 18 211 31 is_stmt 0 view .LVU3488
 15361 0060 A360     		str	r3, [r4, #8]
 15362              	.LVL937:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15363              		.loc 18 211 31 view .LVU3489
 15364              	.LBE9413:
 15365              	.LBE9416:
 15366              	.LBB9417:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15367              		.loc 18 186 7 is_stmt 1 view .LVU3490
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15368              		.loc 18 186 7 is_stmt 0 view .LVU3491
 15369              	.LBE9417:
 15370              	.LBB9418:
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 15371              		.loc 18 396 7 is_stmt 1 view .LVU3492
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 530


 15372              	.LBB9391:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15373              		.loc 18 346 7 view .LVU3493
 15374              	.LBB9388:
 15375              	.LBB9385:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15376              		.loc 18 346 7 view .LVU3494
 15377              	.LBB9383:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15378              		.loc 21 387 7 view .LVU3495
 15379              	.LBB9381:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15380              		.loc 21 389 2 view .LVU3496
 15381              	.L720:
 15382              		.loc 21 395 2 view .LVU3497
 15383              		.loc 21 395 49 is_stmt 0 view .LVU3498
 15384 0062 3246     		mov	r2, r6
 15385 0064 3846     		mov	r0, r7
 15386 0066 4146     		mov	r1, r8
 15387 0068 FFF7FEFF 		bl	memcpy
 15388              	.LVL938:
 15389              	.LBE9381:
 15390              	.LBE9383:
 15391              	.LBE9385:
 15392              	.LBE9388:
 15393              	.LBE9391:
 15394              	.LBE9418:
 15395              		.loc 22 232 15 view .LVU3499
 15396 006c 019E     		ldr	r6, [sp, #4]
 15397              	.LVL939:
 15398              	.LBB9419:
 15399              	.LBB9408:
 15400              	.LBB9406:
 15401              	.LBB9403:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15402              		.loc 18 187 28 view .LVU3500
 15403 006e 2768     		ldr	r7, [r4]
 15404              	.LVL940:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15405              		.loc 18 187 28 view .LVU3501
 15406              	.LBE9403:
 15407              	.LBE9406:
 15408              	.LBE9408:
 15409              	.LBE9419:
 15410              	.LBB9420:
 15411              	.LBB9392:
 15412              	.LBB9389:
 15413              	.LBB9386:
 15414              	.LBB9384:
 15415              	.LBB9382:
 15416              		.loc 21 395 66 view .LVU3502
 15417 0070 DBE7     		b	.L722
 15418              	.LBE9382:
 15419              	.LBE9384:
 15420              	.LBE9386:
 15421              	.LBE9389:
 15422              	.LBE9392:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 531


 15423              	.LBE9420:
 15424              	.LBE9423:
 15425              	.LBE9426:
 15426              	.LBE9429:
 15427              	.LBE9432:
 15428              	.LBE9435:
 15429              	.LBE9439:
 15430              	.LBE9459:
 15431              	.LBE9464:
 15432              		.cfi_endproc
 15433              	.LFE5534:
 15435              		.weak	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA8_KcS
 15436              		.thumb_set _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA
 15437 0072 00BF     		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_,"
 15438              		.align	1
 15439              		.p2align 2,,3
 15440              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
 15441              		.syntax unified
 15442              		.thumb
 15443              		.thumb_func
 15444              		.fpu fpv5-d16
 15446              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:
 15447              	.LVL941:
 15448              	.LFB5541:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 15449              		.loc 24 553 7 is_stmt 1 view -0
 15450              		.cfi_startproc
 15451              		@ args = 0, pretend = 0, frame = 8
 15452              		@ frame_needed = 0, uses_anonymous_args = 0
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 15453              		.loc 24 553 7 is_stmt 0 view .LVU3504
 15454 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 15455              		.cfi_def_cfa_offset 32
 15456              		.cfi_offset 4, -32
 15457              		.cfi_offset 5, -28
 15458              		.cfi_offset 6, -24
 15459              		.cfi_offset 7, -20
 15460              		.cfi_offset 8, -16
 15461              		.cfi_offset 9, -12
 15462              		.cfi_offset 10, -8
 15463              		.cfi_offset 14, -4
 15464              	.LBB9565:
 15465              	.LBB9566:
 15466              	.LBB9567:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 15467              		.loc 24 919 50 view .LVU3505
 15468 0004 D1E90024 		ldrd	r2, r4, [r1]
 15469              	.LBE9567:
 15470              	.LBE9566:
 15471              	.LBB9568:
 15472              	.LBB9569:
 15473              	.LBB9570:
 15474              	.LBB9571:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15475              		.loc 24 98 47 view .LVU3506
 15476 0008 0023     		movs	r3, #0
 15477              	.LBE9571:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 532


 15478              	.LBE9570:
 15479              	.LBE9569:
 15480              	.LBE9568:
 15481              	.LBE9565:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 15482              		.loc 24 553 7 view .LVU3507
 15483 000a 82B0     		sub	sp, sp, #8
 15484              		.cfi_def_cfa_offset 40
 15485              	.LBB9766:
 15486              	.LBB9605:
 15487              	.LBB9578:
 15488              	.LBB9579:
 15489              	.LBB9580:
 15490              	.LBB9581:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15491              		.loc 24 346 18 view .LVU3508
 15492 000c A41A     		subs	r4, r4, r2
 15493              	.LBE9581:
 15494              	.LBE9580:
 15495              	.LBE9579:
 15496              	.LBE9578:
 15497              	.LBE9605:
 15498              	.LBE9766:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 15499              		.loc 24 553 7 view .LVU3509
 15500 000e 0D46     		mov	r5, r1
 15501 0010 8046     		mov	r8, r0
 15502              	.LVL942:
 15503              	.LBB9767:
 15504              	.LBB9606:
 15505              	.LBI9566:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15506              		.loc 24 918 7 is_stmt 1 view .LVU3510
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15507              		.loc 24 918 7 is_stmt 0 view .LVU3511
 15508              	.LBE9606:
 15509              	.LBB9607:
 15510              	.LBI9607:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15511              		.loc 24 280 7 is_stmt 1 view .LVU3512
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15512              		.loc 24 280 7 is_stmt 0 view .LVU3513
 15513              	.LBE9607:
 15514              	.LBB9608:
 15515              	.LBI9608:
 15516              		.loc 38 97 29 is_stmt 1 view .LVU3514
 15517              	.LBB9609:
 15518              	.LBI9609:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 15519              		.loc 26 558 7 view .LVU3515
 15520              	.LBB9610:
 15521              	.LBI9610:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15522              		.loc 19 147 7 view .LVU3516
 15523              	.LBB9611:
 15524              	.LBI9611:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 533


 15525              		.loc 20 82 7 view .LVU3517
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15526              		.loc 20 82 7 is_stmt 0 view .LVU3518
 15527              	.LBE9611:
 15528              	.LBE9610:
 15529              	.LBE9609:
 15530              	.LBE9608:
 15531              	.LBB9612:
 15532              	.LBI9568:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 15533              		.loc 24 303 7 is_stmt 1 view .LVU3519
 15534              	.LBB9599:
 15535              	.LBI9569:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 15536              		.loc 24 136 2 view .LVU3520
 15537              	.LBB9574:
 15538              	.LBI9574:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15539              		.loc 19 147 7 view .LVU3521
 15540              	.LBB9575:
 15541              	.LBI9575:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15542              		.loc 20 82 7 view .LVU3522
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15543              		.loc 20 82 7 is_stmt 0 view .LVU3523
 15544              	.LBE9575:
 15545              	.LBE9574:
 15546              	.LBB9576:
 15547              	.LBI9570:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 15548              		.loc 24 97 2 is_stmt 1 view .LVU3524
 15549              	.LBB9572:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15550              		.loc 24 98 47 is_stmt 0 view .LVU3525
 15551 0012 8360     		str	r3, [r0, #8]
 15552              	.LVL943:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 15553              		.loc 24 98 47 view .LVU3526
 15554              	.LBE9572:
 15555              	.LBE9576:
 15556              	.LBE9599:
 15557              	.LBB9600:
 15558              	.LBI9578:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15559              		.loc 24 359 7 is_stmt 1 view .LVU3527
 15560              	.LBB9595:
 15561              	.LBB9591:
 15562              	.LBI9580:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 15563              		.loc 24 343 7 view .LVU3528
 15564              	.LBE9591:
 15565              	.LBE9595:
 15566              	.LBE9600:
 15567              	.LBB9601:
 15568              	.LBB9577:
 15569              	.LBB9573:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 534


 15570              		.loc 24 98 47 is_stmt 0 view .LVU3529
 15571 0014 C0E90033 		strd	r3, r3, [r0]
 15572              	.LBE9573:
 15573              	.LBE9577:
 15574              	.LBE9601:
 15575              	.LBB9602:
 15576              	.LBB9596:
 15577              	.LBB9592:
 15578              	.LBB9588:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15579              		.loc 24 346 18 view .LVU3530
 15580 0018 49D0     		beq	.L738
 15581              	.LVL944:
 15582              	.LBB9582:
 15583              	.LBI9582:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 15584              		.loc 26 459 7 is_stmt 1 view .LVU3531
 15585              	.LBB9583:
 15586              	.LBI9583:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 15587              		.loc 20 103 7 view .LVU3532
 15588              	.LBB9584:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 15589              		.loc 20 105 2 is_stmt 0 view .LVU3533
 15590 001a 284B     		ldr	r3, .L754
 15591 001c 9C42     		cmp	r4, r3
 15592 001e 4BD8     		bhi	.L750
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15593              		.loc 20 115 41 view .LVU3534
 15594 0020 2046     		mov	r0, r4
 15595              	.LVL945:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15596              		.loc 20 115 41 view .LVU3535
 15597 0022 FFF7FEFF 		bl	_Znwj
 15598              	.LVL946:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15599              		.loc 20 115 41 view .LVU3536
 15600 0026 8246     		mov	r10, r0
 15601              	.LVL947:
 15602              	.L729:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 15603              		.loc 20 115 41 view .LVU3537
 15604              	.LBE9584:
 15605              	.LBE9583:
 15606              	.LBE9582:
 15607              	.LBE9588:
 15608              	.LBE9592:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15609              		.loc 24 363 59 view .LVU3538
 15610 0028 5444     		add	r4, r4, r10
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 15611              		.loc 24 362 26 view .LVU3539
 15612 002a C8E900AA 		strd	r10, r10, [r8]
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15613              		.loc 24 363 34 view .LVU3540
 15614 002e C8F80840 		str	r4, [r8, #8]
 15615              	.LVL948:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 535


 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 15616              		.loc 24 363 34 view .LVU3541
 15617              	.LBE9596:
 15618              	.LBE9602:
 15619              	.LBE9612:
 15620              	.LBB9613:
 15621              	.LBI9613:
 15622              		.loc 19 162 7 is_stmt 1 view .LVU3542
 15623              	.LBB9614:
 15624              	.LBI9614:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15625              		.loc 20 89 7 view .LVU3543
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15626              		.loc 20 89 7 is_stmt 0 view .LVU3544
 15627              	.LBE9614:
 15628              	.LBE9613:
 15629              	.LBB9615:
 15630              	.LBI9615:
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 15631              		.loc 24 820 7 is_stmt 1 view .LVU3545
 15632              	.LBB9616:
 15633              	.LBI9616:
 15634              		.file 39 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 536


  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 537


  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 538


 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 539


 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 540


 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 541


 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 542


 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 543


 434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 544


 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 545


 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 546


 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 547


 662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 548


 719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 549


 776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 550


 833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 551


 890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 552


 947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 15635              		.loc 39 978 7 view .LVU3546
 15636              	.LBE9616:
 15637              	.LBE9615:
 15638              	.LBB9617:
 15639              	.LBB9618:
 15640              	.LBB9619:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 15641              		.loc 39 979 23 is_stmt 0 view .LVU3547
 15642 0032 D5E90069 		ldrd	r6, r9, [r5]
 15643              	.LVL949:
 15644              		.loc 39 979 23 view .LVU3548
 15645              	.LBE9619:
 15646              	.LBE9618:
 15647              	.LBE9617:
 15648              	.LBB9620:
 15649              	.LBI9620:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15650              		.loc 24 276 7 is_stmt 1 view .LVU3549
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 15651              		.loc 24 276 7 is_stmt 0 view .LVU3550
 15652              	.LBE9620:
 15653              	.LBB9621:
 15654              	.LBI9621:
 15655              		.loc 28 323 5 is_stmt 1 view .LVU3551
 15656              	.LBB9622:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 553


 15657              	.LBI9622:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 15658              		.loc 28 125 5 view .LVU3552
 15659              	.LBB9623:
 15660              	.LBB9624:
 15661              	.LBI9624:
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 15662              		.loc 28 84 9 view .LVU3553
 15663              	.LBB9625:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15664              		.loc 28 90 23 view .LVU3554
 15665 0036 B145     		cmp	r9, r6
 15666 0038 33D0     		beq	.L731
 15667 003a 0AF11804 		add	r4, r10, #24
 15668 003e 0AE0     		b	.L737
 15669              	.LVL950:
 15670              	.L753:
 15671              	.LBB9626:
 15672              	.LBB9627:
 15673              	.LBB9628:
 15674              	.LBB9629:
 15675              	.LBB9630:
 15676              	.LBB9631:
 15677              	.LBB9632:
 15678              	.LBB9633:
 15679              	.LBB9634:
 15680              	.LBB9635:
 15681              	.LBB9636:
 15682              	.LBB9637:
 15683              	.LBB9638:
 15684              	.LBI9638:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15685              		.loc 21 321 7 view .LVU3555
 15686              	.LBB9639:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15687              		.loc 21 322 9 view .LVU3556
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15688              		.loc 21 322 16 is_stmt 0 view .LVU3557
 15689 0040 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 15690              	.LVL951:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15691              		.loc 21 322 14 view .LVU3558
 15692 0042 04F8103C 		strb	r3, [r4, #-16]
 15693              	.LVL952:
 15694              	.L736:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15695              		.loc 21 322 14 view .LVU3559
 15696              	.LBE9639:
 15697              	.LBE9638:
 15698              	.LBE9637:
 15699              	.LBE9636:
 15700              	.LBE9635:
 15701              	.LBB9660:
 15702              	.LBI9660:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15703              		.loc 18 214 7 is_stmt 1 view .LVU3560
 15704              	.LBB9661:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 554


 15705              	.LBB9662:
 15706              	.LBI9662:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 15707              		.loc 18 182 7 view .LVU3561
 15708              	.LBE9662:
 15709              	.LBE9661:
 15710              	.LBE9660:
 15711              	.LBE9634:
 15712              	.LBE9633:
 15713              	.LBE9632:
 15714              	.LBE9631:
 15715              	.LBE9630:
 15716              	.LBE9629:
 15717              	.LBE9628:
 15718              	.LBE9627:
 15719              	.LBE9626:
 15720              	.LBB9746:
 15721              	.LBB9747:
 980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
 15722              		.loc 39 1005 2 is_stmt 0 view .LVU3562
 15723 0046 1836     		adds	r6, r6, #24
 15724              	.LVL953:
 15725              		.loc 39 1005 2 view .LVU3563
 15726              	.LBE9747:
 15727              	.LBE9746:
 15728              	.LBB9748:
 15729              	.LBB9741:
 15730              	.LBB9736:
 15731              	.LBB9713:
 15732              	.LBB9709:
 15733              	.LBB9705:
 15734              	.LBB9701:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 555


 15735              	.LBB9697:
 15736              	.LBB9693:
 15737              	.LBB9677:
 15738              	.LBB9674:
 15739              	.LBB9664:
 15740              	.LBB9665:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15741              		.loc 21 322 14 view .LVU3564
 15742 0048 0023     		movs	r3, #0
 15743              	.LBE9665:
 15744              	.LBE9664:
 15745              	.LBB9668:
 15746              	.LBB9663:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15747              		.loc 18 183 26 view .LVU3565
 15748 004a 44F8145C 		str	r5, [r4, #-20]
 15749              	.LVL954:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15750              		.loc 18 183 26 view .LVU3566
 15751              	.LBE9663:
 15752              	.LBE9668:
 15753              	.LBB9669:
 15754              	.LBI9669:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15755              		.loc 18 186 7 is_stmt 1 view .LVU3567
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15756              		.loc 18 186 7 is_stmt 0 view .LVU3568
 15757              	.LBE9669:
 15758              	.LBB9671:
 15759              	.LBI9664:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 15760              		.loc 21 321 7 is_stmt 1 view .LVU3569
 15761              	.LBB9666:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15762              		.loc 21 322 9 view .LVU3570
 15763              	.LBE9666:
 15764              	.LBE9671:
 15765              	.LBE9674:
 15766              	.LBE9677:
 15767              	.LBE9693:
 15768              	.LBE9697:
 15769              	.LBE9701:
 15770              	.LBE9705:
 15771              	.LBE9709:
 15772              	.LBE9713:
 15773              	.LBE9736:
 15774              	.LBE9741:
 15775              	.LBE9748:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15776              		.loc 28 90 23 is_stmt 0 view .LVU3571
 15777 004e 1834     		adds	r4, r4, #24
 15778              	.LVL955:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15779              		.loc 28 90 23 view .LVU3572
 15780 0050 4E45     		cmp	r6, r9
 15781              	.LBB9749:
 15782              	.LBB9742:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 556


 15783              	.LBB9737:
 15784              	.LBB9714:
 15785              	.LBB9710:
 15786              	.LBB9706:
 15787              	.LBB9702:
 15788              	.LBB9698:
 15789              	.LBB9694:
 15790              	.LBB9678:
 15791              	.LBB9675:
 15792              	.LBB9672:
 15793              	.LBB9667:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15794              		.loc 21 322 14 view .LVU3573
 15795 0052 4355     		strb	r3, [r0, r5]
 15796              	.LVL956:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 15797              		.loc 21 322 14 view .LVU3574
 15798              	.LBE9667:
 15799              	.LBE9672:
 15800              	.LBE9675:
 15801              	.LBE9678:
 15802              	.LBE9694:
 15803              	.LBE9698:
 15804              	.LBE9702:
 15805              	.LBE9706:
 15806              	.LBE9710:
 15807              	.LBE9714:
 15808              	.LBE9737:
 15809              	.LBE9742:
 15810              	.LBE9749:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15811              		.loc 28 90 8 is_stmt 1 view .LVU3575
 15812              	.LBB9750:
 15813              	.LBI9746:
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 15814              		.loc 39 1003 7 view .LVU3576
1003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 15815              		.loc 39 1003 7 is_stmt 0 view .LVU3577
 15816              	.LBE9750:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15817              		.loc 28 90 23 is_stmt 1 view .LVU3578
 15818 0054 25D0     		beq	.L731
 15819              	.L737:
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 15820              		.loc 28 90 23 is_stmt 0 view .LVU3579
 15821 0056 A4F11000 		sub	r0, r4, #16
 15822              	.LBB9751:
 15823              	.LBB9743:
 15824              	.LBB9738:
 15825              	.LBB9715:
 15826              	.LBB9716:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15827              		.loc 18 908 16 view .LVU3580
 15828 005a 7568     		ldr	r5, [r6, #4]
 15829 005c A4F11803 		sub	r3, r4, #24
 15830              	.LVL957:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 557


 15831              		.loc 18 908 16 view .LVU3581
 15832              	.LBE9716:
 15833              	.LBE9715:
 15834              	.LBE9738:
 15835              	.LBE9743:
 15836              	.LBI9626:
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 15837              		.loc 30 108 5 is_stmt 1 view .LVU3582
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_construct.h ****     { ::new(static_cast<void*>(__p)) _Tp(std::forward<_Args>(__args)...); }
 15838              		.loc 30 108 5 is_stmt 0 view .LVU3583
 15839              	.LBE9751:
 15840              	.LBE9625:
 15841              	.LBE9624:
 15842              	.LBE9623:
 15843              	.LBE9622:
 15844              	.LBE9621:
 15845              	.LBE9767:
 15846              		.loc 23 175 3 is_stmt 1 view .LVU3584
 15847              	.LBB9768:
 15848              	.LBB9762:
 15849              	.LBB9760:
 15850              	.LBB9758:
 15851              	.LBB9756:
 15852              	.LBB9754:
 15853              	.LBB9752:
 15854              	.LBB9744:
 15855              	.LBI9627:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 15856              		.loc 18 448 7 view .LVU3585
 15857              	.LBB9739:
 15858              	.LBB9717:
 15859              	.LBI9717:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15860              		.loc 18 190 7 view .LVU3586
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15861              		.loc 18 190 7 is_stmt 0 view .LVU3587
 15862              	.LBE9717:
 15863              	.LBB9718:
 15864              	.LBI9718:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 15865              		.loc 18 290 7 is_stmt 1 view .LVU3588
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 15866              		.loc 18 290 7 is_stmt 0 view .LVU3589
 15867              	.LBE9718:
 15868              	.LBB9719:
 15869              	.LBI9719:
 15870              		.loc 38 97 29 is_stmt 1 view .LVU3590
 15871              	.LBB9720:
 15872              	.LBI9720:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 15873              		.loc 26 558 7 view .LVU3591
 15874              	.LBB9721:
 15875              	.LBI9721:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15876              		.loc 19 147 7 view .LVU3592
 15877              	.LBB9722:
 15878              	.LBI9722:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 558


  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15879              		.loc 20 82 7 view .LVU3593
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15880              		.loc 20 82 7 is_stmt 0 view .LVU3594
 15881              	.LBE9722:
 15882              	.LBE9721:
 15883              	.LBE9720:
 15884              	.LBE9719:
 15885              	.LBB9723:
 15886              	.LBI9723:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15887              		.loc 18 159 2 is_stmt 1 view .LVU3595
 15888              	.LBB9724:
 15889              	.LBB9725:
 15890              	.LBI9725:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15891              		.loc 37 101 5 view .LVU3596
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 15892              		.loc 37 101 5 is_stmt 0 view .LVU3597
 15893              	.LBE9725:
 15894              	.LBB9726:
 15895              	.LBI9726:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15896              		.loc 19 147 7 is_stmt 1 view .LVU3598
 15897              	.LBB9727:
 15898              	.LBI9727:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15899              		.loc 20 82 7 view .LVU3599
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15900              		.loc 20 82 7 is_stmt 0 view .LVU3600
 15901 0060 A246     		mov	r10, r4
 15902              	.LBE9727:
 15903              	.LBE9726:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 15904              		.loc 18 160 46 view .LVU3601
 15905 0062 44F8180C 		str	r0, [r4, #-24]
 15906              	.LVL958:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 15907              		.loc 18 160 46 view .LVU3602
 15908              	.LBE9724:
 15909              	.LBE9723:
 15910              	.LBB9728:
 15911              	.LBI9728:
 15912              		.loc 19 162 7 is_stmt 1 view .LVU3603
 15913              	.LBB9729:
 15914              	.LBI9729:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15915              		.loc 20 89 7 view .LVU3604
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 15916              		.loc 20 89 7 is_stmt 0 view .LVU3605
 15917              	.LBE9729:
 15918              	.LBE9728:
 15919              	.LBB9730:
 15920              	.LBI9730:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15921              		.loc 18 186 7 is_stmt 1 view .LVU3606
 15922              	.LBB9731:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 559


 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15923              		.loc 18 187 28 is_stmt 0 view .LVU3607
 15924 0066 3768     		ldr	r7, [r6]
 15925              	.LVL959:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 15926              		.loc 18 187 28 view .LVU3608
 15927              	.LBE9731:
 15928              	.LBE9730:
 15929              	.LBB9732:
 15930              	.LBI9732:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15931              		.loc 18 186 7 is_stmt 1 view .LVU3609
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15932              		.loc 18 186 7 is_stmt 0 view .LVU3610
 15933              	.LBE9732:
 15934              	.LBB9733:
 15935              	.LBI9715:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 15936              		.loc 18 907 7 is_stmt 1 view .LVU3611
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 15937              		.loc 18 907 7 is_stmt 0 view .LVU3612
 15938              	.LBE9733:
 15939              	.LBB9734:
 15940              	.LBI9629:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 15941              		.loc 18 263 9 is_stmt 1 view .LVU3613
 15942              	.LBB9711:
 15943              	.LBB9707:
 15944              	.LBI9631:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 15945              		.loc 18 243 9 view .LVU3614
 15946              	.LBB9703:
 15947              	.LBB9699:
 15948              	.LBI9633:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 15949              		.loc 22 206 7 view .LVU3615
 15950              	.LBB9695:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 15951              		.loc 22 211 42 is_stmt 0 view .LVU3616
 15952 0068 EF42     		cmn	r7, r5
 15953 006a 00D0     		beq	.L732
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 15954              		.loc 22 211 42 view .LVU3617
 15955 006c 0FB3     		cbz	r7, .L751
 15956              	.L732:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 15957              		.loc 22 217 2 view .LVU3618
 15958 006e 0F2D     		cmp	r5, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 15959              		.loc 22 215 12 view .LVU3619
 15960 0070 0195     		str	r5, [sp, #4]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 15961              		.loc 22 217 2 view .LVU3620
 15962 0072 04D8     		bhi	.L752
 15963              	.LVL960:
 15964              	.LBB9679:
 15965              	.LBI9679:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 560


 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15966              		.loc 18 186 7 is_stmt 1 view .LVU3621
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 15967              		.loc 18 186 7 is_stmt 0 view .LVU3622
 15968              	.LBE9679:
 15969              	.LBB9680:
 15970              	.LBI9635:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 15971              		.loc 18 392 7 is_stmt 1 view .LVU3623
 15972              	.LBB9656:
 15973              	.LBI9636:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15974              		.loc 18 346 7 view .LVU3624
 15975              	.LBB9652:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 15976              		.loc 18 348 2 is_stmt 0 view .LVU3625
 15977 0074 012D     		cmp	r5, #1
 15978 0076 E3D0     		beq	.L753
 15979              	.LVL961:
 15980              	.LBB9640:
 15981              	.LBI9640:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 15982              		.loc 18 346 7 is_stmt 1 view .LVU3626
 15983              	.LBB9641:
 15984              	.LBI9641:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 15985              		.loc 21 387 7 view .LVU3627
 15986              	.LBB9642:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15987              		.loc 21 389 2 view .LVU3628
 15988 0078 002D     		cmp	r5, #0
 15989 007a E4D0     		beq	.L736
 15990 007c 09E0     		b	.L734
 15991              	.LVL962:
 15992              	.L752:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 15993              		.loc 21 389 2 is_stmt 0 view .LVU3629
 15994              	.LBE9642:
 15995              	.LBE9641:
 15996              	.LBE9640:
 15997              	.LBE9652:
 15998              	.LBE9656:
 15999              	.LBE9680:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 16000              		.loc 22 219 13 view .LVU3630
 16001 007e 1846     		mov	r0, r3
 16002 0080 0022     		movs	r2, #0
 16003 0082 01A9     		add	r1, sp, #4
 16004 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 16005              	.LVL963:
 16006              	.LBB9681:
 16007              	.LBB9682:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16008              		.loc 18 211 31 view .LVU3631
 16009 0088 019B     		ldr	r3, [sp, #4]
 16010              	.LVL964:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 561


 16011              		.loc 18 211 31 view .LVU3632
 16012              	.LBE9682:
 16013              	.LBE9681:
 16014              	.LBB9684:
 16015              	.LBI9684:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 16016              		.loc 18 178 7 is_stmt 1 view .LVU3633
 16017              	.LBB9685:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16018              		.loc 18 179 26 is_stmt 0 view .LVU3634
 16019 008a 44F8180C 		str	r0, [r4, #-24]
 16020              	.LVL965:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16021              		.loc 18 179 26 view .LVU3635
 16022              	.LBE9685:
 16023              	.LBE9684:
 16024              	.LBB9686:
 16025              	.LBI9681:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16026              		.loc 18 210 7 is_stmt 1 view .LVU3636
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16027              		.loc 18 210 7 is_stmt 0 view .LVU3637
 16028              	.LBE9686:
 16029              	.LBB9687:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16030              		.loc 18 186 7 is_stmt 1 view .LVU3638
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 16031              		.loc 18 186 7 is_stmt 0 view .LVU3639
 16032              	.LBE9687:
 16033              	.LBB9688:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 16034              		.loc 18 392 7 is_stmt 1 view .LVU3640
 16035              	.LBB9657:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16036              		.loc 18 346 7 view .LVU3641
 16037              	.LBB9653:
 16038              	.LBB9649:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16039              		.loc 18 346 7 view .LVU3642
 16040              	.LBB9646:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 16041              		.loc 21 387 7 view .LVU3643
 16042              	.LBB9643:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 16043              		.loc 21 389 2 view .LVU3644
 16044              	.LBE9643:
 16045              	.LBE9646:
 16046              	.LBE9649:
 16047              	.LBE9653:
 16048              	.LBE9657:
 16049              	.LBE9688:
 16050              	.LBB9689:
 16051              	.LBB9683:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16052              		.loc 18 211 31 is_stmt 0 view .LVU3645
 16053 008e 44F8103C 		str	r3, [r4, #-16]
 16054              	.L734:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 562


 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16055              		.loc 18 211 31 view .LVU3646
 16056              	.LBE9683:
 16057              	.LBE9689:
 16058              	.LBB9690:
 16059              	.LBB9658:
 16060              	.LBB9654:
 16061              	.LBB9650:
 16062              	.LBB9647:
 16063              	.LBB9644:
 16064              		.loc 21 395 2 is_stmt 1 view .LVU3647
 16065              		.loc 21 395 49 is_stmt 0 view .LVU3648
 16066 0092 2A46     		mov	r2, r5
 16067 0094 3946     		mov	r1, r7
 16068 0096 FFF7FEFF 		bl	memcpy
 16069              	.LVL966:
 16070              		.loc 21 395 49 view .LVU3649
 16071              	.LBE9644:
 16072              	.LBE9647:
 16073              	.LBE9650:
 16074              	.LBE9654:
 16075              	.LBE9658:
 16076              	.LBE9690:
 16077              		.loc 22 232 15 view .LVU3650
 16078 009a 019D     		ldr	r5, [sp, #4]
 16079              	.LVL967:
 16080              	.LBB9691:
 16081              	.LBB9676:
 16082              	.LBB9673:
 16083              	.LBB9670:
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16084              		.loc 18 187 28 view .LVU3651
 16085 009c 54F8180C 		ldr	r0, [r4, #-24]
 16086              	.LBE9670:
 16087              	.LBE9673:
 16088              	.LBE9676:
 16089              	.LBE9691:
 16090              	.LBB9692:
 16091              	.LBB9659:
 16092              	.LBB9655:
 16093              	.LBB9651:
 16094              	.LBB9648:
 16095              	.LBB9645:
 16096              		.loc 21 395 66 view .LVU3652
 16097 00a0 D1E7     		b	.L736
 16098              	.LVL968:
 16099              	.L731:
 16100              		.loc 21 395 66 view .LVU3653
 16101              	.LBE9645:
 16102              	.LBE9648:
 16103              	.LBE9651:
 16104              	.LBE9655:
 16105              	.LBE9659:
 16106              	.LBE9692:
 16107              	.LBE9695:
 16108              	.LBE9699:
 16109              	.LBE9703:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 563


 16110              	.LBE9707:
 16111              	.LBE9711:
 16112              	.LBE9734:
 16113              	.LBE9739:
 16114              	.LBE9744:
 16115              	.LBE9752:
 16116              	.LBE9754:
 16117              	.LBE9756:
 16118              	.LBE9758:
 16119              	.LBE9760:
 16120              	.LBE9762:
 16121              	.LBE9768:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16122              		.loc 24 561 7 view .LVU3654
 16123 00a2 4046     		mov	r0, r8
 16124              	.LBB9769:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 16125              		.loc 24 557 26 view .LVU3655
 16126 00a4 C8F804A0 		str	r10, [r8, #4]
 16127              	.LBE9769:
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 16128              		.loc 24 561 7 view .LVU3656
 16129 00a8 02B0     		add	sp, sp, #8
 16130              		.cfi_remember_state
 16131              		.cfi_def_cfa_offset 32
 16132              		@ sp needed
 16133 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 16134              	.LVL969:
 16135              	.L738:
 16136              		.cfi_restore_state
 16137              	.LBB9770:
 16138              	.LBB9763:
 16139              	.LBB9603:
 16140              	.LBB9597:
 16141              	.LBB9593:
 16142              	.LBB9589:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16143              		.loc 24 346 18 view .LVU3657
 16144 00ae A246     		mov	r10, r4
 16145 00b0 BAE7     		b	.L729
 16146              	.LVL970:
 16147              	.L751:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 16148              		.loc 24 346 18 view .LVU3658
 16149              	.LBE9589:
 16150              	.LBE9593:
 16151              	.LBE9597:
 16152              	.LBE9603:
 16153              	.LBE9763:
 16154              	.LBB9764:
 16155              	.LBB9761:
 16156              	.LBB9759:
 16157              	.LBB9757:
 16158              	.LBB9755:
 16159              	.LBB9753:
 16160              	.LBB9745:
 16161              	.LBB9740:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 564


 16162              	.LBB9735:
 16163              	.LBB9712:
 16164              	.LBB9708:
 16165              	.LBB9704:
 16166              	.LBB9700:
 16167              	.LBB9696:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 16168              		.loc 22 212 28 view .LVU3659
 16169 00b2 0348     		ldr	r0, .L754+4
 16170 00b4 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 16171              	.LVL971:
 16172              	.L750:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 16173              		.loc 22 212 28 view .LVU3660
 16174              	.LBE9696:
 16175              	.LBE9700:
 16176              	.LBE9704:
 16177              	.LBE9708:
 16178              	.LBE9712:
 16179              	.LBE9735:
 16180              	.LBE9740:
 16181              	.LBE9745:
 16182              	.LBE9753:
 16183              	.LBE9755:
 16184              	.LBE9757:
 16185              	.LBE9759:
 16186              	.LBE9761:
 16187              	.LBE9764:
 16188              	.LBB9765:
 16189              	.LBB9604:
 16190              	.LBB9598:
 16191              	.LBB9594:
 16192              	.LBB9590:
 16193              	.LBB9587:
 16194              	.LBB9586:
 16195              	.LBB9585:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16196              		.loc 20 106 26 view .LVU3661
 16197 00b8 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 16198              	.LVL972:
 16199              	.L755:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16200              		.loc 20 106 26 view .LVU3662
 16201              		.align	2
 16202              	.L754:
 16203 00bc F8FFFF7F 		.word	2147483640
 16204 00c0 00000000 		.word	.LC23
 16205              	.LBE9585:
 16206              	.LBE9586:
 16207              	.LBE9587:
 16208              	.LBE9590:
 16209              	.LBE9594:
 16210              	.LBE9598:
 16211              	.LBE9604:
 16212              	.LBE9765:
 16213              	.LBE9770:
 16214              		.cfi_endproc
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 565


 16215              	.LFE5541:
 16217              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16218              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_,_ZNSt
 16219              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 16220              		.align	2
 16221              	.LC25:
 16222 0000 50617474 		.ascii	"Pattern  \000"
 16222      65726E20 
 16222      2000
 16223 000a 0000     		.align	2
 16224              	.LC26:
 16225 000c 4E2F4120 		.ascii	"N/A      \000"
 16225      20202020 
 16225      2000
 16226 0016 0000     		.align	2
 16227              	.LC27:
 16228 0018 566F6963 		.ascii	"Voicing  \000"
 16228      696E6720 
 16228      2000
 16229 0022 0000     		.align	2
 16230              	.LC28:
 16231 0024 526F6F74 		.ascii	"Root     \000"
 16231      20202020 
 16231      2000
 16232 002e 0000     		.align	2
 16233              	.LC29:
 16234 0030 4D6F6465 		.ascii	"Mode     \000"
 16234      20202020 
 16234      2000
 16235 003a 0000     		.align	2
 16236              	.LC30:
 16237 003c 4F637461 		.ascii	"Octave   \000"
 16237      76652020 
 16237      2000
 16238 0046 0000     		.align	2
 16239              	.LC31:
 16240 0048 436C6F63 		.ascii	"Clock In \000"
 16240      6B20496E 
 16240      2000
 16241 0052 0000     		.align	2
 16242              	.LC32:
 16243 0054 49276D20 		.ascii	"I'm a debug string\000"
 16243      61206465 
 16243      62756720 
 16243      73747269 
 16243      6E6700
 16244              		.section	.text.startup.main,"ax",%progbits
 16245              		.align	1
 16246              		.p2align 2,,3
 16247              		.global	main
 16248              		.syntax unified
 16249              		.thumb
 16250              		.thumb_func
 16251              		.fpu fpv5-d16
 16253              	main:
 16254              	.LFB5125:
 109:Jellybeans.cpp **** int main(void) {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 566


 16255              		.loc 14 109 16 is_stmt 1 view -0
 16256              		.cfi_startproc
 16257              		@ Volatile: function does not return.
 16258              		@ args = 0, pretend = 0, frame = 112
 16259              		@ frame_needed = 0, uses_anonymous_args = 0
 111:Jellybeans.cpp ****     patch.Init();
 16260              		.loc 14 111 5 view .LVU3664
 109:Jellybeans.cpp **** int main(void) {
 16261              		.loc 14 109 16 is_stmt 0 view .LVU3665
 16262 0000 2DE98048 		push	{r7, fp, lr}
 16263              		.cfi_def_cfa_offset 12
 16264              		.cfi_offset 7, -12
 16265              		.cfi_offset 11, -8
 16266              		.cfi_offset 14, -4
 111:Jellybeans.cpp ****     patch.Init();
 16267              		.loc 14 111 15 view .LVU3666
 16268 0004 0021     		movs	r1, #0
 109:Jellybeans.cpp **** int main(void) {
 16269              		.loc 14 109 16 view .LVU3667
 16270 0006 9FB0     		sub	sp, sp, #124
 16271              		.cfi_def_cfa_offset 136
 111:Jellybeans.cpp ****     patch.Init();
 16272              		.loc 14 111 15 view .LVU3668
 16273 0008 B748     		ldr	r0, .L759
 16274 000a FFF7FEFF 		bl	_ZN5daisy10DaisyPatch4InitEb
 16275              	.LVL973:
 114:Jellybeans.cpp ****     arp = new Arp();
 16276              		.loc 14 114 5 is_stmt 1 view .LVU3669
 114:Jellybeans.cpp ****     arp = new Arp();
 16277              		.loc 14 114 19 is_stmt 0 view .LVU3670
 16278 000e 5420     		movs	r0, #84
 16279 0010 FFF7FEFF 		bl	_Znwj
 16280              	.LVL974:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16281              		.loc 14 118 70 view .LVU3671
 16282 0014 DFF850A3 		ldr	r10, .L759+128
 114:Jellybeans.cpp ****     arp = new Arp();
 16283              		.loc 14 114 19 view .LVU3672
 16284 0018 0446     		mov	r4, r0
 114:Jellybeans.cpp ****     arp = new Arp();
 16285              		.loc 14 114 9 view .LVU3673
 16286 001a FFF7FEFF 		bl	_ZN10jellybeans3ArpC1Ev
 16287              	.LVL975:
 16288 001e B34B     		ldr	r3, .L759+4
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16289              		.loc 14 118 70 view .LVU3674
 16290 0020 0AA8     		add	r0, sp, #40
 16291 0022 B349     		ldr	r1, .L759+8
 114:Jellybeans.cpp ****     arp = new Arp();
 16292              		.loc 14 114 9 view .LVU3675
 16293 0024 1C60     		str	r4, [r3]
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16294              		.loc 14 118 5 is_stmt 1 view .LVU3676
 16295              	.LVL976:
 16296              	.LBB10025:
 16297              	.LBI10025:
 16298              		.loc 29 185 7 view .LVU3677
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 567


 16299              	.LBB10026:
 16300              	.LBI10026:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16301              		.loc 29 55 7 view .LVU3678
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16302              		.loc 29 55 7 is_stmt 0 view .LVU3679
 16303              	.LBE10026:
 16304              	.LBE10025:
 16305              	.LBB10027:
 16306              	.LBI10027:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16307              		.loc 19 144 7 is_stmt 1 view .LVU3680
 16308              	.LBB10028:
 16309              	.LBI10028:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16310              		.loc 20 79 7 view .LVU3681
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16311              		.loc 20 79 7 is_stmt 0 view .LVU3682
 16312              	.LBE10028:
 16313              	.LBE10027:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16314              		.loc 14 118 70 view .LVU3683
 16315 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16316              	.LVL977:
 16317 002a 5146     		mov	r1, r10
 16318 002c 03A8     		add	r0, sp, #12
 16319 002e 06AC     		add	r4, sp, #24
 16320 0030 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16321              	.LVL978:
 16322              	.LBB10029:
 16323              	.LBI10029:
 482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_functor, __x._M_functor);
 484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_manager, __x._M_manager);
 485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	std::swap(_M_invoker, __x._M_invoker);
 486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       }
 487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.3] function capacity
 489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine if the %function wrapper has a target.
 492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return @c true when this %function object contains a target,
 494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  or @c false when it is empty.
 495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       explicit operator bool() const noexcept
 499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       { return !_M_empty(); }
 500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.4] function invocation
 502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Invokes the function targeted by @c *this.
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the result of the target.
 506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @throws bad_function_call when @c !(bool)*this
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 568


 508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  The function call operator invokes the target function object
 509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  stored by @c this.
 510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res operator()(_ArgTypes... __args) const;
 512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_rtti
 514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // [3.7.2.5] function target access
 515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Determine the type of the target of this function object
 517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  wrapper.
 518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @returns the type identifier of the target function object, or
 520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @c typeid(void) if @c !(bool)*this.
 521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  This function will not throw an %exception.
 523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       const type_info& target_type() const noexcept;
 525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       /**
 527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @brief Access the stored target function object.
 528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  @return Returns a pointer to the stored target function object,
 530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  if @c typeid(_Functor).equals(target_type()); otherwise, a NULL
 531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *  pointer.
 532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * This function does not throw exceptions.
 534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        *
 535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        * @{
 536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****        */
 537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor>       _Functor* target() noexcept;
 538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       template<typename _Functor> const _Functor* target() const noexcept;
 540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       // @}
 541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     private:
 544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);
 545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Invoker_type _M_invoker;
 546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   };
 547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #if __cpp_deduction_guides >= 201606
 549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename>
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper
 551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { };
 552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) noexcept(_Nx)
 556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) & noexcept(_Nx)
 562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 569


 565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const noexcept(_Nx)
 568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename _Tp, bool _Nx, typename... _Args>
 572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     struct __function_guide_helper<
 573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       _Res (_Tp::*) (_Args...) const & noexcept(_Nx)
 574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     >
 575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     { using type = _Res(_Args...); };
 576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Res(*)(_ArgTypes...)) -> function<_Res(_ArgTypes...)>;
 579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Functor, typename _Signature = typename
 581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	   __function_guide_helper<decltype(&_Functor::operator())>::type>
 582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(_Functor) -> function<_Signature>;
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** #endif
 584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   // Out-of-line member definitions.
 586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function<_Res(_ArgTypes...)>::
 588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     function(const function& __x)
 589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : _Function_base()
 590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     {
 591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       if (static_cast<bool>(__x))
 592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{
 593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
 594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_invoker = __x._M_invoker;
 595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  _M_manager = __x._M_manager;
 596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	}
 597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     }
 598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****   template<typename _Res, typename... _ArgTypes>
 600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     template<typename _Functor, typename, typename>
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function<_Res(_ArgTypes...)>::
 16324              		.loc 16 601 7 is_stmt 1 view .LVU3684
 16325              	.LBB10030:
 16326              	.LBB10031:
 16327              	.LBI10031:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16328              		.loc 16 240 5 view .LVU3685
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16329              		.loc 16 240 5 is_stmt 0 view .LVU3686
 16330              	.LBE10031:
 16331              	.LBB10032:
 16332              	.LBB10033:
 16333              	.LBI10033:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16334              		.loc 16 217 4 is_stmt 1 view .LVU3687
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16335              		.loc 16 217 4 is_stmt 0 view .LVU3688
 16336              	.LBE10033:
 16337              	.LBB10034:
 16338              	.LBI10034:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 570


 16339              		.loc 37 101 5 is_stmt 1 view .LVU3689
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16340              		.loc 37 101 5 is_stmt 0 view .LVU3690
 16341              	.LBE10034:
 16342              	.LBB10035:
 16343              	.LBI10035:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16344              		.loc 16 207 2 is_stmt 1 view .LVU3691
 16345              	.LBB10036:
 16346              	.LBI10036:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16347              		.loc 16 232 2 view .LVU3692
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16348              		.loc 16 232 2 is_stmt 0 view .LVU3693
 16349              	.LBE10036:
 16350              	.LBE10035:
 16351              	.LBE10032:
 16352              	.LBE10030:
 16353              	.LBE10029:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16354              		.loc 16 87 37 is_stmt 1 view .LVU3694
 16355              		.loc 23 175 3 view .LVU3695
 16356              	.LBB10053:
 16357              	.LBB10048:
 16358              	.LBB10043:
 16359              	.LBB10041:
 16360              	.LBB10039:
 16361              	.LBB10037:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16362              		.loc 16 233 4 is_stmt 0 view .LVU3696
 16363 0034 AF4B     		ldr	r3, .L759+12
 16364              	.LBE10037:
 16365              	.LBE10039:
 16366              	.LBE10041:
 16367              	.LBE10043:
 16368              	.LBE10048:
 16369              	.LBE10053:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16370              		.loc 14 118 70 view .LVU3697
 16371 0036 03AA     		add	r2, sp, #12
 16372              	.LBB10054:
 16373              	.LBB10049:
 16374              	.LBB10044:
 602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       : _Function_base()
 604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       {
 605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;
 606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	if (_My_handler::_M_not_empty_function(__f))
 608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  {
 609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
 610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_invoker = &_My_handler::_M_invoke;
 16375              		.loc 16 610 17 view .LVU3698
 16376 0038 AF4E     		ldr	r6, .L759+16
 16377              	.LBE10044:
 16378              	.LBE10049:
 16379              	.LBE10054:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 571


 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16380              		.loc 14 118 70 view .LVU3699
 16381 003a 0AA9     		add	r1, sp, #40
 16382              	.LBB10055:
 16383              	.LBB10050:
 16384              	.LBB10045:
 611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	    _M_manager = &_My_handler::_M_manager;
 16385              		.loc 16 611 17 view .LVU3700
 16386 003c AF4D     		ldr	r5, .L759+20
 16387              	.LBE10045:
 16388              	.LBE10050:
 16389              	.LBE10055:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16390              		.loc 14 118 70 view .LVU3701
 16391 003e 10A8     		add	r0, sp, #64
 16392              	.LBB10056:
 16393              	.LBB10051:
 16394              	.LBB10046:
 16395              	.LBB10042:
 16396              	.LBB10040:
 16397              	.LBB10038:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16398              		.loc 16 233 4 view .LVU3702
 16399 0040 0693     		str	r3, [sp, #24]
 16400              	.LVL979:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16401              		.loc 16 233 4 view .LVU3703
 16402              	.LBE10038:
 16403              	.LBE10040:
 16404              	.LBE10042:
 16405              	.LBE10046:
 16406              	.LBE10051:
 16407              	.LBE10056:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16408              		.loc 14 118 70 view .LVU3704
 16409 0042 0023     		movs	r3, #0
 16410 0044 0094     		str	r4, [sp]
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16411              		.loc 14 119 63 view .LVU3705
 16412 0046 DFF82493 		ldr	r9, .L759+132
 16413              	.LBB10057:
 16414              	.LBB10058:
 16415              	.LBB10059:
 16416              	.LBB10060:
 16417              	.LBB10061:
 16418              	.LBB10062:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16419              		.loc 16 233 4 view .LVU3706
 16420 004a DFF824B3 		ldr	fp, .L759+136
 16421              	.LBE10062:
 16422              	.LBE10061:
 16423              	.LBE10060:
 16424              	.LBE10059:
 16425              	.LBE10058:
 16426              	.LBE10057:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16427              		.loc 14 120 70 view .LVU3707
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 572


 16428 004e DFF82483 		ldr	r8, .L759+140
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16429              		.loc 14 121 63 view .LVU3708
 16430 0052 AB4F     		ldr	r7, .L759+24
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 16431              		.loc 14 130 22 view .LVU3709
 16432 0054 9FEDAB8A 		vldr.32	s16, .L759+28
 16433              	.LBB10075:
 16434              	.LBB10052:
 16435              	.LBB10047:
 16436              		.loc 16 611 17 view .LVU3710
 16437 0058 CDE90856 		strd	r5, r6, [sp, #32]
 16438              	.LVL980:
 16439              		.loc 16 611 17 view .LVU3711
 16440              	.LBE10047:
 16441              	.LBE10052:
 16442              	.LBE10075:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16443              		.loc 14 118 70 view .LVU3712
 16444 005c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16445              	.LVL981:
 16446 0060 10A9     		add	r1, sp, #64
 16447 0062 A948     		ldr	r0, .L759+32
 16448 0064 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16449              	.LVL982:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16450              		.loc 14 118 20 view .LVU3713
 16451 0068 10A8     		add	r0, sp, #64
 16452 006a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16453              	.LVL983:
 16454              	.LBB10076:
 16455              	.LBI10076:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16456              		.loc 16 303 11 is_stmt 1 view .LVU3714
 16457              	.LBB10077:
 16458 006e 2046     		mov	r0, r4
 16459 0070 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16460              	.LVL984:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16461              		.loc 16 303 11 is_stmt 0 view .LVU3715
 16462              	.LBE10077:
 16463              	.LBE10076:
 118:Jellybeans.cpp ****     menuItems[0] = MenuItem("Pattern  ", arpPatterns,    0, cbPattern);
 16464              		.loc 14 118 70 view .LVU3716
 16465 0074 03A8     		add	r0, sp, #12
 16466 0076 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16467              	.LVL985:
 16468              	.LBB10078:
 16469              	.LBI10078:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16470              		.loc 18 657 7 is_stmt 1 view .LVU3717
 16471              	.LBB10079:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16472              		.loc 18 658 19 is_stmt 0 view .LVU3718
 16473 007a 0AA8     		add	r0, sp, #40
 16474              	.LVL986:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 573


 16475              		.loc 18 658 19 view .LVU3719
 16476 007c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16477              	.LVL987:
 16478              	.LBB10080:
 16479              	.LBI10080:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16480              		.loc 18 150 14 is_stmt 1 view .LVU3720
 16481              	.LBB10081:
 16482              	.LBI10081:
 16483              		.loc 19 162 7 view .LVU3721
 16484              	.LBB10082:
 16485              	.LBI10082:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16486              		.loc 20 89 7 view .LVU3722
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16487              		.loc 20 89 7 is_stmt 0 view .LVU3723
 16488              	.LBE10082:
 16489              	.LBE10081:
 16490              	.LBE10080:
 16491              	.LBE10079:
 16492              	.LBE10078:
 16493              	.LBB10083:
 16494              	.LBI10083:
 16495              		.loc 19 162 7 is_stmt 1 view .LVU3724
 16496              	.LBB10084:
 16497              	.LBI10084:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16498              		.loc 20 89 7 view .LVU3725
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16499              		.loc 20 89 7 is_stmt 0 view .LVU3726
 16500              	.LBE10084:
 16501              	.LBE10083:
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16502              		.loc 14 119 5 is_stmt 1 view .LVU3727
 16503              	.LBB10085:
 16504              	.LBI10085:
 16505              		.loc 29 185 7 view .LVU3728
 16506              	.LBB10086:
 16507              	.LBI10086:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16508              		.loc 29 55 7 view .LVU3729
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16509              		.loc 29 55 7 is_stmt 0 view .LVU3730
 16510              	.LBE10086:
 16511              	.LBE10085:
 16512              	.LBB10087:
 16513              	.LBI10087:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16514              		.loc 19 144 7 is_stmt 1 view .LVU3731
 16515              	.LBB10088:
 16516              	.LBI10088:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16517              		.loc 20 79 7 view .LVU3732
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16518              		.loc 20 79 7 is_stmt 0 view .LVU3733
 16519              	.LBE10088:
 16520              	.LBE10087:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 574


 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16521              		.loc 14 119 63 view .LVU3734
 16522 0080 A249     		ldr	r1, .L759+36
 16523 0082 0AA8     		add	r0, sp, #40
 16524 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16525              	.LVL988:
 16526 0088 4946     		mov	r1, r9
 16527 008a 03A8     		add	r0, sp, #12
 16528 008c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16529              	.LVL989:
 16530              	.LBB10089:
 16531              	.LBI10057:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 16532              		.loc 16 601 7 is_stmt 1 view .LVU3735
 16533              	.LBB10073:
 16534              	.LBB10070:
 16535              	.LBI10070:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16536              		.loc 16 240 5 view .LVU3736
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16537              		.loc 16 240 5 is_stmt 0 view .LVU3737
 16538              	.LBE10070:
 16539              	.LBB10071:
 16540              	.LBB10066:
 16541              	.LBI10066:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16542              		.loc 16 217 4 is_stmt 1 view .LVU3738
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16543              		.loc 16 217 4 is_stmt 0 view .LVU3739
 16544              	.LBE10066:
 16545              	.LBB10067:
 16546              	.LBI10067:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16547              		.loc 37 101 5 is_stmt 1 view .LVU3740
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16548              		.loc 37 101 5 is_stmt 0 view .LVU3741
 16549              	.LBE10067:
 16550              	.LBB10068:
 16551              	.LBI10060:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16552              		.loc 16 207 2 is_stmt 1 view .LVU3742
 16553              	.LBB10064:
 16554              	.LBI10061:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16555              		.loc 16 232 2 view .LVU3743
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16556              		.loc 16 232 2 is_stmt 0 view .LVU3744
 16557              	.LBE10064:
 16558              	.LBE10068:
 16559              	.LBE10071:
 16560              	.LBE10073:
 16561              	.LBE10089:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16562              		.loc 16 87 37 is_stmt 1 view .LVU3745
 16563              		.loc 23 175 3 view .LVU3746
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16564              		.loc 14 119 63 is_stmt 0 view .LVU3747
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 575


 16565 0090 0023     		movs	r3, #0
 16566 0092 03AA     		add	r2, sp, #12
 16567 0094 0AA9     		add	r1, sp, #40
 16568 0096 0094     		str	r4, [sp]
 16569 0098 10A8     		add	r0, sp, #64
 16570              	.LBB10090:
 16571              	.LBB10074:
 16572              	.LBB10072:
 16573              	.LBB10069:
 16574              	.LBB10065:
 16575              	.LBB10063:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16576              		.loc 16 233 4 view .LVU3748
 16577 009a CDF818B0 		str	fp, [sp, #24]
 16578              	.LVL990:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16579              		.loc 16 233 4 view .LVU3749
 16580              	.LBE10063:
 16581              	.LBE10065:
 16582              	.LBE10069:
 16583              		.loc 16 611 17 view .LVU3750
 16584 009e CDE90856 		strd	r5, r6, [sp, #32]
 16585              	.LVL991:
 16586              		.loc 16 611 17 view .LVU3751
 16587              	.LBE10072:
 16588              	.LBE10074:
 16589              	.LBE10090:
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16590              		.loc 14 119 63 view .LVU3752
 16591 00a2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16592              	.LVL992:
 16593 00a6 10A9     		add	r1, sp, #64
 16594 00a8 9948     		ldr	r0, .L759+40
 16595 00aa FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16596              	.LVL993:
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16597              		.loc 14 119 20 view .LVU3753
 16598 00ae 10A8     		add	r0, sp, #64
 16599 00b0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16600              	.LVL994:
 16601              	.LBB10091:
 16602              	.LBI10091:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16603              		.loc 16 303 11 is_stmt 1 view .LVU3754
 16604              	.LBB10092:
 16605 00b4 2046     		mov	r0, r4
 16606 00b6 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16607              	.LVL995:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16608              		.loc 16 303 11 is_stmt 0 view .LVU3755
 16609              	.LBE10092:
 16610              	.LBE10091:
 119:Jellybeans.cpp ****     menuItems[1] = MenuItem("N/A      ", allClockInDivs, 0, cb); // Division
 16611              		.loc 14 119 63 view .LVU3756
 16612 00ba 03A8     		add	r0, sp, #12
 16613 00bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16614              	.LVL996:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 576


 16615              	.LBB10093:
 16616              	.LBI10093:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16617              		.loc 18 657 7 is_stmt 1 view .LVU3757
 16618              	.LBB10094:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16619              		.loc 18 658 19 is_stmt 0 view .LVU3758
 16620 00c0 0AA8     		add	r0, sp, #40
 16621              	.LVL997:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16622              		.loc 18 658 19 view .LVU3759
 16623 00c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16624              	.LVL998:
 16625              	.LBB10095:
 16626              	.LBI10095:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16627              		.loc 18 150 14 is_stmt 1 view .LVU3760
 16628              	.LBB10096:
 16629              	.LBI10096:
 16630              		.loc 19 162 7 view .LVU3761
 16631              	.LBB10097:
 16632              	.LBI10097:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16633              		.loc 20 89 7 view .LVU3762
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16634              		.loc 20 89 7 is_stmt 0 view .LVU3763
 16635              	.LBE10097:
 16636              	.LBE10096:
 16637              	.LBE10095:
 16638              	.LBE10094:
 16639              	.LBE10093:
 16640              	.LBB10098:
 16641              	.LBI10098:
 16642              		.loc 19 162 7 is_stmt 1 view .LVU3764
 16643              	.LBB10099:
 16644              	.LBI10099:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16645              		.loc 20 89 7 view .LVU3765
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16646              		.loc 20 89 7 is_stmt 0 view .LVU3766
 16647              	.LBE10099:
 16648              	.LBE10098:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16649              		.loc 14 120 5 is_stmt 1 view .LVU3767
 16650              	.LBB10100:
 16651              	.LBI10100:
 16652              		.loc 29 185 7 view .LVU3768
 16653              	.LBB10101:
 16654              	.LBI10101:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16655              		.loc 29 55 7 view .LVU3769
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16656              		.loc 29 55 7 is_stmt 0 view .LVU3770
 16657              	.LBE10101:
 16658              	.LBE10100:
 16659              	.LBB10102:
 16660              	.LBI10102:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 577


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16661              		.loc 19 144 7 is_stmt 1 view .LVU3771
 16662              	.LBB10103:
 16663              	.LBI10103:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16664              		.loc 20 79 7 view .LVU3772
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16665              		.loc 20 79 7 is_stmt 0 view .LVU3773
 16666              	.LBE10103:
 16667              	.LBE10102:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16668              		.loc 14 120 70 view .LVU3774
 16669 00c6 9349     		ldr	r1, .L759+44
 16670 00c8 0AA8     		add	r0, sp, #40
 16671 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16672              	.LVL999:
 16673 00ce 4146     		mov	r1, r8
 16674 00d0 03A8     		add	r0, sp, #12
 16675 00d2 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16676              	.LVL1000:
 16677              	.LBB10104:
 16678              	.LBI10104:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 16679              		.loc 16 601 7 is_stmt 1 view .LVU3775
 16680              	.LBB10105:
 16681              	.LBB10106:
 16682              	.LBI10106:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16683              		.loc 16 240 5 view .LVU3776
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16684              		.loc 16 240 5 is_stmt 0 view .LVU3777
 16685              	.LBE10106:
 16686              	.LBB10107:
 16687              	.LBB10108:
 16688              	.LBI10108:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16689              		.loc 16 217 4 is_stmt 1 view .LVU3778
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16690              		.loc 16 217 4 is_stmt 0 view .LVU3779
 16691              	.LBE10108:
 16692              	.LBB10109:
 16693              	.LBI10109:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16694              		.loc 37 101 5 is_stmt 1 view .LVU3780
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16695              		.loc 37 101 5 is_stmt 0 view .LVU3781
 16696              	.LBE10109:
 16697              	.LBB10110:
 16698              	.LBI10110:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16699              		.loc 16 207 2 is_stmt 1 view .LVU3782
 16700              	.LBB10111:
 16701              	.LBI10111:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16702              		.loc 16 232 2 view .LVU3783
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16703              		.loc 16 232 2 is_stmt 0 view .LVU3784
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 578


 16704              	.LBE10111:
 16705              	.LBE10110:
 16706              	.LBE10107:
 16707              	.LBE10105:
 16708              	.LBE10104:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16709              		.loc 16 87 37 is_stmt 1 view .LVU3785
 16710              		.loc 23 175 3 view .LVU3786
 16711              	.LBB10124:
 16712              	.LBB10121:
 16713              	.LBB10118:
 16714              	.LBB10116:
 16715              	.LBB10114:
 16716              	.LBB10112:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16717              		.loc 16 233 4 is_stmt 0 view .LVU3787
 16718 00d6 904B     		ldr	r3, .L759+48
 16719              	.LBE10112:
 16720              	.LBE10114:
 16721              	.LBE10116:
 16722              	.LBE10118:
 16723              	.LBE10121:
 16724              	.LBE10124:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16725              		.loc 14 120 70 view .LVU3788
 16726 00d8 03AA     		add	r2, sp, #12
 16727 00da 0AA9     		add	r1, sp, #40
 16728 00dc 0094     		str	r4, [sp]
 16729 00de 10A8     		add	r0, sp, #64
 16730              	.LBB10125:
 16731              	.LBB10122:
 16732              	.LBB10119:
 16733              	.LBB10117:
 16734              	.LBB10115:
 16735              	.LBB10113:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16736              		.loc 16 233 4 view .LVU3789
 16737 00e0 0693     		str	r3, [sp, #24]
 16738              	.LVL1001:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16739              		.loc 16 233 4 view .LVU3790
 16740              	.LBE10113:
 16741              	.LBE10115:
 16742              	.LBE10117:
 16743              	.LBE10119:
 16744              	.LBE10122:
 16745              	.LBE10125:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16746              		.loc 14 120 70 view .LVU3791
 16747 00e2 0023     		movs	r3, #0
 16748              	.LBB10126:
 16749              	.LBB10123:
 16750              	.LBB10120:
 16751              		.loc 16 611 17 view .LVU3792
 16752 00e4 CDE90856 		strd	r5, r6, [sp, #32]
 16753              	.LBE10120:
 16754              	.LBE10123:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 579


 16755              	.LBE10126:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16756              		.loc 14 120 70 view .LVU3793
 16757 00e8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16758              	.LVL1002:
 16759 00ec 10A9     		add	r1, sp, #64
 16760 00ee 8B48     		ldr	r0, .L759+52
 16761 00f0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16762              	.LVL1003:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16763              		.loc 14 120 20 view .LVU3794
 16764 00f4 10A8     		add	r0, sp, #64
 16765 00f6 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16766              	.LVL1004:
 16767              	.LBB10127:
 16768              	.LBI10127:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16769              		.loc 16 303 11 is_stmt 1 view .LVU3795
 16770              	.LBB10128:
 16771 00fa 2046     		mov	r0, r4
 16772 00fc FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16773              	.LVL1005:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16774              		.loc 16 303 11 is_stmt 0 view .LVU3796
 16775              	.LBE10128:
 16776              	.LBE10127:
 120:Jellybeans.cpp ****     menuItems[2] = MenuItem("Voicing  ", voicings,       0, cbVoicing);
 16777              		.loc 14 120 70 view .LVU3797
 16778 0100 03A8     		add	r0, sp, #12
 16779 0102 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16780              	.LVL1006:
 16781              	.LBB10129:
 16782              	.LBI10129:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16783              		.loc 18 657 7 is_stmt 1 view .LVU3798
 16784              	.LBB10130:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16785              		.loc 18 658 19 is_stmt 0 view .LVU3799
 16786 0106 0AA8     		add	r0, sp, #40
 16787              	.LVL1007:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16788              		.loc 18 658 19 view .LVU3800
 16789 0108 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16790              	.LVL1008:
 16791              	.LBB10131:
 16792              	.LBI10131:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 16793              		.loc 18 150 14 is_stmt 1 view .LVU3801
 16794              	.LBB10132:
 16795              	.LBI10132:
 16796              		.loc 19 162 7 view .LVU3802
 16797              	.LBB10133:
 16798              	.LBI10133:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16799              		.loc 20 89 7 view .LVU3803
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16800              		.loc 20 89 7 is_stmt 0 view .LVU3804
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 580


 16801              	.LBE10133:
 16802              	.LBE10132:
 16803              	.LBE10131:
 16804              	.LBE10130:
 16805              	.LBE10129:
 16806              	.LBB10134:
 16807              	.LBI10134:
 16808              		.loc 19 162 7 is_stmt 1 view .LVU3805
 16809              	.LBB10135:
 16810              	.LBI10135:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16811              		.loc 20 89 7 view .LVU3806
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16812              		.loc 20 89 7 is_stmt 0 view .LVU3807
 16813              	.LBE10135:
 16814              	.LBE10134:
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16815              		.loc 14 121 5 is_stmt 1 view .LVU3808
 16816              	.LBB10136:
 16817              	.LBI10136:
 16818              		.loc 29 185 7 view .LVU3809
 16819              	.LBB10137:
 16820              	.LBI10137:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16821              		.loc 29 55 7 view .LVU3810
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16822              		.loc 29 55 7 is_stmt 0 view .LVU3811
 16823              	.LBE10137:
 16824              	.LBE10136:
 16825              	.LBB10138:
 16826              	.LBI10138:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16827              		.loc 19 144 7 is_stmt 1 view .LVU3812
 16828              	.LBB10139:
 16829              	.LBI10139:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16830              		.loc 20 79 7 view .LVU3813
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16831              		.loc 20 79 7 is_stmt 0 view .LVU3814
 16832              	.LBE10139:
 16833              	.LBE10138:
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16834              		.loc 14 121 63 view .LVU3815
 16835 010c 7F49     		ldr	r1, .L759+36
 16836 010e 0AA8     		add	r0, sp, #40
 16837 0110 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16838              	.LVL1009:
 16839 0114 3946     		mov	r1, r7
 16840 0116 03A8     		add	r0, sp, #12
 16841 0118 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16842              	.LVL1010:
 16843              	.LBB10140:
 16844              	.LBI10140:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 16845              		.loc 16 601 7 is_stmt 1 view .LVU3816
 16846              	.LBB10141:
 16847              	.LBB10142:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 581


 16848              	.LBI10142:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16849              		.loc 16 240 5 view .LVU3817
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16850              		.loc 16 240 5 is_stmt 0 view .LVU3818
 16851              	.LBE10142:
 16852              	.LBB10143:
 16853              	.LBB10144:
 16854              	.LBI10144:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16855              		.loc 16 217 4 is_stmt 1 view .LVU3819
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 16856              		.loc 16 217 4 is_stmt 0 view .LVU3820
 16857              	.LBE10144:
 16858              	.LBB10145:
 16859              	.LBI10145:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16860              		.loc 37 101 5 is_stmt 1 view .LVU3821
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 16861              		.loc 37 101 5 is_stmt 0 view .LVU3822
 16862              	.LBE10145:
 16863              	.LBB10146:
 16864              	.LBI10146:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 16865              		.loc 16 207 2 is_stmt 1 view .LVU3823
 16866              	.LBB10147:
 16867              	.LBI10147:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16868              		.loc 16 232 2 view .LVU3824
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 16869              		.loc 16 232 2 is_stmt 0 view .LVU3825
 16870              	.LBE10147:
 16871              	.LBE10146:
 16872              	.LBE10143:
 16873              	.LBE10141:
 16874              	.LBE10140:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 16875              		.loc 16 87 37 is_stmt 1 view .LVU3826
 16876              		.loc 23 175 3 view .LVU3827
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16877              		.loc 14 121 63 is_stmt 0 view .LVU3828
 16878 011c 0023     		movs	r3, #0
 16879 011e 03AA     		add	r2, sp, #12
 16880 0120 0AA9     		add	r1, sp, #40
 16881 0122 0094     		str	r4, [sp]
 16882 0124 10A8     		add	r0, sp, #64
 16883              	.LBB10153:
 16884              	.LBB10152:
 16885              	.LBB10151:
 16886              	.LBB10150:
 16887              	.LBB10149:
 16888              	.LBB10148:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16889              		.loc 16 233 4 view .LVU3829
 16890 0126 CDF818B0 		str	fp, [sp, #24]
 16891              	.LVL1011:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 582


 16892              		.loc 16 233 4 view .LVU3830
 16893              	.LBE10148:
 16894              	.LBE10149:
 16895              	.LBE10150:
 16896              		.loc 16 611 17 view .LVU3831
 16897 012a CDE90856 		strd	r5, r6, [sp, #32]
 16898              	.LVL1012:
 16899              		.loc 16 611 17 view .LVU3832
 16900              	.LBE10151:
 16901              	.LBE10152:
 16902              	.LBE10153:
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16903              		.loc 14 121 63 view .LVU3833
 16904 012e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 16905              	.LVL1013:
 16906 0132 10A9     		add	r1, sp, #64
 16907 0134 7A48     		ldr	r0, .L759+56
 16908 0136 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 16909              	.LVL1014:
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16910              		.loc 14 121 20 view .LVU3834
 16911 013a 10A8     		add	r0, sp, #64
 16912 013c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 16913              	.LVL1015:
 16914              	.LBB10154:
 16915              	.LBI10154:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16916              		.loc 16 303 11 is_stmt 1 view .LVU3835
 16917              	.LBB10155:
 16918 0140 2046     		mov	r0, r4
 16919 0142 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 16920              	.LVL1016:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 16921              		.loc 16 303 11 is_stmt 0 view .LVU3836
 16922              	.LBE10155:
 16923              	.LBE10154:
 121:Jellybeans.cpp ****     menuItems[3] = MenuItem("N/A      ", allInversions,  0, cb); // Inversion
 16924              		.loc 14 121 63 view .LVU3837
 16925 0146 03A8     		add	r0, sp, #12
 16926 0148 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 16927              	.LVL1017:
 16928              	.LBB10156:
 16929              	.LBI10156:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 16930              		.loc 18 657 7 is_stmt 1 view .LVU3838
 16931              	.LBB10157:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16932              		.loc 18 658 19 is_stmt 0 view .LVU3839
 16933 014c 0AA8     		add	r0, sp, #40
 16934              	.LVL1018:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 16935              		.loc 18 658 19 view .LVU3840
 16936 014e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 16937              	.LVL1019:
 16938              	.LBB10158:
 16939              	.LBI10158:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 583


 16940              		.loc 18 150 14 is_stmt 1 view .LVU3841
 16941              	.LBB10159:
 16942              	.LBI10159:
 16943              		.loc 19 162 7 view .LVU3842
 16944              	.LBB10160:
 16945              	.LBI10160:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16946              		.loc 20 89 7 view .LVU3843
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16947              		.loc 20 89 7 is_stmt 0 view .LVU3844
 16948              	.LBE10160:
 16949              	.LBE10159:
 16950              	.LBE10158:
 16951              	.LBE10157:
 16952              	.LBE10156:
 16953              	.LBB10161:
 16954              	.LBI10161:
 16955              		.loc 19 162 7 is_stmt 1 view .LVU3845
 16956              	.LBB10162:
 16957              	.LBI10162:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16958              		.loc 20 89 7 view .LVU3846
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16959              		.loc 20 89 7 is_stmt 0 view .LVU3847
 16960              	.LBE10162:
 16961              	.LBE10161:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 16962              		.loc 14 122 5 is_stmt 1 view .LVU3848
 16963              	.LBB10163:
 16964              	.LBI10163:
 16965              		.loc 29 185 7 view .LVU3849
 16966              	.LBB10164:
 16967              	.LBI10164:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16968              		.loc 29 55 7 view .LVU3850
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 16969              		.loc 29 55 7 is_stmt 0 view .LVU3851
 16970              	.LBE10164:
 16971              	.LBE10163:
 16972              	.LBB10165:
 16973              	.LBI10165:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 16974              		.loc 19 144 7 is_stmt 1 view .LVU3852
 16975              	.LBB10166:
 16976              	.LBI10166:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16977              		.loc 20 79 7 view .LVU3853
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 16978              		.loc 20 79 7 is_stmt 0 view .LVU3854
 16979              	.LBE10166:
 16980              	.LBE10165:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 16981              		.loc 14 122 67 view .LVU3855
 16982 0152 7449     		ldr	r1, .L759+60
 16983 0154 0AA8     		add	r0, sp, #40
 16984 0156 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 16985              	.LVL1020:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 584


 16986 015a 7349     		ldr	r1, .L759+64
 16987 015c 03A8     		add	r0, sp, #12
 16988 015e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 16989              	.LVL1021:
 16990              	.LBB10167:
 16991              	.LBI10167:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 16992              		.loc 16 601 7 is_stmt 1 view .LVU3856
 16993              	.LBB10168:
 16994              	.LBB10169:
 16995              	.LBI10169:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16996              		.loc 16 240 5 view .LVU3857
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 16997              		.loc 16 240 5 is_stmt 0 view .LVU3858
 16998              	.LBE10169:
 16999              	.LBB10170:
 17000              	.LBB10171:
 17001              	.LBI10171:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17002              		.loc 16 217 4 is_stmt 1 view .LVU3859
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17003              		.loc 16 217 4 is_stmt 0 view .LVU3860
 17004              	.LBE10171:
 17005              	.LBB10172:
 17006              	.LBI10172:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17007              		.loc 37 101 5 is_stmt 1 view .LVU3861
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17008              		.loc 37 101 5 is_stmt 0 view .LVU3862
 17009              	.LBE10172:
 17010              	.LBB10173:
 17011              	.LBI10173:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17012              		.loc 16 207 2 is_stmt 1 view .LVU3863
 17013              	.LBB10174:
 17014              	.LBI10174:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17015              		.loc 16 232 2 view .LVU3864
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17016              		.loc 16 232 2 is_stmt 0 view .LVU3865
 17017              	.LBE10174:
 17018              	.LBE10173:
 17019              	.LBE10170:
 17020              	.LBE10168:
 17021              	.LBE10167:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17022              		.loc 16 87 37 is_stmt 1 view .LVU3866
 17023              		.loc 23 175 3 view .LVU3867
 17024              	.LBB10187:
 17025              	.LBB10184:
 17026              	.LBB10181:
 17027              	.LBB10179:
 17028              	.LBB10177:
 17029              	.LBB10175:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17030              		.loc 16 233 4 is_stmt 0 view .LVU3868
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 585


 17031 0162 724B     		ldr	r3, .L759+68
 17032              	.LBE10175:
 17033              	.LBE10177:
 17034              	.LBE10179:
 17035              	.LBE10181:
 17036              	.LBE10184:
 17037              	.LBE10187:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 17038              		.loc 14 122 67 view .LVU3869
 17039 0164 03AA     		add	r2, sp, #12
 17040 0166 0AA9     		add	r1, sp, #40
 17041 0168 0094     		str	r4, [sp]
 17042 016a 10A8     		add	r0, sp, #64
 17043              	.LBB10188:
 17044              	.LBB10185:
 17045              	.LBB10182:
 17046              	.LBB10180:
 17047              	.LBB10178:
 17048              	.LBB10176:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17049              		.loc 16 233 4 view .LVU3870
 17050 016c 0693     		str	r3, [sp, #24]
 17051              	.LVL1022:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17052              		.loc 16 233 4 view .LVU3871
 17053              	.LBE10176:
 17054              	.LBE10178:
 17055              	.LBE10180:
 17056              	.LBE10182:
 17057              	.LBE10185:
 17058              	.LBE10188:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 17059              		.loc 14 122 67 view .LVU3872
 17060 016e 0023     		movs	r3, #0
 17061              	.LBB10189:
 17062              	.LBB10186:
 17063              	.LBB10183:
 17064              		.loc 16 611 17 view .LVU3873
 17065 0170 CDE90856 		strd	r5, r6, [sp, #32]
 17066              	.LBE10183:
 17067              	.LBE10186:
 17068              	.LBE10189:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 17069              		.loc 14 122 67 view .LVU3874
 17070 0174 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17071              	.LVL1023:
 17072 0178 10A9     		add	r1, sp, #64
 17073 017a 6D48     		ldr	r0, .L759+72
 17074 017c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17075              	.LVL1024:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 17076              		.loc 14 122 20 view .LVU3875
 17077 0180 10A8     		add	r0, sp, #64
 17078 0182 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17079              	.LVL1025:
 17080              	.LBB10190:
 17081              	.LBI10190:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 586


 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17082              		.loc 16 303 11 is_stmt 1 view .LVU3876
 17083              	.LBB10191:
 17084 0186 2046     		mov	r0, r4
 17085 0188 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17086              	.LVL1026:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17087              		.loc 16 303 11 is_stmt 0 view .LVU3877
 17088              	.LBE10191:
 17089              	.LBE10190:
 122:Jellybeans.cpp ****     menuItems[4] = MenuItem("Root     ", allNotes,       0, cbRoot);
 17090              		.loc 14 122 67 view .LVU3878
 17091 018c 03A8     		add	r0, sp, #12
 17092 018e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17093              	.LVL1027:
 17094              	.LBB10192:
 17095              	.LBI10192:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17096              		.loc 18 657 7 is_stmt 1 view .LVU3879
 17097              	.LBB10193:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17098              		.loc 18 658 19 is_stmt 0 view .LVU3880
 17099 0192 0AA8     		add	r0, sp, #40
 17100              	.LVL1028:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17101              		.loc 18 658 19 view .LVU3881
 17102 0194 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17103              	.LVL1029:
 17104              	.LBB10194:
 17105              	.LBI10194:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17106              		.loc 18 150 14 is_stmt 1 view .LVU3882
 17107              	.LBB10195:
 17108              	.LBI10195:
 17109              		.loc 19 162 7 view .LVU3883
 17110              	.LBB10196:
 17111              	.LBI10196:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17112              		.loc 20 89 7 view .LVU3884
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17113              		.loc 20 89 7 is_stmt 0 view .LVU3885
 17114              	.LBE10196:
 17115              	.LBE10195:
 17116              	.LBE10194:
 17117              	.LBE10193:
 17118              	.LBE10192:
 17119              	.LBB10197:
 17120              	.LBI10197:
 17121              		.loc 19 162 7 is_stmt 1 view .LVU3886
 17122              	.LBB10198:
 17123              	.LBI10198:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17124              		.loc 20 89 7 view .LVU3887
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17125              		.loc 20 89 7 is_stmt 0 view .LVU3888
 17126              	.LBE10198:
 17127              	.LBE10197:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 587


 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17128              		.loc 14 123 5 is_stmt 1 view .LVU3889
 17129              	.LBB10199:
 17130              	.LBI10199:
 17131              		.loc 29 185 7 view .LVU3890
 17132              	.LBB10200:
 17133              	.LBI10200:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17134              		.loc 29 55 7 view .LVU3891
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17135              		.loc 29 55 7 is_stmt 0 view .LVU3892
 17136              	.LBE10200:
 17137              	.LBE10199:
 17138              	.LBB10201:
 17139              	.LBI10201:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17140              		.loc 19 144 7 is_stmt 1 view .LVU3893
 17141              	.LBB10202:
 17142              	.LBI10202:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17143              		.loc 20 79 7 view .LVU3894
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17144              		.loc 20 79 7 is_stmt 0 view .LVU3895
 17145              	.LBE10202:
 17146              	.LBE10201:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17147              		.loc 14 123 67 view .LVU3896
 17148 0198 6649     		ldr	r1, .L759+76
 17149 019a 0AA8     		add	r0, sp, #40
 17150 019c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17151              	.LVL1030:
 17152 01a0 6549     		ldr	r1, .L759+80
 17153 01a2 03A8     		add	r0, sp, #12
 17154 01a4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 17155              	.LVL1031:
 17156              	.LBB10203:
 17157              	.LBI10203:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 17158              		.loc 16 601 7 is_stmt 1 view .LVU3897
 17159              	.LBB10204:
 17160              	.LBB10205:
 17161              	.LBI10205:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17162              		.loc 16 240 5 view .LVU3898
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17163              		.loc 16 240 5 is_stmt 0 view .LVU3899
 17164              	.LBE10205:
 17165              	.LBB10206:
 17166              	.LBB10207:
 17167              	.LBI10207:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17168              		.loc 16 217 4 is_stmt 1 view .LVU3900
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17169              		.loc 16 217 4 is_stmt 0 view .LVU3901
 17170              	.LBE10207:
 17171              	.LBB10208:
 17172              	.LBI10208:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 588


 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17173              		.loc 37 101 5 is_stmt 1 view .LVU3902
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17174              		.loc 37 101 5 is_stmt 0 view .LVU3903
 17175              	.LBE10208:
 17176              	.LBB10209:
 17177              	.LBI10209:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17178              		.loc 16 207 2 is_stmt 1 view .LVU3904
 17179              	.LBB10210:
 17180              	.LBI10210:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17181              		.loc 16 232 2 view .LVU3905
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17182              		.loc 16 232 2 is_stmt 0 view .LVU3906
 17183              	.LBE10210:
 17184              	.LBE10209:
 17185              	.LBE10206:
 17186              	.LBE10204:
 17187              	.LBE10203:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17188              		.loc 16 87 37 is_stmt 1 view .LVU3907
 17189              		.loc 23 175 3 view .LVU3908
 17190              	.LBB10223:
 17191              	.LBB10220:
 17192              	.LBB10217:
 17193              	.LBB10215:
 17194              	.LBB10213:
 17195              	.LBB10211:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17196              		.loc 16 233 4 is_stmt 0 view .LVU3909
 17197 01a8 644B     		ldr	r3, .L759+84
 17198              	.LBE10211:
 17199              	.LBE10213:
 17200              	.LBE10215:
 17201              	.LBE10217:
 17202              	.LBE10220:
 17203              	.LBE10223:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17204              		.loc 14 123 67 view .LVU3910
 17205 01aa 03AA     		add	r2, sp, #12
 17206 01ac 0AA9     		add	r1, sp, #40
 17207 01ae 0094     		str	r4, [sp]
 17208 01b0 10A8     		add	r0, sp, #64
 17209              	.LBB10224:
 17210              	.LBB10221:
 17211              	.LBB10218:
 17212              	.LBB10216:
 17213              	.LBB10214:
 17214              	.LBB10212:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17215              		.loc 16 233 4 view .LVU3911
 17216 01b2 0693     		str	r3, [sp, #24]
 17217              	.LVL1032:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17218              		.loc 16 233 4 view .LVU3912
 17219              	.LBE10212:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 589


 17220              	.LBE10214:
 17221              	.LBE10216:
 17222              	.LBE10218:
 17223              	.LBE10221:
 17224              	.LBE10224:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17225              		.loc 14 123 67 view .LVU3913
 17226 01b4 0023     		movs	r3, #0
 17227              	.LBB10225:
 17228              	.LBB10222:
 17229              	.LBB10219:
 17230              		.loc 16 611 17 view .LVU3914
 17231 01b6 CDE90856 		strd	r5, r6, [sp, #32]
 17232              	.LBE10219:
 17233              	.LBE10222:
 17234              	.LBE10225:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17235              		.loc 14 123 67 view .LVU3915
 17236 01ba FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17237              	.LVL1033:
 17238 01be 10A9     		add	r1, sp, #64
 17239 01c0 5F48     		ldr	r0, .L759+88
 17240 01c2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17241              	.LVL1034:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17242              		.loc 14 123 20 view .LVU3916
 17243 01c6 10A8     		add	r0, sp, #64
 17244 01c8 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17245              	.LVL1035:
 17246              	.LBB10226:
 17247              	.LBI10226:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17248              		.loc 16 303 11 is_stmt 1 view .LVU3917
 17249              	.LBB10227:
 17250 01cc 2046     		mov	r0, r4
 17251 01ce FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17252              	.LVL1036:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17253              		.loc 16 303 11 is_stmt 0 view .LVU3918
 17254              	.LBE10227:
 17255              	.LBE10226:
 123:Jellybeans.cpp ****     menuItems[5] = MenuItem("Mode     ", modes,          0, cbMode);
 17256              		.loc 14 123 67 view .LVU3919
 17257 01d2 03A8     		add	r0, sp, #12
 17258 01d4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17259              	.LVL1037:
 17260              	.LBB10228:
 17261              	.LBI10228:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17262              		.loc 18 657 7 is_stmt 1 view .LVU3920
 17263              	.LBB10229:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17264              		.loc 18 658 19 is_stmt 0 view .LVU3921
 17265 01d8 0AA8     		add	r0, sp, #40
 17266              	.LVL1038:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17267              		.loc 18 658 19 view .LVU3922
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 590


 17268 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17269              	.LVL1039:
 17270              	.LBB10230:
 17271              	.LBI10230:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17272              		.loc 18 150 14 is_stmt 1 view .LVU3923
 17273              	.LBB10231:
 17274              	.LBI10231:
 17275              		.loc 19 162 7 view .LVU3924
 17276              	.LBB10232:
 17277              	.LBI10232:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17278              		.loc 20 89 7 view .LVU3925
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17279              		.loc 20 89 7 is_stmt 0 view .LVU3926
 17280              	.LBE10232:
 17281              	.LBE10231:
 17282              	.LBE10230:
 17283              	.LBE10229:
 17284              	.LBE10228:
 17285              	.LBB10233:
 17286              	.LBI10233:
 17287              		.loc 19 162 7 is_stmt 1 view .LVU3927
 17288              	.LBB10234:
 17289              	.LBI10234:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17290              		.loc 20 89 7 view .LVU3928
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17291              		.loc 20 89 7 is_stmt 0 view .LVU3929
 17292              	.LBE10234:
 17293              	.LBE10233:
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
 17294              		.loc 14 124 5 is_stmt 1 view .LVU3930
 17295              	.LBB10235:
 17296              	.LBI10235:
 17297              		.loc 29 185 7 view .LVU3931
 17298              	.LBB10236:
 17299              	.LBI10236:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17300              		.loc 29 55 7 view .LVU3932
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17301              		.loc 29 55 7 is_stmt 0 view .LVU3933
 17302              	.LBE10236:
 17303              	.LBE10235:
 17304              	.LBB10237:
 17305              	.LBI10237:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17306              		.loc 19 144 7 is_stmt 1 view .LVU3934
 17307              	.LBB10238:
 17308              	.LBI10238:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17309              		.loc 20 79 7 view .LVU3935
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17310              		.loc 20 79 7 is_stmt 0 view .LVU3936
 17311              	.LBE10238:
 17312              	.LBE10237:
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 591


 17313              		.loc 14 124 63 view .LVU3937
 17314 01de 4B49     		ldr	r1, .L759+36
 17315 01e0 0AA8     		add	r0, sp, #40
 17316 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17317              	.LVL1040:
 17318 01e6 5749     		ldr	r1, .L759+92
 17319 01e8 03A8     		add	r0, sp, #12
 17320 01ea FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 17321              	.LVL1041:
 17322              	.LBB10239:
 17323              	.LBI10239:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 17324              		.loc 16 601 7 is_stmt 1 view .LVU3938
 17325              	.LBB10240:
 17326              	.LBB10241:
 17327              	.LBI10241:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17328              		.loc 16 240 5 view .LVU3939
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17329              		.loc 16 240 5 is_stmt 0 view .LVU3940
 17330              	.LBE10241:
 17331              	.LBB10242:
 17332              	.LBB10243:
 17333              	.LBI10243:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17334              		.loc 16 217 4 is_stmt 1 view .LVU3941
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17335              		.loc 16 217 4 is_stmt 0 view .LVU3942
 17336              	.LBE10243:
 17337              	.LBB10244:
 17338              	.LBI10244:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17339              		.loc 37 101 5 is_stmt 1 view .LVU3943
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17340              		.loc 37 101 5 is_stmt 0 view .LVU3944
 17341              	.LBE10244:
 17342              	.LBB10245:
 17343              	.LBI10245:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17344              		.loc 16 207 2 is_stmt 1 view .LVU3945
 17345              	.LBB10246:
 17346              	.LBI10246:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17347              		.loc 16 232 2 view .LVU3946
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17348              		.loc 16 232 2 is_stmt 0 view .LVU3947
 17349              	.LBE10246:
 17350              	.LBE10245:
 17351              	.LBE10242:
 17352              	.LBE10240:
 17353              	.LBE10239:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17354              		.loc 16 87 37 is_stmt 1 view .LVU3948
 17355              		.loc 23 175 3 view .LVU3949
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
 17356              		.loc 14 124 63 is_stmt 0 view .LVU3950
 17357 01ee 0023     		movs	r3, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 592


 17358 01f0 03AA     		add	r2, sp, #12
 17359 01f2 0AA9     		add	r1, sp, #40
 17360 01f4 0094     		str	r4, [sp]
 17361 01f6 10A8     		add	r0, sp, #64
 17362              	.LBB10252:
 17363              	.LBB10251:
 17364              	.LBB10250:
 17365              	.LBB10249:
 17366              	.LBB10248:
 17367              	.LBB10247:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17368              		.loc 16 233 4 view .LVU3951
 17369 01f8 CDF818B0 		str	fp, [sp, #24]
 17370              	.LVL1042:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17371              		.loc 16 233 4 view .LVU3952
 17372              	.LBE10247:
 17373              	.LBE10248:
 17374              	.LBE10249:
 17375              		.loc 16 611 17 view .LVU3953
 17376 01fc CDE90856 		strd	r5, r6, [sp, #32]
 17377              	.LVL1043:
 17378              		.loc 16 611 17 view .LVU3954
 17379              	.LBE10250:
 17380              	.LBE10251:
 17381              	.LBE10252:
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
 17382              		.loc 14 124 63 view .LVU3955
 17383 0200 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17384              	.LVL1044:
 17385 0204 10A9     		add	r1, sp, #64
 17386 0206 5048     		ldr	r0, .L759+96
 17387 0208 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17388              	.LVL1045:
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
 17389              		.loc 14 124 20 view .LVU3956
 17390 020c 10A8     		add	r0, sp, #64
 17391 020e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17392              	.LVL1046:
 17393              	.LBB10253:
 17394              	.LBI10253:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17395              		.loc 16 303 11 is_stmt 1 view .LVU3957
 17396              	.LBB10254:
 17397 0212 2046     		mov	r0, r4
 17398 0214 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17399              	.LVL1047:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17400              		.loc 16 303 11 is_stmt 0 view .LVU3958
 17401              	.LBE10254:
 17402              	.LBE10253:
 124:Jellybeans.cpp ****     menuItems[6] = MenuItem("N/A      ", emptyVect,      0, cb); // Rhythm
 17403              		.loc 14 124 63 view .LVU3959
 17404 0218 03A8     		add	r0, sp, #12
 17405 021a FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17406              	.LVL1048:
 17407              	.LBB10255:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 593


 17408              	.LBI10255:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17409              		.loc 18 657 7 is_stmt 1 view .LVU3960
 17410              	.LBB10256:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17411              		.loc 18 658 19 is_stmt 0 view .LVU3961
 17412 021e 0AA8     		add	r0, sp, #40
 17413              	.LVL1049:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17414              		.loc 18 658 19 view .LVU3962
 17415 0220 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17416              	.LVL1050:
 17417              	.LBB10257:
 17418              	.LBI10257:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17419              		.loc 18 150 14 is_stmt 1 view .LVU3963
 17420              	.LBB10258:
 17421              	.LBI10258:
 17422              		.loc 19 162 7 view .LVU3964
 17423              	.LBB10259:
 17424              	.LBI10259:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17425              		.loc 20 89 7 view .LVU3965
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17426              		.loc 20 89 7 is_stmt 0 view .LVU3966
 17427              	.LBE10259:
 17428              	.LBE10258:
 17429              	.LBE10257:
 17430              	.LBE10256:
 17431              	.LBE10255:
 17432              	.LBB10260:
 17433              	.LBI10260:
 17434              		.loc 19 162 7 is_stmt 1 view .LVU3967
 17435              	.LBB10261:
 17436              	.LBI10261:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17437              		.loc 20 89 7 view .LVU3968
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17438              		.loc 20 89 7 is_stmt 0 view .LVU3969
 17439              	.LBE10261:
 17440              	.LBE10260:
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17441              		.loc 14 125 5 is_stmt 1 view .LVU3970
 17442              	.LBB10262:
 17443              	.LBI10262:
 17444              		.loc 29 185 7 view .LVU3971
 17445              	.LBB10263:
 17446              	.LBI10263:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17447              		.loc 29 55 7 view .LVU3972
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17448              		.loc 29 55 7 is_stmt 0 view .LVU3973
 17449              	.LBE10263:
 17450              	.LBE10262:
 17451              	.LBB10264:
 17452              	.LBI10264:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 594


 17453              		.loc 19 144 7 is_stmt 1 view .LVU3974
 17454              	.LBB10265:
 17455              	.LBI10265:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17456              		.loc 20 79 7 view .LVU3975
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17457              		.loc 20 79 7 is_stmt 0 view .LVU3976
 17458              	.LBE10265:
 17459              	.LBE10264:
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17460              		.loc 14 125 63 view .LVU3977
 17461 0224 3949     		ldr	r1, .L759+36
 17462 0226 0AA8     		add	r0, sp, #40
 17463 0228 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17464              	.LVL1051:
 17465 022c 4749     		ldr	r1, .L759+100
 17466 022e 03A8     		add	r0, sp, #12
 17467 0230 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 17468              	.LVL1052:
 17469              	.LBB10266:
 17470              	.LBI10266:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 17471              		.loc 16 601 7 is_stmt 1 view .LVU3978
 17472              	.LBB10267:
 17473              	.LBB10268:
 17474              	.LBI10268:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17475              		.loc 16 240 5 view .LVU3979
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17476              		.loc 16 240 5 is_stmt 0 view .LVU3980
 17477              	.LBE10268:
 17478              	.LBB10269:
 17479              	.LBB10270:
 17480              	.LBI10270:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17481              		.loc 16 217 4 is_stmt 1 view .LVU3981
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17482              		.loc 16 217 4 is_stmt 0 view .LVU3982
 17483              	.LBE10270:
 17484              	.LBB10271:
 17485              	.LBI10271:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17486              		.loc 37 101 5 is_stmt 1 view .LVU3983
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17487              		.loc 37 101 5 is_stmt 0 view .LVU3984
 17488              	.LBE10271:
 17489              	.LBB10272:
 17490              	.LBI10272:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17491              		.loc 16 207 2 is_stmt 1 view .LVU3985
 17492              	.LBB10273:
 17493              	.LBI10273:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17494              		.loc 16 232 2 view .LVU3986
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17495              		.loc 16 232 2 is_stmt 0 view .LVU3987
 17496              	.LBE10273:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 595


 17497              	.LBE10272:
 17498              	.LBE10269:
 17499              	.LBE10267:
 17500              	.LBE10266:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17501              		.loc 16 87 37 is_stmt 1 view .LVU3988
 17502              		.loc 23 175 3 view .LVU3989
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17503              		.loc 14 125 63 is_stmt 0 view .LVU3990
 17504 0234 0023     		movs	r3, #0
 17505 0236 03AA     		add	r2, sp, #12
 17506 0238 0AA9     		add	r1, sp, #40
 17507 023a 0094     		str	r4, [sp]
 17508 023c 10A8     		add	r0, sp, #64
 17509              	.LBB10279:
 17510              	.LBB10278:
 17511              	.LBB10277:
 17512              	.LBB10276:
 17513              	.LBB10275:
 17514              	.LBB10274:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17515              		.loc 16 233 4 view .LVU3991
 17516 023e CDF818B0 		str	fp, [sp, #24]
 17517              	.LVL1053:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17518              		.loc 16 233 4 view .LVU3992
 17519              	.LBE10274:
 17520              	.LBE10275:
 17521              	.LBE10276:
 17522              		.loc 16 611 17 view .LVU3993
 17523 0242 CDE90856 		strd	r5, r6, [sp, #32]
 17524              	.LVL1054:
 17525              		.loc 16 611 17 view .LVU3994
 17526              	.LBE10277:
 17527              	.LBE10278:
 17528              	.LBE10279:
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17529              		.loc 14 125 63 view .LVU3995
 17530 0246 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17531              	.LVL1055:
 17532 024a 10A9     		add	r1, sp, #64
 17533 024c 4048     		ldr	r0, .L759+104
 17534 024e FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17535              	.LVL1056:
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17536              		.loc 14 125 20 view .LVU3996
 17537 0252 10A8     		add	r0, sp, #64
 17538 0254 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17539              	.LVL1057:
 17540              	.LBB10280:
 17541              	.LBI10280:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17542              		.loc 16 303 11 is_stmt 1 view .LVU3997
 17543              	.LBB10281:
 17544 0258 2046     		mov	r0, r4
 17545 025a FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17546              	.LVL1058:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 596


 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17547              		.loc 16 303 11 is_stmt 0 view .LVU3998
 17548              	.LBE10281:
 17549              	.LBE10280:
 125:Jellybeans.cpp ****     menuItems[7] = MenuItem("N/A      ", allOctaves,     0, cb); // Oct Rng
 17550              		.loc 14 125 63 view .LVU3999
 17551 025e 03A8     		add	r0, sp, #12
 17552 0260 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17553              	.LVL1059:
 17554              	.LBB10282:
 17555              	.LBI10282:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17556              		.loc 18 657 7 is_stmt 1 view .LVU4000
 17557              	.LBB10283:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17558              		.loc 18 658 19 is_stmt 0 view .LVU4001
 17559 0264 0AA8     		add	r0, sp, #40
 17560              	.LVL1060:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17561              		.loc 18 658 19 view .LVU4002
 17562 0266 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17563              	.LVL1061:
 17564              	.LBB10284:
 17565              	.LBI10284:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17566              		.loc 18 150 14 is_stmt 1 view .LVU4003
 17567              	.LBB10285:
 17568              	.LBI10285:
 17569              		.loc 19 162 7 view .LVU4004
 17570              	.LBB10286:
 17571              	.LBI10286:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17572              		.loc 20 89 7 view .LVU4005
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17573              		.loc 20 89 7 is_stmt 0 view .LVU4006
 17574              	.LBE10286:
 17575              	.LBE10285:
 17576              	.LBE10284:
 17577              	.LBE10283:
 17578              	.LBE10282:
 17579              	.LBB10287:
 17580              	.LBI10287:
 17581              		.loc 19 162 7 is_stmt 1 view .LVU4007
 17582              	.LBB10288:
 17583              	.LBI10288:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17584              		.loc 20 89 7 view .LVU4008
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17585              		.loc 20 89 7 is_stmt 0 view .LVU4009
 17586              	.LBE10288:
 17587              	.LBE10287:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17588              		.loc 14 126 5 is_stmt 1 view .LVU4010
 17589              	.LBB10289:
 17590              	.LBI10289:
 17591              		.loc 29 185 7 view .LVU4011
 17592              	.LBB10290:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 597


 17593              	.LBI10290:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17594              		.loc 29 55 7 view .LVU4012
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17595              		.loc 29 55 7 is_stmt 0 view .LVU4013
 17596              	.LBE10290:
 17597              	.LBE10289:
 17598              	.LBB10291:
 17599              	.LBI10291:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17600              		.loc 19 144 7 is_stmt 1 view .LVU4014
 17601              	.LBB10292:
 17602              	.LBI10292:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17603              		.loc 20 79 7 view .LVU4015
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17604              		.loc 20 79 7 is_stmt 0 view .LVU4016
 17605              	.LBE10292:
 17606              	.LBE10291:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17607              		.loc 14 126 69 view .LVU4017
 17608 026a 3A49     		ldr	r1, .L759+108
 17609 026c 0AA8     		add	r0, sp, #40
 17610 026e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17611              	.LVL1062:
 17612 0272 3649     		ldr	r1, .L759+100
 17613 0274 03A8     		add	r0, sp, #12
 17614 0276 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 17615              	.LVL1063:
 17616              	.LBB10293:
 17617              	.LBI10293:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 17618              		.loc 16 601 7 is_stmt 1 view .LVU4018
 17619              	.LBB10294:
 17620              	.LBB10295:
 17621              	.LBI10295:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17622              		.loc 16 240 5 view .LVU4019
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17623              		.loc 16 240 5 is_stmt 0 view .LVU4020
 17624              	.LBE10295:
 17625              	.LBB10296:
 17626              	.LBB10297:
 17627              	.LBI10297:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17628              		.loc 16 217 4 is_stmt 1 view .LVU4021
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17629              		.loc 16 217 4 is_stmt 0 view .LVU4022
 17630              	.LBE10297:
 17631              	.LBB10298:
 17632              	.LBI10298:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17633              		.loc 37 101 5 is_stmt 1 view .LVU4023
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17634              		.loc 37 101 5 is_stmt 0 view .LVU4024
 17635              	.LBE10298:
 17636              	.LBB10299:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 598


 17637              	.LBI10299:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17638              		.loc 16 207 2 is_stmt 1 view .LVU4025
 17639              	.LBB10300:
 17640              	.LBI10300:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17641              		.loc 16 232 2 view .LVU4026
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17642              		.loc 16 232 2 is_stmt 0 view .LVU4027
 17643              	.LBE10300:
 17644              	.LBE10299:
 17645              	.LBE10296:
 17646              	.LBE10294:
 17647              	.LBE10293:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17648              		.loc 16 87 37 is_stmt 1 view .LVU4028
 17649              		.loc 23 175 3 view .LVU4029
 17650              	.LBB10313:
 17651              	.LBB10310:
 17652              	.LBB10307:
 17653              	.LBB10305:
 17654              	.LBB10303:
 17655              	.LBB10301:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17656              		.loc 16 233 4 is_stmt 0 view .LVU4030
 17657 027a 374B     		ldr	r3, .L759+112
 17658              	.LBE10301:
 17659              	.LBE10303:
 17660              	.LBE10305:
 17661              	.LBE10307:
 17662              	.LBE10310:
 17663              	.LBE10313:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17664              		.loc 14 126 69 view .LVU4031
 17665 027c 03AA     		add	r2, sp, #12
 17666 027e 0AA9     		add	r1, sp, #40
 17667 0280 0094     		str	r4, [sp]
 17668 0282 10A8     		add	r0, sp, #64
 17669              	.LBB10314:
 17670              	.LBB10311:
 17671              	.LBB10308:
 17672              	.LBB10306:
 17673              	.LBB10304:
 17674              	.LBB10302:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17675              		.loc 16 233 4 view .LVU4032
 17676 0284 0693     		str	r3, [sp, #24]
 17677              	.LVL1064:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17678              		.loc 16 233 4 view .LVU4033
 17679              	.LBE10302:
 17680              	.LBE10304:
 17681              	.LBE10306:
 17682              	.LBE10308:
 17683              	.LBE10311:
 17684              	.LBE10314:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 599


 17685              		.loc 14 126 69 view .LVU4034
 17686 0286 0023     		movs	r3, #0
 17687              	.LBB10315:
 17688              	.LBB10312:
 17689              	.LBB10309:
 17690              		.loc 16 611 17 view .LVU4035
 17691 0288 CDE90856 		strd	r5, r6, [sp, #32]
 17692              	.LBE10309:
 17693              	.LBE10312:
 17694              	.LBE10315:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17695              		.loc 14 126 69 view .LVU4036
 17696 028c FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17697              	.LVL1065:
 17698 0290 10A9     		add	r1, sp, #64
 17699 0292 3248     		ldr	r0, .L759+116
 17700 0294 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17701              	.LVL1066:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17702              		.loc 14 126 20 view .LVU4037
 17703 0298 10A8     		add	r0, sp, #64
 17704 029a FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17705              	.LVL1067:
 17706              	.LBB10316:
 17707              	.LBI10316:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17708              		.loc 16 303 11 is_stmt 1 view .LVU4038
 17709              	.LBB10317:
 17710 029e 2046     		mov	r0, r4
 17711 02a0 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17712              	.LVL1068:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17713              		.loc 16 303 11 is_stmt 0 view .LVU4039
 17714              	.LBE10317:
 17715              	.LBE10316:
 126:Jellybeans.cpp ****     menuItems[8] = MenuItem("Octave   ", allOctaves,     0, cbOctave);
 17716              		.loc 14 126 69 view .LVU4040
 17717 02a4 03A8     		add	r0, sp, #12
 17718 02a6 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17719              	.LVL1069:
 17720              	.LBB10318:
 17721              	.LBI10318:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17722              		.loc 18 657 7 is_stmt 1 view .LVU4041
 17723              	.LBB10319:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17724              		.loc 18 658 19 is_stmt 0 view .LVU4042
 17725 02aa 0AA8     		add	r0, sp, #40
 17726              	.LVL1070:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17727              		.loc 18 658 19 view .LVU4043
 17728 02ac FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17729              	.LVL1071:
 17730              	.LBB10320:
 17731              	.LBI10320:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17732              		.loc 18 150 14 is_stmt 1 view .LVU4044
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 600


 17733              	.LBB10321:
 17734              	.LBI10321:
 17735              		.loc 19 162 7 view .LVU4045
 17736              	.LBB10322:
 17737              	.LBI10322:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17738              		.loc 20 89 7 view .LVU4046
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17739              		.loc 20 89 7 is_stmt 0 view .LVU4047
 17740              	.LBE10322:
 17741              	.LBE10321:
 17742              	.LBE10320:
 17743              	.LBE10319:
 17744              	.LBE10318:
 17745              	.LBB10323:
 17746              	.LBI10323:
 17747              		.loc 19 162 7 is_stmt 1 view .LVU4048
 17748              	.LBB10324:
 17749              	.LBI10324:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17750              		.loc 20 89 7 view .LVU4049
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17751              		.loc 20 89 7 is_stmt 0 view .LVU4050
 17752              	.LBE10324:
 17753              	.LBE10323:
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17754              		.loc 14 127 5 is_stmt 1 view .LVU4051
 17755              	.LBB10325:
 17756              	.LBI10325:
 17757              		.loc 29 185 7 view .LVU4052
 17758              	.LBB10326:
 17759              	.LBI10326:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17760              		.loc 29 55 7 view .LVU4053
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 17761              		.loc 29 55 7 is_stmt 0 view .LVU4054
 17762              	.LBE10326:
 17763              	.LBE10325:
 17764              	.LBB10327:
 17765              	.LBI10327:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 17766              		.loc 19 144 7 is_stmt 1 view .LVU4055
 17767              	.LBB10328:
 17768              	.LBI10328:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17769              		.loc 20 79 7 view .LVU4056
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17770              		.loc 20 79 7 is_stmt 0 view .LVU4057
 17771              	.LBE10328:
 17772              	.LBE10327:
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17773              		.loc 14 127 63 view .LVU4058
 17774 02b0 2B49     		ldr	r1, .L759+120
 17775 02b2 0AA8     		add	r0, sp, #40
 17776 02b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 17777              	.LVL1072:
 17778 02b8 4946     		mov	r1, r9
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 601


 17779 02ba 03A8     		add	r0, sp, #12
 17780 02bc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
 17781              	.LVL1073:
 17782              	.LBB10329:
 17783              	.LBI10329:
 601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****       function(_Functor __f)
 17784              		.loc 16 601 7 is_stmt 1 view .LVU4059
 17785              	.LBB10330:
 17786              	.LBB10331:
 17787              	.LBI10331:
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17788              		.loc 16 240 5 view .LVU4060
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17789              		.loc 16 240 5 is_stmt 0 view .LVU4061
 17790              	.LBE10331:
 17791              	.LBB10332:
 17792              	.LBB10333:
 17793              	.LBI10333:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17794              		.loc 16 217 4 is_stmt 1 view .LVU4062
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	  { return __fp != nullptr; }
 17795              		.loc 16 217 4 is_stmt 0 view .LVU4063
 17796              	.LBE10333:
 17797              	.LBB10334:
 17798              	.LBI10334:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17799              		.loc 37 101 5 is_stmt 1 view .LVU4064
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 17800              		.loc 37 101 5 is_stmt 0 view .LVU4065
 17801              	.LBE10334:
 17802              	.LBB10335:
 17803              	.LBI10335:
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 17804              		.loc 16 207 2 is_stmt 1 view .LVU4066
 17805              	.LBB10336:
 17806              	.LBI10336:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17807              		.loc 16 232 2 view .LVU4067
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 	{ ::new (__functor._M_access()) _Functor(std::move(__f)); }
 17808              		.loc 16 232 2 is_stmt 0 view .LVU4068
 17809              	.LBE10336:
 17810              	.LBE10335:
 17811              	.LBE10332:
 17812              	.LBE10330:
 17813              	.LBE10329:
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     const void* _M_access() const { return &_M_pod_data[0]; }
 17814              		.loc 16 87 37 is_stmt 1 view .LVU4069
 17815              		.loc 23 175 3 view .LVU4070
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17816              		.loc 14 127 63 is_stmt 0 view .LVU4071
 17817 02c0 0023     		movs	r3, #0
 17818 02c2 03AA     		add	r2, sp, #12
 17819 02c4 0AA9     		add	r1, sp, #40
 17820 02c6 0094     		str	r4, [sp]
 17821 02c8 10A8     		add	r0, sp, #64
 17822              	.LBB10342:
 17823              	.LBB10341:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 602


 17824              	.LBB10340:
 17825              	.LBB10339:
 17826              	.LBB10338:
 17827              	.LBB10337:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17828              		.loc 16 233 4 view .LVU4072
 17829 02ca CDF818B0 		str	fp, [sp, #24]
 17830              	.LVL1074:
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h **** 
 17831              		.loc 16 233 4 view .LVU4073
 17832              	.LBE10337:
 17833              	.LBE10338:
 17834              	.LBE10339:
 17835              		.loc 16 611 17 view .LVU4074
 17836 02ce CDE90856 		strd	r5, r6, [sp, #32]
 17837              	.LVL1075:
 17838              		.loc 16 611 17 view .LVU4075
 17839              	.LBE10340:
 17840              	.LBE10341:
 17841              	.LBE10342:
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17842              		.loc 14 127 63 view .LVU4076
 17843 02d2 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaI
 17844              	.LVL1076:
 17845 02d6 10A9     		add	r1, sp, #64
 17846 02d8 2248     		ldr	r0, .L759+124
 17847 02da FFF7FEFF 		bl	_ZN10jellybeans8MenuItemaSEOS0_.isra.0
 17848              	.LVL1077:
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17849              		.loc 14 127 20 view .LVU4077
 17850 02de 10A8     		add	r0, sp, #64
 17851 02e0 FFF7FEFF 		bl	_ZN10jellybeans8MenuItemD1Ev
 17852              	.LVL1078:
 17853              	.LBB10343:
 17854              	.LBI10343:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17855              		.loc 16 303 11 is_stmt 1 view .LVU4078
 17856              	.LBB10344:
 17857 02e4 2046     		mov	r0, r4
 17858 02e6 47E0     		b	.L760
 17859              	.L761:
 17860              		.align	2
 17861              	.L759:
 17862 02e8 00000000 		.word	patch
 17863 02ec 00000000 		.word	.LANCHOR0
 17864 02f0 00000000 		.word	.LC25
 17865 02f4 00000000 		.word	_Z9cbPatternv
 17866 02f8 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
 17867 02fc 00000000 		.word	_ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
 17868 0300 00000000 		.word	.LANCHOR22
 17869 0304 00000000 		.word	0
 17870 0308 00000000 		.word	.LANCHOR8
 17871 030c 0C000000 		.word	.LC26
 17872 0310 38000000 		.word	.LANCHOR8+56
 17873 0314 18000000 		.word	.LC27
 17874 0318 00000000 		.word	_Z9cbVoicingv
 17875 031c 70000000 		.word	.LANCHOR8+112
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 603


 17876 0320 A8000000 		.word	.LANCHOR8+168
 17877 0324 24000000 		.word	.LC28
 17878 0328 00000000 		.word	.LANCHOR23
 17879 032c 00000000 		.word	_Z6cbRootv
 17880 0330 E0000000 		.word	.LANCHOR8+224
 17881 0334 30000000 		.word	.LC29
 17882 0338 00000000 		.word	.LANCHOR24
 17883 033c 00000000 		.word	_Z6cbModev
 17884 0340 18010000 		.word	.LANCHOR8+280
 17885 0344 00000000 		.word	.LANCHOR25
 17886 0348 50010000 		.word	.LANCHOR8+336
 17887 034c 00000000 		.word	.LANCHOR26
 17888 0350 88010000 		.word	.LANCHOR8+392
 17889 0354 3C000000 		.word	.LC30
 17890 0358 00000000 		.word	_Z8cbOctavev
 17891 035c C0010000 		.word	.LANCHOR8+448
 17892 0360 48000000 		.word	.LC31
 17893 0364 F8010000 		.word	.LANCHOR8+504
 17894 0368 00000000 		.word	.LANCHOR19
 17895 036c 00000000 		.word	.LANCHOR20
 17896 0370 00000000 		.word	_Z2cbv
 17897 0374 00000000 		.word	.LANCHOR21
 17898              	.L760:
 17899 0378 FFF7FEFF 		bl	_ZNSt14_Function_baseD2Ev
 17900              	.LVL1079:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\std_function.h ****     : public _Maybe_unary_or_binary_function<_Res, _ArgTypes...>,
 17901              		.loc 16 303 11 is_stmt 0 view .LVU4079
 17902              	.LBE10344:
 17903              	.LBE10343:
 127:Jellybeans.cpp ****     menuItems[9] = MenuItem("Clock In ", allClockInDivs, 0, cb);
 17904              		.loc 14 127 63 view .LVU4080
 17905 037c 03A8     		add	r0, sp, #12
 17906 037e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 17907              	.LVL1080:
 17908              	.LBB10345:
 17909              	.LBI10345:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 17910              		.loc 18 657 7 is_stmt 1 view .LVU4081
 17911              	.LBB10346:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17912              		.loc 18 658 19 is_stmt 0 view .LVU4082
 17913 0382 0AA8     		add	r0, sp, #40
 17914              	.LVL1081:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 17915              		.loc 18 658 19 view .LVU4083
 17916 0384 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 17917              	.LVL1082:
 17918              	.LBB10347:
 17919              	.LBI10347:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 17920              		.loc 18 150 14 is_stmt 1 view .LVU4084
 17921              	.LBB10348:
 17922              	.LBI10348:
 17923              		.loc 19 162 7 view .LVU4085
 17924              	.LBB10349:
 17925              	.LBI10349:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 604


 17926              		.loc 20 89 7 view .LVU4086
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17927              		.loc 20 89 7 is_stmt 0 view .LVU4087
 17928              	.LBE10349:
 17929              	.LBE10348:
 17930              	.LBE10347:
 17931              	.LBE10346:
 17932              	.LBE10345:
 17933              	.LBB10350:
 17934              	.LBI10350:
 17935              		.loc 19 162 7 is_stmt 1 view .LVU4088
 17936              	.LBB10351:
 17937              	.LBI10351:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17938              		.loc 20 89 7 view .LVU4089
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 17939              		.loc 20 89 7 is_stmt 0 view .LVU4090
 17940              	.LBE10351:
 17941              	.LBE10350:
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17942              		.loc 14 130 5 is_stmt 1 view .LVU4091
 17943              	.LBB10352:
 17944              	.LBB10353:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 17945              		.loc 24 919 50 is_stmt 0 view .LVU4092
 17946 0388 544E     		ldr	r6, .L762
 17947              	.LBE10353:
 17948              	.LBE10352:
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17949              		.loc 14 130 39 view .LVU4093
 17950 038a 554D     		ldr	r5, .L762+4
 17951 038c 10AC     		add	r4, sp, #64
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17952              		.loc 14 130 22 view .LVU4094
 17953 038e B0EE480A 		vmov.f32	s0, s16
 17954              	.LBB10355:
 17955              	.LBB10354:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 17956              		.loc 24 919 50 view .LVU4095
 17957 0392 DAE90023 		ldrd	r2, r3, [r10]
 17958 0396 9B1A     		subs	r3, r3, r2
 17959 0398 DB10     		asrs	r3, r3, #3
 17960 039a 06FB03F3 		mul	r3, r6, r3
 17961 039e 00EE903A 		vmov	s1, r3	@ int
 17962              	.LBE10354:
 17963              	.LBE10355:
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17964              		.loc 14 130 39 view .LVU4096
 17965 03a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17966 03a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17967 03a6 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17968              		.loc 14 130 22 view .LVU4097
 17969 03aa F8EE600A 		vcvt.f32.u32	s1, s1
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17970              		.loc 14 130 39 view .LVU4098
 17971 03ae 84E80F00 		stm	r4, {r0, r1, r2, r3}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 605


 17972              	.LVL1083:
 17973              	.LBB10356:
 17974              	.LBI10352:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 17975              		.loc 24 918 7 is_stmt 1 view .LVU4099
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 17976              		.loc 24 918 7 is_stmt 0 view .LVU4100
 17977              	.LBE10356:
 130:Jellybeans.cpp ****     patternParam.Init(patch.controls[0],   0.f, static_cast<float>(arpPatterns.size()),    Paramete
 17978              		.loc 14 130 22 view .LVU4101
 17979 03b2 0022     		movs	r2, #0
 17980 03b4 10A9     		add	r1, sp, #64
 17981 03b6 4B48     		ldr	r0, .L762+8
 17982 03b8 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 17983              	.LVL1084:
 17984              	.LBB10357:
 17985              	.LBI10357:
 17986              		.loc 2 23 5 is_stmt 1 view .LVU4102
 17987              		.loc 2 23 5 is_stmt 0 view .LVU4103
 17988              	.LBE10357:
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 17989              		.loc 14 131 5 is_stmt 1 view .LVU4104
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 17990              		.loc 14 131 40 is_stmt 0 view .LVU4105
 17991 03bc 05F1100C 		add	ip, r5, #16
 17992 03c0 0DF1400E 		add	lr, sp, #64
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 17993              		.loc 14 131 23 view .LVU4106
 17994 03c4 B0EE480A 		vmov.f32	s0, s16
 17995              	.LBB10358:
 17996              	.LBB10359:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 17997              		.loc 24 919 50 view .LVU4107
 17998 03c8 D9E90023 		ldrd	r2, r3, [r9]
 17999 03cc 9B1A     		subs	r3, r3, r2
 18000 03ce DB10     		asrs	r3, r3, #3
 18001 03d0 06FB03F3 		mul	r3, r6, r3
 18002 03d4 00EE903A 		vmov	s1, r3	@ int
 18003              	.LBE10359:
 18004              	.LBE10358:
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 18005              		.loc 14 131 40 view .LVU4108
 18006 03d8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 18007 03dc AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 18008 03e0 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 18009              		.loc 14 131 23 view .LVU4109
 18010 03e4 F8EE600A 		vcvt.f32.u32	s1, s1
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 18011              		.loc 14 131 40 view .LVU4110
 18012 03e8 84E80F00 		stm	r4, {r0, r1, r2, r3}
 18013              	.LVL1085:
 18014              	.LBB10360:
 18015              	.LBI10358:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18016              		.loc 24 918 7 is_stmt 1 view .LVU4111
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 606


 18017              		.loc 24 918 7 is_stmt 0 view .LVU4112
 18018              	.LBE10360:
 131:Jellybeans.cpp ****     divisionParam.Init(patch.controls[1],  0.f, static_cast<float>(allClockInDivs.size()), Paramete
 18019              		.loc 14 131 23 view .LVU4113
 18020 03ec 0022     		movs	r2, #0
 18021 03ee 10A9     		add	r1, sp, #64
 18022 03f0 3D48     		ldr	r0, .L762+12
 18023 03f2 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 18024              	.LVL1086:
 18025              	.LBB10361:
 18026              	.LBI10361:
 18027              		.loc 2 23 5 is_stmt 1 view .LVU4114
 18028              		.loc 2 23 5 is_stmt 0 view .LVU4115
 18029              	.LBE10361:
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18030              		.loc 14 132 5 is_stmt 1 view .LVU4116
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18031              		.loc 14 132 39 is_stmt 0 view .LVU4117
 18032 03f6 05F1300C 		add	ip, r5, #48
 18033 03fa 0DF1400E 		add	lr, sp, #64
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18034              		.loc 14 132 22 view .LVU4118
 18035 03fe B0EE480A 		vmov.f32	s0, s16
 18036              	.LBB10362:
 18037              	.LBB10363:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 18038              		.loc 24 919 50 view .LVU4119
 18039 0402 D8E90023 		ldrd	r2, r3, [r8]
 18040 0406 9B1A     		subs	r3, r3, r2
 18041 0408 DB10     		asrs	r3, r3, #3
 18042 040a 06FB03F3 		mul	r3, r6, r3
 18043 040e 00EE903A 		vmov	s1, r3	@ int
 18044              	.LBE10363:
 18045              	.LBE10362:
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18046              		.loc 14 132 39 view .LVU4120
 18047 0412 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 18048 0416 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 18049 041a 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18050              		.loc 14 132 22 view .LVU4121
 18051 041e F8EE600A 		vcvt.f32.u32	s1, s1
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18052              		.loc 14 132 39 view .LVU4122
 18053 0422 84E80F00 		stm	r4, {r0, r1, r2, r3}
 18054              	.LVL1087:
 18055              	.LBB10364:
 18056              	.LBI10362:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18057              		.loc 24 918 7 is_stmt 1 view .LVU4123
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18058              		.loc 24 918 7 is_stmt 0 view .LVU4124
 18059              	.LBE10364:
 132:Jellybeans.cpp ****     voicingParam.Init(patch.controls[2],   0.f, static_cast<float>(voicings.size()),       Paramete
 18060              		.loc 14 132 22 view .LVU4125
 18061 0426 0022     		movs	r2, #0
 18062 0428 10A9     		add	r1, sp, #64
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 607


 18063 042a 3048     		ldr	r0, .L762+16
 18064 042c FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 18065              	.LVL1088:
 18066              	.LBB10365:
 18067              	.LBI10365:
 18068              		.loc 2 23 5 is_stmt 1 view .LVU4126
 18069              		.loc 2 23 5 is_stmt 0 view .LVU4127
 18070              	.LBE10365:
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18071              		.loc 14 133 5 is_stmt 1 view .LVU4128
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18072              		.loc 14 133 41 is_stmt 0 view .LVU4129
 18073 0430 05F1500C 		add	ip, r5, #80
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18074              		.loc 14 133 24 view .LVU4130
 18075 0434 B0EE480A 		vmov.f32	s0, s16
 18076              	.LBB10366:
 18077              	.LBB10367:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 18078              		.loc 24 919 50 view .LVU4131
 18079 0438 D7E90023 		ldrd	r2, r3, [r7]
 18080 043c 9B1A     		subs	r3, r3, r2
 18081 043e DB10     		asrs	r3, r3, #3
 18082 0440 06FB03F3 		mul	r3, r6, r3
 18083              	.LBE10367:
 18084              	.LBE10366:
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18085              		.loc 14 133 41 view .LVU4132
 18086 0444 10AE     		add	r6, sp, #64
 18087              	.LBB10369:
 18088              	.LBB10368:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 18089              		.loc 24 919 50 view .LVU4133
 18090 0446 00EE903A 		vmov	s1, r3	@ int
 18091              	.LBE10368:
 18092              	.LBE10369:
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18093              		.loc 14 133 41 view .LVU4134
 18094 044a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 18095 044e 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 18096 0450 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18097              		.loc 14 133 24 view .LVU4135
 18098 0454 F8EE600A 		vcvt.f32.u32	s1, s1
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18099              		.loc 14 133 41 view .LVU4136
 18100 0458 84E80F00 		stm	r4, {r0, r1, r2, r3}
 18101              	.LVL1089:
 18102              	.LBB10370:
 18103              	.LBI10366:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18104              		.loc 24 918 7 is_stmt 1 view .LVU4137
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 18105              		.loc 24 918 7 is_stmt 0 view .LVU4138
 18106              	.LBE10370:
 133:Jellybeans.cpp ****     inversionParam.Init(patch.controls[3], 0.f, static_cast<float>(allInversions.size()),  Paramete
 18107              		.loc 14 133 24 view .LVU4139
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 608


 18108 045c 10A9     		add	r1, sp, #64
 18109 045e 0022     		movs	r2, #0
 18110 0460 2348     		ldr	r0, .L762+20
 18111 0462 FFF7FEFF 		bl	_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
 18112              	.LVL1090:
 18113              	.LBB10371:
 18114              	.LBI10371:
 18115              		.loc 2 23 5 is_stmt 1 view .LVU4140
 18116              		.loc 2 23 5 is_stmt 0 view .LVU4141
 18117              	.LBE10371:
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 18118              		.loc 14 134 5 is_stmt 1 view .LVU4142
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 18119              		.loc 14 134 62 is_stmt 0 view .LVU4143
 18120 0466 1F48     		ldr	r0, .L762+8
 18121 0468 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 18122              	.LVL1091:
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 18123              		.loc 14 134 25 view .LVU4144
 18124 046c BDEEC00A 		vcvt.s32.f32	s0, s0
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 18125              		.loc 14 134 23 view .LVU4145
 18126 0470 204B     		ldr	r3, .L762+24
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18127              		.loc 14 135 63 view .LVU4146
 18128 0472 1D48     		ldr	r0, .L762+12
 134:Jellybeans.cpp ****     patternCurCvVal   = static_cast<int>(patternParam.Process());
 18129              		.loc 14 134 25 view .LVU4147
 18130 0474 83ED000A 		vstr.32	s0, [r3]	@ int
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18131              		.loc 14 135 5 is_stmt 1 view .LVU4148
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18132              		.loc 14 135 63 is_stmt 0 view .LVU4149
 18133 0478 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 18134              	.LVL1092:
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18135              		.loc 14 135 25 view .LVU4150
 18136 047c BDEEC00A 		vcvt.s32.f32	s0, s0
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18137              		.loc 14 135 23 view .LVU4151
 18138 0480 1D4B     		ldr	r3, .L762+28
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 18139              		.loc 14 136 62 view .LVU4152
 18140 0482 1A48     		ldr	r0, .L762+16
 135:Jellybeans.cpp ****     divisionCurCvVal  = static_cast<int>(divisionParam.Process());
 18141              		.loc 14 135 25 view .LVU4153
 18142 0484 83ED000A 		vstr.32	s0, [r3]	@ int
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 18143              		.loc 14 136 5 is_stmt 1 view .LVU4154
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 18144              		.loc 14 136 62 is_stmt 0 view .LVU4155
 18145 0488 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 18146              	.LVL1093:
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 18147              		.loc 14 136 25 view .LVU4156
 18148 048c BDEEC00A 		vcvt.s32.f32	s0, s0
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 609


 18149              		.loc 14 136 23 view .LVU4157
 18150 0490 1A4B     		ldr	r3, .L762+32
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18151              		.loc 14 137 64 view .LVU4158
 18152 0492 1748     		ldr	r0, .L762+20
 136:Jellybeans.cpp ****     voicingCurCvVal   = static_cast<int>(voicingParam.Process());
 18153              		.loc 14 136 25 view .LVU4159
 18154 0494 83ED000A 		vstr.32	s0, [r3]	@ int
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18155              		.loc 14 137 5 is_stmt 1 view .LVU4160
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18156              		.loc 14 137 64 is_stmt 0 view .LVU4161
 18157 0498 FFF7FEFF 		bl	_ZN5daisy9Parameter7ProcessEv
 18158              	.LVL1094:
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18159              		.loc 14 137 25 view .LVU4162
 18160 049c BDEEC00A 		vcvt.s32.f32	s0, s0
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18161              		.loc 14 137 23 view .LVU4163
 18162 04a0 174B     		ldr	r3, .L762+36
 141:Jellybeans.cpp ****     menuPos     = 0;
 18163              		.loc 14 141 17 view .LVU4164
 18164 04a2 0021     		movs	r1, #0
 18165 04a4 174A     		ldr	r2, .L762+40
 18166              	.LBB10372:
 18167              	.LBB10373:
 18168              	.LBB10374:
 18169              	.LBB10375:
 18170              	.LBB10376:
 902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18171              		.loc 18 902 16 view .LVU4165
 18172 04a6 1848     		ldr	r0, .L762+44
 18173              	.LBE10376:
 18174              	.LBE10375:
 18175              	.LBE10374:
 18176              	.LBE10373:
 18177              	.LBE10372:
 137:Jellybeans.cpp ****     inversionCurCvVal = static_cast<int>(inversionParam.Process());
 18178              		.loc 14 137 25 view .LVU4166
 18179 04a8 83ED000A 		vstr.32	s0, [r3]	@ int
 140:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 18180              		.loc 14 140 5 is_stmt 1 view .LVU4167
 140:Jellybeans.cpp ****     arpNoteDacOutput1 = 0.f;
 18181              		.loc 14 140 23 is_stmt 0 view .LVU4168
 18182 04ac 174B     		ldr	r3, .L762+48
 18183 04ae 83ED008A 		vstr.32	s16, [r3]
 141:Jellybeans.cpp ****     menuPos     = 0;
 18184              		.loc 14 141 5 is_stmt 1 view .LVU4169
 18185              	.LBB10386:
 18186              	.LBB10382:
 18187              	.LBB10378:
1035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 610


1041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 611


1098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 612


1155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 613


1212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 614


1269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 615


1326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 616


1383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
 18188              		.loc 18 1438 19 is_stmt 0 view .LVU4170
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 617


 18189 04b2 1223     		movs	r3, #18
 18190 04b4 0093     		str	r3, [sp]
 18191              	.LBE10378:
 18192              	.LBE10382:
 18193              	.LBE10386:
 141:Jellybeans.cpp ****     menuPos     = 0;
 18194              		.loc 14 141 17 view .LVU4171
 18195 04b6 1160     		str	r1, [r2]
 142:Jellybeans.cpp ****     isEditing   = false;
 18196              		.loc 14 142 5 is_stmt 1 view .LVU4172
 142:Jellybeans.cpp ****     isEditing   = false;
 18197              		.loc 14 142 17 is_stmt 0 view .LVU4173
 18198 04b8 154A     		ldr	r2, .L762+52
 18199              	.LBB10387:
 18200              	.LBB10383:
 18201              	.LBB10379:
 18202              		.loc 18 1438 19 view .LVU4174
 18203 04ba 164B     		ldr	r3, .L762+56
 18204              	.LBE10379:
 18205              	.LBE10383:
 18206              	.LBE10387:
 142:Jellybeans.cpp ****     isEditing   = false;
 18207              		.loc 14 142 17 view .LVU4175
 18208 04bc 1170     		strb	r1, [r2]
 143:Jellybeans.cpp ****     debugString = "I'm a debug string";
 18209              		.loc 14 143 5 is_stmt 1 view .LVU4176
 18210              	.LVL1095:
 18211              	.LBB10388:
 18212              	.LBI10372:
 675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 18213              		.loc 18 675 7 view .LVU4177
 18214              	.LBB10384:
 18215              	.LBI10373:
1435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18216              		.loc 18 1435 7 view .LVU4178
 18217              	.LBB10380:
 18218              	.LBB10377:
 18219              	.LBI10375:
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 18220              		.loc 18 901 7 view .LVU4179
 901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 18221              		.loc 18 901 7 is_stmt 0 view .LVU4180
 18222              	.LBE10377:
 18223              	.LBE10380:
 18224              	.LBE10384:
 18225              	.LBE10388:
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18226              		.loc 21 357 2 is_stmt 1 view .LVU4181
 18227              	.LBB10389:
 18228              	.LBB10385:
 18229              	.LBB10381:
 18230              		.loc 18 1438 19 is_stmt 0 view .LVU4182
 18231 04be 4268     		ldr	r2, [r0, #4]
 18232 04c0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 18233              	.LVL1096:
 18234              		.loc 18 1438 19 view .LVU4183
 18235              	.LBE10381:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 618


 18236              	.LBE10385:
 18237              	.LBE10389:
 145:Jellybeans.cpp ****     patch.StartAdc();
 18238              		.loc 14 145 5 is_stmt 1 view .LVU4184
 145:Jellybeans.cpp ****     patch.StartAdc();
 18239              		.loc 14 145 19 is_stmt 0 view .LVU4185
 18240 04c4 A5F16800 		sub	r0, r5, #104
 18241 04c8 FFF7FEFF 		bl	_ZN5daisy10DaisyPatch8StartAdcEv
 18242              	.LVL1097:
 18243              	.L757:
 148:Jellybeans.cpp ****     while(1){
 18244              		.loc 14 148 5 is_stmt 1 discriminator 1 view .LVU4186
 149:Jellybeans.cpp ****         updateControls();
 18245              		.loc 14 149 9 discriminator 1 view .LVU4187
 149:Jellybeans.cpp ****         updateControls();
 18246              		.loc 14 149 23 is_stmt 0 discriminator 1 view .LVU4188
 18247 04cc FFF7FEFF 		bl	_Z14updateControlsv
 18248              	.LVL1098:
 150:Jellybeans.cpp ****         updateOled();
 18249              		.loc 14 150 9 is_stmt 1 discriminator 1 view .LVU4189
 150:Jellybeans.cpp ****         updateOled();
 18250              		.loc 14 150 19 is_stmt 0 discriminator 1 view .LVU4190
 18251 04d0 FFF7FEFF 		bl	_Z10updateOledv
 18252              	.LVL1099:
 151:Jellybeans.cpp ****         updateOutputs();
 18253              		.loc 14 151 9 is_stmt 1 discriminator 1 view .LVU4191
 151:Jellybeans.cpp ****         updateOutputs();
 18254              		.loc 14 151 22 is_stmt 0 discriminator 1 view .LVU4192
 18255 04d4 FFF7FEFF 		bl	_Z13updateOutputsv
 18256              	.LVL1100:
 148:Jellybeans.cpp ****     while(1){
 18257              		.loc 14 148 5 is_stmt 1 discriminator 1 view .LVU4193
 18258 04d8 F8E7     		b	.L757
 18259              	.L763:
 18260 04da 00BF     		.align	2
 18261              	.L762:
 18262 04dc ABAAAAAA 		.word	-1431655765
 18263 04e0 58000000 		.word	patch+88
 18264 04e4 00000000 		.word	.LANCHOR6
 18265 04e8 00000000 		.word	.LANCHOR9
 18266 04ec 00000000 		.word	.LANCHOR11
 18267 04f0 00000000 		.word	.LANCHOR13
 18268 04f4 00000000 		.word	.LANCHOR7
 18269 04f8 00000000 		.word	.LANCHOR10
 18270 04fc 00000000 		.word	.LANCHOR12
 18271 0500 00000000 		.word	.LANCHOR14
 18272 0504 00000000 		.word	.LANCHOR16
 18273 0508 00000000 		.word	.LANCHOR18
 18274 050c 00000000 		.word	.LANCHOR27
 18275 0510 00000000 		.word	.LANCHOR15
 18276 0514 54000000 		.word	.LC32
 18277              		.cfi_endproc
 18278              	.LFE5125:
 18280              		.section	.text._ZNSt12_Vector_baseIiSaIiEED2Ev,"axG",%progbits,_ZNSt12_Vector_baseIiSaIiEED5Ev,com
 18281              		.align	1
 18282              		.p2align 2,,3
 18283              		.weak	_ZNSt12_Vector_baseIiSaIiEED2Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 619


 18284              		.syntax unified
 18285              		.thumb
 18286              		.thumb_func
 18287              		.fpu fpv5-d16
 18289              	_ZNSt12_Vector_baseIiSaIiEED2Ev:
 18290              	.LVL1101:
 18291              	.LFB5717:
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 18292              		.loc 24 333 7 view -0
 18293              		.cfi_startproc
 18294              		@ args = 0, pretend = 0, frame = 0
 18295              		@ frame_needed = 0, uses_anonymous_args = 0
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 18296              		.loc 24 333 7 is_stmt 0 view .LVU4195
 18297 0000 10B5     		push	{r4, lr}
 18298              		.cfi_def_cfa_offset 8
 18299              		.cfi_offset 4, -8
 18300              		.cfi_offset 14, -4
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 18301              		.loc 24 333 7 view .LVU4196
 18302 0002 0446     		mov	r4, r0
 18303              	.LBB10390:
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 18304              		.loc 24 335 15 view .LVU4197
 18305 0004 0068     		ldr	r0, [r0]
 18306              	.LVL1102:
 18307              	.LBB10391:
 18308              	.LBI10391:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 18309              		.loc 24 350 7 is_stmt 1 view .LVU4198
 18310              	.LBB10392:
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 18311              		.loc 24 353 2 is_stmt 0 view .LVU4199
 18312 0006 18B1     		cbz	r0, .L765
 18313              	.LVL1103:
 18314              	.LBB10393:
 18315              	.LBI10393:
 491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18316              		.loc 26 491 7 is_stmt 1 view .LVU4200
 18317              	.LBB10394:
 18318              	.LBB10395:
 18319              	.LBI10395:
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 18320              		.loc 20 120 7 view .LVU4201
 18321              	.LBE10395:
 18322              	.LBE10394:
 18323              	.LBE10393:
 18324              	.LBE10392:
 18325              	.LBE10391:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 18326              		.loc 24 336 35 is_stmt 0 view .LVU4202
 18327 0008 A168     		ldr	r1, [r4, #8]
 18328              	.LBB10401:
 18329              	.LBB10400:
 18330              	.LBB10399:
 18331              	.LBB10398:
 18332              	.LBB10397:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 620


 18333              	.LBB10396:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 18334              		.loc 20 133 19 view .LVU4203
 18335 000a 091A     		subs	r1, r1, r0
 18336 000c FFF7FEFF 		bl	_ZdlPvj
 18337              	.LVL1104:
 18338              	.L765:
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 18339              		.loc 20 133 19 view .LVU4204
 18340              	.LBE10396:
 18341              	.LBE10397:
 18342              	.LBE10398:
 18343              	.LBE10399:
 18344              	.LBE10400:
 18345              	.LBE10401:
 18346              	.LBB10402:
 18347              	.LBI10402:
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 18348              		.loc 24 128 14 is_stmt 1 view .LVU4205
 18349              	.LBB10403:
 18350              	.LBI10403:
 18351              		.loc 19 162 7 view .LVU4206
 18352              	.LBB10404:
 18353              	.LBI10404:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18354              		.loc 20 89 7 view .LVU4207
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 18355              		.loc 20 89 7 is_stmt 0 view .LVU4208
 18356              	.LBE10404:
 18357              	.LBE10403:
 18358              	.LBE10402:
 18359              	.LBE10390:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 18360              		.loc 24 337 7 view .LVU4209
 18361 0010 2046     		mov	r0, r4
 18362 0012 10BD     		pop	{r4, pc}
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 18363              		.loc 24 337 7 view .LVU4210
 18364              		.cfi_endproc
 18365              	.LFE5717:
 18367              		.weak	_ZNSt12_Vector_baseIiSaIiEED1Ev
 18368              		.thumb_set _ZNSt12_Vector_baseIiSaIiEED1Ev,_ZNSt12_Vector_baseIiSaIiEED2Ev
 18369              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 18370              		.align	1
 18371              		.p2align 2,,3
 18372              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 18373              		.syntax unified
 18374              		.thumb
 18375              		.thumb_func
 18376              		.fpu fpv5-d16
 18378              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 18379              	.LVL1105:
 18380              	.LFB6080:
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 621


1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::iterator
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k)
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return iterator(__y);
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		   const _Key& __k) const
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	else
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 622


1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _S_right(__x);
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return const_iterator(__y);
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k)
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Link_type __xu(__x);
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Base_ptr __yu(__y);
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<iterator,
2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  iterator>(_M_lower_bound(__x, __y, __k),
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      iterator(__y));
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     equal_range(const _Key& __k) const
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Link_type __x = _M_begin();
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Const_Base_ptr __y = _M_end();
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __x = _S_right(__x);
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Link_type __xu(__x);
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 623


2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      __xu = _S_right(__xu);
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      return pair<const_iterator,
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			  const_iterator>(_M_lower_bound(__x, __y, __k),
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 						  const_iterator(__y));
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     void
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     swap(_Rb_tree& __t)
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_root() == 0)
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__t._M_root() != 0)
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_impl._M_move_data(__t._M_impl);
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (__t._M_root() == 0)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	__t._M_impl._M_move_data(_M_impl);
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // No need to swap header's color as it does not change.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				__t._M_get_Node_allocator());
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 18381              		.loc 32 2091 5 is_stmt 1 view -0
 18382              		.cfi_startproc
 18383              		@ args = 0, pretend = 0, frame = 8
 18384              		@ frame_needed = 0, uses_anonymous_args = 0
 18385              		.loc 32 2091 5 is_stmt 0 view .LVU4212
 18386 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18387              		.cfi_def_cfa_offset 36
 18388              		.cfi_offset 4, -36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 624


 18389              		.cfi_offset 5, -32
 18390              		.cfi_offset 6, -28
 18391              		.cfi_offset 7, -24
 18392              		.cfi_offset 8, -20
 18393              		.cfi_offset 9, -16
 18394              		.cfi_offset 10, -12
 18395              		.cfi_offset 11, -8
 18396              		.cfi_offset 14, -4
 18397              	.LBB10480:
 18398              	.LBB10481:
 749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18399              		.loc 32 749 73 view .LVU4213
 18400 0004 8C68     		ldr	r4, [r1, #8]
 18401              	.LBE10481:
 18402              	.LBE10480:
 18403              		.loc 32 2091 5 view .LVU4214
 18404 0006 83B0     		sub	sp, sp, #12
 18405              		.cfi_def_cfa_offset 48
 18406              		.loc 32 2091 5 view .LVU4215
 18407 0008 8B46     		mov	fp, r1
 18408 000a 8146     		mov	r9, r0
 18409              	.LVL1106:
 18410              	.LBB10482:
 18411              	.LBI10480:
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 18412              		.loc 32 748 7 is_stmt 1 view .LVU4216
 748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 18413              		.loc 32 748 7 is_stmt 0 view .LVU4217
 18414              	.LBE10482:
 18415              	.LBB10483:
 18416              	.LBI10483:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 18417              		.loc 32 759 7 is_stmt 1 view .LVU4218
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 18418              		.loc 32 759 7 is_stmt 0 view .LVU4219
 18419              	.LBE10483:
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       bool __comp = true;
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
 18420              		.loc 32 2098 18 is_stmt 1 view .LVU4220
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 18421              		.loc 32 2091 5 is_stmt 0 view .LVU4221
 18422 000c 0192     		str	r2, [sp, #4]
 18423              		.loc 32 2098 18 view .LVU4222
 18424 000e 002C     		cmp	r4, #0
 18425 0010 36D0     		beq	.L794
 18426 0012 019B     		ldr	r3, [sp, #4]
 18427 0014 D3F800A0 		ldr	r10, [r3]
 18428 0018 D3F80480 		ldr	r8, [r3, #4]
 18429 001c 00E0     		b	.L773
 18430              	.LVL1107:
 18431              	.L792:
 18432              		.loc 32 2098 18 view .LVU4223
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 625


 18433 001e 1446     		mov	r4, r2
 18434              	.LVL1108:
 18435              	.L773:
 18436              	.LBB10485:
 18437              	.LBI10485:
 18438              		.file 40 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 626


  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 627


 109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
 139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 628


 166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 629


 223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 630


 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 631


 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x != __y; }
 367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x > __y; }
 377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 18439              		.loc 40 385 7 is_stmt 1 view .LVU4224
 18440              	.LBB10486:
 18441              	.LBI10486:
1439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 632


1444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 633


1501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 634


1558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 635


1615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 636


1672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 637


1729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 638


1786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 639


1843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 640


1900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 641


1957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 642


2014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 643


2071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 644


2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 645


2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 646


2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
2271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 647


2299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 648


2356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 649


2413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 650


2470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 651


2527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 652


2584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 653


2641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 654


2698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 655


2755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 656


2812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 657


2869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 658


2926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 659


2983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 660


3040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 661


3097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 662


3154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 663


3211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
3240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 664


3268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 665


3325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 666


3382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 667


3439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 668


3496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
3525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 669


3553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 670


3610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
3639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 671


3667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 672


3724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 673


3781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 674


3838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 675


3895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 676


3952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 677


4009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 678


4066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 679


4123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 680


4180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 681


4237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 682


4294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 683


4351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 684


4408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 685


4465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 686


4522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 687


4579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 688


4636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 689


4693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 690


4750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 691


4807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 692


4864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 693


4921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 694


4978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 695


5035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 696


5092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 697


5149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
5178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 698


5206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 699


5263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5292:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 700


5320:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5349:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 701


5377:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5406:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 702


5434:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 703


5491:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5520:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 704


5548:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
5577:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 705


5605:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5634:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 706


5662:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5691:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 707


5719:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5748:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 708


5776:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5805:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 709


5833:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5862:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 710


5890:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
5919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 711


5947:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5976:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 712


6004:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6033:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 713


6061:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
6090:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 714


6118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 715


6175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_lib_three_way_comparison
6190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
6201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
6206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  A string.
6207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  A null-terminated string.
6208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
6209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
6210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline auto
6213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		const _CharT* __rhs) noexcept
6215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
6216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
6217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
6218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of C string and string.
6220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const _CharT* __lhs,
6227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator !=
6231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 716


6232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of two strings.
6233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of C string and string.
6246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  C string.
6247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  String.
6248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const _CharT* __lhs,
6253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test difference of string and C string.
6258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return !(__lhs == __rhs); }
6267:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6268:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator <
6269:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6270:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test if string precedes string.
6271:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6272:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6274:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6275:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6277:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 18442              		.loc 18 6277 5 view .LVU4225
 18443              	.LBB10487:
 18444              	.LBB10488:
 18445              	.LBB10489:
 18446              	.LBB10490:
 18447              	.LBB10491:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18448              		.loc 21 347 2 view .LVU4226
 18449 0020 6669     		ldr	r6, [r4, #20]
 18450              	.LBE10491:
 18451              	.LBE10490:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 717


 18452              	.LBE10489:
 18453              	.LBI10488:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18454              		.loc 18 2852 7 view .LVU4227
 18455              	.LVL1109:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18456              		.loc 18 2852 7 is_stmt 0 view .LVU4228
 18457 0022 4546     		mov	r5, r8
 18458 0024 2769     		ldr	r7, [r4, #16]
 18459              	.LBB10497:
 18460              	.LBB10494:
 18461              	.LBB10492:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18462              		.loc 21 347 25 view .LVU4229
 18463 0026 5046     		mov	r0, r10
 18464 0028 B045     		cmp	r8, r6
 18465 002a 3946     		mov	r1, r7
 18466 002c 28BF     		it	cs
 18467 002e 3546     		movcs	r5, r6
 18468              	.LVL1110:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18469              		.loc 21 347 25 view .LVU4230
 18470              	.LBE10492:
 18471              	.LBI10490:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 18472              		.loc 21 337 7 is_stmt 1 view .LVU4231
 18473              	.LBB10493:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 18474              		.loc 21 339 2 view .LVU4232
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18475              		.loc 21 347 25 is_stmt 0 view .LVU4233
 18476 0030 2A46     		mov	r2, r5
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 18477              		.loc 21 339 2 view .LVU4234
 18478 0032 15B1     		cbz	r5, .L775
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18479              		.loc 21 347 25 view .LVU4235
 18480 0034 FFF7FEFF 		bl	memcmp
 18481              	.LVL1111:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18482              		.loc 21 347 25 view .LVU4236
 18483              	.LBE10493:
 18484              	.LBE10494:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 18485              		.loc 18 2859 2 view .LVU4237
 18486 0038 08B9     		cbnz	r0, .L776
 18487              	.LVL1112:
 18488              	.L775:
 18489              	.LBB10495:
 18490              	.LBI10495:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18491              		.loc 18 401 7 is_stmt 1 view .LVU4238
 18492              	.LBB10496:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18493              		.loc 18 403 51 is_stmt 0 view .LVU4239
 18494 003a A8EB0600 		sub	r0, r8, r6
 18495              	.LVL1113:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 718


 18496              	.L776:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18497              		.loc 18 403 51 view .LVU4240
 18498              	.LBE10496:
 18499              	.LBE10495:
 18500              	.LBE10497:
 18501              	.LBE10488:
 18502              	.LBE10487:
 18503              	.LBE10486:
 18504              	.LBE10485:
 18505 003e 0028     		cmp	r0, #0
 18506              	.LBB10498:
 18507              	.LBB10499:
 798:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18508              		.loc 32 798 53 view .LVU4241
 18509 0040 D4E90212 		ldrd	r1, r2, [r4, #8]
 18510              	.LBE10499:
 18511              	.LBE10498:
 18512 0044 AEBF     		itee	ge
 18513 0046 0021     		movge	r1, #0
 18514 0048 0A46     		movlt	r2, r1
 18515 004a 0121     		movlt	r1, #1
 18516              	.LVL1114:
 18517              		.loc 32 2098 18 is_stmt 1 view .LVU4242
 18518 004c 002A     		cmp	r2, #0
 18519 004e E6D1     		bne	.L792
 18520              	.LVL1115:
 18521              	.LBB10500:
 18522              	.LBI10500:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 18523              		.loc 32 273 7 view .LVU4243
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 18524              		.loc 32 273 7 is_stmt 0 view .LVU4244
 18525              	.LBE10500:
2099:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2100:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
2102:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
2103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2104:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __j = iterator(__y);
2105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__comp)
 18526              		.loc 32 2105 7 view .LVU4245
 18527 0050 B9B9     		cbnz	r1, .L772
 18528 0052 A346     		mov	fp, r4
 18529              	.LVL1116:
 18530              	.L779:
 18531              	.LBB10501:
 18532              	.LBI10501:
 18533              		.loc 40 385 7 is_stmt 1 view .LVU4246
 18534              	.LBB10502:
 18535              	.LBI10502:
 18536              		.loc 18 6277 5 view .LVU4247
 18537              	.LBB10503:
 18538              	.LBI10503:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18539              		.loc 18 2852 7 view .LVU4248
 18540              	.LBB10504:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 719


 18541              	.LBB10505:
 18542              	.LBI10505:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 18543              		.loc 21 337 7 view .LVU4249
 18544              	.LBB10506:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 18545              		.loc 21 339 2 view .LVU4250
 18546 0054 8DB1     		cbz	r5, .L782
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18547              		.loc 21 347 2 view .LVU4251
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18548              		.loc 21 347 25 is_stmt 0 view .LVU4252
 18549 0056 2A46     		mov	r2, r5
 18550 0058 5146     		mov	r1, r10
 18551 005a 3846     		mov	r0, r7
 18552 005c FFF7FEFF 		bl	memcmp
 18553              	.LVL1117:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18554              		.loc 21 347 25 view .LVU4253
 18555              	.LBE10506:
 18556              	.LBE10505:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 18557              		.loc 18 2859 2 view .LVU4254
 18558 0060 58B1     		cbz	r0, .L782
 18559              	.L783:
 18560              	.LVL1118:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 18561              		.loc 18 2859 2 view .LVU4255
 18562              	.LBE10504:
 18563              	.LBE10503:
 18564              	.LBE10502:
 18565              	.LBE10501:
2106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__j == begin())
2108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
2109:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    --__j;
2111:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2112:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 18566              		.loc 32 2112 7 view .LVU4256
 18567 0062 0028     		cmp	r0, #0
 18568              	.LVL1119:
 18569              	.LBB10512:
 18570              	.LBI10512:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 18571              		.loc 33 352 12 is_stmt 1 view .LVU4257
 18572              	.LBB10513:
 18573              	.LBB10514:
 18574              	.LBB10515:
 18575              	.LBI10515:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18576              		.loc 37 76 5 view .LVU4258
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18577              		.loc 37 76 5 is_stmt 0 view .LVU4259
 18578              	.LBE10515:
 18579              		.loc 33 353 64 view .LVU4260
 18580 0064 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 720


 18581              	.LBE10514:
 18582              	.LBE10513:
 18583              	.LBE10512:
2113:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__x, __y);
2114:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__j._M_node, 0);
2115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 18584              		.loc 32 2115 5 view .LVU4261
 18585 0068 4846     		mov	r0, r9
 18586              	.LBB10519:
 18587              	.LBB10518:
 18588              	.LBB10517:
 18589              		.loc 33 353 64 view .LVU4262
 18590 006a B4BF     		ite	lt
 18591 006c C9E9003B 		strdlt	r3, fp, [r9]
 18592              	.LVL1120:
 18593              	.LBB10516:
 18594              	.LBI10516:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18595              		.loc 37 76 5 is_stmt 1 view .LVU4263
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18596              		.loc 37 76 5 is_stmt 0 view .LVU4264
 18597              	.LBE10516:
 18598              	.LBE10517:
 18599              	.LBE10518:
 18600              	.LBE10519:
 18601              	.LBB10520:
 18602              	.LBI10520:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 18603              		.loc 33 322 18 is_stmt 1 view .LVU4265
 18604              	.LBB10521:
 18605              	.LBB10522:
 18606              	.LBB10523:
 18607              	.LBI10523:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18608              		.loc 37 76 5 view .LVU4266
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18609              		.loc 37 76 5 is_stmt 0 view .LVU4267
 18610              	.LBE10523:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 18611              		.loc 33 323 51 view .LVU4268
 18612 0070 C9E90043 		strdge	r4, r3, [r9]
 18613              	.LVL1121:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 18614              		.loc 33 323 51 view .LVU4269
 18615              	.LBE10522:
 18616              	.LBE10521:
 18617              	.LBE10520:
 18618              		.loc 32 2115 5 view .LVU4270
 18619 0074 03B0     		add	sp, sp, #12
 18620              		.cfi_remember_state
 18621              		.cfi_def_cfa_offset 36
 18622              		@ sp needed
 18623 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18624              	.LVL1122:
 18625              	.L782:
 18626              		.cfi_restore_state
 18627              	.LBB10524:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 721


 18628              	.LBB10511:
 18629              	.LBB10510:
 18630              	.LBB10509:
 18631              	.LBB10507:
 18632              	.LBI10507:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18633              		.loc 18 401 7 is_stmt 1 view .LVU4271
 18634              	.LBB10508:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18635              		.loc 18 403 51 is_stmt 0 view .LVU4272
 18636 007a A6EB0800 		sub	r0, r6, r8
 18637              	.LVL1123:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18638              		.loc 18 403 51 view .LVU4273
 18639              	.LBE10508:
 18640              	.LBE10507:
 18641 007e F0E7     		b	.L783
 18642              	.LVL1124:
 18643              	.L794:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18644              		.loc 18 403 51 view .LVU4274
 18645              	.LBE10509:
 18646              	.LBE10510:
 18647              	.LBE10511:
 18648              	.LBE10524:
 18649              	.LBB10525:
 18650              	.LBB10484:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18651              		.loc 32 760 31 view .LVU4275
 18652 0080 0C1D     		adds	r4, r1, #4
 18653              	.LVL1125:
 18654              	.L772:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18655              		.loc 32 760 31 view .LVU4276
 18656              	.LBE10484:
 18657              	.LBE10525:
 18658              	.LBB10526:
 18659              	.LBI10526:
1002:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 18660              		.loc 32 1002 7 is_stmt 1 view .LVU4277
 18661              	.LBB10527:
 18662              	.LBB10528:
 18663              	.LBI10528:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 18664              		.loc 32 273 7 view .LVU4278
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 18665              		.loc 32 273 7 is_stmt 0 view .LVU4279
 18666              	.LBE10528:
 18667              	.LBE10527:
 18668              	.LBE10526:
2107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(__x, __y);
 18669              		.loc 32 2107 4 view .LVU4280
 18670 0082 DBF80C30 		ldr	r3, [fp, #12]
 18671 0086 A342     		cmp	r3, r4
 18672 0088 10D0     		beq	.L795
 18673              	.LVL1126:
 18674              	.LBB10529:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 722


 18675              	.LBI10529:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 18676              		.loc 32 300 7 is_stmt 1 view .LVU4281
 18677              	.LBB10530:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 18678              		.loc 32 302 30 is_stmt 0 view .LVU4282
 18679 008a 2046     		mov	r0, r4
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 18680              		.loc 32 303 10 view .LVU4283
 18681 008c A346     		mov	fp, r4
 18682              	.LVL1127:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 18683              		.loc 32 302 30 view .LVU4284
 18684 008e FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 18685              	.LVL1128:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 18686              		.loc 32 302 30 view .LVU4285
 18687 0092 019B     		ldr	r3, [sp, #4]
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 18688              		.loc 32 303 10 view .LVU4286
 18689 0094 0446     		mov	r4, r0
 18690 0096 D3F80480 		ldr	r8, [r3, #4]
 18691 009a D3F800A0 		ldr	r10, [r3]
 18692 009e D0E90476 		ldrd	r7, r6, [r0, #16]
 18693 00a2 4645     		cmp	r6, r8
 18694 00a4 3546     		mov	r5, r6
 18695 00a6 28BF     		it	cs
 18696 00a8 4546     		movcs	r5, r8
 18697 00aa D3E7     		b	.L779
 18698              	.LVL1129:
 18699              	.L795:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       }
 18700              		.loc 32 303 10 view .LVU4287
 18701              	.LBE10530:
 18702              	.LBE10529:
 18703              	.LBB10531:
 18704              	.LBI10531:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 18705              		.loc 33 352 12 is_stmt 1 view .LVU4288
 18706              	.LBB10532:
 18707              	.LBB10533:
 18708              	.LBB10534:
 18709              	.LBI10534:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18710              		.loc 37 76 5 view .LVU4289
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18711              		.loc 37 76 5 is_stmt 0 view .LVU4290
 18712              	.LBE10534:
 18713              		.loc 33 353 64 view .LVU4291
 18714 00ac 0023     		movs	r3, #0
 18715              	.LBE10533:
 18716              	.LBE10532:
 18717              	.LBE10531:
 18718              		.loc 32 2115 5 view .LVU4292
 18719 00ae 4846     		mov	r0, r9
 18720              	.LBB10538:
 18721              	.LBB10537:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 723


 18722              	.LBB10536:
 18723              		.loc 33 353 64 view .LVU4293
 18724 00b0 C9E90034 		strd	r3, r4, [r9]
 18725              	.LVL1130:
 18726              	.LBB10535:
 18727              	.LBI10535:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18728              		.loc 37 76 5 is_stmt 1 view .LVU4294
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18729              		.loc 37 76 5 is_stmt 0 view .LVU4295
 18730              	.LBE10535:
 18731              	.LBE10536:
 18732              	.LBE10537:
 18733              	.LBE10538:
 18734              		.loc 32 2115 5 view .LVU4296
 18735 00b4 03B0     		add	sp, sp, #12
 18736              		.cfi_def_cfa_offset 36
 18737              		@ sp needed
 18738 00b6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18739              		.loc 32 2115 5 view .LVU4297
 18740              		.cfi_endproc
 18741              	.LFE6080:
 18743 00ba 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 18744              		.align	1
 18745              		.p2align 2,,3
 18746              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 18747              		.syntax unified
 18748              		.thumb
 18749              		.thumb_func
 18750              		.fpu fpv5-d16
 18752              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 18753              	.LVL1131:
 18754              	.LFB5982:
2116:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2117:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2118:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2119:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2120:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2121:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2122:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2123:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2124:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
2125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2126:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2127:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Link_type __x = _M_begin();
2128:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Base_ptr __y = _M_end();
2129:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       while (__x != 0)
2130:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2131:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __y = __x;
2132:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
2133:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		_S_left(__x) : _S_right(__x);
2134:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2135:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(__x, __y);
2136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2137:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2138:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2139:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 724


2140:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2141:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2142:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2143:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
2145:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2146:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(_Arg&& __v)
2148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2149:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_unique(const _Val& __v)
2150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2151:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<iterator, bool> _Res;
2153:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2154:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
2155:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2156:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
2157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2158:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  _Alloc_node __an(*this);
2159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
2160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
2161:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		      true);
2162:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2163:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2164:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _Res(iterator(__res.first), false);
2165:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2166:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2167:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2168:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2169:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2170:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg>
2171:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2172:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2174:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(_Arg&& __v)
2176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2177:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_insert_equal(const _Val& __v)
2178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2180:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2181:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
2182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Alloc_node __an(*this);
2183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       return _M_insert_(__res.first, __res.second,
2184:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
2185:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
2186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2188:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2189:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2191:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2192:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 18755              		.loc 32 2193 5 is_stmt 1 view -0
 18756              		.cfi_startproc
 18757              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 725


 18758              		@ frame_needed = 0, uses_anonymous_args = 0
 18759              		.loc 32 2193 5 is_stmt 0 view .LVU4299
 18760 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18761              		.cfi_def_cfa_offset 36
 18762              		.cfi_offset 4, -36
 18763              		.cfi_offset 5, -32
 18764              		.cfi_offset 6, -28
 18765              		.cfi_offset 7, -24
 18766              		.cfi_offset 8, -20
 18767              		.cfi_offset 9, -16
 18768              		.cfi_offset 10, -12
 18769              		.cfi_offset 11, -8
 18770              		.cfi_offset 14, -4
 18771 0004 1F46     		mov	r7, r3
 18772              	.LBB10710:
 18773              	.LBB10711:
 18774              	.LBB10712:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18775              		.loc 32 760 31 view .LVU4300
 18776 0006 0B1D     		adds	r3, r1, #4
 18777              	.LVL1132:
 760:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 18778              		.loc 32 760 31 view .LVU4301
 18779              	.LBE10712:
 18780              	.LBE10711:
 18781              	.LBE10710:
 18782              		.loc 32 2193 5 view .LVU4302
 18783 0008 83B0     		sub	sp, sp, #12
 18784              		.cfi_def_cfa_offset 48
 18785              		.loc 32 2193 5 view .LVU4303
 18786 000a 0E46     		mov	r6, r1
 18787              	.LBB10821:
2194:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
2195:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				  const key_type& __k)
2196:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2197:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       iterator __pos = __position._M_const_cast();
2198:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2199:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2200:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       // end()
2201:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__pos._M_node == _M_end())
 18788              		.loc 32 2201 7 view .LVU4304
 18789 000c 9A42     		cmp	r2, r3
 18790              	.LBE10821:
2193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 18791              		.loc 32 2193 5 view .LVU4305
 18792 000e 0546     		mov	r5, r0
 18793              	.LVL1133:
 18794              	.LBB10822:
 18795              	.LBI10822:
 354:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 18796              		.loc 32 354 7 is_stmt 1 view .LVU4306
 18797              	.LBB10823:
 18798              	.LBB10824:
 18799              	.LBI10824:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 18800              		.loc 32 273 7 view .LVU4307
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 726


 18801              		.loc 32 273 7 is_stmt 0 view .LVU4308
 18802              	.LBE10824:
 18803              	.LBE10823:
 18804              	.LBE10822:
 18805              	.LBB10825:
 18806              	.LBB10713:
 18807              	.LBI10711:
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 18808              		.loc 32 759 7 is_stmt 1 view .LVU4309
 759:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return &this->_M_impl._M_header; }
 18809              		.loc 32 759 7 is_stmt 0 view .LVU4310
 18810              	.LBE10713:
 18811              		.loc 32 2201 7 view .LVU4311
 18812 0010 4DD0     		beq	.L835
 18813              	.LVL1134:
 18814              	.LBB10714:
 18815              	.LBB10715:
 18816              	.LBI10715:
 18817              		.loc 40 385 7 is_stmt 1 view .LVU4312
 18818              	.LBB10716:
 18819              	.LBI10716:
 18820              		.loc 18 6277 5 view .LVU4313
 18821 0012 1446     		mov	r4, r2
 18822              	.LVL1135:
 18823              		.loc 18 6277 5 is_stmt 0 view .LVU4314
 18824 0014 D7E900B8 		ldrd	fp, r8, [r7]
 18825 0018 D2E90419 		ldrd	r1, r9, [r2, #16]
 18826              	.LVL1136:
 18827              		.loc 18 6277 5 view .LVU4315
 18828 001c C246     		mov	r10, r8
 18829 001e C845     		cmp	r8, r9
 18830 0020 28BF     		it	cs
 18831 0022 CA46     		movcs	r10, r9
 18832              	.LVL1137:
 18833              	.LBB10717:
 18834              	.LBB10718:
 18835              	.LBB10719:
 18836              	.LBB10720:
 18837              	.LBI10720:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 18838              		.loc 21 337 7 is_stmt 1 view .LVU4316
 18839              	.LBB10721:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 18840              		.loc 21 339 2 view .LVU4317
 18841 0024 BAF1000F 		cmp	r10, #0
 18842 0028 1CD0     		beq	.L802
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18843              		.loc 21 347 2 view .LVU4318
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18844              		.loc 21 347 25 is_stmt 0 view .LVU4319
 18845 002a 5246     		mov	r2, r10
 18846              	.LVL1138:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18847              		.loc 21 347 25 view .LVU4320
 18848 002c 5846     		mov	r0, fp
 18849              	.LVL1139:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 727


 18850              		.loc 21 347 25 view .LVU4321
 18851 002e 0191     		str	r1, [sp, #4]
 18852 0030 FFF7FEFF 		bl	memcmp
 18853              	.LVL1140:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18854              		.loc 21 347 25 view .LVU4322
 18855              	.LBE10721:
 18856              	.LBE10720:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 18857              		.loc 18 2859 2 view .LVU4323
 18858 0034 0028     		cmp	r0, #0
 18859 0036 0199     		ldr	r1, [sp, #4]
 18860 0038 02D1     		bne	.L833
 18861              	.LVL1141:
 18862              	.LBB10722:
 18863              	.LBI10722:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18864              		.loc 18 401 7 is_stmt 1 view .LVU4324
 18865              	.LBB10723:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18866              		.loc 18 403 51 is_stmt 0 view .LVU4325
 18867 003a A8EB0903 		sub	r3, r8, r9
 18868              	.LBE10723:
 18869              	.LBE10722:
 18870              	.LBE10719:
 18871              	.LBE10718:
 18872              	.LBE10717:
 18873              	.LBE10716:
 18874              	.LBE10715:
2202:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2203:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (size() > 0
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
2205:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 18875              		.loc 32 2209 12 view .LVU4326
 18876 003e 002B     		cmp	r3, #0
 18877              	.L833:
 18878 0040 14DB     		blt	.L815
 18879              	.LVL1142:
 18880              	.LBB10730:
 18881              	.LBB10731:
 18882              	.LBB10732:
 18883              	.LBB10733:
 18884              	.LBB10734:
 18885              	.LBB10735:
 18886              	.LBB10736:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18887              		.loc 21 347 2 is_stmt 1 view .LVU4327
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18888              		.loc 21 347 25 is_stmt 0 view .LVU4328
 18889 0042 0846     		mov	r0, r1
 18890 0044 5246     		mov	r2, r10
 18891 0046 5946     		mov	r1, fp
 18892 0048 FFF7FEFF 		bl	memcmp
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 728


 18893              	.LVL1143:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 18894              		.loc 21 347 25 view .LVU4329
 18895              	.LBE10736:
 18896              	.LBE10735:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 18897              		.loc 18 2859 2 view .LVU4330
 18898 004c 08B9     		cbnz	r0, .L809
 18899              	.LVL1144:
 18900              	.L817:
 18901              	.LBB10737:
 18902              	.LBI10737:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18903              		.loc 18 401 7 is_stmt 1 view .LVU4331
 18904              	.LBB10738:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18905              		.loc 18 403 51 is_stmt 0 view .LVU4332
 18906 004e A9EB0800 		sub	r0, r9, r8
 18907              	.LVL1145:
 18908              	.L809:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18909              		.loc 18 403 51 view .LVU4333
 18910              	.LBE10738:
 18911              	.LBE10737:
 18912              	.LBE10734:
 18913              	.LBE10733:
 18914              	.LBE10732:
 18915              	.LBE10731:
2210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // First, try before...
2212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __before = __pos;
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
2216:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2218:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
2219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2220:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2221:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2222:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2223:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2224:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2225:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 18916              		.loc 32 2225 12 view .LVU4334
 18917 0052 0028     		cmp	r0, #0
 18918 0054 50DB     		blt	.L836
 18919              	.LVL1146:
 18920              	.LBB10739:
 18921              	.LBI10739:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 18922              		.loc 33 322 18 is_stmt 1 view .LVU4335
 18923              	.LBB10740:
 18924              	.LBB10741:
 18925              	.LBB10742:
 18926              	.LBI10742:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 729


 18927              		.loc 37 76 5 view .LVU4336
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 18928              		.loc 37 76 5 is_stmt 0 view .LVU4337
 18929              	.LBE10742:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 18930              		.loc 33 323 51 view .LVU4338
 18931 0056 0023     		movs	r3, #0
 18932 0058 C5E90043 		strd	r4, r3, [r5]
 18933              	.LVL1147:
 18934              	.L796:
 323:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 18935              		.loc 33 323 51 view .LVU4339
 18936              	.LBE10741:
 18937              	.LBE10740:
 18938              	.LBE10739:
 18939              	.LBE10730:
 18940              	.LBE10714:
 18941              	.LBE10825:
2226:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
2227:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  // ... then try after.
2228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  iterator __after = __pos;
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2230:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
2232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
2235:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	      else
2236:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2237:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    }
2238:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  else
2239:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2240:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
2241:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       else
2242:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	// Equivalent keys.
2243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return _Res(__pos._M_node, 0);
2244:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 18942              		.loc 32 2244 5 view .LVU4340
 18943 005c 2846     		mov	r0, r5
 18944 005e 03B0     		add	sp, sp, #12
 18945              		.cfi_remember_state
 18946              		.cfi_def_cfa_offset 36
 18947              		@ sp needed
 18948 0060 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18949              	.LVL1148:
 18950              	.L802:
 18951              		.cfi_restore_state
 18952              	.LBB10826:
 18953              	.LBB10806:
 18954              	.LBB10777:
 18955              	.LBB10729:
 18956              	.LBB10728:
 18957              	.LBB10727:
 18958              	.LBB10726:
 18959              	.LBB10725:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 18960              		.loc 18 401 7 is_stmt 1 view .LVU4341
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 730


 18961              	.LBB10724:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 18962              		.loc 18 403 51 is_stmt 0 view .LVU4342
 18963 0064 A8EB0903 		sub	r3, r8, r9
 18964              	.LBE10724:
 18965              	.LBE10725:
 18966              	.LBE10726:
 18967              	.LBE10727:
 18968              	.LBE10728:
 18969              	.LBE10729:
 18970              	.LBE10777:
2209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 18971              		.loc 32 2209 12 view .LVU4343
 18972 0068 002B     		cmp	r3, #0
 18973 006a F0DA     		bge	.L817
 18974              	.LVL1149:
 18975              	.L815:
 18976              	.LBB10778:
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 18977              		.loc 32 2213 22 view .LVU4344
 18978 006c F368     		ldr	r3, [r6, #12]
2213:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
 18979              		.loc 32 2213 4 view .LVU4345
 18980 006e A342     		cmp	r3, r4
 18981 0070 17D0     		beq	.L808
 18982              	.LVL1150:
 18983              	.LBB10779:
 18984              	.LBI10779:
 300:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 18985              		.loc 32 300 7 is_stmt 1 view .LVU4346
 18986              	.LBB10780:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 18987              		.loc 32 302 30 is_stmt 0 view .LVU4347
 18988 0072 2046     		mov	r0, r4
 18989 0074 FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 18990              	.LVL1151:
 18991 0078 D0F814A0 		ldr	r10, [r0, #20]
 18992 007c 8146     		mov	r9, r0
 18993              	.LVL1152:
 302:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 18994              		.loc 32 302 30 view .LVU4348
 18995              	.LBE10780:
 18996              	.LBE10779:
 18997              	.LBB10781:
 18998              	.LBI10781:
 18999              		.loc 40 385 7 is_stmt 1 view .LVU4349
 19000              	.LBB10782:
 19001              	.LBI10782:
 19002              		.loc 18 6277 5 view .LVU4350
 19003              	.LBB10783:
 19004              	.LBB10784:
 19005              	.LBI10784:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19006              		.loc 18 2852 7 view .LVU4351
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19007              		.loc 18 2852 7 is_stmt 0 view .LVU4352
 19008 007e C245     		cmp	r10, r8
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 731


 19009 0080 5246     		mov	r2, r10
 19010 0082 28BF     		it	cs
 19011 0084 4246     		movcs	r2, r8
 19012              	.LVL1153:
 19013              	.LBB10785:
 19014              	.LBB10786:
 19015              	.LBI10786:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 19016              		.loc 21 337 7 is_stmt 1 view .LVU4353
 19017              	.LBB10787:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 19018              		.loc 21 339 2 view .LVU4354
 19019 0086 22B1     		cbz	r2, .L806
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19020              		.loc 21 347 2 view .LVU4355
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19021              		.loc 21 347 25 is_stmt 0 view .LVU4356
 19022 0088 5946     		mov	r1, fp
 19023 008a 0069     		ldr	r0, [r0, #16]
 19024              	.LVL1154:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19025              		.loc 21 347 25 view .LVU4357
 19026 008c FFF7FEFF 		bl	memcmp
 19027              	.LVL1155:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19028              		.loc 21 347 25 view .LVU4358
 19029              	.LBE10787:
 19030              	.LBE10786:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 19031              		.loc 18 2859 2 view .LVU4359
 19032 0090 08B9     		cbnz	r0, .L807
 19033              	.LVL1156:
 19034              	.L806:
 19035              	.LBB10788:
 19036              	.LBI10788:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19037              		.loc 18 401 7 is_stmt 1 view .LVU4360
 19038              	.LBB10789:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19039              		.loc 18 403 51 is_stmt 0 view .LVU4361
 19040 0092 AAEB0800 		sub	r0, r10, r8
 19041              	.LVL1157:
 19042              	.L807:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19043              		.loc 18 403 51 view .LVU4362
 19044              	.LBE10789:
 19045              	.LBE10788:
 19046              	.LBE10785:
 19047              	.LBE10784:
 19048              	.LBE10783:
 19049              	.LBE10782:
 19050              	.LBE10781:
2215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 19051              		.loc 32 2215 9 view .LVU4363
 19052 0096 0028     		cmp	r0, #0
 19053 0098 25DA     		bge	.L798
 19054              	.LVL1158:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 732


 19055              	.LBB10790:
 19056              	.LBI10790:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 19057              		.loc 32 797 7 is_stmt 1 view .LVU4364
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 19058              		.loc 32 797 7 is_stmt 0 view .LVU4365
 19059              	.LBE10790:
2217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __before._M_node);
 19060              		.loc 32 2217 8 view .LVU4366
 19061 009a D9F80C30 		ldr	r3, [r9, #12]
 19062 009e 002B     		cmp	r3, #0
 19063 00a0 4BD0     		beq	.L837
 19064              	.LVL1159:
 19065              	.L808:
 19066              	.LBB10791:
 19067              	.LBI10791:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 19068              		.loc 33 352 12 is_stmt 1 view .LVU4367
 19069              	.LBB10792:
 19070              	.LBB10793:
 19071              	.LBB10794:
 19072              	.LBI10794:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19073              		.loc 37 76 5 view .LVU4368
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19074              		.loc 37 76 5 is_stmt 0 view .LVU4369
 19075              	.LBE10794:
 19076              	.LBE10793:
 19077              	.LBE10792:
 19078              	.LBE10791:
 19079              	.LBE10778:
 19080              	.LBE10806:
 19081              	.LBE10826:
 19082              		.loc 32 2244 5 view .LVU4370
 19083 00a2 2846     		mov	r0, r5
 19084              	.LBB10827:
 19085              	.LBB10807:
 19086              	.LBB10801:
 19087              	.LBB10797:
 19088              	.LBB10796:
 19089              	.LBB10795:
 19090              		.loc 33 353 64 view .LVU4371
 19091 00a4 C5E90044 		strd	r4, r4, [r5]
 19092              	.LBE10795:
 19093              	.LBE10796:
 19094              	.LBE10797:
 19095              	.LBE10801:
 19096              	.LBE10807:
 19097              	.LBE10827:
 19098              		.loc 32 2244 5 view .LVU4372
 19099 00a8 03B0     		add	sp, sp, #12
 19100              		.cfi_remember_state
 19101              		.cfi_def_cfa_offset 36
 19102              		@ sp needed
 19103 00aa BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19104              	.LVL1160:
 19105              	.L835:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 733


 19106              		.cfi_restore_state
 19107              	.LBB10828:
 19108              	.LBB10808:
 19109              	.LBI10808:
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 19110              		.loc 32 1038 7 is_stmt 1 view .LVU4373
1038:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_impl._M_node_count; }
 19111              		.loc 32 1038 7 is_stmt 0 view .LVU4374
 19112              	.LBE10808:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 19113              		.loc 32 2204 8 view .LVU4375
 19114 00ae 4B69     		ldr	r3, [r1, #20]
 19115 00b0 CBB1     		cbz	r3, .L798
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 19116              		.loc 32 2204 33 discriminator 1 view .LVU4376
 19117 00b2 0C69     		ldr	r4, [r1, #16]
 19118              	.LVL1161:
 19119              	.LBB10809:
 19120              	.LBI10809:
 19121              		.loc 40 385 7 is_stmt 1 discriminator 1 view .LVU4377
 19122              	.LBB10810:
 19123              	.LBI10810:
 19124              		.loc 18 6277 5 discriminator 1 view .LVU4378
 19125 00b4 D7F80480 		ldr	r8, [r7, #4]
 19126 00b8 D4F81490 		ldr	r9, [r4, #20]
 19127              	.LBB10811:
 19128              	.LBB10812:
 19129              	.LBI10812:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19130              		.loc 18 2852 7 discriminator 1 view .LVU4379
 19131              	.LVL1162:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19132              		.loc 18 2852 7 is_stmt 0 discriminator 1 view .LVU4380
 19133 00bc C145     		cmp	r9, r8
 19134 00be 4A46     		mov	r2, r9
 19135              	.LVL1163:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19136              		.loc 18 2852 7 discriminator 1 view .LVU4381
 19137 00c0 28BF     		it	cs
 19138 00c2 4246     		movcs	r2, r8
 19139              	.LVL1164:
 19140              	.LBB10813:
 19141              	.LBB10814:
 19142              	.LBI10814:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 19143              		.loc 21 337 7 is_stmt 1 discriminator 1 view .LVU4382
 19144              	.LBB10815:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 19145              		.loc 21 339 2 discriminator 1 view .LVU4383
 19146 00c4 22B1     		cbz	r2, .L799
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19147              		.loc 21 347 2 view .LVU4384
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19148              		.loc 21 347 25 is_stmt 0 view .LVU4385
 19149 00c6 3968     		ldr	r1, [r7]
 19150              	.LVL1165:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 734


 19151              		.loc 21 347 25 view .LVU4386
 19152 00c8 2069     		ldr	r0, [r4, #16]
 19153              	.LVL1166:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19154              		.loc 21 347 25 view .LVU4387
 19155 00ca FFF7FEFF 		bl	memcmp
 19156              	.LVL1167:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19157              		.loc 21 347 25 view .LVU4388
 19158              	.LBE10815:
 19159              	.LBE10814:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 19160              		.loc 18 2859 2 view .LVU4389
 19161 00ce 08B9     		cbnz	r0, .L800
 19162              	.LVL1168:
 19163              	.L799:
 19164              	.LBB10816:
 19165              	.LBI10816:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19166              		.loc 18 401 7 is_stmt 1 view .LVU4390
 19167              	.LBB10817:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19168              		.loc 18 403 51 is_stmt 0 view .LVU4391
 19169 00d0 A9EB0800 		sub	r0, r9, r8
 19170              	.LVL1169:
 19171              	.L800:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19172              		.loc 18 403 51 view .LVU4392
 19173              	.LBE10817:
 19174              	.LBE10816:
 19175              	.LBE10813:
 19176              	.LBE10812:
 19177              	.LBE10811:
 19178              	.LBE10810:
 19179              	.LBE10809:
2204:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 19180              		.loc 32 2204 8 view .LVU4393
 19181 00d4 0028     		cmp	r0, #0
 19182 00d6 06DA     		bge	.L798
 19183              	.LVL1170:
 19184              	.L834:
 19185              	.LBB10818:
 19186              	.LBB10802:
 19187              	.LBB10743:
 19188              	.LBB10744:
 19189              	.LBI10744:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 19190              		.loc 33 336 18 is_stmt 1 view .LVU4394
 19191              	.LBB10745:
 19192              	.LBB10746:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19193              		.loc 33 337 51 is_stmt 0 view .LVU4395
 19194 00d8 0023     		movs	r3, #0
 19195              	.LBE10746:
 19196              	.LBE10745:
 19197              	.LBE10744:
 19198              	.LBE10743:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 735


 19199              	.LBE10802:
 19200              	.LBE10818:
 19201              	.LBE10828:
 19202              		.loc 32 2244 5 view .LVU4396
 19203 00da 2846     		mov	r0, r5
 19204              	.LBB10829:
 19205              	.LBB10819:
 19206              	.LBB10803:
 19207              	.LBB10775:
 19208              	.LBB10750:
 19209              	.LBB10749:
 19210              	.LBB10748:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19211              		.loc 33 337 51 view .LVU4397
 19212 00dc C5E90034 		strd	r3, r4, [r5]
 19213              	.LVL1171:
 19214              	.LBB10747:
 19215              	.LBI10747:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19216              		.loc 37 76 5 is_stmt 1 view .LVU4398
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19217              		.loc 37 76 5 is_stmt 0 view .LVU4399
 19218              	.LBE10747:
 19219              	.LBE10748:
 19220              	.LBE10749:
 19221              	.LBE10750:
 19222              	.LBE10775:
 19223              	.LBE10803:
 19224              	.LBE10819:
 19225              	.LBE10829:
 19226              		.loc 32 2244 5 view .LVU4400
 19227 00e0 03B0     		add	sp, sp, #12
 19228              		.cfi_remember_state
 19229              		.cfi_def_cfa_offset 36
 19230              		@ sp needed
 19231 00e2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19232              	.LVL1172:
 19233              	.L798:
 19234              		.cfi_restore_state
 19235              	.LBB10830:
2207:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	}
 19236              		.loc 32 2207 37 discriminator 4 view .LVU4401
 19237 00e6 2846     		mov	r0, r5
 19238 00e8 3A46     		mov	r2, r7
 19239 00ea 3146     		mov	r1, r6
 19240 00ec FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 19241              	.LVL1173:
 19242              	.LBE10830:
 19243              		.loc 32 2244 5 discriminator 4 view .LVU4402
 19244 00f0 2846     		mov	r0, r5
 19245 00f2 03B0     		add	sp, sp, #12
 19246              		.cfi_remember_state
 19247              		.cfi_def_cfa_offset 36
 19248              		@ sp needed
 19249 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19250              	.LVL1174:
 19251              	.L836:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 736


 19252              		.cfi_restore_state
 19253              	.LBB10831:
 19254              	.LBB10820:
 19255              	.LBB10804:
 19256              	.LBB10776:
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 19257              		.loc 32 2229 22 view .LVU4403
 19258 00f8 3369     		ldr	r3, [r6, #16]
2229:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    return _Res(0, _M_rightmost());
 19259              		.loc 32 2229 4 view .LVU4404
 19260 00fa A342     		cmp	r3, r4
 19261 00fc ECD0     		beq	.L834
 19262              	.LVL1175:
 19263              	.LBB10751:
 19264              	.LBI10751:
 285:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       {
 19265              		.loc 32 285 7 is_stmt 1 view .LVU4405
 19266              	.LBB10752:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 19267              		.loc 32 287 30 is_stmt 0 view .LVU4406
 19268 00fe 2046     		mov	r0, r4
 19269 0100 FFF7FEFF 		bl	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
 19270              	.LVL1176:
 19271 0104 D0F814A0 		ldr	r10, [r0, #20]
 19272 0108 8146     		mov	r9, r0
 19273              	.LVL1177:
 287:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return *this;
 19274              		.loc 32 287 30 view .LVU4407
 19275              	.LBE10752:
 19276              	.LBE10751:
 19277              	.LBB10753:
 19278              	.LBI10753:
 19279              		.loc 40 385 7 is_stmt 1 view .LVU4408
 19280              	.LBB10754:
 19281              	.LBI10754:
 19282              		.loc 18 6277 5 view .LVU4409
 19283              	.LBB10755:
 19284              	.LBB10756:
 19285              	.LBI10756:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19286              		.loc 18 2852 7 view .LVU4410
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19287              		.loc 18 2852 7 is_stmt 0 view .LVU4411
 19288 010a C245     		cmp	r10, r8
 19289 010c 5246     		mov	r2, r10
 19290 010e 28BF     		it	cs
 19291 0110 4246     		movcs	r2, r8
 19292              	.LVL1178:
 19293              	.LBB10757:
 19294              	.LBB10758:
 19295              	.LBI10758:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 19296              		.loc 21 337 7 is_stmt 1 view .LVU4412
 19297              	.LBB10759:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 19298              		.loc 21 339 2 view .LVU4413
 19299 0112 62B1     		cbz	r2, .L812
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 737


 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19300              		.loc 21 347 2 view .LVU4414
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19301              		.loc 21 347 25 is_stmt 0 view .LVU4415
 19302 0114 5846     		mov	r0, fp
 19303              	.LVL1179:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19304              		.loc 21 347 25 view .LVU4416
 19305 0116 D9F81010 		ldr	r1, [r9, #16]
 19306 011a FFF7FEFF 		bl	memcmp
 19307              	.LVL1180:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 19308              		.loc 21 347 25 view .LVU4417
 19309              	.LBE10759:
 19310              	.LBE10758:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 19311              		.loc 18 2859 2 view .LVU4418
 19312 011e 30B1     		cbz	r0, .L812
 19313              	.L813:
 19314              	.LVL1181:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 19315              		.loc 18 2859 2 view .LVU4419
 19316              	.LBE10757:
 19317              	.LBE10756:
 19318              	.LBE10755:
 19319              	.LBE10754:
 19320              	.LBE10753:
2231:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    {
 19321              		.loc 32 2231 9 view .LVU4420
 19322 0120 0028     		cmp	r0, #0
 19323 0122 E0DA     		bge	.L798
 19324              	.LVL1182:
 19325              	.LBB10766:
 19326              	.LBI10766:
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 19327              		.loc 32 797 7 is_stmt 1 view .LVU4421
 797:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 19328              		.loc 32 797 7 is_stmt 0 view .LVU4422
 19329              	.LBE10766:
2233:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 		return _Res(0, __pos._M_node);
 19330              		.loc 32 2233 8 view .LVU4423
 19331 0124 E368     		ldr	r3, [r4, #12]
 19332 0126 2BB1     		cbz	r3, .L838
 19333              	.LVL1183:
 19334              	.LBB10767:
 19335              	.LBI10767:
 352:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 19336              		.loc 33 352 12 is_stmt 1 view .LVU4424
 19337              	.LBB10768:
 19338              	.LBB10769:
 19339              	.LBB10770:
 19340              	.LBI10770:
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19341              		.loc 37 76 5 view .LVU4425
  76:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 19342              		.loc 37 76 5 is_stmt 0 view .LVU4426
 19343              	.LBE10770:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 738


 19344              		.loc 33 353 64 view .LVU4427
 19345 0128 C5E90099 		strd	r9, r9, [r5]
 19346              	.LBE10769:
 19347              		.loc 33 353 68 view .LVU4428
 19348 012c 96E7     		b	.L796
 19349              	.LVL1184:
 19350              	.L812:
 19351              		.loc 33 353 68 view .LVU4429
 19352              	.LBE10768:
 19353              	.LBE10767:
 19354              	.LBB10771:
 19355              	.LBB10765:
 19356              	.LBB10764:
 19357              	.LBB10763:
 19358              	.LBB10762:
 19359              	.LBB10760:
 19360              	.LBI10760:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19361              		.loc 18 401 7 is_stmt 1 view .LVU4430
 19362              	.LBB10761:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19363              		.loc 18 403 51 is_stmt 0 view .LVU4431
 19364 012e A8EB0A00 		sub	r0, r8, r10
 19365              	.LVL1185:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19366              		.loc 18 403 51 view .LVU4432
 19367              	.LBE10761:
 19368              	.LBE10760:
 19369 0132 F5E7     		b	.L813
 19370              	.LVL1186:
 19371              	.L838:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19372              		.loc 18 403 51 view .LVU4433
 19373              	.LBE10762:
 19374              	.LBE10763:
 19375              	.LBE10764:
 19376              	.LBE10765:
 19377              	.LBE10771:
 19378              	.LBB10772:
 19379              	.LBI10772:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 19380              		.loc 33 336 18 is_stmt 1 view .LVU4434
 19381              	.LBB10773:
 19382              	.LBB10774:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19383              		.loc 33 337 51 is_stmt 0 view .LVU4435
 19384 0134 C5E90034 		strd	r3, r4, [r5]
 19385              	.LVL1187:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19386              		.loc 33 337 51 view .LVU4436
 19387 0138 90E7     		b	.L796
 19388              	.LVL1188:
 19389              	.L837:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19390              		.loc 33 337 51 view .LVU4437
 19391              	.LBE10774:
 19392              	.LBE10773:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 739


 19393              	.LBE10772:
 19394              	.LBE10776:
 19395              	.LBE10804:
 19396              	.LBB10805:
 19397              	.LBB10798:
 19398              	.LBI10798:
 336:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 19399              		.loc 33 336 18 is_stmt 1 view .LVU4438
 19400              	.LBB10799:
 19401              	.LBB10800:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19402              		.loc 33 337 51 is_stmt 0 view .LVU4439
 19403 013a C5E90039 		strd	r3, r9, [r5]
 19404              	.LVL1189:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 19405              		.loc 33 337 51 view .LVU4440
 19406 013e 8DE7     		b	.L796
 19407              	.LBE10800:
 19408              	.LBE10799:
 19409              	.LBE10798:
 19410              	.LBE10805:
 19411              	.LBE10820:
 19412              	.LBE10831:
 19413              		.cfi_endproc
 19414              	.LFE5982:
 19416              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 19417              		.align	1
 19418              		.p2align 2,,3
 19419              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 19420              		.syntax unified
 19421              		.thumb
 19422              		.thumb_func
 19423              		.fpu fpv5-d16
 19425              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 19426              	.LVL1190:
 19427              	.LFB5744:
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19428              		.loc 32 1105 2 is_stmt 1 view -0
 19429              		.cfi_startproc
 19430              		@ args = 0, pretend = 0, frame = 24
 19431              		@ frame_needed = 0, uses_anonymous_args = 0
 19432              	.LBB10999:
 19433              	.LBI10999:
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 19434              		.loc 32 542 2 view .LVU4442
 542:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	: _M_t(__t) { }
 19435              		.loc 32 542 2 is_stmt 0 view .LVU4443
 19436              	.LBE10999:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 19437              		.loc 32 1108 19 is_stmt 1 view .LVU4444
 19438 0000 9142     		cmp	r1, r2
 19439 0002 00F09480 		beq	.L872
1105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19440              		.loc 32 1105 2 is_stmt 0 view .LVU4445
 19441 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 19442              		.cfi_def_cfa_offset 36
 19443              		.cfi_offset 4, -36
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 740


 19444              		.cfi_offset 5, -32
 19445              		.cfi_offset 6, -28
 19446              		.cfi_offset 7, -24
 19447              		.cfi_offset 8, -20
 19448              		.cfi_offset 9, -16
 19449              		.cfi_offset 10, -12
 19450              		.cfi_offset 11, -8
 19451              		.cfi_offset 14, -4
 19452 000a 0D46     		mov	r5, r1
 19453 000c 87B0     		sub	sp, sp, #28
 19454              		.cfi_def_cfa_offset 64
 19455 000e 9246     		mov	r10, r2
 19456 0010 8046     		mov	r8, r0
 19457              	.LBB11000:
 19458              	.LBB11001:
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 19459              		.loc 32 1011 16 view .LVU4446
 19460 0012 00F10409 		add	r9, r0, #4
 19461 0016 2AE0     		b	.L854
 19462              	.LVL1191:
 19463              	.L880:
1011:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 19464              		.loc 32 1011 16 view .LVU4447
 19465              	.LBE11001:
 19466              	.LBE11000:
 19467              	.LBB11004:
 19468              	.LBB11005:
 19469              	.LBB11006:
 19470              	.LBB11007:
 19471              	.LBB11008:
 19472              	.LBB11009:
 19473              	.LBB11010:
 19474              	.LBB11011:
 19475              	.LBB11012:
 19476              	.LBB11013:
 19477              	.LBB11014:
 19478              	.LBB11015:
 19479              	.LBB11016:
 19480              	.LBB11017:
 19481              	.LBB11018:
 19482              	.LBB11019:
 19483              	.LBB11020:
 19484              	.LBB11021:
 19485              	.LBB11022:
 19486              	.LBI11022:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 19487              		.loc 26 459 7 is_stmt 1 view .LVU4448
 19488              	.LBB11023:
 19489              	.LBI11023:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 19490              		.loc 20 103 7 view .LVU4449
 19491              	.LBB11024:
 105:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 19492              		.loc 20 105 2 is_stmt 0 view .LVU4450
 19493 0018 484B     		ldr	r3, .L881
 19494 001a 9B45     		cmp	fp, r3
 19495 001c 00F28B80 		bhi	.L875
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 741


 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19496              		.loc 20 115 41 view .LVU4451
 19497 0020 5846     		mov	r0, fp
 19498 0022 FFF7FEFF 		bl	_Znwj
 19499              	.LVL1192:
 19500 0026 0346     		mov	r3, r0
 19501              	.LVL1193:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19502              		.loc 20 115 41 view .LVU4452
 19503              	.LBE11024:
 19504              	.LBE11023:
 19505              	.LBE11022:
 19506              	.LBE11021:
 19507              	.LBE11020:
 19508              	.LBE11019:
 19509              	.LBE11018:
 19510              	.LBE11017:
 19511              	.LBB11055:
 19512              	.LBB11056:
 19513              	.LBB11057:
 979:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 19514              		.loc 39 979 23 view .LVU4453
 19515 0028 D5E9061C 		ldrd	r1, ip, [r5, #24]
 19516              	.LBE11057:
 19517              	.LBE11056:
 19518              	.LBE11055:
 19519              	.LBB11059:
 19520              	.LBB11060:
 19521              	.LBB11061:
 19522              	.LBB11062:
 19523              	.LBB11063:
 19524              	.LBB11064:
 19525              	.LBB11065:
 19526              	.LBB11066:
 19527              	.LBB11067:
 19528              	.LBB11068:
 19529              	.LBB11069:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 19530              		.loc 27 424 34 view .LVU4454
 19531 002c ACEB0102 		sub	r2, ip, r1
 19532              	.L850:
 19533              	.LVL1194:
 424:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 19534              		.loc 27 424 34 view .LVU4455
 19535              	.LBE11069:
 19536              	.LBE11068:
 19537              	.LBE11067:
 19538              	.LBE11066:
 19539              	.LBE11065:
 19540              	.LBE11064:
 19541              	.LBE11063:
 19542              	.LBE11062:
 19543              	.LBE11061:
 19544              	.LBE11060:
 19545              	.LBE11059:
 19546              	.LBB11099:
 19547              	.LBB11039:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 742


 19548              	.LBB11033:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19549              		.loc 24 363 59 view .LVU4456
 19550 0030 03EB0B00 		add	r0, r3, fp
 19551              	.LBE11033:
 19552              	.LBE11039:
 19553              	.LBE11099:
 19554              	.LBB11100:
 19555              	.LBB11096:
 19556              	.LBB11093:
 19557              	.LBB11090:
 19558              	.LBB11087:
 19559              	.LBB11084:
 19560              	.LBB11081:
 19561              	.LBB11078:
 19562              	.LBB11075:
 19563              	.LBB11072:
 19564              	.LBB11070:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 19565              		.loc 27 425 4 view .LVU4457
 19566 0034 8C45     		cmp	ip, r1
 19567              	.LBE11070:
 19568              	.LBE11072:
 19569              	.LBE11075:
 19570              	.LBE11078:
 19571              	.LBE11081:
 19572              	.LBE11084:
 19573              	.LBE11087:
 19574              	.LBE11090:
 19575              	.LBE11093:
 19576              	.LBE11096:
 19577              	.LBE11100:
 19578              	.LBB11101:
 19579              	.LBB11040:
 19580              	.LBB11034:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19581              		.loc 24 363 34 view .LVU4458
 19582 0036 2063     		str	r0, [r4, #48]
 19583              	.LVL1195:
 363:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 19584              		.loc 24 363 34 view .LVU4459
 19585              	.LBE11034:
 19586              	.LBE11040:
 19587              	.LBE11101:
 19588              	.LBB11102:
 19589              	.LBI11102:
 19590              		.loc 19 162 7 is_stmt 1 view .LVU4460
 19591              	.LBB11103:
 19592              	.LBI11103:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19593              		.loc 20 89 7 view .LVU4461
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19594              		.loc 20 89 7 is_stmt 0 view .LVU4462
 19595              	.LBE11103:
 19596              	.LBE11102:
 19597              	.LBB11104:
 19598              	.LBI11104:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 743


 820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 19599              		.loc 24 820 7 is_stmt 1 view .LVU4463
 19600              	.LBB11105:
 19601              	.LBI11105:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19602              		.loc 39 978 7 view .LVU4464
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19603              		.loc 39 978 7 is_stmt 0 view .LVU4465
 19604              	.LBE11105:
 19605              	.LBE11104:
 19606              	.LBB11106:
 19607              	.LBI11055:
 838:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 19608              		.loc 24 838 7 is_stmt 1 view .LVU4466
 19609              	.LBB11058:
 19610              	.LBI11056:
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19611              		.loc 39 978 7 view .LVU4467
 978:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 19612              		.loc 39 978 7 is_stmt 0 view .LVU4468
 19613              	.LBE11058:
 19614              	.LBE11106:
 19615              	.LBB11107:
 19616              	.LBI11107:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 19617              		.loc 24 276 7 is_stmt 1 view .LVU4469
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 19618              		.loc 24 276 7 is_stmt 0 view .LVU4470
 19619              	.LBE11107:
 19620              	.LBB11108:
 19621              	.LBI11059:
 19622              		.loc 28 323 5 is_stmt 1 view .LVU4471
 19623              	.LBB11097:
 19624              	.LBI11060:
 125:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 19625              		.loc 28 125 5 view .LVU4472
 19626              	.LBB11094:
 19627              	.LBB11091:
 19628              	.LBI11062:
 107:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 19629              		.loc 28 107 9 view .LVU4473
 19630              	.LBB11088:
 19631              	.LBI11063:
 19632              		.loc 27 560 5 view .LVU4474
 19633              	.LBB11085:
 19634              	.LBI11064:
 511:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 19635              		.loc 27 511 5 view .LVU4475
 19636              	.LBB11082:
 19637              	.LBI11065:
 505:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 19638              		.loc 27 505 5 view .LVU4476
 19639              	.LBB11079:
 19640              	.LBI11066:
 463:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 19641              		.loc 27 463 5 view .LVU4477
 19642              	.LBB11076:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 744


 19643              	.LBB11073:
 19644              	.LBI11068:
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 19645              		.loc 27 415 2 view .LVU4478
 415:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 19646              		.loc 27 415 2 is_stmt 0 view .LVU4479
 19647              	.LBE11073:
 19648              	.LBE11076:
 19649              	.LBE11079:
 19650              	.LBE11082:
 19651              	.LBE11085:
 19652              	.LBE11088:
 19653              	.LBE11091:
 19654              	.LBE11094:
 19655              	.LBE11097:
 19656              	.LBE11108:
 19657              	.LBB11109:
 19658              	.LBB11041:
 19659              	.LBB11035:
 362:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 19660              		.loc 24 362 26 view .LVU4480
 19661 0038 C4E90A33 		strd	r3, r3, [r4, #40]
 19662              	.LBE11035:
 19663              	.LBE11041:
 19664              	.LBE11109:
 19665              	.LBB11110:
 19666              	.LBB11098:
 19667              	.LBB11095:
 19668              	.LBB11092:
 19669              	.LBB11089:
 19670              	.LBB11086:
 19671              	.LBB11083:
 19672              	.LBB11080:
 19673              	.LBB11077:
 19674              	.LBB11074:
 19675              	.LBB11071:
 425:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 19676              		.loc 27 425 4 view .LVU4481
 19677 003c 05D0     		beq	.L852
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 19678              		.loc 27 426 23 view .LVU4482
 19679 003e 1846     		mov	r0, r3
 19680 0040 0192     		str	r2, [sp, #4]
 19681 0042 FFF7FEFF 		bl	memmove
 19682              	.LVL1196:
 426:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 19683              		.loc 27 426 23 view .LVU4483
 19684 0046 019A     		ldr	r2, [sp, #4]
 19685 0048 0346     		mov	r3, r0
 19686              	.L852:
 19687              	.LVL1197:
 427:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 19688              		.loc 27 427 22 view .LVU4484
 19689 004a 03EB020C 		add	ip, r3, r2
 19690              	.LBE11071:
 19691              	.LBE11074:
 19692              	.LBE11077:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 745


 19693              	.LBE11080:
 19694              	.LBE11083:
 19695              	.LBE11086:
 19696              	.LBE11089:
 19697              	.LBE11092:
 19698              	.LBE11095:
 19699              	.LBE11098:
 19700              	.LBE11110:
 19701              	.LBE11016:
 19702              	.LBE11015:
 19703              	.LBE11014:
 19704              	.LBE11013:
 19705              	.LBE11012:
 19706              	.LBE11011:
 19707              	.LBE11010:
 19708              	.LBE11009:
 19709              	.LBE11008:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 19710              		.loc 32 1818 31 view .LVU4485
 19711 004e 2146     		mov	r1, r4
 19712 0050 4B46     		mov	r3, r9
 19713 0052 3A46     		mov	r2, r7
 19714 0054 3046     		mov	r0, r6
 19715              	.LBB11252:
 19716              	.LBB11247:
 19717              	.LBB11242:
 19718              	.LBB11233:
 19719              	.LBB11226:
 19720              	.LBB11222:
 19721              	.LBB11219:
 19722              	.LBB11125:
 19723              	.LBB11122:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 19724              		.loc 24 557 26 view .LVU4486
 19725 0056 C4F82CC0 		str	ip, [r4, #44]
 19726              	.LVL1198:
 557:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 19727              		.loc 24 557 26 view .LVU4487
 19728              	.LBE11122:
 19729              	.LBE11125:
 19730              	.LBE11219:
 19731              	.LBE11222:
 19732              	.LBE11226:
 19733              	.LBE11233:
 19734              	.LBE11242:
 19735              	.LBE11247:
 19736              	.LBE11252:
1818:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 				      this->_M_impl._M_header);
 19737              		.loc 32 1818 31 view .LVU4488
 19738 005a FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
 19739              	.LVL1199:
1820:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	return iterator(__z);
 19740              		.loc 32 1820 2 view .LVU4489
 19741 005e D8F81430 		ldr	r3, [r8, #20]
 19742 0062 0133     		adds	r3, r3, #1
 19743 0064 C8F81430 		str	r3, [r8, #20]
 19744              	.LVL1200:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 746


 19745              	.LBB11253:
 19746              	.LBI11253:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 19747              		.loc 32 273 7 is_stmt 1 view .LVU4490
 19748              	.L841:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 19749              		.loc 32 273 7 is_stmt 0 view .LVU4491
 19750              	.LBE11253:
 19751              	.LBE11007:
 19752              	.LBE11006:
 19753              	.LBE11005:
 19754              	.LBE11004:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 19755              		.loc 32 1108 4 is_stmt 1 view .LVU4492
 19756 0068 2435     		adds	r5, r5, #36
 19757              	.LVL1201:
1108:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 19758              		.loc 32 1108 19 view .LVU4493
 19759 006a AA45     		cmp	r10, r5
 19760 006c 5CD0     		beq	.L876
 19761              	.LVL1202:
 19762              	.L854:
 19763              	.LBB11279:
 19764              	.LBI11000:
1010:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 19765              		.loc 32 1010 7 view .LVU4494
 19766              	.LBB11003:
 19767              	.LBB11002:
 19768              	.LBI11002:
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 19769              		.loc 32 273 7 view .LVU4495
 273:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__x) { }
 19770              		.loc 32 273 7 is_stmt 0 view .LVU4496
 19771              	.LBE11002:
 19772              	.LBE11003:
 19773              	.LBE11279:
 19774              	.LBB11280:
 19775              	.LBI11280:
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 19776              		.loc 32 350 7 is_stmt 1 view .LVU4497
 350:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_node(__it._M_node) { }
 19777              		.loc 32 350 7 is_stmt 0 view .LVU4498
 19778              	.LBE11280:
 19779              	.LBB11281:
 19780              	.LBI11004:
2245:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2246:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2247:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	   typename _Compare, typename _Alloc>
2248:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2249:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2250:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2251:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     template<typename _NodeGen>
2252:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2253:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2254:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 19781              		.loc 32 2254 7 is_stmt 1 view .LVU4499
 19782              	.LBB11275:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 747


2255:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_unique_(const_iterator __position,
2256:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #if __cplusplus >= 201103L
2257:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_Arg&& __v,
2258:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #else
2259:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			const _Val& __v,
2260:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
2261:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			_NodeGen& __node_gen)
2262:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
2263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2264:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 19783              		.loc 32 2264 33 is_stmt 0 view .LVU4500
 19784 006e 2B46     		mov	r3, r5
 19785 0070 4A46     		mov	r2, r9
 19786 0072 4146     		mov	r1, r8
 19787 0074 04A8     		add	r0, sp, #16
 19788 0076 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 19789              	.LVL1203:
 19790              		.loc 32 2264 33 view .LVU4501
 19791 007a 059F     		ldr	r7, [sp, #20]
 19792              	.LVL1204:
2265:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
2266:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       if (__res.second)
 19793              		.loc 32 2266 7 view .LVU4502
 19794 007c 002F     		cmp	r7, #0
 19795 007e F3D0     		beq	.L841
 19796              	.LVL1205:
 19797              	.LBB11271:
 19798              	.LBI11006:
1803:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 19799              		.loc 32 1803 7 is_stmt 1 view .LVU4503
 19800              	.LBB11267:
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 19801              		.loc 32 1812 33 is_stmt 0 view .LVU4504
 19802 0080 A9EB0706 		sub	r6, r9, r7
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 19803              		.loc 32 1813 10 view .LVU4505
 19804 0084 049B     		ldr	r3, [sp, #16]
1812:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 19805              		.loc 32 1812 33 view .LVU4506
 19806 0086 B6FA86F6 		clz	r6, r6
 19807 008a 7609     		lsrs	r6, r6, #5
 19808 008c 002B     		cmp	r3, #0
 19809 008e 18BF     		it	ne
 19810 0090 46F00106 		orrne	r6, r6, #1
 19811 0094 002E     		cmp	r6, #0
 19812 0096 38D0     		beq	.L877
 19813              	.L842:
 19814              	.LVL1206:
 19815              	.LBB11254:
 19816              	.LBI11008:
 550:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** #endif
 19817              		.loc 32 550 4 is_stmt 1 view .LVU4507
 19818              	.LBB11248:
 19819              	.LBI11009:
 632:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19820              		.loc 32 632 2 view .LVU4508
 19821              	.LBB11243:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 748


 19822              	.LBB11234:
 19823              	.LBI11234:
 583:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 19824              		.loc 32 583 7 view .LVU4509
 19825              	.LBB11235:
 19826              	.LBI11235:
 459:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 19827              		.loc 26 459 7 view .LVU4510
 19828              	.LBB11236:
 19829              	.LBI11236:
 103:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 19830              		.loc 20 103 7 view .LVU4511
 19831              	.LBB11237:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19832              		.loc 20 115 41 is_stmt 0 view .LVU4512
 19833 0098 3420     		movs	r0, #52
 19834 009a FFF7FEFF 		bl	_Znwj
 19835              	.LVL1207:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19836              		.loc 20 115 41 view .LVU4513
 19837 009e 0446     		mov	r4, r0
 19838              	.LVL1208:
 115:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 19839              		.loc 20 115 41 view .LVU4514
 19840              	.LBE11237:
 19841              	.LBE11236:
 19842              	.LBE11235:
 19843              	.LBE11234:
 19844              	.LBB11238:
 19845              	.LBI11011:
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19846              		.loc 32 613 2 is_stmt 1 view .LVU4515
 613:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	{
 19847              		.loc 32 613 2 is_stmt 0 view .LVU4516
 19848              	.LBE11238:
 19849              	.LBE11243:
 19850              	.LBE11248:
 19851              	.LBE11254:
 19852              	.LBE11267:
 19853              	.LBE11271:
 19854              	.LBE11275:
 19855              	.LBE11281:
 19856              		.loc 23 175 3 is_stmt 1 view .LVU4517
 19857              	.LBB11282:
 19858              	.LBB11276:
 19859              	.LBB11272:
 19860              	.LBB11268:
 19861              	.LBB11255:
 19862              	.LBB11249:
 19863              	.LBB11244:
 19864              	.LBB11239:
 19865              	.LBB11227:
 19866              	.LBI11227:
 234:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       { return _M_storage._M_ptr(); }
 19867              		.loc 32 234 7 view .LVU4518
 19868              	.LBB11228:
 19869              	.LBI11228:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 749


 19870              		.file 41 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alig
   1:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
   3:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Copyright (C) 2013-2020 Free Software Foundation, Inc.
   4:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** //
   5:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // any later version.
  10:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  11:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // GNU General Public License for more details.
  15:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  16:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  20:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  25:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****  */
  28:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  29:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  32:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #pragma GCC system_header
  33:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  34:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #if __cplusplus >= 201103L
  35:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <type_traits>
  36:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #else
  37:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** #endif
  39:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  40:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** namespace __gnu_cxx
  41:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** {
  42:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   // complete objects.
  46:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****   template<typename _Tp>
  47:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     struct __aligned_membuf
  48:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****     {
  49:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Since GCC 8 we could just use alignof(_Tp) instead, but older
  53:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // versions of non-GNU compilers might still need this trick.
  54:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  56:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 750


  57:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  58:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf() = default;
  59:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  60:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  61:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  62:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  63:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       void*
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() noexcept
  65:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  66:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  67:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       const void*
  68:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_addr() const noexcept
  69:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  70:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h **** 
  71:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _Tp*
  72:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       _M_ptr() noexcept
 19871              		.loc 41 72 7 view .LVU4519
 19872              	.LBB11229:
 19873              	.LBI11229:
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 19874              		.loc 41 64 7 view .LVU4520
  64:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 19875              		.loc 41 64 7 is_stmt 0 view .LVU4521
 19876              	.LBE11229:
 19877              	.LBE11228:
 19878              	.LBE11227:
 19879              	.LBB11230:
 19880              	.LBI11012:
 507:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 19881              		.loc 26 507 2 is_stmt 1 view .LVU4522
 19882              	.LBB11223:
 19883              	.LBI11013:
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 19884              		.loc 20 148 2 view .LVU4523
 148:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 19885              		.loc 20 148 2 is_stmt 0 view .LVU4524
 19886              	.LBE11223:
 19887              	.LBE11230:
 19888              	.LBE11239:
 19889              	.LBE11244:
 19890              	.LBE11249:
 19891              	.LBE11255:
 19892              	.LBE11268:
 19893              	.LBE11272:
 19894              	.LBE11276:
 19895              	.LBE11282:
 19896              		.loc 23 175 3 is_stmt 1 view .LVU4525
 19897              	.LBB11283:
 19898              	.LBB11277:
 19899              	.LBB11273:
 19900              	.LBB11269:
 19901              	.LBB11256:
 19902              	.LBB11250:
 19903              	.LBB11245:
 19904              	.LBB11240:
 19905              	.LBB11231:
 19906              	.LBB11224:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 751


 19907              	.LBB11220:
 19908              	.LBI11014:
 314:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 19909              		.loc 33 314 17 view .LVU4526
 19910              	.LBB11126:
 19911              	.LBI11126:
 448:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 19912              		.loc 18 448 7 view .LVU4527
 19913              	.LBB11127:
 19914              	.LBB11128:
 19915              	.LBI11128:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 19916              		.loc 18 190 7 view .LVU4528
 19917              	.LBB11129:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 19918              		.loc 18 193 51 is_stmt 0 view .LVU4529
 19919 00a0 1830     		adds	r0, r0, #24
 19920              	.LVL1209:
 193:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 19921              		.loc 18 193 51 view .LVU4530
 19922              	.LBE11129:
 19923              	.LBE11128:
 19924              	.LBB11130:
 19925              	.LBI11130:
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19926              		.loc 18 290 7 is_stmt 1 view .LVU4531
 290:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 19927              		.loc 18 290 7 is_stmt 0 view .LVU4532
 19928              	.LBE11130:
 19929              	.LBB11131:
 19930              	.LBI11131:
 19931              		.loc 38 97 29 is_stmt 1 view .LVU4533
 19932              	.LBB11132:
 19933              	.LBI11132:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 19934              		.loc 26 558 7 view .LVU4534
 19935              	.LBB11133:
 19936              	.LBI11133:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19937              		.loc 19 147 7 view .LVU4535
 19938              	.LBB11134:
 19939              	.LBI11134:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19940              		.loc 20 82 7 view .LVU4536
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19941              		.loc 20 82 7 is_stmt 0 view .LVU4537
 19942              	.LBE11134:
 19943              	.LBE11133:
 19944              	.LBE11132:
 19945              	.LBE11131:
 19946              	.LBB11135:
 19947              	.LBI11135:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 19948              		.loc 18 159 2 is_stmt 1 view .LVU4538
 19949              	.LBB11136:
 19950              	.LBB11137:
 19951              	.LBI11137:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 752


 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19952              		.loc 37 101 5 view .LVU4539
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 19953              		.loc 37 101 5 is_stmt 0 view .LVU4540
 19954              	.LBE11137:
 19955              	.LBB11138:
 19956              	.LBI11138:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19957              		.loc 19 147 7 is_stmt 1 view .LVU4541
 19958              	.LBB11139:
 19959              	.LBI11139:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19960              		.loc 20 82 7 view .LVU4542
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19961              		.loc 20 82 7 is_stmt 0 view .LVU4543
 19962              	.LBE11139:
 19963              	.LBE11138:
 19964              	.LBE11136:
 19965              	.LBE11135:
 19966              	.LBB11141:
 19967              	.LBB11142:
 908:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 19968              		.loc 18 908 16 view .LVU4544
 19969 00a2 D5E900B3 		ldrd	fp, r3, [r5]
 19970              	.LBE11142:
 19971              	.LBE11141:
 19972              	.LBB11143:
 19973              	.LBB11140:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19974              		.loc 18 160 46 view .LVU4545
 19975 00a6 2061     		str	r0, [r4, #16]
 19976              	.LVL1210:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 19977              		.loc 18 160 46 view .LVU4546
 19978              	.LBE11140:
 19979              	.LBE11143:
 19980              	.LBB11144:
 19981              	.LBI11144:
 19982              		.loc 19 162 7 is_stmt 1 view .LVU4547
 19983              	.LBB11145:
 19984              	.LBI11145:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19985              		.loc 20 89 7 view .LVU4548
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 19986              		.loc 20 89 7 is_stmt 0 view .LVU4549
 19987              	.LBE11145:
 19988              	.LBE11144:
 19989              	.LBB11146:
 19990              	.LBI11146:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19991              		.loc 18 186 7 is_stmt 1 view .LVU4550
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19992              		.loc 18 186 7 is_stmt 0 view .LVU4551
 19993              	.LBE11146:
 19994              	.LBB11147:
 19995              	.LBI11147:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 753


 19996              		.loc 18 186 7 is_stmt 1 view .LVU4552
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 19997              		.loc 18 186 7 is_stmt 0 view .LVU4553
 19998              	.LBE11147:
 19999              	.LBB11148:
 20000              	.LBI11141:
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 20001              		.loc 18 907 7 is_stmt 1 view .LVU4554
 907:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 20002              		.loc 18 907 7 is_stmt 0 view .LVU4555
 20003              	.LBE11148:
 20004              	.LBB11149:
 20005              	.LBI11149:
 263:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 20006              		.loc 18 263 9 is_stmt 1 view .LVU4556
 20007              	.LBB11150:
 20008              	.LBB11151:
 20009              	.LBI11151:
 243:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 20010              		.loc 18 243 9 view .LVU4557
 20011              	.LBB11152:
 20012              	.LBB11153:
 20013              	.LBI11153:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 20014              		.loc 22 206 7 view .LVU4558
 20015              	.LBB11154:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 20016              		.loc 22 211 42 is_stmt 0 view .LVU4559
 20017 00a8 1BEB030F 		cmn	fp, r3
 20018 00ac 02D0     		beq	.L845
 20019 00ae BBF1000F 		cmp	fp, #0
 20020 00b2 3DD0     		beq	.L878
 20021              	.L845:
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 20022              		.loc 22 217 2 view .LVU4560
 20023 00b4 0F2B     		cmp	r3, #15
 215:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 20024              		.loc 22 215 12 view .LVU4561
 20025 00b6 0393     		str	r3, [sp, #12]
 217:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 20026              		.loc 22 217 2 view .LVU4562
 20027 00b8 15D8     		bhi	.L879
 20028              	.LVL1211:
 20029              	.LBB11155:
 20030              	.LBI11155:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20031              		.loc 18 186 7 is_stmt 1 view .LVU4563
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20032              		.loc 18 186 7 is_stmt 0 view .LVU4564
 20033              	.LBE11155:
 20034              	.LBB11156:
 20035              	.LBI11156:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20036              		.loc 18 392 7 is_stmt 1 view .LVU4565
 20037              	.LBB11157:
 20038              	.LBI11157:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 754


 20039              		.loc 18 346 7 view .LVU4566
 20040              	.LBB11158:
 348:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 20041              		.loc 18 348 2 is_stmt 0 view .LVU4567
 20042 00ba 012B     		cmp	r3, #1
 20043 00bc 10D1     		bne	.L848
 20044              	.LVL1212:
 20045              	.LBB11159:
 20046              	.LBI11159:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20047              		.loc 21 321 7 is_stmt 1 view .LVU4568
 20048              	.LBB11160:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20049              		.loc 21 322 9 view .LVU4569
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20050              		.loc 21 322 16 is_stmt 0 view .LVU4570
 20051 00be 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20052              		.loc 21 322 14 view .LVU4571
 20053 00c2 2276     		strb	r2, [r4, #24]
 20054              	.LVL1213:
 20055              	.L849:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20056              		.loc 21 322 14 view .LVU4572
 20057              	.LBE11160:
 20058              	.LBE11159:
 20059              	.LBE11158:
 20060              	.LBE11157:
 20061              	.LBE11156:
 20062              	.LBB11176:
 20063              	.LBI11176:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20064              		.loc 18 214 7 is_stmt 1 view .LVU4573
 20065              	.LBB11177:
 20066              	.LBB11178:
 20067              	.LBI11178:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 20068              		.loc 18 182 7 view .LVU4574
 20069              	.LBE11178:
 20070              	.LBB11180:
 20071              	.LBB11181:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20072              		.loc 21 322 14 is_stmt 0 view .LVU4575
 20073 00c4 0022     		movs	r2, #0
 20074              	.LBE11181:
 20075              	.LBE11180:
 20076              	.LBB11183:
 20077              	.LBB11179:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20078              		.loc 18 183 26 view .LVU4576
 20079 00c6 6361     		str	r3, [r4, #20]
 20080              	.LVL1214:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20081              		.loc 18 183 26 view .LVU4577
 20082              	.LBE11179:
 20083              	.LBE11183:
 20084              	.LBB11184:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 755


 20085              	.LBI11184:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20086              		.loc 18 186 7 is_stmt 1 view .LVU4578
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20087              		.loc 18 186 7 is_stmt 0 view .LVU4579
 20088              	.LBE11184:
 20089              	.LBB11186:
 20090              	.LBI11180:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 20091              		.loc 21 321 7 is_stmt 1 view .LVU4580
 20092              	.LBB11182:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20093              		.loc 21 322 9 view .LVU4581
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20094              		.loc 21 322 14 is_stmt 0 view .LVU4582
 20095 00c8 C254     		strb	r2, [r0, r3]
 20096              	.LVL1215:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 20097              		.loc 21 322 14 view .LVU4583
 20098              	.LBE11182:
 20099              	.LBE11186:
 20100              	.LBE11177:
 20101              	.LBE11176:
 20102              	.LBE11154:
 20103              	.LBE11153:
 20104              	.LBE11152:
 20105              	.LBE11151:
 20106              	.LBE11150:
 20107              	.LBE11149:
 20108              	.LBE11127:
 20109              	.LBE11126:
 20110              	.LBB11215:
 20111              	.LBI11015:
 553:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 20112              		.loc 24 553 7 is_stmt 1 view .LVU4584
 20113              	.LBB11123:
 20114              	.LBB11111:
 20115              	.LBI11111:
 918:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 20116              		.loc 24 918 7 view .LVU4585
 20117              	.LBE11111:
 20118              	.LBB11113:
 20119              	.LBB11042:
 20120              	.LBB11043:
 20121              	.LBB11044:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 20122              		.loc 24 98 47 is_stmt 0 view .LVU4586
 20123 00ca 2263     		str	r2, [r4, #48]
 20124              	.LBE11044:
 20125              	.LBE11043:
 20126              	.LBE11042:
 20127              	.LBE11113:
 20128              	.LBB11114:
 20129              	.LBB11112:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20130              		.loc 24 919 66 view .LVU4587
 20131 00cc D5E9061C 		ldrd	r1, ip, [r5, #24]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 756


 20132              	.LVL1216:
 919:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 20133              		.loc 24 919 66 view .LVU4588
 20134              	.LBE11112:
 20135              	.LBE11114:
 20136              	.LBB11115:
 20137              	.LBI11115:
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20138              		.loc 24 280 7 is_stmt 1 view .LVU4589
 280:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 20139              		.loc 24 280 7 is_stmt 0 view .LVU4590
 20140              	.LBE11115:
 20141              	.LBB11116:
 20142              	.LBI11116:
 20143              		.loc 38 97 29 is_stmt 1 view .LVU4591
 20144              	.LBB11117:
 20145              	.LBI11117:
 558:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 20146              		.loc 26 558 7 view .LVU4592
 20147              	.LBB11118:
 20148              	.LBI11118:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20149              		.loc 19 147 7 view .LVU4593
 20150              	.LBB11119:
 20151              	.LBI11119:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20152              		.loc 20 82 7 view .LVU4594
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20153              		.loc 20 82 7 is_stmt 0 view .LVU4595
 20154              	.LBE11119:
 20155              	.LBE11118:
 20156              	.LBE11117:
 20157              	.LBE11116:
 20158              	.LBB11120:
 20159              	.LBI11017:
 303:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 20160              		.loc 24 303 7 is_stmt 1 view .LVU4596
 20161              	.LBB11050:
 20162              	.LBI11042:
 136:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 20163              		.loc 24 136 2 view .LVU4597
 20164              	.LBB11046:
 20165              	.LBI11046:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20166              		.loc 19 147 7 view .LVU4598
 20167              	.LBB11047:
 20168              	.LBI11047:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20169              		.loc 20 82 7 view .LVU4599
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20170              		.loc 20 82 7 is_stmt 0 view .LVU4600
 20171              	.LBE11047:
 20172              	.LBE11046:
 20173              	.LBB11048:
 20174              	.LBI11043:
  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 20175              		.loc 24 97 2 is_stmt 1 view .LVU4601
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 757


  97:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 20176              		.loc 24 97 2 is_stmt 0 view .LVU4602
 20177              	.LBE11048:
 20178              	.LBE11050:
 20179              	.LBB11051:
 20180              	.LBI11018:
 359:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20181              		.loc 24 359 7 is_stmt 1 view .LVU4603
 20182              	.LBB11036:
 20183              	.LBB11030:
 20184              	.LBI11020:
 343:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 20185              		.loc 24 343 7 view .LVU4604
 20186              	.LBE11030:
 20187              	.LBE11036:
 20188              	.LBE11051:
 20189              	.LBB11052:
 20190              	.LBB11049:
 20191              	.LBB11045:
  98:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 20192              		.loc 24 98 47 is_stmt 0 view .LVU4605
 20193 00d0 C4E90A22 		strd	r2, r2, [r4, #40]
 20194              	.LBE11045:
 20195              	.LBE11049:
 20196              	.LBE11052:
 20197              	.LBB11053:
 20198              	.LBB11037:
 20199              	.LBB11031:
 20200              	.LBB11028:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20201              		.loc 24 346 18 view .LVU4606
 20202 00d4 BCEB010B 		subs	fp, ip, r1
 20203              	.LVL1217:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20204              		.loc 24 346 18 view .LVU4607
 20205 00d8 9ED1     		bne	.L880
 20206 00da 5A46     		mov	r2, fp
 20207 00dc 5B46     		mov	r3, fp
 20208 00de A7E7     		b	.L850
 20209              	.LVL1218:
 20210              	.L848:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 20211              		.loc 24 346 18 view .LVU4608
 20212              	.LBE11028:
 20213              	.LBE11031:
 20214              	.LBE11037:
 20215              	.LBE11053:
 20216              	.LBE11120:
 20217              	.LBE11123:
 20218              	.LBE11215:
 20219              	.LBB11216:
 20220              	.LBB11213:
 20221              	.LBB11211:
 20222              	.LBB11209:
 20223              	.LBB11207:
 20224              	.LBB11205:
 20225              	.LBB11203:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 758


 20226              	.LBB11201:
 20227              	.LBB11189:
 20228              	.LBB11173:
 20229              	.LBB11170:
 20230              	.LBB11161:
 20231              	.LBI11161:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20232              		.loc 18 346 7 is_stmt 1 view .LVU4609
 20233              	.LBB11162:
 20234              	.LBI11162:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20235              		.loc 21 387 7 view .LVU4610
 20236              	.LBB11163:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20237              		.loc 21 389 2 view .LVU4611
 20238 00e0 002B     		cmp	r3, #0
 20239 00e2 EFD0     		beq	.L849
 20240 00e4 0AE0     		b	.L847
 20241              	.LVL1219:
 20242              	.L879:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20243              		.loc 21 389 2 is_stmt 0 view .LVU4612
 20244              	.LBE11163:
 20245              	.LBE11162:
 20246              	.LBE11161:
 20247              	.LBE11170:
 20248              	.LBE11173:
 20249              	.LBE11189:
 219:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 20250              		.loc 22 219 13 view .LVU4613
 20251 00e6 0022     		movs	r2, #0
 20252 00e8 03A9     		add	r1, sp, #12
 20253 00ea 04F11000 		add	r0, r4, #16
 20254 00ee 0193     		str	r3, [sp, #4]
 20255 00f0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 20256              	.LVL1220:
 20257              	.LBB11190:
 20258              	.LBI11190:
 178:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 20259              		.loc 18 178 7 is_stmt 1 view .LVU4614
 20260              	.LBE11190:
 20261              	.LBB11192:
 20262              	.LBB11193:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20263              		.loc 18 211 31 is_stmt 0 view .LVU4615
 20264 00f4 039A     		ldr	r2, [sp, #12]
 20265 00f6 019B     		ldr	r3, [sp, #4]
 20266              	.LBE11193:
 20267              	.LBE11192:
 20268              	.LBB11195:
 20269              	.LBB11191:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20270              		.loc 18 179 26 view .LVU4616
 20271 00f8 2061     		str	r0, [r4, #16]
 20272              	.LVL1221:
 179:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20273              		.loc 18 179 26 view .LVU4617
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 759


 20274              	.LBE11191:
 20275              	.LBE11195:
 20276              	.LBB11196:
 20277              	.LBI11192:
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 20278              		.loc 18 210 7 is_stmt 1 view .LVU4618
 20279              	.LBB11194:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20280              		.loc 18 211 31 is_stmt 0 view .LVU4619
 20281 00fa A261     		str	r2, [r4, #24]
 20282              	.LVL1222:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20283              		.loc 18 211 31 view .LVU4620
 20284              	.LBE11194:
 20285              	.LBE11196:
 20286              	.LBB11197:
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20287              		.loc 18 186 7 is_stmt 1 view .LVU4621
 186:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 20288              		.loc 18 186 7 is_stmt 0 view .LVU4622
 20289              	.LBE11197:
 20290              	.LBB11198:
 392:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 20291              		.loc 18 392 7 is_stmt 1 view .LVU4623
 20292              	.LBB11174:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20293              		.loc 18 346 7 view .LVU4624
 20294              	.LBB11171:
 20295              	.LBB11168:
 346:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20296              		.loc 18 346 7 view .LVU4625
 20297              	.LBB11166:
 387:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20298              		.loc 21 387 7 view .LVU4626
 20299              	.LBB11164:
 389:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 20300              		.loc 21 389 2 view .LVU4627
 20301              	.L847:
 20302              		.loc 21 395 2 view .LVU4628
 20303              		.loc 21 395 49 is_stmt 0 view .LVU4629
 20304 00fc 1A46     		mov	r2, r3
 20305 00fe 5946     		mov	r1, fp
 20306 0100 FFF7FEFF 		bl	memcpy
 20307              	.LVL1223:
 20308              		.loc 21 395 49 view .LVU4630
 20309              	.LBE11164:
 20310              	.LBE11166:
 20311              	.LBE11168:
 20312              	.LBE11171:
 20313              	.LBE11174:
 20314              	.LBE11198:
 20315              		.loc 22 232 15 view .LVU4631
 20316 0104 039B     		ldr	r3, [sp, #12]
 20317              	.LBB11199:
 20318              	.LBB11188:
 20319              	.LBB11187:
 20320              	.LBB11185:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 760


 187:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20321              		.loc 18 187 28 view .LVU4632
 20322 0106 2069     		ldr	r0, [r4, #16]
 20323              	.LBE11185:
 20324              	.LBE11187:
 20325              	.LBE11188:
 20326              	.LBE11199:
 20327              	.LBB11200:
 20328              	.LBB11175:
 20329              	.LBB11172:
 20330              	.LBB11169:
 20331              	.LBB11167:
 20332              	.LBB11165:
 20333              		.loc 21 395 66 view .LVU4633
 20334 0108 DCE7     		b	.L849
 20335              	.LVL1224:
 20336              	.L877:
 20337              		.loc 21 395 66 view .LVU4634
 20338              	.LBE11165:
 20339              	.LBE11167:
 20340              	.LBE11169:
 20341              	.LBE11172:
 20342              	.LBE11175:
 20343              	.LBE11200:
 20344              	.LBE11201:
 20345              	.LBE11203:
 20346              	.LBE11205:
 20347              	.LBE11207:
 20348              	.LBE11209:
 20349              	.LBE11211:
 20350              	.LBE11213:
 20351              	.LBE11216:
 20352              	.LBE11220:
 20353              	.LBE11224:
 20354              	.LBE11231:
 20355              	.LBE11240:
 20356              	.LBE11245:
 20357              	.LBE11250:
 20358              	.LBE11256:
 20359              	.LBB11257:
 20360              	.LBI11257:
 20361              		.loc 40 385 7 is_stmt 1 view .LVU4635
 20362              	.LBB11258:
 20363              	.LBI11258:
 20364              		.loc 18 6277 5 view .LVU4636
 20365 010a 6E68     		ldr	r6, [r5, #4]
 20366 010c 7C69     		ldr	r4, [r7, #20]
 20367              	.LBB11259:
 20368              	.LBB11260:
 20369              	.LBI11260:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20370              		.loc 18 2852 7 view .LVU4637
 20371              	.LVL1225:
2852:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20372              		.loc 18 2852 7 is_stmt 0 view .LVU4638
 20373 010e 3246     		mov	r2, r6
 20374 0110 A642     		cmp	r6, r4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 761


 20375 0112 28BF     		it	cs
 20376 0114 2246     		movcs	r2, r4
 20377              	.LVL1226:
 20378              	.LBB11261:
 20379              	.LBB11262:
 20380              	.LBI11262:
 337:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 20381              		.loc 21 337 7 is_stmt 1 view .LVU4639
 20382              	.LBB11263:
 339:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 20383              		.loc 21 339 2 view .LVU4640
 20384 0116 22B1     		cbz	r2, .L843
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 20385              		.loc 21 347 2 view .LVU4641
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 20386              		.loc 21 347 25 is_stmt 0 view .LVU4642
 20387 0118 3969     		ldr	r1, [r7, #16]
 20388 011a 2868     		ldr	r0, [r5]
 20389 011c FFF7FEFF 		bl	memcmp
 20390              	.LVL1227:
 347:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 20391              		.loc 21 347 25 view .LVU4643
 20392              	.LBE11263:
 20393              	.LBE11262:
2859:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
 20394              		.loc 18 2859 2 view .LVU4644
 20395 0120 00B9     		cbnz	r0, .L844
 20396              	.LVL1228:
 20397              	.L843:
 20398              	.LBB11264:
 20399              	.LBI11264:
 401:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 20400              		.loc 18 401 7 is_stmt 1 view .LVU4645
 20401              	.LBB11265:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20402              		.loc 18 403 51 is_stmt 0 view .LVU4646
 20403 0122 301B     		subs	r0, r6, r4
 20404              	.LVL1229:
 20405              	.L844:
 403:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 20406              		.loc 18 403 51 view .LVU4647
 20407              	.LBE11265:
 20408              	.LBE11264:
 20409              	.LBE11261:
 20410              	.LBE11260:
 20411              	.LBE11259:
 20412              	.LBE11258:
 20413              	.LBE11257:
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 20414              		.loc 32 1813 10 view .LVU4648
 20415 0124 C60F     		lsrs	r6, r0, #31
 20416 0126 B7E7     		b	.L842
 20417              	.LVL1230:
 20418              	.L876:
1813:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 							_S_key(__p)));
 20419              		.loc 32 1813 10 view .LVU4649
 20420              	.LBE11269:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 762


 20421              	.LBE11273:
 20422              	.LBE11277:
 20423              	.LBE11283:
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 20424              		.loc 32 1110 2 view .LVU4650
 20425 0128 07B0     		add	sp, sp, #28
 20426              		.cfi_def_cfa_offset 36
 20427              		@ sp needed
 20428 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20429              	.LVL1231:
 20430              	.L872:
 20431              		.cfi_def_cfa_offset 0
 20432              		.cfi_restore 4
 20433              		.cfi_restore 5
 20434              		.cfi_restore 6
 20435              		.cfi_restore 7
 20436              		.cfi_restore 8
 20437              		.cfi_restore 9
 20438              		.cfi_restore 10
 20439              		.cfi_restore 11
 20440              		.cfi_restore 14
1110:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 
 20441              		.loc 32 1110 2 view .LVU4651
 20442 012e 7047     		bx	lr
 20443              	.LVL1232:
 20444              	.L878:
 20445              		.cfi_def_cfa_offset 64
 20446              		.cfi_offset 4, -36
 20447              		.cfi_offset 5, -32
 20448              		.cfi_offset 6, -28
 20449              		.cfi_offset 7, -24
 20450              		.cfi_offset 8, -20
 20451              		.cfi_offset 9, -16
 20452              		.cfi_offset 10, -12
 20453              		.cfi_offset 11, -8
 20454              		.cfi_offset 14, -4
 20455              	.LBB11284:
 20456              	.LBB11278:
 20457              	.LBB11274:
 20458              	.LBB11270:
 20459              	.LBB11266:
 20460              	.LBB11251:
 20461              	.LBB11246:
 20462              	.LBB11241:
 20463              	.LBB11232:
 20464              	.LBB11225:
 20465              	.LBB11221:
 20466              	.LBB11217:
 20467              	.LBB11214:
 20468              	.LBB11212:
 20469              	.LBB11210:
 20470              	.LBB11208:
 20471              	.LBB11206:
 20472              	.LBB11204:
 20473              	.LBB11202:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 20474              		.loc 22 212 28 view .LVU4652
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 763


 20475 0130 0348     		ldr	r0, .L881+4
 20476 0132 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 20477              	.LVL1233:
 20478              	.L875:
 212:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 20479              		.loc 22 212 28 view .LVU4653
 20480              	.LBE11202:
 20481              	.LBE11204:
 20482              	.LBE11206:
 20483              	.LBE11208:
 20484              	.LBE11210:
 20485              	.LBE11212:
 20486              	.LBE11214:
 20487              	.LBE11217:
 20488              	.LBB11218:
 20489              	.LBB11124:
 20490              	.LBB11121:
 20491              	.LBB11054:
 20492              	.LBB11038:
 20493              	.LBB11032:
 20494              	.LBB11029:
 20495              	.LBB11027:
 20496              	.LBB11026:
 20497              	.LBB11025:
 106:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20498              		.loc 20 106 26 view .LVU4654
 20499 0136 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 20500              	.LVL1234:
 20501              	.L882:
 20502 013a 00BF     		.align	2
 20503              	.L881:
 20504 013c FCFFFF7F 		.word	2147483644
 20505 0140 00000000 		.word	.LC23
 20506              	.LBE11025:
 20507              	.LBE11026:
 20508              	.LBE11027:
 20509              	.LBE11029:
 20510              	.LBE11032:
 20511              	.LBE11038:
 20512              	.LBE11054:
 20513              	.LBE11121:
 20514              	.LBE11124:
 20515              	.LBE11218:
 20516              	.LBE11221:
 20517              	.LBE11225:
 20518              	.LBE11232:
 20519              	.LBE11241:
 20520              	.LBE11246:
 20521              	.LBE11251:
 20522              	.LBE11266:
 20523              	.LBE11270:
 20524              	.LBE11274:
 20525              	.LBE11278:
 20526              	.LBE11284:
 20527              		.cfi_endproc
 20528              	.LFE5744:
 20530              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4,"aMS",%progbit
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 764


 20531              		.align	2
 20532              	.LC33:
 20533 0000 4300     		.ascii	"C\000"
 20534 0002 0000     		.align	2
 20535              	.LC34:
 20536 0004 432300   		.ascii	"C#\000"
 20537 0007 00       		.align	2
 20538              	.LC35:
 20539 0008 4400     		.ascii	"D\000"
 20540 000a 0000     		.align	2
 20541              	.LC36:
 20542 000c 442300   		.ascii	"D#\000"
 20543 000f 00       		.align	2
 20544              	.LC37:
 20545 0010 4500     		.ascii	"E\000"
 20546 0012 0000     		.align	2
 20547              	.LC38:
 20548 0014 4600     		.ascii	"F\000"
 20549 0016 0000     		.align	2
 20550              	.LC39:
 20551 0018 462300   		.ascii	"F#\000"
 20552 001b 00       		.align	2
 20553              	.LC40:
 20554 001c 4700     		.ascii	"G\000"
 20555 001e 0000     		.align	2
 20556              	.LC41:
 20557 0020 472300   		.ascii	"G#\000"
 20558 0023 00       		.align	2
 20559              	.LC42:
 20560 0024 4100     		.ascii	"A\000"
 20561 0026 0000     		.align	2
 20562              	.LC43:
 20563 0028 412300   		.ascii	"A#\000"
 20564 002b 00       		.align	2
 20565              	.LC44:
 20566 002c 4200     		.ascii	"B\000"
 20567 002e 0000     		.align	2
 20568              	.LC45:
 20569 0030 433000   		.ascii	"C0\000"
 20570 0033 00       		.align	2
 20571              	.LC46:
 20572 0034 43233000 		.ascii	"C#0\000"
 20573              		.align	2
 20574              	.LC47:
 20575 0038 443000   		.ascii	"D0\000"
 20576 003b 00       		.align	2
 20577              	.LC48:
 20578 003c 44233000 		.ascii	"D#0\000"
 20579              		.align	2
 20580              	.LC49:
 20581 0040 453000   		.ascii	"E0\000"
 20582 0043 00       		.align	2
 20583              	.LC50:
 20584 0044 463000   		.ascii	"F0\000"
 20585 0047 00       		.align	2
 20586              	.LC51:
 20587 0048 46233000 		.ascii	"F#0\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 765


 20588              		.align	2
 20589              	.LC52:
 20590 004c 473000   		.ascii	"G0\000"
 20591 004f 00       		.align	2
 20592              	.LC53:
 20593 0050 47233000 		.ascii	"G#0\000"
 20594              		.align	2
 20595              	.LC54:
 20596 0054 413000   		.ascii	"A0\000"
 20597 0057 00       		.align	2
 20598              	.LC55:
 20599 0058 41233000 		.ascii	"A#0\000"
 20600              		.align	2
 20601              	.LC56:
 20602 005c 423000   		.ascii	"B0\000"
 20603 005f 00       		.align	2
 20604              	.LC57:
 20605 0060 433100   		.ascii	"C1\000"
 20606 0063 00       		.align	2
 20607              	.LC58:
 20608 0064 43233100 		.ascii	"C#1\000"
 20609              		.align	2
 20610              	.LC59:
 20611 0068 443100   		.ascii	"D1\000"
 20612 006b 00       		.align	2
 20613              	.LC60:
 20614 006c 44233100 		.ascii	"D#1\000"
 20615              		.align	2
 20616              	.LC61:
 20617 0070 453100   		.ascii	"E1\000"
 20618 0073 00       		.align	2
 20619              	.LC62:
 20620 0074 463100   		.ascii	"F1\000"
 20621 0077 00       		.align	2
 20622              	.LC63:
 20623 0078 46233100 		.ascii	"F#1\000"
 20624              		.align	2
 20625              	.LC64:
 20626 007c 473100   		.ascii	"G1\000"
 20627 007f 00       		.align	2
 20628              	.LC65:
 20629 0080 47233100 		.ascii	"G#1\000"
 20630              		.align	2
 20631              	.LC66:
 20632 0084 413100   		.ascii	"A1\000"
 20633 0087 00       		.align	2
 20634              	.LC67:
 20635 0088 41233100 		.ascii	"A#1\000"
 20636              		.align	2
 20637              	.LC68:
 20638 008c 423100   		.ascii	"B1\000"
 20639 008f 00       		.align	2
 20640              	.LC69:
 20641 0090 433200   		.ascii	"C2\000"
 20642 0093 00       		.align	2
 20643              	.LC70:
 20644 0094 43233200 		.ascii	"C#2\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 766


 20645              		.align	2
 20646              	.LC71:
 20647 0098 443200   		.ascii	"D2\000"
 20648 009b 00       		.align	2
 20649              	.LC72:
 20650 009c 44233200 		.ascii	"D#2\000"
 20651              		.align	2
 20652              	.LC73:
 20653 00a0 453200   		.ascii	"E2\000"
 20654 00a3 00       		.align	2
 20655              	.LC74:
 20656 00a4 463200   		.ascii	"F2\000"
 20657 00a7 00       		.align	2
 20658              	.LC75:
 20659 00a8 46233200 		.ascii	"F#2\000"
 20660              		.align	2
 20661              	.LC76:
 20662 00ac 473200   		.ascii	"G2\000"
 20663 00af 00       		.align	2
 20664              	.LC77:
 20665 00b0 47233200 		.ascii	"G#2\000"
 20666              		.align	2
 20667              	.LC78:
 20668 00b4 413200   		.ascii	"A2\000"
 20669 00b7 00       		.align	2
 20670              	.LC79:
 20671 00b8 41233200 		.ascii	"A#2\000"
 20672              		.align	2
 20673              	.LC80:
 20674 00bc 423200   		.ascii	"B2\000"
 20675 00bf 00       		.align	2
 20676              	.LC81:
 20677 00c0 433300   		.ascii	"C3\000"
 20678 00c3 00       		.align	2
 20679              	.LC82:
 20680 00c4 43233300 		.ascii	"C#3\000"
 20681              		.align	2
 20682              	.LC83:
 20683 00c8 443300   		.ascii	"D3\000"
 20684 00cb 00       		.align	2
 20685              	.LC84:
 20686 00cc 44233300 		.ascii	"D#3\000"
 20687              		.align	2
 20688              	.LC85:
 20689 00d0 453300   		.ascii	"E3\000"
 20690 00d3 00       		.align	2
 20691              	.LC86:
 20692 00d4 463300   		.ascii	"F3\000"
 20693 00d7 00       		.align	2
 20694              	.LC87:
 20695 00d8 46233300 		.ascii	"F#3\000"
 20696              		.align	2
 20697              	.LC88:
 20698 00dc 473300   		.ascii	"G3\000"
 20699 00df 00       		.align	2
 20700              	.LC89:
 20701 00e0 47233300 		.ascii	"G#3\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 767


 20702              		.align	2
 20703              	.LC90:
 20704 00e4 413300   		.ascii	"A3\000"
 20705 00e7 00       		.align	2
 20706              	.LC91:
 20707 00e8 41233300 		.ascii	"A#3\000"
 20708              		.align	2
 20709              	.LC92:
 20710 00ec 423300   		.ascii	"B3\000"
 20711 00ef 00       		.align	2
 20712              	.LC93:
 20713 00f0 433400   		.ascii	"C4\000"
 20714 00f3 00       		.align	2
 20715              	.LC94:
 20716 00f4 43233400 		.ascii	"C#4\000"
 20717              		.align	2
 20718              	.LC95:
 20719 00f8 443400   		.ascii	"D4\000"
 20720 00fb 00       		.align	2
 20721              	.LC96:
 20722 00fc 44233400 		.ascii	"D#4\000"
 20723              		.align	2
 20724              	.LC97:
 20725 0100 453400   		.ascii	"E4\000"
 20726 0103 00       		.align	2
 20727              	.LC98:
 20728 0104 463400   		.ascii	"F4\000"
 20729 0107 00       		.align	2
 20730              	.LC99:
 20731 0108 46233400 		.ascii	"F#4\000"
 20732              		.align	2
 20733              	.LC100:
 20734 010c 473400   		.ascii	"G4\000"
 20735 010f 00       		.align	2
 20736              	.LC101:
 20737 0110 47233400 		.ascii	"G#4\000"
 20738              		.align	2
 20739              	.LC102:
 20740 0114 413400   		.ascii	"A4\000"
 20741 0117 00       		.align	2
 20742              	.LC103:
 20743 0118 41233400 		.ascii	"A#4\000"
 20744              		.align	2
 20745              	.LC104:
 20746 011c 4D616A6F 		.ascii	"Major\000"
 20746      7200
 20747 0122 0000     		.align	2
 20748              	.LC105:
 20749 0124 4D696E6F 		.ascii	"Minor\000"
 20749      7200
 20750 012a 0000     		.align	2
 20751              	.LC106:
 20752 012c 446F7269 		.ascii	"Dorian\000"
 20752      616E00
 20753 0133 00       		.align	2
 20754              	.LC107:
 20755 0134 50687972 		.ascii	"Phyrgi\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 768


 20755      676900
 20756 013b 00       		.align	2
 20757              	.LC108:
 20758 013c 4C796469 		.ascii	"Lydian\000"
 20758      616E00
 20759 0143 00       		.align	2
 20760              	.LC109:
 20761 0144 4D69786F 		.ascii	"Mixo\000"
 20761      00
 20762 0149 000000   		.align	2
 20763              	.LC110:
 20764 014c 4C6F6372 		.ascii	"Locri\000"
 20764      6900
 20765 0152 0000     		.align	2
 20766              	.LC111:
 20767 0154 54726961 		.ascii	"Triad\000"
 20767      6400
 20768 015a 0000     		.align	2
 20769              	.LC112:
 20770 015c 54726961 		.ascii	"Triad+\000"
 20770      642B00
 20771 0163 00       		.align	2
 20772              	.LC113:
 20773 0164 37746800 		.ascii	"7th\000"
 20774              		.align	2
 20775              	.LC114:
 20776 0168 3774682B 		.ascii	"7th+\000"
 20776      00
 20777 016d 000000   		.align	2
 20778              	.LC115:
 20779 0170 39746800 		.ascii	"9th\000"
 20780              		.align	2
 20781              	.LC116:
 20782 0174 31317468 		.ascii	"11th\000"
 20782      00
 20783 0179 000000   		.align	2
 20784              	.LC117:
 20785 017c 31337468 		.ascii	"13th\000"
 20785      00
 20786 0181 000000   		.align	2
 20787              	.LC118:
 20788 0184 36746800 		.ascii	"6th\000"
 20789              		.align	2
 20790              	.LC119:
 20791 0188 53757332 		.ascii	"Sus2\000"
 20791      00
 20792 018d 000000   		.align	2
 20793              	.LC120:
 20794 0190 53757334 		.ascii	"Sus4\000"
 20794      00
 20795 0195 000000   		.align	2
 20796              	.LC121:
 20797 0198 506F7765 		.ascii	"Power\000"
 20797      7200
 20798 019e 0000     		.align	2
 20799              	.LC122:
 20800 01a0 506F7765 		.ascii	"Power+\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 769


 20800      722B00
 20801 01a7 00       		.align	2
 20802              	.LC123:
 20803 01a8 5368656C 		.ascii	"Shell 1\000"
 20803      6C203100 
 20804              		.align	2
 20805              	.LC124:
 20806 01b0 5368656C 		.ascii	"Shell 2\000"
 20806      6C203200 
 20807              		.align	2
 20808              	.LC125:
 20809 01b8 4E6F6E65 		.ascii	"None\000"
 20809      00
 20810 01bd 000000   		.align	2
 20811              	.LC126:
 20812 01c0 44726F70 		.ascii	"Drop 2\000"
 20812      203200
 20813 01c7 00       		.align	2
 20814              	.LC127:
 20815 01c8 44726F70 		.ascii	"Drop 3\000"
 20815      203300
 20816 01cf 00       		.align	2
 20817              	.LC128:
 20818 01d0 44726F70 		.ascii	"Drop 4\000"
 20818      203400
 20819 01d7 00       		.align	2
 20820              	.LC129:
 20821 01d8 3100     		.ascii	"1\000"
 20822 01da 0000     		.align	2
 20823              	.LC130:
 20824 01dc 3200     		.ascii	"2\000"
 20825 01de 0000     		.align	2
 20826              	.LC131:
 20827 01e0 3400     		.ascii	"4\000"
 20828 01e2 0000     		.align	2
 20829              	.LC132:
 20830 01e4 3800     		.ascii	"8\000"
 20831 01e6 0000     		.align	2
 20832              	.LC133:
 20833 01e8 313600   		.ascii	"16\000"
 20834 01eb 00       		.align	2
 20835              	.LC134:
 20836 01ec 3000     		.ascii	"0\000"
 20837 01ee 0000     		.align	2
 20838              	.LC135:
 20839 01f0 2B3100   		.ascii	"+1\000"
 20840 01f3 00       		.align	2
 20841              	.LC136:
 20842 01f4 2B3200   		.ascii	"+2\000"
 20843 01f7 00       		.align	2
 20844              	.LC137:
 20845 01f8 4E2F4100 		.ascii	"N/A\000"
 20846              		.align	2
 20847              	.LC138:
 20848 01fc 557000   		.ascii	"Up\000"
 20849 01ff 00       		.align	2
 20850              	.LC139:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 770


 20851 0200 446F776E 		.ascii	"Down\000"
 20851      00
 20852 0205 000000   		.align	2
 20853              	.LC140:
 20854 0208 552B4420 		.ascii	"U+D In\000"
 20854      496E00
 20855 020f 00       		.align	2
 20856              	.LC141:
 20857 0210 552B4420 		.ascii	"U+D Ex\000"
 20857      457800
 20858 0217 00       		.align	2
 20859              	.LC142:
 20860 0218 52616E64 		.ascii	"Random\000"
 20860      6F6D00
 20861              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 20862              		.align	1
 20863              		.p2align 2,,3
 20864              		.syntax unified
 20865              		.thumb
 20866              		.thumb_func
 20867              		.fpu fpv5-d16
 20869              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 20870              	.LFB6246:
 20871              		.loc 14 279 1 is_stmt 1 view -0
 20872              		.cfi_startproc
 20873              		@ args = 0, pretend = 0, frame = 1136
 20874              		@ frame_needed = 0, uses_anonymous_args = 0
 20875              	.LVL1235:
 20876              	.LBB12180:
 20877              	.LBI12180:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20878              		.loc 19 144 7 view .LVU4656
 20879              	.LBB12181:
 20880              	.LBI12181:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20881              		.loc 20 79 7 view .LVU4657
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20882              		.loc 20 79 7 is_stmt 0 view .LVU4658
 20883              	.LBE12181:
 20884              	.LBE12180:
 20885              		.loc 14 279 1 view .LVU4659
 20886 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 20887              		.cfi_def_cfa_offset 36
 20888              		.cfi_offset 4, -36
 20889              		.cfi_offset 5, -32
 20890              		.cfi_offset 6, -28
 20891              		.cfi_offset 7, -24
 20892              		.cfi_offset 8, -20
 20893              		.cfi_offset 9, -16
 20894              		.cfi_offset 10, -12
 20895              		.cfi_offset 11, -8
 20896              		.cfi_offset 14, -4
 20897 0004 ADF2744D 		subw	sp, sp, #1140
 20898              		.cfi_def_cfa_offset 1176
 20899              		.file 42 "theory.h"
   1:theory.h      **** /* 
   2:theory.h      ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 771


   3:theory.h      ****  * You may use, distribute and modify this code under the
   4:theory.h      ****  * terms of the GNU AGPLv3 license.
   5:theory.h      ****  * 
   6:theory.h      ****  * You should have received a copy of the GNU AGPLv3 license with
   7:theory.h      ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:theory.h      ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:theory.h      ****  */
  10:theory.h      **** 
  11:theory.h      **** #pragma once
  12:theory.h      **** 
  13:theory.h      **** #include <map>
  14:theory.h      **** #include <vector>
  15:theory.h      **** #include <string>
  16:theory.h      **** 
  17:theory.h      **** namespace jellybeans {
  18:theory.h      **** 
  19:theory.h      ****     // Temporarily moved down from 60 due to dac conversion bug
  20:theory.h      ****     const int MAX_NOTE = 59;// 60;
  21:theory.h      ****     const int MIN_NOTE = 0;
  22:theory.h      **** 
  23:theory.h      ****     // Returns true if the given note is diatonic to the given mode
  24:theory.h      ****     // @param a note's index in semitones from C or C0
  25:theory.h      ****     // @param an element of mu::allModes
  26:theory.h      ****     bool isDiatonic(int, std::string);
  27:theory.h      **** 
  28:theory.h      ****     // If the note exceeds our note range, bring it up/down an octave until it fits
  29:theory.h      ****     // @param the semitone value of a note
  30:theory.h      ****     int quantizeNoteToRange(int);
  31:theory.h      **** 
  32:theory.h      ****     // Note that the indices of these elements also correspond to
  33:theory.h      ****     // their semitone distances from C.
  34:theory.h      ****     const std::vector<std::string> allNotes {
  35:theory.h      ****         "C",
  36:theory.h      ****         "C#",
  37:theory.h      ****         "D",
  38:theory.h      ****         "D#",
  39:theory.h      ****         "E",
  40:theory.h      ****         "F",
  41:theory.h      ****         "F#",
  42:theory.h      ****         "G",
  43:theory.h      ****         "G#",
  44:theory.h      ****         "A",
  45:theory.h      ****         "A#",
  46:theory.h      ****         "B"
  47:theory.h      ****     };
 20900              		.loc 42 47 5 view .LVU4660
 20901 0008 C749     		ldr	r1, .L903
 20902 000a 9EAC     		add	r4, sp, #632
 20903 000c 97AF     		add	r7, sp, #604
 20904 000e E6AE     		add	r6, sp, #920
 20905 0010 2046     		mov	r0, r4
 20906 0012 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20907              	.LVL1236:
 20908              	.LBB12182:
 20909              	.LBI12182:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20910              		.loc 19 144 7 is_stmt 1 view .LVU4661
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 772


 20911              	.LBB12183:
 20912              	.LBI12183:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20913              		.loc 20 79 7 view .LVU4662
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20914              		.loc 20 79 7 is_stmt 0 view .LVU4663
 20915              	.LBE12183:
 20916              	.LBE12182:
 20917              		.loc 42 47 5 view .LVU4664
 20918 0016 C549     		ldr	r1, .L903+4
 20919 0018 A4A8     		add	r0, sp, #656
 20920 001a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20921              	.LVL1237:
 20922              	.LBB12184:
 20923              	.LBI12184:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20924              		.loc 19 144 7 is_stmt 1 view .LVU4665
 20925              	.LBB12185:
 20926              	.LBI12185:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20927              		.loc 20 79 7 view .LVU4666
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20928              		.loc 20 79 7 is_stmt 0 view .LVU4667
 20929              	.LBE12185:
 20930              	.LBE12184:
 20931              		.loc 42 47 5 view .LVU4668
 20932 001e C449     		ldr	r1, .L903+8
 20933 0020 AAA8     		add	r0, sp, #680
 20934 0022 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20935              	.LVL1238:
 20936              	.LBB12186:
 20937              	.LBI12186:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20938              		.loc 19 144 7 is_stmt 1 view .LVU4669
 20939              	.LBB12187:
 20940              	.LBI12187:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20941              		.loc 20 79 7 view .LVU4670
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20942              		.loc 20 79 7 is_stmt 0 view .LVU4671
 20943              	.LBE12187:
 20944              	.LBE12186:
 20945              		.loc 42 47 5 view .LVU4672
 20946 0026 C349     		ldr	r1, .L903+12
 20947 0028 B0A8     		add	r0, sp, #704
 20948 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20949              	.LVL1239:
 20950              	.LBB12188:
 20951              	.LBI12188:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20952              		.loc 19 144 7 is_stmt 1 view .LVU4673
 20953              	.LBB12189:
 20954              	.LBI12189:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20955              		.loc 20 79 7 view .LVU4674
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20956              		.loc 20 79 7 is_stmt 0 view .LVU4675
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 773


 20957              	.LBE12189:
 20958              	.LBE12188:
 20959              		.loc 42 47 5 view .LVU4676
 20960 002e C249     		ldr	r1, .L903+16
 20961 0030 B6A8     		add	r0, sp, #728
 20962 0032 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20963              	.LVL1240:
 20964              	.LBB12190:
 20965              	.LBI12190:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20966              		.loc 19 144 7 is_stmt 1 view .LVU4677
 20967              	.LBB12191:
 20968              	.LBI12191:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20969              		.loc 20 79 7 view .LVU4678
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20970              		.loc 20 79 7 is_stmt 0 view .LVU4679
 20971              	.LBE12191:
 20972              	.LBE12190:
 20973              		.loc 42 47 5 view .LVU4680
 20974 0036 C149     		ldr	r1, .L903+20
 20975 0038 BCA8     		add	r0, sp, #752
 20976 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20977              	.LVL1241:
 20978              	.LBB12192:
 20979              	.LBI12192:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20980              		.loc 19 144 7 is_stmt 1 view .LVU4681
 20981              	.LBB12193:
 20982              	.LBI12193:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20983              		.loc 20 79 7 view .LVU4682
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20984              		.loc 20 79 7 is_stmt 0 view .LVU4683
 20985              	.LBE12193:
 20986              	.LBE12192:
 20987              		.loc 42 47 5 view .LVU4684
 20988 003e C049     		ldr	r1, .L903+24
 20989 0040 C2A8     		add	r0, sp, #776
 20990 0042 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 20991              	.LVL1242:
 20992              	.LBB12194:
 20993              	.LBI12194:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 20994              		.loc 19 144 7 is_stmt 1 view .LVU4685
 20995              	.LBB12195:
 20996              	.LBI12195:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20997              		.loc 20 79 7 view .LVU4686
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 20998              		.loc 20 79 7 is_stmt 0 view .LVU4687
 20999              	.LBE12195:
 21000              	.LBE12194:
 21001              		.loc 42 47 5 view .LVU4688
 21002 0046 BF49     		ldr	r1, .L903+28
 21003 0048 C8A8     		add	r0, sp, #800
 21004 004a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 774


 21005              	.LVL1243:
 21006              	.LBB12196:
 21007              	.LBI12196:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21008              		.loc 19 144 7 is_stmt 1 view .LVU4689
 21009              	.LBB12197:
 21010              	.LBI12197:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21011              		.loc 20 79 7 view .LVU4690
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21012              		.loc 20 79 7 is_stmt 0 view .LVU4691
 21013              	.LBE12197:
 21014              	.LBE12196:
 21015              		.loc 42 47 5 view .LVU4692
 21016 004e BE49     		ldr	r1, .L903+32
 21017 0050 CEA8     		add	r0, sp, #824
 21018 0052 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21019              	.LVL1244:
 21020              	.LBB12198:
 21021              	.LBI12198:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21022              		.loc 19 144 7 is_stmt 1 view .LVU4693
 21023              	.LBB12199:
 21024              	.LBI12199:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21025              		.loc 20 79 7 view .LVU4694
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21026              		.loc 20 79 7 is_stmt 0 view .LVU4695
 21027              	.LBE12199:
 21028              	.LBE12198:
 21029              		.loc 42 47 5 view .LVU4696
 21030 0056 BD49     		ldr	r1, .L903+36
 21031 0058 D4A8     		add	r0, sp, #848
 21032 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21033              	.LVL1245:
 21034              	.LBB12200:
 21035              	.LBI12200:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21036              		.loc 19 144 7 is_stmt 1 view .LVU4697
 21037              	.LBB12201:
 21038              	.LBI12201:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21039              		.loc 20 79 7 view .LVU4698
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21040              		.loc 20 79 7 is_stmt 0 view .LVU4699
 21041              	.LBE12201:
 21042              	.LBE12200:
 21043              		.loc 42 47 5 view .LVU4700
 21044 005e BC49     		ldr	r1, .L903+40
 21045 0060 DAA8     		add	r0, sp, #872
 21046 0062 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21047              	.LVL1246:
 21048              	.LBB12202:
 21049              	.LBI12202:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21050              		.loc 19 144 7 is_stmt 1 view .LVU4701
 21051              	.LBB12203:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 775


 21052              	.LBI12203:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21053              		.loc 20 79 7 view .LVU4702
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21054              		.loc 20 79 7 is_stmt 0 view .LVU4703
 21055              	.LBE12203:
 21056              	.LBE12202:
 21057              		.loc 42 47 5 view .LVU4704
 21058 0066 BB49     		ldr	r1, .L903+44
 21059 0068 E0A8     		add	r0, sp, #896
 21060 006a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21061              	.LVL1247:
 21062 006e 0C23     		movs	r3, #12
 21063 0070 2FAA     		add	r2, sp, #188
 21064 0072 2F94     		str	r4, [sp, #188]
 21065 0074 3093     		str	r3, [sp, #192]
 21066              	.LVL1248:
 21067              	.LBB12204:
 21068              	.LBI12204:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21069              		.loc 19 144 7 is_stmt 1 view .LVU4705
 21070              	.LBB12205:
 21071              	.LBI12205:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21072              		.loc 20 79 7 view .LVU4706
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21073              		.loc 20 79 7 is_stmt 0 view .LVU4707
 21074              	.LBE12205:
 21075              	.LBE12204:
 21076              		.loc 42 47 5 view .LVU4708
 21077 0076 3B46     		mov	r3, r7
 21078 0078 B748     		ldr	r0, .L903+48
 21079 007a 06CA     		ldm	r2, {r1, r2}
 21080 007c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 21081              	.LVL1249:
 21082              	.LBB12206:
 21083              	.LBI12206:
 21084              		.loc 19 162 7 is_stmt 1 view .LVU4709
 21085              	.LBB12207:
 21086              	.LBI12207:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21087              		.loc 20 89 7 view .LVU4710
 21088              	.L884:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21089              		.loc 20 89 7 is_stmt 0 view .LVU4711
 21090              	.LBE12207:
 21091              	.LBE12206:
 21092              		.loc 42 47 5 view .LVU4712
 21093 0080 183E     		subs	r6, r6, #24
 21094              	.LVL1250:
 21095              	.LBB12208:
 21096              	.LBI12208:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 21097              		.loc 18 657 7 is_stmt 1 view .LVU4713
 21098              	.LBB12209:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 21099              		.loc 18 658 19 is_stmt 0 view .LVU4714
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 776


 21100 0082 3046     		mov	r0, r6
 21101 0084 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 21102              	.LVL1251:
 21103              	.LBB12210:
 21104              	.LBI12210:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 21105              		.loc 18 150 14 is_stmt 1 view .LVU4715
 21106              	.LBB12211:
 21107              	.LBI12211:
 21108              		.loc 19 162 7 view .LVU4716
 21109              	.LBB12212:
 21110              	.LBI12212:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21111              		.loc 20 89 7 view .LVU4717
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21112              		.loc 20 89 7 is_stmt 0 view .LVU4718
 21113              	.LBE12212:
 21114              	.LBE12211:
 21115              	.LBE12210:
 21116              	.LBE12209:
 21117              	.LBE12208:
 21118              		.loc 42 47 5 view .LVU4719
 21119 0088 A642     		cmp	r6, r4
 21120 008a F9D1     		bne	.L884
 21121              	.LVL1252:
 21122              	.LBB12213:
 21123              	.LBI12213:
 21124              		.loc 19 162 7 is_stmt 1 view .LVU4720
 21125              	.LBB12214:
 21126              	.LBI12214:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21127              		.loc 20 89 7 view .LVU4721
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21128              		.loc 20 89 7 is_stmt 0 view .LVU4722
 21129              	.LBE12214:
 21130              	.LBE12213:
 21131              	.LBB12215:
 21132              	.LBI12215:
 21133              		.loc 19 162 7 is_stmt 1 view .LVU4723
 21134              	.LBB12216:
 21135              	.LBI12216:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21136              		.loc 20 89 7 view .LVU4724
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21137              		.loc 20 89 7 is_stmt 0 view .LVU4725
 21138              	.LBE12216:
 21139              	.LBE12215:
 21140              	.LBB12217:
 21141              	.LBI12217:
 21142              		.loc 19 162 7 is_stmt 1 view .LVU4726
 21143              	.LBB12218:
 21144              	.LBI12218:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21145              		.loc 20 89 7 view .LVU4727
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21146              		.loc 20 89 7 is_stmt 0 view .LVU4728
 21147              	.LBE12218:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 777


 21148              	.LBE12217:
 21149              	.LBB12219:
 21150              	.LBI12219:
 21151              		.loc 19 162 7 is_stmt 1 view .LVU4729
 21152              	.LBB12220:
 21153              	.LBI12220:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21154              		.loc 20 89 7 view .LVU4730
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21155              		.loc 20 89 7 is_stmt 0 view .LVU4731
 21156              	.LBE12220:
 21157              	.LBE12219:
 21158              	.LBB12221:
 21159              	.LBI12221:
 21160              		.loc 19 162 7 is_stmt 1 view .LVU4732
 21161              	.LBB12222:
 21162              	.LBI12222:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21163              		.loc 20 89 7 view .LVU4733
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21164              		.loc 20 89 7 is_stmt 0 view .LVU4734
 21165              	.LBE12222:
 21166              	.LBE12221:
 21167              	.LBB12223:
 21168              	.LBI12223:
 21169              		.loc 19 162 7 is_stmt 1 view .LVU4735
 21170              	.LBB12224:
 21171              	.LBI12224:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21172              		.loc 20 89 7 view .LVU4736
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21173              		.loc 20 89 7 is_stmt 0 view .LVU4737
 21174              	.LBE12224:
 21175              	.LBE12223:
 21176              	.LBB12225:
 21177              	.LBI12225:
 21178              		.loc 19 162 7 is_stmt 1 view .LVU4738
 21179              	.LBB12226:
 21180              	.LBI12226:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21181              		.loc 20 89 7 view .LVU4739
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21182              		.loc 20 89 7 is_stmt 0 view .LVU4740
 21183              	.LBE12226:
 21184              	.LBE12225:
 21185              	.LBB12227:
 21186              	.LBI12227:
 21187              		.loc 19 162 7 is_stmt 1 view .LVU4741
 21188              	.LBB12228:
 21189              	.LBI12228:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21190              		.loc 20 89 7 view .LVU4742
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21191              		.loc 20 89 7 is_stmt 0 view .LVU4743
 21192              	.LBE12228:
 21193              	.LBE12227:
 21194              	.LBB12229:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 778


 21195              	.LBI12229:
 21196              		.loc 19 162 7 is_stmt 1 view .LVU4744
 21197              	.LBB12230:
 21198              	.LBI12230:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21199              		.loc 20 89 7 view .LVU4745
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21200              		.loc 20 89 7 is_stmt 0 view .LVU4746
 21201              	.LBE12230:
 21202              	.LBE12229:
 21203              	.LBB12231:
 21204              	.LBI12231:
 21205              		.loc 19 162 7 is_stmt 1 view .LVU4747
 21206              	.LBB12232:
 21207              	.LBI12232:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21208              		.loc 20 89 7 view .LVU4748
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21209              		.loc 20 89 7 is_stmt 0 view .LVU4749
 21210              	.LBE12232:
 21211              	.LBE12231:
 21212              	.LBB12233:
 21213              	.LBI12233:
 21214              		.loc 19 162 7 is_stmt 1 view .LVU4750
 21215              	.LBB12234:
 21216              	.LBI12234:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21217              		.loc 20 89 7 view .LVU4751
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21218              		.loc 20 89 7 is_stmt 0 view .LVU4752
 21219              	.LBE12234:
 21220              	.LBE12233:
 21221              	.LBB12235:
 21222              	.LBI12235:
 21223              		.loc 19 162 7 is_stmt 1 view .LVU4753
 21224              	.LBB12236:
 21225              	.LBI12236:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21226              		.loc 20 89 7 view .LVU4754
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21227              		.loc 20 89 7 is_stmt 0 view .LVU4755
 21228              	.LBE12236:
 21229              	.LBE12235:
  48:theory.h      **** 
  49:theory.h      ****     // Note that the indices of these elements also correspond to
  50:theory.h      ****     // their semitone distances from C0.
  51:theory.h      ****     const std::array<std::string, 60> allNotes5Oct {
  52:theory.h      ****         "C0",
  53:theory.h      ****         "C#0",
  54:theory.h      ****         "D0",
  55:theory.h      ****         "D#0",
  56:theory.h      ****         "E0",
  57:theory.h      ****         "F0",
  58:theory.h      ****         "F#0",
  59:theory.h      ****         "G0",
  60:theory.h      ****         "G#0",
  61:theory.h      ****         "A0",
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 779


  62:theory.h      ****         "A#0",
  63:theory.h      ****         "B0",
  64:theory.h      ****         "C1",
  65:theory.h      ****         "C#1",
  66:theory.h      ****         "D1",
  67:theory.h      ****         "D#1",
  68:theory.h      ****         "E1",
  69:theory.h      ****         "F1",
  70:theory.h      ****         "F#1",
  71:theory.h      ****         "G1",
  72:theory.h      ****         "G#1",
  73:theory.h      ****         "A1",
  74:theory.h      ****         "A#1",
  75:theory.h      ****         "B1",
  76:theory.h      ****         "C2",
  77:theory.h      ****         "C#2",
  78:theory.h      ****         "D2",
  79:theory.h      ****         "D#2",
  80:theory.h      ****         "E2",
  81:theory.h      ****         "F2",
  82:theory.h      ****         "F#2",
  83:theory.h      ****         "G2",
  84:theory.h      ****         "G#2",
  85:theory.h      ****         "A2",
  86:theory.h      ****         "A#2",
  87:theory.h      ****         "B2",
  88:theory.h      ****         "C3",
  89:theory.h      ****         "C#3",
  90:theory.h      ****         "D3",
  91:theory.h      ****         "D#3",
  92:theory.h      ****         "E3",
  93:theory.h      ****         "F3",
  94:theory.h      ****         "F#3",
  95:theory.h      ****         "G3",
  96:theory.h      ****         "G#3",
  97:theory.h      ****         "A3",
  98:theory.h      ****         "A#3",
  99:theory.h      ****         "B3",
 100:theory.h      ****         "C4",
 101:theory.h      ****         "C#4",
 102:theory.h      ****         "D4",
 103:theory.h      ****         "D#4",
 104:theory.h      ****         "E4",
 105:theory.h      ****         "F4",
 106:theory.h      ****         "F#4",
 107:theory.h      ****         "G4",
 108:theory.h      ****         "G#4",
 109:theory.h      ****         "A4",
 110:theory.h      ****         "A#4",
 111:theory.h      ****         // Temporarily removed due to dac conversion bug
 112:theory.h      ****         // "B4"
 113:theory.h      ****     };
 21230              		.loc 42 113 5 view .LVU4756
 21231 008c B34D     		ldr	r5, .L903+52
  34:theory.h      ****         "C",
 21232              		.loc 42 34 36 view .LVU4757
 21233 008e B44A     		ldr	r2, .L903+56
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 780


 21234 0090 B449     		ldr	r1, .L903+60
 21235 0092 B148     		ldr	r0, .L903+48
 21236 0094 FFF7FEFF 		bl	__aeabi_atexit
 21237              	.LVL1253:
 21238              	.LBB12237:
 21239              	.LBI12237:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21240              		.loc 19 144 7 is_stmt 1 view .LVU4758
 21241              	.LBB12238:
 21242              	.LBI12238:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21243              		.loc 20 79 7 view .LVU4759
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21244              		.loc 20 79 7 is_stmt 0 view .LVU4760
 21245              	.LBE12238:
 21246              	.LBE12237:
 21247              		.loc 42 113 5 view .LVU4761
 21248 0098 2846     		mov	r0, r5
 21249 009a B349     		ldr	r1, .L903+64
 21250 009c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21251              	.LVL1254:
 21252              	.LBB12239:
 21253              	.LBI12239:
 21254              		.loc 19 162 7 is_stmt 1 view .LVU4762
 21255              	.LBB12240:
 21256              	.LBI12240:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21257              		.loc 20 89 7 view .LVU4763
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21258              		.loc 20 89 7 is_stmt 0 view .LVU4764
 21259              	.LBE12240:
 21260              	.LBE12239:
 21261              	.LBB12241:
 21262              	.LBI12241:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21263              		.loc 19 144 7 is_stmt 1 view .LVU4765
 21264              	.LBB12242:
 21265              	.LBI12242:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21266              		.loc 20 79 7 view .LVU4766
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21267              		.loc 20 79 7 is_stmt 0 view .LVU4767
 21268              	.LBE12242:
 21269              	.LBE12241:
 21270              		.loc 42 113 5 view .LVU4768
 21271 00a0 05F11800 		add	r0, r5, #24
 21272 00a4 B149     		ldr	r1, .L903+68
 21273 00a6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21274              	.LVL1255:
 21275              	.LBB12243:
 21276              	.LBI12243:
 21277              		.loc 19 162 7 is_stmt 1 view .LVU4769
 21278              	.LBB12244:
 21279              	.LBI12244:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21280              		.loc 20 89 7 view .LVU4770
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 781


 21281              		.loc 20 89 7 is_stmt 0 view .LVU4771
 21282              	.LBE12244:
 21283              	.LBE12243:
 21284              	.LBB12245:
 21285              	.LBI12245:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21286              		.loc 19 144 7 is_stmt 1 view .LVU4772
 21287              	.LBB12246:
 21288              	.LBI12246:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21289              		.loc 20 79 7 view .LVU4773
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21290              		.loc 20 79 7 is_stmt 0 view .LVU4774
 21291              	.LBE12246:
 21292              	.LBE12245:
 21293              		.loc 42 113 5 view .LVU4775
 21294 00aa 05F13000 		add	r0, r5, #48
 21295 00ae B049     		ldr	r1, .L903+72
 21296 00b0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21297              	.LVL1256:
 21298              	.LBB12247:
 21299              	.LBI12247:
 21300              		.loc 19 162 7 is_stmt 1 view .LVU4776
 21301              	.LBB12248:
 21302              	.LBI12248:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21303              		.loc 20 89 7 view .LVU4777
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21304              		.loc 20 89 7 is_stmt 0 view .LVU4778
 21305              	.LBE12248:
 21306              	.LBE12247:
 21307              	.LBB12249:
 21308              	.LBI12249:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21309              		.loc 19 144 7 is_stmt 1 view .LVU4779
 21310              	.LBB12250:
 21311              	.LBI12250:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21312              		.loc 20 79 7 view .LVU4780
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21313              		.loc 20 79 7 is_stmt 0 view .LVU4781
 21314              	.LBE12250:
 21315              	.LBE12249:
 21316              		.loc 42 113 5 view .LVU4782
 21317 00b4 05F14800 		add	r0, r5, #72
 21318 00b8 AE49     		ldr	r1, .L903+76
 21319 00ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21320              	.LVL1257:
 21321              	.LBB12251:
 21322              	.LBI12251:
 21323              		.loc 19 162 7 is_stmt 1 view .LVU4783
 21324              	.LBB12252:
 21325              	.LBI12252:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21326              		.loc 20 89 7 view .LVU4784
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21327              		.loc 20 89 7 is_stmt 0 view .LVU4785
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 782


 21328              	.LBE12252:
 21329              	.LBE12251:
 21330              	.LBB12253:
 21331              	.LBI12253:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21332              		.loc 19 144 7 is_stmt 1 view .LVU4786
 21333              	.LBB12254:
 21334              	.LBI12254:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21335              		.loc 20 79 7 view .LVU4787
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21336              		.loc 20 79 7 is_stmt 0 view .LVU4788
 21337              	.LBE12254:
 21338              	.LBE12253:
 21339              		.loc 42 113 5 view .LVU4789
 21340 00be 05F16000 		add	r0, r5, #96
 21341 00c2 AD49     		ldr	r1, .L903+80
 21342 00c4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21343              	.LVL1258:
 21344              	.LBB12255:
 21345              	.LBI12255:
 21346              		.loc 19 162 7 is_stmt 1 view .LVU4790
 21347              	.LBB12256:
 21348              	.LBI12256:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21349              		.loc 20 89 7 view .LVU4791
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21350              		.loc 20 89 7 is_stmt 0 view .LVU4792
 21351              	.LBE12256:
 21352              	.LBE12255:
 21353              	.LBB12257:
 21354              	.LBI12257:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21355              		.loc 19 144 7 is_stmt 1 view .LVU4793
 21356              	.LBB12258:
 21357              	.LBI12258:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21358              		.loc 20 79 7 view .LVU4794
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21359              		.loc 20 79 7 is_stmt 0 view .LVU4795
 21360              	.LBE12258:
 21361              	.LBE12257:
 21362              		.loc 42 113 5 view .LVU4796
 21363 00c8 05F17800 		add	r0, r5, #120
 21364 00cc AB49     		ldr	r1, .L903+84
 21365 00ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21366              	.LVL1259:
 21367              	.LBB12259:
 21368              	.LBI12259:
 21369              		.loc 19 162 7 is_stmt 1 view .LVU4797
 21370              	.LBB12260:
 21371              	.LBI12260:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21372              		.loc 20 89 7 view .LVU4798
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21373              		.loc 20 89 7 is_stmt 0 view .LVU4799
 21374              	.LBE12260:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 783


 21375              	.LBE12259:
 21376              	.LBB12261:
 21377              	.LBI12261:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21378              		.loc 19 144 7 is_stmt 1 view .LVU4800
 21379              	.LBB12262:
 21380              	.LBI12262:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21381              		.loc 20 79 7 view .LVU4801
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21382              		.loc 20 79 7 is_stmt 0 view .LVU4802
 21383              	.LBE12262:
 21384              	.LBE12261:
 21385              		.loc 42 113 5 view .LVU4803
 21386 00d2 05F19000 		add	r0, r5, #144
 21387 00d6 AA49     		ldr	r1, .L903+88
 21388 00d8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21389              	.LVL1260:
 21390              	.LBB12263:
 21391              	.LBI12263:
 21392              		.loc 19 162 7 is_stmt 1 view .LVU4804
 21393              	.LBB12264:
 21394              	.LBI12264:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21395              		.loc 20 89 7 view .LVU4805
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21396              		.loc 20 89 7 is_stmt 0 view .LVU4806
 21397              	.LBE12264:
 21398              	.LBE12263:
 21399              	.LBB12265:
 21400              	.LBI12265:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21401              		.loc 19 144 7 is_stmt 1 view .LVU4807
 21402              	.LBB12266:
 21403              	.LBI12266:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21404              		.loc 20 79 7 view .LVU4808
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21405              		.loc 20 79 7 is_stmt 0 view .LVU4809
 21406              	.LBE12266:
 21407              	.LBE12265:
 21408              		.loc 42 113 5 view .LVU4810
 21409 00dc 05F1A800 		add	r0, r5, #168
 21410 00e0 A849     		ldr	r1, .L903+92
 21411 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21412              	.LVL1261:
 21413              	.LBB12267:
 21414              	.LBI12267:
 21415              		.loc 19 162 7 is_stmt 1 view .LVU4811
 21416              	.LBB12268:
 21417              	.LBI12268:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21418              		.loc 20 89 7 view .LVU4812
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21419              		.loc 20 89 7 is_stmt 0 view .LVU4813
 21420              	.LBE12268:
 21421              	.LBE12267:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 784


 21422              	.LBB12269:
 21423              	.LBI12269:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21424              		.loc 19 144 7 is_stmt 1 view .LVU4814
 21425              	.LBB12270:
 21426              	.LBI12270:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21427              		.loc 20 79 7 view .LVU4815
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21428              		.loc 20 79 7 is_stmt 0 view .LVU4816
 21429              	.LBE12270:
 21430              	.LBE12269:
 21431              		.loc 42 113 5 view .LVU4817
 21432 00e6 05F1C000 		add	r0, r5, #192
 21433 00ea A749     		ldr	r1, .L903+96
 21434 00ec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21435              	.LVL1262:
 21436              	.LBB12271:
 21437              	.LBI12271:
 21438              		.loc 19 162 7 is_stmt 1 view .LVU4818
 21439              	.LBB12272:
 21440              	.LBI12272:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21441              		.loc 20 89 7 view .LVU4819
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21442              		.loc 20 89 7 is_stmt 0 view .LVU4820
 21443              	.LBE12272:
 21444              	.LBE12271:
 21445              	.LBB12273:
 21446              	.LBI12273:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21447              		.loc 19 144 7 is_stmt 1 view .LVU4821
 21448              	.LBB12274:
 21449              	.LBI12274:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21450              		.loc 20 79 7 view .LVU4822
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21451              		.loc 20 79 7 is_stmt 0 view .LVU4823
 21452              	.LBE12274:
 21453              	.LBE12273:
 21454              		.loc 42 113 5 view .LVU4824
 21455 00f0 05F1D800 		add	r0, r5, #216
 21456 00f4 A549     		ldr	r1, .L903+100
 21457 00f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21458              	.LVL1263:
 21459              	.LBB12275:
 21460              	.LBI12275:
 21461              		.loc 19 162 7 is_stmt 1 view .LVU4825
 21462              	.LBB12276:
 21463              	.LBI12276:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21464              		.loc 20 89 7 view .LVU4826
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21465              		.loc 20 89 7 is_stmt 0 view .LVU4827
 21466              	.LBE12276:
 21467              	.LBE12275:
 21468              	.LBB12277:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 785


 21469              	.LBI12277:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21470              		.loc 19 144 7 is_stmt 1 view .LVU4828
 21471              	.LBB12278:
 21472              	.LBI12278:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21473              		.loc 20 79 7 view .LVU4829
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21474              		.loc 20 79 7 is_stmt 0 view .LVU4830
 21475              	.LBE12278:
 21476              	.LBE12277:
 21477              		.loc 42 113 5 view .LVU4831
 21478 00fa 05F1F000 		add	r0, r5, #240
 21479 00fe A449     		ldr	r1, .L903+104
 21480 0100 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21481              	.LVL1264:
 21482              	.LBB12279:
 21483              	.LBI12279:
 21484              		.loc 19 162 7 is_stmt 1 view .LVU4832
 21485              	.LBB12280:
 21486              	.LBI12280:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21487              		.loc 20 89 7 view .LVU4833
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21488              		.loc 20 89 7 is_stmt 0 view .LVU4834
 21489              	.LBE12280:
 21490              	.LBE12279:
 21491              	.LBB12281:
 21492              	.LBI12281:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21493              		.loc 19 144 7 is_stmt 1 view .LVU4835
 21494              	.LBB12282:
 21495              	.LBI12282:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21496              		.loc 20 79 7 view .LVU4836
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21497              		.loc 20 79 7 is_stmt 0 view .LVU4837
 21498              	.LBE12282:
 21499              	.LBE12281:
 21500              		.loc 42 113 5 view .LVU4838
 21501 0104 05F58470 		add	r0, r5, #264
 21502 0108 A249     		ldr	r1, .L903+108
 21503 010a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21504              	.LVL1265:
 21505              	.LBB12283:
 21506              	.LBI12283:
 21507              		.loc 19 162 7 is_stmt 1 view .LVU4839
 21508              	.LBB12284:
 21509              	.LBI12284:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21510              		.loc 20 89 7 view .LVU4840
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21511              		.loc 20 89 7 is_stmt 0 view .LVU4841
 21512              	.LBE12284:
 21513              	.LBE12283:
 21514              	.LBB12285:
 21515              	.LBI12285:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 786


 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21516              		.loc 19 144 7 is_stmt 1 view .LVU4842
 21517              	.LBB12286:
 21518              	.LBI12286:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21519              		.loc 20 79 7 view .LVU4843
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21520              		.loc 20 79 7 is_stmt 0 view .LVU4844
 21521              	.LBE12286:
 21522              	.LBE12285:
 21523              		.loc 42 113 5 view .LVU4845
 21524 010e 05F59070 		add	r0, r5, #288
 21525 0112 A149     		ldr	r1, .L903+112
 21526 0114 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21527              	.LVL1266:
 21528              	.LBB12287:
 21529              	.LBI12287:
 21530              		.loc 19 162 7 is_stmt 1 view .LVU4846
 21531              	.LBB12288:
 21532              	.LBI12288:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21533              		.loc 20 89 7 view .LVU4847
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21534              		.loc 20 89 7 is_stmt 0 view .LVU4848
 21535              	.LBE12288:
 21536              	.LBE12287:
 21537              	.LBB12289:
 21538              	.LBI12289:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21539              		.loc 19 144 7 is_stmt 1 view .LVU4849
 21540              	.LBB12290:
 21541              	.LBI12290:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21542              		.loc 20 79 7 view .LVU4850
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21543              		.loc 20 79 7 is_stmt 0 view .LVU4851
 21544              	.LBE12290:
 21545              	.LBE12289:
 21546              		.loc 42 113 5 view .LVU4852
 21547 0118 05F59C70 		add	r0, r5, #312
 21548 011c 9F49     		ldr	r1, .L903+116
 21549 011e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21550              	.LVL1267:
 21551              	.LBB12291:
 21552              	.LBI12291:
 21553              		.loc 19 162 7 is_stmt 1 view .LVU4853
 21554              	.LBB12292:
 21555              	.LBI12292:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21556              		.loc 20 89 7 view .LVU4854
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21557              		.loc 20 89 7 is_stmt 0 view .LVU4855
 21558              	.LBE12292:
 21559              	.LBE12291:
 21560              	.LBB12293:
 21561              	.LBI12293:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 787


 21562              		.loc 19 144 7 is_stmt 1 view .LVU4856
 21563              	.LBB12294:
 21564              	.LBI12294:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21565              		.loc 20 79 7 view .LVU4857
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21566              		.loc 20 79 7 is_stmt 0 view .LVU4858
 21567              	.LBE12294:
 21568              	.LBE12293:
 21569              		.loc 42 113 5 view .LVU4859
 21570 0122 05F5A870 		add	r0, r5, #336
 21571 0126 9E49     		ldr	r1, .L903+120
 21572 0128 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21573              	.LVL1268:
 21574              	.LBB12295:
 21575              	.LBI12295:
 21576              		.loc 19 162 7 is_stmt 1 view .LVU4860
 21577              	.LBB12296:
 21578              	.LBI12296:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21579              		.loc 20 89 7 view .LVU4861
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21580              		.loc 20 89 7 is_stmt 0 view .LVU4862
 21581              	.LBE12296:
 21582              	.LBE12295:
 21583              	.LBB12297:
 21584              	.LBI12297:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21585              		.loc 19 144 7 is_stmt 1 view .LVU4863
 21586              	.LBB12298:
 21587              	.LBI12298:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21588              		.loc 20 79 7 view .LVU4864
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21589              		.loc 20 79 7 is_stmt 0 view .LVU4865
 21590              	.LBE12298:
 21591              	.LBE12297:
 21592              		.loc 42 113 5 view .LVU4866
 21593 012c 05F5B470 		add	r0, r5, #360
 21594 0130 9C49     		ldr	r1, .L903+124
 21595 0132 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21596              	.LVL1269:
 21597              	.LBB12299:
 21598              	.LBI12299:
 21599              		.loc 19 162 7 is_stmt 1 view .LVU4867
 21600              	.LBB12300:
 21601              	.LBI12300:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21602              		.loc 20 89 7 view .LVU4868
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21603              		.loc 20 89 7 is_stmt 0 view .LVU4869
 21604              	.LBE12300:
 21605              	.LBE12299:
 21606              	.LBB12301:
 21607              	.LBI12301:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21608              		.loc 19 144 7 is_stmt 1 view .LVU4870
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 788


 21609              	.LBB12302:
 21610              	.LBI12302:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21611              		.loc 20 79 7 view .LVU4871
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21612              		.loc 20 79 7 is_stmt 0 view .LVU4872
 21613              	.LBE12302:
 21614              	.LBE12301:
 21615              		.loc 42 113 5 view .LVU4873
 21616 0136 05F5C070 		add	r0, r5, #384
 21617 013a 9B49     		ldr	r1, .L903+128
 21618 013c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21619              	.LVL1270:
 21620              	.LBB12303:
 21621              	.LBI12303:
 21622              		.loc 19 162 7 is_stmt 1 view .LVU4874
 21623              	.LBB12304:
 21624              	.LBI12304:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21625              		.loc 20 89 7 view .LVU4875
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21626              		.loc 20 89 7 is_stmt 0 view .LVU4876
 21627              	.LBE12304:
 21628              	.LBE12303:
 21629              	.LBB12305:
 21630              	.LBI12305:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21631              		.loc 19 144 7 is_stmt 1 view .LVU4877
 21632              	.LBB12306:
 21633              	.LBI12306:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21634              		.loc 20 79 7 view .LVU4878
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21635              		.loc 20 79 7 is_stmt 0 view .LVU4879
 21636              	.LBE12306:
 21637              	.LBE12305:
 21638              		.loc 42 113 5 view .LVU4880
 21639 0140 05F5CC70 		add	r0, r5, #408
 21640 0144 9949     		ldr	r1, .L903+132
 21641 0146 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21642              	.LVL1271:
 21643              	.LBB12307:
 21644              	.LBI12307:
 21645              		.loc 19 162 7 is_stmt 1 view .LVU4881
 21646              	.LBB12308:
 21647              	.LBI12308:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21648              		.loc 20 89 7 view .LVU4882
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21649              		.loc 20 89 7 is_stmt 0 view .LVU4883
 21650              	.LBE12308:
 21651              	.LBE12307:
 21652              	.LBB12309:
 21653              	.LBI12309:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21654              		.loc 19 144 7 is_stmt 1 view .LVU4884
 21655              	.LBB12310:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 789


 21656              	.LBI12310:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21657              		.loc 20 79 7 view .LVU4885
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21658              		.loc 20 79 7 is_stmt 0 view .LVU4886
 21659              	.LBE12310:
 21660              	.LBE12309:
 21661              		.loc 42 113 5 view .LVU4887
 21662 014a 05F5D870 		add	r0, r5, #432
 21663 014e 9849     		ldr	r1, .L903+136
 21664 0150 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21665              	.LVL1272:
 21666              	.LBB12311:
 21667              	.LBI12311:
 21668              		.loc 19 162 7 is_stmt 1 view .LVU4888
 21669              	.LBB12312:
 21670              	.LBI12312:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21671              		.loc 20 89 7 view .LVU4889
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21672              		.loc 20 89 7 is_stmt 0 view .LVU4890
 21673              	.LBE12312:
 21674              	.LBE12311:
 21675              	.LBB12313:
 21676              	.LBI12313:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21677              		.loc 19 144 7 is_stmt 1 view .LVU4891
 21678              	.LBB12314:
 21679              	.LBI12314:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21680              		.loc 20 79 7 view .LVU4892
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21681              		.loc 20 79 7 is_stmt 0 view .LVU4893
 21682              	.LBE12314:
 21683              	.LBE12313:
 21684              		.loc 42 113 5 view .LVU4894
 21685 0154 05F5E470 		add	r0, r5, #456
 21686 0158 9649     		ldr	r1, .L903+140
 21687 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21688              	.LVL1273:
 21689              	.LBB12315:
 21690              	.LBI12315:
 21691              		.loc 19 162 7 is_stmt 1 view .LVU4895
 21692              	.LBB12316:
 21693              	.LBI12316:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21694              		.loc 20 89 7 view .LVU4896
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21695              		.loc 20 89 7 is_stmt 0 view .LVU4897
 21696              	.LBE12316:
 21697              	.LBE12315:
 21698              	.LBB12317:
 21699              	.LBI12317:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21700              		.loc 19 144 7 is_stmt 1 view .LVU4898
 21701              	.LBB12318:
 21702              	.LBI12318:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 790


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21703              		.loc 20 79 7 view .LVU4899
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21704              		.loc 20 79 7 is_stmt 0 view .LVU4900
 21705              	.LBE12318:
 21706              	.LBE12317:
 21707              		.loc 42 113 5 view .LVU4901
 21708 015e 05F5F070 		add	r0, r5, #480
 21709 0162 9549     		ldr	r1, .L903+144
 21710 0164 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21711              	.LVL1274:
 21712              	.LBB12319:
 21713              	.LBI12319:
 21714              		.loc 19 162 7 is_stmt 1 view .LVU4902
 21715              	.LBB12320:
 21716              	.LBI12320:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21717              		.loc 20 89 7 view .LVU4903
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21718              		.loc 20 89 7 is_stmt 0 view .LVU4904
 21719              	.LBE12320:
 21720              	.LBE12319:
 21721              	.LBB12321:
 21722              	.LBI12321:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21723              		.loc 19 144 7 is_stmt 1 view .LVU4905
 21724              	.LBB12322:
 21725              	.LBI12322:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21726              		.loc 20 79 7 view .LVU4906
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21727              		.loc 20 79 7 is_stmt 0 view .LVU4907
 21728              	.LBE12322:
 21729              	.LBE12321:
 21730              		.loc 42 113 5 view .LVU4908
 21731 0168 05F5FC70 		add	r0, r5, #504
 21732 016c 9349     		ldr	r1, .L903+148
 21733 016e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21734              	.LVL1275:
 21735              	.LBB12323:
 21736              	.LBI12323:
 21737              		.loc 19 162 7 is_stmt 1 view .LVU4909
 21738              	.LBB12324:
 21739              	.LBI12324:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21740              		.loc 20 89 7 view .LVU4910
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21741              		.loc 20 89 7 is_stmt 0 view .LVU4911
 21742              	.LBE12324:
 21743              	.LBE12323:
 21744              	.LBB12325:
 21745              	.LBI12325:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21746              		.loc 19 144 7 is_stmt 1 view .LVU4912
 21747              	.LBB12326:
 21748              	.LBI12326:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 791


 21749              		.loc 20 79 7 view .LVU4913
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21750              		.loc 20 79 7 is_stmt 0 view .LVU4914
 21751              	.LBE12326:
 21752              	.LBE12325:
 21753              		.loc 42 113 5 view .LVU4915
 21754 0172 05F50470 		add	r0, r5, #528
 21755 0176 9249     		ldr	r1, .L903+152
 21756 0178 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21757              	.LVL1276:
 21758              	.LBB12327:
 21759              	.LBI12327:
 21760              		.loc 19 162 7 is_stmt 1 view .LVU4916
 21761              	.LBB12328:
 21762              	.LBI12328:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21763              		.loc 20 89 7 view .LVU4917
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21764              		.loc 20 89 7 is_stmt 0 view .LVU4918
 21765              	.LBE12328:
 21766              	.LBE12327:
 21767              	.LBB12329:
 21768              	.LBI12329:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21769              		.loc 19 144 7 is_stmt 1 view .LVU4919
 21770              	.LBB12330:
 21771              	.LBI12330:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21772              		.loc 20 79 7 view .LVU4920
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21773              		.loc 20 79 7 is_stmt 0 view .LVU4921
 21774              	.LBE12330:
 21775              	.LBE12329:
 21776              		.loc 42 113 5 view .LVU4922
 21777 017c 05F50A70 		add	r0, r5, #552
 21778 0180 9049     		ldr	r1, .L903+156
 21779 0182 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21780              	.LVL1277:
 21781              	.LBB12331:
 21782              	.LBI12331:
 21783              		.loc 19 162 7 is_stmt 1 view .LVU4923
 21784              	.LBB12332:
 21785              	.LBI12332:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21786              		.loc 20 89 7 view .LVU4924
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21787              		.loc 20 89 7 is_stmt 0 view .LVU4925
 21788              	.LBE12332:
 21789              	.LBE12331:
 21790              	.LBB12333:
 21791              	.LBI12333:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21792              		.loc 19 144 7 is_stmt 1 view .LVU4926
 21793              	.LBB12334:
 21794              	.LBI12334:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21795              		.loc 20 79 7 view .LVU4927
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 792


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21796              		.loc 20 79 7 is_stmt 0 view .LVU4928
 21797              	.LBE12334:
 21798              	.LBE12333:
 21799              		.loc 42 113 5 view .LVU4929
 21800 0186 05F51070 		add	r0, r5, #576
 21801 018a 8F49     		ldr	r1, .L903+160
 21802 018c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21803              	.LVL1278:
 21804              	.LBB12335:
 21805              	.LBI12335:
 21806              		.loc 19 162 7 is_stmt 1 view .LVU4930
 21807              	.LBB12336:
 21808              	.LBI12336:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21809              		.loc 20 89 7 view .LVU4931
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21810              		.loc 20 89 7 is_stmt 0 view .LVU4932
 21811              	.LBE12336:
 21812              	.LBE12335:
 21813              	.LBB12337:
 21814              	.LBI12337:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21815              		.loc 19 144 7 is_stmt 1 view .LVU4933
 21816              	.LBB12338:
 21817              	.LBI12338:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21818              		.loc 20 79 7 view .LVU4934
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21819              		.loc 20 79 7 is_stmt 0 view .LVU4935
 21820              	.LBE12338:
 21821              	.LBE12337:
 21822              		.loc 42 113 5 view .LVU4936
 21823 0190 05F51670 		add	r0, r5, #600
 21824 0194 8D49     		ldr	r1, .L903+164
 21825 0196 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21826              	.LVL1279:
 21827              	.LBB12339:
 21828              	.LBI12339:
 21829              		.loc 19 162 7 is_stmt 1 view .LVU4937
 21830              	.LBB12340:
 21831              	.LBI12340:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21832              		.loc 20 89 7 view .LVU4938
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21833              		.loc 20 89 7 is_stmt 0 view .LVU4939
 21834              	.LBE12340:
 21835              	.LBE12339:
 21836              	.LBB12341:
 21837              	.LBI12341:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21838              		.loc 19 144 7 is_stmt 1 view .LVU4940
 21839              	.LBB12342:
 21840              	.LBI12342:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21841              		.loc 20 79 7 view .LVU4941
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 793


 21842              		.loc 20 79 7 is_stmt 0 view .LVU4942
 21843              	.LBE12342:
 21844              	.LBE12341:
 21845              		.loc 42 113 5 view .LVU4943
 21846 019a 05F51C70 		add	r0, r5, #624
 21847 019e 8C49     		ldr	r1, .L903+168
 21848 01a0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21849              	.LVL1280:
 21850              	.LBB12343:
 21851              	.LBI12343:
 21852              		.loc 19 162 7 is_stmt 1 view .LVU4944
 21853              	.LBB12344:
 21854              	.LBI12344:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21855              		.loc 20 89 7 view .LVU4945
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21856              		.loc 20 89 7 is_stmt 0 view .LVU4946
 21857              	.LBE12344:
 21858              	.LBE12343:
 21859              	.LBB12345:
 21860              	.LBI12345:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21861              		.loc 19 144 7 is_stmt 1 view .LVU4947
 21862              	.LBB12346:
 21863              	.LBI12346:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21864              		.loc 20 79 7 view .LVU4948
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21865              		.loc 20 79 7 is_stmt 0 view .LVU4949
 21866              	.LBE12346:
 21867              	.LBE12345:
 21868              		.loc 42 113 5 view .LVU4950
 21869 01a4 05F52270 		add	r0, r5, #648
 21870 01a8 8A49     		ldr	r1, .L903+172
 21871 01aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21872              	.LVL1281:
 21873              	.LBB12347:
 21874              	.LBI12347:
 21875              		.loc 19 162 7 is_stmt 1 view .LVU4951
 21876              	.LBB12348:
 21877              	.LBI12348:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21878              		.loc 20 89 7 view .LVU4952
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21879              		.loc 20 89 7 is_stmt 0 view .LVU4953
 21880              	.LBE12348:
 21881              	.LBE12347:
 21882              	.LBB12349:
 21883              	.LBI12349:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21884              		.loc 19 144 7 is_stmt 1 view .LVU4954
 21885              	.LBB12350:
 21886              	.LBI12350:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21887              		.loc 20 79 7 view .LVU4955
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21888              		.loc 20 79 7 is_stmt 0 view .LVU4956
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 794


 21889              	.LBE12350:
 21890              	.LBE12349:
 21891              		.loc 42 113 5 view .LVU4957
 21892 01ae 05F52870 		add	r0, r5, #672
 21893 01b2 8949     		ldr	r1, .L903+176
 21894 01b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21895              	.LVL1282:
 21896              	.LBB12351:
 21897              	.LBI12351:
 21898              		.loc 19 162 7 is_stmt 1 view .LVU4958
 21899              	.LBB12352:
 21900              	.LBI12352:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21901              		.loc 20 89 7 view .LVU4959
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21902              		.loc 20 89 7 is_stmt 0 view .LVU4960
 21903              	.LBE12352:
 21904              	.LBE12351:
 21905              	.LBB12353:
 21906              	.LBI12353:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21907              		.loc 19 144 7 is_stmt 1 view .LVU4961
 21908              	.LBB12354:
 21909              	.LBI12354:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21910              		.loc 20 79 7 view .LVU4962
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21911              		.loc 20 79 7 is_stmt 0 view .LVU4963
 21912              	.LBE12354:
 21913              	.LBE12353:
 21914              		.loc 42 113 5 view .LVU4964
 21915 01b8 05F52E70 		add	r0, r5, #696
 21916 01bc 8749     		ldr	r1, .L903+180
 21917 01be FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21918              	.LVL1283:
 21919              	.LBB12355:
 21920              	.LBI12355:
 21921              		.loc 19 162 7 is_stmt 1 view .LVU4965
 21922              	.LBB12356:
 21923              	.LBI12356:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21924              		.loc 20 89 7 view .LVU4966
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21925              		.loc 20 89 7 is_stmt 0 view .LVU4967
 21926              	.LBE12356:
 21927              	.LBE12355:
 21928              	.LBB12357:
 21929              	.LBI12357:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21930              		.loc 19 144 7 is_stmt 1 view .LVU4968
 21931              	.LBB12358:
 21932              	.LBI12358:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21933              		.loc 20 79 7 view .LVU4969
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21934              		.loc 20 79 7 is_stmt 0 view .LVU4970
 21935              	.LBE12358:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 795


 21936              	.LBE12357:
 21937              		.loc 42 113 5 view .LVU4971
 21938 01c2 05F53470 		add	r0, r5, #720
 21939 01c6 8649     		ldr	r1, .L903+184
 21940 01c8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21941              	.LVL1284:
 21942              	.LBB12359:
 21943              	.LBI12359:
 21944              		.loc 19 162 7 is_stmt 1 view .LVU4972
 21945              	.LBB12360:
 21946              	.LBI12360:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21947              		.loc 20 89 7 view .LVU4973
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21948              		.loc 20 89 7 is_stmt 0 view .LVU4974
 21949              	.LBE12360:
 21950              	.LBE12359:
 21951              	.LBB12361:
 21952              	.LBI12361:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21953              		.loc 19 144 7 is_stmt 1 view .LVU4975
 21954              	.LBB12362:
 21955              	.LBI12362:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21956              		.loc 20 79 7 view .LVU4976
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21957              		.loc 20 79 7 is_stmt 0 view .LVU4977
 21958              	.LBE12362:
 21959              	.LBE12361:
 21960              		.loc 42 113 5 view .LVU4978
 21961 01cc 05F53A70 		add	r0, r5, #744
 21962 01d0 8449     		ldr	r1, .L903+188
 21963 01d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21964              	.LVL1285:
 21965              	.LBB12363:
 21966              	.LBI12363:
 21967              		.loc 19 162 7 is_stmt 1 view .LVU4979
 21968              	.LBB12364:
 21969              	.LBI12364:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21970              		.loc 20 89 7 view .LVU4980
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21971              		.loc 20 89 7 is_stmt 0 view .LVU4981
 21972              	.LBE12364:
 21973              	.LBE12363:
 21974              	.LBB12365:
 21975              	.LBI12365:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21976              		.loc 19 144 7 is_stmt 1 view .LVU4982
 21977              	.LBB12366:
 21978              	.LBI12366:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21979              		.loc 20 79 7 view .LVU4983
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21980              		.loc 20 79 7 is_stmt 0 view .LVU4984
 21981              	.LBE12366:
 21982              	.LBE12365:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 796


 21983              		.loc 42 113 5 view .LVU4985
 21984 01d6 05F54070 		add	r0, r5, #768
 21985 01da 8349     		ldr	r1, .L903+192
 21986 01dc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 21987              	.LVL1286:
 21988              	.LBB12367:
 21989              	.LBI12367:
 21990              		.loc 19 162 7 is_stmt 1 view .LVU4986
 21991              	.LBB12368:
 21992              	.LBI12368:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21993              		.loc 20 89 7 view .LVU4987
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 21994              		.loc 20 89 7 is_stmt 0 view .LVU4988
 21995              	.LBE12368:
 21996              	.LBE12367:
 21997              	.LBB12369:
 21998              	.LBI12369:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 21999              		.loc 19 144 7 is_stmt 1 view .LVU4989
 22000              	.LBB12370:
 22001              	.LBI12370:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22002              		.loc 20 79 7 view .LVU4990
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22003              		.loc 20 79 7 is_stmt 0 view .LVU4991
 22004              	.LBE12370:
 22005              	.LBE12369:
 22006              		.loc 42 113 5 view .LVU4992
 22007 01e0 05F54670 		add	r0, r5, #792
 22008 01e4 8149     		ldr	r1, .L903+196
 22009 01e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22010              	.LVL1287:
 22011              	.LBB12371:
 22012              	.LBI12371:
 22013              		.loc 19 162 7 is_stmt 1 view .LVU4993
 22014              	.LBB12372:
 22015              	.LBI12372:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22016              		.loc 20 89 7 view .LVU4994
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22017              		.loc 20 89 7 is_stmt 0 view .LVU4995
 22018              	.LBE12372:
 22019              	.LBE12371:
 22020              	.LBB12373:
 22021              	.LBI12373:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22022              		.loc 19 144 7 is_stmt 1 view .LVU4996
 22023              	.LBB12374:
 22024              	.LBI12374:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22025              		.loc 20 79 7 view .LVU4997
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22026              		.loc 20 79 7 is_stmt 0 view .LVU4998
 22027              	.LBE12374:
 22028              	.LBE12373:
 22029              		.loc 42 113 5 view .LVU4999
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 797


 22030 01ea 05F54C70 		add	r0, r5, #816
 22031 01ee 8049     		ldr	r1, .L903+200
 22032 01f0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22033              	.LVL1288:
 22034              	.LBB12375:
 22035              	.LBI12375:
 22036              		.loc 19 162 7 is_stmt 1 view .LVU5000
 22037              	.LBB12376:
 22038              	.LBI12376:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22039              		.loc 20 89 7 view .LVU5001
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22040              		.loc 20 89 7 is_stmt 0 view .LVU5002
 22041              	.LBE12376:
 22042              	.LBE12375:
 22043              	.LBB12377:
 22044              	.LBI12377:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22045              		.loc 19 144 7 is_stmt 1 view .LVU5003
 22046              	.LBB12378:
 22047              	.LBI12378:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22048              		.loc 20 79 7 view .LVU5004
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22049              		.loc 20 79 7 is_stmt 0 view .LVU5005
 22050              	.LBE12378:
 22051              	.LBE12377:
 22052              		.loc 42 113 5 view .LVU5006
 22053 01f4 05F55270 		add	r0, r5, #840
 22054 01f8 7E49     		ldr	r1, .L903+204
 22055 01fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22056              	.LVL1289:
 22057              	.LBB12379:
 22058              	.LBI12379:
 22059              		.loc 19 162 7 is_stmt 1 view .LVU5007
 22060              	.LBB12380:
 22061              	.LBI12380:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22062              		.loc 20 89 7 view .LVU5008
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22063              		.loc 20 89 7 is_stmt 0 view .LVU5009
 22064              	.LBE12380:
 22065              	.LBE12379:
 22066              	.LBB12381:
 22067              	.LBI12381:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22068              		.loc 19 144 7 is_stmt 1 view .LVU5010
 22069              	.LBB12382:
 22070              	.LBI12382:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22071              		.loc 20 79 7 view .LVU5011
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22072              		.loc 20 79 7 is_stmt 0 view .LVU5012
 22073              	.LBE12382:
 22074              	.LBE12381:
 22075              		.loc 42 113 5 view .LVU5013
 22076 01fe 05F55870 		add	r0, r5, #864
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 798


 22077 0202 7D49     		ldr	r1, .L903+208
 22078 0204 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22079              	.LVL1290:
 22080              	.LBB12383:
 22081              	.LBI12383:
 22082              		.loc 19 162 7 is_stmt 1 view .LVU5014
 22083              	.LBB12384:
 22084              	.LBI12384:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22085              		.loc 20 89 7 view .LVU5015
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22086              		.loc 20 89 7 is_stmt 0 view .LVU5016
 22087              	.LBE12384:
 22088              	.LBE12383:
 22089              	.LBB12385:
 22090              	.LBI12385:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22091              		.loc 19 144 7 is_stmt 1 view .LVU5017
 22092              	.LBB12386:
 22093              	.LBI12386:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22094              		.loc 20 79 7 view .LVU5018
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22095              		.loc 20 79 7 is_stmt 0 view .LVU5019
 22096              	.LBE12386:
 22097              	.LBE12385:
 22098              		.loc 42 113 5 view .LVU5020
 22099 0208 05F55E70 		add	r0, r5, #888
 22100 020c 7B49     		ldr	r1, .L903+212
 22101 020e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22102              	.LVL1291:
 22103              	.LBB12387:
 22104              	.LBI12387:
 22105              		.loc 19 162 7 is_stmt 1 view .LVU5021
 22106              	.LBB12388:
 22107              	.LBI12388:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22108              		.loc 20 89 7 view .LVU5022
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22109              		.loc 20 89 7 is_stmt 0 view .LVU5023
 22110              	.LBE12388:
 22111              	.LBE12387:
 22112              	.LBB12389:
 22113              	.LBI12389:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22114              		.loc 19 144 7 is_stmt 1 view .LVU5024
 22115              	.LBB12390:
 22116              	.LBI12390:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22117              		.loc 20 79 7 view .LVU5025
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22118              		.loc 20 79 7 is_stmt 0 view .LVU5026
 22119              	.LBE12390:
 22120              	.LBE12389:
 22121              		.loc 42 113 5 view .LVU5027
 22122 0212 05F56470 		add	r0, r5, #912
 22123 0216 7A49     		ldr	r1, .L903+216
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 799


 22124 0218 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22125              	.LVL1292:
 22126              	.LBB12391:
 22127              	.LBI12391:
 22128              		.loc 19 162 7 is_stmt 1 view .LVU5028
 22129              	.LBB12392:
 22130              	.LBI12392:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22131              		.loc 20 89 7 view .LVU5029
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22132              		.loc 20 89 7 is_stmt 0 view .LVU5030
 22133              	.LBE12392:
 22134              	.LBE12391:
 22135              	.LBB12393:
 22136              	.LBI12393:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22137              		.loc 19 144 7 is_stmt 1 view .LVU5031
 22138              	.LBB12394:
 22139              	.LBI12394:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22140              		.loc 20 79 7 view .LVU5032
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22141              		.loc 20 79 7 is_stmt 0 view .LVU5033
 22142              	.LBE12394:
 22143              	.LBE12393:
 22144              		.loc 42 113 5 view .LVU5034
 22145 021c 05F56A70 		add	r0, r5, #936
 22146 0220 7849     		ldr	r1, .L903+220
 22147 0222 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22148              	.LVL1293:
 22149              	.LBB12395:
 22150              	.LBI12395:
 22151              		.loc 19 162 7 is_stmt 1 view .LVU5035
 22152              	.LBB12396:
 22153              	.LBI12396:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22154              		.loc 20 89 7 view .LVU5036
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22155              		.loc 20 89 7 is_stmt 0 view .LVU5037
 22156              	.LBE12396:
 22157              	.LBE12395:
 22158              	.LBB12397:
 22159              	.LBI12397:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22160              		.loc 19 144 7 is_stmt 1 view .LVU5038
 22161              	.LBB12398:
 22162              	.LBI12398:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22163              		.loc 20 79 7 view .LVU5039
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22164              		.loc 20 79 7 is_stmt 0 view .LVU5040
 22165              	.LBE12398:
 22166              	.LBE12397:
 22167              		.loc 42 113 5 view .LVU5041
 22168 0226 05F57070 		add	r0, r5, #960
 22169 022a 7749     		ldr	r1, .L903+224
 22170 022c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 800


 22171              	.LVL1294:
 22172              	.LBB12399:
 22173              	.LBI12399:
 22174              		.loc 19 162 7 is_stmt 1 view .LVU5042
 22175              	.LBB12400:
 22176              	.LBI12400:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22177              		.loc 20 89 7 view .LVU5043
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22178              		.loc 20 89 7 is_stmt 0 view .LVU5044
 22179              	.LBE12400:
 22180              	.LBE12399:
 22181              	.LBB12401:
 22182              	.LBI12401:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22183              		.loc 19 144 7 is_stmt 1 view .LVU5045
 22184              	.LBB12402:
 22185              	.LBI12402:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22186              		.loc 20 79 7 view .LVU5046
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22187              		.loc 20 79 7 is_stmt 0 view .LVU5047
 22188              	.LBE12402:
 22189              	.LBE12401:
 22190              		.loc 42 113 5 view .LVU5048
 22191 0230 05F57670 		add	r0, r5, #984
 22192 0234 7549     		ldr	r1, .L903+228
 22193 0236 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22194              	.LVL1295:
 22195              	.LBB12403:
 22196              	.LBI12403:
 22197              		.loc 19 162 7 is_stmt 1 view .LVU5049
 22198              	.LBB12404:
 22199              	.LBI12404:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22200              		.loc 20 89 7 view .LVU5050
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22201              		.loc 20 89 7 is_stmt 0 view .LVU5051
 22202              	.LBE12404:
 22203              	.LBE12403:
 22204              	.LBB12405:
 22205              	.LBI12405:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22206              		.loc 19 144 7 is_stmt 1 view .LVU5052
 22207              	.LBB12406:
 22208              	.LBI12406:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22209              		.loc 20 79 7 view .LVU5053
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22210              		.loc 20 79 7 is_stmt 0 view .LVU5054
 22211              	.LBE12406:
 22212              	.LBE12405:
 22213              		.loc 42 113 5 view .LVU5055
 22214 023a 05F57C70 		add	r0, r5, #1008
 22215 023e 7449     		ldr	r1, .L903+232
 22216 0240 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22217              	.LVL1296:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 801


 22218              	.LBB12407:
 22219              	.LBI12407:
 22220              		.loc 19 162 7 is_stmt 1 view .LVU5056
 22221              	.LBB12408:
 22222              	.LBI12408:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22223              		.loc 20 89 7 view .LVU5057
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22224              		.loc 20 89 7 is_stmt 0 view .LVU5058
 22225              	.LBE12408:
 22226              	.LBE12407:
 22227              	.LBB12409:
 22228              	.LBI12409:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22229              		.loc 19 144 7 is_stmt 1 view .LVU5059
 22230              	.LBB12410:
 22231              	.LBI12410:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22232              		.loc 20 79 7 view .LVU5060
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22233              		.loc 20 79 7 is_stmt 0 view .LVU5061
 22234              	.LBE12410:
 22235              	.LBE12409:
 22236              		.loc 42 113 5 view .LVU5062
 22237 0244 05F58160 		add	r0, r5, #1032
 22238 0248 7249     		ldr	r1, .L903+236
 22239 024a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22240              	.LVL1297:
 22241              	.LBB12411:
 22242              	.LBI12411:
 22243              		.loc 19 162 7 is_stmt 1 view .LVU5063
 22244              	.LBB12412:
 22245              	.LBI12412:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22246              		.loc 20 89 7 view .LVU5064
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22247              		.loc 20 89 7 is_stmt 0 view .LVU5065
 22248              	.LBE12412:
 22249              	.LBE12411:
 22250              	.LBB12413:
 22251              	.LBI12413:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22252              		.loc 19 144 7 is_stmt 1 view .LVU5066
 22253              	.LBB12414:
 22254              	.LBI12414:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22255              		.loc 20 79 7 view .LVU5067
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22256              		.loc 20 79 7 is_stmt 0 view .LVU5068
 22257              	.LBE12414:
 22258              	.LBE12413:
 22259              		.loc 42 113 5 view .LVU5069
 22260 024e 05F58460 		add	r0, r5, #1056
 22261 0252 7149     		ldr	r1, .L903+240
 22262 0254 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22263              	.LVL1298:
 22264              	.LBB12415:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 802


 22265              	.LBI12415:
 22266              		.loc 19 162 7 is_stmt 1 view .LVU5070
 22267              	.LBB12416:
 22268              	.LBI12416:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22269              		.loc 20 89 7 view .LVU5071
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22270              		.loc 20 89 7 is_stmt 0 view .LVU5072
 22271              	.LBE12416:
 22272              	.LBE12415:
 22273              	.LBB12417:
 22274              	.LBI12417:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22275              		.loc 19 144 7 is_stmt 1 view .LVU5073
 22276              	.LBB12418:
 22277              	.LBI12418:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22278              		.loc 20 79 7 view .LVU5074
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22279              		.loc 20 79 7 is_stmt 0 view .LVU5075
 22280              	.LBE12418:
 22281              	.LBE12417:
 22282              		.loc 42 113 5 view .LVU5076
 22283 0258 05F58760 		add	r0, r5, #1080
 22284 025c 6F49     		ldr	r1, .L903+244
 22285 025e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22286              	.LVL1299:
 22287              	.LBB12419:
 22288              	.LBI12419:
 22289              		.loc 19 162 7 is_stmt 1 view .LVU5077
 22290              	.LBB12420:
 22291              	.LBI12420:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22292              		.loc 20 89 7 view .LVU5078
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22293              		.loc 20 89 7 is_stmt 0 view .LVU5079
 22294              	.LBE12420:
 22295              	.LBE12419:
 22296              	.LBB12421:
 22297              	.LBI12421:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22298              		.loc 19 144 7 is_stmt 1 view .LVU5080
 22299              	.LBB12422:
 22300              	.LBI12422:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22301              		.loc 20 79 7 view .LVU5081
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22302              		.loc 20 79 7 is_stmt 0 view .LVU5082
 22303              	.LBE12422:
 22304              	.LBE12421:
 22305              		.loc 42 113 5 view .LVU5083
 22306 0262 05F58A60 		add	r0, r5, #1104
 22307 0266 6E49     		ldr	r1, .L903+248
 22308 0268 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22309              	.LVL1300:
 22310              	.LBB12423:
 22311              	.LBI12423:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 803


 22312              		.loc 19 162 7 is_stmt 1 view .LVU5084
 22313              	.LBB12424:
 22314              	.LBI12424:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22315              		.loc 20 89 7 view .LVU5085
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22316              		.loc 20 89 7 is_stmt 0 view .LVU5086
 22317              	.LBE12424:
 22318              	.LBE12423:
 22319              	.LBB12425:
 22320              	.LBI12425:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22321              		.loc 19 144 7 is_stmt 1 view .LVU5087
 22322              	.LBB12426:
 22323              	.LBI12426:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22324              		.loc 20 79 7 view .LVU5088
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22325              		.loc 20 79 7 is_stmt 0 view .LVU5089
 22326              	.LBE12426:
 22327              	.LBE12425:
 22328              		.loc 42 113 5 view .LVU5090
 22329 026c 05F58D60 		add	r0, r5, #1128
 22330 0270 6C49     		ldr	r1, .L903+252
 22331 0272 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22332              	.LVL1301:
 22333              	.LBB12427:
 22334              	.LBI12427:
 22335              		.loc 19 162 7 is_stmt 1 view .LVU5091
 22336              	.LBB12428:
 22337              	.LBI12428:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22338              		.loc 20 89 7 view .LVU5092
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22339              		.loc 20 89 7 is_stmt 0 view .LVU5093
 22340              	.LBE12428:
 22341              	.LBE12427:
 22342              	.LBB12429:
 22343              	.LBI12429:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22344              		.loc 19 144 7 is_stmt 1 view .LVU5094
 22345              	.LBB12430:
 22346              	.LBI12430:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22347              		.loc 20 79 7 view .LVU5095
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22348              		.loc 20 79 7 is_stmt 0 view .LVU5096
 22349              	.LBE12430:
 22350              	.LBE12429:
 22351              		.loc 42 113 5 view .LVU5097
 22352 0276 05F59060 		add	r0, r5, #1152
 22353 027a 6B49     		ldr	r1, .L903+256
 22354 027c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22355              	.LVL1302:
 22356              	.LBB12431:
 22357              	.LBI12431:
 22358              		.loc 19 162 7 is_stmt 1 view .LVU5098
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 804


 22359              	.LBB12432:
 22360              	.LBI12432:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22361              		.loc 20 89 7 view .LVU5099
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22362              		.loc 20 89 7 is_stmt 0 view .LVU5100
 22363              	.LBE12432:
 22364              	.LBE12431:
 22365              	.LBB12433:
 22366              	.LBI12433:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22367              		.loc 19 144 7 is_stmt 1 view .LVU5101
 22368              	.LBB12434:
 22369              	.LBI12434:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22370              		.loc 20 79 7 view .LVU5102
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22371              		.loc 20 79 7 is_stmt 0 view .LVU5103
 22372              	.LBE12434:
 22373              	.LBE12433:
 22374              		.loc 42 113 5 view .LVU5104
 22375 0280 05F59360 		add	r0, r5, #1176
 22376 0284 6949     		ldr	r1, .L903+260
 22377 0286 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22378              	.LVL1303:
 22379              	.LBB12435:
 22380              	.LBI12435:
 22381              		.loc 19 162 7 is_stmt 1 view .LVU5105
 22382              	.LBB12436:
 22383              	.LBI12436:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22384              		.loc 20 89 7 view .LVU5106
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22385              		.loc 20 89 7 is_stmt 0 view .LVU5107
 22386              	.LBE12436:
 22387              	.LBE12435:
 22388              	.LBB12437:
 22389              	.LBI12437:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22390              		.loc 19 144 7 is_stmt 1 view .LVU5108
 22391              	.LBB12438:
 22392              	.LBI12438:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22393              		.loc 20 79 7 view .LVU5109
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22394              		.loc 20 79 7 is_stmt 0 view .LVU5110
 22395              	.LBE12438:
 22396              	.LBE12437:
 22397              		.loc 42 113 5 view .LVU5111
 22398 028a 05F59660 		add	r0, r5, #1200
 22399 028e 6849     		ldr	r1, .L903+264
 22400 0290 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22401              	.LVL1304:
 22402              	.LBB12439:
 22403              	.LBI12439:
 22404              		.loc 19 162 7 is_stmt 1 view .LVU5112
 22405              	.LBB12440:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 805


 22406              	.LBI12440:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22407              		.loc 20 89 7 view .LVU5113
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22408              		.loc 20 89 7 is_stmt 0 view .LVU5114
 22409              	.LBE12440:
 22410              	.LBE12439:
 22411              	.LBB12441:
 22412              	.LBI12441:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22413              		.loc 19 144 7 is_stmt 1 view .LVU5115
 22414              	.LBB12442:
 22415              	.LBI12442:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22416              		.loc 20 79 7 view .LVU5116
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22417              		.loc 20 79 7 is_stmt 0 view .LVU5117
 22418              	.LBE12442:
 22419              	.LBE12441:
 22420              		.loc 42 113 5 view .LVU5118
 22421 0294 05F59960 		add	r0, r5, #1224
 22422 0298 6649     		ldr	r1, .L903+268
 22423 029a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22424              	.LVL1305:
 22425              	.LBB12443:
 22426              	.LBI12443:
 22427              		.loc 19 162 7 is_stmt 1 view .LVU5119
 22428              	.LBB12444:
 22429              	.LBI12444:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22430              		.loc 20 89 7 view .LVU5120
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22431              		.loc 20 89 7 is_stmt 0 view .LVU5121
 22432              	.LBE12444:
 22433              	.LBE12443:
 22434              	.LBB12445:
 22435              	.LBI12445:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22436              		.loc 19 144 7 is_stmt 1 view .LVU5122
 22437              	.LBB12446:
 22438              	.LBI12446:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22439              		.loc 20 79 7 view .LVU5123
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22440              		.loc 20 79 7 is_stmt 0 view .LVU5124
 22441              	.LBE12446:
 22442              	.LBE12445:
 22443              		.loc 42 113 5 view .LVU5125
 22444 029e 05F59C60 		add	r0, r5, #1248
 22445 02a2 6549     		ldr	r1, .L903+272
 22446 02a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22447              	.LVL1306:
 22448              	.LBB12447:
 22449              	.LBI12447:
 22450              		.loc 19 162 7 is_stmt 1 view .LVU5126
 22451              	.LBB12448:
 22452              	.LBI12448:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 806


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22453              		.loc 20 89 7 view .LVU5127
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22454              		.loc 20 89 7 is_stmt 0 view .LVU5128
 22455              	.LBE12448:
 22456              	.LBE12447:
 22457              	.LBB12449:
 22458              	.LBI12449:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22459              		.loc 19 144 7 is_stmt 1 view .LVU5129
 22460              	.LBB12450:
 22461              	.LBI12450:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22462              		.loc 20 79 7 view .LVU5130
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22463              		.loc 20 79 7 is_stmt 0 view .LVU5131
 22464              	.LBE12450:
 22465              	.LBE12449:
 22466              		.loc 42 113 5 view .LVU5132
 22467 02a8 05F59F60 		add	r0, r5, #1272
 22468 02ac 6349     		ldr	r1, .L903+276
 22469 02ae FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22470              	.LVL1307:
 22471              	.LBB12451:
 22472              	.LBI12451:
 22473              		.loc 19 162 7 is_stmt 1 view .LVU5133
 22474              	.LBB12452:
 22475              	.LBI12452:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22476              		.loc 20 89 7 view .LVU5134
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22477              		.loc 20 89 7 is_stmt 0 view .LVU5135
 22478              	.LBE12452:
 22479              	.LBE12451:
 22480              	.LBB12453:
 22481              	.LBI12453:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22482              		.loc 19 144 7 is_stmt 1 view .LVU5136
 22483              	.LBB12454:
 22484              	.LBI12454:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22485              		.loc 20 79 7 view .LVU5137
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22486              		.loc 20 79 7 is_stmt 0 view .LVU5138
 22487              	.LBE12454:
 22488              	.LBE12453:
 22489              		.loc 42 113 5 view .LVU5139
 22490 02b2 05F5A260 		add	r0, r5, #1296
 22491 02b6 6249     		ldr	r1, .L903+280
 22492 02b8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22493              	.LVL1308:
 22494              	.LBB12455:
 22495              	.LBI12455:
 22496              		.loc 19 162 7 is_stmt 1 view .LVU5140
 22497              	.LBB12456:
 22498              	.LBI12456:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 807


 22499              		.loc 20 89 7 view .LVU5141
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22500              		.loc 20 89 7 is_stmt 0 view .LVU5142
 22501              	.LBE12456:
 22502              	.LBE12455:
 22503              	.LBB12457:
 22504              	.LBI12457:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22505              		.loc 19 144 7 is_stmt 1 view .LVU5143
 22506              	.LBB12458:
 22507              	.LBI12458:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22508              		.loc 20 79 7 view .LVU5144
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22509              		.loc 20 79 7 is_stmt 0 view .LVU5145
 22510              	.LBE12458:
 22511              	.LBE12457:
 22512              		.loc 42 113 5 view .LVU5146
 22513 02bc 05F5A560 		add	r0, r5, #1320
 22514 02c0 6049     		ldr	r1, .L903+284
 22515 02c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22516              	.LVL1309:
 22517              	.LBB12459:
 22518              	.LBI12459:
 22519              		.loc 19 162 7 is_stmt 1 view .LVU5147
 22520              	.LBB12460:
 22521              	.LBI12460:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22522              		.loc 20 89 7 view .LVU5148
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22523              		.loc 20 89 7 is_stmt 0 view .LVU5149
 22524              	.LBE12460:
 22525              	.LBE12459:
 22526              	.LBB12461:
 22527              	.LBI12461:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22528              		.loc 19 144 7 is_stmt 1 view .LVU5150
 22529              	.LBB12462:
 22530              	.LBI12462:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22531              		.loc 20 79 7 view .LVU5151
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22532              		.loc 20 79 7 is_stmt 0 view .LVU5152
 22533              	.LBE12462:
 22534              	.LBE12461:
 22535              		.loc 42 113 5 view .LVU5153
 22536 02c6 05F5A860 		add	r0, r5, #1344
 22537 02ca 5F49     		ldr	r1, .L903+288
 22538 02cc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22539              	.LVL1310:
 22540              	.LBB12463:
 22541              	.LBI12463:
 22542              		.loc 19 162 7 is_stmt 1 view .LVU5154
 22543              	.LBB12464:
 22544              	.LBI12464:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22545              		.loc 20 89 7 view .LVU5155
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 808


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22546              		.loc 20 89 7 is_stmt 0 view .LVU5156
 22547              	.LBE12464:
 22548              	.LBE12463:
 22549              	.LBB12465:
 22550              	.LBI12465:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22551              		.loc 19 144 7 is_stmt 1 view .LVU5157
 22552              	.LBB12466:
 22553              	.LBI12466:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22554              		.loc 20 79 7 view .LVU5158
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22555              		.loc 20 79 7 is_stmt 0 view .LVU5159
 22556              	.LBE12466:
 22557              	.LBE12465:
 22558              		.loc 42 113 5 view .LVU5160
 22559 02d0 05F5AB60 		add	r0, r5, #1368
 22560 02d4 5D49     		ldr	r1, .L903+292
 22561 02d6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22562              	.LVL1311:
 22563              	.LBB12467:
 22564              	.LBI12467:
 22565              		.loc 19 162 7 is_stmt 1 view .LVU5161
 22566              	.LBB12468:
 22567              	.LBI12468:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22568              		.loc 20 89 7 view .LVU5162
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22569              		.loc 20 89 7 is_stmt 0 view .LVU5163
 22570              	.LBE12468:
 22571              	.LBE12467:
 22572              	.LBB12469:
 22573              	.LBI12469:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22574              		.loc 19 144 7 is_stmt 1 view .LVU5164
 22575              	.LBB12470:
 22576              	.LBI12470:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22577              		.loc 20 79 7 view .LVU5165
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22578              		.loc 20 79 7 is_stmt 0 view .LVU5166
 22579              	.LBE12470:
 22580              	.LBE12469:
 22581              		.loc 42 113 5 view .LVU5167
 22582 02da 05F5AE60 		add	r0, r5, #1392
 22583 02de 5C49     		ldr	r1, .L903+296
 22584 02e0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22585              	.LVL1312:
 22586              	.LBB12471:
 22587              	.LBI12471:
 22588              		.loc 19 162 7 is_stmt 1 view .LVU5168
 22589              	.LBB12472:
 22590              	.LBI12472:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22591              		.loc 20 89 7 view .LVU5169
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 809


 22592              		.loc 20 89 7 is_stmt 0 view .LVU5170
 22593              	.LBE12472:
 22594              	.LBE12471:
 22595              	.LBB12473:
 22596              	.LBI12473:
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 22597              		.loc 18 431 7 is_stmt 1 view .LVU5171
 22598              	.LBB12474:
 22599              	.LBB12475:
 22600              	.LBI12475:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22601              		.loc 18 190 7 view .LVU5172
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22602              		.loc 18 190 7 is_stmt 0 view .LVU5173
 22603              	.LBE12475:
 22604              	.LBB12476:
 22605              	.LBI12476:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22606              		.loc 19 144 7 is_stmt 1 view .LVU5174
 22607              	.LBB12477:
 22608              	.LBI12477:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22609              		.loc 20 79 7 view .LVU5175
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22610              		.loc 20 79 7 is_stmt 0 view .LVU5176
 22611              	.LBE12477:
 22612              	.LBE12476:
 22613              	.LBB12478:
 22614              	.LBI12478:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 22615              		.loc 18 159 2 is_stmt 1 view .LVU5177
 22616              	.LBB12479:
 22617              	.LBB12480:
 22618              	.LBB12481:
 22619              	.LBI12481:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 22620              		.loc 37 101 5 view .LVU5178
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 22621              		.loc 37 101 5 is_stmt 0 view .LVU5179
 22622              	.LBE12481:
 22623              	.LBB12482:
 22624              	.LBI12482:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22625              		.loc 19 147 7 is_stmt 1 view .LVU5180
 22626              	.LBB12483:
 22627              	.LBI12483:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22628              		.loc 20 82 7 view .LVU5181
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22629              		.loc 20 82 7 is_stmt 0 view .LVU5182
 22630              	.LBE12483:
 22631              	.LBE12482:
 22632              	.LBE12480:
 22633              	.LBE12479:
 22634              	.LBE12478:
 22635              	.LBB12488:
 22636              	.LBB12489:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 810


 22637              	.LBB12490:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22638              		.loc 18 183 26 view .LVU5183
 22639 02e4 0023     		movs	r3, #0
 22640              	.LBE12490:
 22641              	.LBE12489:
 22642              	.LBE12488:
 22643              	.LBE12474:
 22644              	.LBE12473:
  51:theory.h      ****         "C0",
 22645              		.loc 42 51 39 view .LVU5184
 22646 02e6 1E4A     		ldr	r2, .L903+56
 22647 02e8 2846     		mov	r0, r5
 22648              	.LBB12506:
 22649              	.LBB12504:
 22650              	.LBB12498:
 22651              	.LBB12492:
 22652              	.LBB12491:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22653              		.loc 18 183 26 view .LVU5185
 22654 02ea C5F88C35 		str	r3, [r5, #1420]
 22655              	.LBE12491:
 22656              	.LBE12492:
 22657              	.LBB12493:
 22658              	.LBB12494:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22659              		.loc 21 322 14 view .LVU5186
 22660 02ee 85F89035 		strb	r3, [r5, #1424]
 22661              	.LBE12494:
 22662              	.LBE12493:
 22663              	.LBE12498:
 22664              	.LBB12499:
 22665              	.LBB12486:
 22666              	.LBB12484:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22667              		.loc 18 160 46 view .LVU5187
 22668 02f2 05F5B263 		add	r3, r5, #1424
 22669              	.LBE12484:
 22670              	.LBE12486:
 22671              	.LBE12499:
 22672              	.LBE12504:
 22673              	.LBE12506:
  51:theory.h      ****         "C0",
 22674              		.loc 42 51 39 view .LVU5188
 22675 02f6 5749     		ldr	r1, .L903+300
 22676              	.LBB12507:
 22677              	.LBB12505:
 22678              	.LBB12500:
 22679              	.LBB12487:
 22680              	.LBB12485:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22681              		.loc 18 160 46 view .LVU5189
 22682 02f8 C5F88835 		str	r3, [r5, #1416]
 22683              	.LVL1313:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 22684              		.loc 18 160 46 view .LVU5190
 22685              	.LBE12485:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 811


 22686              	.LBE12487:
 22687              	.LBE12500:
 22688              	.LBB12501:
 22689              	.LBI12501:
 22690              		.loc 19 162 7 is_stmt 1 view .LVU5191
 22691              	.LBB12502:
 22692              	.LBI12502:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22693              		.loc 20 89 7 view .LVU5192
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22694              		.loc 20 89 7 is_stmt 0 view .LVU5193
 22695              	.LBE12502:
 22696              	.LBE12501:
 22697              	.LBB12503:
 22698              	.LBI12488:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22699              		.loc 18 214 7 is_stmt 1 view .LVU5194
 22700              	.LBB12496:
 22701              	.LBI12489:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 22702              		.loc 18 182 7 view .LVU5195
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 22703              		.loc 18 182 7 is_stmt 0 view .LVU5196
 22704              	.LBE12496:
 22705              	.LBB12497:
 22706              	.LBI12493:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 22707              		.loc 21 321 7 is_stmt 1 view .LVU5197
 22708              	.LBB12495:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22709              		.loc 21 322 9 view .LVU5198
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 22710              		.loc 21 322 9 is_stmt 0 view .LVU5199
 22711 02fc C2AD     		add	r5, sp, #776
 22712              	.LBE12495:
 22713              	.LBE12497:
 22714              	.LBE12503:
 22715              	.LBE12505:
 22716              	.LBE12507:
  51:theory.h      ****         "C0",
 22717              		.loc 42 51 39 view .LVU5200
 22718 02fe FFF7FEFF 		bl	__aeabi_atexit
 22719              	.LVL1314:
 22720              	.LBB12508:
 22721              	.LBI12508:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22722              		.loc 19 144 7 is_stmt 1 view .LVU5201
 22723              	.LBB12509:
 22724              	.LBI12509:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22725              		.loc 20 79 7 view .LVU5202
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22726              		.loc 20 79 7 is_stmt 0 view .LVU5203
 22727              	.LBE12509:
 22728              	.LBE12508:
 114:theory.h      **** 
 115:theory.h      ****     // Note: Mode names are currently abbreviated due to 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 812


 116:theory.h      ****     // Daisy Patch screen size limitations.
 117:theory.h      ****     //
 118:theory.h      ****     // TODO support exotic modes
 119:theory.h      ****     const std::vector<std::string> modes {
 120:theory.h      ****         "Major",
 121:theory.h      ****         "Minor",
 122:theory.h      ****         "Dorian",
 123:theory.h      ****         "Phyrgi", // Phyrgian
 124:theory.h      ****         "Lydian",
 125:theory.h      ****         "Mixo",   // Mixolydian
 126:theory.h      ****         "Locri",  // Locrian
 127:theory.h      ****     };
 22729              		.loc 42 127 5 view .LVU5204
 22730 0302 5549     		ldr	r1, .L903+304
 22731 0304 3046     		mov	r0, r6
 22732 0306 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22733              	.LVL1315:
 22734              	.LBB12510:
 22735              	.LBI12510:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22736              		.loc 19 144 7 is_stmt 1 view .LVU5205
 22737              	.LBB12511:
 22738              	.LBI12511:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22739              		.loc 20 79 7 view .LVU5206
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22740              		.loc 20 79 7 is_stmt 0 view .LVU5207
 22741              	.LBE12511:
 22742              	.LBE12510:
 22743              		.loc 42 127 5 view .LVU5208
 22744 030a 5449     		ldr	r1, .L903+308
 22745 030c A4A8     		add	r0, sp, #656
 22746 030e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22747              	.LVL1316:
 22748              	.LBB12512:
 22749              	.LBI12512:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22750              		.loc 19 144 7 is_stmt 1 view .LVU5209
 22751              	.LBB12513:
 22752              	.LBI12513:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22753              		.loc 20 79 7 view .LVU5210
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22754              		.loc 20 79 7 is_stmt 0 view .LVU5211
 22755              	.LBE12513:
 22756              	.LBE12512:
 22757              		.loc 42 127 5 view .LVU5212
 22758 0312 5349     		ldr	r1, .L903+312
 22759 0314 AAA8     		add	r0, sp, #680
 22760 0316 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22761              	.LVL1317:
 22762              	.LBB12514:
 22763              	.LBI12514:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22764              		.loc 19 144 7 is_stmt 1 view .LVU5213
 22765              	.LBB12515:
 22766              	.LBI12515:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 813


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22767              		.loc 20 79 7 view .LVU5214
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22768              		.loc 20 79 7 is_stmt 0 view .LVU5215
 22769              	.LBE12515:
 22770              	.LBE12514:
 22771              		.loc 42 127 5 view .LVU5216
 22772 031a 5249     		ldr	r1, .L903+316
 22773 031c B0A8     		add	r0, sp, #704
 22774 031e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22775              	.LVL1318:
 22776              	.LBB12516:
 22777              	.LBI12516:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22778              		.loc 19 144 7 is_stmt 1 view .LVU5217
 22779              	.LBB12517:
 22780              	.LBI12517:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22781              		.loc 20 79 7 view .LVU5218
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22782              		.loc 20 79 7 is_stmt 0 view .LVU5219
 22783              	.LBE12517:
 22784              	.LBE12516:
 22785              		.loc 42 127 5 view .LVU5220
 22786 0322 5149     		ldr	r1, .L903+320
 22787 0324 B6A8     		add	r0, sp, #728
 22788 0326 A1E0     		b	.L904
 22789              	.L905:
 22790              		.align	2
 22791              	.L903:
 22792 0328 00000000 		.word	.LC33
 22793 032c 04000000 		.word	.LC34
 22794 0330 08000000 		.word	.LC35
 22795 0334 0C000000 		.word	.LC36
 22796 0338 10000000 		.word	.LC37
 22797 033c 14000000 		.word	.LC38
 22798 0340 18000000 		.word	.LC39
 22799 0344 1C000000 		.word	.LC40
 22800 0348 20000000 		.word	.LC41
 22801 034c 24000000 		.word	.LC42
 22802 0350 28000000 		.word	.LC43
 22803 0354 2C000000 		.word	.LC44
 22804 0358 00000000 		.word	.LANCHOR23
 22805 035c 00000000 		.word	.LANCHOR28
 22806 0360 00000000 		.word	__dso_handle
 22807 0364 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 22808 0368 30000000 		.word	.LC45
 22809 036c 34000000 		.word	.LC46
 22810 0370 38000000 		.word	.LC47
 22811 0374 3C000000 		.word	.LC48
 22812 0378 40000000 		.word	.LC49
 22813 037c 44000000 		.word	.LC50
 22814 0380 48000000 		.word	.LC51
 22815 0384 4C000000 		.word	.LC52
 22816 0388 50000000 		.word	.LC53
 22817 038c 54000000 		.word	.LC54
 22818 0390 58000000 		.word	.LC55
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 814


 22819 0394 5C000000 		.word	.LC56
 22820 0398 60000000 		.word	.LC57
 22821 039c 64000000 		.word	.LC58
 22822 03a0 68000000 		.word	.LC59
 22823 03a4 6C000000 		.word	.LC60
 22824 03a8 70000000 		.word	.LC61
 22825 03ac 74000000 		.word	.LC62
 22826 03b0 78000000 		.word	.LC63
 22827 03b4 7C000000 		.word	.LC64
 22828 03b8 80000000 		.word	.LC65
 22829 03bc 84000000 		.word	.LC66
 22830 03c0 88000000 		.word	.LC67
 22831 03c4 8C000000 		.word	.LC68
 22832 03c8 90000000 		.word	.LC69
 22833 03cc 94000000 		.word	.LC70
 22834 03d0 98000000 		.word	.LC71
 22835 03d4 9C000000 		.word	.LC72
 22836 03d8 A0000000 		.word	.LC73
 22837 03dc A4000000 		.word	.LC74
 22838 03e0 A8000000 		.word	.LC75
 22839 03e4 AC000000 		.word	.LC76
 22840 03e8 B0000000 		.word	.LC77
 22841 03ec B4000000 		.word	.LC78
 22842 03f0 B8000000 		.word	.LC79
 22843 03f4 BC000000 		.word	.LC80
 22844 03f8 C0000000 		.word	.LC81
 22845 03fc C4000000 		.word	.LC82
 22846 0400 C8000000 		.word	.LC83
 22847 0404 CC000000 		.word	.LC84
 22848 0408 D0000000 		.word	.LC85
 22849 040c D4000000 		.word	.LC86
 22850 0410 D8000000 		.word	.LC87
 22851 0414 DC000000 		.word	.LC88
 22852 0418 E0000000 		.word	.LC89
 22853 041c E4000000 		.word	.LC90
 22854 0420 E8000000 		.word	.LC91
 22855 0424 EC000000 		.word	.LC92
 22856 0428 F0000000 		.word	.LC93
 22857 042c F4000000 		.word	.LC94
 22858 0430 F8000000 		.word	.LC95
 22859 0434 FC000000 		.word	.LC96
 22860 0438 00010000 		.word	.LC97
 22861 043c 04010000 		.word	.LC98
 22862 0440 08010000 		.word	.LC99
 22863 0444 0C010000 		.word	.LC100
 22864 0448 10010000 		.word	.LC101
 22865 044c 14010000 		.word	.LC102
 22866 0450 18010000 		.word	.LC103
 22867 0454 00000000 		.word	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
 22868 0458 1C010000 		.word	.LC104
 22869 045c 24010000 		.word	.LC105
 22870 0460 2C010000 		.word	.LC106
 22871 0464 34010000 		.word	.LC107
 22872 0468 3C010000 		.word	.LC108
 22873              	.L904:
 22874 046c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22875              	.LVL1319:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 815


 22876              	.LBB12518:
 22877              	.LBI12518:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22878              		.loc 19 144 7 is_stmt 1 view .LVU5221
 22879              	.LBB12519:
 22880              	.LBI12519:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22881              		.loc 20 79 7 view .LVU5222
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22882              		.loc 20 79 7 is_stmt 0 view .LVU5223
 22883              	.LBE12519:
 22884              	.LBE12518:
 22885              		.loc 42 127 5 view .LVU5224
 22886 0470 CF49     		ldr	r1, .L906
 22887 0472 BCA8     		add	r0, sp, #752
 22888 0474 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22889              	.LVL1320:
 22890              	.LBB12520:
 22891              	.LBI12520:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22892              		.loc 19 144 7 is_stmt 1 view .LVU5225
 22893              	.LBB12521:
 22894              	.LBI12521:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22895              		.loc 20 79 7 view .LVU5226
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22896              		.loc 20 79 7 is_stmt 0 view .LVU5227
 22897              	.LBE12521:
 22898              	.LBE12520:
 22899              		.loc 42 127 5 view .LVU5228
 22900 0478 CE49     		ldr	r1, .L906+4
 22901 047a C2A8     		add	r0, sp, #776
 22902 047c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 22903              	.LVL1321:
 22904 0480 0723     		movs	r3, #7
 22905 0482 2DAA     		add	r2, sp, #180
 22906 0484 2D96     		str	r6, [sp, #180]
 22907 0486 2E93     		str	r3, [sp, #184]
 22908              	.LVL1322:
 22909              	.LBB12522:
 22910              	.LBI12522:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 22911              		.loc 19 144 7 is_stmt 1 view .LVU5229
 22912              	.LBB12523:
 22913              	.LBI12523:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22914              		.loc 20 79 7 view .LVU5230
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22915              		.loc 20 79 7 is_stmt 0 view .LVU5231
 22916              	.LBE12523:
 22917              	.LBE12522:
 22918              		.loc 42 127 5 view .LVU5232
 22919 0488 3B46     		mov	r3, r7
 22920 048a CB48     		ldr	r0, .L906+8
 22921 048c 06CA     		ldm	r2, {r1, r2}
 22922 048e FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 22923              	.LVL1323:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 816


 22924              	.LBB12524:
 22925              	.LBI12524:
 22926              		.loc 19 162 7 is_stmt 1 view .LVU5233
 22927              	.LBB12525:
 22928              	.LBI12525:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22929              		.loc 20 89 7 view .LVU5234
 22930              	.L885:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22931              		.loc 20 89 7 is_stmt 0 view .LVU5235
 22932              	.LBE12525:
 22933              	.LBE12524:
 22934              	.LBB12526:
 22935              	.LBI12526:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 22936              		.loc 18 657 7 is_stmt 1 view .LVU5236
 22937              	.LBB12527:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 22938              		.loc 18 658 19 is_stmt 0 view .LVU5237
 22939 0492 2846     		mov	r0, r5
 22940 0494 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 22941              	.LVL1324:
 22942              	.LBB12528:
 22943              	.LBI12528:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 22944              		.loc 18 150 14 is_stmt 1 view .LVU5238
 22945              	.LBB12529:
 22946              	.LBI12529:
 22947              		.loc 19 162 7 view .LVU5239
 22948              	.LBB12530:
 22949              	.LBI12530:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22950              		.loc 20 89 7 view .LVU5240
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22951              		.loc 20 89 7 is_stmt 0 view .LVU5241
 22952              	.LBE12530:
 22953              	.LBE12529:
 22954              	.LBE12528:
 22955              	.LBE12527:
 22956              	.LBE12526:
 22957              		.loc 42 127 5 view .LVU5242
 22958 0498 AE42     		cmp	r6, r5
 22959 049a A5F11805 		sub	r5, r5, #24
 22960 049e F8D1     		bne	.L885
 22961              	.LVL1325:
 22962              	.LBB12531:
 22963              	.LBI12531:
 22964              		.loc 19 162 7 is_stmt 1 view .LVU5243
 22965              	.LBB12532:
 22966              	.LBI12532:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22967              		.loc 20 89 7 view .LVU5244
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22968              		.loc 20 89 7 is_stmt 0 view .LVU5245
 22969              	.LBE12532:
 22970              	.LBE12531:
 22971              	.LBB12533:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 817


 22972              	.LBI12533:
 22973              		.loc 19 162 7 is_stmt 1 view .LVU5246
 22974              	.LBB12534:
 22975              	.LBI12534:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22976              		.loc 20 89 7 view .LVU5247
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22977              		.loc 20 89 7 is_stmt 0 view .LVU5248
 22978              	.LBE12534:
 22979              	.LBE12533:
 22980              	.LBB12535:
 22981              	.LBI12535:
 22982              		.loc 19 162 7 is_stmt 1 view .LVU5249
 22983              	.LBB12536:
 22984              	.LBI12536:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22985              		.loc 20 89 7 view .LVU5250
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22986              		.loc 20 89 7 is_stmt 0 view .LVU5251
 22987              	.LBE12536:
 22988              	.LBE12535:
 22989              	.LBB12537:
 22990              	.LBI12537:
 22991              		.loc 19 162 7 is_stmt 1 view .LVU5252
 22992              	.LBB12538:
 22993              	.LBI12538:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22994              		.loc 20 89 7 view .LVU5253
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 22995              		.loc 20 89 7 is_stmt 0 view .LVU5254
 22996              	.LBE12538:
 22997              	.LBE12537:
 22998              	.LBB12539:
 22999              	.LBI12539:
 23000              		.loc 19 162 7 is_stmt 1 view .LVU5255
 23001              	.LBB12540:
 23002              	.LBI12540:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23003              		.loc 20 89 7 view .LVU5256
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23004              		.loc 20 89 7 is_stmt 0 view .LVU5257
 23005              	.LBE12540:
 23006              	.LBE12539:
 23007              	.LBB12541:
 23008              	.LBI12541:
 23009              		.loc 19 162 7 is_stmt 1 view .LVU5258
 23010              	.LBB12542:
 23011              	.LBI12542:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23012              		.loc 20 89 7 view .LVU5259
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23013              		.loc 20 89 7 is_stmt 0 view .LVU5260
 23014              	.LBE12542:
 23015              	.LBE12541:
 23016              	.LBB12543:
 23017              	.LBI12543:
 23018              		.loc 19 162 7 is_stmt 1 view .LVU5261
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 818


 23019              	.LBB12544:
 23020              	.LBI12544:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23021              		.loc 20 89 7 view .LVU5262
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23022              		.loc 20 89 7 is_stmt 0 view .LVU5263
 23023              	.LBE12544:
 23024              	.LBE12543:
 128:theory.h      **** 
 129:theory.h      ****     // Maps scale names to their first octave of semitone values
 130:theory.h      ****     const std::map<std::string, std::vector<int>> modeToSemitones {
 131:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 23025              		.loc 42 131 57 view .LVU5264
 23026 04a0 C64E     		ldr	r6, .L906+12
 23027 04a2 4FF0070A 		mov	r10, #7
 119:theory.h      ****         "Major",
 23028              		.loc 42 119 36 view .LVU5265
 23029 04a6 C64A     		ldr	r2, .L906+16
 132:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 23030              		.loc 42 132 57 view .LVU5266
 23031 04a8 0DF51078 		add	r8, sp, #576
 119:theory.h      ****         "Major",
 23032              		.loc 42 119 36 view .LVU5267
 23033 04ac C549     		ldr	r1, .L906+20
 23034              		.loc 42 132 57 view .LVU5268
 23035 04ae 0DF5CE79 		add	r9, sp, #412
 119:theory.h      ****         "Major",
 23036              		.loc 42 119 36 view .LVU5269
 23037 04b2 C148     		ldr	r0, .L906+8
 23038              		.loc 42 132 57 view .LVU5270
 23039 04b4 0DF1A40B 		add	fp, sp, #164
 119:theory.h      ****         "Major",
 23040              		.loc 42 119 36 view .LVU5271
 23041 04b8 FFF7FEFF 		bl	__aeabi_atexit
 23042              	.LVL1326:
 131:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 23043              		.loc 42 131 57 view .LVU5272
 23044 04bc BC46     		mov	ip, r7
 23045 04be 0DF1AC0E 		add	lr, sp, #172
 23046 04c2 D4AD     		add	r5, sp, #848
 23047 04c4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 23048 04c6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23049 04ca 96E80700 		ldm	r6, {r0, r1, r2}
 23050 04ce CDE92B7A 		strd	r7, r10, [sp, #172]
 23051              	.LVL1327:
 23052              	.LBB12545:
 23053              	.LBI12545:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23054              		.loc 19 144 7 is_stmt 1 view .LVU5273
 23055              	.LBB12546:
 23056              	.LBI12546:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23057              		.loc 20 79 7 view .LVU5274
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23058              		.loc 20 79 7 is_stmt 0 view .LVU5275
 23059              	.LBE12546:
 23060              	.LBE12545:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 819


 131:theory.h      ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 23061              		.loc 42 131 57 view .LVU5276
 23062 04d2 8CE80700 		stm	ip, {r0, r1, r2}
 23063 04d6 9EE80600 		ldm	lr, {r1, r2}
 23064 04da 6AA8     		add	r0, sp, #424
 23065 04dc FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23066              	.LVL1328:
 133:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 134:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 135:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 136:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 137:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 138:theory.h      ****     };
 23067              		.loc 42 138 5 view .LVU5277
 23068 04e0 6AAA     		add	r2, sp, #424
 23069 04e2 B949     		ldr	r1, .L906+24
 23070 04e4 2046     		mov	r0, r4
 23071 04e6 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 23072              	.LVL1329:
 132:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 23073              		.loc 42 132 57 view .LVU5278
 23074 04ea 06F10C0E 		add	lr, r6, #12
 23075 04ee C446     		mov	ip, r8
 23076 04f0 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23077 04f4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23078 04f8 9EE80700 		ldm	lr, {r0, r1, r2}
 23079 04fc CDE9298A 		strd	r8, r10, [sp, #164]
 23080              	.LVL1330:
 23081              	.LBB12547:
 23082              	.LBI12547:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23083              		.loc 19 144 7 is_stmt 1 view .LVU5279
 23084              	.LBB12548:
 23085              	.LBI12548:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23086              		.loc 20 79 7 view .LVU5280
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23087              		.loc 20 79 7 is_stmt 0 view .LVU5281
 23088              	.LBE12548:
 23089              	.LBE12547:
 132:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 23090              		.loc 42 132 57 view .LVU5282
 23091 0500 8CE80700 		stm	ip, {r0, r1, r2}
 23092 0504 9BE80600 		ldm	fp, {r1, r2}
 23093 0508 4846     		mov	r0, r9
 133:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 23094              		.loc 42 133 57 view .LVU5283
 23095 050a 0DF19C0B 		add	fp, sp, #156
 132:theory.h      ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 23096              		.loc 42 132 57 view .LVU5284
 23097 050e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23098              	.LVL1331:
 23099              		.loc 42 138 5 view .LVU5285
 23100 0512 4A46     		mov	r2, r9
 23101 0514 AD49     		ldr	r1, .L906+28
 23102 0516 A7A8     		add	r0, sp, #668
 23103 0518 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 820


 23104              	.LVL1332:
 133:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 23105              		.loc 42 133 57 view .LVU5286
 23106 051c 06F1280E 		add	lr, r6, #40
 23107 0520 0DF5097C 		add	ip, sp, #548
 23108 0524 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23109 0528 CDE927CA 		strd	ip, r10, [sp, #156]
 23110              	.LVL1333:
 23111              	.LBB12549:
 23112              	.LBI12549:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23113              		.loc 19 144 7 is_stmt 1 view .LVU5287
 23114              	.LBB12550:
 23115              	.LBI12550:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23116              		.loc 20 79 7 view .LVU5288
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23117              		.loc 20 79 7 is_stmt 0 view .LVU5289
 23118              	.LBE12550:
 23119              	.LBE12549:
 133:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 23120              		.loc 42 133 57 view .LVU5290
 23121 052c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23122 0530 9EE80700 		ldm	lr, {r0, r1, r2}
 23123 0534 8CE80700 		stm	ip, {r0, r1, r2}
 23124 0538 9BE80600 		ldm	fp, {r1, r2}
 23125 053c 64A8     		add	r0, sp, #400
 134:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 23126              		.loc 42 134 57 view .LVU5291
 23127 053e 0DF1940B 		add	fp, sp, #148
 133:theory.h      ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 23128              		.loc 42 133 57 view .LVU5292
 23129 0542 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23130              	.LVL1334:
 23131              		.loc 42 138 5 view .LVU5293
 23132 0546 64AA     		add	r2, sp, #400
 23133 0548 A149     		ldr	r1, .L906+32
 23134 054a B0A8     		add	r0, sp, #704
 23135 054c FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 23136              	.LVL1335:
 134:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 23137              		.loc 42 134 57 view .LVU5294
 23138 0550 06F1440E 		add	lr, r6, #68
 23139 0554 0DF5027C 		add	ip, sp, #520
 23140 0558 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23141 055c CDE925CA 		strd	ip, r10, [sp, #148]
 23142              	.LVL1336:
 23143              	.LBB12551:
 23144              	.LBI12551:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23145              		.loc 19 144 7 is_stmt 1 view .LVU5295
 23146              	.LBB12552:
 23147              	.LBI12552:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23148              		.loc 20 79 7 view .LVU5296
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23149              		.loc 20 79 7 is_stmt 0 view .LVU5297
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 821


 23150              	.LBE12552:
 23151              	.LBE12551:
 134:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 23152              		.loc 42 134 57 view .LVU5298
 23153 0560 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23154 0564 9EE80700 		ldm	lr, {r0, r1, r2}
 23155 0568 8CE80700 		stm	ip, {r0, r1, r2}
 23156 056c 9BE80600 		ldm	fp, {r1, r2}
 23157 0570 61A8     		add	r0, sp, #388
 135:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 23158              		.loc 42 135 57 view .LVU5299
 23159 0572 0DF18C0B 		add	fp, sp, #140
 134:theory.h      ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 23160              		.loc 42 134 57 view .LVU5300
 23161 0576 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23162              	.LVL1337:
 23163              		.loc 42 138 5 view .LVU5301
 23164 057a 61AA     		add	r2, sp, #388
 23165 057c 9549     		ldr	r1, .L906+36
 23166 057e B9A8     		add	r0, sp, #740
 23167 0580 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 23168              	.LVL1338:
 135:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 23169              		.loc 42 135 57 view .LVU5302
 23170 0584 06F1600E 		add	lr, r6, #96
 23171 0588 0DF5F67C 		add	ip, sp, #492
 23172 058c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23173 0590 CDE923CA 		strd	ip, r10, [sp, #140]
 23174              	.LVL1339:
 23175              	.LBB12553:
 23176              	.LBI12553:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23177              		.loc 19 144 7 is_stmt 1 view .LVU5303
 23178              	.LBB12554:
 23179              	.LBI12554:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23180              		.loc 20 79 7 view .LVU5304
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23181              		.loc 20 79 7 is_stmt 0 view .LVU5305
 23182              	.LBE12554:
 23183              	.LBE12553:
 135:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 23184              		.loc 42 135 57 view .LVU5306
 23185 0594 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23186 0598 9EE80700 		ldm	lr, {r0, r1, r2}
 23187 059c 8CE80700 		stm	ip, {r0, r1, r2}
 23188 05a0 9BE80600 		ldm	fp, {r1, r2}
 23189 05a4 5EA8     		add	r0, sp, #376
 136:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 23190              		.loc 42 136 57 view .LVU5307
 23191 05a6 0DF1840B 		add	fp, sp, #132
 135:theory.h      ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 23192              		.loc 42 135 57 view .LVU5308
 23193 05aa FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23194              	.LVL1340:
 23195              		.loc 42 138 5 view .LVU5309
 23196 05ae 5EAA     		add	r2, sp, #376
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 822


 23197 05b0 8949     		ldr	r1, .L906+40
 23198 05b2 C2A8     		add	r0, sp, #776
 23199 05b4 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 23200              	.LVL1341:
 136:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 23201              		.loc 42 136 57 view .LVU5310
 23202 05b8 06F17C0E 		add	lr, r6, #124
 23203 05bc 0DF5E87C 		add	ip, sp, #464
 137:theory.h      ****     };
 23204              		.loc 42 137 57 view .LVU5311
 23205 05c0 9836     		adds	r6, r6, #152
 136:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 23206              		.loc 42 136 57 view .LVU5312
 23207 05c2 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23208 05c6 CDE921CA 		strd	ip, r10, [sp, #132]
 23209              	.LVL1342:
 23210              	.LBB12555:
 23211              	.LBI12555:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23212              		.loc 19 144 7 is_stmt 1 view .LVU5313
 23213              	.LBB12556:
 23214              	.LBI12556:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23215              		.loc 20 79 7 view .LVU5314
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23216              		.loc 20 79 7 is_stmt 0 view .LVU5315
 23217              	.LBE12556:
 23218              	.LBE12555:
 136:theory.h      ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 23219              		.loc 42 136 57 view .LVU5316
 23220 05ca ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23221 05ce 9EE80700 		ldm	lr, {r0, r1, r2}
 23222 05d2 8CE80700 		stm	ip, {r0, r1, r2}
 23223 05d6 9BE80600 		ldm	fp, {r1, r2}
 23224 05da 5BA8     		add	r0, sp, #364
 23225 05dc FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23226              	.LVL1343:
 23227              		.loc 42 138 5 view .LVU5317
 23228 05e0 5BAA     		add	r2, sp, #364
 23229 05e2 7349     		ldr	r1, .L906
 23230 05e4 CBA8     		add	r0, sp, #812
 23231 05e6 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 23232              	.LVL1344:
 137:theory.h      ****     };
 23233              		.loc 42 137 57 view .LVU5318
 23234 05ea 0DF5DA7C 		add	ip, sp, #436
 23235 05ee 0DF17C0E 		add	lr, sp, #124
 23236 05f2 CDF880A0 		str	r10, [sp, #128]
 23237              	.LVL1345:
 23238              	.LBB12557:
 23239              	.LBI12557:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23240              		.loc 19 144 7 is_stmt 1 view .LVU5319
 23241              	.LBB12558:
 23242              	.LBI12558:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23243              		.loc 20 79 7 view .LVU5320
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 823


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23244              		.loc 20 79 7 is_stmt 0 view .LVU5321
 23245              	.LBE12558:
 23246              	.LBE12557:
 137:theory.h      ****     };
 23247              		.loc 42 137 57 view .LVU5322
 23248 05f6 CDF87CC0 		str	ip, [sp, #124]
 23249 05fa 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 23250 05fc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23251 0600 96E80700 		ldm	r6, {r0, r1, r2}
 23252 0604 8CE80700 		stm	ip, {r0, r1, r2}
 23253 0608 9EE80600 		ldm	lr, {r1, r2}
 23254 060c 58A8     		add	r0, sp, #352
 23255 060e FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23256              	.LVL1346:
 23257              		.loc 42 138 5 view .LVU5323
 23258 0612 58AA     		add	r2, sp, #352
 23259 0614 6749     		ldr	r1, .L906+4
 23260 0616 2846     		mov	r0, r5
 23261 0618 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 23262              	.LVL1347:
 23263              	.LBB12559:
 23264              	.LBI12559:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23265              		.loc 19 144 7 is_stmt 1 view .LVU5324
 23266              	.LBB12560:
 23267              	.LBI12560:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23268              		.loc 20 79 7 view .LVU5325
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23269              		.loc 20 79 7 is_stmt 0 view .LVU5326
 23270              	.LBE12560:
 23271              	.LBE12559:
 23272              	.LBB12561:
 23273              	.LBI12561:
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 23274              		.loc 34 228 7 is_stmt 1 view .LVU5327
 23275              	.LBB12562:
 23276              	.LBB12563:
 23277              	.LBI12563:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23278              		.loc 19 147 7 view .LVU5328
 23279              	.LBB12564:
 23280              	.LBI12564:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23281              		.loc 20 82 7 view .LVU5329
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23282              		.loc 20 82 7 is_stmt 0 view .LVU5330
 23283              	.LBE12564:
 23284              	.LBE12563:
 23285              	.LBB12565:
 23286              	.LBI12565:
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 23287              		.loc 32 938 7 is_stmt 1 view .LVU5331
 23288              	.LBB12566:
 23289              	.LBI12566:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 824


 23290              		.loc 19 157 2 view .LVU5332
 23291              	.LBB12567:
 23292              	.LBI12567:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23293              		.loc 20 79 7 view .LVU5333
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23294              		.loc 20 79 7 is_stmt 0 view .LVU5334
 23295              	.LBE12567:
 23296              	.LBE12566:
 23297              	.LBB12568:
 23298              	.LBI12568:
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 23299              		.loc 32 714 4 is_stmt 1 view .LVU5335
 23300              	.LBB12569:
 23301              	.LBB12570:
 23302              	.LBI12570:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 23303              		.loc 37 101 5 view .LVU5336
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 23304              		.loc 37 101 5 is_stmt 0 view .LVU5337
 23305              	.LBE12570:
 23306              	.LBB12571:
 23307              	.LBI12571:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23308              		.loc 19 147 7 is_stmt 1 view .LVU5338
 23309              	.LBB12572:
 23310              	.LBI12572:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23311              		.loc 20 82 7 view .LVU5339
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23312              		.loc 20 82 7 is_stmt 0 view .LVU5340
 23313              	.LBE12572:
 23314              	.LBE12571:
 23315              	.LBB12573:
 23316              	.LBI12573:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 23317              		.loc 32 152 7 is_stmt 1 view .LVU5341
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 23318              		.loc 32 152 7 is_stmt 0 view .LVU5342
 23319              	.LBE12573:
 23320              	.LBB12574:
 23321              	.LBI12574:
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 23322              		.loc 32 173 5 is_stmt 1 view .LVU5343
 23323              	.LBB12575:
 23324              	.LBB12576:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 23325              		.loc 32 175 7 view .LVU5344
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 23326              		.loc 32 175 26 is_stmt 0 view .LVU5345
 23327 061c 6F48     		ldr	r0, .L906+44
 23328 061e 0023     		movs	r3, #0
 23329              	.LBE12576:
 23330              	.LBE12575:
 23331              	.LBE12574:
 23332              	.LBE12569:
 23333              	.LBE12568:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 825


 23334              	.LBE12565:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 23335              		.loc 34 232 36 view .LVU5346
 23336 0620 DDAA     		add	r2, sp, #884
 23337 0622 2146     		mov	r1, r4
 23338              	.LBB12586:
 23339              	.LBB12583:
 23340              	.LBB12582:
 23341              	.LBB12581:
 23342              	.LBB12580:
 23343              	.LBB12579:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 23344              		.loc 32 175 26 view .LVU5347
 23345 0624 0371     		strb	r3, [r0, #4]
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 23346              		.loc 32 176 7 is_stmt 1 view .LVU5348
 23347              	.LVL1348:
 23348              	.LBB12577:
 23349              	.LBI12577:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 23350              		.loc 32 206 5 view .LVU5349
 23351              	.LBB12578:
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 23352              		.loc 32 208 7 view .LVU5350
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 23353              		.loc 32 208 27 is_stmt 0 view .LVU5351
 23354 0626 8360     		str	r3, [r0, #8]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 23355              		.loc 32 209 7 is_stmt 1 view .LVU5352
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 23356              		.loc 32 211 21 is_stmt 0 view .LVU5353
 23357 0628 4361     		str	r3, [r0, #20]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 23358              		.loc 32 209 25 view .LVU5354
 23359 062a 031D     		adds	r3, r0, #4
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 23360              		.loc 32 210 26 view .LVU5355
 23361 062c C0E90333 		strd	r3, r3, [r0, #12]
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 23362              		.loc 32 211 7 is_stmt 1 view .LVU5356
 23363              	.LVL1349:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 23364              		.loc 32 211 7 is_stmt 0 view .LVU5357
 23365              	.LBE12578:
 23366              	.LBE12577:
 23367              	.LBE12579:
 23368              	.LBE12580:
 23369              	.LBE12581:
 23370              	.LBE12582:
 23371              	.LBE12583:
 23372              	.LBB12584:
 23373              	.LBI12584:
 23374              		.loc 19 162 7 is_stmt 1 view .LVU5358
 23375              	.LBB12585:
 23376              	.LBI12585:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23377              		.loc 20 89 7 view .LVU5359
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 826


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23378              		.loc 20 89 7 is_stmt 0 view .LVU5360
 23379              	.LBE12585:
 23380              	.LBE12584:
 23381              	.LBE12586:
 23382              	.LBB12587:
 23383              	.LBI12587:
 23384              		.loc 19 162 7 is_stmt 1 view .LVU5361
 23385              	.LBB12588:
 23386              	.LBI12588:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23387              		.loc 20 89 7 view .LVU5362
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23388              		.loc 20 89 7 is_stmt 0 view .LVU5363
 23389              	.LBE12588:
 23390              	.LBE12587:
 23391              	.LBB12589:
 23392              	.LBI12589:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 23393              		.loc 25 75 7 is_stmt 1 view .LVU5364
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 23394              		.loc 25 75 7 is_stmt 0 view .LVU5365
 23395              	.LBE12589:
 23396              	.LBB12590:
 23397              	.LBI12590:
 23398              		.loc 25 79 7 is_stmt 1 view .LVU5366
 23399              		.loc 25 79 7 is_stmt 0 view .LVU5367
 23400              	.LBE12590:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 23401              		.loc 34 232 36 view .LVU5368
 23402 0630 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 23403              	.LVL1350:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 23404              		.loc 34 232 36 view .LVU5369
 23405              	.LBE12562:
 23406              	.LBE12561:
 23407              	.LBB12591:
 23408              	.LBI12591:
 23409              		.loc 19 162 7 is_stmt 1 view .LVU5370
 23410              	.LBB12592:
 23411              	.LBI12592:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23412              		.loc 20 89 7 view .LVU5371
 23413              	.L886:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23414              		.loc 20 89 7 is_stmt 0 view .LVU5372
 23415              	.LBE12592:
 23416              	.LBE12591:
 23417              	.LBB12593:
 23418              	.LBI12593:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 23419              		.loc 33 211 12 is_stmt 1 view .LVU5373
 23420              	.LBB12594:
 23421              	.LBI12594:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23422              		.loc 24 678 7 view .LVU5374
 23423              	.LBB12595:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 827


 23424              	.LBB12596:
 23425              	.LBI12596:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23426              		.loc 24 276 7 view .LVU5375
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23427              		.loc 24 276 7 is_stmt 0 view .LVU5376
 23428              	.LBE12596:
 23429              	.LBB12597:
 23430              	.LBI12597:
 23431              		.loc 26 735 5 is_stmt 1 view .LVU5377
 23432              		.loc 26 735 5 is_stmt 0 view .LVU5378
 23433              	.LBE12597:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23434              		.loc 24 683 7 view .LVU5379
 23435 0634 05F11800 		add	r0, r5, #24
 23436              	.LVL1351:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23437              		.loc 24 683 7 view .LVU5380
 23438 0638 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23439              	.LVL1352:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23440              		.loc 24 683 7 view .LVU5381
 23441              	.LBE12595:
 23442              	.LBE12594:
 23443              	.LBB12598:
 23444              	.LBI12598:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 23445              		.loc 18 657 7 is_stmt 1 view .LVU5382
 23446              	.LBB12599:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 23447              		.loc 18 658 19 is_stmt 0 view .LVU5383
 23448 063c 2846     		mov	r0, r5
 23449 063e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 23450              	.LVL1353:
 23451              	.LBB12600:
 23452              	.LBI12600:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 23453              		.loc 18 150 14 is_stmt 1 view .LVU5384
 23454              	.LBB12601:
 23455              	.LBI12601:
 23456              		.loc 19 162 7 view .LVU5385
 23457              	.LBB12602:
 23458              	.LBI12602:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23459              		.loc 20 89 7 view .LVU5386
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23460              		.loc 20 89 7 is_stmt 0 view .LVU5387
 23461              	.LBE12602:
 23462              	.LBE12601:
 23463              	.LBE12600:
 23464              	.LBE12599:
 23465              	.LBE12598:
 23466              	.LBE12593:
 23467              		.loc 42 138 5 view .LVU5388
 23468 0642 A542     		cmp	r5, r4
 23469 0644 A5F12405 		sub	r5, r5, #36
 23470 0648 F4D1     		bne	.L886
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 828


 23471              	.LVL1354:
 23472              	.LBB12603:
 23473              	.LBI12603:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23474              		.loc 24 678 7 is_stmt 1 view .LVU5389
 23475              	.LBB12604:
 23476              	.LBB12605:
 23477              	.LBI12605:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23478              		.loc 24 276 7 view .LVU5390
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23479              		.loc 24 276 7 is_stmt 0 view .LVU5391
 23480              	.LBE12605:
 23481              	.LBB12606:
 23482              	.LBI12606:
 23483              		.loc 26 735 5 is_stmt 1 view .LVU5392
 23484              		.loc 26 735 5 is_stmt 0 view .LVU5393
 23485              	.LBE12606:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23486              		.loc 24 683 7 view .LVU5394
 23487 064a 58A8     		add	r0, sp, #352
 23488              	.LVL1355:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23489              		.loc 24 683 7 view .LVU5395
 23490              	.LBE12604:
 23491              	.LBE12603:
 139:theory.h      **** 
 140:theory.h      ****     // Maps chord voicings to the scale degrees they contain (in relation to the chord's root note)
 141:theory.h      ****     const std::map<std::string, std::vector<int>> voicingToScaleDegrees {
 142:theory.h      ****         {"Triad",    std::vector<int>{1, 3, 5}},
 23492              		.loc 42 142 46 view .LVU5396
 23493 064c 644E     		ldr	r6, .L906+48
 23494              	.LBB12608:
 23495              	.LBB12607:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23496              		.loc 24 683 7 view .LVU5397
 23497 064e FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23498              	.LVL1356:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23499              		.loc 24 683 7 view .LVU5398
 23500              	.LBE12607:
 23501              	.LBE12608:
 23502              	.LBB12609:
 23503              	.LBI12609:
 23504              		.loc 19 162 7 is_stmt 1 view .LVU5399
 23505              	.LBB12610:
 23506              	.LBI12610:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23507              		.loc 20 89 7 view .LVU5400
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23508              		.loc 20 89 7 is_stmt 0 view .LVU5401
 23509              	.LBE12610:
 23510              	.LBE12609:
 23511              	.LBB12611:
 23512              	.LBI12611:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23513              		.loc 24 678 7 is_stmt 1 view .LVU5402
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 829


 23514              	.LBB12612:
 23515              	.LBB12613:
 23516              	.LBI12613:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23517              		.loc 24 276 7 view .LVU5403
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23518              		.loc 24 276 7 is_stmt 0 view .LVU5404
 23519              	.LBE12613:
 23520              	.LBB12614:
 23521              	.LBI12614:
 23522              		.loc 26 735 5 is_stmt 1 view .LVU5405
 23523              		.loc 26 735 5 is_stmt 0 view .LVU5406
 23524              	.LBE12614:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23525              		.loc 24 683 7 view .LVU5407
 23526 0652 5BA8     		add	r0, sp, #364
 23527              	.LVL1357:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23528              		.loc 24 683 7 view .LVU5408
 23529 0654 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23530              	.LVL1358:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23531              		.loc 24 683 7 view .LVU5409
 23532              	.LBE12612:
 23533              	.LBE12611:
 23534              	.LBB12615:
 23535              	.LBI12615:
 23536              		.loc 19 162 7 is_stmt 1 view .LVU5410
 23537              	.LBB12616:
 23538              	.LBI12616:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23539              		.loc 20 89 7 view .LVU5411
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23540              		.loc 20 89 7 is_stmt 0 view .LVU5412
 23541              	.LBE12616:
 23542              	.LBE12615:
 23543              	.LBB12617:
 23544              	.LBI12617:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23545              		.loc 24 678 7 is_stmt 1 view .LVU5413
 23546              	.LBB12618:
 23547              	.LBB12619:
 23548              	.LBI12619:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23549              		.loc 24 276 7 view .LVU5414
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23550              		.loc 24 276 7 is_stmt 0 view .LVU5415
 23551              	.LBE12619:
 23552              	.LBB12620:
 23553              	.LBI12620:
 23554              		.loc 26 735 5 is_stmt 1 view .LVU5416
 23555              		.loc 26 735 5 is_stmt 0 view .LVU5417
 23556              	.LBE12620:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23557              		.loc 24 683 7 view .LVU5418
 23558 0658 5EA8     		add	r0, sp, #376
 23559              	.LVL1359:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 830


 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23560              		.loc 24 683 7 view .LVU5419
 23561 065a FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23562              	.LVL1360:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23563              		.loc 24 683 7 view .LVU5420
 23564              	.LBE12618:
 23565              	.LBE12617:
 23566              	.LBB12621:
 23567              	.LBI12621:
 23568              		.loc 19 162 7 is_stmt 1 view .LVU5421
 23569              	.LBB12622:
 23570              	.LBI12622:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23571              		.loc 20 89 7 view .LVU5422
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23572              		.loc 20 89 7 is_stmt 0 view .LVU5423
 23573              	.LBE12622:
 23574              	.LBE12621:
 23575              	.LBB12623:
 23576              	.LBI12623:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23577              		.loc 24 678 7 is_stmt 1 view .LVU5424
 23578              	.LBB12624:
 23579              	.LBB12625:
 23580              	.LBI12625:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23581              		.loc 24 276 7 view .LVU5425
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23582              		.loc 24 276 7 is_stmt 0 view .LVU5426
 23583              	.LBE12625:
 23584              	.LBB12626:
 23585              	.LBI12626:
 23586              		.loc 26 735 5 is_stmt 1 view .LVU5427
 23587              		.loc 26 735 5 is_stmt 0 view .LVU5428
 23588              	.LBE12626:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23589              		.loc 24 683 7 view .LVU5429
 23590 065e 61A8     		add	r0, sp, #388
 23591              	.LVL1361:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23592              		.loc 24 683 7 view .LVU5430
 23593 0660 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23594              	.LVL1362:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23595              		.loc 24 683 7 view .LVU5431
 23596              	.LBE12624:
 23597              	.LBE12623:
 23598              	.LBB12627:
 23599              	.LBI12627:
 23600              		.loc 19 162 7 is_stmt 1 view .LVU5432
 23601              	.LBB12628:
 23602              	.LBI12628:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23603              		.loc 20 89 7 view .LVU5433
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23604              		.loc 20 89 7 is_stmt 0 view .LVU5434
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 831


 23605              	.LBE12628:
 23606              	.LBE12627:
 23607              	.LBB12629:
 23608              	.LBI12629:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23609              		.loc 24 678 7 is_stmt 1 view .LVU5435
 23610              	.LBB12630:
 23611              	.LBB12631:
 23612              	.LBI12631:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23613              		.loc 24 276 7 view .LVU5436
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23614              		.loc 24 276 7 is_stmt 0 view .LVU5437
 23615              	.LBE12631:
 23616              	.LBB12632:
 23617              	.LBI12632:
 23618              		.loc 26 735 5 is_stmt 1 view .LVU5438
 23619              		.loc 26 735 5 is_stmt 0 view .LVU5439
 23620              	.LBE12632:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23621              		.loc 24 683 7 view .LVU5440
 23622 0664 64A8     		add	r0, sp, #400
 23623              	.LVL1363:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23624              		.loc 24 683 7 view .LVU5441
 23625 0666 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23626              	.LVL1364:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23627              		.loc 24 683 7 view .LVU5442
 23628              	.LBE12630:
 23629              	.LBE12629:
 23630              	.LBB12633:
 23631              	.LBI12633:
 23632              		.loc 19 162 7 is_stmt 1 view .LVU5443
 23633              	.LBB12634:
 23634              	.LBI12634:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23635              		.loc 20 89 7 view .LVU5444
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23636              		.loc 20 89 7 is_stmt 0 view .LVU5445
 23637              	.LBE12634:
 23638              	.LBE12633:
 23639              	.LBB12635:
 23640              	.LBI12635:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23641              		.loc 24 678 7 is_stmt 1 view .LVU5446
 23642              	.LBB12636:
 23643              	.LBB12637:
 23644              	.LBI12637:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23645              		.loc 24 276 7 view .LVU5447
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23646              		.loc 24 276 7 is_stmt 0 view .LVU5448
 23647              	.LBE12637:
 23648              	.LBB12638:
 23649              	.LBI12638:
 23650              		.loc 26 735 5 is_stmt 1 view .LVU5449
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 832


 23651              		.loc 26 735 5 is_stmt 0 view .LVU5450
 23652              	.LBE12638:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23653              		.loc 24 683 7 view .LVU5451
 23654 066a 4846     		mov	r0, r9
 23655 066c FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23656              	.LVL1365:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23657              		.loc 24 683 7 view .LVU5452
 23658              	.LBE12636:
 23659              	.LBE12635:
 23660              	.LBB12639:
 23661              	.LBI12639:
 23662              		.loc 19 162 7 is_stmt 1 view .LVU5453
 23663              	.LBB12640:
 23664              	.LBI12640:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23665              		.loc 20 89 7 view .LVU5454
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23666              		.loc 20 89 7 is_stmt 0 view .LVU5455
 23667              	.LBE12640:
 23668              	.LBE12639:
 23669              	.LBB12641:
 23670              	.LBI12641:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 23671              		.loc 24 678 7 is_stmt 1 view .LVU5456
 23672              	.LBB12642:
 23673              	.LBB12643:
 23674              	.LBI12643:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23675              		.loc 24 276 7 view .LVU5457
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 23676              		.loc 24 276 7 is_stmt 0 view .LVU5458
 23677              	.LBE12643:
 23678              	.LBB12644:
 23679              	.LBI12644:
 23680              		.loc 26 735 5 is_stmt 1 view .LVU5459
 23681              		.loc 26 735 5 is_stmt 0 view .LVU5460
 23682              	.LBE12644:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23683              		.loc 24 683 7 view .LVU5461
 23684 0670 6AA8     		add	r0, sp, #424
 23685              	.LVL1366:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23686              		.loc 24 683 7 view .LVU5462
 23687 0672 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 23688              	.LVL1367:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 23689              		.loc 24 683 7 view .LVU5463
 23690              	.LBE12642:
 23691              	.LBE12641:
 23692              	.LBB12645:
 23693              	.LBI12645:
 23694              		.loc 19 162 7 is_stmt 1 view .LVU5464
 23695              	.LBB12646:
 23696              	.LBI12646:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 833


 23697              		.loc 20 89 7 view .LVU5465
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23698              		.loc 20 89 7 is_stmt 0 view .LVU5466
 23699              	.LBE12646:
 23700              	.LBE12645:
 130:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 23701              		.loc 42 130 51 view .LVU5467
 23702 0676 524A     		ldr	r2, .L906+16
 23703 0678 5A49     		ldr	r1, .L906+52
 23704              		.loc 42 142 46 view .LVU5468
 23705 067a 4FF0030A 		mov	r10, #3
 130:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 23706              		.loc 42 130 51 view .LVU5469
 23707 067e 5748     		ldr	r0, .L906+44
 143:theory.h      ****         {"Triad+",   std::vector<int>{1, 3, 5, 8}},
 23708              		.loc 42 143 49 view .LVU5470
 23709 0680 4FF0040B 		mov	fp, #4
 130:theory.h      ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 23710              		.loc 42 130 51 view .LVU5471
 23711 0684 FFF7FEFF 		bl	__aeabi_atexit
 23712              	.LVL1368:
 142:theory.h      ****         {"Triad+",   std::vector<int>{1, 3, 5, 8}},
 23713              		.loc 42 142 46 view .LVU5472
 23714 0688 1DAB     		add	r3, sp, #116
 23715 068a 0DF24C45 		addw	r5, sp, #1100
 23716 068e 96E80700 		ldm	r6, {r0, r1, r2}
 23717 0692 CDE91D9A 		strd	r9, r10, [sp, #116]
 23718              	.LVL1369:
 23719              	.LBB12647:
 23720              	.LBI12647:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23721              		.loc 19 144 7 is_stmt 1 view .LVU5473
 23722              	.LBB12648:
 23723              	.LBI12648:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23724              		.loc 20 79 7 view .LVU5474
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23725              		.loc 20 79 7 is_stmt 0 view .LVU5475
 23726              	.LBE12648:
 23727              	.LBE12647:
 142:theory.h      ****         {"Triad+",   std::vector<int>{1, 3, 5, 8}},
 23728              		.loc 42 142 46 view .LVU5476
 23729 0696 89E80700 		stm	r9, {r0, r1, r2}
 23730 069a 93E80600 		ldm	r3, {r1, r2}
 23731 069e 6AA8     		add	r0, sp, #424
 144:theory.h      ****         {"7th",      std::vector<int>{1, 3, 5, 7}},
 145:theory.h      ****         {"7th+",     std::vector<int>{1, 3, 5, 7, 8}}, // TODO: bug when switching from 7th to 7th+
 23732              		.loc 42 145 52 view .LVU5477
 23733 06a0 0DF15C09 		add	r9, sp, #92
 142:theory.h      ****         {"Triad+",   std::vector<int>{1, 3, 5, 8}},
 23734              		.loc 42 142 46 view .LVU5478
 23735 06a4 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23736              	.LVL1370:
 146:theory.h      ****         {"9th",      std::vector<int>{1, 3, 5, 7, 9}},
 147:theory.h      ****         {"11th",     std::vector<int>{1, 3, 5, 7, 9, 11}}, // TODO: bug when switching from 13th to
 148:theory.h      ****         {"13th",     std::vector<int>{1, 3, 5, 7, 9, 11, 13}},
 149:theory.h      ****         {"6th",      std::vector<int>{1, 3, 5, 6}},
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 834


 150:theory.h      ****         {"Sus2",     std::vector<int>{1, 2, 5}},
 151:theory.h      ****         {"Sus4",     std::vector<int>{1, 4, 5}},
 152:theory.h      ****         // disabled til its bug is fixed
 153:theory.h      ****         //{"Kenny B.", std::vector<int>{1, 5, 9, 10, 14, 18}}, 
 154:theory.h      ****         {"Power",    std::vector<int>{1, 5}},
 155:theory.h      ****         {"Power+",   std::vector<int>{1, 5, 8}},
 156:theory.h      ****         {"Shell 1",  std::vector<int>{1, 7, 10}},
 157:theory.h      ****         {"Shell 2",  std::vector<int>{1, 10, 14}},
 158:theory.h      ****     };
 23737              		.loc 42 158 5 view .LVU5479
 23738 06a8 6AAA     		add	r2, sp, #424
 23739 06aa 4F49     		ldr	r1, .L906+56
 23740 06ac 2046     		mov	r0, r4
 23741 06ae FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 23742              	.LVL1371:
 143:theory.h      ****         {"7th",      std::vector<int>{1, 3, 5, 7}},
 23743              		.loc 42 143 49 view .LVU5480
 23744 06b2 06F10C03 		add	r3, r6, #12
 23745 06b6 7BAA     		add	r2, sp, #492
 23746 06b8 0DF16C0C 		add	ip, sp, #108
 23747 06bc 0DF5F67E 		add	lr, sp, #492
 23748 06c0 CDE91B2B 		strd	r2, fp, [sp, #108]
 23749              	.LVL1372:
 23750              	.LBB12649:
 23751              	.LBI12649:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23752              		.loc 19 144 7 is_stmt 1 view .LVU5481
 23753              	.LBB12650:
 23754              	.LBI12650:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23755              		.loc 20 79 7 view .LVU5482
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23756              		.loc 20 79 7 is_stmt 0 view .LVU5483
 23757              	.LBE12650:
 23758              	.LBE12649:
 143:theory.h      ****         {"7th",      std::vector<int>{1, 3, 5, 7}},
 23759              		.loc 42 143 49 view .LVU5484
 23760 06c4 0FCB     		ldm	r3, {r0, r1, r2, r3}
 23761 06c6 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 23762 06ca 9CE80600 		ldm	ip, {r1, r2}
 23763 06ce 64A8     		add	r0, sp, #400
 23764 06d0 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23765              	.LVL1373:
 23766              		.loc 42 158 5 view .LVU5485
 23767 06d4 64AA     		add	r2, sp, #400
 23768 06d6 4549     		ldr	r1, .L906+60
 23769 06d8 A7A8     		add	r0, sp, #668
 23770 06da FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 23771              	.LVL1374:
 144:theory.h      ****         {"7th+",     std::vector<int>{1, 3, 5, 7, 8}}, // TODO: bug when switching from 7th to 7th+
 23772              		.loc 42 144 49 view .LVU5486
 23773 06de 06F11C03 		add	r3, r6, #28
 23774 06e2 74AA     		add	r2, sp, #464
 23775 06e4 0DF1640C 		add	ip, sp, #100
 23776 06e8 0DF5E87E 		add	lr, sp, #464
 23777 06ec CDE9192B 		strd	r2, fp, [sp, #100]
 23778              	.LVL1375:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 835


 23779              	.LBB12651:
 23780              	.LBI12651:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23781              		.loc 19 144 7 is_stmt 1 view .LVU5487
 23782              	.LBB12652:
 23783              	.LBI12652:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23784              		.loc 20 79 7 view .LVU5488
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23785              		.loc 20 79 7 is_stmt 0 view .LVU5489
 23786              	.LBE12652:
 23787              	.LBE12651:
 144:theory.h      ****         {"7th+",     std::vector<int>{1, 3, 5, 7, 8}}, // TODO: bug when switching from 7th to 7th+
 23788              		.loc 42 144 49 view .LVU5490
 23789 06f0 0FCB     		ldm	r3, {r0, r1, r2, r3}
 23790 06f2 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 23791 06f6 9CE80600 		ldm	ip, {r1, r2}
 23792 06fa 61A8     		add	r0, sp, #388
 23793 06fc FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23794              	.LVL1376:
 23795              		.loc 42 158 5 view .LVU5491
 23796 0700 61AA     		add	r2, sp, #388
 23797 0702 3B49     		ldr	r1, .L906+64
 23798 0704 B0A8     		add	r0, sp, #704
 23799 0706 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA4_KcS9_L
 23800              	.LVL1377:
 145:theory.h      ****         {"9th",      std::vector<int>{1, 3, 5, 7, 9}},
 23801              		.loc 42 145 52 view .LVU5492
 23802 070a 89AB     		add	r3, sp, #548
 23803 070c 06F12C0E 		add	lr, r6, #44
 23804 0710 0DF5097C 		add	ip, sp, #548
 23805 0714 1793     		str	r3, [sp, #92]
 23806 0716 0523     		movs	r3, #5
 23807 0718 1893     		str	r3, [sp, #96]
 23808              	.LVL1378:
 23809              	.LBB12653:
 23810              	.LBI12653:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23811              		.loc 19 144 7 is_stmt 1 view .LVU5493
 23812              	.LBB12654:
 23813              	.LBI12654:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23814              		.loc 20 79 7 view .LVU5494
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23815              		.loc 20 79 7 is_stmt 0 view .LVU5495
 23816              	.LBE12654:
 23817              	.LBE12653:
 145:theory.h      ****         {"9th",      std::vector<int>{1, 3, 5, 7, 9}},
 23818              		.loc 42 145 52 view .LVU5496
 23819 071a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23820 071e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23821 0722 DEF80030 		ldr	r3, [lr]
 23822 0726 5EA8     		add	r0, sp, #376
 23823 0728 99E80600 		ldm	r9, {r1, r2}
 23824 072c CCF80030 		str	r3, [ip]
 146:theory.h      ****         {"11th",     std::vector<int>{1, 3, 5, 7, 9, 11}}, // TODO: bug when switching from 13th to
 23825              		.loc 42 146 52 view .LVU5497
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 836


 23826 0730 0DF15409 		add	r9, sp, #84
 145:theory.h      ****         {"9th",      std::vector<int>{1, 3, 5, 7, 9}},
 23827              		.loc 42 145 52 view .LVU5498
 23828 0734 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23829              	.LVL1379:
 23830              		.loc 42 158 5 view .LVU5499
 23831 0738 5EAA     		add	r2, sp, #376
 23832 073a 2E49     		ldr	r1, .L906+68
 23833 073c B9A8     		add	r0, sp, #740
 23834 073e FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 23835              	.LVL1380:
 146:theory.h      ****         {"11th",     std::vector<int>{1, 3, 5, 7, 9, 11}}, // TODO: bug when switching from 13th to
 23836              		.loc 42 146 52 view .LVU5500
 23837 0742 82AB     		add	r3, sp, #520
 23838 0744 06F1400E 		add	lr, r6, #64
 23839 0748 0DF5027C 		add	ip, sp, #520
 23840 074c 1593     		str	r3, [sp, #84]
 23841 074e 0523     		movs	r3, #5
 23842 0750 1693     		str	r3, [sp, #88]
 23843              	.LVL1381:
 23844              	.LBB12655:
 23845              	.LBI12655:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23846              		.loc 19 144 7 is_stmt 1 view .LVU5501
 23847              	.LBB12656:
 23848              	.LBI12656:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23849              		.loc 20 79 7 view .LVU5502
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23850              		.loc 20 79 7 is_stmt 0 view .LVU5503
 23851              	.LBE12656:
 23852              	.LBE12655:
 146:theory.h      ****         {"11th",     std::vector<int>{1, 3, 5, 7, 9, 11}}, // TODO: bug when switching from 13th to
 23853              		.loc 42 146 52 view .LVU5504
 23854 0752 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23855 0756 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23856 075a DEF80030 		ldr	r3, [lr]
 23857 075e 5BA8     		add	r0, sp, #364
 23858 0760 99E80600 		ldm	r9, {r1, r2}
 23859 0764 CCF80030 		str	r3, [ip]
 147:theory.h      ****         {"13th",     std::vector<int>{1, 3, 5, 7, 9, 11, 13}},
 23860              		.loc 42 147 56 view .LVU5505
 23861 0768 0DF14C09 		add	r9, sp, #76
 146:theory.h      ****         {"11th",     std::vector<int>{1, 3, 5, 7, 9, 11}}, // TODO: bug when switching from 13th to
 23862              		.loc 42 146 52 view .LVU5506
 23863 076c FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23864              	.LVL1382:
 23865              		.loc 42 158 5 view .LVU5507
 23866 0770 5BAA     		add	r2, sp, #364
 23867 0772 2149     		ldr	r1, .L906+72
 23868 0774 C2A8     		add	r0, sp, #776
 23869 0776 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA4_KcS9_L
 23870              	.LVL1383:
 147:theory.h      ****         {"13th",     std::vector<int>{1, 3, 5, 7, 9, 11, 13}},
 23871              		.loc 42 147 56 view .LVU5508
 23872 077a 06F1540E 		add	lr, r6, #84
 23873 077e 0623     		movs	r3, #6
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 837


 23874 0780 C446     		mov	ip, r8
 23875 0782 CDF84C80 		str	r8, [sp, #76]
 23876 0786 1493     		str	r3, [sp, #80]
 23877              	.LVL1384:
 23878              	.LBB12657:
 23879              	.LBI12657:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23880              		.loc 19 144 7 is_stmt 1 view .LVU5509
 23881              	.LBB12658:
 23882              	.LBI12658:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23883              		.loc 20 79 7 view .LVU5510
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23884              		.loc 20 79 7 is_stmt 0 view .LVU5511
 23885              	.LBE12658:
 23886              	.LBE12657:
 147:theory.h      ****         {"13th",     std::vector<int>{1, 3, 5, 7, 9, 11, 13}},
 23887              		.loc 42 147 56 view .LVU5512
 23888 0788 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23889 078c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23890 0790 9EE80300 		ldm	lr, {r0, r1}
 23891 0794 8CE80300 		stm	ip, {r0, r1}
 23892 0798 99E80600 		ldm	r9, {r1, r2}
 23893 079c 58A8     		add	r0, sp, #352
 148:theory.h      ****         {"6th",      std::vector<int>{1, 3, 5, 6}},
 23894              		.loc 42 148 60 view .LVU5513
 23895 079e 0DF14409 		add	r9, sp, #68
 147:theory.h      ****         {"13th",     std::vector<int>{1, 3, 5, 7, 9, 11, 13}},
 23896              		.loc 42 147 56 view .LVU5514
 23897 07a2 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23898              	.LVL1385:
 23899              		.loc 42 158 5 view .LVU5515
 23900 07a6 58AA     		add	r2, sp, #352
 23901 07a8 1449     		ldr	r1, .L906+76
 23902 07aa CBA8     		add	r0, sp, #812
 23903 07ac 28E0     		b	.L907
 23904              	.L908:
 23905 07ae 00BF     		.align	2
 23906              	.L906:
 23907 07b0 44010000 		.word	.LC109
 23908 07b4 4C010000 		.word	.LC110
 23909 07b8 00000000 		.word	.LANCHOR24
 23910 07bc 00000000 		.word	.LANCHOR29
 23911 07c0 00000000 		.word	__dso_handle
 23912 07c4 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 23913 07c8 1C010000 		.word	.LC104
 23914 07cc 24010000 		.word	.LC105
 23915 07d0 2C010000 		.word	.LC106
 23916 07d4 34010000 		.word	.LC107
 23917 07d8 3C010000 		.word	.LC108
 23918 07dc 00000000 		.word	.LANCHOR30
 23919 07e0 C4000000 		.word	.LANCHOR29+196
 23920 07e4 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 23921 07e8 54010000 		.word	.LC111
 23922 07ec 5C010000 		.word	.LC112
 23923 07f0 64010000 		.word	.LC113
 23924 07f4 68010000 		.word	.LC114
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 838


 23925 07f8 70010000 		.word	.LC115
 23926 07fc 74010000 		.word	.LC116
 23927              	.L907:
 23928 0800 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 23929              	.LVL1386:
 148:theory.h      ****         {"6th",      std::vector<int>{1, 3, 5, 6}},
 23930              		.loc 42 148 60 view .LVU5516
 23931 0804 06F16C0E 		add	lr, r6, #108
 23932 0808 0723     		movs	r3, #7
 23933 080a BC46     		mov	ip, r7
 23934 080c C9F80070 		str	r7, [r9]
 23935 0810 C9F80430 		str	r3, [r9, #4]
 23936              	.LVL1387:
 23937              	.LBB12659:
 23938              	.LBI12659:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23939              		.loc 19 144 7 is_stmt 1 view .LVU5517
 23940              	.LBB12660:
 23941              	.LBI12660:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23942              		.loc 20 79 7 view .LVU5518
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23943              		.loc 20 79 7 is_stmt 0 view .LVU5519
 23944              	.LBE12660:
 23945              	.LBE12659:
 148:theory.h      ****         {"6th",      std::vector<int>{1, 3, 5, 6}},
 23946              		.loc 42 148 60 view .LVU5520
 23947 0814 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 23948 0818 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 23949 081c 9EE80700 		ldm	lr, {r0, r1, r2}
 23950 0820 8CE80700 		stm	ip, {r0, r1, r2}
 23951 0824 99E80600 		ldm	r9, {r1, r2}
 23952 0828 55A8     		add	r0, sp, #340
 23953 082a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23954              	.LVL1388:
 23955              		.loc 42 158 5 view .LVU5521
 23956 082e 55AA     		add	r2, sp, #340
 23957 0830 BA49     		ldr	r1, .L909
 23958 0832 D4A8     		add	r0, sp, #848
 23959 0834 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 23960              	.LVL1389:
 149:theory.h      ****         {"Sus2",     std::vector<int>{1, 2, 5}},
 23961              		.loc 42 149 49 view .LVU5522
 23962 0838 06F18803 		add	r3, r6, #136
 23963 083c 6DAA     		add	r2, sp, #436
 23964 083e 0DF5DA7E 		add	lr, sp, #436
 23965 0842 0DF13C0C 		add	ip, sp, #60
 23966 0846 CDF840B0 		str	fp, [sp, #64]
 23967              	.LVL1390:
 23968              	.LBB12661:
 23969              	.LBI12661:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23970              		.loc 19 144 7 is_stmt 1 view .LVU5523
 23971              	.LBB12662:
 23972              	.LBI12662:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23973              		.loc 20 79 7 view .LVU5524
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 839


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 23974              		.loc 20 79 7 is_stmt 0 view .LVU5525
 23975              	.LBE12662:
 23976              	.LBE12661:
 149:theory.h      ****         {"Sus2",     std::vector<int>{1, 2, 5}},
 23977              		.loc 42 149 49 view .LVU5526
 23978 084a 0F92     		str	r2, [sp, #60]
 23979 084c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 23980 084e 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 23981 0852 9CE80600 		ldm	ip, {r1, r2}
 23982 0856 52A8     		add	r0, sp, #328
 23983 0858 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 23984              	.LVL1391:
 23985              		.loc 42 158 5 view .LVU5527
 23986 085c 52AA     		add	r2, sp, #328
 23987 085e B049     		ldr	r1, .L909+4
 23988 0860 DDA8     		add	r0, sp, #884
 23989 0862 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA4_KcS9_L
 23990              	.LVL1392:
 150:theory.h      ****         {"Sus4",     std::vector<int>{1, 4, 5}},
 23991              		.loc 42 150 46 view .LVU5528
 23992 0866 06F19802 		add	r2, r6, #152
 23993 086a 0DF5987C 		add	ip, sp, #304
 23994 086e 0DAB     		add	r3, sp, #52
 23995 0870 CDF838A0 		str	r10, [sp, #56]
 23996              	.LVL1393:
 23997              	.LBB12663:
 23998              	.LBI12663:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 23999              		.loc 19 144 7 is_stmt 1 view .LVU5529
 24000              	.LBB12664:
 24001              	.LBI12664:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24002              		.loc 20 79 7 view .LVU5530
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24003              		.loc 20 79 7 is_stmt 0 view .LVU5531
 24004              	.LBE12664:
 24005              	.LBE12663:
 150:theory.h      ****         {"Sus4",     std::vector<int>{1, 4, 5}},
 24006              		.loc 42 150 46 view .LVU5532
 24007 0874 CDF834C0 		str	ip, [sp, #52]
 24008 0878 07CA     		ldm	r2, {r0, r1, r2}
 24009 087a 8CE80700 		stm	ip, {r0, r1, r2}
 24010 087e 93E80600 		ldm	r3, {r1, r2}
 24011 0882 4FA8     		add	r0, sp, #316
 24012 0884 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24013              	.LVL1394:
 24014              		.loc 42 158 5 view .LVU5533
 24015 0888 4FAA     		add	r2, sp, #316
 24016 088a A649     		ldr	r1, .L909+8
 24017 088c E6A8     		add	r0, sp, #920
 24018 088e FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 24019              	.LVL1395:
 151:theory.h      ****         // disabled til its bug is fixed
 24020              		.loc 42 151 46 view .LVU5534
 24021 0892 06F1A402 		add	r2, r6, #164
 24022 0896 0DF58C7C 		add	ip, sp, #280
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 840


 24023 089a 0BAB     		add	r3, sp, #44
 24024 089c CDF830A0 		str	r10, [sp, #48]
 24025              	.LVL1396:
 24026              	.LBB12665:
 24027              	.LBI12665:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24028              		.loc 19 144 7 is_stmt 1 view .LVU5535
 24029              	.LBB12666:
 24030              	.LBI12666:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24031              		.loc 20 79 7 view .LVU5536
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24032              		.loc 20 79 7 is_stmt 0 view .LVU5537
 24033              	.LBE12666:
 24034              	.LBE12665:
 151:theory.h      ****         // disabled til its bug is fixed
 24035              		.loc 42 151 46 view .LVU5538
 24036 08a0 CDF82CC0 		str	ip, [sp, #44]
 24037 08a4 07CA     		ldm	r2, {r0, r1, r2}
 24038 08a6 8CE80700 		stm	ip, {r0, r1, r2}
 24039 08aa 93E80600 		ldm	r3, {r1, r2}
 24040 08ae 49A8     		add	r0, sp, #292
 24041 08b0 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24042              	.LVL1397:
 24043              		.loc 42 158 5 view .LVU5539
 24044 08b4 49AA     		add	r2, sp, #292
 24045 08b6 9C49     		ldr	r1, .L909+12
 24046 08b8 EFA8     		add	r0, sp, #956
 24047 08ba FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_L
 24048              	.LVL1398:
 154:theory.h      ****         {"Power+",   std::vector<int>{1, 5, 8}},
 24049              		.loc 42 154 43 view .LVU5540
 24050 08be 0523     		movs	r3, #5
 24051 08c0 0221     		movs	r1, #2
 24052 08c2 07AA     		add	r2, sp, #28
 24053 08c4 0893     		str	r3, [sp, #32]
 24054 08c6 09AB     		add	r3, sp, #36
 24055 08c8 0A91     		str	r1, [sp, #40]
 24056              	.LVL1399:
 24057              	.LBB12667:
 24058              	.LBI12667:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24059              		.loc 19 144 7 is_stmt 1 view .LVU5541
 24060              	.LBB12668:
 24061              	.LBI12668:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24062              		.loc 20 79 7 view .LVU5542
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24063              		.loc 20 79 7 is_stmt 0 view .LVU5543
 24064              	.LBE12668:
 24065              	.LBE12667:
 154:theory.h      ****         {"Power+",   std::vector<int>{1, 5, 8}},
 24066              		.loc 42 154 43 view .LVU5544
 24067 08ca 0121     		movs	r1, #1
 24068 08cc 43A8     		add	r0, sp, #268
 24069 08ce 0992     		str	r2, [sp, #36]
 24070 08d0 0791     		str	r1, [sp, #28]
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 841


 24071 08d2 93E80600 		ldm	r3, {r1, r2}
 24072 08d6 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24073              	.LVL1400:
 24074              		.loc 42 158 5 view .LVU5545
 24075 08da 43AA     		add	r2, sp, #268
 24076 08dc 9349     		ldr	r1, .L909+16
 24077 08de F8A8     		add	r0, sp, #992
 24078 08e0 FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_L
 24079              	.LVL1401:
 155:theory.h      ****         {"Shell 1",  std::vector<int>{1, 7, 10}},
 24080              		.loc 42 155 46 view .LVU5546
 24081 08e4 06F1B002 		add	r2, r6, #176
 24082 08e8 0DF1F40C 		add	ip, sp, #244
 24083 08ec 05AB     		add	r3, sp, #20
 24084 08ee CDF818A0 		str	r10, [sp, #24]
 24085              	.LVL1402:
 24086              	.LBB12669:
 24087              	.LBI12669:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24088              		.loc 19 144 7 is_stmt 1 view .LVU5547
 24089              	.LBB12670:
 24090              	.LBI12670:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24091              		.loc 20 79 7 view .LVU5548
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24092              		.loc 20 79 7 is_stmt 0 view .LVU5549
 24093              	.LBE12670:
 24094              	.LBE12669:
 155:theory.h      ****         {"Shell 1",  std::vector<int>{1, 7, 10}},
 24095              		.loc 42 155 46 view .LVU5550
 24096 08f2 CDF814C0 		str	ip, [sp, #20]
 24097 08f6 07CA     		ldm	r2, {r0, r1, r2}
 24098 08f8 8CE80700 		stm	ip, {r0, r1, r2}
 24099 08fc 93E80600 		ldm	r3, {r1, r2}
 24100 0900 40A8     		add	r0, sp, #256
 24101 0902 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24102              	.LVL1403:
 24103              		.loc 42 158 5 view .LVU5551
 24104 0906 40AA     		add	r2, sp, #256
 24105 0908 8949     		ldr	r1, .L909+20
 24106 090a 0DF20440 		addw	r0, sp, #1028
 24107 090e FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_L
 24108              	.LVL1404:
 156:theory.h      ****         {"Shell 2",  std::vector<int>{1, 10, 14}},
 24109              		.loc 42 156 47 view .LVU5552
 24110 0912 06F1BC02 		add	r2, r6, #188
 24111 0916 0DF1DC0C 		add	ip, sp, #220
 24112 091a 03AB     		add	r3, sp, #12
 24113 091c CDF810A0 		str	r10, [sp, #16]
 24114              	.LVL1405:
 24115              	.LBB12671:
 24116              	.LBI12671:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24117              		.loc 19 144 7 is_stmt 1 view .LVU5553
 24118              	.LBB12672:
 24119              	.LBI12672:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 842


 24120              		.loc 20 79 7 view .LVU5554
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24121              		.loc 20 79 7 is_stmt 0 view .LVU5555
 24122              	.LBE12672:
 24123              	.LBE12671:
 157:theory.h      ****     };
 24124              		.loc 42 157 48 view .LVU5556
 24125 0920 C836     		adds	r6, r6, #200
 156:theory.h      ****         {"Shell 2",  std::vector<int>{1, 10, 14}},
 24126              		.loc 42 156 47 view .LVU5557
 24127 0922 CDF80CC0 		str	ip, [sp, #12]
 24128 0926 07CA     		ldm	r2, {r0, r1, r2}
 24129 0928 8CE80700 		stm	ip, {r0, r1, r2}
 24130 092c 93E80600 		ldm	r3, {r1, r2}
 24131 0930 3AA8     		add	r0, sp, #232
 24132 0932 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24133              	.LVL1406:
 24134              		.loc 42 158 5 view .LVU5558
 24135 0936 3AAA     		add	r2, sp, #232
 24136 0938 7E49     		ldr	r1, .L909+24
 24137 093a 0DF58560 		add	r0, sp, #1064
 24138 093e FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA8_KcS9_L
 24139              	.LVL1407:
 157:theory.h      ****     };
 24140              		.loc 42 157 48 view .LVU5559
 24141 0942 0DEB0B03 		add	r3, sp, fp
 24142 0946 0DF1C40C 		add	ip, sp, #196
 24143 094a C3F804A0 		str	r10, [r3, #4]
 24144              	.LVL1408:
 24145              	.LBB12673:
 24146              	.LBI12673:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24147              		.loc 19 144 7 is_stmt 1 view .LVU5560
 24148              	.LBB12674:
 24149              	.LBI12674:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24150              		.loc 20 79 7 view .LVU5561
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24151              		.loc 20 79 7 is_stmt 0 view .LVU5562
 24152              	.LBE12674:
 24153              	.LBE12673:
 157:theory.h      ****     };
 24154              		.loc 42 157 48 view .LVU5563
 24155 094e C3F800C0 		str	ip, [r3]
 24156 0952 96E80700 		ldm	r6, {r0, r1, r2}
 24157 0956 8CE80700 		stm	ip, {r0, r1, r2}
 24158 095a 93E80600 		ldm	r3, {r1, r2}
 24159 095e 34A8     		add	r0, sp, #208
 24160 0960 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
 24161              	.LVL1409:
 24162              		.loc 42 158 5 view .LVU5564
 24163 0964 34AA     		add	r2, sp, #208
 24164 0966 7449     		ldr	r1, .L909+28
 24165 0968 2846     		mov	r0, r5
 24166 096a FFF7FEFF 		bl	_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA8_KcS9_L
 24167              	.LVL1410:
 24168              	.LBB12675:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 843


 24169              	.LBI12675:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24170              		.loc 19 144 7 is_stmt 1 view .LVU5565
 24171              	.LBB12676:
 24172              	.LBI12676:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24173              		.loc 20 79 7 view .LVU5566
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24174              		.loc 20 79 7 is_stmt 0 view .LVU5567
 24175              	.LBE12676:
 24176              	.LBE12675:
 24177              	.LBB12677:
 24178              	.LBI12677:
 228:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 	  const _Compare& __comp = _Compare(),
 24179              		.loc 34 228 7 is_stmt 1 view .LVU5568
 24180              	.LBB12678:
 24181              	.LBB12679:
 24182              	.LBI12679:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24183              		.loc 19 147 7 view .LVU5569
 24184              	.LBB12680:
 24185              	.LBI12680:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24186              		.loc 20 82 7 view .LVU5570
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24187              		.loc 20 82 7 is_stmt 0 view .LVU5571
 24188              	.LBE12680:
 24189              	.LBE12679:
 24190              	.LBB12681:
 24191              	.LBI12681:
 938:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 24192              		.loc 32 938 7 is_stmt 1 view .LVU5572
 24193              	.LBB12682:
 24194              	.LBI12682:
 157:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24195              		.loc 19 157 2 view .LVU5573
 24196              	.LBB12683:
 24197              	.LBI12683:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24198              		.loc 20 79 7 view .LVU5574
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24199              		.loc 20 79 7 is_stmt 0 view .LVU5575
 24200              	.LBE12683:
 24201              	.LBE12682:
 24202              	.LBB12684:
 24203              	.LBI12684:
 714:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 24204              		.loc 32 714 4 is_stmt 1 view .LVU5576
 24205              	.LBB12685:
 24206              	.LBB12686:
 24207              	.LBI12686:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 24208              		.loc 37 101 5 view .LVU5577
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 24209              		.loc 37 101 5 is_stmt 0 view .LVU5578
 24210              	.LBE12686:
 24211              	.LBB12687:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 844


 24212              	.LBI12687:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24213              		.loc 19 147 7 is_stmt 1 view .LVU5579
 24214              	.LBB12688:
 24215              	.LBI12688:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24216              		.loc 20 82 7 view .LVU5580
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24217              		.loc 20 82 7 is_stmt 0 view .LVU5581
 24218              	.LBE12688:
 24219              	.LBE12687:
 24220              	.LBB12689:
 24221              	.LBI12689:
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 24222              		.loc 32 152 7 is_stmt 1 view .LVU5582
 152:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       : _M_key_compare(__comp)
 24223              		.loc 32 152 7 is_stmt 0 view .LVU5583
 24224              	.LBE12689:
 24225              	.LBB12690:
 24226              	.LBI12690:
 173:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 24227              		.loc 32 173 5 is_stmt 1 view .LVU5584
 24228              	.LBB12691:
 24229              	.LBB12692:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 24230              		.loc 32 175 7 view .LVU5585
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 24231              		.loc 32 175 26 is_stmt 0 view .LVU5586
 24232 096e 7348     		ldr	r0, .L909+32
 24233 0970 0023     		movs	r3, #0
 24234              	.LBE12692:
 24235              	.LBE12691:
 24236              	.LBE12690:
 24237              	.LBE12685:
 24238              	.LBE12684:
 24239              	.LBE12681:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 24240              		.loc 34 232 36 view .LVU5587
 24241 0972 0DF58E62 		add	r2, sp, #1136
 24242 0976 2146     		mov	r1, r4
 24243              	.LBB12702:
 24244              	.LBB12699:
 24245              	.LBB12698:
 24246              	.LBB12697:
 24247              	.LBB12696:
 24248              	.LBB12695:
 175:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_reset();
 24249              		.loc 32 175 26 view .LVU5588
 24250 0978 0371     		strb	r3, [r0, #4]
 176:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 24251              		.loc 32 176 7 is_stmt 1 view .LVU5589
 24252              	.LVL1411:
 24253              	.LBB12693:
 24254              	.LBI12693:
 206:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     {
 24255              		.loc 32 206 5 view .LVU5590
 24256              	.LBB12694:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 845


 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 24257              		.loc 32 208 7 view .LVU5591
 208:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_left = &_M_header;
 24258              		.loc 32 208 27 is_stmt 0 view .LVU5592
 24259 097a 8360     		str	r3, [r0, #8]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 24260              		.loc 32 209 7 is_stmt 1 view .LVU5593
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 24261              		.loc 32 211 21 is_stmt 0 view .LVU5594
 24262 097c 4361     		str	r3, [r0, #20]
 209:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_header._M_right = &_M_header;
 24263              		.loc 32 209 25 view .LVU5595
 24264 097e 00EB0B03 		add	r3, r0, fp
 210:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****       _M_node_count = 0;
 24265              		.loc 32 210 26 view .LVU5596
 24266 0982 C0E90333 		strd	r3, r3, [r0, #12]
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 24267              		.loc 32 211 7 is_stmt 1 view .LVU5597
 24268              	.LVL1412:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_tree.h ****     }
 24269              		.loc 32 211 7 is_stmt 0 view .LVU5598
 24270              	.LBE12694:
 24271              	.LBE12693:
 24272              	.LBE12695:
 24273              	.LBE12696:
 24274              	.LBE12697:
 24275              	.LBE12698:
 24276              	.LBE12699:
 24277              	.LBB12700:
 24278              	.LBI12700:
 24279              		.loc 19 162 7 is_stmt 1 view .LVU5599
 24280              	.LBB12701:
 24281              	.LBI12701:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24282              		.loc 20 89 7 view .LVU5600
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24283              		.loc 20 89 7 is_stmt 0 view .LVU5601
 24284              	.LBE12701:
 24285              	.LBE12700:
 24286              	.LBE12702:
 24287              	.LBB12703:
 24288              	.LBI12703:
 24289              		.loc 19 162 7 is_stmt 1 view .LVU5602
 24290              	.LBB12704:
 24291              	.LBI12704:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24292              		.loc 20 89 7 view .LVU5603
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24293              		.loc 20 89 7 is_stmt 0 view .LVU5604
 24294              	.LBE12704:
 24295              	.LBE12703:
 24296              	.LBB12705:
 24297              	.LBI12705:
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 24298              		.loc 25 75 7 is_stmt 1 view .LVU5605
  75:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 24299              		.loc 25 75 7 is_stmt 0 view .LVU5606
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 846


 24300              	.LBE12705:
 24301              	.LBB12706:
 24302              	.LBI12706:
 24303              		.loc 25 79 7 is_stmt 1 view .LVU5607
 24304              		.loc 25 79 7 is_stmt 0 view .LVU5608
 24305              	.LBE12706:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 24306              		.loc 34 232 36 view .LVU5609
 24307 0986 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 24308              	.LVL1413:
 232:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_map.h **** 
 24309              		.loc 34 232 36 view .LVU5610
 24310              	.LBE12678:
 24311              	.LBE12677:
 24312              	.LBB12707:
 24313              	.LBI12707:
 24314              		.loc 19 162 7 is_stmt 1 view .LVU5611
 24315              	.LBB12708:
 24316              	.LBI12708:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24317              		.loc 20 89 7 view .LVU5612
 24318              	.L887:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24319              		.loc 20 89 7 is_stmt 0 view .LVU5613
 24320              	.LBE12708:
 24321              	.LBE12707:
 24322              	.LBB12709:
 24323              	.LBI12709:
 211:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 24324              		.loc 33 211 12 is_stmt 1 view .LVU5614
 24325              	.LBB12710:
 24326              	.LBI12710:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24327              		.loc 24 678 7 view .LVU5615
 24328              	.LBB12711:
 24329              	.LBB12712:
 24330              	.LBI12712:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24331              		.loc 24 276 7 view .LVU5616
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24332              		.loc 24 276 7 is_stmt 0 view .LVU5617
 24333              	.LBE12712:
 24334              	.LBB12713:
 24335              	.LBI12713:
 24336              		.loc 26 735 5 is_stmt 1 view .LVU5618
 24337              		.loc 26 735 5 is_stmt 0 view .LVU5619
 24338              	.LBE12713:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24339              		.loc 24 683 7 view .LVU5620
 24340 098a 05F11800 		add	r0, r5, #24
 24341              	.LVL1414:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24342              		.loc 24 683 7 view .LVU5621
 24343 098e FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24344              	.LVL1415:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24345              		.loc 24 683 7 view .LVU5622
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 847


 24346              	.LBE12711:
 24347              	.LBE12710:
 24348              	.LBB12714:
 24349              	.LBI12714:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 24350              		.loc 18 657 7 is_stmt 1 view .LVU5623
 24351              	.LBB12715:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 24352              		.loc 18 658 19 is_stmt 0 view .LVU5624
 24353 0992 2846     		mov	r0, r5
 24354 0994 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 24355              	.LVL1416:
 24356              	.LBB12716:
 24357              	.LBI12716:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 24358              		.loc 18 150 14 is_stmt 1 view .LVU5625
 24359              	.LBB12717:
 24360              	.LBI12717:
 24361              		.loc 19 162 7 view .LVU5626
 24362              	.LBB12718:
 24363              	.LBI12718:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24364              		.loc 20 89 7 view .LVU5627
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24365              		.loc 20 89 7 is_stmt 0 view .LVU5628
 24366              	.LBE12718:
 24367              	.LBE12717:
 24368              	.LBE12716:
 24369              	.LBE12715:
 24370              	.LBE12714:
 24371              	.LBE12709:
 24372              		.loc 42 158 5 view .LVU5629
 24373 0998 AC42     		cmp	r4, r5
 24374 099a A5F12405 		sub	r5, r5, #36
 24375 099e F4D1     		bne	.L887
 24376              	.LVL1417:
 24377              	.LBB12719:
 24378              	.LBI12719:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24379              		.loc 24 678 7 is_stmt 1 view .LVU5630
 24380              	.LBB12720:
 24381              	.LBB12721:
 24382              	.LBI12721:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24383              		.loc 24 276 7 view .LVU5631
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24384              		.loc 24 276 7 is_stmt 0 view .LVU5632
 24385              	.LBE12721:
 24386              	.LBB12722:
 24387              	.LBI12722:
 24388              		.loc 26 735 5 is_stmt 1 view .LVU5633
 24389              		.loc 26 735 5 is_stmt 0 view .LVU5634
 24390              	.LBE12722:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24391              		.loc 24 683 7 view .LVU5635
 24392 09a0 34A8     		add	r0, sp, #208
 24393              	.LVL1418:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 848


 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24394              		.loc 24 683 7 view .LVU5636
 24395              	.LBE12720:
 24396              	.LBE12719:
 159:theory.h      **** 
 160:theory.h      ****     // All possible chord voicings
 161:theory.h      ****     const std::vector<std::string> voicings {
 162:theory.h      ****         "Triad",
 163:theory.h      ****         "Triad+",
 164:theory.h      ****         "7th",
 165:theory.h      ****         "7th+",
 166:theory.h      ****         "9th",
 167:theory.h      ****         "11th",
 168:theory.h      ****         "13th",
 169:theory.h      ****         "6th",
 170:theory.h      ****         "Sus2",
 171:theory.h      ****         "Sus4",
 172:theory.h      ****         // disabled til its bug is fixed
 173:theory.h      ****         //"Kenny B.",  // Kenny Barron chord 
 174:theory.h      ****         "Power",
 175:theory.h      ****         "Shell 1",
 176:theory.h      ****         "Shell 2"
 177:theory.h      ****     };
 24397              		.loc 42 177 5 view .LVU5637
 24398 09a2 ECAD     		add	r5, sp, #944
 24399              	.LBB12724:
 24400              	.LBB12723:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24401              		.loc 24 683 7 view .LVU5638
 24402 09a4 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24403              	.LVL1419:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24404              		.loc 24 683 7 view .LVU5639
 24405              	.LBE12723:
 24406              	.LBE12724:
 24407              	.LBB12725:
 24408              	.LBI12725:
 24409              		.loc 19 162 7 is_stmt 1 view .LVU5640
 24410              	.LBB12726:
 24411              	.LBI12726:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24412              		.loc 20 89 7 view .LVU5641
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24413              		.loc 20 89 7 is_stmt 0 view .LVU5642
 24414              	.LBE12726:
 24415              	.LBE12725:
 24416              	.LBB12727:
 24417              	.LBI12727:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24418              		.loc 24 678 7 is_stmt 1 view .LVU5643
 24419              	.LBB12728:
 24420              	.LBB12729:
 24421              	.LBI12729:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24422              		.loc 24 276 7 view .LVU5644
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24423              		.loc 24 276 7 is_stmt 0 view .LVU5645
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 849


 24424              	.LBE12729:
 24425              	.LBB12730:
 24426              	.LBI12730:
 24427              		.loc 26 735 5 is_stmt 1 view .LVU5646
 24428              		.loc 26 735 5 is_stmt 0 view .LVU5647
 24429              	.LBE12730:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24430              		.loc 24 683 7 view .LVU5648
 24431 09a8 3AA8     		add	r0, sp, #232
 24432              	.LVL1420:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24433              		.loc 24 683 7 view .LVU5649
 24434 09aa FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24435              	.LVL1421:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24436              		.loc 24 683 7 view .LVU5650
 24437              	.LBE12728:
 24438              	.LBE12727:
 24439              	.LBB12731:
 24440              	.LBI12731:
 24441              		.loc 19 162 7 is_stmt 1 view .LVU5651
 24442              	.LBB12732:
 24443              	.LBI12732:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24444              		.loc 20 89 7 view .LVU5652
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24445              		.loc 20 89 7 is_stmt 0 view .LVU5653
 24446              	.LBE12732:
 24447              	.LBE12731:
 24448              	.LBB12733:
 24449              	.LBI12733:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24450              		.loc 24 678 7 is_stmt 1 view .LVU5654
 24451              	.LBB12734:
 24452              	.LBB12735:
 24453              	.LBI12735:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24454              		.loc 24 276 7 view .LVU5655
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24455              		.loc 24 276 7 is_stmt 0 view .LVU5656
 24456              	.LBE12735:
 24457              	.LBB12736:
 24458              	.LBI12736:
 24459              		.loc 26 735 5 is_stmt 1 view .LVU5657
 24460              		.loc 26 735 5 is_stmt 0 view .LVU5658
 24461              	.LBE12736:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24462              		.loc 24 683 7 view .LVU5659
 24463 09ae 40A8     		add	r0, sp, #256
 24464              	.LVL1422:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24465              		.loc 24 683 7 view .LVU5660
 24466 09b0 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24467              	.LVL1423:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24468              		.loc 24 683 7 view .LVU5661
 24469              	.LBE12734:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 850


 24470              	.LBE12733:
 24471              	.LBB12737:
 24472              	.LBI12737:
 24473              		.loc 19 162 7 is_stmt 1 view .LVU5662
 24474              	.LBB12738:
 24475              	.LBI12738:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24476              		.loc 20 89 7 view .LVU5663
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24477              		.loc 20 89 7 is_stmt 0 view .LVU5664
 24478              	.LBE12738:
 24479              	.LBE12737:
 24480              	.LBB12739:
 24481              	.LBI12739:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24482              		.loc 24 678 7 is_stmt 1 view .LVU5665
 24483              	.LBB12740:
 24484              	.LBB12741:
 24485              	.LBI12741:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24486              		.loc 24 276 7 view .LVU5666
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24487              		.loc 24 276 7 is_stmt 0 view .LVU5667
 24488              	.LBE12741:
 24489              	.LBB12742:
 24490              	.LBI12742:
 24491              		.loc 26 735 5 is_stmt 1 view .LVU5668
 24492              		.loc 26 735 5 is_stmt 0 view .LVU5669
 24493              	.LBE12742:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24494              		.loc 24 683 7 view .LVU5670
 24495 09b4 43A8     		add	r0, sp, #268
 24496              	.LVL1424:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24497              		.loc 24 683 7 view .LVU5671
 24498 09b6 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24499              	.LVL1425:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24500              		.loc 24 683 7 view .LVU5672
 24501              	.LBE12740:
 24502              	.LBE12739:
 24503              	.LBB12743:
 24504              	.LBI12743:
 24505              		.loc 19 162 7 is_stmt 1 view .LVU5673
 24506              	.LBB12744:
 24507              	.LBI12744:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24508              		.loc 20 89 7 view .LVU5674
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24509              		.loc 20 89 7 is_stmt 0 view .LVU5675
 24510              	.LBE12744:
 24511              	.LBE12743:
 24512              	.LBB12745:
 24513              	.LBI12745:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24514              		.loc 24 678 7 is_stmt 1 view .LVU5676
 24515              	.LBB12746:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 851


 24516              	.LBB12747:
 24517              	.LBI12747:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24518              		.loc 24 276 7 view .LVU5677
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24519              		.loc 24 276 7 is_stmt 0 view .LVU5678
 24520              	.LBE12747:
 24521              	.LBB12748:
 24522              	.LBI12748:
 24523              		.loc 26 735 5 is_stmt 1 view .LVU5679
 24524              		.loc 26 735 5 is_stmt 0 view .LVU5680
 24525              	.LBE12748:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24526              		.loc 24 683 7 view .LVU5681
 24527 09ba 49A8     		add	r0, sp, #292
 24528              	.LVL1426:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24529              		.loc 24 683 7 view .LVU5682
 24530 09bc FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24531              	.LVL1427:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24532              		.loc 24 683 7 view .LVU5683
 24533              	.LBE12746:
 24534              	.LBE12745:
 24535              	.LBB12749:
 24536              	.LBI12749:
 24537              		.loc 19 162 7 is_stmt 1 view .LVU5684
 24538              	.LBB12750:
 24539              	.LBI12750:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24540              		.loc 20 89 7 view .LVU5685
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24541              		.loc 20 89 7 is_stmt 0 view .LVU5686
 24542              	.LBE12750:
 24543              	.LBE12749:
 24544              	.LBB12751:
 24545              	.LBI12751:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24546              		.loc 24 678 7 is_stmt 1 view .LVU5687
 24547              	.LBB12752:
 24548              	.LBB12753:
 24549              	.LBI12753:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24550              		.loc 24 276 7 view .LVU5688
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24551              		.loc 24 276 7 is_stmt 0 view .LVU5689
 24552              	.LBE12753:
 24553              	.LBB12754:
 24554              	.LBI12754:
 24555              		.loc 26 735 5 is_stmt 1 view .LVU5690
 24556              		.loc 26 735 5 is_stmt 0 view .LVU5691
 24557              	.LBE12754:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24558              		.loc 24 683 7 view .LVU5692
 24559 09c0 4FA8     		add	r0, sp, #316
 24560              	.LVL1428:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 852


 24561              		.loc 24 683 7 view .LVU5693
 24562 09c2 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24563              	.LVL1429:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24564              		.loc 24 683 7 view .LVU5694
 24565              	.LBE12752:
 24566              	.LBE12751:
 24567              	.LBB12755:
 24568              	.LBI12755:
 24569              		.loc 19 162 7 is_stmt 1 view .LVU5695
 24570              	.LBB12756:
 24571              	.LBI12756:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24572              		.loc 20 89 7 view .LVU5696
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24573              		.loc 20 89 7 is_stmt 0 view .LVU5697
 24574              	.LBE12756:
 24575              	.LBE12755:
 24576              	.LBB12757:
 24577              	.LBI12757:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24578              		.loc 24 678 7 is_stmt 1 view .LVU5698
 24579              	.LBB12758:
 24580              	.LBB12759:
 24581              	.LBI12759:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24582              		.loc 24 276 7 view .LVU5699
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24583              		.loc 24 276 7 is_stmt 0 view .LVU5700
 24584              	.LBE12759:
 24585              	.LBB12760:
 24586              	.LBI12760:
 24587              		.loc 26 735 5 is_stmt 1 view .LVU5701
 24588              		.loc 26 735 5 is_stmt 0 view .LVU5702
 24589              	.LBE12760:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24590              		.loc 24 683 7 view .LVU5703
 24591 09c6 52A8     		add	r0, sp, #328
 24592              	.LVL1430:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24593              		.loc 24 683 7 view .LVU5704
 24594 09c8 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24595              	.LVL1431:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24596              		.loc 24 683 7 view .LVU5705
 24597              	.LBE12758:
 24598              	.LBE12757:
 24599              	.LBB12761:
 24600              	.LBI12761:
 24601              		.loc 19 162 7 is_stmt 1 view .LVU5706
 24602              	.LBB12762:
 24603              	.LBI12762:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24604              		.loc 20 89 7 view .LVU5707
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24605              		.loc 20 89 7 is_stmt 0 view .LVU5708
 24606              	.LBE12762:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 853


 24607              	.LBE12761:
 24608              	.LBB12763:
 24609              	.LBI12763:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24610              		.loc 24 678 7 is_stmt 1 view .LVU5709
 24611              	.LBB12764:
 24612              	.LBB12765:
 24613              	.LBI12765:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24614              		.loc 24 276 7 view .LVU5710
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24615              		.loc 24 276 7 is_stmt 0 view .LVU5711
 24616              	.LBE12765:
 24617              	.LBB12766:
 24618              	.LBI12766:
 24619              		.loc 26 735 5 is_stmt 1 view .LVU5712
 24620              		.loc 26 735 5 is_stmt 0 view .LVU5713
 24621              	.LBE12766:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24622              		.loc 24 683 7 view .LVU5714
 24623 09cc 55A8     		add	r0, sp, #340
 24624              	.LVL1432:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24625              		.loc 24 683 7 view .LVU5715
 24626 09ce FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24627              	.LVL1433:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24628              		.loc 24 683 7 view .LVU5716
 24629              	.LBE12764:
 24630              	.LBE12763:
 24631              	.LBB12767:
 24632              	.LBI12767:
 24633              		.loc 19 162 7 is_stmt 1 view .LVU5717
 24634              	.LBB12768:
 24635              	.LBI12768:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24636              		.loc 20 89 7 view .LVU5718
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24637              		.loc 20 89 7 is_stmt 0 view .LVU5719
 24638              	.LBE12768:
 24639              	.LBE12767:
 24640              	.LBB12769:
 24641              	.LBI12769:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24642              		.loc 24 678 7 is_stmt 1 view .LVU5720
 24643              	.LBB12770:
 24644              	.LBB12771:
 24645              	.LBI12771:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24646              		.loc 24 276 7 view .LVU5721
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24647              		.loc 24 276 7 is_stmt 0 view .LVU5722
 24648              	.LBE12771:
 24649              	.LBB12772:
 24650              	.LBI12772:
 24651              		.loc 26 735 5 is_stmt 1 view .LVU5723
 24652              		.loc 26 735 5 is_stmt 0 view .LVU5724
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 854


 24653              	.LBE12772:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24654              		.loc 24 683 7 view .LVU5725
 24655 09d2 58A8     		add	r0, sp, #352
 24656              	.LVL1434:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24657              		.loc 24 683 7 view .LVU5726
 24658 09d4 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24659              	.LVL1435:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24660              		.loc 24 683 7 view .LVU5727
 24661              	.LBE12770:
 24662              	.LBE12769:
 24663              	.LBB12773:
 24664              	.LBI12773:
 24665              		.loc 19 162 7 is_stmt 1 view .LVU5728
 24666              	.LBB12774:
 24667              	.LBI12774:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24668              		.loc 20 89 7 view .LVU5729
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24669              		.loc 20 89 7 is_stmt 0 view .LVU5730
 24670              	.LBE12774:
 24671              	.LBE12773:
 24672              	.LBB12775:
 24673              	.LBI12775:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24674              		.loc 24 678 7 is_stmt 1 view .LVU5731
 24675              	.LBB12776:
 24676              	.LBB12777:
 24677              	.LBI12777:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24678              		.loc 24 276 7 view .LVU5732
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24679              		.loc 24 276 7 is_stmt 0 view .LVU5733
 24680              	.LBE12777:
 24681              	.LBB12778:
 24682              	.LBI12778:
 24683              		.loc 26 735 5 is_stmt 1 view .LVU5734
 24684              		.loc 26 735 5 is_stmt 0 view .LVU5735
 24685              	.LBE12778:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24686              		.loc 24 683 7 view .LVU5736
 24687 09d8 5BA8     		add	r0, sp, #364
 24688              	.LVL1436:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24689              		.loc 24 683 7 view .LVU5737
 24690 09da FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24691              	.LVL1437:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24692              		.loc 24 683 7 view .LVU5738
 24693              	.LBE12776:
 24694              	.LBE12775:
 24695              	.LBB12779:
 24696              	.LBI12779:
 24697              		.loc 19 162 7 is_stmt 1 view .LVU5739
 24698              	.LBB12780:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 855


 24699              	.LBI12780:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24700              		.loc 20 89 7 view .LVU5740
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24701              		.loc 20 89 7 is_stmt 0 view .LVU5741
 24702              	.LBE12780:
 24703              	.LBE12779:
 24704              	.LBB12781:
 24705              	.LBI12781:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24706              		.loc 24 678 7 is_stmt 1 view .LVU5742
 24707              	.LBB12782:
 24708              	.LBB12783:
 24709              	.LBI12783:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24710              		.loc 24 276 7 view .LVU5743
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24711              		.loc 24 276 7 is_stmt 0 view .LVU5744
 24712              	.LBE12783:
 24713              	.LBB12784:
 24714              	.LBI12784:
 24715              		.loc 26 735 5 is_stmt 1 view .LVU5745
 24716              		.loc 26 735 5 is_stmt 0 view .LVU5746
 24717              	.LBE12784:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24718              		.loc 24 683 7 view .LVU5747
 24719 09de 5EA8     		add	r0, sp, #376
 24720              	.LVL1438:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24721              		.loc 24 683 7 view .LVU5748
 24722 09e0 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24723              	.LVL1439:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24724              		.loc 24 683 7 view .LVU5749
 24725              	.LBE12782:
 24726              	.LBE12781:
 24727              	.LBB12785:
 24728              	.LBI12785:
 24729              		.loc 19 162 7 is_stmt 1 view .LVU5750
 24730              	.LBB12786:
 24731              	.LBI12786:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24732              		.loc 20 89 7 view .LVU5751
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24733              		.loc 20 89 7 is_stmt 0 view .LVU5752
 24734              	.LBE12786:
 24735              	.LBE12785:
 24736              	.LBB12787:
 24737              	.LBI12787:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24738              		.loc 24 678 7 is_stmt 1 view .LVU5753
 24739              	.LBB12788:
 24740              	.LBB12789:
 24741              	.LBI12789:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24742              		.loc 24 276 7 view .LVU5754
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 856


 24743              		.loc 24 276 7 is_stmt 0 view .LVU5755
 24744              	.LBE12789:
 24745              	.LBB12790:
 24746              	.LBI12790:
 24747              		.loc 26 735 5 is_stmt 1 view .LVU5756
 24748              		.loc 26 735 5 is_stmt 0 view .LVU5757
 24749              	.LBE12790:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24750              		.loc 24 683 7 view .LVU5758
 24751 09e4 61A8     		add	r0, sp, #388
 24752              	.LVL1440:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24753              		.loc 24 683 7 view .LVU5759
 24754 09e6 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24755              	.LVL1441:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24756              		.loc 24 683 7 view .LVU5760
 24757              	.LBE12788:
 24758              	.LBE12787:
 24759              	.LBB12791:
 24760              	.LBI12791:
 24761              		.loc 19 162 7 is_stmt 1 view .LVU5761
 24762              	.LBB12792:
 24763              	.LBI12792:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24764              		.loc 20 89 7 view .LVU5762
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24765              		.loc 20 89 7 is_stmt 0 view .LVU5763
 24766              	.LBE12792:
 24767              	.LBE12791:
 24768              	.LBB12793:
 24769              	.LBI12793:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24770              		.loc 24 678 7 is_stmt 1 view .LVU5764
 24771              	.LBB12794:
 24772              	.LBB12795:
 24773              	.LBI12795:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24774              		.loc 24 276 7 view .LVU5765
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24775              		.loc 24 276 7 is_stmt 0 view .LVU5766
 24776              	.LBE12795:
 24777              	.LBB12796:
 24778              	.LBI12796:
 24779              		.loc 26 735 5 is_stmt 1 view .LVU5767
 24780              		.loc 26 735 5 is_stmt 0 view .LVU5768
 24781              	.LBE12796:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24782              		.loc 24 683 7 view .LVU5769
 24783 09ea 64A8     		add	r0, sp, #400
 24784              	.LVL1442:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24785              		.loc 24 683 7 view .LVU5770
 24786 09ec FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24787              	.LVL1443:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24788              		.loc 24 683 7 view .LVU5771
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 857


 24789              	.LBE12794:
 24790              	.LBE12793:
 24791              	.LBB12797:
 24792              	.LBI12797:
 24793              		.loc 19 162 7 is_stmt 1 view .LVU5772
 24794              	.LBB12798:
 24795              	.LBI12798:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24796              		.loc 20 89 7 view .LVU5773
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24797              		.loc 20 89 7 is_stmt 0 view .LVU5774
 24798              	.LBE12798:
 24799              	.LBE12797:
 24800              	.LBB12799:
 24801              	.LBI12799:
 678:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 24802              		.loc 24 678 7 is_stmt 1 view .LVU5775
 24803              	.LBB12800:
 24804              	.LBB12801:
 24805              	.LBI12801:
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24806              		.loc 24 276 7 view .LVU5776
 276:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 24807              		.loc 24 276 7 is_stmt 0 view .LVU5777
 24808              	.LBE12801:
 24809              	.LBB12802:
 24810              	.LBI12802:
 24811              		.loc 26 735 5 is_stmt 1 view .LVU5778
 24812              		.loc 26 735 5 is_stmt 0 view .LVU5779
 24813              	.LBE12802:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24814              		.loc 24 683 7 view .LVU5780
 24815 09f0 6AA8     		add	r0, sp, #424
 24816              	.LVL1444:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24817              		.loc 24 683 7 view .LVU5781
 24818 09f2 FFF7FEFF 		bl	_ZNSt12_Vector_baseIiSaIiEED2Ev
 24819              	.LVL1445:
 683:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 24820              		.loc 24 683 7 view .LVU5782
 24821              	.LBE12800:
 24822              	.LBE12799:
 24823              	.LBB12803:
 24824              	.LBI12803:
 24825              		.loc 19 162 7 is_stmt 1 view .LVU5783
 24826              	.LBB12804:
 24827              	.LBI12804:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24828              		.loc 20 89 7 view .LVU5784
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24829              		.loc 20 89 7 is_stmt 0 view .LVU5785
 24830              	.LBE12804:
 24831              	.LBE12803:
 141:theory.h      ****         {"Triad",    std::vector<int>{1, 3, 5}},
 24832              		.loc 42 141 51 view .LVU5786
 24833 09f6 524A     		ldr	r2, .L909+36
 24834 09f8 5249     		ldr	r1, .L909+40
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 858


 24835 09fa 5048     		ldr	r0, .L909+32
 24836 09fc FFF7FEFF 		bl	__aeabi_atexit
 24837              	.LVL1446:
 24838              	.LBB12805:
 24839              	.LBI12805:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24840              		.loc 19 144 7 is_stmt 1 view .LVU5787
 24841              	.LBB12806:
 24842              	.LBI12806:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24843              		.loc 20 79 7 view .LVU5788
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24844              		.loc 20 79 7 is_stmt 0 view .LVU5789
 24845              	.LBE12806:
 24846              	.LBE12805:
 24847              		.loc 42 177 5 view .LVU5790
 24848 0a00 5149     		ldr	r1, .L909+44
 24849 0a02 2046     		mov	r0, r4
 24850 0a04 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24851              	.LVL1447:
 24852              	.LBB12807:
 24853              	.LBI12807:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24854              		.loc 19 144 7 is_stmt 1 view .LVU5791
 24855              	.LBB12808:
 24856              	.LBI12808:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24857              		.loc 20 79 7 view .LVU5792
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24858              		.loc 20 79 7 is_stmt 0 view .LVU5793
 24859              	.LBE12808:
 24860              	.LBE12807:
 24861              		.loc 42 177 5 view .LVU5794
 24862 0a08 5049     		ldr	r1, .L909+48
 24863 0a0a A4A8     		add	r0, sp, #656
 24864 0a0c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24865              	.LVL1448:
 24866              	.LBB12809:
 24867              	.LBI12809:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24868              		.loc 19 144 7 is_stmt 1 view .LVU5795
 24869              	.LBB12810:
 24870              	.LBI12810:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24871              		.loc 20 79 7 view .LVU5796
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24872              		.loc 20 79 7 is_stmt 0 view .LVU5797
 24873              	.LBE12810:
 24874              	.LBE12809:
 24875              		.loc 42 177 5 view .LVU5798
 24876 0a10 4F49     		ldr	r1, .L909+52
 24877 0a12 AAA8     		add	r0, sp, #680
 24878 0a14 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24879              	.LVL1449:
 24880              	.LBB12811:
 24881              	.LBI12811:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 859


 24882              		.loc 19 144 7 is_stmt 1 view .LVU5799
 24883              	.LBB12812:
 24884              	.LBI12812:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24885              		.loc 20 79 7 view .LVU5800
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24886              		.loc 20 79 7 is_stmt 0 view .LVU5801
 24887              	.LBE12812:
 24888              	.LBE12811:
 24889              		.loc 42 177 5 view .LVU5802
 24890 0a18 4E49     		ldr	r1, .L909+56
 24891 0a1a B0A8     		add	r0, sp, #704
 24892 0a1c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24893              	.LVL1450:
 24894              	.LBB12813:
 24895              	.LBI12813:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24896              		.loc 19 144 7 is_stmt 1 view .LVU5803
 24897              	.LBB12814:
 24898              	.LBI12814:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24899              		.loc 20 79 7 view .LVU5804
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24900              		.loc 20 79 7 is_stmt 0 view .LVU5805
 24901              	.LBE12814:
 24902              	.LBE12813:
 24903              		.loc 42 177 5 view .LVU5806
 24904 0a20 4D49     		ldr	r1, .L909+60
 24905 0a22 B6A8     		add	r0, sp, #728
 24906 0a24 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24907              	.LVL1451:
 24908              	.LBB12815:
 24909              	.LBI12815:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24910              		.loc 19 144 7 is_stmt 1 view .LVU5807
 24911              	.LBB12816:
 24912              	.LBI12816:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24913              		.loc 20 79 7 view .LVU5808
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24914              		.loc 20 79 7 is_stmt 0 view .LVU5809
 24915              	.LBE12816:
 24916              	.LBE12815:
 24917              		.loc 42 177 5 view .LVU5810
 24918 0a28 4C49     		ldr	r1, .L909+64
 24919 0a2a BCA8     		add	r0, sp, #752
 24920 0a2c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24921              	.LVL1452:
 24922              	.LBB12817:
 24923              	.LBI12817:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24924              		.loc 19 144 7 is_stmt 1 view .LVU5811
 24925              	.LBB12818:
 24926              	.LBI12818:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24927              		.loc 20 79 7 view .LVU5812
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 860


 24928              		.loc 20 79 7 is_stmt 0 view .LVU5813
 24929              	.LBE12818:
 24930              	.LBE12817:
 24931              		.loc 42 177 5 view .LVU5814
 24932 0a30 C2A8     		add	r0, sp, #776
 24933 0a32 3A49     		ldr	r1, .L909
 24934 0a34 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24935              	.LVL1453:
 24936              	.LBB12819:
 24937              	.LBI12819:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24938              		.loc 19 144 7 is_stmt 1 view .LVU5815
 24939              	.LBB12820:
 24940              	.LBI12820:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24941              		.loc 20 79 7 view .LVU5816
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24942              		.loc 20 79 7 is_stmt 0 view .LVU5817
 24943              	.LBE12820:
 24944              	.LBE12819:
 24945              		.loc 42 177 5 view .LVU5818
 24946 0a38 C8A8     		add	r0, sp, #800
 24947 0a3a 3949     		ldr	r1, .L909+4
 24948 0a3c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24949              	.LVL1454:
 24950              	.LBB12821:
 24951              	.LBI12821:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24952              		.loc 19 144 7 is_stmt 1 view .LVU5819
 24953              	.LBB12822:
 24954              	.LBI12822:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24955              		.loc 20 79 7 view .LVU5820
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24956              		.loc 20 79 7 is_stmt 0 view .LVU5821
 24957              	.LBE12822:
 24958              	.LBE12821:
 24959              		.loc 42 177 5 view .LVU5822
 24960 0a40 CEA8     		add	r0, sp, #824
 24961 0a42 3849     		ldr	r1, .L909+8
 24962 0a44 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24963              	.LVL1455:
 24964              	.LBB12823:
 24965              	.LBI12823:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24966              		.loc 19 144 7 is_stmt 1 view .LVU5823
 24967              	.LBB12824:
 24968              	.LBI12824:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24969              		.loc 20 79 7 view .LVU5824
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24970              		.loc 20 79 7 is_stmt 0 view .LVU5825
 24971              	.LBE12824:
 24972              	.LBE12823:
 24973              		.loc 42 177 5 view .LVU5826
 24974 0a48 D4A8     		add	r0, sp, #848
 24975 0a4a 3749     		ldr	r1, .L909+12
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 861


 24976 0a4c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24977              	.LVL1456:
 24978              	.LBB12825:
 24979              	.LBI12825:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24980              		.loc 19 144 7 is_stmt 1 view .LVU5827
 24981              	.LBB12826:
 24982              	.LBI12826:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24983              		.loc 20 79 7 view .LVU5828
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24984              		.loc 20 79 7 is_stmt 0 view .LVU5829
 24985              	.LBE12826:
 24986              	.LBE12825:
 24987              		.loc 42 177 5 view .LVU5830
 24988 0a50 DAA8     		add	r0, sp, #872
 24989 0a52 3649     		ldr	r1, .L909+16
 24990 0a54 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 24991              	.LVL1457:
 24992              	.LBB12827:
 24993              	.LBI12827:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 24994              		.loc 19 144 7 is_stmt 1 view .LVU5831
 24995              	.LBB12828:
 24996              	.LBI12828:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24997              		.loc 20 79 7 view .LVU5832
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 24998              		.loc 20 79 7 is_stmt 0 view .LVU5833
 24999              	.LBE12828:
 25000              	.LBE12827:
 25001              		.loc 42 177 5 view .LVU5834
 25002 0a58 E0A8     		add	r0, sp, #896
 25003 0a5a 3649     		ldr	r1, .L909+24
 25004 0a5c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25005              	.LVL1458:
 25006              	.LBB12829:
 25007              	.LBI12829:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25008              		.loc 19 144 7 is_stmt 1 view .LVU5835
 25009              	.LBB12830:
 25010              	.LBI12830:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25011              		.loc 20 79 7 view .LVU5836
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25012              		.loc 20 79 7 is_stmt 0 view .LVU5837
 25013              	.LBE12830:
 25014              	.LBE12829:
 25015              		.loc 42 177 5 view .LVU5838
 25016 0a60 E6A8     		add	r0, sp, #920
 25017 0a62 3549     		ldr	r1, .L909+28
 25018 0a64 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25019              	.LVL1459:
 25020 0a68 0D23     		movs	r3, #13
 25021 0a6a 3C60     		str	r4, [r7]
 25022 0a6c 7B60     		str	r3, [r7, #4]
 25023              	.LVL1460:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 862


 25024              	.LBB12831:
 25025              	.LBI12831:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25026              		.loc 19 144 7 is_stmt 1 view .LVU5839
 25027              	.LBB12832:
 25028              	.LBI12832:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25029              		.loc 20 79 7 view .LVU5840
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25030              		.loc 20 79 7 is_stmt 0 view .LVU5841
 25031              	.LBE12832:
 25032              	.LBE12831:
 25033              		.loc 42 177 5 view .LVU5842
 25034 0a6e 4346     		mov	r3, r8
 25035 0a70 3B48     		ldr	r0, .L909+68
 25036 0a72 97E80600 		ldm	r7, {r1, r2}
 25037 0a76 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25038              	.LVL1461:
 25039              	.LBB12833:
 25040              	.LBI12833:
 25041              		.loc 19 162 7 is_stmt 1 view .LVU5843
 25042              	.LBB12834:
 25043              	.LBI12834:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25044              		.loc 20 89 7 view .LVU5844
 25045              	.L888:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25046              		.loc 20 89 7 is_stmt 0 view .LVU5845
 25047              	.LBE12834:
 25048              	.LBE12833:
 25049              		.loc 42 177 5 view .LVU5846
 25050 0a7a 183D     		subs	r5, r5, #24
 25051              	.LVL1462:
 25052              	.LBB12835:
 25053              	.LBI12835:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25054              		.loc 18 657 7 is_stmt 1 view .LVU5847
 25055              	.LBB12836:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25056              		.loc 18 658 19 is_stmt 0 view .LVU5848
 25057 0a7c 2846     		mov	r0, r5
 25058 0a7e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25059              	.LVL1463:
 25060              	.LBB12837:
 25061              	.LBI12837:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25062              		.loc 18 150 14 is_stmt 1 view .LVU5849
 25063              	.LBB12838:
 25064              	.LBI12838:
 25065              		.loc 19 162 7 view .LVU5850
 25066              	.LBB12839:
 25067              	.LBI12839:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25068              		.loc 20 89 7 view .LVU5851
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25069              		.loc 20 89 7 is_stmt 0 view .LVU5852
 25070              	.LBE12839:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 863


 25071              	.LBE12838:
 25072              	.LBE12837:
 25073              	.LBE12836:
 25074              	.LBE12835:
 25075              		.loc 42 177 5 view .LVU5853
 25076 0a82 A542     		cmp	r5, r4
 25077 0a84 F9D1     		bne	.L888
 25078              	.LVL1464:
 25079              	.LBB12840:
 25080              	.LBI12840:
 25081              		.loc 19 162 7 is_stmt 1 view .LVU5854
 25082              	.LBB12841:
 25083              	.LBI12841:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25084              		.loc 20 89 7 view .LVU5855
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25085              		.loc 20 89 7 is_stmt 0 view .LVU5856
 25086              	.LBE12841:
 25087              	.LBE12840:
 25088              	.LBB12842:
 25089              	.LBI12842:
 25090              		.loc 19 162 7 is_stmt 1 view .LVU5857
 25091              	.LBB12843:
 25092              	.LBI12843:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25093              		.loc 20 89 7 view .LVU5858
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25094              		.loc 20 89 7 is_stmt 0 view .LVU5859
 25095              	.LBE12843:
 25096              	.LBE12842:
 25097              	.LBB12844:
 25098              	.LBI12844:
 25099              		.loc 19 162 7 is_stmt 1 view .LVU5860
 25100              	.LBB12845:
 25101              	.LBI12845:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25102              		.loc 20 89 7 view .LVU5861
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25103              		.loc 20 89 7 is_stmt 0 view .LVU5862
 25104              	.LBE12845:
 25105              	.LBE12844:
 25106              	.LBB12846:
 25107              	.LBI12846:
 25108              		.loc 19 162 7 is_stmt 1 view .LVU5863
 25109              	.LBB12847:
 25110              	.LBI12847:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25111              		.loc 20 89 7 view .LVU5864
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25112              		.loc 20 89 7 is_stmt 0 view .LVU5865
 25113              	.LBE12847:
 25114              	.LBE12846:
 25115              	.LBB12848:
 25116              	.LBI12848:
 25117              		.loc 19 162 7 is_stmt 1 view .LVU5866
 25118              	.LBB12849:
 25119              	.LBI12849:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 864


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25120              		.loc 20 89 7 view .LVU5867
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25121              		.loc 20 89 7 is_stmt 0 view .LVU5868
 25122              	.LBE12849:
 25123              	.LBE12848:
 25124              	.LBB12850:
 25125              	.LBI12850:
 25126              		.loc 19 162 7 is_stmt 1 view .LVU5869
 25127              	.LBB12851:
 25128              	.LBI12851:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25129              		.loc 20 89 7 view .LVU5870
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25130              		.loc 20 89 7 is_stmt 0 view .LVU5871
 25131              	.LBE12851:
 25132              	.LBE12850:
 25133              	.LBB12852:
 25134              	.LBI12852:
 25135              		.loc 19 162 7 is_stmt 1 view .LVU5872
 25136              	.LBB12853:
 25137              	.LBI12853:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25138              		.loc 20 89 7 view .LVU5873
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25139              		.loc 20 89 7 is_stmt 0 view .LVU5874
 25140              	.LBE12853:
 25141              	.LBE12852:
 25142              	.LBB12854:
 25143              	.LBI12854:
 25144              		.loc 19 162 7 is_stmt 1 view .LVU5875
 25145              	.LBB12855:
 25146              	.LBI12855:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25147              		.loc 20 89 7 view .LVU5876
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25148              		.loc 20 89 7 is_stmt 0 view .LVU5877
 25149              	.LBE12855:
 25150              	.LBE12854:
 25151              	.LBB12856:
 25152              	.LBI12856:
 25153              		.loc 19 162 7 is_stmt 1 view .LVU5878
 25154              	.LBB12857:
 25155              	.LBI12857:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25156              		.loc 20 89 7 view .LVU5879
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25157              		.loc 20 89 7 is_stmt 0 view .LVU5880
 25158              	.LBE12857:
 25159              	.LBE12856:
 25160              	.LBB12858:
 25161              	.LBI12858:
 25162              		.loc 19 162 7 is_stmt 1 view .LVU5881
 25163              	.LBB12859:
 25164              	.LBI12859:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25165              		.loc 20 89 7 view .LVU5882
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 865


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25166              		.loc 20 89 7 is_stmt 0 view .LVU5883
 25167              	.LBE12859:
 25168              	.LBE12858:
 25169              	.LBB12860:
 25170              	.LBI12860:
 25171              		.loc 19 162 7 is_stmt 1 view .LVU5884
 25172              	.LBB12861:
 25173              	.LBI12861:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25174              		.loc 20 89 7 view .LVU5885
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25175              		.loc 20 89 7 is_stmt 0 view .LVU5886
 25176              	.LBE12861:
 25177              	.LBE12860:
 25178              	.LBB12862:
 25179              	.LBI12862:
 25180              		.loc 19 162 7 is_stmt 1 view .LVU5887
 25181              	.LBB12863:
 25182              	.LBI12863:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25183              		.loc 20 89 7 view .LVU5888
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25184              		.loc 20 89 7 is_stmt 0 view .LVU5889
 25185              	.LBE12863:
 25186              	.LBE12862:
 25187              	.LBB12864:
 25188              	.LBI12864:
 25189              		.loc 19 162 7 is_stmt 1 view .LVU5890
 25190              	.LBB12865:
 25191              	.LBI12865:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25192              		.loc 20 89 7 view .LVU5891
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25193              		.loc 20 89 7 is_stmt 0 view .LVU5892
 25194              	.LBE12865:
 25195              	.LBE12864:
 161:theory.h      ****         "Triad",
 25196              		.loc 42 161 36 view .LVU5893
 25197 0a86 2E4A     		ldr	r2, .L909+36
 178:theory.h      **** 
 179:theory.h      **** 
 180:theory.h      ****     const std::vector<std::string> allInversions {
 181:theory.h      ****         "None",
 182:theory.h      ****         "Drop 2",
 183:theory.h      ****         "Drop 3",
 184:theory.h      ****         "Drop 4"
 185:theory.h      ****     };
 25198              		.loc 42 185 5 view .LVU5894
 25199 0a88 B6AD     		add	r5, sp, #728
 161:theory.h      ****         "Triad",
 25200              		.loc 42 161 36 view .LVU5895
 25201 0a8a 3649     		ldr	r1, .L909+72
 25202 0a8c 3448     		ldr	r0, .L909+68
 25203 0a8e FFF7FEFF 		bl	__aeabi_atexit
 25204              	.LVL1465:
 25205              	.LBB12866:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 866


 25206              	.LBI12866:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25207              		.loc 19 144 7 is_stmt 1 view .LVU5896
 25208              	.LBB12867:
 25209              	.LBI12867:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25210              		.loc 20 79 7 view .LVU5897
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25211              		.loc 20 79 7 is_stmt 0 view .LVU5898
 25212              	.LBE12867:
 25213              	.LBE12866:
 25214              		.loc 42 185 5 view .LVU5899
 25215 0a92 3549     		ldr	r1, .L909+76
 25216 0a94 2046     		mov	r0, r4
 25217 0a96 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25218              	.LVL1466:
 25219              	.LBB12868:
 25220              	.LBI12868:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25221              		.loc 19 144 7 is_stmt 1 view .LVU5900
 25222              	.LBB12869:
 25223              	.LBI12869:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25224              		.loc 20 79 7 view .LVU5901
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25225              		.loc 20 79 7 is_stmt 0 view .LVU5902
 25226              	.LBE12869:
 25227              	.LBE12868:
 25228              		.loc 42 185 5 view .LVU5903
 25229 0a9a 3449     		ldr	r1, .L909+80
 25230 0a9c A4A8     		add	r0, sp, #656
 25231 0a9e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25232              	.LVL1467:
 25233              	.LBB12870:
 25234              	.LBI12870:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25235              		.loc 19 144 7 is_stmt 1 view .LVU5904
 25236              	.LBB12871:
 25237              	.LBI12871:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25238              		.loc 20 79 7 view .LVU5905
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25239              		.loc 20 79 7 is_stmt 0 view .LVU5906
 25240              	.LBE12871:
 25241              	.LBE12870:
 25242              		.loc 42 185 5 view .LVU5907
 25243 0aa2 3349     		ldr	r1, .L909+84
 25244 0aa4 AAA8     		add	r0, sp, #680
 25245 0aa6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25246              	.LVL1468:
 25247              	.LBB12872:
 25248              	.LBI12872:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25249              		.loc 19 144 7 is_stmt 1 view .LVU5908
 25250              	.LBB12873:
 25251              	.LBI12873:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 867


 25252              		.loc 20 79 7 view .LVU5909
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25253              		.loc 20 79 7 is_stmt 0 view .LVU5910
 25254              	.LBE12873:
 25255              	.LBE12872:
 25256              		.loc 42 185 5 view .LVU5911
 25257 0aaa 3249     		ldr	r1, .L909+88
 25258 0aac B0A8     		add	r0, sp, #704
 25259 0aae FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25260              	.LVL1469:
 25261 0ab2 0423     		movs	r3, #4
 25262 0ab4 C8F80040 		str	r4, [r8]
 25263 0ab8 C8F80430 		str	r3, [r8, #4]
 25264              	.LVL1470:
 25265              	.LBB12874:
 25266              	.LBI12874:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25267              		.loc 19 144 7 is_stmt 1 view .LVU5912
 25268              	.LBB12875:
 25269              	.LBI12875:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25270              		.loc 20 79 7 view .LVU5913
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25271              		.loc 20 79 7 is_stmt 0 view .LVU5914
 25272              	.LBE12875:
 25273              	.LBE12874:
 25274              		.loc 42 185 5 view .LVU5915
 25275 0abc 89AB     		add	r3, sp, #548
 25276 0abe 2E48     		ldr	r0, .L909+92
 25277 0ac0 98E80600 		ldm	r8, {r1, r2}
 25278 0ac4 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25279              	.LVL1471:
 25280              	.LBB12876:
 25281              	.LBI12876:
 25282              		.loc 19 162 7 is_stmt 1 view .LVU5916
 25283              	.LBB12877:
 25284              	.LBI12877:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25285              		.loc 20 89 7 view .LVU5917
 25286              	.L889:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25287              		.loc 20 89 7 is_stmt 0 view .LVU5918
 25288              	.LBE12877:
 25289              	.LBE12876:
 25290              		.loc 42 185 5 view .LVU5919
 25291 0ac8 183D     		subs	r5, r5, #24
 25292              	.LVL1472:
 25293              	.LBB12878:
 25294              	.LBI12878:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25295              		.loc 18 657 7 is_stmt 1 view .LVU5920
 25296              	.LBB12879:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25297              		.loc 18 658 19 is_stmt 0 view .LVU5921
 25298 0aca 2846     		mov	r0, r5
 25299 0acc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25300              	.LVL1473:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 868


 25301              	.LBB12880:
 25302              	.LBI12880:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25303              		.loc 18 150 14 is_stmt 1 view .LVU5922
 25304              	.LBB12881:
 25305              	.LBI12881:
 25306              		.loc 19 162 7 view .LVU5923
 25307              	.LBB12882:
 25308              	.LBI12882:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25309              		.loc 20 89 7 view .LVU5924
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25310              		.loc 20 89 7 is_stmt 0 view .LVU5925
 25311              	.LBE12882:
 25312              	.LBE12881:
 25313              	.LBE12880:
 25314              	.LBE12879:
 25315              	.LBE12878:
 25316              		.loc 42 185 5 view .LVU5926
 25317 0ad0 A542     		cmp	r5, r4
 25318 0ad2 F9D1     		bne	.L889
 25319              	.LVL1474:
 25320              	.LBB12883:
 25321              	.LBI12883:
 25322              		.loc 19 162 7 is_stmt 1 view .LVU5927
 25323              	.LBB12884:
 25324              	.LBI12884:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25325              		.loc 20 89 7 view .LVU5928
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25326              		.loc 20 89 7 is_stmt 0 view .LVU5929
 25327              	.LBE12884:
 25328              	.LBE12883:
 25329              	.LBB12885:
 25330              	.LBI12885:
 25331              		.loc 19 162 7 is_stmt 1 view .LVU5930
 25332              	.LBB12886:
 25333              	.LBI12886:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25334              		.loc 20 89 7 view .LVU5931
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25335              		.loc 20 89 7 is_stmt 0 view .LVU5932
 25336              	.LBE12886:
 25337              	.LBE12885:
 25338              	.LBB12887:
 25339              	.LBI12887:
 25340              		.loc 19 162 7 is_stmt 1 view .LVU5933
 25341              	.LBB12888:
 25342              	.LBI12888:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25343              		.loc 20 89 7 view .LVU5934
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25344              		.loc 20 89 7 is_stmt 0 view .LVU5935
 25345              	.LBE12888:
 25346              	.LBE12887:
 25347              	.LBB12889:
 25348              	.LBI12889:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 869


 25349              		.loc 19 162 7 is_stmt 1 view .LVU5936
 25350              	.LBB12890:
 25351              	.LBI12890:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25352              		.loc 20 89 7 view .LVU5937
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25353              		.loc 20 89 7 is_stmt 0 view .LVU5938
 25354              	.LBE12890:
 25355              	.LBE12889:
 180:theory.h      ****         "None",
 25356              		.loc 42 180 36 view .LVU5939
 25357 0ad4 1A4A     		ldr	r2, .L909+36
 186:theory.h      **** 
 187:theory.h      ****     const std::vector<std::string> allClockInDivs {
 188:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 189:theory.h      ****         // "1/4",
 190:theory.h      ****         // "1/8",
 191:theory.h      ****         // "1/16",
 192:theory.h      ****         // "1/32",
 193:theory.h      ****         // "1/64",
 194:theory.h      ****         "1",
 195:theory.h      ****         "2",
 196:theory.h      ****         "4",
 197:theory.h      ****         "8",
 198:theory.h      ****         "16"
 199:theory.h      ****     };
 25358              		.loc 42 199 5 view .LVU5940
 25359 0ad6 BCAD     		add	r5, sp, #752
 180:theory.h      ****         "None",
 25360              		.loc 42 180 36 view .LVU5941
 25361 0ad8 2249     		ldr	r1, .L909+72
 25362 0ada 2748     		ldr	r0, .L909+92
 25363 0adc FFF7FEFF 		bl	__aeabi_atexit
 25364              	.LVL1475:
 25365              	.LBB12891:
 25366              	.LBI12891:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25367              		.loc 19 144 7 is_stmt 1 view .LVU5942
 25368              	.LBB12892:
 25369              	.LBI12892:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25370              		.loc 20 79 7 view .LVU5943
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25371              		.loc 20 79 7 is_stmt 0 view .LVU5944
 25372              	.LBE12892:
 25373              	.LBE12891:
 25374              		.loc 42 199 5 view .LVU5945
 25375 0ae0 2649     		ldr	r1, .L909+96
 25376 0ae2 2046     		mov	r0, r4
 25377 0ae4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25378              	.LVL1476:
 25379              	.LBB12893:
 25380              	.LBI12893:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25381              		.loc 19 144 7 is_stmt 1 view .LVU5946
 25382              	.LBB12894:
 25383              	.LBI12894:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 870


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25384              		.loc 20 79 7 view .LVU5947
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25385              		.loc 20 79 7 is_stmt 0 view .LVU5948
 25386              	.LBE12894:
 25387              	.LBE12893:
 25388              		.loc 42 199 5 view .LVU5949
 25389 0ae8 2549     		ldr	r1, .L909+100
 25390 0aea A4A8     		add	r0, sp, #656
 25391 0aec FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25392              	.LVL1477:
 25393              	.LBB12895:
 25394              	.LBI12895:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25395              		.loc 19 144 7 is_stmt 1 view .LVU5950
 25396              	.LBB12896:
 25397              	.LBI12896:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25398              		.loc 20 79 7 view .LVU5951
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25399              		.loc 20 79 7 is_stmt 0 view .LVU5952
 25400              	.LBE12896:
 25401              	.LBE12895:
 25402              		.loc 42 199 5 view .LVU5953
 25403 0af0 2449     		ldr	r1, .L909+104
 25404 0af2 AAA8     		add	r0, sp, #680
 25405 0af4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25406              	.LVL1478:
 25407              	.LBB12897:
 25408              	.LBI12897:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25409              		.loc 19 144 7 is_stmt 1 view .LVU5954
 25410              	.LBB12898:
 25411              	.LBI12898:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25412              		.loc 20 79 7 view .LVU5955
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25413              		.loc 20 79 7 is_stmt 0 view .LVU5956
 25414              	.LBE12898:
 25415              	.LBE12897:
 25416              		.loc 42 199 5 view .LVU5957
 25417 0af8 2349     		ldr	r1, .L909+108
 25418 0afa B0A8     		add	r0, sp, #704
 25419 0afc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25420              	.LVL1479:
 25421              	.LBB12899:
 25422              	.LBI12899:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25423              		.loc 19 144 7 is_stmt 1 view .LVU5958
 25424              	.LBB12900:
 25425              	.LBI12900:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25426              		.loc 20 79 7 view .LVU5959
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25427              		.loc 20 79 7 is_stmt 0 view .LVU5960
 25428              	.LBE12900:
 25429              	.LBE12899:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 871


 25430              		.loc 42 199 5 view .LVU5961
 25431 0b00 2249     		ldr	r1, .L909+112
 25432 0b02 B6A8     		add	r0, sp, #728
 25433 0b04 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25434              	.LVL1480:
 25435 0b08 0523     		movs	r3, #5
 25436 0b0a 89AA     		add	r2, sp, #548
 25437 0b0c 8994     		str	r4, [sp, #548]
 25438 0b0e 8A93     		str	r3, [sp, #552]
 25439              	.LVL1481:
 25440              	.LBB12901:
 25441              	.LBI12901:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25442              		.loc 19 144 7 is_stmt 1 view .LVU5962
 25443              	.LBB12902:
 25444              	.LBI12902:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25445              		.loc 20 79 7 view .LVU5963
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25446              		.loc 20 79 7 is_stmt 0 view .LVU5964
 25447              	.LBE12902:
 25448              	.LBE12901:
 25449              		.loc 42 199 5 view .LVU5965
 25450 0b10 82AB     		add	r3, sp, #520
 25451 0b12 1F48     		ldr	r0, .L909+116
 25452 0b14 06CA     		ldm	r2, {r1, r2}
 25453 0b16 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25454              	.LVL1482:
 25455 0b1a 3BE0     		b	.L910
 25456              	.L911:
 25457              		.align	2
 25458              	.L909:
 25459 0b1c 7C010000 		.word	.LC117
 25460 0b20 84010000 		.word	.LC118
 25461 0b24 88010000 		.word	.LC119
 25462 0b28 90010000 		.word	.LC120
 25463 0b2c 98010000 		.word	.LC121
 25464 0b30 A0010000 		.word	.LC122
 25465 0b34 A8010000 		.word	.LC123
 25466 0b38 B0010000 		.word	.LC124
 25467 0b3c 00000000 		.word	.LANCHOR31
 25468 0b40 00000000 		.word	__dso_handle
 25469 0b44 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 25470 0b48 54010000 		.word	.LC111
 25471 0b4c 5C010000 		.word	.LC112
 25472 0b50 64010000 		.word	.LC113
 25473 0b54 68010000 		.word	.LC114
 25474 0b58 70010000 		.word	.LC115
 25475 0b5c 74010000 		.word	.LC116
 25476 0b60 00000000 		.word	.LANCHOR21
 25477 0b64 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 25478 0b68 B8010000 		.word	.LC125
 25479 0b6c C0010000 		.word	.LC126
 25480 0b70 C8010000 		.word	.LC127
 25481 0b74 D0010000 		.word	.LC128
 25482 0b78 00000000 		.word	.LANCHOR22
 25483 0b7c D8010000 		.word	.LC129
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 872


 25484 0b80 DC010000 		.word	.LC130
 25485 0b84 E0010000 		.word	.LC131
 25486 0b88 E4010000 		.word	.LC132
 25487 0b8c E8010000 		.word	.LC133
 25488 0b90 00000000 		.word	.LANCHOR20
 25489              	.L910:
 25490              	.LVL1483:
 25491              	.LBB12903:
 25492              	.LBI12903:
 25493              		.loc 19 162 7 is_stmt 1 view .LVU5966
 25494              	.LBB12904:
 25495              	.LBI12904:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25496              		.loc 20 89 7 view .LVU5967
 25497              	.L890:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25498              		.loc 20 89 7 is_stmt 0 view .LVU5968
 25499              	.LBE12904:
 25500              	.LBE12903:
 25501              		.loc 42 199 5 view .LVU5969
 25502 0b94 183D     		subs	r5, r5, #24
 25503              	.LVL1484:
 25504              	.LBB12905:
 25505              	.LBI12905:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25506              		.loc 18 657 7 is_stmt 1 view .LVU5970
 25507              	.LBB12906:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25508              		.loc 18 658 19 is_stmt 0 view .LVU5971
 25509 0b96 2846     		mov	r0, r5
 25510 0b98 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25511              	.LVL1485:
 25512              	.LBB12907:
 25513              	.LBI12907:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25514              		.loc 18 150 14 is_stmt 1 view .LVU5972
 25515              	.LBB12908:
 25516              	.LBI12908:
 25517              		.loc 19 162 7 view .LVU5973
 25518              	.LBB12909:
 25519              	.LBI12909:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25520              		.loc 20 89 7 view .LVU5974
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25521              		.loc 20 89 7 is_stmt 0 view .LVU5975
 25522              	.LBE12909:
 25523              	.LBE12908:
 25524              	.LBE12907:
 25525              	.LBE12906:
 25526              	.LBE12905:
 25527              		.loc 42 199 5 view .LVU5976
 25528 0b9c A542     		cmp	r5, r4
 25529 0b9e F9D1     		bne	.L890
 25530              	.LVL1486:
 25531              	.LBB12910:
 25532              	.LBI12910:
 25533              		.loc 19 162 7 is_stmt 1 view .LVU5977
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 873


 25534              	.LBB12911:
 25535              	.LBI12911:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25536              		.loc 20 89 7 view .LVU5978
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25537              		.loc 20 89 7 is_stmt 0 view .LVU5979
 25538              	.LBE12911:
 25539              	.LBE12910:
 25540              	.LBB12912:
 25541              	.LBI12912:
 25542              		.loc 19 162 7 is_stmt 1 view .LVU5980
 25543              	.LBB12913:
 25544              	.LBI12913:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25545              		.loc 20 89 7 view .LVU5981
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25546              		.loc 20 89 7 is_stmt 0 view .LVU5982
 25547              	.LBE12913:
 25548              	.LBE12912:
 25549              	.LBB12914:
 25550              	.LBI12914:
 25551              		.loc 19 162 7 is_stmt 1 view .LVU5983
 25552              	.LBB12915:
 25553              	.LBI12915:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25554              		.loc 20 89 7 view .LVU5984
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25555              		.loc 20 89 7 is_stmt 0 view .LVU5985
 25556              	.LBE12915:
 25557              	.LBE12914:
 25558              	.LBB12916:
 25559              	.LBI12916:
 25560              		.loc 19 162 7 is_stmt 1 view .LVU5986
 25561              	.LBB12917:
 25562              	.LBI12917:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25563              		.loc 20 89 7 view .LVU5987
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25564              		.loc 20 89 7 is_stmt 0 view .LVU5988
 25565              	.LBE12917:
 25566              	.LBE12916:
 25567              	.LBB12918:
 25568              	.LBI12918:
 25569              		.loc 19 162 7 is_stmt 1 view .LVU5989
 25570              	.LBB12919:
 25571              	.LBI12919:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25572              		.loc 20 89 7 view .LVU5990
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25573              		.loc 20 89 7 is_stmt 0 view .LVU5991
 25574              	.LBE12919:
 25575              	.LBE12918:
 187:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 25576              		.loc 42 187 36 view .LVU5992
 25577 0ba0 6E4A     		ldr	r2, .L912
 25578              		.file 43 "arp.h"
   1:arp.h         **** /* 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 874


   2:arp.h         ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:arp.h         ****  * You may use, distribute and modify this code under the
   4:arp.h         ****  * terms of the GNU AGPLv3 license.
   5:arp.h         ****  * 
   6:arp.h         ****  * You should have received a copy of the GNU AGPLv3 license with
   7:arp.h         ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:arp.h         ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:arp.h         ****  */
  10:arp.h         **** 
  11:arp.h         **** #include <string>
  12:arp.h         **** #include <vector>
  13:arp.h         **** 
  14:arp.h         **** #include "chord.h"
  15:arp.h         **** 
  16:arp.h         **** namespace jellybeans {
  17:arp.h         ****     class Arp {
  18:arp.h         ****     private:
  19:arp.h         ****         // Maximum arp steps
  20:arp.h         ****         int maxSteps;
  21:arp.h         **** 
  22:arp.h         ****         // Tracks the current position in arpTraversal
  23:arp.h         ****         int traversalIndex;
  24:arp.h         **** 
  25:arp.h         ****         // Current step index, 0 based
  26:arp.h         ****         int step;
  27:arp.h         **** 
  28:arp.h         ****         // If true, a new note is being played this frame and a trigger
  29:arp.h         ****         // should be sent out.
  30:arp.h         ****         bool trig; 
  31:arp.h         **** 
  32:arp.h         ****         // The CV value currently being sent to Patches' DAC's output 1
  33:arp.h         ****         // This is stored so that it's only calculated when necessary
  34:arp.h         ****         float dacValue;
  35:arp.h         **** 
  36:arp.h         ****         // Stores which arp note should be played at each next step.
  37:arp.h         ****         // Contains a list of indices of arpNotes
  38:arp.h         ****         std::vector<int> traversal;
  39:arp.h         **** 
  40:arp.h         ****         // Must be an element of mu::arpPatterns
  41:arp.h         ****         std::string pattern;
  42:arp.h         **** 
  43:arp.h         ****         // String representation of the arp
  44:arp.h         ****         std::string string;
  45:arp.h         **** 
  46:arp.h         ****         // Underlying chord
  47:arp.h         ****         DiatonicChord* chord;
  48:arp.h         **** 
  49:arp.h         ****         void resetState();
  50:arp.h         ****     public:
  51:arp.h         ****         Arp();// : Arp(8, DiatonicChord(1, 0, "Major", "Triad"), "Up", 1) {};
  52:arp.h         **** 
  53:arp.h         ****         // @param maxSteps
  54:arp.h         ****         // @param chord
  55:arp.h         ****         // @param pattern - ∈ arpPatterns
  56:arp.h         ****         Arp(int, DiatonicChord*, std::string);
  57:arp.h         **** 
  58:arp.h         ****         // Intended to be called every time a clock pulse is received
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 875


  59:arp.h         ****         void onClockPulse();
  60:arp.h         ****     
  61:arp.h         ****         // Updates the arp traversal values based on the current pattern
  62:arp.h         ****         void updateTraversal();
  63:arp.h         **** 
  64:arp.h         ****         // Called every time the arp steps to the next note
  65:arp.h         ****         void updateStep();
  66:arp.h         **** 
  67:arp.h         ****         void updateString();
  68:arp.h         **** 
  69:arp.h         ****         std::string toString();
  70:arp.h         **** 
  71:arp.h         ****         // Returns true if there's a new note trigger. Also resets the 
  72:arp.h         ****         // trigger bool, effectively telling the arp "I've consumed the trigger"
  73:arp.h         ****         bool getTrig();
  74:arp.h         **** 
  75:arp.h         ****         float getDacValue();
  76:arp.h         **** 
  77:arp.h         ****         DiatonicChord* getChord();
  78:arp.h         **** 
  79:arp.h         ****         // @param ∈ arpPatterns
  80:arp.h         ****         void setPattern(std::string);
  81:arp.h         ****     };
  82:arp.h         **** 
  83:arp.h         ****     const std::vector<std::string> arpPatterns {
  84:arp.h         ****         "Up",
  85:arp.h         ****         "Down",
  86:arp.h         ****         "U+D In",
  87:arp.h         ****         "U+D Ex",
  88:arp.h         ****         "Random"
  89:arp.h         ****     };
 25579              		.loc 43 89 5 view .LVU5993
 25580 0ba2 BCAD     		add	r5, sp, #752
 187:theory.h      ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 25581              		.loc 42 187 36 view .LVU5994
 25582 0ba4 6E49     		ldr	r1, .L912+4
 25583 0ba6 6F48     		ldr	r0, .L912+8
 25584 0ba8 FFF7FEFF 		bl	__aeabi_atexit
 25585              	.LVL1487:
 25586              	.LBB12920:
 25587              	.LBI12920:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25588              		.loc 19 144 7 is_stmt 1 view .LVU5995
 25589              	.LBB12921:
 25590              	.LBI12921:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25591              		.loc 20 79 7 view .LVU5996
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25592              		.loc 20 79 7 is_stmt 0 view .LVU5997
 25593              	.LBE12921:
 25594              	.LBE12920:
 200:theory.h      **** 
 201:theory.h      ****     // Given the 1V/oct and 0-5V range of the CV out port,
 202:theory.h      ****     // we are limited to a 5 octave register. Voicings span
 203:theory.h      ****     // up to 2 octaves and coarse tuning (mRoot) spans another,
 204:theory.h      ****     // leaving us 2 octaves of room for upwards transposition.
 205:theory.h      ****     //
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 876


 206:theory.h      ****     // Note that the indices of the elements are also their octave distances from 0
 207:theory.h      ****     const std::vector<std::string> allOctaves {
 208:theory.h      ****         "0",
 209:theory.h      ****         "+1",
 210:theory.h      ****         "+2"
 211:theory.h      ****     };
 25595              		.loc 42 211 5 view .LVU5998
 25596 0bac 6E49     		ldr	r1, .L912+12
 25597 0bae 2046     		mov	r0, r4
 25598 0bb0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25599              	.LVL1488:
 25600              	.LBB12922:
 25601              	.LBI12922:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25602              		.loc 19 144 7 is_stmt 1 view .LVU5999
 25603              	.LBB12923:
 25604              	.LBI12923:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25605              		.loc 20 79 7 view .LVU6000
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25606              		.loc 20 79 7 is_stmt 0 view .LVU6001
 25607              	.LBE12923:
 25608              	.LBE12922:
 25609              		.loc 42 211 5 view .LVU6002
 25610 0bb4 6D49     		ldr	r1, .L912+16
 25611 0bb6 A4A8     		add	r0, sp, #656
 25612 0bb8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25613              	.LVL1489:
 25614              	.LBB12924:
 25615              	.LBI12924:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25616              		.loc 19 144 7 is_stmt 1 view .LVU6003
 25617              	.LBB12925:
 25618              	.LBI12925:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25619              		.loc 20 79 7 view .LVU6004
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25620              		.loc 20 79 7 is_stmt 0 view .LVU6005
 25621              	.LBE12925:
 25622              	.LBE12924:
 25623              		.loc 42 211 5 view .LVU6006
 25624 0bbc 6C49     		ldr	r1, .L912+20
 25625 0bbe AAA8     		add	r0, sp, #680
 25626 0bc0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25627              	.LVL1490:
 25628 0bc4 0323     		movs	r3, #3
 25629 0bc6 82AA     		add	r2, sp, #520
 25630 0bc8 8294     		str	r4, [sp, #520]
 25631 0bca 8393     		str	r3, [sp, #524]
 25632              	.LVL1491:
 25633              	.LBB12926:
 25634              	.LBI12926:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25635              		.loc 19 144 7 is_stmt 1 view .LVU6007
 25636              	.LBB12927:
 25637              	.LBI12927:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 877


 25638              		.loc 20 79 7 view .LVU6008
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25639              		.loc 20 79 7 is_stmt 0 view .LVU6009
 25640              	.LBE12927:
 25641              	.LBE12926:
 25642              		.loc 42 211 5 view .LVU6010
 25643 0bcc 7BAB     		add	r3, sp, #492
 25644 0bce 6948     		ldr	r0, .L912+24
 25645 0bd0 06CA     		ldm	r2, {r1, r2}
 25646 0bd2 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25647              	.LVL1492:
 25648              	.LBB12928:
 25649              	.LBI12928:
 25650              		.loc 19 162 7 is_stmt 1 view .LVU6011
 25651              	.LBB12929:
 25652              	.LBI12929:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25653              		.loc 20 89 7 view .LVU6012
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25654              		.loc 20 89 7 is_stmt 0 view .LVU6013
 25655              	.LBE12929:
 25656              	.LBE12928:
 25657              	.LBB12930:
 25658              	.LBI12930:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25659              		.loc 18 657 7 is_stmt 1 view .LVU6014
 25660              	.LBB12931:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25661              		.loc 18 658 19 is_stmt 0 view .LVU6015
 25662 0bd6 AAA8     		add	r0, sp, #680
 25663              	.LVL1493:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25664              		.loc 18 658 19 view .LVU6016
 25665 0bd8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25666              	.LVL1494:
 25667              	.LBB12932:
 25668              	.LBI12932:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25669              		.loc 18 150 14 is_stmt 1 view .LVU6017
 25670              	.LBB12933:
 25671              	.LBI12933:
 25672              		.loc 19 162 7 view .LVU6018
 25673              	.LBB12934:
 25674              	.LBI12934:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25675              		.loc 20 89 7 view .LVU6019
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25676              		.loc 20 89 7 is_stmt 0 view .LVU6020
 25677              	.LBE12934:
 25678              	.LBE12933:
 25679              	.LBE12932:
 25680              	.LBE12931:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25681              		.loc 18 657 7 is_stmt 1 view .LVU6021
 25682              	.LBB12941:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25683              		.loc 18 658 19 is_stmt 0 view .LVU6022
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 878


 25684 0bdc A4A8     		add	r0, sp, #656
 25685              	.LVL1495:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25686              		.loc 18 658 19 view .LVU6023
 25687 0bde FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25688              	.LVL1496:
 25689              	.LBB12939:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25690              		.loc 18 150 14 is_stmt 1 view .LVU6024
 25691              	.LBB12937:
 25692              		.loc 19 162 7 view .LVU6025
 25693              	.LBB12935:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25694              		.loc 20 89 7 view .LVU6026
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25695              		.loc 20 89 7 is_stmt 0 view .LVU6027
 25696              	.LBE12935:
 25697              	.LBE12937:
 25698              	.LBE12939:
 25699              	.LBE12941:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25700              		.loc 18 657 7 is_stmt 1 view .LVU6028
 25701              	.LBB12942:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25702              		.loc 18 658 19 is_stmt 0 view .LVU6029
 25703 0be2 2046     		mov	r0, r4
 25704 0be4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25705              	.LVL1497:
 25706              	.LBB12940:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25707              		.loc 18 150 14 is_stmt 1 view .LVU6030
 25708              	.LBB12938:
 25709              		.loc 19 162 7 view .LVU6031
 25710              	.LBB12936:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25711              		.loc 20 89 7 view .LVU6032
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25712              		.loc 20 89 7 is_stmt 0 view .LVU6033
 25713              	.LBE12936:
 25714              	.LBE12938:
 25715              	.LBE12940:
 25716              	.LBE12942:
 25717              	.LBE12930:
 25718              	.LBB12943:
 25719              	.LBI12943:
 25720              		.loc 19 162 7 is_stmt 1 view .LVU6034
 25721              	.LBB12944:
 25722              	.LBI12944:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25723              		.loc 20 89 7 view .LVU6035
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25724              		.loc 20 89 7 is_stmt 0 view .LVU6036
 25725              	.LBE12944:
 25726              	.LBE12943:
 25727              	.LBB12945:
 25728              	.LBI12945:
 25729              		.loc 19 162 7 is_stmt 1 view .LVU6037
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 879


 25730              	.LBB12946:
 25731              	.LBI12946:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25732              		.loc 20 89 7 view .LVU6038
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25733              		.loc 20 89 7 is_stmt 0 view .LVU6039
 25734              	.LBE12946:
 25735              	.LBE12945:
 25736              	.LBB12947:
 25737              	.LBI12947:
 25738              		.loc 19 162 7 is_stmt 1 view .LVU6040
 25739              	.LBB12948:
 25740              	.LBI12948:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25741              		.loc 20 89 7 view .LVU6041
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25742              		.loc 20 89 7 is_stmt 0 view .LVU6042
 25743              	.LBE12948:
 25744              	.LBE12947:
 207:theory.h      ****         "0",
 25745              		.loc 42 207 36 view .LVU6043
 25746 0be8 5C4A     		ldr	r2, .L912
 25747 0bea 5D49     		ldr	r1, .L912+4
 25748 0bec 6148     		ldr	r0, .L912+24
 25749 0bee FFF7FEFF 		bl	__aeabi_atexit
 25750              	.LVL1498:
 25751              	.LBB12949:
 25752              	.LBI12949:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25753              		.loc 19 144 7 is_stmt 1 view .LVU6044
 25754              	.LBB12950:
 25755              	.LBI12950:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25756              		.loc 20 79 7 view .LVU6045
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25757              		.loc 20 79 7 is_stmt 0 view .LVU6046
 25758              	.LBE12950:
 25759              	.LBE12949:
 212:theory.h      **** 
 213:theory.h      ****     // DEBUG
 214:theory.h      ****     const std::vector<std::string> emptyVect {"N/A"};
 25760              		.loc 42 214 52 view .LVU6047
 25761 0bf2 6149     		ldr	r1, .L912+28
 25762 0bf4 2046     		mov	r0, r4
 25763 0bf6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25764              	.LVL1499:
 25765 0bfa 0123     		movs	r3, #1
 25766 0bfc 7BAA     		add	r2, sp, #492
 25767 0bfe 7B94     		str	r4, [sp, #492]
 25768 0c00 7C93     		str	r3, [sp, #496]
 25769              	.LVL1500:
 25770              	.LBB12951:
 25771              	.LBI12951:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25772              		.loc 19 144 7 is_stmt 1 view .LVU6048
 25773              	.LBB12952:
 25774              	.LBI12952:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 880


  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25775              		.loc 20 79 7 view .LVU6049
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25776              		.loc 20 79 7 is_stmt 0 view .LVU6050
 25777              	.LBE12952:
 25778              	.LBE12951:
 25779              		.loc 42 214 52 view .LVU6051
 25780 0c02 74AB     		add	r3, sp, #464
 25781 0c04 5D48     		ldr	r0, .L912+32
 25782 0c06 06CA     		ldm	r2, {r1, r2}
 25783 0c08 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25784              	.LVL1501:
 25785              	.LBB12953:
 25786              	.LBI12953:
 25787              		.loc 19 162 7 is_stmt 1 view .LVU6052
 25788              	.LBB12954:
 25789              	.LBI12954:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25790              		.loc 20 89 7 view .LVU6053
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25791              		.loc 20 89 7 is_stmt 0 view .LVU6054
 25792              	.LBE12954:
 25793              	.LBE12953:
 25794              	.LBB12955:
 25795              	.LBI12955:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25796              		.loc 18 657 7 is_stmt 1 view .LVU6055
 25797              	.LBB12956:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25798              		.loc 18 658 19 is_stmt 0 view .LVU6056
 25799 0c0c 2046     		mov	r0, r4
 25800 0c0e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25801              	.LVL1502:
 25802              	.LBB12957:
 25803              	.LBI12957:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25804              		.loc 18 150 14 is_stmt 1 view .LVU6057
 25805              	.LBB12958:
 25806              	.LBI12958:
 25807              		.loc 19 162 7 view .LVU6058
 25808              	.LBB12959:
 25809              	.LBI12959:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25810              		.loc 20 89 7 view .LVU6059
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25811              		.loc 20 89 7 is_stmt 0 view .LVU6060
 25812              	.LBE12959:
 25813              	.LBE12958:
 25814              	.LBE12957:
 25815              	.LBE12956:
 25816              	.LBE12955:
 25817              	.LBB12960:
 25818              	.LBI12960:
 25819              		.loc 19 162 7 is_stmt 1 view .LVU6061
 25820              	.LBB12961:
 25821              	.LBI12961:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 881


 25822              		.loc 20 89 7 view .LVU6062
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25823              		.loc 20 89 7 is_stmt 0 view .LVU6063
 25824              	.LBE12961:
 25825              	.LBE12960:
 25826              		.loc 42 214 36 view .LVU6064
 25827 0c12 524A     		ldr	r2, .L912
 25828 0c14 5249     		ldr	r1, .L912+4
 25829 0c16 5948     		ldr	r0, .L912+32
 25830 0c18 FFF7FEFF 		bl	__aeabi_atexit
 25831              	.LVL1503:
 25832              	.LBB12962:
 25833              	.LBI12962:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25834              		.loc 19 144 7 is_stmt 1 view .LVU6065
 25835              	.LBB12963:
 25836              	.LBI12963:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25837              		.loc 20 79 7 view .LVU6066
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25838              		.loc 20 79 7 is_stmt 0 view .LVU6067
 25839              	.LBE12963:
 25840              	.LBE12962:
 25841              		.loc 43 89 5 view .LVU6068
 25842 0c1c 5849     		ldr	r1, .L912+36
 25843 0c1e 2046     		mov	r0, r4
 25844 0c20 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25845              	.LVL1504:
 25846              	.LBB12964:
 25847              	.LBI12964:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25848              		.loc 19 144 7 is_stmt 1 view .LVU6069
 25849              	.LBB12965:
 25850              	.LBI12965:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25851              		.loc 20 79 7 view .LVU6070
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25852              		.loc 20 79 7 is_stmt 0 view .LVU6071
 25853              	.LBE12965:
 25854              	.LBE12964:
 25855              		.loc 43 89 5 view .LVU6072
 25856 0c24 A4A8     		add	r0, sp, #656
 25857 0c26 5749     		ldr	r1, .L912+40
 25858 0c28 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25859              	.LVL1505:
 25860              	.LBB12966:
 25861              	.LBI12966:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25862              		.loc 19 144 7 is_stmt 1 view .LVU6073
 25863              	.LBB12967:
 25864              	.LBI12967:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25865              		.loc 20 79 7 view .LVU6074
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25866              		.loc 20 79 7 is_stmt 0 view .LVU6075
 25867              	.LBE12967:
 25868              	.LBE12966:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 882


 25869              		.loc 43 89 5 view .LVU6076
 25870 0c2c AAA8     		add	r0, sp, #680
 25871 0c2e 5649     		ldr	r1, .L912+44
 25872 0c30 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25873              	.LVL1506:
 25874              	.LBB12968:
 25875              	.LBI12968:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25876              		.loc 19 144 7 is_stmt 1 view .LVU6077
 25877              	.LBB12969:
 25878              	.LBI12969:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25879              		.loc 20 79 7 view .LVU6078
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25880              		.loc 20 79 7 is_stmt 0 view .LVU6079
 25881              	.LBE12969:
 25882              	.LBE12968:
 25883              		.loc 43 89 5 view .LVU6080
 25884 0c34 B0A8     		add	r0, sp, #704
 25885 0c36 5549     		ldr	r1, .L912+48
 25886 0c38 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25887              	.LVL1507:
 25888              	.LBB12970:
 25889              	.LBI12970:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25890              		.loc 19 144 7 is_stmt 1 view .LVU6081
 25891              	.LBB12971:
 25892              	.LBI12971:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25893              		.loc 20 79 7 view .LVU6082
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25894              		.loc 20 79 7 is_stmt 0 view .LVU6083
 25895              	.LBE12971:
 25896              	.LBE12970:
 25897              		.loc 43 89 5 view .LVU6084
 25898 0c3c B6A8     		add	r0, sp, #728
 25899 0c3e 5449     		ldr	r1, .L912+52
 25900 0c40 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 25901              	.LVL1508:
 25902 0c44 0522     		movs	r2, #5
 25903 0c46 7494     		str	r4, [sp, #464]
 25904 0c48 6DAB     		add	r3, sp, #436
 25905 0c4a 7592     		str	r2, [sp, #468]
 25906              	.LVL1509:
 25907              	.LBB12972:
 25908              	.LBI12972:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 25909              		.loc 19 144 7 is_stmt 1 view .LVU6085
 25910              	.LBB12973:
 25911              	.LBI12973:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25912              		.loc 20 79 7 view .LVU6086
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25913              		.loc 20 79 7 is_stmt 0 view .LVU6087
 25914              	.LBE12973:
 25915              	.LBE12972:
 25916              		.loc 43 89 5 view .LVU6088
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 883


 25917 0c4c 74AA     		add	r2, sp, #464
 25918 0c4e 5148     		ldr	r0, .L912+56
 25919 0c50 06CA     		ldm	r2, {r1, r2}
 25920 0c52 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_lis
 25921              	.LVL1510:
 25922              	.LBB12974:
 25923              	.LBI12974:
 25924              		.loc 19 162 7 is_stmt 1 view .LVU6089
 25925              	.LBB12975:
 25926              	.LBI12975:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25927              		.loc 20 89 7 view .LVU6090
 25928              	.L891:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25929              		.loc 20 89 7 is_stmt 0 view .LVU6091
 25930              	.LBE12975:
 25931              	.LBE12974:
 25932              		.loc 43 89 5 view .LVU6092
 25933 0c56 183D     		subs	r5, r5, #24
 25934              	.LVL1511:
 25935              	.LBB12976:
 25936              	.LBI12976:
 657:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 25937              		.loc 18 657 7 is_stmt 1 view .LVU6093
 25938              	.LBB12977:
 658:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 25939              		.loc 18 658 19 is_stmt 0 view .LVU6094
 25940 0c58 2846     		mov	r0, r5
 25941 0c5a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 25942              	.LVL1512:
 25943              	.LBB12978:
 25944              	.LBI12978:
 150:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 25945              		.loc 18 150 14 is_stmt 1 view .LVU6095
 25946              	.LBB12979:
 25947              	.LBI12979:
 25948              		.loc 19 162 7 view .LVU6096
 25949              	.LBB12980:
 25950              	.LBI12980:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25951              		.loc 20 89 7 view .LVU6097
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25952              		.loc 20 89 7 is_stmt 0 view .LVU6098
 25953              	.LBE12980:
 25954              	.LBE12979:
 25955              	.LBE12978:
 25956              	.LBE12977:
 25957              	.LBE12976:
 25958              		.loc 43 89 5 view .LVU6099
 25959 0c5e A542     		cmp	r5, r4
 25960 0c60 F9D1     		bne	.L891
 25961              	.LVL1513:
 25962              	.LBB12981:
 25963              	.LBI12981:
 25964              		.loc 19 162 7 is_stmt 1 view .LVU6100
 25965              	.LBB12982:
 25966              	.LBI12982:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 884


  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25967              		.loc 20 89 7 view .LVU6101
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25968              		.loc 20 89 7 is_stmt 0 view .LVU6102
 25969              	.LBE12982:
 25970              	.LBE12981:
 25971              	.LBB12983:
 25972              	.LBI12983:
 25973              		.loc 19 162 7 is_stmt 1 view .LVU6103
 25974              	.LBB12984:
 25975              	.LBI12984:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25976              		.loc 20 89 7 view .LVU6104
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25977              		.loc 20 89 7 is_stmt 0 view .LVU6105
 25978              	.LBE12984:
 25979              	.LBE12983:
 25980              	.LBB12985:
 25981              	.LBI12985:
 25982              		.loc 19 162 7 is_stmt 1 view .LVU6106
 25983              	.LBB12986:
 25984              	.LBI12986:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25985              		.loc 20 89 7 view .LVU6107
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25986              		.loc 20 89 7 is_stmt 0 view .LVU6108
 25987              	.LBE12986:
 25988              	.LBE12985:
 25989              	.LBB12987:
 25990              	.LBI12987:
 25991              		.loc 19 162 7 is_stmt 1 view .LVU6109
 25992              	.LBB12988:
 25993              	.LBI12988:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25994              		.loc 20 89 7 view .LVU6110
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 25995              		.loc 20 89 7 is_stmt 0 view .LVU6111
 25996              	.LBE12988:
 25997              	.LBE12987:
 25998              	.LBB12989:
 25999              	.LBI12989:
 26000              		.loc 19 162 7 is_stmt 1 view .LVU6112
 26001              	.LBB12990:
 26002              	.LBI12990:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26003              		.loc 20 89 7 view .LVU6113
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26004              		.loc 20 89 7 is_stmt 0 view .LVU6114
 26005              	.LBE12990:
 26006              	.LBE12989:
  83:arp.h         ****         "Up",
 26007              		.loc 43 83 36 view .LVU6115
 26008 0c62 3E4A     		ldr	r2, .L912
 26009              	.LBB12991:
 26010              	.LBB12992:
 26011              	.LBB12993:
 26012              	.LBB12994:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 885


 26013              	.LBB12995:
 26014              	.LBB12996:
 26015              	.LBB12997:
 26016              		.file 44 "../../libdaisy/src/per/qspi.h"
   1:../../libdaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy/src/per/qspi.h **** 
   4:../../libdaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy/src/per/qspi.h **** 
   6:../../libdaisy/src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy/src/per/qspi.h **** 
   9:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libdaisy/src/per/qspi.h **** 
  19:../../libdaisy/src/per/qspi.h **** namespace daisy
  20:../../libdaisy/src/per/qspi.h **** {
  21:../../libdaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy/src/per/qspi.h **** @{
  23:../../libdaisy/src/per/qspi.h **** */
  24:../../libdaisy/src/per/qspi.h **** 
  25:../../libdaisy/src/per/qspi.h **** /** 
  26:../../libdaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy/src/per/qspi.h **** */
  30:../../libdaisy/src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy/src/per/qspi.h **** {
  32:../../libdaisy/src/per/qspi.h ****   public:
  33:../../libdaisy/src/per/qspi.h ****     enum Result
  34:../../libdaisy/src/per/qspi.h ****     {
  35:../../libdaisy/src/per/qspi.h ****         OK = 0,
  36:../../libdaisy/src/per/qspi.h ****         ERR
  37:../../libdaisy/src/per/qspi.h ****     };
  38:../../libdaisy/src/per/qspi.h **** 
  39:../../libdaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy/src/per/qspi.h ****          * 
  43:../../libdaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libdaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy/src/per/qspi.h ****          */
  48:../../libdaisy/src/per/qspi.h ****     enum Status
  49:../../libdaisy/src/per/qspi.h ****     {
  50:../../libdaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../libdaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy/src/per/qspi.h ****         E_INVALID_MODE,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 886


  54:../../libdaisy/src/per/qspi.h ****     };
  55:../../libdaisy/src/per/qspi.h **** 
  56:../../libdaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy/src/per/qspi.h ****     struct Config
  58:../../libdaisy/src/per/qspi.h ****     {
  59:../../libdaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy/src/per/qspi.h ****         enum Device
  61:../../libdaisy/src/per/qspi.h ****         {
  62:../../libdaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libdaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy/src/per/qspi.h ****         };
  66:../../libdaisy/src/per/qspi.h **** 
  67:../../libdaisy/src/per/qspi.h ****         /** 
  68:../../libdaisy/src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy/src/per/qspi.h ****         */
  74:../../libdaisy/src/per/qspi.h ****         enum Mode
  75:../../libdaisy/src/per/qspi.h ****         {
  76:../../libdaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libdaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy/src/per/qspi.h ****         };
  80:../../libdaisy/src/per/qspi.h **** 
  81:../../libdaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy/src/per/qspi.h ****         struct
  83:../../libdaisy/src/per/qspi.h ****         {
  84:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy/src/per/qspi.h ****         } pin_config;
  91:../../libdaisy/src/per/qspi.h **** 
  92:../../libdaisy/src/per/qspi.h ****         Device device;
  93:../../libdaisy/src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy/src/per/qspi.h ****     };
  95:../../libdaisy/src/per/qspi.h **** 
  96:../../libdaisy/src/per/qspi.h ****     /** 
  97:../../libdaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy/src/per/qspi.h ****         */
 101:../../libdaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy/src/per/qspi.h **** 
 103:../../libdaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy/src/per/qspi.h **** 
 106:../../libdaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libdaisy/src/per/qspi.h ****     /** 
 109:../../libdaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 887


 111:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy/src/per/qspi.h ****         */
 113:../../libdaisy/src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy/src/per/qspi.h **** 
 115:../../libdaisy/src/per/qspi.h ****     /** 
 116:../../libdaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy/src/per/qspi.h ****         */
 123:../../libdaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy/src/per/qspi.h **** 
 125:../../libdaisy/src/per/qspi.h ****     /** 
 126:../../libdaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy/src/per/qspi.h ****         */
 132:../../libdaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy/src/per/qspi.h **** 
 134:../../libdaisy/src/per/qspi.h ****     /** 
 135:../../libdaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy/src/per/qspi.h ****         */
 142:../../libdaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy/src/per/qspi.h **** 
 144:../../libdaisy/src/per/qspi.h ****     /**  
 145:../../libdaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy/src/per/qspi.h ****         \param addr Address of sector to erase
 148:../../libdaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy/src/per/qspi.h ****         */
 150:../../libdaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy/src/per/qspi.h **** 
 152:../../libdaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy/src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy/src/per/qspi.h ****      */
 155:../../libdaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy/src/per/qspi.h **** 
 157:../../libdaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libdaisy/src/per/qspi.h ****      * 
 161:../../libdaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy/src/per/qspi.h ****     */
 164:../../libdaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libdaisy/src/per/qspi.h **** 
 166:../../libdaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 26017              		.loc 44 166 34 view .LVU6116
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 888


 26018 0c64 0024     		movs	r4, #0
 26019              	.LBE12997:
 26020              	.LBE12996:
 26021              	.LBE12995:
 26022              	.LBE12994:
 26023              	.LBE12993:
 26024              	.LBE12992:
 26025              	.LBE12991:
  83:arp.h         ****         "Up",
 26026              		.loc 43 83 36 view .LVU6117
 26027 0c66 3E49     		ldr	r1, .L912+4
 26028 0c68 4A48     		ldr	r0, .L912+56
 26029 0c6a FFF7FEFF 		bl	__aeabi_atexit
 26030              	.LVL1514:
 26031              	.LBB13072:
 26032              	.LBI12991:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26033              		.loc 3 39 5 is_stmt 1 view .LVU6118
 26034              	.LBB13070:
 26035              	.LBB13020:
 26036              	.LBI12993:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 26037              		.loc 9 21 5 view .LVU6119
 26038              	.LBB13016:
 26039              	.LBB13002:
 26040              	.LBI12995:
 26041              		.loc 44 166 5 view .LVU6120
 26042              		.loc 44 166 5 is_stmt 0 view .LVU6121
 26043              	.LBE13002:
 26044              	.LBB13003:
 26045              	.LBI13003:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 26046              		.loc 13 62 5 is_stmt 1 view .LVU6122
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 26047              		.loc 13 62 5 is_stmt 0 view .LVU6123
 26048              	.LBE13003:
 26049              	.LBB13006:
 26050              	.LBI13006:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 26051              		.loc 12 84 5 is_stmt 1 view .LVU6124
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 26052              		.loc 12 84 5 is_stmt 0 view .LVU6125
 26053              	.LBE13006:
 26054              	.LBB13007:
 26055              	.LBI13007:
 26056              		.file 45 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 889


  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 890


  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 26057              		.loc 45 83 5 is_stmt 1 view .LVU6126
 26058              		.loc 45 83 5 is_stmt 0 view .LVU6127
 26059              	.LBE13007:
 26060              	.LBB13010:
 26061              	.LBI13010:
  40:../../libdaisy/src/hid/usb.h **** 
 26062              		.loc 11 40 5 is_stmt 1 view .LVU6128
  40:../../libdaisy/src/hid/usb.h **** 
 26063              		.loc 11 40 5 is_stmt 0 view .LVU6129
 26064              	.LBE13010:
 26065              	.LBB13011:
 26066              	.LBI13011:
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 26067              		.loc 10 77 5 is_stmt 1 view .LVU6130
  77:../../libdaisy/src/sys/system.h ****     ~System() {}
 26068              		.loc 10 77 5 is_stmt 0 view .LVU6131
 26069              	.LBE13011:
 26070              	.LBE13016:
 26071              	.LBE13020:
 26072              	.LBB13021:
 26073              	.LBI13021:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 26074              		.loc 7 20 5 is_stmt 1 view .LVU6132
 26075              	.LBB13022:
 26076              	.LBB13023:
 26077              	.LBI13023:
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 26078              		.loc 8 41 5 view .LVU6133
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 26079              		.loc 8 41 5 is_stmt 0 view .LVU6134
 26080              	.LBE13023:
 26081              	.LBE13022:
 26082              	.LBE13021:
 26083              	.LBE13070:
 26084              	.LBE13072:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26085              		.loc 3 39 18 is_stmt 1 view .LVU6135
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26086              		.loc 3 39 18 view .LVU6136
 26087              	.LBB13073:
 26088              	.LBB13071:
 26089              	.LBB13024:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 891


 26090              	.LBI13024:
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 26091              		.loc 6 83 5 view .LVU6137
 26092              	.LBB13025:
 26093              	.LBB13026:
 26094              	.LBI13026:
 26095              		.file 46 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 892


  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 26096              		.loc 46 87 5 view .LVU6138
 26097              		.loc 46 87 5 is_stmt 0 view .LVU6139
 26098              	.LBE13026:
 26099              	.LBB13029:
 26100              	.LBI13029:
 26101              		.file 47 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 893


  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 26102              		.loc 47 21 5 is_stmt 1 view .LVU6140
 26103              		.loc 47 21 5 is_stmt 0 view .LVU6141
 26104              	.LBE13029:
 26105              	.LBB13030:
 26106              	.LBI13030:
  85:../../libdaisy/src/hid/midi.h **** 
  86:../../libdaisy/src/hid/midi.h ****     struct Config
 26107              		.loc 6 86 12 is_stmt 1 view .LVU6142
 26108              	.LBB13031:
 26109              	.LBI13031:
  34:../../libdaisy/src/hid/midi.h ****         {
 26110              		.loc 6 34 9 view .LVU6143
 26111              	.LBB13032:
 26112              	.LBB13033:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 26113              		.loc 6 36 13 view .LVU6144
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 26114              		.loc 6 37 13 view .LVU6145
  38:../../libdaisy/src/hid/midi.h ****         }
 26115              		.loc 6 38 13 view .LVU6146
  38:../../libdaisy/src/hid/midi.h ****         }
 26116              		.loc 6 38 13 is_stmt 0 view .LVU6147
 26117              	.LBE13033:
 26118              	.LBE13032:
 26119              	.LBE13031:
 26120              	.LBE13030:
 26121              	.LBB13037:
 26122              	.LBI13037:
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 26123              		.loc 6 25 5 is_stmt 1 view .LVU6148
 26124              	.LBB13038:
 26125              	.LBI13038:
 26126              		.loc 46 87 5 view .LVU6149
 26127              		.loc 46 87 5 is_stmt 0 view .LVU6150
 26128              	.LBE13038:
 26129              	.LBE13037:
 26130              	.LBE13025:
 26131              	.LBE13024:
 26132              	.LBB13043:
 26133              	.LBI13043:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 26134              		.loc 4 16 5 is_stmt 1 view .LVU6151
 26135              	.LBB13044:
 26136              	.LBB13045:
 26137              	.LBB13046:
 26138              	.LBI13046:
 218:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
 26139              		.loc 5 218 5 view .LVU6152
 26140              	.LBB13047:
 26141              	.LBI13047:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 894


  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 26142              		.loc 5 22 5 view .LVU6153
 26143              	.LBE13047:
 26144              	.LBE13046:
 26145              	.LBE13045:
 26146              	.LBE13044:
 26147              	.LBE13043:
 26148              	.LBB13062:
 26149              	.LBB13017:
 26150              	.LBB13012:
 26151              	.LBB13000:
 26152              	.LBB12998:
 26153              		.loc 44 166 34 is_stmt 0 view .LVU6154
 26154 0c6e 4A48     		ldr	r0, .L912+60
 26155              	.LBE12998:
 26156              	.LBE13000:
 26157              	.LBE13012:
 26158              	.LBE13017:
 26159              	.LBE13062:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26160              		.loc 3 39 18 view .LVU6155
 26161 0c70 4A4A     		ldr	r2, .L912+64
 26162              	.LBB13063:
 26163              	.LBB13041:
 26164              	.LBB13039:
 26165              	.LBB13036:
 26166              	.LBB13035:
 26167              	.LBB13034:
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 26168              		.loc 6 36 20 view .LVU6156
 26169 0c72 00F51043 		add	r3, r0, #36864
 26170              	.LBE13034:
 26171              	.LBE13035:
 26172              	.LBE13036:
 26173              	.LBE13039:
 26174              	.LBE13041:
 26175              	.LBE13063:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26176              		.loc 3 39 18 view .LVU6157
 26177 0c76 4A49     		ldr	r1, .L912+68
 26178              	.LBB13064:
 26179              	.LBB13018:
 26180              	.LBB13013:
 26181              	.LBB13001:
 26182              	.LBB12999:
 26183              		.loc 44 166 34 view .LVU6158
 26184 0c78 0460     		str	r4, [r0]
 26185              	.LBE12999:
 26186              	.LBE13001:
 26187              	.LBE13013:
 26188              	.LBE13018:
 26189              	.LBE13064:
 26190              	.LBB13065:
 26191              	.LBB13059:
 26192              	.LBB13056:
 26193              	.LBB13048:
 26194              	.LBB13049:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 895


 26195              	.LBB13050:
 26196              	.LBB13051:
 26197              	.LBB13052:
 26198              		.file 48 "../../libdaisy/src/per/spi.h"
   1:../../libdaisy/src/per/spi.h **** #pragma once
   2:../../libdaisy/src/per/spi.h **** #ifndef DSY_SPI_H
   3:../../libdaisy/src/per/spi.h **** #define DSY_SPI_H
   4:../../libdaisy/src/per/spi.h **** 
   5:../../libdaisy/src/per/spi.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/spi.h **** 
   7:../../libdaisy/src/per/spi.h **** /* TODO:
   8:../../libdaisy/src/per/spi.h **** - Add documentation
   9:../../libdaisy/src/per/spi.h **** - Add reception
  10:../../libdaisy/src/per/spi.h **** - Add IT
  11:../../libdaisy/src/per/spi.h **** - Add DMA
  12:../../libdaisy/src/per/spi.h **** */
  13:../../libdaisy/src/per/spi.h **** 
  14:../../libdaisy/src/per/spi.h **** namespace daisy
  15:../../libdaisy/src/per/spi.h **** {
  16:../../libdaisy/src/per/spi.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/spi.h **** @{
  18:../../libdaisy/src/per/spi.h **** */
  19:../../libdaisy/src/per/spi.h **** 
  20:../../libdaisy/src/per/spi.h **** /**  Handler for serial peripheral interface */
  21:../../libdaisy/src/per/spi.h **** class SpiHandle
  22:../../libdaisy/src/per/spi.h **** {
  23:../../libdaisy/src/per/spi.h ****   public:
  24:../../libdaisy/src/per/spi.h ****     struct Config
  25:../../libdaisy/src/per/spi.h ****     {
  26:../../libdaisy/src/per/spi.h ****         enum class Peripheral
  27:../../libdaisy/src/per/spi.h ****         {
  28:../../libdaisy/src/per/spi.h ****             SPI_1,
  29:../../libdaisy/src/per/spi.h ****             SPI_2,
  30:../../libdaisy/src/per/spi.h ****             SPI_3,
  31:../../libdaisy/src/per/spi.h ****             SPI_4,
  32:../../libdaisy/src/per/spi.h ****             SPI_5,
  33:../../libdaisy/src/per/spi.h ****             SPI_6,
  34:../../libdaisy/src/per/spi.h ****         };
  35:../../libdaisy/src/per/spi.h **** 
  36:../../libdaisy/src/per/spi.h ****         enum class Mode
  37:../../libdaisy/src/per/spi.h ****         {
  38:../../libdaisy/src/per/spi.h ****             MASTER,
  39:../../libdaisy/src/per/spi.h ****             SLAVE,
  40:../../libdaisy/src/per/spi.h ****         };
  41:../../libdaisy/src/per/spi.h **** 
  42:../../libdaisy/src/per/spi.h ****         enum class Direction
  43:../../libdaisy/src/per/spi.h ****         {
  44:../../libdaisy/src/per/spi.h ****             TWO_LINES,
  45:../../libdaisy/src/per/spi.h ****             TWO_LINES_TX_ONLY,
  46:../../libdaisy/src/per/spi.h ****             TWO_LINES_RX_ONLY,
  47:../../libdaisy/src/per/spi.h ****             ONE_LINE,
  48:../../libdaisy/src/per/spi.h ****         };
  49:../../libdaisy/src/per/spi.h **** 
  50:../../libdaisy/src/per/spi.h ****         enum class ClockPolarity
  51:../../libdaisy/src/per/spi.h ****         {
  52:../../libdaisy/src/per/spi.h ****             LOW,
  53:../../libdaisy/src/per/spi.h ****             HIGH,
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 896


  54:../../libdaisy/src/per/spi.h ****         };
  55:../../libdaisy/src/per/spi.h **** 
  56:../../libdaisy/src/per/spi.h ****         enum class ClockPhase
  57:../../libdaisy/src/per/spi.h ****         {
  58:../../libdaisy/src/per/spi.h ****             ONE_EDGE,
  59:../../libdaisy/src/per/spi.h ****             TWO_EDGE,
  60:../../libdaisy/src/per/spi.h ****         };
  61:../../libdaisy/src/per/spi.h **** 
  62:../../libdaisy/src/per/spi.h ****         enum class NSS
  63:../../libdaisy/src/per/spi.h ****         {
  64:../../libdaisy/src/per/spi.h ****             SOFT,
  65:../../libdaisy/src/per/spi.h ****             HARD_INPUT,
  66:../../libdaisy/src/per/spi.h ****             HARD_OUTPUT,
  67:../../libdaisy/src/per/spi.h ****         };
  68:../../libdaisy/src/per/spi.h **** 
  69:../../libdaisy/src/per/spi.h ****         enum class BaudPrescaler
  70:../../libdaisy/src/per/spi.h ****         {
  71:../../libdaisy/src/per/spi.h ****             PS_2,
  72:../../libdaisy/src/per/spi.h ****             PS_4,
  73:../../libdaisy/src/per/spi.h ****             PS_8,
  74:../../libdaisy/src/per/spi.h ****             PS_16,
  75:../../libdaisy/src/per/spi.h ****             PS_32,
  76:../../libdaisy/src/per/spi.h ****             PS_64,
  77:../../libdaisy/src/per/spi.h ****             PS_128,
  78:../../libdaisy/src/per/spi.h ****             PS_256,
  79:../../libdaisy/src/per/spi.h ****         };
  80:../../libdaisy/src/per/spi.h **** 
  81:../../libdaisy/src/per/spi.h ****         struct
  82:../../libdaisy/src/per/spi.h ****         {
  83:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin sclk; /**< & */
  84:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin miso; /**< & */
  85:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin mosi; /**< & */
  86:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin nss;  /**< & */
  87:../../libdaisy/src/per/spi.h ****         } pin_config;
  88:../../libdaisy/src/per/spi.h **** 
  89:../../libdaisy/src/per/spi.h ****         Peripheral    periph;
  90:../../libdaisy/src/per/spi.h ****         Mode          mode;
  91:../../libdaisy/src/per/spi.h ****         Direction     direction;
  92:../../libdaisy/src/per/spi.h ****         unsigned long datasize;
  93:../../libdaisy/src/per/spi.h ****         ClockPolarity clock_polarity;
  94:../../libdaisy/src/per/spi.h ****         ClockPhase    clock_phase;
  95:../../libdaisy/src/per/spi.h ****         NSS           nss;
  96:../../libdaisy/src/per/spi.h ****         BaudPrescaler baud_prescaler;
  97:../../libdaisy/src/per/spi.h ****     };
  98:../../libdaisy/src/per/spi.h **** 
  99:../../libdaisy/src/per/spi.h ****     SpiHandle() : pimpl_(nullptr) {}
 26199              		.loc 48 99 33 view .LVU6159
 26200 0c7a C3F8A841 		str	r4, [r3, #424]
 26201              	.LBE13052:
 26202              	.LBE13051:
 26203              	.LBE13050:
 26204              	.LBE13049:
 26205              	.LBE13048:
 26206              	.LBE13056:
 26207              	.LBE13059:
 26208              	.LBE13065:
 26209              	.LBB13066:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 897


 26210              	.LBB13019:
 26211              	.LBB13014:
 26212              	.LBB13004:
 26213              	.LBB13005:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 26214              		.loc 13 62 35 view .LVU6160
 26215 0c7e 4461     		str	r4, [r0, #20]
 26216              	.LBE13005:
 26217              	.LBE13004:
 26218              	.LBE13014:
 26219              	.LBB13015:
 26220              	.LBB13008:
 26221              	.LBB13009:
 26222              		.loc 45 83 33 view .LVU6161
 26223 0c80 0462     		str	r4, [r0, #32]
 26224              	.LBE13009:
 26225              	.LBE13008:
 26226              	.LBE13015:
 26227              	.LBE13019:
 26228              	.LBE13066:
 26229              	.LBB13067:
 26230              	.LBB13042:
 26231              	.LBB13040:
 26232              	.LBB13027:
 26233              	.LBB13028:
 26234              		.loc 46 87 35 view .LVU6162
 26235 0c82 C0F8E440 		str	r4, [r0, #228]
 26236 0c86 474E     		ldr	r6, .L912+72
 26237              	.LBE13028:
 26238              	.LBE13027:
 26239              	.LBE13040:
 26240              	.LBE13042:
 26241              	.LBE13067:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26242              		.loc 3 39 18 view .LVU6163
 26243 0c88 C3E96342 		strd	r4, r2, [r3, #396]
 26244 0c8c C3E96541 		strd	r4, r1, [r3, #404]
 26245 0c90 454A     		ldr	r2, .L912+76
 26246 0c92 06F50C75 		add	r5, r6, #560
 26247              	.LBB13068:
 26248              	.LBB13060:
 26249              	.LBB13057:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 26250              		.loc 4 16 19 view .LVU6164
 26251 0c96 4549     		ldr	r1, .L912+80
 26252              	.LBE13057:
 26253              	.LBE13060:
 26254              	.LBE13068:
  39:../../libdaisy/src/daisy_patch.h ****     /** Destructor */
 26255              		.loc 3 39 18 view .LVU6165
 26256 0c98 C3F89C21 		str	r2, [r3, #412]
 26257              	.LVL1515:
 26258              	.LBB13069:
 26259              	.LBB13061:
 26260              	.LBB13058:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 26261              		.loc 4 16 19 view .LVU6166
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 898


 26262 0c9c C3F8A011 		str	r1, [r3, #416]
 26263              	.LVL1516:
 26264              	.LBB13055:
 26265              	.LBI13048:
 132:../../libdaisy/src/dev/oled_ssd130x.h **** {
 26266              		.loc 15 132 7 is_stmt 1 view .LVU6167
 26267              	.LBB13054:
 26268              	.LBI13049:
  60:../../libdaisy/src/dev/oled_ssd130x.h **** {
 26269              		.loc 15 60 7 view .LVU6168
 26270              	.LBB13053:
 26271              	.LBI13050:
 26272              		.loc 48 99 5 view .LVU6169
 26273              		.loc 48 99 5 is_stmt 0 view .LVU6170
 26274              	.LBE13053:
 26275              	.LBE13054:
 26276              	.LBE13055:
 26277              	.LBE13058:
 26278              	.LBE13061:
 26279              	.LBE13069:
 26280              	.LBE13071:
 26281              	.LBE13073:
  39:Jellybeans.cpp **** DaisyPatch patch;
 26282              		.loc 14 39 12 view .LVU6171
 26283 0ca0 2E4A     		ldr	r2, .L912
 26284 0ca2 4349     		ldr	r1, .L912+84
 26285 0ca4 FFF7FEFF 		bl	__aeabi_atexit
 26286              	.LVL1517:
 26287              	.LBB13074:
 26288              	.LBI13074:
 431:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 26289              		.loc 18 431 7 is_stmt 1 view .LVU6172
 26290              	.LBB13075:
 26291              	.LBB13076:
 26292              	.LBI13076:
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 26293              		.loc 18 190 7 view .LVU6173
 190:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 26294              		.loc 18 190 7 is_stmt 0 view .LVU6174
 26295              	.LBE13076:
 26296              	.LBB13077:
 26297              	.LBI13077:
 144:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 26298              		.loc 19 144 7 is_stmt 1 view .LVU6175
 26299              	.LBB13078:
 26300              	.LBI13078:
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26301              		.loc 20 79 7 view .LVU6176
  79:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26302              		.loc 20 79 7 is_stmt 0 view .LVU6177
 26303              	.LBE13078:
 26304              	.LBE13077:
 26305              	.LBB13079:
 26306              	.LBI13079:
 159:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26307              		.loc 18 159 2 is_stmt 1 view .LVU6178
 26308              	.LBB13080:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 899


 26309              	.LBB13081:
 26310              	.LBB13082:
 26311              	.LBI13082:
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 26312              		.loc 37 101 5 view .LVU6179
 101:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 26313              		.loc 37 101 5 is_stmt 0 view .LVU6180
 26314              	.LBE13082:
 26315              	.LBB13083:
 26316              	.LBI13083:
 147:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26317              		.loc 19 147 7 is_stmt 1 view .LVU6181
 26318              	.LBB13084:
 26319              	.LBI13084:
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26320              		.loc 20 82 7 view .LVU6182
  82:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26321              		.loc 20 82 7 is_stmt 0 view .LVU6183
 26322              	.LBE13084:
 26323              	.LBE13083:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 26324              		.loc 18 160 46 view .LVU6184
 26325 0ca8 4248     		ldr	r0, .L912+88
 26326              	.LBE13081:
 26327              	.LBE13080:
 26328              	.LBE13079:
 26329              	.LBE13075:
 26330              	.LBE13074:
  43:Jellybeans.cpp **** std::string debugString;
 26331              		.loc 14 43 13 view .LVU6185
 26332 0caa 4349     		ldr	r1, .L912+92
 26333              	.LBB13104:
 26334              	.LBB13102:
 26335              	.LBB13089:
 26336              	.LBB13087:
 26337              	.LBB13085:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 26338              		.loc 18 160 46 view .LVU6186
 26339 0cac 00F10803 		add	r3, r0, #8
 26340              	.LBE13085:
 26341              	.LBE13087:
 26342              	.LBE13089:
 26343              	.LBE13102:
 26344              	.LBE13104:
  43:Jellybeans.cpp **** std::string debugString;
 26345              		.loc 14 43 13 view .LVU6187
 26346 0cb0 2A4A     		ldr	r2, .L912
 26347              	.LBB13105:
 26348              	.LBB13103:
 26349              	.LBB13090:
 26350              	.LBB13091:
 26351              	.LBB13092:
 183:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 26352              		.loc 18 183 26 view .LVU6188
 26353 0cb2 4460     		str	r4, [r0, #4]
 26354              	.LBE13092:
 26355              	.LBE13091:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 900


 26356              	.LBB13093:
 26357              	.LBB13094:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 26358              		.loc 21 322 14 view .LVU6189
 26359 0cb4 0472     		strb	r4, [r0, #8]
 26360 0cb6 3446     		mov	r4, r6
 26361              	.LBE13094:
 26362              	.LBE13093:
 26363              	.LBE13090:
 26364              	.LBB13098:
 26365              	.LBB13088:
 26366              	.LBB13086:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 26367              		.loc 18 160 46 view .LVU6190
 26368 0cb8 0360     		str	r3, [r0]
 26369              	.LVL1518:
 160:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 26370              		.loc 18 160 46 view .LVU6191
 26371              	.LBE13086:
 26372              	.LBE13088:
 26373              	.LBE13098:
 26374              	.LBB13099:
 26375              	.LBI13099:
 26376              		.loc 19 162 7 is_stmt 1 view .LVU6192
 26377              	.LBB13100:
 26378              	.LBI13100:
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26379              		.loc 20 89 7 view .LVU6193
  89:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 26380              		.loc 20 89 7 is_stmt 0 view .LVU6194
 26381              	.LBE13100:
 26382              	.LBE13099:
 26383              	.LBB13101:
 26384              	.LBI13090:
 214:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 26385              		.loc 18 214 7 is_stmt 1 view .LVU6195
 26386              	.LBB13096:
 26387              	.LBI13091:
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 26388              		.loc 18 182 7 view .LVU6196
 182:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 26389              		.loc 18 182 7 is_stmt 0 view .LVU6197
 26390              	.LBE13096:
 26391              	.LBB13097:
 26392              	.LBI13093:
 321:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 26393              		.loc 21 321 7 is_stmt 1 view .LVU6198
 26394              	.LBB13095:
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 26395              		.loc 21 322 9 view .LVU6199
 322:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 26396              		.loc 21 322 9 is_stmt 0 view .LVU6200
 26397              	.LBE13095:
 26398              	.LBE13097:
 26399              	.LBE13101:
 26400              	.LBE13103:
 26401              	.LBE13105:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 901


  43:Jellybeans.cpp **** std::string debugString;
 26402              		.loc 14 43 13 view .LVU6201
 26403 0cba FFF7FEFF 		bl	__aeabi_atexit
 26404              	.LVL1519:
  49:Jellybeans.cpp **** const FontDef font = Font_7x10;
 26405              		.loc 14 49 15 view .LVU6202
 26406 0cbe 3F4A     		ldr	r2, .L912+96
 26407 0cc0 3F4B     		ldr	r3, .L912+100
 26408 0cc2 92E80300 		ldm	r2, {r0, r1}
 26409 0cc6 83E80300 		stm	r3, {r0, r1}
 26410              	.LVL1520:
 26411              	.LBB13106:
 26412              	.LBI13106:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 26413              		.loc 29 94 12 is_stmt 1 view .LVU6203
 26414              	.LBB13107:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 26415              		.loc 29 94 12 view .LVU6204
 26416              	.L892:
 26417 0cca 2046     		mov	r0, r4
 26418 0ccc 3834     		adds	r4, r4, #56
 26419 0cce FFF7FEFF 		bl	_ZN10jellybeans8MenuItemC1Ev
 26420              	.LVL1521:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 26421              		.loc 29 94 12 view .LVU6205
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 26422              		.loc 29 94 12 view .LVU6206
 26423 0cd2 AC42     		cmp	r4, r5
 26424 0cd4 F9D1     		bne	.L892
 26425              	.LVL1522:
  94:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****     {
 26426              		.loc 29 94 12 is_stmt 0 view .LVU6207
 26427              	.LBE13107:
 26428              	.LBE13106:
  65:Jellybeans.cpp **** std::array<MenuItem, 10> menuItems;
 26429              		.loc 14 65 26 view .LVU6208
 26430 0cd6 214A     		ldr	r2, .L912
 26431 0cd8 3A49     		ldr	r1, .L912+104
 26432 0cda 3248     		ldr	r0, .L912+72
 26433 0cdc FFF7FEFF 		bl	__aeabi_atexit
 26434              	.LVL1523:
 26435              	.LBB13108:
 26436              	.LBI13108:
 26437              		.loc 29 185 7 is_stmt 1 view .LVU6209
 26438              	.LBB13109:
 26439              	.LBI13109:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26440              		.loc 29 55 7 view .LVU6210
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26441              		.loc 29 55 7 is_stmt 0 view .LVU6211
 26442              	.LBE13109:
 26443              	.LBE13108:
  69:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 26444              		.loc 14 69 11 view .LVU6212
 26445 0ce0 394B     		ldr	r3, .L912+108
 26446 0ce2 3A4A     		ldr	r2, .L912+112
  70:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 902


 26447              		.loc 14 70 11 view .LVU6213
 26448 0ce4 03F13804 		add	r4, r3, #56
  72:Jellybeans.cpp **** MenuItem *mRoot      = &menuItems[4];
 26449              		.loc 14 72 11 view .LVU6214
 26450 0ce8 03F1A805 		add	r5, r3, #168
  69:Jellybeans.cpp **** MenuItem *mDivision  = &menuItems[1];
 26451              		.loc 14 69 11 view .LVU6215
 26452 0cec 1360     		str	r3, [r2]
  68:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 26453              		.loc 14 68 11 view .LVU6216
 26454 0cee 3849     		ldr	r1, .L912+116
  70:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 26455              		.loc 14 70 11 view .LVU6217
 26456 0cf0 3848     		ldr	r0, .L912+120
  72:Jellybeans.cpp **** MenuItem *mRoot      = &menuItems[4];
 26457              		.loc 14 72 11 view .LVU6218
 26458 0cf2 394A     		ldr	r2, .L912+124
  70:Jellybeans.cpp **** MenuItem *mVoicing   = &menuItems[2];
 26459              		.loc 14 70 11 view .LVU6219
 26460 0cf4 0460     		str	r4, [r0]
  71:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 26461              		.loc 14 71 11 view .LVU6220
 26462 0cf6 03F17004 		add	r4, r3, #112
  72:Jellybeans.cpp **** MenuItem *mRoot      = &menuItems[4];
 26463              		.loc 14 72 11 view .LVU6221
 26464 0cfa 1560     		str	r5, [r2]
  68:Jellybeans.cpp **** MenuItem *mPattern   = &menuItems[0];
 26465              		.loc 14 68 11 view .LVU6222
 26466 0cfc 0E60     		str	r6, [r1]
 26467              	.LVL1524:
 26468              	.LBB13110:
 26469              	.LBI13110:
 26470              		.loc 29 185 7 is_stmt 1 view .LVU6223
 26471              	.LBB13111:
 26472              	.LBI13111:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26473              		.loc 29 55 7 view .LVU6224
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26474              		.loc 29 55 7 is_stmt 0 view .LVU6225
 26475              	.LBE13111:
 26476              	.LBE13110:
 26477              	.LBB13112:
 26478              	.LBI13112:
 26479              		.loc 29 185 7 is_stmt 1 view .LVU6226
 26480              	.LBB13113:
 26481              	.LBI13113:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26482              		.loc 29 55 7 view .LVU6227
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26483              		.loc 29 55 7 is_stmt 0 view .LVU6228
 26484              	.LBE13113:
 26485              	.LBE13112:
 26486              	.LBB13114:
 26487              	.LBI13114:
 26488              		.loc 29 185 7 is_stmt 1 view .LVU6229
 26489              	.LBB13115:
 26490              	.LBI13115:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 903


  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26491              		.loc 29 55 7 view .LVU6230
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26492              		.loc 29 55 7 is_stmt 0 view .LVU6231
 26493              	.LBE13115:
 26494              	.LBE13114:
  73:Jellybeans.cpp **** MenuItem *mMode      = &menuItems[5];
 26495              		.loc 14 73 11 view .LVU6232
 26496 0cfe 03F1E001 		add	r1, r3, #224
  71:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 26497              		.loc 14 71 11 view .LVU6233
 26498 0d02 3648     		ldr	r0, .L912+128
  73:Jellybeans.cpp **** MenuItem *mMode      = &menuItems[5];
 26499              		.loc 14 73 11 view .LVU6234
 26500 0d04 364A     		ldr	r2, .L912+132
  71:Jellybeans.cpp **** MenuItem *mInversion = &menuItems[3];
 26501              		.loc 14 71 11 view .LVU6235
 26502 0d06 0460     		str	r4, [r0]
 26503              	.LVL1525:
 26504              	.LBB13116:
 26505              	.LBI13116:
 26506              		.loc 29 185 7 is_stmt 1 view .LVU6236
 26507              	.LBB13117:
 26508              	.LBI13117:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26509              		.loc 29 55 7 view .LVU6237
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26510              		.loc 29 55 7 is_stmt 0 view .LVU6238
 26511              	.LBE13117:
 26512              	.LBE13116:
 26513              	.LBB13118:
 26514              	.LBI13118:
 26515              		.loc 29 185 7 is_stmt 1 view .LVU6239
 26516              	.LBB13119:
 26517              	.LBI13119:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26518              		.loc 29 55 7 view .LVU6240
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26519              		.loc 29 55 7 is_stmt 0 view .LVU6241
 26520              	.LBE13119:
 26521              	.LBE13118:
  74:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 26522              		.loc 14 74 11 view .LVU6242
 26523 0d08 03F58C70 		add	r0, r3, #280
  73:Jellybeans.cpp **** MenuItem *mMode      = &menuItems[5];
 26524              		.loc 14 73 11 view .LVU6243
 26525 0d0c 1160     		str	r1, [r2]
 26526              	.LVL1526:
 26527              	.LBB13120:
 26528              	.LBI13120:
 26529              		.loc 29 185 7 is_stmt 1 view .LVU6244
 26530              	.LBB13121:
 26531              	.LBI13121:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26532              		.loc 29 55 7 view .LVU6245
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26533              		.loc 29 55 7 is_stmt 0 view .LVU6246
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 904


 26534              	.LBE13121:
 26535              	.LBE13120:
  75:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 26536              		.loc 14 75 11 view .LVU6247
 26537 0d0e 03F5A871 		add	r1, r3, #336
  74:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 26538              		.loc 14 74 11 view .LVU6248
 26539 0d12 344A     		ldr	r2, .L912+136
  76:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 26540              		.loc 14 76 11 view .LVU6249
 26541 0d14 03F5C474 		add	r4, r3, #392
  77:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 26542              		.loc 14 77 11 view .LVU6250
 26543 0d18 03F5E073 		add	r3, r3, #448
  74:Jellybeans.cpp **** MenuItem *mRhythm    = &menuItems[6];
 26544              		.loc 14 74 11 view .LVU6251
 26545 0d1c 1060     		str	r0, [r2]
 26546              	.LVL1527:
 26547              	.LBB13122:
 26548              	.LBI13122:
 26549              		.loc 29 185 7 is_stmt 1 view .LVU6252
 26550              	.LBB13123:
 26551              	.LBI13123:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26552              		.loc 29 55 7 view .LVU6253
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26553              		.loc 29 55 7 is_stmt 0 view .LVU6254
 26554              	.LBE13123:
 26555              	.LBE13122:
  75:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 26556              		.loc 14 75 11 view .LVU6255
 26557 0d1e 324A     		ldr	r2, .L912+140
  76:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 26558              		.loc 14 76 11 view .LVU6256
 26559 0d20 3248     		ldr	r0, .L912+144
  75:Jellybeans.cpp **** MenuItem *mOctRng    = &menuItems[7];
 26560              		.loc 14 75 11 view .LVU6257
 26561 0d22 1160     		str	r1, [r2]
 26562              	.LVL1528:
 26563              	.LBB13124:
 26564              	.LBI13124:
 26565              		.loc 29 185 7 is_stmt 1 view .LVU6258
 26566              	.LBB13125:
 26567              	.LBI13125:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26568              		.loc 29 55 7 view .LVU6259
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26569              		.loc 29 55 7 is_stmt 0 view .LVU6260
 26570              	.LBE13125:
 26571              	.LBE13124:
  77:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 26572              		.loc 14 77 11 view .LVU6261
 26573 0d24 3249     		ldr	r1, .L912+148
  76:Jellybeans.cpp **** MenuItem *mOct       = &menuItems[8];
 26574              		.loc 14 76 11 view .LVU6262
 26575 0d26 0460     		str	r4, [r0]
 26576              	.LVL1529:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 905


 26577              	.LBB13126:
 26578              	.LBI13126:
 26579              		.loc 29 185 7 is_stmt 1 view .LVU6263
 26580              	.LBB13127:
 26581              	.LBI13127:
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26582              		.loc 29 55 7 view .LVU6264
  55:e:\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\array ****       { return const_cast<_Tp&>(__t[__n]); }
 26583              		.loc 29 55 7 is_stmt 0 view .LVU6265
 26584              	.LBE13127:
 26585              	.LBE13126:
  77:Jellybeans.cpp **** MenuItem *mClockDiv  = &menuItems[9];
 26586              		.loc 14 77 11 view .LVU6266
 26587 0d28 0B60     		str	r3, [r1]
 26588              	.LVL1530:
 26589              	.LBB13128:
 26590              	.LBI13128:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 26591              		.loc 1 25 5 is_stmt 1 view .LVU6267
 26592              	.LBB13129:
 26593              	.LBB13130:
 26594              	.LBI13130:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26595              		.loc 2 21 5 view .LVU6268
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26596              		.loc 2 21 5 is_stmt 0 view .LVU6269
 26597              	.LBE13130:
 26598              	.LBE13129:
 26599              	.LBE13128:
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 26600              		.loc 14 79 11 view .LVU6270
 26601 0d2a 0C4A     		ldr	r2, .L912
 26602 0d2c 3149     		ldr	r1, .L912+152
 26603 0d2e 3248     		ldr	r0, .L912+156
 26604 0d30 FFF7FEFF 		bl	__aeabi_atexit
 26605              	.LVL1531:
 26606              	.LBB13131:
 26607              	.LBI13131:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 26608              		.loc 1 25 5 is_stmt 1 view .LVU6271
 26609              	.LBB13132:
 26610              	.LBB13133:
 26611              	.LBI13133:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26612              		.loc 2 21 5 view .LVU6272
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26613              		.loc 2 21 5 is_stmt 0 view .LVU6273
 26614              	.LBE13133:
 26615              	.LBE13132:
 26616              	.LBE13131:
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 26617              		.loc 14 79 25 view .LVU6274
 26618 0d34 094A     		ldr	r2, .L912
 26619 0d36 2F49     		ldr	r1, .L912+152
 26620 0d38 3048     		ldr	r0, .L912+160
 26621 0d3a FFF7FEFF 		bl	__aeabi_atexit
 26622              	.LVL1532:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 906


 26623              	.LBB13134:
 26624              	.LBI13134:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 26625              		.loc 1 25 5 is_stmt 1 view .LVU6275
 26626              	.LBB13135:
 26627              	.LBB13136:
 26628              	.LBI13136:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26629              		.loc 2 21 5 view .LVU6276
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26630              		.loc 2 21 5 is_stmt 0 view .LVU6277
 26631              	.LBE13136:
 26632              	.LBE13135:
 26633              	.LBE13134:
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 26634              		.loc 14 79 40 view .LVU6278
 26635 0d3e 074A     		ldr	r2, .L912
 26636 0d40 2C49     		ldr	r1, .L912+152
 26637 0d42 2F48     		ldr	r0, .L912+164
 26638 0d44 FFF7FEFF 		bl	__aeabi_atexit
 26639              	.LVL1533:
 26640              	.LBB13137:
 26641              	.LBI13137:
  25:../../libdaisy/src/hid/parameter.h ****     /** Destructor */
 26642              		.loc 1 25 5 is_stmt 1 view .LVU6279
 26643              	.LBB13138:
 26644              	.LBB13139:
 26645              	.LBI13139:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26646              		.loc 2 21 5 view .LVU6280
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 26647              		.loc 2 21 5 is_stmt 0 view .LVU6281
 26648              	.LBE13139:
 26649              	.LBE13138:
 26650              	.LBE13137:
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 26651              		.loc 14 79 54 view .LVU6282
 26652 0d48 044A     		ldr	r2, .L912
 26653 0d4a 2A49     		ldr	r1, .L912+152
 26654 0d4c 2D48     		ldr	r0, .L912+168
 26655              		.loc 14 279 1 view .LVU6283
 26656 0d4e 0DF2744D 		addw	sp, sp, #1140
 26657              		.cfi_def_cfa_offset 36
 26658              		@ sp needed
 26659 0d52 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 26660              		.cfi_restore 14
 26661              		.cfi_restore 11
 26662              		.cfi_restore 10
 26663              		.cfi_restore 9
 26664              		.cfi_restore 8
 26665              		.cfi_restore 7
 26666              		.cfi_restore 6
 26667              		.cfi_restore 5
 26668              		.cfi_restore 4
 26669              		.cfi_def_cfa_offset 0
  79:Jellybeans.cpp **** Parameter patternParam, divisionParam, voicingParam, inversionParam;
 26670              		.loc 14 79 54 view .LVU6284
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 907


 26671 0d56 FFF7FEBF 		b	__aeabi_atexit
 26672              	.LVL1534:
 26673              	.L913:
 26674 0d5a 00BF     		.align	2
 26675              	.L912:
 26676 0d5c 00000000 		.word	__dso_handle
 26677 0d60 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 26678 0d64 00000000 		.word	.LANCHOR20
 26679 0d68 EC010000 		.word	.LC134
 26680 0d6c F0010000 		.word	.LC135
 26681 0d70 F4010000 		.word	.LC136
 26682 0d74 00000000 		.word	.LANCHOR26
 26683 0d78 F8010000 		.word	.LC137
 26684 0d7c 00000000 		.word	.LANCHOR25
 26685 0d80 FC010000 		.word	.LC138
 26686 0d84 00020000 		.word	.LC139
 26687 0d88 08020000 		.word	.LC140
 26688 0d8c 10020000 		.word	.LC141
 26689 0d90 18020000 		.word	.LC142
 26690 0d94 00000000 		.word	.LANCHOR19
 26691 0d98 00000000 		.word	patch
 26692 0d9c 01070106 		.word	100730625
 26693 0da0 80707FF0 		.word	-260083584
 26694 0da4 00000000 		.word	.LANCHOR8
 26695 0da8 0FF80700 		.word	522255
 26696 0dac 08000000 		.word	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE+8
 26697 0db0 00000000 		.word	_ZN5daisy10DaisyPatchD1Ev
 26698 0db4 00000000 		.word	.LANCHOR18
 26699 0db8 00000000 		.word	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 26700 0dbc 00000000 		.word	Font_7x10
 26701 0dc0 00000000 		.word	.LANCHOR17
 26702 0dc4 00000000 		.word	_ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
 26703 0dc8 38000000 		.word	.LANCHOR8+56
 26704 0dcc 00000000 		.word	.LANCHOR32
 26705 0dd0 00000000 		.word	.LANCHOR3
 26706 0dd4 00000000 		.word	.LANCHOR4
 26707 0dd8 00000000 		.word	.LANCHOR1
 26708 0ddc 00000000 		.word	.LANCHOR33
 26709 0de0 00000000 		.word	.LANCHOR5
 26710 0de4 00000000 		.word	.LANCHOR34
 26711 0de8 00000000 		.word	.LANCHOR35
 26712 0dec 00000000 		.word	.LANCHOR2
 26713 0df0 00000000 		.word	.LANCHOR36
 26714 0df4 00000000 		.word	_ZN5daisy9ParameterD1Ev
 26715 0df8 00000000 		.word	.LANCHOR6
 26716 0dfc 00000000 		.word	.LANCHOR9
 26717 0e00 00000000 		.word	.LANCHOR11
 26718 0e04 00000000 		.word	.LANCHOR13
 26719              		.cfi_endproc
 26720              	.LFE6246:
 26722              		.section	.text.startup._GLOBAL__sub_I_patch,"ax",%progbits
 26723              		.align	1
 26724              		.p2align 2,,3
 26725              		.syntax unified
 26726              		.thumb
 26727              		.thumb_func
 26728              		.fpu fpv5-d16
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 908


 26730              	_GLOBAL__sub_I_patch:
 26731              	.LFB6220:
 26732              		.loc 14 279 1 is_stmt 1 view -0
 26733              		.cfi_startproc
 26734              		@ args = 0, pretend = 0, frame = 0
 26735              		@ frame_needed = 0, uses_anonymous_args = 0
 26736              		@ link register save eliminated.
 26737              		.loc 14 279 1 is_stmt 0 view .LVU6286
 26738 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 26739              	.LVL1535:
 26740              		.cfi_endproc
 26741              	.LFE6220:
 26743              		.section	.init_array,"aw",%init_array
 26744              		.align	2
 26745 0000 00000000 		.word	_GLOBAL__sub_I_patch(target1)
 26746              		.weak	_ZTSFvvE
 26747              		.section	.rodata._ZTSFvvE,"aG",%progbits,_ZTSFvvE,comdat
 26748              		.align	2
 26751              	_ZTSFvvE:
 26752 0000 46767645 		.ascii	"FvvE\000"
 26752      00
 26753              		.weak	_ZTIFvvE
 26754              		.section	.rodata._ZTIFvvE,"aG",%progbits,_ZTIFvvE,comdat
 26755              		.align	2
 26758              	_ZTIFvvE:
 26759 0000 08000000 		.word	_ZTVN10__cxxabiv120__function_type_infoE+8
 26760 0004 00000000 		.word	_ZTSFvvE
 26761              		.weak	_ZTSN5daisy21OneBitGraphicsDisplayE
 26762              		.section	.rodata._ZTSN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTSN5daisy21OneBitGraphicsDis
 26763              		.align	2
 26766              	_ZTSN5daisy21OneBitGraphicsDisplayE:
 26767 0000 4E356461 		.ascii	"N5daisy21OneBitGraphicsDisplayE\000"
 26767      69737932 
 26767      314F6E65 
 26767      42697447 
 26767      72617068 
 26768              		.weak	_ZTIN5daisy21OneBitGraphicsDisplayE
 26769              		.section	.rodata._ZTIN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTIN5daisy21OneBitGraphicsDis
 26770              		.align	2
 26773              	_ZTIN5daisy21OneBitGraphicsDisplayE:
 26774 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 26775 0004 00000000 		.word	_ZTSN5daisy21OneBitGraphicsDisplayE
 26776              		.weak	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 26777              		.section	.rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 26778              		.align	2
 26781              	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 26782 0000 4E356461 		.ascii	"N5daisy25OneBitGraphicsDisplayImplINS_11OledDisplay"
 26782      69737932 
 26782      354F6E65 
 26782      42697447 
 26782      72617068 
 26783 0033 494E535F 		.ascii	"INS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpi"
 26783      31335353 
 26783      44313330 
 26783      78447269 
 26783      76657249 
 26784 0066 5472616E 		.ascii	"TransportEEEEEEE\000"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 909


 26784      73706F72 
 26784      74454545 
 26784      45454545 
 26784      00
 26785              		.weak	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 26786              		.section	.rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 26787              		.align	2
 26790              	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 26791 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 26792 0004 00000000 		.word	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 26793 0008 00000000 		.word	_ZTIN5daisy21OneBitGraphicsDisplayE
 26794              		.weak	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 26795              		.section	.rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 26796              		.align	2
 26799              	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 26800 0000 4E356461 		.ascii	"N5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64E"
 26800      69737931 
 26800      314F6C65 
 26800      64446973 
 26800      706C6179 
 26801 0033 4E535F32 		.ascii	"NS_24SSD130x4WireSpiTransportEEEEE\000"
 26801      34535344 
 26801      31333078 
 26801      34576972 
 26801      65537069 
 26802              		.weak	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 26803              		.section	.rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 26804              		.align	2
 26807              	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 26808 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 26809 0004 00000000 		.word	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 26810 0008 00000000 		.word	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 26811              		.weak	_ZTSPFvvE
 26812              		.section	.rodata._ZTSPFvvE,"aG",%progbits,_ZTSPFvvE,comdat
 26813              		.align	2
 26816              	_ZTSPFvvE:
 26817 0000 50467676 		.ascii	"PFvvE\000"
 26817      4500
 26818              		.weak	_ZTIPFvvE
 26819              		.section	.rodata._ZTIPFvvE,"aG",%progbits,_ZTIPFvvE,comdat
 26820              		.align	2
 26823              	_ZTIPFvvE:
 26824 0000 08000000 		.word	_ZTVN10__cxxabiv119__pointer_type_infoE+8
 26825 0004 00000000 		.word	_ZTSPFvvE
 26826 0008 00000000 		.word	0
 26827 000c 00000000 		.word	_ZTIFvvE
 26828              		.weak	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 26829              		.section	.rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 26830              		.align	2
 26833              	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 26834 0000 00000000 		.word	0
 26835 0004 00000000 		.word	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 26836 0008 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 26837 000c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 26838 0010 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 26839 0014 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 26840 0018 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 910


 26841 001c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 26842 0020 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26843 0024 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26844 0028 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26845 002c 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26846 0030 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26847 0034 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 26848 0038 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 26849              		.global	inversionCurCvVal
 26850              		.global	voicingCurCvVal
 26851              		.global	divisionCurCvVal
 26852              		.global	patternCurCvVal
 26853              		.global	inversionParam
 26854              		.global	voicingParam
 26855              		.global	divisionParam
 26856              		.global	patternParam
 26857              		.global	mClockDiv
 26858              		.global	mOct
 26859              		.global	mOctRng
 26860              		.global	mRhythm
 26861              		.global	mMode
 26862              		.global	mRoot
 26863              		.global	mInversion
 26864              		.global	mVoicing
 26865              		.global	mDivision
 26866              		.global	mPattern
 26867              		.global	menuItems
 26868              		.global	arp
 26869              		.global	isEditing
 26870              		.global	menuPos
 26871              		.global	arpNoteDacOutput1
 26872              		.global	_Z11debugStringB5cxx11
 26873              		.global	patch
 26874              		.section	.rodata
 26875              		.align	2
 26876              		.set	.LANCHOR29,. + 0
 26877              	.LC0:
 26878 0000 00000000 		.word	0
 26879 0004 02000000 		.word	2
 26880 0008 04000000 		.word	4
 26881 000c 05000000 		.word	5
 26882 0010 07000000 		.word	7
 26883 0014 09000000 		.word	9
 26884 0018 0B000000 		.word	11
 26885              	.LC1:
 26886 001c 00000000 		.word	0
 26887 0020 02000000 		.word	2
 26888 0024 03000000 		.word	3
 26889 0028 05000000 		.word	5
 26890 002c 07000000 		.word	7
 26891 0030 08000000 		.word	8
 26892 0034 0A000000 		.word	10
 26893              	.LC2:
 26894 0038 00000000 		.word	0
 26895 003c 02000000 		.word	2
 26896 0040 03000000 		.word	3
 26897 0044 05000000 		.word	5
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 911


 26898 0048 07000000 		.word	7
 26899 004c 09000000 		.word	9
 26900 0050 0A000000 		.word	10
 26901              	.LC3:
 26902 0054 00000000 		.word	0
 26903 0058 01000000 		.word	1
 26904 005c 03000000 		.word	3
 26905 0060 05000000 		.word	5
 26906 0064 07000000 		.word	7
 26907 0068 09000000 		.word	9
 26908 006c 0A000000 		.word	10
 26909              	.LC4:
 26910 0070 00000000 		.word	0
 26911 0074 02000000 		.word	2
 26912 0078 04000000 		.word	4
 26913 007c 06000000 		.word	6
 26914 0080 07000000 		.word	7
 26915 0084 09000000 		.word	9
 26916 0088 0B000000 		.word	11
 26917              	.LC5:
 26918 008c 00000000 		.word	0
 26919 0090 02000000 		.word	2
 26920 0094 04000000 		.word	4
 26921 0098 05000000 		.word	5
 26922 009c 07000000 		.word	7
 26923 00a0 09000000 		.word	9
 26924 00a4 0A000000 		.word	10
 26925              	.LC6:
 26926 00a8 00000000 		.word	0
 26927 00ac 01000000 		.word	1
 26928 00b0 03000000 		.word	3
 26929 00b4 05000000 		.word	5
 26930 00b8 06000000 		.word	6
 26931 00bc 08000000 		.word	8
 26932 00c0 0A000000 		.word	10
 26933              	.LC7:
 26934 00c4 01000000 		.word	1
 26935 00c8 03000000 		.word	3
 26936 00cc 05000000 		.word	5
 26937              	.LC8:
 26938 00d0 01000000 		.word	1
 26939 00d4 03000000 		.word	3
 26940 00d8 05000000 		.word	5
 26941 00dc 08000000 		.word	8
 26942              	.LC9:
 26943 00e0 01000000 		.word	1
 26944 00e4 03000000 		.word	3
 26945 00e8 05000000 		.word	5
 26946 00ec 07000000 		.word	7
 26947              	.LC10:
 26948 00f0 01000000 		.word	1
 26949 00f4 03000000 		.word	3
 26950 00f8 05000000 		.word	5
 26951 00fc 07000000 		.word	7
 26952 0100 08000000 		.word	8
 26953              	.LC11:
 26954 0104 01000000 		.word	1
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 912


 26955 0108 03000000 		.word	3
 26956 010c 05000000 		.word	5
 26957 0110 07000000 		.word	7
 26958 0114 09000000 		.word	9
 26959              	.LC12:
 26960 0118 01000000 		.word	1
 26961 011c 03000000 		.word	3
 26962 0120 05000000 		.word	5
 26963 0124 07000000 		.word	7
 26964 0128 09000000 		.word	9
 26965 012c 0B000000 		.word	11
 26966              	.LC13:
 26967 0130 01000000 		.word	1
 26968 0134 03000000 		.word	3
 26969 0138 05000000 		.word	5
 26970 013c 07000000 		.word	7
 26971 0140 09000000 		.word	9
 26972 0144 0B000000 		.word	11
 26973 0148 0D000000 		.word	13
 26974              	.LC14:
 26975 014c 01000000 		.word	1
 26976 0150 03000000 		.word	3
 26977 0154 05000000 		.word	5
 26978 0158 06000000 		.word	6
 26979              	.LC15:
 26980 015c 01000000 		.word	1
 26981 0160 02000000 		.word	2
 26982 0164 05000000 		.word	5
 26983              	.LC16:
 26984 0168 01000000 		.word	1
 26985 016c 04000000 		.word	4
 26986 0170 05000000 		.word	5
 26987              	.LC18:
 26988 0174 01000000 		.word	1
 26989 0178 05000000 		.word	5
 26990 017c 08000000 		.word	8
 26991              	.LC19:
 26992 0180 01000000 		.word	1
 26993 0184 07000000 		.word	7
 26994 0188 0A000000 		.word	10
 26995              	.LC20:
 26996 018c 01000000 		.word	1
 26997 0190 0A000000 		.word	10
 26998 0194 0E000000 		.word	14
 26999              		.section	.bss._Z11debugStringB5cxx11,"aw",%nobits
 27000              		.align	2
 27001              		.set	.LANCHOR18,. + 0
 27004              	_Z11debugStringB5cxx11:
 27005 0000 00000000 		.space	24
 27005      00000000 
 27005      00000000 
 27005      00000000 
 27005      00000000 
 27006              		.section	.bss._ZL4font,"aw",%nobits
 27007              		.align	2
 27008              		.set	.LANCHOR17,. + 0
 27011              	_ZL4font:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 913


 27012 0000 00000000 		.space	8
 27012      00000000 
 27013              		.section	.bss._ZN10jellybeansL10allOctavesE,"aw",%nobits
 27014              		.align	2
 27015              		.set	.LANCHOR26,. + 0
 27018              	_ZN10jellybeansL10allOctavesE:
 27019 0000 00000000 		.space	12
 27019      00000000 
 27019      00000000 
 27020              		.section	.bss._ZN10jellybeansL11arpPatternsE,"aw",%nobits
 27021              		.align	2
 27022              		.set	.LANCHOR19,. + 0
 27025              	_ZN10jellybeansL11arpPatternsE:
 27026 0000 00000000 		.space	12
 27026      00000000 
 27026      00000000 
 27027              		.section	.bss._ZN10jellybeansL12allNotes5OctE,"aw",%nobits
 27028              		.align	2
 27029              		.set	.LANCHOR28,. + 0
 27032              	_ZN10jellybeansL12allNotes5OctE:
 27033 0000 00000000 		.space	1440
 27033      00000000 
 27033      00000000 
 27033      00000000 
 27033      00000000 
 27034              		.section	.bss._ZN10jellybeansL13allInversionsE,"aw",%nobits
 27035              		.align	2
 27036              		.set	.LANCHOR22,. + 0
 27039              	_ZN10jellybeansL13allInversionsE:
 27040 0000 00000000 		.space	12
 27040      00000000 
 27040      00000000 
 27041              		.section	.bss._ZN10jellybeansL14allClockInDivsE,"aw",%nobits
 27042              		.align	2
 27043              		.set	.LANCHOR20,. + 0
 27046              	_ZN10jellybeansL14allClockInDivsE:
 27047 0000 00000000 		.space	12
 27047      00000000 
 27047      00000000 
 27048              		.section	.bss._ZN10jellybeansL15modeToSemitonesE,"aw",%nobits
 27049              		.align	2
 27050              		.set	.LANCHOR30,. + 0
 27053              	_ZN10jellybeansL15modeToSemitonesE:
 27054 0000 00000000 		.space	24
 27054      00000000 
 27054      00000000 
 27054      00000000 
 27054      00000000 
 27055              		.section	.bss._ZN10jellybeansL21voicingToScaleDegreesE,"aw",%nobits
 27056              		.align	2
 27057              		.set	.LANCHOR31,. + 0
 27060              	_ZN10jellybeansL21voicingToScaleDegreesE:
 27061 0000 00000000 		.space	24
 27061      00000000 
 27061      00000000 
 27061      00000000 
 27061      00000000 
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 914


 27062              		.section	.bss._ZN10jellybeansL5modesE,"aw",%nobits
 27063              		.align	2
 27064              		.set	.LANCHOR24,. + 0
 27067              	_ZN10jellybeansL5modesE:
 27068 0000 00000000 		.space	12
 27068      00000000 
 27068      00000000 
 27069              		.section	.bss._ZN10jellybeansL8allNotesE,"aw",%nobits
 27070              		.align	2
 27071              		.set	.LANCHOR23,. + 0
 27074              	_ZN10jellybeansL8allNotesE:
 27075 0000 00000000 		.space	12
 27075      00000000 
 27075      00000000 
 27076              		.section	.bss._ZN10jellybeansL8voicingsE,"aw",%nobits
 27077              		.align	2
 27078              		.set	.LANCHOR21,. + 0
 27081              	_ZN10jellybeansL8voicingsE:
 27082 0000 00000000 		.space	12
 27082      00000000 
 27082      00000000 
 27083              		.section	.bss._ZN10jellybeansL9emptyVectE,"aw",%nobits
 27084              		.align	2
 27085              		.set	.LANCHOR25,. + 0
 27088              	_ZN10jellybeansL9emptyVectE:
 27089 0000 00000000 		.space	12
 27089      00000000 
 27089      00000000 
 27090              		.section	.bss.arp,"aw",%nobits
 27091              		.align	2
 27092              		.set	.LANCHOR0,. + 0
 27095              	arp:
 27096 0000 00000000 		.space	4
 27097              		.section	.bss.arpNoteDacOutput1,"aw",%nobits
 27098              		.align	2
 27099              		.set	.LANCHOR27,. + 0
 27102              	arpNoteDacOutput1:
 27103 0000 00000000 		.space	4
 27104              		.section	.bss.divisionCurCvVal,"aw",%nobits
 27105              		.align	2
 27106              		.set	.LANCHOR10,. + 0
 27109              	divisionCurCvVal:
 27110 0000 00000000 		.space	4
 27111              		.section	.bss.divisionParam,"aw",%nobits
 27112              		.align	2
 27113              		.set	.LANCHOR9,. + 0
 27116              	divisionParam:
 27117 0000 00000000 		.space	56
 27117      00000000 
 27117      00000000 
 27117      00000000 
 27117      00000000 
 27118              		.section	.bss.inversionCurCvVal,"aw",%nobits
 27119              		.align	2
 27120              		.set	.LANCHOR14,. + 0
 27123              	inversionCurCvVal:
 27124 0000 00000000 		.space	4
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 915


 27125              		.section	.bss.inversionParam,"aw",%nobits
 27126              		.align	2
 27127              		.set	.LANCHOR13,. + 0
 27130              	inversionParam:
 27131 0000 00000000 		.space	56
 27131      00000000 
 27131      00000000 
 27131      00000000 
 27131      00000000 
 27132              		.section	.bss.isEditing,"aw",%nobits
 27133              		.set	.LANCHOR15,. + 0
 27136              	isEditing:
 27137 0000 00       		.space	1
 27138              		.section	.bss.mClockDiv,"aw",%nobits
 27139              		.align	2
 27140              		.set	.LANCHOR36,. + 0
 27143              	mClockDiv:
 27144 0000 00000000 		.space	4
 27145              		.section	.bss.mDivision,"aw",%nobits
 27146              		.align	2
 27147              		.set	.LANCHOR32,. + 0
 27150              	mDivision:
 27151 0000 00000000 		.space	4
 27152              		.section	.bss.mInversion,"aw",%nobits
 27153              		.align	2
 27154              		.set	.LANCHOR33,. + 0
 27157              	mInversion:
 27158 0000 00000000 		.space	4
 27159              		.section	.bss.mMode,"aw",%nobits
 27160              		.align	2
 27161              		.set	.LANCHOR5,. + 0
 27164              	mMode:
 27165 0000 00000000 		.space	4
 27166              		.section	.bss.mOct,"aw",%nobits
 27167              		.align	2
 27168              		.set	.LANCHOR2,. + 0
 27171              	mOct:
 27172 0000 00000000 		.space	4
 27173              		.section	.bss.mOctRng,"aw",%nobits
 27174              		.align	2
 27175              		.set	.LANCHOR35,. + 0
 27178              	mOctRng:
 27179 0000 00000000 		.space	4
 27180              		.section	.bss.mPattern,"aw",%nobits
 27181              		.align	2
 27182              		.set	.LANCHOR3,. + 0
 27185              	mPattern:
 27186 0000 00000000 		.space	4
 27187              		.section	.bss.mRhythm,"aw",%nobits
 27188              		.align	2
 27189              		.set	.LANCHOR34,. + 0
 27192              	mRhythm:
 27193 0000 00000000 		.space	4
 27194              		.section	.bss.mRoot,"aw",%nobits
 27195              		.align	2
 27196              		.set	.LANCHOR1,. + 0
 27199              	mRoot:
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 916


 27200 0000 00000000 		.space	4
 27201              		.section	.bss.mVoicing,"aw",%nobits
 27202              		.align	2
 27203              		.set	.LANCHOR4,. + 0
 27206              	mVoicing:
 27207 0000 00000000 		.space	4
 27208              		.section	.bss.menuItems,"aw",%nobits
 27209              		.align	2
 27210              		.set	.LANCHOR8,. + 0
 27213              	menuItems:
 27214 0000 00000000 		.space	560
 27214      00000000 
 27214      00000000 
 27214      00000000 
 27214      00000000 
 27215              		.section	.bss.menuPos,"aw",%nobits
 27216              		.align	2
 27217              		.set	.LANCHOR16,. + 0
 27220              	menuPos:
 27221 0000 00000000 		.space	4
 27222              		.section	.bss.patch,"aw",%nobits
 27223              		.align	2
 27226              	patch:
 27227 0000 00000000 		.space	38336
 27227      00000000 
 27227      00000000 
 27227      00000000 
 27227      00000000 
 27228              		.section	.bss.patternCurCvVal,"aw",%nobits
 27229              		.align	2
 27230              		.set	.LANCHOR7,. + 0
 27233              	patternCurCvVal:
 27234 0000 00000000 		.space	4
 27235              		.section	.bss.patternParam,"aw",%nobits
 27236              		.align	2
 27237              		.set	.LANCHOR6,. + 0
 27240              	patternParam:
 27241 0000 00000000 		.space	56
 27241      00000000 
 27241      00000000 
 27241      00000000 
 27241      00000000 
 27242              		.section	.bss.voicingCurCvVal,"aw",%nobits
 27243              		.align	2
 27244              		.set	.LANCHOR12,. + 0
 27247              	voicingCurCvVal:
 27248 0000 00000000 		.space	4
 27249              		.section	.bss.voicingParam,"aw",%nobits
 27250              		.align	2
 27251              		.set	.LANCHOR11,. + 0
 27254              	voicingParam:
 27255 0000 00000000 		.space	56
 27255      00000000 
 27255      00000000 
 27255      00000000 
 27255      00000000 
 27256              		.text
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 917


 27257              	.Letext0:
 27258              		.file 49 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\machine\\_default_type
 27259              		.file 50 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_stdint.h"
 27260              		.file 51 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdint.h"
 27261              		.file 52 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdd
 27262              		.file 53 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp
 27263              		.file 54 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std
 27264              		.file 55 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 27265              		.file 56 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 27266              		.file 57 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\type_trai
 27267              		.file 58 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-
 27268              		.file 59 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 27269              		.file 60 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\de
 27270              		.file 61 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 27271              		.file 62 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exc
 27272              		.file 63 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 27273              		.file 64 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 27274              		.file 65 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\str
 27275              		.file 66 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cha
 27276              		.file 67 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 27277              		.file 68 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alg
 27278              		.file 69 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 27279              		.file 70 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\use
 27280              		.file 71 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\tuple"
 27281              		.file 72 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vec
 27282              		.file 73 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\functiona
 27283              		.file 74 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ref
 27284              		.file 75 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr
 27285              		.file 76 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl
 27286              		.file 77 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\fun
 27287              		.file 78 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\pre
 27288              		.file 79 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type
 27289              		.file 80 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\_types.h"
 27290              		.file 81 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\reent.h"
 27291              		.file 82 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\sys\\lock.h"
 27292              		.file 83 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\math.h"
 27293              		.file 84 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdlib.h"
 27294              		.file 85 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 27295              		.file 86 "../../DaisySP/Source/Control/adenv.h"
 27296              		.file 87 "../../DaisySP/Source/Utility/dsp.h"
 27297              		.file 88 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stda
 27298              		.file 89 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\wchar.h"
 27299              		.file 90 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\locale.h"
 27300              		.file 91 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\stdio.h"
 27301              		.file 92 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 27302              		.file 93 "e:\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi\\include\\string.h"
 27303              		.file 94 "../../libdaisy/src/daisy_core.h"
 27304              		.file 95 "../../libdaisy/src/per/tim.h"
 27305              		.file 96 "../../libdaisy/src/per/sai.h"
 27306              		.file 97 "../../libdaisy/src/hid/MidiEvent.h"
 27307              		.file 98 "../../libdaisy/src/hid/gatein.h"
 27308              		.file 99 "../../libdaisy/src/hid/logger_impl.h"
 27309              		.file 100 "../../libdaisy/src/util/wav_format.h"
 27310              		.file 101 "../../libdaisy/src/per/gpio.h"
 27311              		.file 102 "../../libdaisy/src/dev/sdram.h"
 27312              		.file 103 "../../libdaisy/src/util/oled_fonts.h"
 27313              		.file 104 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 918


 27314              		.file 105 "chord.h"
 27315              		.file 106 "<built-in>"
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 919


DEFINED SYMBOLS
                            *ABS*:00000000 Jellybeans.cpp
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:17     .text._ZN5daisy9ParameterD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26     .text._ZN5daisy9ParameterD2Ev:00000000 _ZN5daisy9ParameterD1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:49     .text._ZN5daisy10DaisyPatchD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:57     .text._ZN5daisy10DaisyPatchD2Ev:00000000 _ZN5daisy10DaisyPatchD1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:139    .text._Z2cbv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:147    .text._Z2cbv:00000000 _Z2cbv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:161    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:169    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:169    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:194    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:202    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:234    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:242    .text._ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data:00000000 _ZNSt17_Function_handlerIFvvEPS0_E9_M_invokeERKSt9_Any_data
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:274    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:282    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:299    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:307    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:00000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:324    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:332    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:372    .text._Z6cbRootv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:380    .text._Z6cbRootv:00000000 _Z6cbRootv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:424    .text._Z6cbRootv:00000028 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:430    .text._Z8cbOctavev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:438    .text._Z8cbOctavev:00000000 _Z8cbOctavev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:482    .text._Z8cbOctavev:00000028 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:488    .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:492    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:499    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:855    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:00000060 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:867    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:875    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000000 _ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:986    .text._ZNSt17_Function_handlerIFvvEPS0_E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation:00000024 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26823  .rodata._ZTIPFvvE:00000000 _ZTIPFvvE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:993    .rodata._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:997    .text.startup._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1004   .text.startup._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0:00000000 _ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1337   .text.startup._ZNSt6vectorIiSaIiEEC2ESt16initializer_listIiERKS0_.constprop.0.isra.0:0000004c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1347   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1355   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1355   .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED2Ev:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1486   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1494   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1681   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1689   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1689   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1917   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1925   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:1925   .text._ZNSt5arrayIN10jellybeans8MenuItemELj10EED2Ev:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2276   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2283   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E.isra.0
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2559   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2567   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2567   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED1Ev
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 920


C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2878   .text._Z9cbPatternv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:2886   .text._Z9cbPatternv:00000000 _Z9cbPatternv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3003   .text._Z9cbPatternv:00000030 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3009   .text._Z9cbVoicingv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3017   .text._Z9cbVoicingv:00000000 _Z9cbVoicingv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3150   .text._Z9cbVoicingv:0000003c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3156   .text._Z6cbModev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3164   .text._Z6cbModev:00000000 _Z6cbModev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3297   .text._Z6cbModev:0000003c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3303   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3311   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3737   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:00000198 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3745   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:3753   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4210   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:000001b8 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4220   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4228   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4305   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4313   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4598   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:4606   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5291   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000368 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5305   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5531   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5539   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5678   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000046 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:5687   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000058 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:6895   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000320 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:6904   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:00000328 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:7215   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:000003e8 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:7223   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:7231   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:00000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:8341   .text._ZNSt14_Function_baseD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:8349   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:8349   .text._ZNSt14_Function_baseD2Ev:00000000 _ZNSt14_Function_baseD1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:8390   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:8397   .text._ZN10jellybeans8MenuItemaSEOS0_.isra.0:00000000 _ZN10jellybeans8MenuItemaSEOS0_.isra.0
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9196   .text._ZN10jellybeans8MenuItemD2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9204   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9204   .text._ZN10jellybeans8MenuItemD2Ev:00000000 _ZN10jellybeans8MenuItemD1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9552   .text._Z14updateControlsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9560   .text._Z14updateControlsv:00000000 _Z14updateControlsv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:9979   .text._Z14updateControlsv:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27226  .bss.patch:00000000 patch
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10001  .text._Z13updateOutputsv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10009  .text._Z13updateOutputsv:00000000 _Z13updateOutputsv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10053  .text._Z13updateOutputsv:00000030 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10060  .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10068  .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:00000000 _Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10465  .text._Z10drawStringNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii:0000012c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10476  .text._Z10updateOledv:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:10484  .text._Z10updateOledv:00000000 _Z10updateOledv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:12236  .text._Z10updateOledv:00000230 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:12259  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:12267  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13035  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:000000d4 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:12267  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ESt16initializer_listIS5_ERKS6_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 921


C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13048  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13056  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13056  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA6_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA6_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13526  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13534  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:13534  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA7_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA7_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14004  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14012  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14012  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA5_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA5_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14482  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14490  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14490  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA4_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA4_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14960  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS9_Lb1EEEOT_OT0_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14968  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:14968  .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC2IRA8_KcS9_Lb1EEEOT_OT0_:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC1IRA8_KcS9_Lb1EEEOT_OT0_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:15438  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:15446  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:16203  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:000000bc $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:15446  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:16220  .rodata.main.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:16245  .text.startup.main:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:16253  .text.startup.main:00000000 main
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:17862  .text.startup.main:000002e8 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:17899  .text.startup.main:00000378 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18262  .text.startup.main:000004dc $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18281  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18289  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED2Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18289  .text._ZNSt12_Vector_baseIiSaIiEED2Ev:00000000 _ZNSt12_Vector_baseIiSaIiEED1Ev
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18370  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18378  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18744  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:18752  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:19417  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_insert_range_uniqueIPKSB_EENSt9enable_ifIXsrSt7is_sameISB_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESO_SO_:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:19425  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_insert_range_uniqueIPKSB_EENSt9enable_ifIXsrSt7is_sameISB_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESO_SO_:00000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_insert_range_uniqueIPKSB_EENSt9enable_ifIXsrSt7is_sameISB_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESO_SO_
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:20504  .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_insert_range_uniqueIPKSB_EENSt9enable_ifIXsrSt7is_sameISB_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESO_SO_:0000013c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:20531  .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:20862  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:20869  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:22792  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000328 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:22874  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000046c $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:23907  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000007b0 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:23928  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000800 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:25459  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000b1c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:25502  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000b94 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26676  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000d5c $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26833  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26723  .text.startup._GLOBAL__sub_I_patch:00000000 $t
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26730  .text.startup._GLOBAL__sub_I_patch:00000000 _GLOBAL__sub_I_patch
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26744  .init_array:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26751  .rodata._ZTSFvvE:00000000 _ZTSFvvE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26748  .rodata._ZTSFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26758  .rodata._ZTIFvvE:00000000 _ZTIFvvE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26755  .rodata._ZTIFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26766  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 _ZTSN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26763  .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26773  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 _ZTIN5daisy21OneBitGraphicsDisplayE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26770  .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:00000000 $d
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 922


C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26781  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26778  .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26790  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 _ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26787  .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26799  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26796  .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26807  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 _ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26804  .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26816  .rodata._ZTSPFvvE:00000000 _ZTSPFvvE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26813  .rodata._ZTSPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26820  .rodata._ZTIPFvvE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26830  .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27123  .bss.inversionCurCvVal:00000000 inversionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27247  .bss.voicingCurCvVal:00000000 voicingCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27109  .bss.divisionCurCvVal:00000000 divisionCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27233  .bss.patternCurCvVal:00000000 patternCurCvVal
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27130  .bss.inversionParam:00000000 inversionParam
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27254  .bss.voicingParam:00000000 voicingParam
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27116  .bss.divisionParam:00000000 divisionParam
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27240  .bss.patternParam:00000000 patternParam
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27143  .bss.mClockDiv:00000000 mClockDiv
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27171  .bss.mOct:00000000 mOct
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27178  .bss.mOctRng:00000000 mOctRng
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27192  .bss.mRhythm:00000000 mRhythm
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27164  .bss.mMode:00000000 mMode
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27199  .bss.mRoot:00000000 mRoot
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27157  .bss.mInversion:00000000 mInversion
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27206  .bss.mVoicing:00000000 mVoicing
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27150  .bss.mDivision:00000000 mDivision
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27185  .bss.mPattern:00000000 mPattern
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27213  .bss.menuItems:00000000 menuItems
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27095  .bss.arp:00000000 arp
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27136  .bss.isEditing:00000000 isEditing
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27220  .bss.menuPos:00000000 menuPos
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27102  .bss.arpNoteDacOutput1:00000000 arpNoteDacOutput1
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27004  .bss._Z11debugStringB5cxx11:00000000 _Z11debugStringB5cxx11
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:26875  .rodata:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27000  .bss._Z11debugStringB5cxx11:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27007  .bss._ZL4font:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27011  .bss._ZL4font:00000000 _ZL4font
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27014  .bss._ZN10jellybeansL10allOctavesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27018  .bss._ZN10jellybeansL10allOctavesE:00000000 _ZN10jellybeansL10allOctavesE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27021  .bss._ZN10jellybeansL11arpPatternsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27025  .bss._ZN10jellybeansL11arpPatternsE:00000000 _ZN10jellybeansL11arpPatternsE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27028  .bss._ZN10jellybeansL12allNotes5OctE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27032  .bss._ZN10jellybeansL12allNotes5OctE:00000000 _ZN10jellybeansL12allNotes5OctE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27035  .bss._ZN10jellybeansL13allInversionsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27039  .bss._ZN10jellybeansL13allInversionsE:00000000 _ZN10jellybeansL13allInversionsE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27042  .bss._ZN10jellybeansL14allClockInDivsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27046  .bss._ZN10jellybeansL14allClockInDivsE:00000000 _ZN10jellybeansL14allClockInDivsE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27049  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27053  .bss._ZN10jellybeansL15modeToSemitonesE:00000000 _ZN10jellybeansL15modeToSemitonesE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27056  .bss._ZN10jellybeansL21voicingToScaleDegreesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27060  .bss._ZN10jellybeansL21voicingToScaleDegreesE:00000000 _ZN10jellybeansL21voicingToScaleDegreesE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27063  .bss._ZN10jellybeansL5modesE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27067  .bss._ZN10jellybeansL5modesE:00000000 _ZN10jellybeansL5modesE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27070  .bss._ZN10jellybeansL8allNotesE:00000000 $d
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 923


C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27074  .bss._ZN10jellybeansL8allNotesE:00000000 _ZN10jellybeansL8allNotesE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27077  .bss._ZN10jellybeansL8voicingsE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27081  .bss._ZN10jellybeansL8voicingsE:00000000 _ZN10jellybeansL8voicingsE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27084  .bss._ZN10jellybeansL9emptyVectE:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27088  .bss._ZN10jellybeansL9emptyVectE:00000000 _ZN10jellybeansL9emptyVectE
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27091  .bss.arp:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27098  .bss.arpNoteDacOutput1:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27105  .bss.divisionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27112  .bss.divisionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27119  .bss.inversionCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27126  .bss.inversionParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27137  .bss.isEditing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27139  .bss.mClockDiv:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27146  .bss.mDivision:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27153  .bss.mInversion:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27160  .bss.mMode:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27167  .bss.mOct:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27174  .bss.mOctRng:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27181  .bss.mPattern:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27188  .bss.mRhythm:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27195  .bss.mRoot:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27202  .bss.mVoicing:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27209  .bss.menuItems:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27216  .bss.menuPos:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27223  .bss.patch:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27229  .bss.patternCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27236  .bss.patternParam:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27243  .bss.voicingCurCvVal:00000000 $d
C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s:27250  .bss.voicingParam:00000000 $d
                           .group:00000000 _ZN5daisy9ParameterD5Ev
                           .group:00000000 _ZN5daisy10DaisyPatchD5Ev
                           .group:00000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED5Ev
                           .group:00000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj60EED5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED5Ev
                           .group:00000000 _ZNSt5arrayIN10jellybeans8MenuItemELj10EED5Ev
                           .group:00000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED5Ev
                           .group:00000000 _ZNSt14_Function_baseD5Ev
                           .group:00000000 _ZN10jellybeans8MenuItemD5Ev
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ESt16initializer_listIS5_ERKS6_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA6_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA7_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA5_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA4_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEEEC5IRA8_KcS9_Lb1EEEOT_OT0_
                           .group:00000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC5ERKS7_
                           .group:00000000 _ZNSt12_Vector_baseIiSaIiEED5Ev

UNDEFINED SYMBOLS
memset
_ZdlPvj
_ZN10jellybeans3Arp8getChordEv
_ZN10jellybeans8MenuItem8getIndexEv
_ZN10jellybeans13DiatonicChord7setRootEi
_ZN10jellybeans3Arp15updateTraversalEv
_ZN10jellybeans13DiatonicChord9setOctaveEi
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
ARM GAS  C:\Users\etpen\AppData\Local\Temp\ccpNIS2F.s 			page 924


memcpy
_ZSt19__throw_logic_errorPKc
_Znwj
_ZSt20__throw_length_errorPKc
dsy_gpio_write
_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
_ZN10jellybeans8MenuItem8getValueB5cxx11Ev
_ZN10jellybeans3Arp10setPatternENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN10jellybeans13DiatonicChord10setVoicingENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN10jellybeans13DiatonicChord7setModeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
cosf
sinf
_ZN5daisy10DaisyPatch21ProcessAnalogControlsEv
_ZN5daisy10DaisyPatch22ProcessDigitalControlsEv
_ZN5daisy9Parameter7ProcessEv
_ZN10jellybeans8MenuItem8setIndexEi
_ZN5daisy6GateIn4TrigEv
_ZN10jellybeans8MenuItem9decrementEv
_ZN10jellybeans8MenuItem9incrementEv
_ZN10jellybeans3Arp12onClockPulseEv
_ZN10jellybeans3Arp11getDacValueEv
_ZN5daisy9DacHandle10WriteValueENS0_7ChannelEt
_ZN10jellybeans3Arp7getTrigEv
_ZN10jellybeans3Arp8toStringB5cxx11Ev
_ZN10jellybeans13DiatonicChord8toStringB5cxx11Ev
_ZN10jellybeans8MenuItem16getDisplayStringB5cxx11Ev
_ZSt17__throw_bad_allocv
_ZN5daisy10DaisyPatch4InitEb
_ZN10jellybeans3ArpC1Ev
_ZN10jellybeans8MenuItemC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEiSt8functionIFvvEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
_ZN5daisy9Parameter4InitENS_13AnalogControlEffNS0_5CurveE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZN5daisy10DaisyPatch8StartAdcEv
memcmp
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
memmove
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
__aeabi_atexit
__dso_handle
_ZN10jellybeans8MenuItemC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
Font_7x10
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
