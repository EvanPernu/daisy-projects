ARM GAS  /tmp/ccR6ulVp.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"flanger.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy10DaisyPetalD2Ev,"axG",%progbits,_ZN5daisy10DaisyPetalD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy10DaisyPetalD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy10DaisyPetalD2Ev:
  27              	.LVL0:
  28              	.LFB2049:
  29              		.file 1 "../../libdaisy/src/daisy_petal.h"
   1:../../libdaisy/src/daisy_petal.h **** #pragma once
   2:../../libdaisy/src/daisy_petal.h **** #ifndef DSY_PETAL_H
   3:../../libdaisy/src/daisy_petal.h **** #define DSY_PETAL_H /**< & */
   4:../../libdaisy/src/daisy_petal.h **** 
   5:../../libdaisy/src/daisy_petal.h **** #include "daisy_seed.h"
   6:../../libdaisy/src/daisy_petal.h **** 
   7:../../libdaisy/src/daisy_petal.h **** namespace daisy
   8:../../libdaisy/src/daisy_petal.h **** {
   9:../../libdaisy/src/daisy_petal.h **** /**
  10:../../libdaisy/src/daisy_petal.h ****    @brief Helpers and hardware definitions for daisy petal.
  11:../../libdaisy/src/daisy_petal.h ****    @ingroup boards
  12:../../libdaisy/src/daisy_petal.h **** */
  13:../../libdaisy/src/daisy_petal.h **** class DaisyPetal
  14:../../libdaisy/src/daisy_petal.h **** {
  15:../../libdaisy/src/daisy_petal.h ****   public:
  16:../../libdaisy/src/daisy_petal.h ****     /** Switches */
  17:../../libdaisy/src/daisy_petal.h ****     enum Sw
  18:../../libdaisy/src/daisy_petal.h ****     {
  19:../../libdaisy/src/daisy_petal.h ****         SW_1,    /**< Footswitch */
  20:../../libdaisy/src/daisy_petal.h ****         SW_2,    /**< Footswitch */
  21:../../libdaisy/src/daisy_petal.h ****         SW_3,    /**< Footswitch */
  22:../../libdaisy/src/daisy_petal.h ****         SW_4,    /**< Footswitch */
  23:../../libdaisy/src/daisy_petal.h ****         SW_5,    /**< Toggle */
  24:../../libdaisy/src/daisy_petal.h ****         SW_6,    /**< Toggle */
  25:../../libdaisy/src/daisy_petal.h ****         SW_7,    /**< Toggle */
  26:../../libdaisy/src/daisy_petal.h ****         SW_LAST, /**< Last enum item */
  27:../../libdaisy/src/daisy_petal.h ****     };
  28:../../libdaisy/src/daisy_petal.h **** 
  29:../../libdaisy/src/daisy_petal.h ****     /** Knobs */
ARM GAS  /tmp/ccR6ulVp.s 			page 2


  30:../../libdaisy/src/daisy_petal.h ****     enum Knob
  31:../../libdaisy/src/daisy_petal.h ****     {
  32:../../libdaisy/src/daisy_petal.h ****         KNOB_1,    /**< & */
  33:../../libdaisy/src/daisy_petal.h ****         KNOB_2,    /**< & */
  34:../../libdaisy/src/daisy_petal.h ****         KNOB_3,    /**< & */
  35:../../libdaisy/src/daisy_petal.h ****         KNOB_4,    /**< & */
  36:../../libdaisy/src/daisy_petal.h ****         KNOB_5,    /**< & */
  37:../../libdaisy/src/daisy_petal.h ****         KNOB_6,    /**< & */
  38:../../libdaisy/src/daisy_petal.h ****         KNOB_LAST, /**< & */
  39:../../libdaisy/src/daisy_petal.h ****     };
  40:../../libdaisy/src/daisy_petal.h **** 
  41:../../libdaisy/src/daisy_petal.h ****     /** Leds in ringled */
  42:../../libdaisy/src/daisy_petal.h ****     enum RingLed
  43:../../libdaisy/src/daisy_petal.h ****     {
  44:../../libdaisy/src/daisy_petal.h ****         RING_LED_1,   /**< & */
  45:../../libdaisy/src/daisy_petal.h ****         RING_LED_2,   /**< & */
  46:../../libdaisy/src/daisy_petal.h ****         RING_LED_3,   /**< & */
  47:../../libdaisy/src/daisy_petal.h ****         RING_LED_4,   /**< & */
  48:../../libdaisy/src/daisy_petal.h ****         RING_LED_5,   /**< & */
  49:../../libdaisy/src/daisy_petal.h ****         RING_LED_6,   /**< & */
  50:../../libdaisy/src/daisy_petal.h ****         RING_LED_7,   /**< & */
  51:../../libdaisy/src/daisy_petal.h ****         RING_LED_8,   /**< & */
  52:../../libdaisy/src/daisy_petal.h ****         RING_LED_LAST /**< & */
  53:../../libdaisy/src/daisy_petal.h ****     };
  54:../../libdaisy/src/daisy_petal.h **** 
  55:../../libdaisy/src/daisy_petal.h ****     /** footswitch leds */
  56:../../libdaisy/src/daisy_petal.h ****     enum FootswitchLed
  57:../../libdaisy/src/daisy_petal.h ****     {
  58:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_1,    /**< & */
  59:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_2,    /**< & */
  60:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_3,    /**< & */
  61:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_4,    /**< & */
  62:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_LAST, /**< & */
  63:../../libdaisy/src/daisy_petal.h ****     };
  64:../../libdaisy/src/daisy_petal.h **** 
  65:../../libdaisy/src/daisy_petal.h ****     /** Constructor */
  66:../../libdaisy/src/daisy_petal.h ****     DaisyPetal() {}
  67:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
  68:../../libdaisy/src/daisy_petal.h ****     ~DaisyPetal() {}
  30              		.loc 1 68 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB235:
  36              	.LBI235:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
ARM GAS  /tmp/ccR6ulVp.s 			page 3


  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE235:
  41              	.LBB236:
  42              	.LBI236:
  43              		.file 3 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  44              		.loc 3 21 5 is_stmt 1 view .LVU3
  45              	.LBB237:
  46              	.LBI237:
  47              		.file 4 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
ARM GAS  /tmp/ccR6ulVp.s 			page 4


  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  48              		.loc 4 41 5 view .LVU4
  49              		.loc 4 41 5 is_stmt 0 view .LVU5
  50              	.LBE237:
  51              	.LBE236:
  52              	.LBB238:
  53              	.LBI238:
  54              		.file 5 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /tmp/ccR6ulVp.s 			page 5


  55              		.loc 5 22 5 is_stmt 1 view .LVU6
  56              	.LBB239:
  57              	.LBI239:
  58              		.file 6 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
ARM GAS  /tmp/ccR6ulVp.s 			page 6


  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
  59              		.loc 6 59 5 view .LVU7
  60              		.loc 6 59 5 is_stmt 0 view .LVU8
  61              	.LBE239:
  62              	.LBB240:
  63              	.LBI240:
  64              		.file 7 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  65              		.loc 7 42 5 is_stmt 1 view .LVU9
  66              		.loc 7 42 5 is_stmt 0 view .LVU10
  67              	.LBE240:
ARM GAS  /tmp/ccR6ulVp.s 			page 7


  68              	.LBB241:
  69              	.LBI241:
  70              		.file 8 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
ARM GAS  /tmp/ccR6ulVp.s 			page 8


  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  71              		.loc 8 85 5 is_stmt 1 view .LVU11
  72              		.loc 8 85 5 is_stmt 0 view .LVU12
  73              	.LBE241:
  74              	.LBB242:
  75              	.LBI242:
  76              		.file 9 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
ARM GAS  /tmp/ccR6ulVp.s 			page 9


  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  77              		.loc 9 63 5 is_stmt 1 view .LVU13
  78              		.loc 9 63 5 is_stmt 0 view .LVU14
  79              	.LBE242:
  80              	.LBE238:
  81              		.loc 1 68 20 view .LVU15
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE2049:
  86              		.weak	_ZN5daisy10DaisyPetalD1Ev
  87              		.thumb_set _ZN5daisy10DaisyPetalD1Ev,_ZN5daisy10DaisyPetalD2Ev
  88 0002 00BF     		.section	.text._ZN7daisysp7FlangerD2Ev,"axG",%progbits,_ZN7daisysp7FlangerD5Ev,comdat
  89              		.align	1
  90              		.p2align 2,,3
  91              		.weak	_ZN7daisysp7FlangerD2Ev
ARM GAS  /tmp/ccR6ulVp.s 			page 10


  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv5-d16
  97              	_ZN7daisysp7FlangerD2Ev:
  98              	.LVL1:
  99              	.LFB4780:
 100              		.file 10 "../../DaisySP/Source/Effects/flanger.h"
   1:../../DaisySP/Source/Effects/flanger.h **** #pragma once
   2:../../DaisySP/Source/Effects/flanger.h **** #ifndef DSY_FLANGER_H
   3:../../DaisySP/Source/Effects/flanger.h **** #define DSY_FLANGER_H
   4:../../DaisySP/Source/Effects/flanger.h **** #ifdef __cplusplus
   5:../../DaisySP/Source/Effects/flanger.h **** 
   6:../../DaisySP/Source/Effects/flanger.h **** #include <stdint.h>
   7:../../DaisySP/Source/Effects/flanger.h **** #include "Utility/delayline.h"
   8:../../DaisySP/Source/Effects/flanger.h **** 
   9:../../DaisySP/Source/Effects/flanger.h **** /** @file flanger.h */
  10:../../DaisySP/Source/Effects/flanger.h **** 
  11:../../DaisySP/Source/Effects/flanger.h **** namespace daisysp
  12:../../DaisySP/Source/Effects/flanger.h **** {
  13:../../DaisySP/Source/Effects/flanger.h **** /** @brief Flanging Audio Effect 
  14:../../DaisySP/Source/Effects/flanger.h ****  *
  15:../../DaisySP/Source/Effects/flanger.h ****  * Generates a modulating phase shifted copy of a signal, and recombines
  16:../../DaisySP/Source/Effects/flanger.h ****  * with the original to create a 'flanging' sound effect.
  17:../../DaisySP/Source/Effects/flanger.h ****  */
  18:../../DaisySP/Source/Effects/flanger.h **** class Flanger
 101              		.loc 10 18 7 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.LBB243:
 107              	.LBI243:
 108              		.file 11 "../../DaisySP/Source/Utility/delayline.h"
   1:../../DaisySP/Source/Utility/delayline.h **** #pragma once
   2:../../DaisySP/Source/Utility/delayline.h **** #ifndef DSY_DELAY_H
   3:../../DaisySP/Source/Utility/delayline.h **** #define DSY_DELAY_H
   4:../../DaisySP/Source/Utility/delayline.h **** #include <stdlib.h>
   5:../../DaisySP/Source/Utility/delayline.h **** #include <stdint.h>
   6:../../DaisySP/Source/Utility/delayline.h **** namespace daisysp
   7:../../DaisySP/Source/Utility/delayline.h **** {
   8:../../DaisySP/Source/Utility/delayline.h **** /** Simple Delay line.
   9:../../DaisySP/Source/Utility/delayline.h **** November 2019
  10:../../DaisySP/Source/Utility/delayline.h **** 
  11:../../DaisySP/Source/Utility/delayline.h **** Converted to Template December 2019
  12:../../DaisySP/Source/Utility/delayline.h **** 
  13:../../DaisySP/Source/Utility/delayline.h **** declaration example: (1 second of floats)
  14:../../DaisySP/Source/Utility/delayline.h **** 
  15:../../DaisySP/Source/Utility/delayline.h **** DelayLine<float, SAMPLE_RATE> del;
  16:../../DaisySP/Source/Utility/delayline.h **** 
  17:../../DaisySP/Source/Utility/delayline.h **** By: shensley
  18:../../DaisySP/Source/Utility/delayline.h **** */
  19:../../DaisySP/Source/Utility/delayline.h **** template <typename T, size_t max_size>
  20:../../DaisySP/Source/Utility/delayline.h **** class DelayLine
  21:../../DaisySP/Source/Utility/delayline.h **** {
  22:../../DaisySP/Source/Utility/delayline.h ****   public:
  23:../../DaisySP/Source/Utility/delayline.h ****     DelayLine() {}
ARM GAS  /tmp/ccR6ulVp.s 			page 11


  24:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 109              		.loc 11 24 5 view .LVU17
 110              		.loc 11 24 5 is_stmt 0 view .LVU18
 111              	.LBE243:
 112              		.loc 10 18 7 view .LVU19
 113 0000 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE4780:
 117              		.weak	_ZN7daisysp7FlangerD1Ev
 118              		.thumb_set _ZN7daisysp7FlangerD1Ev,_ZN7daisysp7FlangerD2Ev
 119 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 120              		.align	1
 121              		.p2align 2,,3
 122              		.global	_Z13AudioCallbackPKPKfPPfj
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv5-d16
 128              	_Z13AudioCallbackPKPKfPPfj:
 129              	.LVL2:
 130              	.LFB4226:
 131              		.file 12 "flanger.cpp"
   1:flanger.cpp   **** #include "daisy_petal.h"
   2:flanger.cpp   **** #include "daisysp.h"
   3:flanger.cpp   **** 
   4:flanger.cpp   **** using namespace daisy;
   5:flanger.cpp   **** using namespace daisysp;
   6:flanger.cpp   **** 
   7:flanger.cpp   **** Flanger    flanger;
   8:flanger.cpp   **** DaisyPetal hw;
   9:flanger.cpp   **** 
  10:flanger.cpp   **** bool  effectOn = true;
  11:flanger.cpp   **** float wet;
  12:flanger.cpp   **** float deltarget, del;
  13:flanger.cpp   **** float lfotarget, lfo;
  14:flanger.cpp   **** 
  15:flanger.cpp   **** void AudioCallback(AudioHandle::InputBuffer  in,
  16:flanger.cpp   ****                    AudioHandle::OutputBuffer out,
  17:flanger.cpp   ****                    size_t                    size)
  18:flanger.cpp   **** {
 132              		.loc 12 18 1 is_stmt 1 view -0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 0, uses_anonymous_args = 0
  19:flanger.cpp   ****     hw.ProcessAllControls();
 136              		.loc 12 19 5 view .LVU21
 137              	.LBB244:
 138              	.LBI244:
  69:../../libdaisy/src/daisy_petal.h **** 
  70:../../libdaisy/src/daisy_petal.h ****     /** Initialize daisy petal */
  71:../../libdaisy/src/daisy_petal.h ****     void Init(bool boost = false);
  72:../../libdaisy/src/daisy_petal.h **** 
  73:../../libdaisy/src/daisy_petal.h ****     /**
  74:../../libdaisy/src/daisy_petal.h ****        Wait before moving on.
  75:../../libdaisy/src/daisy_petal.h ****        \param del Delay time in ms.
  76:../../libdaisy/src/daisy_petal.h ****      */
  77:../../libdaisy/src/daisy_petal.h ****     void DelayMs(size_t del);
ARM GAS  /tmp/ccR6ulVp.s 			page 12


  78:../../libdaisy/src/daisy_petal.h **** 
  79:../../libdaisy/src/daisy_petal.h **** 
  80:../../libdaisy/src/daisy_petal.h ****     /** Starts the callback
  81:../../libdaisy/src/daisy_petal.h ****     \cb Interleaved callback function
  82:../../libdaisy/src/daisy_petal.h ****     */
  83:../../libdaisy/src/daisy_petal.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  84:../../libdaisy/src/daisy_petal.h **** 
  85:../../libdaisy/src/daisy_petal.h ****     /** Starts the callback
  86:../../libdaisy/src/daisy_petal.h ****     \cb multichannel callback function
  87:../../libdaisy/src/daisy_petal.h ****     */
  88:../../libdaisy/src/daisy_petal.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  89:../../libdaisy/src/daisy_petal.h **** 
  90:../../libdaisy/src/daisy_petal.h ****     /**
  91:../../libdaisy/src/daisy_petal.h ****        Switch callback functions
  92:../../libdaisy/src/daisy_petal.h ****        \param cb New interleaved callback function.
  93:../../libdaisy/src/daisy_petal.h ****     */
  94:../../libdaisy/src/daisy_petal.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  95:../../libdaisy/src/daisy_petal.h **** 
  96:../../libdaisy/src/daisy_petal.h ****     /**
  97:../../libdaisy/src/daisy_petal.h ****        Switch callback functions
  98:../../libdaisy/src/daisy_petal.h ****        \param cb New multichannel callback function.
  99:../../libdaisy/src/daisy_petal.h ****     */
 100:../../libdaisy/src/daisy_petal.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
 101:../../libdaisy/src/daisy_petal.h **** 
 102:../../libdaisy/src/daisy_petal.h ****     /** Stops the audio if it is running. */
 103:../../libdaisy/src/daisy_petal.h ****     void StopAudio();
 104:../../libdaisy/src/daisy_petal.h **** 
 105:../../libdaisy/src/daisy_petal.h ****     /** Updates the Audio Sample Rate, and reinitializes.
 106:../../libdaisy/src/daisy_petal.h ****      ** Audio must be stopped for this to work.
 107:../../libdaisy/src/daisy_petal.h ****      */
 108:../../libdaisy/src/daisy_petal.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
 109:../../libdaisy/src/daisy_petal.h **** 
 110:../../libdaisy/src/daisy_petal.h ****     /** Returns the audio sample rate in Hz as a floating point number.
 111:../../libdaisy/src/daisy_petal.h ****      */
 112:../../libdaisy/src/daisy_petal.h ****     float AudioSampleRate();
 113:../../libdaisy/src/daisy_petal.h **** 
 114:../../libdaisy/src/daisy_petal.h ****     /** Sets the number of samples processed per channel by the audio callback.
 115:../../libdaisy/src/daisy_petal.h ****        \param size Audio block size
 116:../../libdaisy/src/daisy_petal.h ****      */
 117:../../libdaisy/src/daisy_petal.h ****     void SetAudioBlockSize(size_t size);
 118:../../libdaisy/src/daisy_petal.h **** 
 119:../../libdaisy/src/daisy_petal.h ****     /** Returns the number of samples per channel in a block of audio. */
 120:../../libdaisy/src/daisy_petal.h ****     size_t AudioBlockSize();
 121:../../libdaisy/src/daisy_petal.h **** 
 122:../../libdaisy/src/daisy_petal.h ****     /** Returns the rate in Hz that the Audio callback is called */
 123:../../libdaisy/src/daisy_petal.h ****     float AudioCallbackRate();
 124:../../libdaisy/src/daisy_petal.h **** 
 125:../../libdaisy/src/daisy_petal.h ****     /** Start analog to digital conversion. */
 126:../../libdaisy/src/daisy_petal.h ****     void StartAdc();
 127:../../libdaisy/src/daisy_petal.h **** 
 128:../../libdaisy/src/daisy_petal.h ****     /** Stops Transfering data from the ADC */
 129:../../libdaisy/src/daisy_petal.h ****     void StopAdc();
 130:../../libdaisy/src/daisy_petal.h **** 
 131:../../libdaisy/src/daisy_petal.h ****     /** Call at the same frequency as controls are read for stable readings.*/
 132:../../libdaisy/src/daisy_petal.h ****     void ProcessAnalogControls();
 133:../../libdaisy/src/daisy_petal.h **** 
 134:../../libdaisy/src/daisy_petal.h ****     /** Process Analog and Digital Controls */
ARM GAS  /tmp/ccR6ulVp.s 			page 13


 135:../../libdaisy/src/daisy_petal.h ****     inline void ProcessAllControls()
 139              		.loc 1 135 17 view .LVU22
 140              	.LBB245:
 136:../../libdaisy/src/daisy_petal.h ****     {
 137:../../libdaisy/src/daisy_petal.h ****         ProcessAnalogControls();
 141              		.loc 1 137 9 view .LVU23
 142              	.LBE245:
 143              	.LBE244:
  18:flanger.cpp   ****     hw.ProcessAllControls();
 144              		.loc 12 18 1 is_stmt 0 view .LVU24
 145 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 146              		.cfi_def_cfa_offset 36
 147              		.cfi_offset 4, -36
 148              		.cfi_offset 5, -32
 149              		.cfi_offset 6, -28
 150              		.cfi_offset 7, -24
 151              		.cfi_offset 8, -20
 152              		.cfi_offset 9, -16
 153              		.cfi_offset 10, -12
 154              		.cfi_offset 11, -8
 155              		.cfi_offset 14, -4
 156              	.LBB249:
 157              	.LBB246:
 158              		.loc 1 137 30 view .LVU25
 159 0004 5C4C     		ldr	r4, .L18
 160              	.LBE246:
 161              	.LBE249:
  18:flanger.cpp   ****     hw.ProcessAllControls();
 162              		.loc 12 18 1 view .LVU26
 163 0006 0746     		mov	r7, r0
 164 0008 8946     		mov	r9, r1
 165 000a 1546     		mov	r5, r2
 166              	.LBB250:
 167              	.LBB247:
 168              		.loc 1 137 30 view .LVU27
 169 000c 2046     		mov	r0, r4
 170              	.LVL3:
 171              		.loc 1 137 30 view .LVU28
 172              	.LBE247:
 173              	.LBE250:
  20:flanger.cpp   **** 
  21:flanger.cpp   ****     deltarget = hw.knob[2].Process();
 174              		.loc 12 21 15 view .LVU29
 175 000e DFF88CA1 		ldr	r10, .L18+36
  22:flanger.cpp   ****     flanger.SetFeedback(hw.knob[3].Process());
  23:flanger.cpp   ****     float val = hw.knob[4].Process();
  24:flanger.cpp   ****     flanger.SetLfoFreq(val * val * 10.f);
  25:flanger.cpp   ****     lfotarget = hw.knob[5].Process();
 176              		.loc 12 25 15 view .LVU30
 177 0012 DFF88CB1 		ldr	fp, .L18+40
  18:flanger.cpp   ****     hw.ProcessAllControls();
 178              		.loc 12 18 1 view .LVU31
 179 0016 2DED028B 		vpush.64	{d8}
 180              		.cfi_def_cfa_offset 44
 181              		.cfi_offset 80, -44
 182              		.cfi_offset 81, -40
 183 001a 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccR6ulVp.s 			page 14


 184              		.cfi_def_cfa_offset 56
  18:flanger.cpp   ****     hw.ProcessAllControls();
 185              		.loc 12 18 1 view .LVU32
 186 001c 0192     		str	r2, [sp, #4]
 187              	.LBB251:
 188              	.LBB248:
 189              		.loc 1 137 30 view .LVU33
 190 001e FFF7FEFF 		bl	_ZN5daisy10DaisyPetal21ProcessAnalogControlsEv
 191              	.LVL4:
 138:../../libdaisy/src/daisy_petal.h ****         ProcessDigitalControls();
 192              		.loc 1 138 9 is_stmt 1 view .LVU34
 193              		.loc 1 138 31 is_stmt 0 view .LVU35
 194 0022 2046     		mov	r0, r4
 195 0024 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal22ProcessDigitalControlsEv
 196              	.LVL5:
 197              		.loc 1 138 31 view .LVU36
 198              	.LBE248:
 199              	.LBE251:
  21:flanger.cpp   ****     flanger.SetFeedback(hw.knob[3].Process());
 200              		.loc 12 21 5 is_stmt 1 view .LVU37
  21:flanger.cpp   ****     flanger.SetFeedback(hw.knob[3].Process());
 201              		.loc 12 21 35 is_stmt 0 view .LVU38
 202 0028 04F19C00 		add	r0, r4, #156
 203 002c FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 204              	.LVL6:
  22:flanger.cpp   ****     float val = hw.knob[4].Process();
 205              		.loc 12 22 24 view .LVU39
 206 0030 04F1BC00 		add	r0, r4, #188
  21:flanger.cpp   ****     flanger.SetFeedback(hw.knob[3].Process());
 207              		.loc 12 21 15 view .LVU40
 208 0034 8AED000A 		vstr.32	s0, [r10]
  22:flanger.cpp   ****     float val = hw.knob[4].Process();
 209              		.loc 12 22 5 is_stmt 1 view .LVU41
  22:flanger.cpp   ****     float val = hw.knob[4].Process();
 210              		.loc 12 22 24 is_stmt 0 view .LVU42
 211 0038 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 212              	.LVL7:
 213 003c 4F48     		ldr	r0, .L18+4
 214 003e FFF7FEFF 		bl	_ZN7daisysp7Flanger11SetFeedbackEf
 215              	.LVL8:
  23:flanger.cpp   ****     flanger.SetLfoFreq(val * val * 10.f);
 216              		.loc 12 23 5 is_stmt 1 view .LVU43
  23:flanger.cpp   ****     flanger.SetLfoFreq(val * val * 10.f);
 217              		.loc 12 23 35 is_stmt 0 view .LVU44
 218 0042 04F1DC00 		add	r0, r4, #220
 219 0046 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 220              	.LVL9:
  24:flanger.cpp   ****     lfotarget = hw.knob[5].Process();
 221              		.loc 12 24 5 is_stmt 1 view .LVU45
  24:flanger.cpp   ****     lfotarget = hw.knob[5].Process();
 222              		.loc 12 24 23 is_stmt 0 view .LVU46
 223 004a F2EE047A 		vmov.f32	s15, #1.0e+1
  24:flanger.cpp   ****     lfotarget = hw.knob[5].Process();
 224              		.loc 12 24 28 view .LVU47
 225 004e 20EE000A 		vmul.f32	s0, s0, s0
 226              	.LVL10:
  24:flanger.cpp   ****     lfotarget = hw.knob[5].Process();
ARM GAS  /tmp/ccR6ulVp.s 			page 15


 227              		.loc 12 24 23 view .LVU48
 228 0052 4A48     		ldr	r0, .L18+4
 229 0054 20EE270A 		vmul.f32	s0, s0, s15
 230 0058 FFF7FEFF 		bl	_ZN7daisysp7Flanger10SetLfoFreqEf
 231              	.LVL11:
 232              		.loc 12 25 5 is_stmt 1 view .LVU49
 233              		.loc 12 25 35 is_stmt 0 view .LVU50
 234 005c 04F1FC00 		add	r0, r4, #252
 235 0060 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 236              	.LVL12:
  26:flanger.cpp   **** 
  27:flanger.cpp   ****     effectOn ^= hw.switches[0].RisingEdge();
 237              		.loc 12 27 43 view .LVU51
 238 0064 4649     		ldr	r1, .L18+8
  28:flanger.cpp   **** 
  29:flanger.cpp   ****     //encoder
  30:flanger.cpp   ****     wet += hw.encoder.Increment() * .05f;
 239              		.loc 12 30 35 view .LVU52
 240 0066 94ED167A 		vldr.32	s14, [r4, #88]	@ int
 241              	.LBB252:
 242              	.LBB253:
 243              	.LBB254:
 244              		.file 13 "../../DaisySP/Source/Utility/dsp.h"
   1:../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP/Source/Utility/dsp.h **** */
   3:../../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP/Source/Utility/dsp.h **** 
  11:../../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP/Source/Utility/dsp.h **** */
  13:../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP/Source/Utility/dsp.h **** 
  21:../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP/Source/Utility/dsp.h **** {
  23:../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP/Source/Utility/dsp.h **** 
  26:../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP/Source/Utility/dsp.h **** 
  29:../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP/Source/Utility/dsp.h **** */
  32:../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP/Source/Utility/dsp.h **** {
  34:../../DaisySP/Source/Utility/dsp.h ****     float r;
ARM GAS  /tmp/ccR6ulVp.s 			page 16


  35:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP/Source/Utility/dsp.h **** #else
  38:../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../../DaisySP/Source/Utility/dsp.h **** }
  42:../../DaisySP/Source/Utility/dsp.h **** 
  43:../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP/Source/Utility/dsp.h **** {
  45:../../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 245              		.loc 13 47 80 view .LVU53
 246 006a B7EE006A 		vmov.f32	s12, #1.0e+0
 247              	.LBE254:
 248              	.LBE253:
 249              	.LBE252:
 250              	.LBB261:
 251              	.LBB262:
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 252              		.loc 4 69 55 view .LVU54
 253 006e 94F84101 		ldrb	r0, [r4, #321]	@ zero_extendqisi2
 254              	.LBE262:
 255              	.LBE261:
  31:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
  32:flanger.cpp   **** 
  33:flanger.cpp   ****     wet = hw.encoder.RisingEdge() ? .9f : wet;
 256              		.loc 12 33 35 view .LVU55
 257 0072 94F84120 		ldrb	r2, [r4, #65]	@ zero_extendqisi2
ARM GAS  /tmp/ccR6ulVp.s 			page 17


  30:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
 258              		.loc 12 30 35 view .LVU56
 259 0076 B8EEC77A 		vcvt.f32.s32	s14, s14
  27:flanger.cpp   **** 
 260              		.loc 12 27 43 view .LVU57
 261 007a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  30:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
 262              		.loc 12 30 9 view .LVU58
 263 007c 414C     		ldr	r4, .L18+12
  27:flanger.cpp   **** 
 264              		.loc 12 27 43 view .LVU59
 265 007e 7F28     		cmp	r0, #127
 266 0080 08BF     		it	eq
 267 0082 83F00103 		eoreq	r3, r3, #1
  30:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
 268              		.loc 12 30 9 view .LVU60
 269 0086 DFED405A 		vldr.32	s11, .L18+16
 270 008a D4ED007A 		vldr.32	s15, [r4]
 271              		.loc 12 33 35 view .LVU61
 272 008e 7F2A     		cmp	r2, #127
 273 0090 DFED3E6A 		vldr.32	s13, .L18+20
  30:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
 274              		.loc 12 30 9 view .LVU62
 275 0094 E7EE257A 		vfma.f32	s15, s14, s11
  27:flanger.cpp   **** 
 276              		.loc 12 27 14 view .LVU63
 277 0098 0B70     		strb	r3, [r1]
 278              	.LBB264:
 279              	.LBB256:
 280              	.LBB257:
  36:../../DaisySP/Source/Utility/dsp.h **** #else
 281              		.loc 13 36 80 view .LVU64
 282 009a 9FED3D7A 		vldr.32	s14, .L18+24
 283              	.LBE257:
 284              	.LBE256:
 285              	.LBE264:
  25:flanger.cpp   **** 
 286              		.loc 12 25 15 view .LVU65
 287 009e 8BED000A 		vstr.32	s0, [fp]
  27:flanger.cpp   **** 
 288              		.loc 12 27 5 is_stmt 1 view .LVU66
 289              	.LBB265:
 290              	.LBI261:
 291              		.loc 4 69 17 view .LVU67
 292              	.LVL13:
 293              	.LBB263:
 294              		.loc 4 69 38 view .LVU68
 295              	.LBE263:
 296              	.LBE265:
  30:flanger.cpp   ****     wet = fclamp(wet, 0.f, 1.f);
 297              		.loc 12 30 5 view .LVU69
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h **** */
  25:../../libdaisy/src/hid/encoder.h ****     //
  26:../../libdaisy/src/hid/encoder.h ****     /** Update rate should be the rate at which Debounce() gets called
  27:../../libdaisy/src/hid/encoder.h **** in Hertz.
ARM GAS  /tmp/ccR6ulVp.s 			page 18


  28:../../libdaisy/src/hid/encoder.h **** */
  29:../../libdaisy/src/hid/encoder.h ****     //
  30:../../libdaisy/src/hid/encoder.h ****     void
  31:../../libdaisy/src/hid/encoder.h ****     Init(dsy_gpio_pin a, dsy_gpio_pin b, dsy_gpio_pin click, float update_rate);
  32:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  33:../../libdaisy/src/hid/encoder.h **** */
  34:../../libdaisy/src/hid/encoder.h ****     //
  35:../../libdaisy/src/hid/encoder.h ****     /** In order for events not to be missed, its important that the Edge/Pressed checks
  36:../../libdaisy/src/hid/encoder.h **** be made at the same rate as the debounce function is being called.
  37:../../libdaisy/src/hid/encoder.h **** */
  38:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  39:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  40:../../libdaisy/src/hid/encoder.h **** */
  41:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 298              		.loc 3 41 40 view .LVU70
  31:flanger.cpp   **** 
 299              		.loc 12 31 5 view .LVU71
 300              	.LBB266:
 301              	.LBI252:
  48:../../DaisySP/Source/Utility/dsp.h **** #else
  49:../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../../DaisySP/Source/Utility/dsp.h **** }
  53:../../DaisySP/Source/Utility/dsp.h **** 
  54:../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP/Source/Utility/dsp.h **** */
  56:../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
 302              		.loc 13 56 14 view .LVU72
 303              	.LBE266:
  57:../../DaisySP/Source/Utility/dsp.h **** {
  58:../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 304              		.loc 13 58 5 view .LVU73
 305              	.LBB267:
 306              	.LBB259:
 307              	.LBI256:
  32:../../DaisySP/Source/Utility/dsp.h **** {
 308              		.loc 13 32 14 view .LVU74
 309              	.LBB258:
  34:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 310              		.loc 13 34 5 view .LVU75
  36:../../DaisySP/Source/Utility/dsp.h **** #else
 311              		.loc 13 36 5 view .LVU76
  36:../../DaisySP/Source/Utility/dsp.h **** #else
 312              		.loc 13 36 80 is_stmt 0 view .LVU77
 313              		.syntax unified
 314              	@ 36 "../../DaisySP/Source/Utility/dsp.h" 1
 315 00a2 C7FE877A 		vmaxnm.f32 s15, s15, s14
 316              	@ 0 "" 2
 317              	.LVL14:
  40:../../DaisySP/Source/Utility/dsp.h **** }
 318              		.loc 13 40 5 is_stmt 1 view .LVU78
  40:../../DaisySP/Source/Utility/dsp.h **** }
 319              		.loc 13 40 5 is_stmt 0 view .LVU79
 320              		.thumb
 321              		.syntax unified
 322              	.LBE258:
ARM GAS  /tmp/ccR6ulVp.s 			page 19


 323              	.LBE259:
 324              	.LBB260:
 325              	.LBI253:
  43:../../DaisySP/Source/Utility/dsp.h **** {
 326              		.loc 13 43 14 is_stmt 1 view .LVU80
 327              	.LBB255:
  45:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
 328              		.loc 13 45 5 view .LVU81
  47:../../DaisySP/Source/Utility/dsp.h **** #else
 329              		.loc 13 47 5 view .LVU82
  47:../../DaisySP/Source/Utility/dsp.h **** #else
 330              		.loc 13 47 80 is_stmt 0 view .LVU83
 331              		.syntax unified
 332              	@ 47 "../../DaisySP/Source/Utility/dsp.h" 1
 333 00a6 C7FEC67A 		vminnm.f32 s15, s15, s12
 334              	@ 0 "" 2
 335              	.LVL15:
  51:../../DaisySP/Source/Utility/dsp.h **** }
 336              		.loc 13 51 5 is_stmt 1 view .LVU84
  51:../../DaisySP/Source/Utility/dsp.h **** }
 337              		.loc 13 51 5 is_stmt 0 view .LVU85
 338              		.thumb
 339              		.syntax unified
 340              	.LBE255:
 341              	.LBE260:
 342              	.LBE267:
 343              		.loc 12 33 5 is_stmt 1 view .LVU86
 344              	.LBB268:
 345              	.LBI268:
  42:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed.
  43:../../libdaisy/src/hid/encoder.h **** */
  44:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 346              		.loc 3 44 17 view .LVU87
 347              	.LBB269:
 348              		.loc 3 44 38 view .LVU88
 349              		.loc 3 44 38 is_stmt 0 view .LVU89
 350              	.LBE269:
 351              	.LBE268:
 352              		.loc 4 69 38 is_stmt 1 view .LVU90
 353              		.loc 12 33 35 is_stmt 0 view .LVU91
 354 00aa 46FEA77A 		vseleq.f32	s15, s13, s15
 355              		.loc 12 33 9 view .LVU92
 356 00ae C4ED007A 		vstr.32	s15, [r4]
  34:flanger.cpp   **** 
  35:flanger.cpp   ****     for(size_t i = 0; i < size; i++)
 357              		.loc 12 35 5 is_stmt 1 view .LVU93
 358              	.LVL16:
 359              	.LBB270:
 360              		.loc 12 35 25 view .LVU94
 361 00b2 002D     		cmp	r5, #0
 362 00b4 5BD0     		beq	.L4
 363              		.loc 12 35 16 is_stmt 0 view .LVU95
 364 00b6 0024     		movs	r4, #0
 365 00b8 DFF8E880 		ldr	r8, .L18+44
 366 00bc 354D     		ldr	r5, .L18+28
 367              	.LVL17:
 368              		.loc 12 35 16 view .LVU96
ARM GAS  /tmp/ccR6ulVp.s 			page 20


 369 00be 02E0     		b	.L8
 370              	.LVL18:
 371              	.L7:
 372              		.loc 12 35 5 is_stmt 1 discriminator 2 view .LVU97
 373              		.loc 12 35 25 discriminator 2 view .LVU98
 374 00c0 019B     		ldr	r3, [sp, #4]
 375 00c2 A342     		cmp	r3, r4
 376 00c4 53D0     		beq	.L4
 377              	.LVL19:
 378              	.L8:
 379              	.LBB271:
  36:flanger.cpp   ****     {
  37:flanger.cpp   ****         fonepole(del, deltarget, .0001f); //smooth at audio rate
 380              		.loc 12 37 9 view .LVU99
 381              	.LBB272:
 382              	.LBI272:
  59:../../DaisySP/Source/Utility/dsp.h **** }
  60:../../DaisySP/Source/Utility/dsp.h **** 
  61:../../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP/Source/Utility/dsp.h **** */
  65:../../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP/Source/Utility/dsp.h **** {
  67:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../../DaisySP/Source/Utility/dsp.h **** }
  76:../../DaisySP/Source/Utility/dsp.h **** 
  77:../../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP/Source/Utility/dsp.h **** {
  79:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../../DaisySP/Source/Utility/dsp.h **** }
  88:../../DaisySP/Source/Utility/dsp.h **** 
  89:../../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP/Source/Utility/dsp.h **** */
  92:../../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP/Source/Utility/dsp.h **** {
  94:../../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP/Source/Utility/dsp.h **** }
  96:../../DaisySP/Source/Utility/dsp.h **** 
  97:../../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /tmp/ccR6ulVp.s 			page 21


 100:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP/Source/Utility/dsp.h **** {
 102:../../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP/Source/Utility/dsp.h **** }
 115:../../DaisySP/Source/Utility/dsp.h **** 
 116:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP/Source/Utility/dsp.h **** {
 118:../../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP/Source/Utility/dsp.h **** }
 120:../../DaisySP/Source/Utility/dsp.h **** 
 121:../../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP/Source/Utility/dsp.h **** */
 123:../../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP/Source/Utility/dsp.h **** {
 125:../../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP/Source/Utility/dsp.h **** }
 127:../../DaisySP/Source/Utility/dsp.h **** 
 128:../../DaisySP/Source/Utility/dsp.h **** 
 129:../../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP/Source/Utility/dsp.h **** */
 135:../../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 383              		.loc 13 135 13 view .LVU100
 384              	.LBB273:
 136:../../DaisySP/Source/Utility/dsp.h **** {
 137:../../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 385              		.loc 13 137 5 view .LVU101
 386              		.loc 13 137 9 is_stmt 0 view .LVU102
 387 00c6 98ED000A 		vldr.32	s0, [r8]
 388 00ca A600     		lsls	r6, r4, #2
 389              		.loc 13 137 24 view .LVU103
 390 00cc DAED007A 		vldr.32	s15, [r10]
 391              		.loc 13 137 9 view .LVU104
 392 00d0 9FED318A 		vldr.32	s16, .L18+32
 393              		.loc 13 137 24 view .LVU105
 394 00d4 77EEC07A 		vsub.f32	s15, s15, s0
 395              	.LBE273:
 396              	.LBE272:
  38:flanger.cpp   ****         flanger.SetDelay(del);
 397              		.loc 12 38 25 view .LVU106
 398 00d8 2848     		ldr	r0, .L18+4
 399              	.LBB275:
 400              	.LBB274:
ARM GAS  /tmp/ccR6ulVp.s 			page 22


 401              		.loc 13 137 9 view .LVU107
 402 00da A7EE880A 		vfma.f32	s0, s15, s16
 403 00de 88ED000A 		vstr.32	s0, [r8]
 404              	.LVL20:
 405              		.loc 13 137 9 view .LVU108
 406              	.LBE274:
 407              	.LBE275:
 408              		.loc 12 38 9 is_stmt 1 view .LVU109
 409              		.loc 12 38 25 is_stmt 0 view .LVU110
 410 00e2 FFF7FEFF 		bl	_ZN7daisysp7Flanger8SetDelayEf
 411              	.LVL21:
  39:flanger.cpp   **** 
  40:flanger.cpp   ****         fonepole(lfo, lfotarget, .0001f); //smooth at audio rate
 412              		.loc 12 40 9 is_stmt 1 view .LVU111
 413              	.LBB276:
 414              	.LBI276:
 135:../../DaisySP/Source/Utility/dsp.h **** {
 415              		.loc 13 135 13 view .LVU112
 416              	.LBB277:
 417              		.loc 13 137 5 view .LVU113
 418              		.loc 13 137 9 is_stmt 0 view .LVU114
 419 00e6 95ED000A 		vldr.32	s0, [r5]
 420              		.loc 13 137 24 view .LVU115
 421 00ea DBED007A 		vldr.32	s15, [fp]
 422              	.LBE277:
 423              	.LBE276:
  41:flanger.cpp   ****         flanger.SetLfoDepth(lfo);
 424              		.loc 12 41 28 view .LVU116
 425 00ee 2348     		ldr	r0, .L18+4
 426              	.LBB279:
 427              	.LBB278:
 428              		.loc 13 137 24 view .LVU117
 429 00f0 77EEC07A 		vsub.f32	s15, s15, s0
 430              		.loc 13 137 9 view .LVU118
 431 00f4 A7EE880A 		vfma.f32	s0, s15, s16
 432 00f8 85ED000A 		vstr.32	s0, [r5]
 433              	.LVL22:
 434              		.loc 13 137 9 view .LVU119
 435              	.LBE278:
 436              	.LBE279:
 437              		.loc 12 41 9 is_stmt 1 view .LVU120
 438              		.loc 12 41 28 is_stmt 0 view .LVU121
 439 00fc FFF7FEFF 		bl	_ZN7daisysp7Flanger11SetLfoDepthEf
 440              	.LVL23:
  42:flanger.cpp   **** 
  43:flanger.cpp   ****         out[0][i] = out[1][i] = in[0][i];
 441              		.loc 12 43 9 is_stmt 1 view .LVU122
 442              		.loc 12 43 40 is_stmt 0 view .LVU123
 443 0100 3868     		ldr	r0, [r7]
 444              		.loc 12 43 31 view .LVU124
 445 0102 D9F80420 		ldr	r2, [r9, #4]
 446              		.loc 12 43 19 view .LVU125
 447 0106 D9F80030 		ldr	r3, [r9]
 448              		.loc 12 43 40 view .LVU126
 449 010a 00EB8400 		add	r0, r0, r4, lsl #2
 450              	.LBB280:
  44:flanger.cpp   **** 
ARM GAS  /tmp/ccR6ulVp.s 			page 23


  45:flanger.cpp   ****         if(effectOn)
 451              		.loc 12 45 9 view .LVU127
 452 010e 1C49     		ldr	r1, .L18+8
 453              	.LBE280:
  43:flanger.cpp   **** 
 454              		.loc 12 43 31 view .LVU128
 455 0110 02EB8402 		add	r2, r2, r4, lsl #2
  43:flanger.cpp   **** 
 456              		.loc 12 43 40 view .LVU129
 457 0114 D0F800C0 		ldr	ip, [r0]	@ float
  43:flanger.cpp   **** 
 458              		.loc 12 43 19 view .LVU130
 459 0118 03EB8403 		add	r3, r3, r4, lsl #2
 460              	.LBB283:
 461              		.loc 12 45 9 view .LVU131
 462 011c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 463              	.LBE283:
  43:flanger.cpp   **** 
 464              		.loc 12 43 19 view .LVU132
 465 011e 0134     		adds	r4, r4, #1
 466              	.LVL24:
 467              		.loc 12 45 9 is_stmt 1 view .LVU133
  43:flanger.cpp   **** 
 468              		.loc 12 43 31 is_stmt 0 view .LVU134
 469 0120 C2F800C0 		str	ip, [r2]	@ float
  43:flanger.cpp   **** 
 470              		.loc 12 43 19 view .LVU135
 471 0124 C3F800C0 		str	ip, [r3]	@ float
 472              	.LBB284:
 473              		.loc 12 45 9 view .LVU136
 474 0128 0029     		cmp	r1, #0
 475 012a C9D0     		beq	.L7
 476              	.LBB281:
  46:flanger.cpp   ****         {
  47:flanger.cpp   ****             float sig = flanger.Process(in[0][i]);
 477              		.loc 12 47 13 is_stmt 1 view .LVU137
 478              		.loc 12 47 40 is_stmt 0 view .LVU138
 479 012c 90ED000A 		vldr.32	s0, [r0]
 480 0130 1248     		ldr	r0, .L18+4
 481 0132 FFF7FEFF 		bl	_ZN7daisysp7Flanger7ProcessEf
 482              	.LVL25:
  48:flanger.cpp   ****             out[0][i] = out[1][i] = sig * wet + in[0][i] * (1.f - wet);
 483              		.loc 12 48 13 is_stmt 1 view .LVU139
 484              		.loc 12 48 41 is_stmt 0 view .LVU140
 485 0136 134A     		ldr	r2, .L18+12
 486              		.loc 12 48 56 view .LVU141
 487 0138 3B68     		ldr	r3, [r7]
 488              		.loc 12 48 65 view .LVU142
 489 013a F7EE007A 		vmov.f32	s15, #1.0e+0
 490              		.loc 12 48 41 view .LVU143
 491 013e 92ED007A 		vldr.32	s14, [r2]
 492              		.loc 12 48 56 view .LVU144
 493 0142 3344     		add	r3, r3, r6
 494              		.loc 12 48 65 view .LVU145
 495 0144 77EEC77A 		vsub.f32	s15, s15, s14
 496              		.loc 12 48 58 view .LVU146
 497 0148 D3ED006A 		vldr.32	s13, [r3]
ARM GAS  /tmp/ccR6ulVp.s 			page 24


 498              		.loc 12 48 33 view .LVU147
 499 014c D9F80430 		ldr	r3, [r9, #4]
 500              		.loc 12 48 58 view .LVU148
 501 0150 67EEA67A 		vmul.f32	s15, s15, s13
 502              		.loc 12 48 33 view .LVU149
 503 0154 9A19     		adds	r2, r3, r6
 504              		.loc 12 48 23 view .LVU150
 505 0156 D9F80030 		ldr	r3, [r9]
 506              		.loc 12 48 47 view .LVU151
 507 015a E7EE007A 		vfma.f32	s15, s14, s0
 508              		.loc 12 48 23 view .LVU152
 509 015e 1E44     		add	r6, r6, r3
 510              	.LBE281:
 511              	.LBE284:
 512              	.LBE271:
  35:flanger.cpp   ****     {
 513              		.loc 12 35 25 view .LVU153
 514 0160 019B     		ldr	r3, [sp, #4]
 515 0162 A342     		cmp	r3, r4
 516              	.LBB286:
 517              	.LBB285:
 518              	.LBB282:
 519              		.loc 12 48 35 view .LVU154
 520 0164 C2ED007A 		vstr.32	s15, [r2]
 521              		.loc 12 48 23 view .LVU155
 522 0168 C6ED007A 		vstr.32	s15, [r6]
 523              	.LBE282:
 524              	.LBE285:
 525              	.LBE286:
  35:flanger.cpp   ****     {
 526              		.loc 12 35 5 is_stmt 1 view .LVU156
 527              	.LVL26:
  35:flanger.cpp   ****     {
 528              		.loc 12 35 25 view .LVU157
 529 016c ABD1     		bne	.L8
 530              	.LVL27:
 531              	.L4:
  35:flanger.cpp   ****     {
 532              		.loc 12 35 25 is_stmt 0 view .LVU158
 533              	.LBE270:
  49:flanger.cpp   ****         }
  50:flanger.cpp   ****     }
  51:flanger.cpp   **** }
 534              		.loc 12 51 1 view .LVU159
 535 016e 03B0     		add	sp, sp, #12
 536              		.cfi_def_cfa_offset 44
 537              		@ sp needed
 538 0170 BDEC028B 		vldm	sp!, {d8}
 539              		.cfi_restore 80
 540              		.cfi_restore 81
 541              		.cfi_def_cfa_offset 36
 542 0174 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 543              	.LVL28:
 544              	.L19:
 545              		.loc 12 51 1 view .LVU160
 546              		.align	2
 547              	.L18:
ARM GAS  /tmp/ccR6ulVp.s 			page 25


 548 0178 00000000 		.word	.LANCHOR0
 549 017c 00000000 		.word	.LANCHOR2
 550 0180 00000000 		.word	.LANCHOR4
 551 0184 00000000 		.word	.LANCHOR5
 552 0188 CDCC4C3D 		.word	1028443341
 553 018c 6666663F 		.word	1063675494
 554 0190 00000000 		.word	0
 555 0194 00000000 		.word	.LANCHOR7
 556 0198 17B7D138 		.word	953267991
 557 019c 00000000 		.word	.LANCHOR1
 558 01a0 00000000 		.word	.LANCHOR3
 559 01a4 00000000 		.word	.LANCHOR6
 560              		.cfi_endproc
 561              	.LFE4226:
 563              		.section	.text.startup.main,"ax",%progbits
 564              		.align	1
 565              		.p2align 2,,3
 566              		.global	main
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv5-d16
 572              	main:
 573              	.LFB4227:
  52:flanger.cpp   **** 
  53:flanger.cpp   **** int main(void)
  54:flanger.cpp   **** {
 574              		.loc 12 54 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
  55:flanger.cpp   ****     hw.Init();
 578              		.loc 12 55 5 view .LVU162
  54:flanger.cpp   ****     hw.Init();
 579              		.loc 12 54 1 is_stmt 0 view .LVU163
 580 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 581              		.cfi_def_cfa_offset 24
 582              		.cfi_offset 3, -24
 583              		.cfi_offset 4, -20
 584              		.cfi_offset 5, -16
 585              		.cfi_offset 6, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588              		.loc 12 55 12 view .LVU164
 589 0002 0021     		movs	r1, #0
 590 0004 2D48     		ldr	r0, .L27
  56:flanger.cpp   ****     float sample_rate = hw.AudioSampleRate();
  57:flanger.cpp   **** 
  58:flanger.cpp   ****     deltarget = del = 0.f;
 591              		.loc 12 58 21 view .LVU165
 592 0006 2E4D     		ldr	r5, .L27+4
 593              		.loc 12 58 15 view .LVU166
 594 0008 2E4C     		ldr	r4, .L27+8
  59:flanger.cpp   ****     lfotarget = lfo = 0.f;
  60:flanger.cpp   ****     flanger.Init(sample_rate);
  61:flanger.cpp   **** 
  62:flanger.cpp   ****     wet = .9f;
ARM GAS  /tmp/ccR6ulVp.s 			page 26


 595              		.loc 12 62 9 view .LVU167
 596 000a 2F4E     		ldr	r6, .L27+12
 597 000c 2F4F     		ldr	r7, .L27+16
  54:flanger.cpp   ****     hw.Init();
 598              		.loc 12 54 1 view .LVU168
 599 000e 2DED028B 		vpush.64	{d8}
 600              		.cfi_def_cfa_offset 32
 601              		.cfi_offset 80, -32
 602              		.cfi_offset 81, -28
  55:flanger.cpp   ****     float sample_rate = hw.AudioSampleRate();
 603              		.loc 12 55 12 view .LVU169
 604 0012 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal4InitEb
 605              	.LVL29:
  56:flanger.cpp   **** 
 606              		.loc 12 56 5 is_stmt 1 view .LVU170
  56:flanger.cpp   **** 
 607              		.loc 12 56 43 is_stmt 0 view .LVU171
 608 0016 2948     		ldr	r0, .L27
 609 0018 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal15AudioSampleRateEv
 610              	.LVL30:
  58:flanger.cpp   ****     lfotarget = lfo = 0.f;
 611              		.loc 12 58 5 is_stmt 1 view .LVU172
  58:flanger.cpp   ****     lfotarget = lfo = 0.f;
 612              		.loc 12 58 21 is_stmt 0 view .LVU173
 613 001c 0023     		movs	r3, #0
  59:flanger.cpp   ****     flanger.Init(sample_rate);
 614              		.loc 12 59 21 view .LVU174
 615 001e 2C49     		ldr	r1, .L27+20
  59:flanger.cpp   ****     flanger.Init(sample_rate);
 616              		.loc 12 59 15 view .LVU175
 617 0020 2C4A     		ldr	r2, .L27+24
  60:flanger.cpp   **** 
 618              		.loc 12 60 17 view .LVU176
 619 0022 2D48     		ldr	r0, .L27+28
  59:flanger.cpp   ****     flanger.Init(sample_rate);
 620              		.loc 12 59 21 view .LVU177
 621 0024 0B60     		str	r3, [r1]	@ float
  59:flanger.cpp   ****     flanger.Init(sample_rate);
 622              		.loc 12 59 15 view .LVU178
 623 0026 1360     		str	r3, [r2]	@ float
  58:flanger.cpp   ****     lfotarget = lfo = 0.f;
 624              		.loc 12 58 21 view .LVU179
 625 0028 2B60     		str	r3, [r5]	@ float
  58:flanger.cpp   ****     lfotarget = lfo = 0.f;
 626              		.loc 12 58 15 view .LVU180
 627 002a 2360     		str	r3, [r4]	@ float
  59:flanger.cpp   ****     flanger.Init(sample_rate);
 628              		.loc 12 59 5 is_stmt 1 view .LVU181
  60:flanger.cpp   **** 
 629              		.loc 12 60 5 view .LVU182
  60:flanger.cpp   **** 
 630              		.loc 12 60 17 is_stmt 0 view .LVU183
 631 002c FFF7FEFF 		bl	_ZN7daisysp7Flanger4InitEf
 632              	.LVL31:
 633              		.loc 12 62 5 is_stmt 1 view .LVU184
 634              		.loc 12 62 9 is_stmt 0 view .LVU185
 635 0030 2A4B     		ldr	r3, .L27+32
ARM GAS  /tmp/ccR6ulVp.s 			page 27


  63:flanger.cpp   **** 
  64:flanger.cpp   ****     hw.StartAdc();
 636              		.loc 12 64 16 view .LVU186
 637 0032 2248     		ldr	r0, .L27
  62:flanger.cpp   **** 
 638              		.loc 12 62 9 view .LVU187
 639 0034 3360     		str	r3, [r6]	@ float
 640              		.loc 12 64 5 is_stmt 1 view .LVU188
 641              		.loc 12 64 16 is_stmt 0 view .LVU189
 642 0036 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal8StartAdcEv
 643              	.LVL32:
  65:flanger.cpp   ****     hw.StartAudio(AudioCallback);
 644              		.loc 12 65 5 is_stmt 1 view .LVU190
 645              		.loc 12 65 18 is_stmt 0 view .LVU191
 646 003a 2949     		ldr	r1, .L27+36
 647 003c 1F48     		ldr	r0, .L27
 648 003e FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10StartAudioEPFvPKPKfPPfjE
 649              	.LVL33:
 650              	.L24:
  66:flanger.cpp   ****     while(1)
 651              		.loc 12 66 5 is_stmt 1 view .LVU192
 652              	.LBB287:
  67:flanger.cpp   ****     {
  68:flanger.cpp   ****         hw.DelayMs(6);
 653              		.loc 12 68 9 view .LVU193
 654              		.loc 12 68 19 is_stmt 0 view .LVU194
 655 0042 0621     		movs	r1, #6
 656 0044 1D48     		ldr	r0, .L27
 657 0046 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal7DelayMsEj
 658              	.LVL34:
  69:flanger.cpp   **** 
  70:flanger.cpp   ****         hw.ClearLeds();
 659              		.loc 12 70 9 is_stmt 1 view .LVU195
 660              		.loc 12 70 21 is_stmt 0 view .LVU196
 661 004a 1C48     		ldr	r0, .L27
 662 004c FFF7FEFF 		bl	_ZN5daisy10DaisyPetal9ClearLedsEv
 663              	.LVL35:
  71:flanger.cpp   ****         hw.SetFootswitchLed((DaisyPetal::FootswitchLed)0, (float)effectOn);
 664              		.loc 12 71 9 is_stmt 1 view .LVU197
 665              		.loc 12 71 28 is_stmt 0 view .LVU198
 666 0050 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 667 0052 0021     		movs	r1, #0
 668 0054 1948     		ldr	r0, .L27
 669 0056 00EE103A 		vmov	s0, r3	@ int
 670 005a B8EE400A 		vcvt.f32.u32	s0, s0
 671 005e FFF7FEFF 		bl	_ZN5daisy10DaisyPetal16SetFootswitchLedENS0_13FootswitchLedEf
 672              	.LVL36:
  72:flanger.cpp   **** 
  73:flanger.cpp   ****         int   wet_int  = (int)(wet * 8.f);
 673              		.loc 12 73 9 is_stmt 1 view .LVU199
 674              		.loc 12 73 36 is_stmt 0 view .LVU200
 675 0062 96ED008A 		vldr.32	s16, [r6]
 676              		.loc 12 73 15 view .LVU201
 677 0066 F0EE487A 		vmov.f32	s15, s16
 678 006a FEEEEE7A 		vcvt.s32.f32	s15, s15, #3
 679 006e 17EE905A 		vmov	r5, s15	@ int
 680              	.LVL37:
ARM GAS  /tmp/ccR6ulVp.s 			page 28


  74:flanger.cpp   ****         float wet_frac = wet - wet_int;
 681              		.loc 12 74 9 is_stmt 1 view .LVU202
  75:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 682              		.loc 12 75 9 view .LVU203
 683              	.LBB288:
 684              		.loc 12 75 26 view .LVU204
 685 0072 002D     		cmp	r5, #0
 686 0074 0FDD     		ble	.L21
 687              		.loc 12 75 17 is_stmt 0 view .LVU205
 688 0076 0024     		movs	r4, #0
 689              	.LVL38:
 690              	.L22:
  76:flanger.cpp   ****         {
  77:flanger.cpp   ****             hw.SetRingLed((DaisyPetal::RingLed)i, 1.f, 0.f, 0.f);
 691              		.loc 12 77 13 is_stmt 1 discriminator 2 view .LVU206
 692              		.loc 12 77 26 is_stmt 0 discriminator 2 view .LVU207
 693 0078 9FED1A1A 		vldr.32	s2, .L27+40
 694 007c E1B2     		uxtb	r1, r4
  75:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 695              		.loc 12 75 9 discriminator 2 view .LVU208
 696 007e 0134     		adds	r4, r4, #1
 697              	.LVL39:
 698              		.loc 12 77 26 discriminator 2 view .LVU209
 699 0080 B7EE000A 		vmov.f32	s0, #1.0e+0
 700 0084 F0EE410A 		vmov.f32	s1, s2
 701 0088 0C48     		ldr	r0, .L27
 702 008a FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10SetRingLedENS0_7RingLedEfff
 703              	.LVL40:
  75:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 704              		.loc 12 75 9 is_stmt 1 discriminator 2 view .LVU210
  75:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 705              		.loc 12 75 26 discriminator 2 view .LVU211
 706 008e A542     		cmp	r5, r4
 707 0090 F2D1     		bne	.L22
 708              	.LBE288:
  78:flanger.cpp   ****         }
  79:flanger.cpp   **** 
  80:flanger.cpp   ****         if(wet_int < 8)
 709              		.loc 12 80 9 view .LVU212
 710 0092 072D     		cmp	r5, #7
 711 0094 0DDC     		bgt	.L23
 712              	.LVL41:
 713              	.L21:
  81:flanger.cpp   ****         {
  82:flanger.cpp   ****             hw.SetRingLed((DaisyPetal::RingLed)wet_int, wet_frac, 0.f, 0.f);
 714              		.loc 12 82 13 view .LVU213
  74:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 715              		.loc 12 74 30 is_stmt 0 view .LVU214
 716 0096 07EE905A 		vmov	s15, r5	@ int
 717              		.loc 12 82 26 view .LVU215
 718 009a 9FED121A 		vldr.32	s2, .L27+40
 719 009e E9B2     		uxtb	r1, r5
 720 00a0 0648     		ldr	r0, .L27
  74:flanger.cpp   ****         for(int i = 0; i < wet_int; i++)
 721              		.loc 12 74 30 view .LVU216
 722 00a2 B8EEE70A 		vcvt.f32.s32	s0, s15
 723              		.loc 12 82 26 view .LVU217
ARM GAS  /tmp/ccR6ulVp.s 			page 29


 724 00a6 F0EE410A 		vmov.f32	s1, s2
 725 00aa 38EE400A 		vsub.f32	s0, s16, s0
 726 00ae FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10SetRingLedENS0_7RingLedEfff
 727              	.LVL42:
 728              	.L23:
  83:flanger.cpp   ****         }
  84:flanger.cpp   **** 
  85:flanger.cpp   ****         hw.UpdateLeds();
 729              		.loc 12 85 9 is_stmt 1 view .LVU218
 730              		.loc 12 85 22 is_stmt 0 view .LVU219
 731 00b2 0248     		ldr	r0, .L27
 732 00b4 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10UpdateLedsEv
 733              	.LVL43:
 734              	.LBE287:
  66:flanger.cpp   ****     {
 735              		.loc 12 66 5 is_stmt 1 view .LVU220
  86:flanger.cpp   ****     }
 736              		.loc 12 86 5 is_stmt 0 view .LVU221
 737 00b8 C3E7     		b	.L24
 738              	.L28:
 739 00ba 00BF     		.align	2
 740              	.L27:
 741 00bc 00000000 		.word	.LANCHOR0
 742 00c0 00000000 		.word	.LANCHOR6
 743 00c4 00000000 		.word	.LANCHOR1
 744 00c8 00000000 		.word	.LANCHOR5
 745 00cc 00000000 		.word	.LANCHOR4
 746 00d0 00000000 		.word	.LANCHOR7
 747 00d4 00000000 		.word	.LANCHOR3
 748 00d8 00000000 		.word	.LANCHOR2
 749 00dc 6666663F 		.word	1063675494
 750 00e0 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 751 00e4 00000000 		.word	0
 752              		.cfi_endproc
 753              	.LFE4227:
 755              		.section	.text.startup._GLOBAL__sub_I_flanger,"ax",%progbits
 756              		.align	1
 757              		.p2align 2,,3
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 761              		.fpu fpv5-d16
 763              	_GLOBAL__sub_I_flanger:
 764              	.LFB4782:
  87:flanger.cpp   **** }
 765              		.loc 12 87 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              	.LBB327:
 770              	.LBI327:
 771              		.loc 12 87 1 view .LVU223
 772              	.LVL44:
 773              	.LBB328:
 774              	.LBB329:
 775              	.LBI329:
 776              		.loc 10 18 7 view .LVU224
ARM GAS  /tmp/ccR6ulVp.s 			page 30


 777              	.LBB330:
 778              	.LBI330:
  23:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 779              		.loc 11 23 5 view .LVU225
  23:../../DaisySP/Source/Utility/delayline.h ****     ~DelayLine() {}
 780              		.loc 11 23 5 is_stmt 0 view .LVU226
 781              	.LBE330:
 782              	.LBE329:
 783              	.LBE328:
 784              	.LBE327:
 785              		.loc 12 87 1 view .LVU227
 786 0000 38B5     		push	{r3, r4, r5, lr}
 787              		.cfi_def_cfa_offset 16
 788              		.cfi_offset 3, -16
 789              		.cfi_offset 4, -12
 790              		.cfi_offset 5, -8
 791              		.cfi_offset 14, -4
 792              	.LBB375:
 793              	.LBB371:
   7:flanger.cpp   **** DaisyPetal hw;
 794              		.loc 12 7 12 view .LVU228
 795 0002 0D4D     		ldr	r5, .L31
 796              	.LBB331:
 797              	.LBB332:
 798              	.LBB333:
 799              	.LBB334:
 800              	.LBB335:
 801              	.LBB336:
 802              	.LBB337:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 803              		.loc 9 62 35 view .LVU229
 804 0004 0D4C     		ldr	r4, .L31+4
 805              	.LBE337:
 806              	.LBE336:
 807              	.LBE335:
 808              	.LBE334:
 809              	.LBE333:
 810              	.LBE332:
 811              	.LBE331:
   7:flanger.cpp   **** DaisyPetal hw;
 812              		.loc 12 7 12 view .LVU230
 813 0006 2A46     		mov	r2, r5
 814 0008 0D49     		ldr	r1, .L31+8
 815 000a 0E48     		ldr	r0, .L31+12
 816 000c FFF7FEFF 		bl	__aeabi_atexit
 817              	.LVL45:
 818              	.LBB368:
 819              	.LBI331:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 820              		.loc 1 66 5 is_stmt 1 view .LVU231
 821              	.LBB365:
 822              	.LBB352:
 823              	.LBI333:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 824              		.loc 5 21 5 view .LVU232
 825              	.LBB350:
 826              	.LBB342:
ARM GAS  /tmp/ccR6ulVp.s 			page 31


 827              	.LBI335:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 828              		.loc 9 62 5 view .LVU233
 829              	.LBB340:
 830              	.LBB338:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 831              		.loc 9 62 35 is_stmt 0 view .LVU234
 832 0010 0023     		movs	r3, #0
 833              	.LBE338:
 834              	.LBE340:
 835              	.LBE342:
 836              	.LBE350:
 837              	.LBE352:
 838              	.LBB353:
 839              	.LBB354:
 840              		.file 14 "../../libdaisy/src/dev/leddriver.h"
   1:../../libdaisy/src/dev/leddriver.h **** #pragma once
   2:../../libdaisy/src/dev/leddriver.h **** #ifndef SA_LED_DRIVER_H
   3:../../libdaisy/src/dev/leddriver.h **** #define SA_LED_DRIVER_H /**< & */
   4:../../libdaisy/src/dev/leddriver.h **** 
   5:../../libdaisy/src/dev/leddriver.h **** #ifdef __cplusplus
   6:../../libdaisy/src/dev/leddriver.h **** 
   7:../../libdaisy/src/dev/leddriver.h **** #include <stdint.h>
   8:../../libdaisy/src/dev/leddriver.h **** #include "per/i2c.h"
   9:../../libdaisy/src/dev/leddriver.h **** #include "per/gpio.h"
  10:../../libdaisy/src/dev/leddriver.h **** 
  11:../../libdaisy/src/dev/leddriver.h **** namespace daisy
  12:../../libdaisy/src/dev/leddriver.h **** {
  13:../../libdaisy/src/dev/leddriver.h **** /** LED driver for one or multiple PCA9685 12bit PWM chips connected to
  14:../../libdaisy/src/dev/leddriver.h ****  * a single I2C peripheral.
  15:../../libdaisy/src/dev/leddriver.h ****  * It includes gamma correction from 8bit brightness values but it 
  16:../../libdaisy/src/dev/leddriver.h ****  * can also be supplied with raw 12bit values.
  17:../../libdaisy/src/dev/leddriver.h ****  * This driver uses two buffers - one for drawing, one for transmitting.
  18:../../libdaisy/src/dev/leddriver.h ****  * Multiple LedDriverPca9685 instances can be used at the same time.
  19:../../libdaisy/src/dev/leddriver.h ****  * \param numDrivers    The number of PCA9685 driver attached to the I2C
  20:../../libdaisy/src/dev/leddriver.h ****  *                      peripheral.
  21:../../libdaisy/src/dev/leddriver.h ****  * \param persistentBufferContents If set to true, the current draw buffer 
  22:../../libdaisy/src/dev/leddriver.h ****  *                      contents will be copied to the next draw buffer 
  23:../../libdaisy/src/dev/leddriver.h ****  *                      during SwapBuffersAndTransmit(). Use this, if you plan
  24:../../libdaisy/src/dev/leddriver.h ****  *                      to write single leds at a time. 
  25:../../libdaisy/src/dev/leddriver.h ****  *                      If you will alway update all leds before calling 
  26:../../libdaisy/src/dev/leddriver.h ****  *                      SwapBuffersAndTransmit(), you can set this to false
  27:../../libdaisy/src/dev/leddriver.h ****  *                      and safe some cycles.
  28:../../libdaisy/src/dev/leddriver.h ****  */
  29:../../libdaisy/src/dev/leddriver.h **** template <int numDrivers, bool persistentBufferContents = true>
  30:../../libdaisy/src/dev/leddriver.h **** class LedDriverPca9685
 841              		.loc 14 30 7 view .LVU235
 842 0012 4FF40072 		mov	r2, #512
 843 0016 04F2D240 		addw	r0, r4, #1234
 844 001a 0B49     		ldr	r1, .L31+16
 845              	.LBE354:
 846              	.LBE353:
 847              	.LBB359:
 848              	.LBB351:
 849              	.LBB343:
 850              	.LBB341:
 851              	.LBB339:
ARM GAS  /tmp/ccR6ulVp.s 			page 32


  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 852              		.loc 9 62 35 view .LVU236
 853 001c 6361     		str	r3, [r4, #20]
 854              	.LVL46:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 855              		.loc 9 62 35 view .LVU237
 856              	.LBE339:
 857              	.LBE341:
 858              	.LBE343:
 859              	.LBB344:
 860              	.LBI344:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 861              		.loc 8 84 5 is_stmt 1 view .LVU238
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 862              		.loc 8 84 5 is_stmt 0 view .LVU239
 863              	.LBE344:
 864              	.LBB345:
 865              	.LBI345:
 866              		.file 15 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
ARM GAS  /tmp/ccR6ulVp.s 			page 33


  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 867              		.loc 15 83 5 is_stmt 1 view .LVU240
 868              	.LBB346:
 869              	.LBB347:
 870              		.loc 15 83 33 is_stmt 0 view .LVU241
 871 001e 2362     		str	r3, [r4, #32]
 872              	.LVL47:
 873              		.loc 15 83 33 view .LVU242
 874              	.LBE347:
 875              	.LBE346:
 876              	.LBE345:
 877              	.LBB348:
 878              	.LBI348:
ARM GAS  /tmp/ccR6ulVp.s 			page 34


  40:../../libdaisy/src/hid/usb.h **** 
 879              		.loc 7 40 5 is_stmt 1 view .LVU243
  40:../../libdaisy/src/hid/usb.h **** 
 880              		.loc 7 40 5 is_stmt 0 view .LVU244
 881              	.LBE348:
 882              	.LBB349:
 883              	.LBI349:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 884              		.loc 6 58 5 is_stmt 1 view .LVU245
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 885              		.loc 6 58 5 is_stmt 0 view .LVU246
 886              	.LBE349:
 887              	.LBE351:
 888              	.LBE359:
 889              	.LBB360:
 890              	.LBI360:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 891              		.loc 3 20 5 is_stmt 1 view .LVU247
 892              	.LBB361:
 893              	.LBB362:
 894              	.LBI362:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 895              		.loc 4 40 5 view .LVU248
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 896              		.loc 4 40 5 is_stmt 0 view .LVU249
 897              	.LBE362:
 898              	.LBE361:
 899              	.LBE360:
 900              	.LBE365:
 901              	.LBE368:
 902              	.LBE371:
 903              	.LBE375:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 904              		.loc 1 66 18 is_stmt 1 view .LVU250
 905              	.LBB376:
 906              	.LBB372:
 907              	.LBB369:
 908              	.LBB366:
 909              	.LBB363:
 910              	.LBI363:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 911              		.loc 2 21 5 view .LVU251
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 912              		.loc 2 21 5 is_stmt 0 view .LVU252
 913              	.LBE363:
 914              	.LBE366:
 915              	.LBE369:
 916              	.LBE372:
 917              	.LBE376:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 918              		.loc 1 66 18 is_stmt 1 view .LVU253
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 919              		.loc 1 66 18 view .LVU254
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 920              		.loc 1 66 18 view .LVU255
 921              	.LBB377:
 922              	.LBB373:
ARM GAS  /tmp/ccR6ulVp.s 			page 35


 923              	.LBB370:
 924              	.LBB367:
 925              	.LBB364:
 926              	.LBI353:
 927              		.loc 14 30 7 view .LVU256
 928              	.LBB358:
 929              	.LBB355:
 930              	.LBI355:
 931              		.file 16 "../../libdaisy/src/per/i2c.h"
   1:../../libdaisy/src/per/i2c.h **** #pragma once
   2:../../libdaisy/src/per/i2c.h **** #include "daisy_core.h"
   3:../../libdaisy/src/per/i2c.h **** 
   4:../../libdaisy/src/per/i2c.h **** namespace daisy
   5:../../libdaisy/src/per/i2c.h **** {
   6:../../libdaisy/src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libdaisy/src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libdaisy/src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libdaisy/src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libdaisy/src/per/i2c.h ****  *  
  11:../../libdaisy/src/per/i2c.h ****  *      // setup the configuration
  12:../../libdaisy/src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libdaisy/src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libdaisy/src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libdaisy/src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libdaisy/src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libdaisy/src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libdaisy/src/per/i2c.h ****  */
  24:../../libdaisy/src/per/i2c.h **** class I2CHandle
  25:../../libdaisy/src/per/i2c.h **** {
  26:../../libdaisy/src/per/i2c.h ****   public:
  27:../../libdaisy/src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libdaisy/src/per/i2c.h ****     struct Config
  29:../../libdaisy/src/per/i2c.h ****     {
  30:../../libdaisy/src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libdaisy/src/per/i2c.h ****         enum class Mode
  32:../../libdaisy/src/per/i2c.h ****         {
  33:../../libdaisy/src/per/i2c.h ****             I2C_MASTER,
  34:../../libdaisy/src/per/i2c.h ****             I2C_SLAVE,
  35:../../libdaisy/src/per/i2c.h ****         };
  36:../../libdaisy/src/per/i2c.h **** 
  37:../../libdaisy/src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libdaisy/src/per/i2c.h ****         enum class Peripheral
  39:../../libdaisy/src/per/i2c.h ****         {
  40:../../libdaisy/src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libdaisy/src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libdaisy/src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libdaisy/src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libdaisy/src/per/i2c.h ****         };
  45:../../libdaisy/src/per/i2c.h **** 
  46:../../libdaisy/src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libdaisy/src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libdaisy/src/per/i2c.h ****          */
ARM GAS  /tmp/ccR6ulVp.s 			page 36


  49:../../libdaisy/src/per/i2c.h ****         enum class Speed
  50:../../libdaisy/src/per/i2c.h ****         {
  51:../../libdaisy/src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libdaisy/src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libdaisy/src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libdaisy/src/per/i2c.h ****         };
  55:../../libdaisy/src/per/i2c.h **** 
  56:../../libdaisy/src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libdaisy/src/per/i2c.h ****         struct
  58:../../libdaisy/src/per/i2c.h ****         {
  59:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libdaisy/src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libdaisy/src/per/i2c.h **** 
  63:../../libdaisy/src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libdaisy/src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libdaisy/src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libdaisy/src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libdaisy/src/per/i2c.h ****     };
  68:../../libdaisy/src/per/i2c.h **** 
  69:../../libdaisy/src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libdaisy/src/per/i2c.h ****     enum class Result
  71:../../libdaisy/src/per/i2c.h ****     {
  72:../../libdaisy/src/per/i2c.h ****         OK, /**< & */
  73:../../libdaisy/src/per/i2c.h ****         ERR /**< & */
  74:../../libdaisy/src/per/i2c.h ****     };
  75:../../libdaisy/src/per/i2c.h **** 
  76:../../libdaisy/src/per/i2c.h ****     enum class Direction
  77:../../libdaisy/src/per/i2c.h ****     {
  78:../../libdaisy/src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libdaisy/src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libdaisy/src/per/i2c.h ****     };
  81:../../libdaisy/src/per/i2c.h **** 
  82:../../libdaisy/src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 932              		.loc 16 82 5 view .LVU257
 933              	.LBB356:
 934              	.LBB357:
 935              		.loc 16 82 33 is_stmt 0 view .LVU258
 936 0020 C4F8BC34 		str	r3, [r4, #1212]
 937              	.LVL48:
 938              		.loc 16 82 33 view .LVU259
 939              	.LBE357:
 940              	.LBE356:
 941              	.LBE355:
 942              		.loc 14 30 7 view .LVU260
 943 0024 FFF7FEFF 		bl	memcpy
 944              	.LVL49:
 945              		.loc 14 30 7 view .LVU261
 946              	.LBE358:
 947              	.LBE364:
 948              	.LBE367:
 949              	.LBE370:
   8:flanger.cpp   **** 
 950              		.loc 12 8 12 view .LVU262
 951 0028 2A46     		mov	r2, r5
 952 002a 2046     		mov	r0, r4
 953 002c 0749     		ldr	r1, .L31+20
ARM GAS  /tmp/ccR6ulVp.s 			page 37


 954              	.LBE373:
 955              	.LBE377:
 956              		.loc 12 87 1 view .LVU263
 957 002e BDE83840 		pop	{r3, r4, r5, lr}
 958              		.cfi_restore 14
 959              		.cfi_restore 5
 960              		.cfi_restore 4
 961              		.cfi_restore 3
 962              		.cfi_def_cfa_offset 0
 963              	.LBB378:
 964              	.LBB374:
   8:flanger.cpp   **** 
 965              		.loc 12 8 12 view .LVU264
 966 0032 FFF7FEBF 		b	__aeabi_atexit
 967              	.LVL50:
 968              	.L32:
 969 0036 00BF     		.align	2
 970              	.L31:
 971 0038 00000000 		.word	__dso_handle
 972 003c 00000000 		.word	.LANCHOR0
 973 0040 00000000 		.word	_ZN7daisysp7FlangerD1Ev
 974 0044 00000000 		.word	.LANCHOR2
 975 0048 00000000 		.word	.LANCHOR8
 976 004c 00000000 		.word	_ZN5daisy10DaisyPetalD1Ev
 977              	.LBE374:
 978              	.LBE378:
 979              		.cfi_endproc
 980              	.LFE4782:
 982              		.section	.init_array,"aw",%init_array
 983              		.align	2
 984 0000 00000000 		.word	_GLOBAL__sub_I_flanger(target1)
 985              		.global	lfo
 986              		.global	lfotarget
 987              		.global	del
 988              		.global	deltarget
 989              		.global	wet
 990              		.global	effectOn
 991              		.global	hw
 992              		.global	flanger
 993              		.section	.rodata
 994              		.align	2
 995              		.set	.LANCHOR8,. + 0
 996              	.LC0:
 997 0000 0000     		.short	0
 998 0002 0100     		.short	1
 999 0004 0100     		.short	1
 1000 0006 0100     		.short	1
 1001 0008 0100     		.short	1
 1002 000a 0100     		.short	1
 1003 000c 0100     		.short	1
 1004 000e 0100     		.short	1
 1005 0010 0100     		.short	1
 1006 0012 0100     		.short	1
 1007 0014 0100     		.short	1
 1008 0016 0100     		.short	1
 1009 0018 0200     		.short	2
 1010 001a 0200     		.short	2
ARM GAS  /tmp/ccR6ulVp.s 			page 38


 1011 001c 0200     		.short	2
 1012 001e 0200     		.short	2
 1013 0020 0200     		.short	2
 1014 0022 0200     		.short	2
 1015 0024 0200     		.short	2
 1016 0026 0300     		.short	3
 1017 0028 0300     		.short	3
 1018 002a 0400     		.short	4
 1019 002c 0400     		.short	4
 1020 002e 0500     		.short	5
 1021 0030 0500     		.short	5
 1022 0032 0600     		.short	6
 1023 0034 0700     		.short	7
 1024 0036 0800     		.short	8
 1025 0038 0800     		.short	8
 1026 003a 0900     		.short	9
 1027 003c 0A00     		.short	10
 1028 003e 0B00     		.short	11
 1029 0040 0C00     		.short	12
 1030 0042 0D00     		.short	13
 1031 0044 0F00     		.short	15
 1032 0046 1000     		.short	16
 1033 0048 1100     		.short	17
 1034 004a 1200     		.short	18
 1035 004c 1400     		.short	20
 1036 004e 1500     		.short	21
 1037 0050 1700     		.short	23
 1038 0052 1900     		.short	25
 1039 0054 1A00     		.short	26
 1040 0056 1C00     		.short	28
 1041 0058 1E00     		.short	30
 1042 005a 2000     		.short	32
 1043 005c 2200     		.short	34
 1044 005e 2400     		.short	36
 1045 0060 2600     		.short	38
 1046 0062 2800     		.short	40
 1047 0064 2B00     		.short	43
 1048 0066 2D00     		.short	45
 1049 0068 3000     		.short	48
 1050 006a 3200     		.short	50
 1051 006c 3500     		.short	53
 1052 006e 3800     		.short	56
 1053 0070 3B00     		.short	59
 1054 0072 3E00     		.short	62
 1055 0074 4100     		.short	65
 1056 0076 4400     		.short	68
 1057 0078 4700     		.short	71
 1058 007a 4B00     		.short	75
 1059 007c 4E00     		.short	78
 1060 007e 5200     		.short	82
 1061 0080 5500     		.short	85
 1062 0082 5900     		.short	89
 1063 0084 5D00     		.short	93
 1064 0086 6100     		.short	97
 1065 0088 6500     		.short	101
 1066 008a 6900     		.short	105
 1067 008c 6E00     		.short	110
ARM GAS  /tmp/ccR6ulVp.s 			page 39


 1068 008e 7200     		.short	114
 1069 0090 7700     		.short	119
 1070 0092 7B00     		.short	123
 1071 0094 8000     		.short	128
 1072 0096 8500     		.short	133
 1073 0098 8A00     		.short	138
 1074 009a 8F00     		.short	143
 1075 009c 9500     		.short	149
 1076 009e 9A00     		.short	154
 1077 00a0 9F00     		.short	159
 1078 00a2 A500     		.short	165
 1079 00a4 AB00     		.short	171
 1080 00a6 B100     		.short	177
 1081 00a8 B700     		.short	183
 1082 00aa BD00     		.short	189
 1083 00ac C300     		.short	195
 1084 00ae CA00     		.short	202
 1085 00b0 D000     		.short	208
 1086 00b2 D700     		.short	215
 1087 00b4 DE00     		.short	222
 1088 00b6 E500     		.short	229
 1089 00b8 EC00     		.short	236
 1090 00ba F300     		.short	243
 1091 00bc FA00     		.short	250
 1092 00be 0201     		.short	258
 1093 00c0 0A01     		.short	266
 1094 00c2 1101     		.short	273
 1095 00c4 1901     		.short	281
 1096 00c6 2201     		.short	290
 1097 00c8 2A01     		.short	298
 1098 00ca 3201     		.short	306
 1099 00cc 3B01     		.short	315
 1100 00ce 4401     		.short	324
 1101 00d0 4C01     		.short	332
 1102 00d2 5501     		.short	341
 1103 00d4 5F01     		.short	351
 1104 00d6 6801     		.short	360
 1105 00d8 7101     		.short	369
 1106 00da 7B01     		.short	379
 1107 00dc 8501     		.short	389
 1108 00de 8F01     		.short	399
 1109 00e0 9901     		.short	409
 1110 00e2 A301     		.short	419
 1111 00e4 AE01     		.short	430
 1112 00e6 B801     		.short	440
 1113 00e8 C301     		.short	451
 1114 00ea CE01     		.short	462
 1115 00ec D901     		.short	473
 1116 00ee E501     		.short	485
 1117 00f0 F001     		.short	496
 1118 00f2 FC01     		.short	508
 1119 00f4 0802     		.short	520
 1120 00f6 1402     		.short	532
 1121 00f8 2002     		.short	544
 1122 00fa 2C02     		.short	556
 1123 00fc 3902     		.short	569
 1124 00fe 4602     		.short	582
ARM GAS  /tmp/ccR6ulVp.s 			page 40


 1125 0100 5202     		.short	594
 1126 0102 6002     		.short	608
 1127 0104 6D02     		.short	621
 1128 0106 7A02     		.short	634
 1129 0108 8802     		.short	648
 1130 010a 9602     		.short	662
 1131 010c A402     		.short	676
 1132 010e B202     		.short	690
 1133 0110 C002     		.short	704
 1134 0112 CF02     		.short	719
 1135 0114 DE02     		.short	734
 1136 0116 ED02     		.short	749
 1137 0118 FC02     		.short	764
 1138 011a 0B03     		.short	779
 1139 011c 1B03     		.short	795
 1140 011e 2B03     		.short	811
 1141 0120 3B03     		.short	827
 1142 0122 4B03     		.short	843
 1143 0124 5B03     		.short	859
 1144 0126 6C03     		.short	876
 1145 0128 7D03     		.short	893
 1146 012a 8E03     		.short	910
 1147 012c 9F03     		.short	927
 1148 012e B003     		.short	944
 1149 0130 C203     		.short	962
 1150 0132 D403     		.short	980
 1151 0134 E603     		.short	998
 1152 0136 F803     		.short	1016
 1153 0138 0A04     		.short	1034
 1154 013a 1D04     		.short	1053
 1155 013c 3004     		.short	1072
 1156 013e 4304     		.short	1091
 1157 0140 5604     		.short	1110
 1158 0142 6A04     		.short	1130
 1159 0144 7E04     		.short	1150
 1160 0146 9204     		.short	1170
 1161 0148 A604     		.short	1190
 1162 014a BA04     		.short	1210
 1163 014c CF04     		.short	1231
 1164 014e E404     		.short	1252
 1165 0150 F904     		.short	1273
 1166 0152 0E05     		.short	1294
 1167 0154 2405     		.short	1316
 1168 0156 3A05     		.short	1338
 1169 0158 5005     		.short	1360
 1170 015a 6605     		.short	1382
 1171 015c 7C05     		.short	1404
 1172 015e 9305     		.short	1427
 1173 0160 AA05     		.short	1450
 1174 0162 C105     		.short	1473
 1175 0164 D905     		.short	1497
 1176 0166 F005     		.short	1520
 1177 0168 0806     		.short	1544
 1178 016a 2006     		.short	1568
 1179 016c 3906     		.short	1593
 1180 016e 5106     		.short	1617
 1181 0170 6A06     		.short	1642
ARM GAS  /tmp/ccR6ulVp.s 			page 41


 1182 0172 8306     		.short	1667
 1183 0174 9D06     		.short	1693
 1184 0176 B606     		.short	1718
 1185 0178 D006     		.short	1744
 1186 017a EA06     		.short	1770
 1187 017c 0507     		.short	1797
 1188 017e 1F07     		.short	1823
 1189 0180 3A07     		.short	1850
 1190 0182 5507     		.short	1877
 1191 0184 7107     		.short	1905
 1192 0186 8C07     		.short	1932
 1193 0188 A807     		.short	1960
 1194 018a C407     		.short	1988
 1195 018c E107     		.short	2017
 1196 018e FD07     		.short	2045
 1197 0190 1A08     		.short	2074
 1198 0192 3708     		.short	2103
 1199 0194 5508     		.short	2133
 1200 0196 7208     		.short	2162
 1201 0198 9008     		.short	2192
 1202 019a AF08     		.short	2223
 1203 019c CD08     		.short	2253
 1204 019e EC08     		.short	2284
 1205 01a0 0B09     		.short	2315
 1206 01a2 2A09     		.short	2346
 1207 01a4 4A09     		.short	2378
 1208 01a6 6A09     		.short	2410
 1209 01a8 8A09     		.short	2442
 1210 01aa AA09     		.short	2474
 1211 01ac CB09     		.short	2507
 1212 01ae EC09     		.short	2540
 1213 01b0 0D0A     		.short	2573
 1214 01b2 2E0A     		.short	2606
 1215 01b4 500A     		.short	2640
 1216 01b6 720A     		.short	2674
 1217 01b8 940A     		.short	2708
 1218 01ba B70A     		.short	2743
 1219 01bc DA0A     		.short	2778
 1220 01be FD0A     		.short	2813
 1221 01c0 210B     		.short	2849
 1222 01c2 440B     		.short	2884
 1223 01c4 680B     		.short	2920
 1224 01c6 8D0B     		.short	2957
 1225 01c8 B10B     		.short	2993
 1226 01ca D60B     		.short	3030
 1227 01cc FB0B     		.short	3067
 1228 01ce 210C     		.short	3105
 1229 01d0 470C     		.short	3143
 1230 01d2 6D0C     		.short	3181
 1231 01d4 930C     		.short	3219
 1232 01d6 BA0C     		.short	3258
 1233 01d8 E10C     		.short	3297
 1234 01da 080D     		.short	3336
 1235 01dc 300D     		.short	3376
 1236 01de 580D     		.short	3416
 1237 01e0 800D     		.short	3456
 1238 01e2 A80D     		.short	3496
ARM GAS  /tmp/ccR6ulVp.s 			page 42


 1239 01e4 D10D     		.short	3537
 1240 01e6 FA0D     		.short	3578
 1241 01e8 230E     		.short	3619
 1242 01ea 4D0E     		.short	3661
 1243 01ec 770E     		.short	3703
 1244 01ee A10E     		.short	3745
 1245 01f0 CC0E     		.short	3788
 1246 01f2 F70E     		.short	3831
 1247 01f4 220F     		.short	3874
 1248 01f6 4E0F     		.short	3918
 1249 01f8 7A0F     		.short	3962
 1250 01fa A60F     		.short	4006
 1251 01fc D20F     		.short	4050
 1252 01fe FF0F     		.short	4095
 1253              		.section	.bss.del,"aw",%nobits
 1254              		.align	2
 1255              		.set	.LANCHOR6,. + 0
 1258              	del:
 1259 0000 00000000 		.space	4
 1260              		.section	.bss.deltarget,"aw",%nobits
 1261              		.align	2
 1262              		.set	.LANCHOR1,. + 0
 1265              	deltarget:
 1266 0000 00000000 		.space	4
 1267              		.section	.bss.flanger,"aw",%nobits
 1268              		.align	2
 1269              		.set	.LANCHOR2,. + 0
 1272              	flanger:
 1273 0000 00000000 		.space	3876
 1273      00000000 
 1273      00000000 
 1273      00000000 
 1273      00000000 
 1274              		.section	.bss.hw,"aw",%nobits
 1275              		.align	2
 1276              		.set	.LANCHOR0,. + 0
 1279              	hw:
 1280 0000 00000000 		.space	1748
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1280      00000000 
 1281              		.section	.bss.lfo,"aw",%nobits
 1282              		.align	2
 1283              		.set	.LANCHOR7,. + 0
 1286              	lfo:
 1287 0000 00000000 		.space	4
 1288              		.section	.bss.lfotarget,"aw",%nobits
 1289              		.align	2
 1290              		.set	.LANCHOR3,. + 0
 1293              	lfotarget:
 1294 0000 00000000 		.space	4
 1295              		.section	.bss.wet,"aw",%nobits
 1296              		.align	2
 1297              		.set	.LANCHOR5,. + 0
 1300              	wet:
 1301 0000 00000000 		.space	4
ARM GAS  /tmp/ccR6ulVp.s 			page 43


 1302              		.section	.data.effectOn,"aw"
 1303              		.set	.LANCHOR4,. + 0
 1306              	effectOn:
 1307 0000 01       		.byte	1
 1308              		.text
 1309              	.Letext0:
 1310              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1311              		.file 18 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 1312              		.file 19 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1313              		.file 20 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1314              		.file 21 "/usr/include/newlib/c++/9.2.1/cmath"
 1315              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1316              		.file 23 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1317              		.file 24 "/usr/include/newlib/c++/9.2.1/cstdint"
 1318              		.file 25 "/usr/include/newlib/c++/9.2.1/type_traits"
 1319              		.file 26 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 1320              		.file 27 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 1321              		.file 28 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 1322              		.file 29 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 1323              		.file 30 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 1324              		.file 31 "/usr/include/newlib/c++/9.2.1/new"
 1325              		.file 32 "/usr/include/newlib/c++/9.2.1/cstdarg"
 1326              		.file 33 "/usr/include/newlib/c++/9.2.1/cstdio"
 1327              		.file 34 "/usr/include/newlib/c++/9.2.1/cwchar"
 1328              		.file 35 "/usr/include/newlib/c++/9.2.1/clocale"
 1329              		.file 36 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 1330              		.file 37 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 1331              		.file 38 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 1332              		.file 39 "/usr/include/newlib/c++/9.2.1/cstring"
 1333              		.file 40 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 1334              		.file 41 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 1335              		.file 42 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 1336              		.file 43 "/usr/include/newlib/sys/_types.h"
 1337              		.file 44 "<built-in>"
 1338              		.file 45 "/usr/include/newlib/sys/reent.h"
 1339              		.file 46 "/usr/include/newlib/sys/lock.h"
 1340              		.file 47 "/usr/include/newlib/math.h"
 1341              		.file 48 "/usr/include/newlib/stdlib.h"
 1342              		.file 49 "/usr/include/newlib/c++/9.2.1/math.h"
 1343              		.file 50 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1344              		.file 51 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1345              		.file 52 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1346              		.file 53 "../../libdaisy/src/daisy_core.h"
 1347              		.file 54 "../../libdaisy/src/per/tim.h"
 1348              		.file 55 "../../libdaisy/src/per/sai.h"
 1349              		.file 56 "../../libdaisy/src/util/wav_format.h"
 1350              		.file 57 "../../libdaisy/src/hid/led.h"
 1351              		.file 58 "../../libdaisy/src/util/color.h"
 1352              		.file 59 "../../libdaisy/src/hid/rgb_led.h"
 1353              		.file 60 "../../libdaisy/src/per/qspi.h"
 1354              		.file 61 "../../libdaisy/src/per/gpio.h"
 1355              		.file 62 "../../libdaisy/src/dev/sdram.h"
 1356              		.file 63 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 1357              		.file 64 "/usr/include/newlib/stdio.h"
 1358              		.file 65 "/usr/include/newlib/sys/unistd.h"
 1359              		.file 66 "../../libdaisy/src/util/oled_fonts.h"
 1360              		.file 67 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
ARM GAS  /tmp/ccR6ulVp.s 			page 44


 1361              		.file 68 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1362              		.file 69 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 1363              		.file 70 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1364              		.file 71 "../../libdaisy/src/util/sd_diskio.h"
 1365              		.file 72 "../../libdaisy/src/sys/fatfs.h"
 1366              		.file 73 "../../DaisySP/Source/Control/adenv.h"
 1367              		.file 74 "/usr/include/newlib/wchar.h"
 1368              		.file 75 "/usr/include/newlib/locale.h"
 1369              		.file 76 "/usr/include/newlib/ctype.h"
 1370              		.file 77 "/usr/include/newlib/sys/errno.h"
 1371              		.file 78 "/usr/include/newlib/string.h"
 1372              		.file 79 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/ccR6ulVp.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 flanger.cpp
     /tmp/ccR6ulVp.s:17     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 $t
     /tmp/ccR6ulVp.s:26     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 _ZN5daisy10DaisyPetalD2Ev
     /tmp/ccR6ulVp.s:26     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 _ZN5daisy10DaisyPetalD1Ev
     /tmp/ccR6ulVp.s:89     .text._ZN7daisysp7FlangerD2Ev:0000000000000000 $t
     /tmp/ccR6ulVp.s:97     .text._ZN7daisysp7FlangerD2Ev:0000000000000000 _ZN7daisysp7FlangerD2Ev
     /tmp/ccR6ulVp.s:97     .text._ZN7daisysp7FlangerD2Ev:0000000000000000 _ZN7daisysp7FlangerD1Ev
     /tmp/ccR6ulVp.s:120    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/ccR6ulVp.s:128    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/ccR6ulVp.s:548    .text._Z13AudioCallbackPKPKfPPfj:0000000000000178 $d
     /tmp/ccR6ulVp.s:564    .text.startup.main:0000000000000000 $t
     /tmp/ccR6ulVp.s:572    .text.startup.main:0000000000000000 main
     /tmp/ccR6ulVp.s:741    .text.startup.main:00000000000000bc $d
     /tmp/ccR6ulVp.s:756    .text.startup._GLOBAL__sub_I_flanger:0000000000000000 $t
     /tmp/ccR6ulVp.s:763    .text.startup._GLOBAL__sub_I_flanger:0000000000000000 _GLOBAL__sub_I_flanger
     /tmp/ccR6ulVp.s:971    .text.startup._GLOBAL__sub_I_flanger:0000000000000038 $d
     /tmp/ccR6ulVp.s:983    .init_array:0000000000000000 $d
     /tmp/ccR6ulVp.s:1286   .bss.lfo:0000000000000000 lfo
     /tmp/ccR6ulVp.s:1293   .bss.lfotarget:0000000000000000 lfotarget
     /tmp/ccR6ulVp.s:1258   .bss.del:0000000000000000 del
     /tmp/ccR6ulVp.s:1265   .bss.deltarget:0000000000000000 deltarget
     /tmp/ccR6ulVp.s:1300   .bss.wet:0000000000000000 wet
     /tmp/ccR6ulVp.s:1306   .data.effectOn:0000000000000000 effectOn
     /tmp/ccR6ulVp.s:1279   .bss.hw:0000000000000000 hw
     /tmp/ccR6ulVp.s:1272   .bss.flanger:0000000000000000 flanger
     /tmp/ccR6ulVp.s:994    .rodata:0000000000000000 $d
     /tmp/ccR6ulVp.s:1254   .bss.del:0000000000000000 $d
     /tmp/ccR6ulVp.s:1261   .bss.deltarget:0000000000000000 $d
     /tmp/ccR6ulVp.s:1268   .bss.flanger:0000000000000000 $d
     /tmp/ccR6ulVp.s:1275   .bss.hw:0000000000000000 $d
     /tmp/ccR6ulVp.s:1282   .bss.lfo:0000000000000000 $d
     /tmp/ccR6ulVp.s:1289   .bss.lfotarget:0000000000000000 $d
     /tmp/ccR6ulVp.s:1296   .bss.wet:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy10DaisyPetalD5Ev
                           .group:0000000000000000 _ZN7daisysp7FlangerD5Ev

UNDEFINED SYMBOLS
_ZN5daisy10DaisyPetal21ProcessAnalogControlsEv
_ZN5daisy10DaisyPetal22ProcessDigitalControlsEv
_ZN5daisy13AnalogControl7ProcessEv
_ZN7daisysp7Flanger11SetFeedbackEf
_ZN7daisysp7Flanger10SetLfoFreqEf
_ZN7daisysp7Flanger8SetDelayEf
_ZN7daisysp7Flanger11SetLfoDepthEf
_ZN7daisysp7Flanger7ProcessEf
_ZN5daisy10DaisyPetal4InitEb
_ZN5daisy10DaisyPetal15AudioSampleRateEv
_ZN7daisysp7Flanger4InitEf
_ZN5daisy10DaisyPetal8StartAdcEv
_ZN5daisy10DaisyPetal10StartAudioEPFvPKPKfPPfjE
_ZN5daisy10DaisyPetal7DelayMsEj
_ZN5daisy10DaisyPetal9ClearLedsEv
_ZN5daisy10DaisyPetal16SetFootswitchLedENS0_13FootswitchLedEf
_ZN5daisy10DaisyPetal10SetRingLedENS0_7RingLedEfff
_ZN5daisy10DaisyPetal10UpdateLedsEv
__aeabi_atexit
ARM GAS  /tmp/ccR6ulVp.s 			page 46


memcpy
__dso_handle
