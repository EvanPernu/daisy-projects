ARM GAS  /tmp/ccfXobHU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"theory.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG"
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:
  27              	.LVL0:
  28              	.LFB3899:
  29              		.file 1 "/usr/include/newlib/c++/9.2.1/bits/stl_vector.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *
ARM GAS  /tmp/ccfXobHU.s 			page 2


  30:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #include <initializer_list>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
  65:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  66:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #include <debug/assertions.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  68:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  69:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** extern "C" void
  70:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  71:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  const void*, const void*);
  72:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
  73:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  74:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  75:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** {
  76:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  77:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  78:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  79:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  80:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  81:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     struct _Vector_base
  82:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     {
  83:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  84:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  85:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  86:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        	pointer;
ARM GAS  /tmp/ccfXobHU.s 			page 3


  87:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  88:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       struct _Vector_impl_data
  89:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
  90:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	pointer _M_start;
  91:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	pointer _M_finish;
  92:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  96:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
  97:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
  98:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 100:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 103:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 104:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 105:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
 106:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 107:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
 108:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 109:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 110:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 111:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
 112:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 113:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
 114:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 115:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
 116:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 117:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  // information used by TBAA.
 118:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 119:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 120:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_copy_data(__x);
 121:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 122:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
 123:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       };
 124:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       struct _Vector_impl
 126:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 127:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 128:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 129:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 130:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type()
 131:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 132:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 134:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 135:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 136:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 139:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 141:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 142:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 143:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 4


 144:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 145:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 146:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 147:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 148:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 149:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 150:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 151:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 152:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 153:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 154:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 155:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  struct _Asan
 156:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
 157:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 158:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      ::size_type size_type;
 159:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 160:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 161:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 162:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 163:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 164:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 165:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    struct _Grow
 166:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
 167:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 168:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 169:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    };
 170:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  };
 171:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 172:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 173:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	template<typename _Up>
 174:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 175:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
 176:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 177:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      ::size_type size_type;
 178:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 180:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 181:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void
 182:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 183:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
 184:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 185:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 186:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    }
 187:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 188:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void
 189:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 190:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 191:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 192:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void
 193:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 194:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 195:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 196:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    static void
 197:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 198:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
 199:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      if (__impl._M_start)
 200:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
ARM GAS  /tmp/ccfXobHU.s 			page 5


 201:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    }
 202:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 203:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 204:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    struct _Reinit
 205:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
 206:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 207:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      {
 208:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 209:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 210:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      }
 211:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 212:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      ~_Reinit()
 213:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      {
 214:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 215:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		if (_M_impl._M_start)
 216:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 217:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    _M_impl._M_finish);
 218:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      }
 219:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 220:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 221:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 222:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 223:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 224:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 225:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 226:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    };
 227:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 228:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 229:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    struct _Grow
 230:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
 231:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 232:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 233:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 234:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 235:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 236:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 237:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 238:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 239:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 240:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 241:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 242:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 243:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    private:
 244:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 245:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      size_type _M_n;
 246:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    };
 247:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  };
 248:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 249:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 250:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 251:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 252:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 253:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 254:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 255:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 256:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 257:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
ARM GAS  /tmp/ccfXobHU.s 			page 6


 258:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 259:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 260:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 261:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 262:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 263:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 264:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 265:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 266:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 267:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       };
 268:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 269:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
 270:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 272:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Tp_alloc_type&
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 274:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const _Tp_alloc_type&
 277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 278:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 279:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 280:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       allocator_type
 281:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 282:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 283:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 285:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base() = default;
 286:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
 287:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base() { }
 288:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 289:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 291:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 292:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 293:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 294:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 295:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(size_t __n)
 296:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl()
 297:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 298:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 299:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 300:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 301:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 302:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 303:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 304:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 306:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 307:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 308:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 309:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 310:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 311:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 312:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 313:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 314:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 7


 315:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 316:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 317:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else
 318:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
 319:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 320:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _M_create_storage(__n);
 321:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  }
 322:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 323:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # endif
 324:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 325:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 326:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 327:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { }
 328:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 329:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 331:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 332:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 333:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 334:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 335:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 336:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
 337:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Vector_impl _M_impl;
 338:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 339:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       pointer
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_allocate(size_t __n)
 341:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 342:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 344:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 345:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 346:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 348:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 349:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__p)
 351:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 352:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 353:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 354:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     protected:
 355:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 356:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 357:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 358:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 359:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 360:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 361:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 362:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     };
 363:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 364:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   /**
 365:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 366:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  individual elements in any order.
 367:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *
 368:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  @ingroup sequences
 369:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *
 370:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 371:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
ARM GAS  /tmp/ccfXobHU.s 			page 8


 372:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *
 373:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 374:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 375:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 376:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 377:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 378:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *
 379:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 380:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 381:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 382:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 383:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 384:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   */
 385:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 386:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 387:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     {
 388:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 389:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Concept requirements.
 390:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 391:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # if __cplusplus < 201103L
 392:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 393:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # endif
 394:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 395:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 396:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 397:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 399:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 400:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # ifdef __STRICT_ANSI__
 401:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 402:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 403:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** # endif
 404:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 405:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 406:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 407:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 408:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 409:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 410:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
 411:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef _Tp					value_type;
 412:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 413:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 414:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 415:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 416:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 417:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 418:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_iterator;
 419:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 420:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 421:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef size_t					size_type;
 422:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 423:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 424:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 425:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     private:
 426:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 427:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static constexpr bool
 428:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
ARM GAS  /tmp/ccfXobHU.s 			page 9


 429:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 430:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 431:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 432:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 433:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 434:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 435:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 436:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static constexpr bool
 437:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 438:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return false; }
 439:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 440:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static constexpr bool
 441:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_use_relocate()
 442:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 443:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 444:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 445:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 446:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 447:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 448:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 449:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static pointer
 450:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 451:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 452:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 453:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 454:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 455:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 456:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static pointer
 457:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 458:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 459:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return __result; }
 460:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 461:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static pointer
 462:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 463:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 464:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 465:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 466:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 467:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 468:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif // C++11
 469:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 470:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     protected:
 471:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       using _Base::_M_allocate;
 472:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       using _Base::_M_deallocate;
 473:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       using _Base::_M_impl;
 474:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 475:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 476:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
 477:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 478:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 479:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 480:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 481:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 482:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 483:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 484:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector() = default;
 485:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
ARM GAS  /tmp/ccfXobHU.s 			page 10


 486:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector() { }
 487:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 488:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 489:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 490:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 491:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 492:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 493:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       explicit
 494:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 495:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__a) { }
 496:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 497:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 498:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 499:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 500:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 501:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 502:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 503:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 504:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  constructed elements.
 505:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 506:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       explicit
 507:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 508:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 509:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 510:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 511:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 512:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 513:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 514:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 515:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 516:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 517:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 518:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 519:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 520:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 521:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 522:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 523:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
 524:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 525:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 526:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 527:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 528:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 529:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 530:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 531:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 532:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       explicit
 533:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 534:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 535:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 536:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 537:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 538:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 539:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 540:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 541:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 542:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
ARM GAS  /tmp/ccfXobHU.s 			page 11


 543:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 544:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @a __x  will not be copied
 545:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 546:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 547:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 548:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 549:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 550:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(const vector& __x)
 551:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__x.size(),
 552:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 553:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 554:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 555:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 556:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 557:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 558:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 559:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 560:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 561:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 562:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 563:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 564:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 565:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  moved instance.
 566:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 567:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector.
 568:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 570:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 571:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 572:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 573:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 574:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 575:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 576:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 577:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 578:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 579:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 581:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     private:
 582:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 583:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 584:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { }
 585:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 586:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 587:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__m)
 588:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 589:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 590:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 591:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else if (!__rv.empty())
 592:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
 593:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 594:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 595:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 596:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 597:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 598:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    __rv.clear();
 599:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  }
ARM GAS  /tmp/ccfXobHU.s 			page 12


 600:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 601:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 602:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
 603:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 604:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 605:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       noexcept( noexcept(
 606:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 607:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 608:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 609:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { }
 610:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 612:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 613:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 614:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 615:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 616:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 617:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  initializer_list @a __l.
 618:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 619:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 620:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 621:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 623:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 624:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__a)
 625:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 627:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 628:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 629:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 630:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 631:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 632:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 633:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 634:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 635:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 636:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 637:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 638:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  [first,last).
 639:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 640:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 641:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 642:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 643:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 644:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 645:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 646:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 647:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 648:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator,
 649:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 650:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 651:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 652:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Base(__a)
 653:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
 654:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 655:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 656:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
ARM GAS  /tmp/ccfXobHU.s 			page 13


 657:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
 658:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
 659:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 660:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 661:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Base(__a)
 662:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
 663:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 664:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 665:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 666:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
 667:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 668:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 669:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 670:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 671:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 672:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 673:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  responsibility.
 674:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
  30              		.loc 1 675 7 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 675 7 is_stmt 0 view .LVU1
  35 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 3, -24
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43              	.LBB4911:
 676:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  44              		.loc 1 677 15 view .LVU2
  45 0002 D0E90056 		ldrd	r5, r6, [r0]
  46              	.LBE4911:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
  47              		.loc 1 675 7 view .LVU3
  48 0006 0746     		mov	r7, r0
  49              	.LVL1:
  50              	.LBB4952:
  51              	.LBB4912:
  52              	.LBI4912:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
  53              		.loc 1 273 7 is_stmt 1 view .LVU4
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
  54              		.loc 1 273 7 is_stmt 0 view .LVU5
  55              	.LBE4912:
  56              	.LBB4913:
  57              	.LBI4913:
  58              		.file 2 "/usr/include/newlib/c++/9.2.1/bits/stl_construct.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** //
ARM GAS  /tmp/ccfXobHU.s 			page 14


   5:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #include <new>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #include <bits/move.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #include <ext/alloc_traits.h>
ARM GAS  /tmp/ccfXobHU.s 			page 15


  62:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  63:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** {
  65:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  67:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   /**
  68:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    */
  71:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
  74:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #else
  77:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
  79:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
  81:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     }
  85:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #endif
  86:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  87:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _T1>
  88:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
  89:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
  92:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   /**
  93:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    */
  95:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _Tp>
  96:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
  97:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 100:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<bool>
 101:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     struct _Destroy_aux
 102:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 103:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         static void
 105:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	{
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	}
 110:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     };
 111:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 112:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<>
 113:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 115:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         static void
 117:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     };
ARM GAS  /tmp/ccfXobHU.s 			page 16


 119:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 120:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   /**
 121:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    */
 125:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _ForwardIterator>
 126:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
 127:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 129:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****                        _Value_type;
 131:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
 132:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 		    "value type is destructible");
 135:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #endif
 136:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     }
 139:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 140:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<bool>
 141:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 143:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         static _ForwardIterator
 145:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	{
 147:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	  return __first;
 150:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	}
 151:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     };
 152:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 153:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<>
 154:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 156:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         static _ForwardIterator
 158:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	{
 160:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	  return __first;
 162:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	}
 163:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     };
 164:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 165:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   /**
 166:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    */
 170:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline _ForwardIterator
 172:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 174:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****                        _Value_type;
ARM GAS  /tmp/ccfXobHU.s 			page 17


 176:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 		    "value type is destructible");
 180:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** #endif
 181:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	__destroy_n(__first, __count);
 183:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     }
 184:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 185:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   /**
 186:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****    */
 190:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 191:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     void
 193:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     {
 196:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     }
 200:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 
 201:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     inline void
 203:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
  59              		.loc 2 203 5 is_stmt 1 view .LVU6
  60              	.LBB4914:
  61              	.LBB4915:
  62              	.LBB4916:
  63              	.LBB4917:
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
  64              		.loc 2 107 19 view .LVU7
  65 0008 B542     		cmp	r5, r6
  66 000a 0DD0     		beq	.L2
  67 000c 05F10804 		add	r4, r5, #8
  68              	.LVL2:
  69              	.L4:
  70              	.LBB4918:
  71              	.LBI4918:
  97:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  72              		.loc 2 97 5 view .LVU8
  73              	.LBB4919:
  74              	.LBI4919:
  75              		.file 3 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
   1:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 18


  11:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** //
  31:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** //
  33:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  34:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  37:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  39:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  43:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
  46:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  47:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** # include <string_view>
  49:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
  50:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  52:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** {
  54:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
  59:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
  62:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
  65:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
ARM GAS  /tmp/ccfXobHU.s 			page 19


  68:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
  70:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
  76:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     class basic_string
  78:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
  79:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  83:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Types:
  84:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
  85:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     protected:
 104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
 112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static __sv_type
ARM GAS  /tmp/ccfXobHU.s 			page 20


 125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // is provided.
 132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
 137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       explicit
 145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
 165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       union
 172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
 176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
ARM GAS  /tmp/ccfXobHU.s 			page 21


 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       pointer
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_data() const
 187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       pointer
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_pointer
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       pointer
 226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 22


 239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
 243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
 254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
 263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         }
 268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
 272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
 279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       allocator_type&
 286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
 294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
ARM GAS  /tmp/ccfXobHU.s 			page 23


 296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __pos;
 317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
 337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
 349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 24


 353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static void
 376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
 378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
 396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static int
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
ARM GAS  /tmp/ccfXobHU.s 			page 25


 410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
 424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string()
 432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       explicit
 440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
ARM GAS  /tmp/ccfXobHU.s 			page 26


 467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   size_type __n)
 478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
ARM GAS  /tmp/ccfXobHU.s 			page 27


 524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        **/
 552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_length(__str.length());
 570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
ARM GAS  /tmp/ccfXobHU.s 			page 28


 581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
 612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccfXobHU.s 			page 29


 638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	explicit
 650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
 653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ~basic_string()
  76              		.loc 3 657 7 view .LVU9
  77              	.LBB4920:
  78              	.LBI4920:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
  79              		.loc 3 229 7 view .LVU10
  80              	.LBB4921:
  81              	.LBB4922:
  82              	.LBI4922:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
  83              		.loc 3 221 7 view .LVU11
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
  84              		.loc 3 221 7 is_stmt 0 view .LVU12
  85              	.LBE4922:
  86              	.LBB4924:
  87              	.LBI4924:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  88              		.loc 3 236 7 is_stmt 1 view .LVU13
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
  89              		.loc 3 236 7 is_stmt 0 view .LVU14
  90              	.LBE4924:
  91              	.LBB4932:
  92              	.LBB4923:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  93              		.loc 3 222 26 view .LVU15
  94 0010 54F8080C 		ldr	r0, [r4, #-8]
  95              	.LVL3:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
  96              		.loc 3 222 26 view .LVU16
  97              	.LBE4923:
  98              	.LBE4932:
  99              	.LBB4933:
 100              	.LBB4925:
 101              	.LBB4926:
 102              	.LBI4926:
 103              		.file 4 "/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h"
   1:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 30


   3:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  33:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  35:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  39:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  41:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** {
  43:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  45:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   {
  47:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  50:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  55:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   protected:
  56:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
ARM GAS  /tmp/ccfXobHU.s 			page 31


  60:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   };
  73:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  74:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  78:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   /**
  79:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   */
  82:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     {
  85:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  90:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
  91:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
  93:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
  95:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
  97:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     private:
  98:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{
 102:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	};
 104:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 105:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{
 108:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	};
 110:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 116:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
ARM GAS  /tmp/ccfXobHU.s 			page 32


 117:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 120:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 124:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 128:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     public:
 129:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 130:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 132:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 135:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 138:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 140:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 143:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 145:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 146:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 148:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 151:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 153:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 154:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 156:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 159:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 161:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 162:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 164:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 167:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 169:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 170:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 172:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
ARM GAS  /tmp/ccfXobHU.s 			page 33


 174:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 175:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 178:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 179:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 181:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 184:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 187:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 188:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 190:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 193:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 196:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 197:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 199:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 202:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 205:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 210:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     private:
 211:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static auto
 213:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 217:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 222:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{
 225:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 230:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  template<typename>
ARM GAS  /tmp/ccfXobHU.s 			page 34


 231:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 233:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	};
 235:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 236:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 240:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 246:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static
 248:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 255:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static auto
 257:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 262:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static void
 264:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 268:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static auto
 270:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 274:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static size_type
 276:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{
 278:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	}
 283:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static auto
 286:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
ARM GAS  /tmp/ccfXobHU.s 			page 35


 288:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 290:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static _Alloc2
 292:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ return __a; }
 294:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 295:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     public:
 296:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 297:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 298:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 302:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 304:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 308:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 309:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *          of type @c value_type
 315:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 316:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 319:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 323:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 324:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 329:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 331:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static void
 332:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 335:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 336:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 341:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  arguments @a __args...
ARM GAS  /tmp/ccfXobHU.s 			page 36


 345:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 346:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 353:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 354:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 358:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 361:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Tp>
 362:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 366:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 367:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 371:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 374:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 377:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 378:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 382:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 385:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static _Alloc
 386:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     };
 389:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 390:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****   template<typename _Tp>
 392:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****     {
 394:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator type
 395:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocated type
 397:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 399:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 37


 402:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 405:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 408:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 411:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 414:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// The allocator's size type
 415:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 417:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 420:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 423:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 426:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 429:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Up>
 430:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 432:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Up>
 433:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 435:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 436:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 440:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 442:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 446:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 447:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *          of type @c value_type
 453:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 454:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 456:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
ARM GAS  /tmp/ccfXobHU.s 			page 38


 459:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 460:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 461:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 466:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 468:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static void
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 104              		.loc 4 469 7 is_stmt 1 view .LVU17
 105              	.LBB4927:
 106              	.LBI4927:
 107              		.file 5 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
   1:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
   3:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** //
   5:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  11:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  16:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  20:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  25:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****  */
  28:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  29:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  32:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #include <new>
  34:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #endif
  39:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  40:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** {
  42:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /tmp/ccfXobHU.s 			page 39


  43:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  44:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  47:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****   /**
  48:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *
  51:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *
  55:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****    */
  57:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****     {
  60:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****     public:
  61:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  69:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  73:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #endif
  78:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  79:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  81:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  82:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  84:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  85:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       template<typename _Tp1>
  86:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  91:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       pointer
  92:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  95:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       const_pointer
  96:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
  99:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
ARM GAS  /tmp/ccfXobHU.s 			page 40


 100:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 104:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 107:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  {
 110:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  }
 113:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #endif
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 116:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 117:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       void
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 108              		.loc 5 119 7 view .LVU18
 109              		.loc 5 119 7 is_stmt 0 view .LVU19
 110              	.LBE4927:
 111              	.LBE4926:
 112              	.LBE4925:
 113              	.LBE4933:
 114              	.LBE4921:
 115              	.LBE4920:
 116              	.LBE4919:
 117              	.LBE4918:
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 118              		.loc 2 107 4 view .LVU20
 119 0014 1835     		adds	r5, r5, #24
 120              	.LVL4:
 121              	.LBB4941:
 122              	.LBB4940:
 123              	.LBB4936:
 124              	.LBB4935:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 125              		.loc 3 231 2 view .LVU21
 126 0016 A042     		cmp	r0, r4
 127 0018 04F11804 		add	r4, r4, #24
 128 001c 01D0     		beq	.L3
 129              	.LBB4934:
 130              	.LBB4931:
 131              	.LBB4930:
 132              	.LBB4929:
 133              	.LBB4928:
 120:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 121:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  {
 124:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	    return;
 126:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  }
 127:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #endif
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	::operator delete(__p);
ARM GAS  /tmp/ccfXobHU.s 			page 41


 134              		.loc 5 128 19 view .LVU22
 135 001e FFF7FEFF 		bl	_ZdlPv
 136              	.LVL5:
 137              	.L3:
 138              		.loc 5 128 19 view .LVU23
 139              	.LBE4928:
 140              	.LBE4929:
 141              	.LBE4930:
 142              	.LBE4931:
 143              	.LBE4934:
 144              	.LBE4935:
 145              	.LBE4936:
 146              	.LBB4937:
 147              	.LBI4937:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 148              		.loc 3 150 14 is_stmt 1 view .LVU24
 149              	.LBB4938:
 150              	.LBI4938:
 151              		.file 6 "/usr/include/newlib/c++/9.2.1/bits/allocator.h"
   1:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  *
  29:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  */
  37:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  38:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** /** @file bits/allocator.h
ARM GAS  /tmp/ccfXobHU.s 			page 42


  39:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****  */
  42:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  43:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  46:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #include <type_traits>
  50:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #endif
  51:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  52:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #endif
  56:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  57:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** {
  59:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  61:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****   /**
  62:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *  @{
  64:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    */
  65:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  66:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****   template<>
  68:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     class allocator<void>
  69:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     {
  70:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     public:
  71:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  77:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	struct rebind
  79:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  81:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  86:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  88:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	void
  90:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
  95:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       template<typename _Up>
ARM GAS  /tmp/ccfXobHU.s 			page 43


  96:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	void
  97:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	destroy(_Up* __p)
  98:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #endif
 101:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     };
 102:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 103:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****   /**
 104:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *
 106:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *  for further details.
 108:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *
 109:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    */
 111:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****   template<typename _Tp>
 112:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****     {
 114:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****    public:
 115:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef size_t     size_type;
 116:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef _Tp&       reference;
 120:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef _Tp        value_type;
 122:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 123:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       template<typename _Tp1>
 124:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	struct rebind
 125:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 127:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 132:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #endif
 134:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 135:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 139:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 140:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 142:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 144:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** #endif
 148:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 149:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       template<typename _Tp1>
 150:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 44


 153:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 152              		.loc 6 153 7 view .LVU25
 153              	.LBB4939:
 154              	.LBI4939:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 155              		.loc 5 89 7 view .LVU26
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 156              		.loc 5 89 7 is_stmt 0 view .LVU27
 157              	.LBE4939:
 158              	.LBE4938:
 159              	.LBE4937:
 160              	.LBE4940:
 161              	.LBE4941:
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 162              		.loc 2 107 4 is_stmt 1 view .LVU28
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 163              		.loc 2 107 19 view .LVU29
 164 0022 AE42     		cmp	r6, r5
 165 0024 F4D1     		bne	.L4
 166 0026 3E68     		ldr	r6, [r7]
 167              	.LVL6:
 168              	.L2:
 107:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 169              		.loc 2 107 19 is_stmt 0 view .LVU30
 170              	.LBE4917:
 171              	.LBE4916:
 172              	.LBE4915:
 173              	.LBE4914:
 174              	.LBE4913:
 175              	.LBB4942:
 176              	.LBI4942:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 177              		.loc 1 330 7 is_stmt 1 view .LVU31
 178              	.LBB4943:
 179              	.LBI4943:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 180              		.loc 1 347 7 view .LVU32
 181              	.LBB4944:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 182              		.loc 1 350 2 is_stmt 0 view .LVU33
 183 0028 16B1     		cbz	r6, .L5
 184              	.LVL7:
 185              	.LBB4945:
 186              	.LBI4945:
 187              		.loc 4 469 7 is_stmt 1 view .LVU34
 188              	.LBB4946:
 189              	.LBB4947:
 190              	.LBI4947:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 191              		.loc 5 119 7 view .LVU35
 192              	.LBB4948:
 193              		.loc 5 128 19 is_stmt 0 view .LVU36
 194 002a 3046     		mov	r0, r6
 195 002c FFF7FEFF 		bl	_ZdlPv
 196              	.LVL8:
 197              	.L5:
 198              		.loc 5 128 19 view .LVU37
ARM GAS  /tmp/ccfXobHU.s 			page 45


 199              	.LBE4948:
 200              	.LBE4947:
 201              	.LBE4946:
 202              	.LBE4945:
 203              	.LBE4944:
 204              	.LBE4943:
 205              	.LBB4949:
 206              	.LBI4949:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 207              		.loc 1 125 14 is_stmt 1 view .LVU38
 208              	.LBB4950:
 209              	.LBI4950:
 210              		.loc 6 153 7 view .LVU39
 211              	.LBB4951:
 212              	.LBI4951:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 213              		.loc 5 89 7 view .LVU40
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 214              		.loc 5 89 7 is_stmt 0 view .LVU41
 215              	.LBE4951:
 216              	.LBE4950:
 217              	.LBE4949:
 218              	.LBE4942:
 219              	.LBE4952:
 678:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 679:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 680:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 220              		.loc 1 680 7 view .LVU42
 221 0030 3846     		mov	r0, r7
 222 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 223              		.loc 1 680 7 view .LVU43
 224              		.cfi_endproc
 225              	.LFE3899:
 227              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 228              		.thumb_set _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev,_ZNSt6vec
 229              		.section	.text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0,"ax
 230              		.align	1
 231              		.p2align 2,,3
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 235              		.fpu fpv5-d16
 237              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0:
 238              	.LVL9:
 239              	.LFB3951:
 525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 240              		.loc 3 525 7 is_stmt 1 view -0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 244              		.loc 3 525 7 is_stmt 0 view .LVU45
 245 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 246              		.cfi_def_cfa_offset 20
 247              		.cfi_offset 4, -20
 248              		.cfi_offset 5, -16
 249              		.cfi_offset 6, -12
ARM GAS  /tmp/ccfXobHU.s 			page 46


 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 0446     		mov	r4, r0
 253              	.LVL10:
 254              	.LBB4993:
 255              	.LBI4993:
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 256              		.loc 3 190 7 is_stmt 1 view .LVU46
 257              	.LBB4994:
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 258              		.loc 3 193 51 is_stmt 0 view .LVU47
 259 0004 00F10807 		add	r7, r0, #8
 260              	.LVL11:
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 261              		.loc 3 193 51 view .LVU48
 262              	.LBE4994:
 263              	.LBE4993:
 264              	.LBB4995:
 265              	.LBI4995:
 156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 266              		.loc 3 156 2 is_stmt 1 view .LVU49
 267              	.LBB4996:
 268              	.LBB4997:
 269              	.LBI4997:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 270              		.loc 6 141 7 view .LVU50
 271              	.LBB4998:
 272              	.LBI4998:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 273              		.loc 5 83 7 view .LVU51
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 274              		.loc 5 83 7 is_stmt 0 view .LVU52
 275              	.LBE4998:
 276              	.LBE4997:
 277              	.LBE4996:
 278              	.LBE4995:
 525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 279              		.loc 3 525 7 view .LVU53
 280 0008 83B0     		sub	sp, sp, #12
 281              		.cfi_def_cfa_offset 32
 282              	.LBB5000:
 283              	.LBB5001:
 284              		.file 7 "/usr/include/newlib/c++/9.2.1/bits/char_traits.h"
   1:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // GNU General Public License for more details.
ARM GAS  /tmp/ccfXobHU.s 			page 47


  15:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** //
  31:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** //
  33:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  34:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  37:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  39:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  43:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
  46:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  47:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** {
  49:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /**
  52:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
  54:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
  64:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     };
  69:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  70:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  71:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /**
ARM GAS  /tmp/ccfXobHU.s 			page 48


  72:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
  74:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
  82:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    */
  86:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     struct char_traits
  88:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
  89:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  95:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 103:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 107:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 110:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       length(const char_type* __s);
 112:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 113:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 116:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static char_type*
 117:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 119:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static char_type*
 120:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 122:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static char_type*
 123:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 125:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 49


 129:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 133:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       eof()
 139:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 141:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     };
 145:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 146:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 147:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 151:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return -1;
 154:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 1;
 156:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return 0;
 157:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 158:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 159:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 164:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****         ++__i;
 167:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __i;
 168:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 169:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 170:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 175:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return 0;
 179:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 180:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 181:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
ARM GAS  /tmp/ccfXobHU.s 			page 50


 186:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return __s1;
 188:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 191:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 192:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 197:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __s1;
 200:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 201:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 202:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     char_traits<_CharT>::
 205:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 207:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __s;
 210:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 211:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 212:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** } // namespace
 214:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 215:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** {
 217:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 219:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 222:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /**
 223:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @param  __s  The string.
 226:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
 227:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    */
 229:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 233:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       (void) __s;
 235:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #else
 238:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	__s++;
 240:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 242:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
ARM GAS  /tmp/ccfXobHU.s 			page 51


 243:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 244:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /**
 245:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
 250:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    */
 252:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<typename _CharT>
 253:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 256:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       (void) __a;
 258:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       (void) __n;
 259:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #else
 262:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	__i++;
 265:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 267:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     }
 268:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 269:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 270:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   // 21.1
 271:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /**
 272:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
 274:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *
 279:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   */
 283:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<class _CharT>
 284:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     { };
 286:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 287:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 288:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****   template<>
 290:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****     {
 292:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 298:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 52


 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 302:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 306:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 309:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	// LWG 467.
 310:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 313:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 314:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__n == 0)
 318:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 319:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 327:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 328:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 331:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 335:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 285              		.loc 7 335 25 view .LVU54
 286 000a 0846     		mov	r0, r1
 287              	.LVL12:
 288              		.loc 7 335 25 view .LVU55
 289              	.LBE5001:
 290              	.LBE5000:
 291              	.LBB5005:
 292              	.LBB4999:
 157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 293              		.loc 3 157 35 view .LVU56
 294 000c 2760     		str	r7, [r4]
 295              	.LVL13:
 157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 296              		.loc 3 157 35 view .LVU57
 297              	.LBE4999:
 298              	.LBE5005:
 299              	.LBB5006:
 300              	.LBI5000:
 329:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 301              		.loc 7 329 7 is_stmt 1 view .LVU58
 302              	.LBB5002:
ARM GAS  /tmp/ccfXobHU.s 			page 53


 303              		.loc 7 335 2 view .LVU59
 304              	.LBE5002:
 305              	.LBE5006:
 525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 306              		.loc 3 525 7 is_stmt 0 view .LVU60
 307 000e 0E46     		mov	r6, r1
 308              	.LBB5007:
 309              	.LBB5003:
 310              		.loc 7 335 25 view .LVU61
 311 0010 FFF7FEFF 		bl	strlen
 312              	.LVL14:
 313              		.loc 7 335 25 view .LVU62
 314              	.LBE5003:
 315              	.LBE5007:
 316              	.LBB5008:
 317              	.LBB5009:
 318              	.LBB5010:
 319              	.LBB5011:
 320              	.LBB5012:
 321              	.LBB5013:
 322              		.file 8 "/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc"
   1:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
   3:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** //
   5:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  11:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  16:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  20:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  25:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  30:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** //
  31:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** //
  33:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  34:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
ARM GAS  /tmp/ccfXobHU.s 			page 54


  37:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  39:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  42:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  44:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  46:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** {
  48:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  50:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  52:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  56:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     void
  58:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     {
  61:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	return;
  63:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  64:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
  66:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       if (_M_is_local())
  67:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
  69:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      {
  71:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      }
  79:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      {
  81:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		return;
  86:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      }
  87:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    else if (length())
  88:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      {
  89:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		return;
ARM GAS  /tmp/ccfXobHU.s 			page 55


  94:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      }
  95:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
  96:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	else
  97:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
  98:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 105:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       else
 106:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	{
 107:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    {
 110:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    }
 115:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  else
 116:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    {
 117:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    }
 122:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	}
 124:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 125:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     }
 129:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 130:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     {
 135:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 140:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	{
 145:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	}
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccfXobHU.s 			page 56


 151:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       // null char_type() element.
 153:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     }
 155:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 156:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       void
 163:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       {
 167:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 170:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 172:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    ++__beg;
 174:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 175:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 176:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	__try
 177:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 178:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      {
 180:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		  {
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    _M_dispose();
 187:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		  }
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		++__beg;
 192:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	      }
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 194:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	__catch(...)
 195:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 196:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_dispose();
 197:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 199:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       }
 202:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 203:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       void
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
ARM GAS  /tmp/ccfXobHU.s 			page 57


 208:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       {
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 215:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 217:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 323              		.loc 8 217 2 view .LVU63
 324 0014 0F28     		cmp	r0, #15
 325              	.LBE5013:
 326              	.LBE5012:
 327              	.LBE5011:
 328              	.LBE5010:
 329              	.LBE5009:
 330              	.LBE5008:
 331              	.LBB5070:
 332              	.LBB5004:
 333              		.loc 7 335 25 view .LVU64
 334 0016 0546     		mov	r5, r0
 335              	.LVL15:
 336              		.loc 7 335 25 view .LVU65
 337              	.LBE5004:
 338              	.LBE5070:
 339              	.LBB5071:
 340              	.LBI5008:
 263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 341              		.loc 3 263 9 is_stmt 1 view .LVU66
 342              	.LBB5067:
 343              	.LBB5064:
 344              	.LBI5010:
 243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 std::__false_type)
 345              		.loc 3 243 9 view .LVU67
 346              	.LBB5061:
 347              	.LBB5058:
 348              	.LBI5012:
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 349              		.loc 8 206 7 view .LVU68
 350              	.LBB5055:
 215:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 351              		.loc 8 215 12 is_stmt 0 view .LVU69
 352 0018 0190     		str	r0, [sp, #4]
 353              		.loc 8 217 2 view .LVU70
 354 001a 0ED8     		bhi	.L21
 355              	.LVL16:
 356              	.LBB5014:
 357              	.LBI5014:
 396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 358              		.loc 3 396 7 is_stmt 1 view .LVU71
 359              	.LBB5015:
 360              	.LBI5015:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 361              		.loc 3 346 7 view .LVU72
 362              	.LBB5016:
 348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
ARM GAS  /tmp/ccfXobHU.s 			page 58


 363              		.loc 3 348 2 is_stmt 0 view .LVU73
 364 001c 0128     		cmp	r0, #1
 365 001e 09D1     		bne	.L15
 349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 366              		.loc 3 349 23 view .LVU74
 367 0020 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 368              	.LVL17:
 369              	.LBB5017:
 370              	.LBI5017:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 371              		.loc 7 299 7 is_stmt 1 view .LVU75
 372              	.LBB5018:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 373              		.loc 7 300 9 view .LVU76
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 374              		.loc 7 300 14 is_stmt 0 view .LVU77
 375 0022 2372     		strb	r3, [r4, #8]
 376              	.LVL18:
 377              	.L16:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 378              		.loc 7 300 14 view .LVU78
 379              	.LBE5018:
 380              	.LBE5017:
 381              	.LBE5016:
 382              	.LBE5015:
 383              	.LBE5014:
 218:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 223:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	__try
 225:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	__catch(...)
 227:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 228:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_dispose();
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  }
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 232:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 384              		.loc 8 232 2 view .LVU79
 385 0024 019B     		ldr	r3, [sp, #4]
 386              	.LVL19:
 387              	.LBB5034:
 388              	.LBI5034:
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 389              		.loc 3 214 7 is_stmt 1 view .LVU80
 390              	.LBB5035:
 391              	.LBB5036:
 392              	.LBI5036:
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 393              		.loc 3 182 7 view .LVU81
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 394              		.loc 3 182 7 is_stmt 0 view .LVU82
 395              	.LBE5036:
 396              	.LBB5038:
ARM GAS  /tmp/ccfXobHU.s 			page 59


 397              	.LBB5039:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 398              		.loc 7 300 14 view .LVU83
 399 0026 0021     		movs	r1, #0
 400 0028 2268     		ldr	r2, [r4]
 401              	.LBE5039:
 402              	.LBE5038:
 403              	.LBE5035:
 404              	.LBE5034:
 405              	.LBE5055:
 406              	.LBE5058:
 407              	.LBE5061:
 408              	.LBE5064:
 409              	.LBE5067:
 410              	.LBE5071:
 527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 411              		.loc 3 527 77 view .LVU84
 412 002a 2046     		mov	r0, r4
 413              	.LBB5072:
 414              	.LBB5068:
 415              	.LBB5065:
 416              	.LBB5062:
 417              	.LBB5059:
 418              	.LBB5056:
 419              	.LBB5044:
 420              	.LBB5043:
 421              	.LBB5041:
 422              	.LBB5037:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 423              		.loc 3 183 9 view .LVU85
 424 002c 6360     		str	r3, [r4, #4]
 425              	.LVL20:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 426              		.loc 3 183 9 view .LVU86
 427              	.LBE5037:
 428              	.LBE5041:
 429              	.LBB5042:
 430              	.LBI5038:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 431              		.loc 7 299 7 is_stmt 1 view .LVU87
 432              	.LBB5040:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 433              		.loc 7 300 9 view .LVU88
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 434              		.loc 7 300 14 is_stmt 0 view .LVU89
 435 002e D154     		strb	r1, [r2, r3]
 436              	.LVL21:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 437              		.loc 7 300 14 view .LVU90
 438              	.LBE5040:
 439              	.LBE5042:
 440              	.LBE5043:
 441              	.LBE5044:
 442              	.LBE5056:
 443              	.LBE5059:
 444              	.LBE5062:
 445              	.LBE5065:
ARM GAS  /tmp/ccfXobHU.s 			page 60


 446              	.LBE5068:
 447              	.LBE5072:
 527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 448              		.loc 3 527 77 view .LVU91
 449 0030 03B0     		add	sp, sp, #12
 450              		.cfi_remember_state
 451              		.cfi_def_cfa_offset 20
 452              		@ sp needed
 453 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 454              	.LVL22:
 455              	.L15:
 456              		.cfi_restore_state
 457              	.LBB5073:
 458              	.LBB5069:
 459              	.LBB5066:
 460              	.LBB5063:
 461              	.LBB5060:
 462              	.LBB5057:
 463              	.LBB5045:
 464              	.LBB5031:
 465              	.LBB5028:
 466              	.LBB5019:
 467              	.LBI5019:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 468              		.loc 3 346 7 is_stmt 1 view .LVU92
 469              	.LBB5020:
 470              	.LBI5020:
 336:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 337:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 338:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 341:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__n == 0)
 342:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 343:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** #endif
 349:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 351:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 352:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static char_type*
 353:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 355:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__n == 0)
 356:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __s1;
 357:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 359:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 360:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       static char_type*
 361:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 471              		.loc 7 361 7 view .LVU93
 472              	.LBB5021:
 362:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 363:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	if (__n == 0)
ARM GAS  /tmp/ccfXobHU.s 			page 61


 473              		.loc 7 363 2 view .LVU94
 474 0034 0028     		cmp	r0, #0
 475 0036 F5D0     		beq	.L16
 476 0038 08E0     		b	.L14
 477              	.LVL23:
 478              	.L21:
 479              		.loc 7 363 2 is_stmt 0 view .LVU95
 480              	.LBE5021:
 481              	.LBE5020:
 482              	.LBE5019:
 483              	.LBE5028:
 484              	.LBE5031:
 485              	.LBE5045:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 486              		.loc 8 219 6 view .LVU96
 487 003a 0022     		movs	r2, #0
 488 003c 01A9     		add	r1, sp, #4
 489 003e 2046     		mov	r0, r4
 490              	.LVL24:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 491              		.loc 8 219 6 view .LVU97
 492 0040 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 493              	.LVL25:
 494              	.LBB5046:
 495              	.LBB5047:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 496              		.loc 3 211 9 view .LVU98
 497 0044 019B     		ldr	r3, [sp, #4]
 498              	.LBE5047:
 499              	.LBE5046:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 500              		.loc 8 219 6 view .LVU99
 501 0046 0746     		mov	r7, r0
 502              	.LVL26:
 503              	.LBB5049:
 504              	.LBI5049:
 178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 505              		.loc 3 178 7 is_stmt 1 view .LVU100
 506              	.LBB5050:
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 507              		.loc 3 179 9 is_stmt 0 view .LVU101
 508 0048 2060     		str	r0, [r4]
 509              	.LVL27:
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 510              		.loc 3 179 9 view .LVU102
 511              	.LBE5050:
 512              	.LBE5049:
 513              	.LBB5051:
 514              	.LBI5046:
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 515              		.loc 3 210 7 is_stmt 1 view .LVU103
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 516              		.loc 3 210 7 is_stmt 0 view .LVU104
 517              	.LBE5051:
 518              	.LBB5052:
 396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 519              		.loc 3 396 7 is_stmt 1 view .LVU105
ARM GAS  /tmp/ccfXobHU.s 			page 62


 520              	.LBB5032:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 521              		.loc 3 346 7 view .LVU106
 522              	.LBB5029:
 523              	.LBB5026:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 524              		.loc 3 346 7 view .LVU107
 525              	.LBB5024:
 361:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 526              		.loc 7 361 7 view .LVU108
 527              	.LBB5022:
 528              		.loc 7 363 2 view .LVU109
 529              	.LBE5022:
 530              	.LBE5024:
 531              	.LBE5026:
 532              	.LBE5029:
 533              	.LBE5032:
 534              	.LBE5052:
 535              	.LBB5053:
 536              	.LBB5048:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 537              		.loc 3 211 9 is_stmt 0 view .LVU110
 538 004a A360     		str	r3, [r4, #8]
 539              	.LVL28:
 540              	.L14:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 541              		.loc 3 211 9 view .LVU111
 542              	.LBE5048:
 543              	.LBE5053:
 544              	.LBB5054:
 545              	.LBB5033:
 546              	.LBB5030:
 547              	.LBB5027:
 548              	.LBB5025:
 549              	.LBB5023:
 364:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __s1;
 365:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 550              		.loc 7 365 2 is_stmt 1 view .LVU112
 551              		.loc 7 365 49 is_stmt 0 view .LVU113
 552 004c 2A46     		mov	r2, r5
 553 004e 3146     		mov	r1, r6
 554 0050 3846     		mov	r0, r7
 555 0052 FFF7FEFF 		bl	memcpy
 556              	.LVL29:
 557              		.loc 7 365 66 view .LVU114
 558 0056 E5E7     		b	.L16
 559              	.LBE5023:
 560              	.LBE5025:
 561              	.LBE5027:
 562              	.LBE5030:
 563              	.LBE5033:
 564              	.LBE5054:
 565              	.LBE5057:
 566              	.LBE5060:
 567              	.LBE5063:
 568              	.LBE5066:
 569              	.LBE5069:
ARM GAS  /tmp/ccfXobHU.s 			page 63


 570              	.LBE5073:
 571              		.cfi_endproc
 572              	.LFE3951:
 574              		.section	.rodata._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isr
 575              		.align	2
 576              	.LC7:
 577 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
 577      6F742063 
 577      72656174 
 577      65207374 
 577      643A3A76 
 578              		.section	.text._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.
 579              		.align	1
 580              		.p2align 2,,3
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu fpv5-d16
 586              	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0:
 587              	.LVL30:
 588              	.LFB4032:
 681:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 682:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 683:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 684:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 685:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 686:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 687:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @a __x will not be copied.
 688:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 689:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 690:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 691:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector&
 692:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       operator=(const vector& __x);
 693:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 694:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 695:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 696:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 697:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 698:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 699:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 700:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  if the allocators permit it).
 701:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 702:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 703:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 704:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 705:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector&
 706:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 707:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 708:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	constexpr bool __move_storage =
 709:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 710:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 711:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 712:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *this;
 713:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 714:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 715:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 716:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
ARM GAS  /tmp/ccfXobHU.s 			page 64


 717:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 718:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 719:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 720:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  initializer list @a __l.
 721:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 722:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 723:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 724:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  of elements assigned.
 725:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 726:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       vector&
 727:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 728:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 729:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 730:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 731:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *this;
 732:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 733:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 734:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 735:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 736:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 737:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 738:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 739:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 740:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 741:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 742:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 743:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the number of elements assigned.
 744:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 745:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 746:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 747:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 748:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 749:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 750:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 751:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 752:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 753:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 754:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 755:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  range [__first,__last).
 756:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 757:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 758:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 759:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  of elements assigned.
 760:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 761:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 762:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator,
 763:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 764:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
 765:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 766:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 767:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
 768:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
 769:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
 770:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 771:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
 772:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 773:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
ARM GAS  /tmp/ccfXobHU.s 			page 65


 774:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 775:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
 776:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 777:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 778:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 779:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 780:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 781:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 782:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 783:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 784:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  initializer list @a __l.
 785:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 786:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 787:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 788:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  of elements assigned.
 789:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 790:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 791:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 792:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 793:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 794:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 795:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 796:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 797:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 798:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 799:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       using _Base::get_allocator;
 800:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 801:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // iterators
 802:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 803:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 804:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 805:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element order.
 806:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 807:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
 808:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 809:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 810:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 811:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 812:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 813:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 814:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element order.
 815:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 816:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_iterator
 817:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 818:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 819:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 820:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 821:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 822:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 823:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element order.
 824:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 825:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
 826:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 827:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 828:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 829:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 830:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
ARM GAS  /tmp/ccfXobHU.s 			page 66


 831:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 832:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  ordinary element order.
 833:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 834:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_iterator
 835:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 836:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 837:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 838:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 839:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 840:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 841:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element order.
 842:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 843:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reverse_iterator
 844:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 845:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 846:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 847:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 848:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 849:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 850:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  reverse element order.
 851:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 852:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reverse_iterator
 853:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 854:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 855:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 856:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 857:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 858:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 859:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  in reverse element order.
 860:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 861:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reverse_iterator
 862:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 863:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 864:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 865:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 866:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 867:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 868:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  is done in reverse element order.
 869:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 870:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reverse_iterator
 871:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 872:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 873:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 874:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 875:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 876:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 877:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 878:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element order.
 879:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 880:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_iterator
 881:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       cbegin() const noexcept
 882:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 883:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 884:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 885:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 886:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 887:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  ordinary element order.
ARM GAS  /tmp/ccfXobHU.s 			page 67


 888:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 889:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_iterator
 890:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       cend() const noexcept
 891:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 892:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 893:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 894:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 895:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 896:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  reverse element order.
 897:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 898:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reverse_iterator
 899:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       crbegin() const noexcept
 900:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 901:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 902:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 903:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 904:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 905:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  is done in reverse element order.
 906:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 907:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reverse_iterator
 908:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       crend() const noexcept
 909:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 910:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 911:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 912:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // [23.2.4.2] capacity
 913:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 914:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       size_type
 915:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 916:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 917:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 918:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 919:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       size_type
 920:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 921:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 922:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 923:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 924:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 925:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 926:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 927:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 928:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 929:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 930:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 931:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  default constructed elements are appended.
 932:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 933:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 934:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       resize(size_type __new_size)
 935:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 936:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 937:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 938:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 939:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 940:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 941:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 942:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 943:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 944:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
ARM GAS  /tmp/ccfXobHU.s 			page 68


 945:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 946:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 947:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 948:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 949:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 950:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 951:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  given data.
 952:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 953:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 954:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 955:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 956:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 957:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 958:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 959:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 960:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 961:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
 962:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 963:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 964:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 965:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 966:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
 967:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 968:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 969:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 970:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 971:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  given data.
 972:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 973:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 974:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 975:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 976:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__new_size > size())
 977:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 978:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else if (__new_size < size())
 979:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 980:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 981:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 982:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 983:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 984:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 985:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
 986:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       shrink_to_fit()
 987:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 988:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 989:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 990:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
 991:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 992:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 993:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
 994:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       size_type
 995:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 996:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 997:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 998:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 999:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1000:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1001:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  equal end().)
ARM GAS  /tmp/ccfXobHU.s 			page 69


1002:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1003:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _GLIBCXX_NODISCARD bool
1004:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1005:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return begin() == end(); }
1006:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1007:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1008:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1009:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *          elements.
1010:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
1011:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1012:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1013:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
1014:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1015:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
1016:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  thrown.
1017:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1018:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1019:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
1020:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
1021:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1022:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  and copying of %vector data.
1023:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1024:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1025:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reserve(size_type __n);
1026:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1027:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // element access
1028:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1029:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1030:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1031:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  accessed.
1032:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1033:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1034:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1035:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1036:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1037:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  see at().)
1038:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1039:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reference
1040:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1041:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1042:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1043:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1044:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1045:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1046:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1047:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1048:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1049:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  accessed.
1050:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1051:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1052:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1053:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1054:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1055:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  see at().)
1056:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1057:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reference
1058:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 70


1059:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1060:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1061:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1062:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1063:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1064:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     protected:
1065:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /// Safety check used only from at().
1066:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1067:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_range_check(size_type __n) const
1068:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1069:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__n >= this->size())
1070:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1071:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
1072:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				       "(which is %zu)"),
1073:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				   __n, this->size());
1074:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1075:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1076:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     public:
1077:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1078:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1079:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1080:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  accessed.
1081:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1082:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1083:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1084:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1085:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1086:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1087:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1088:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reference
1089:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       at(size_type __n)
1090:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1091:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_check(__n);
1092:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return (*this)[__n];
1093:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1094:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1095:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1096:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1097:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1098:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  accessed.
1099:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1100:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1103:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1104:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1105:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1106:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reference
1107:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       at(size_type __n) const
1108:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1109:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_check(__n);
1110:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return (*this)[__n];
1111:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1112:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1113:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1114:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
1115:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element of the %vector.
ARM GAS  /tmp/ccfXobHU.s 			page 71


1116:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1117:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reference
1118:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1119:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1120:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1121:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *begin();
1122:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1123:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1124:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1126:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element of the %vector.
1127:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1128:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reference
1129:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1130:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1131:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1132:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *begin();
1133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1134:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1135:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1136:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
1137:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element of the %vector.
1138:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1139:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       reference
1140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1141:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1142:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1143:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *(end() - 1);
1144:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1145:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1146:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1147:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1148:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  last element of the %vector.
1149:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1150:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const_reference
1151:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1152:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1153:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1154:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return *(end() - 1);
1155:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1156:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1157:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1158:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1159:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // data access
1160:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1161:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1162:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1163:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1164:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _Tp*
1165:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1166:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1167:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1168:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       const _Tp*
1169:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1170:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1171:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1172:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // [23.2.4.3] modifiers
ARM GAS  /tmp/ccfXobHU.s 			page 72


1173:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1174:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1175:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be added.
1176:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1177:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1178:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1179:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1180:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1181:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  available.
1182:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1183:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1184:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       push_back(const value_type& __x)
1185:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1186:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1187:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
1188:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1189:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1190:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				     __x);
1191:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
1192:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1193:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  }
1194:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	else
1195:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1196:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1197:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1198:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1199:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1200:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       push_back(value_type&& __x)
1201:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
1202:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1203:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename... _Args>
1204:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus > 201402L
1205:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	reference
1206:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1207:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1208:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1209:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	emplace_back(_Args&&... __args);
1210:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1211:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1212:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1213:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Removes last element.
1214:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1215:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1216:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1217:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
1218:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1219:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  called.
1220:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1221:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1222:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1223:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1224:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1225:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
1226:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1227:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1228:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1229:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 73


1230:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1231:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1232:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1233:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1234:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __args  Arguments.
1235:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1236:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1237:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
1238:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1239:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1240:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
1241:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  std::list.
1242:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1243:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename... _Args>
1244:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	iterator
1245:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1246:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1247:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1248:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1249:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1250:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1251:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1252:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1253:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1254:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1255:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1256:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1257:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1258:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1259:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1260:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1261:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1262:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1263:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1264:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1265:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1266:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1267:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1268:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1269:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1270:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1271:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1272:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1274:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1275:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1276:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1278:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1279:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1280:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1281:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1282:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1283:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1284:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1285:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1286:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
ARM GAS  /tmp/ccfXobHU.s 			page 74


1287:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1288:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1289:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1291:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1292:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1293:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1294:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1295:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1296:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1297:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1298:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the
1299:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1300:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  specified by @a position.
1301:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1302:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1303:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1304:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  consider using std::list.
1305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1306:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1307:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1308:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1309:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	auto __offset = __position - cbegin();
1310:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1311:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			std::random_access_iterator_tag());
1312:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return begin() + __offset;
1313:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1314:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1315:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1316:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1317:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1318:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1319:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1320:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1321:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1322:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1323:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1324:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1325:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1326:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1327:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1328:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1329:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  consider using std::list.
1330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1331:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1332:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1333:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1334:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1335:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1336:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return begin() + __offset;
1337:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1338:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1339:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1341:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1342:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
ARM GAS  /tmp/ccfXobHU.s 			page 75


1344:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1345:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1346:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1348:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1349:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  consider using std::list.
1351:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1352:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1353:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1354:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1355:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1356:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1357:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1358:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1359:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1360:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1361:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1362:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1363:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1364:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1365:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1366:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1367:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  by @a pos.
1368:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1369:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1370:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1371:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  consider using std::list.
1372:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1373:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator,
1374:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1375:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	iterator
1376:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1377:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       _InputIterator __last)
1378:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1379:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1380:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1381:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			     __first, __last, __false_type());
1382:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  return begin() + __offset;
1383:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1384:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1385:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1386:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1387:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1388:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1389:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1390:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1391:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1392:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1393:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  by @a pos.
1394:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1395:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1396:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1397:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  consider using std::list.
1398:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1399:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1400:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
ARM GAS  /tmp/ccfXobHU.s 			page 76


1401:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1402:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	       _InputIterator __last)
1403:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1404:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1405:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1406:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1407:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1408:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1409:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1410:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1411:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1412:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1413:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1414:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1415:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1416:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  shorten the %vector by one.
1417:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1418:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1419:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1420:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1421:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1422:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1423:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1424:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1425:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1426:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1427:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       erase(const_iterator __position)
1428:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1429:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1430:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       erase(iterator __position)
1431:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_erase(__position); }
1432:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1433:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1434:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1435:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1436:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1437:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1438:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *                  erased.
1439:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1440:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *           prior to erasing (or end()).
1441:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1442:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This function will erase the elements in the range
1443:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1444:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1445:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1446:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1447:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1448:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1449:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1450:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1451:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1452:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1453:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1454:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1455:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1456:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	const auto __beg = begin();
1457:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
ARM GAS  /tmp/ccfXobHU.s 			page 77


1458:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1459:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1460:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1461:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1462:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1463:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1464:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1465:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1466:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1467:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1468:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1469:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1470:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1471:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1472:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1473:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *
1474:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1475:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1476:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1477:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1478:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1479:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1480:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1481:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1482:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1483:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1484:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1485:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				  __x._M_get_Tp_allocator());
1486:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1487:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1488:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1489:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1490:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1491:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1492:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  the user's responsibility.
1493:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1494:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1495:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1496:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1497:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1498:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****     protected:
1499:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       /**
1500:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1501:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1502:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****        */
1503:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1504:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	pointer
1505:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1506:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1507:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1508:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1509:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __try
1510:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
1511:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1512:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1513:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      return __result;
1514:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    }
ARM GAS  /tmp/ccfXobHU.s 			page 78


1515:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __catch(...)
1516:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    {
1517:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1518:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      __throw_exception_again;
1519:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    }
1520:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1521:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1522:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1523:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Internal constructor functions follow.
1524:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1525:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1526:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1527:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1528:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1529:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1530:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _Integer>
1531:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1532:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1533:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1534:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1535:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1536:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1537:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1538:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1539:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1540:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1541:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1542:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1543:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1544:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1545:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			       __false_type)
1546:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1547:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
1548:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
1549:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1550:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1551:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1552:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1553:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1554:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1555:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1556:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    std::input_iterator_tag)
1557:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1558:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __try {
1559:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    for (; __first != __last; ++__first)
1560:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1561:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      emplace_back(*__first);
1562:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1563:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	      push_back(*__first);
1564:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1565:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  } __catch(...) {
1566:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    clear();
1567:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    __throw_exception_again;
1568:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  }
1569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1570:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1571:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
ARM GAS  /tmp/ccfXobHU.s 			page 79


1572:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1573:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1574:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 589              		.loc 1 1574 2 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LBB5098:
 594              	.LBI5098:
 595              		.file 9 "/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
ARM GAS  /tmp/ccfXobHU.s 			page 80


  48:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  77:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     {
  83:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  86:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	{
  89:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	}
  92:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
  94:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
  95:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     {
 101:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****       return __last - __first;
ARM GAS  /tmp/ccfXobHU.s 			page 81


 105:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 106:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
 107:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
 115:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** #endif
 121:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h **** 
 122:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   /**
 123:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *
 128:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *
 132:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   */
 135:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 596              		.loc 9 138 5 view .LVU116
 597              	.LBB5099:
 598              	.LBI5099:
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 599              		.loc 9 98 5 view .LVU117
 600              	.LBE5099:
 601              	.LBE5098:
 602              		.loc 1 1574 2 is_stmt 0 view .LVU118
 603 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 604              		.cfi_def_cfa_offset 24
 605              		.cfi_offset 4, -24
 606              		.cfi_offset 5, -20
 607              		.cfi_offset 6, -16
 608              		.cfi_offset 7, -12
 609              		.cfi_offset 8, -8
 610              		.cfi_offset 14, -4
 611              	.LBB5102:
 612              	.LBB5101:
 613              	.LBB5100:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 614              		.loc 9 104 21 view .LVU119
 615 0004 561A     		subs	r6, r2, r1
 616              	.LVL31:
ARM GAS  /tmp/ccfXobHU.s 			page 82


 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 617              		.loc 9 104 21 view .LVU120
 618              	.LBE5100:
 619              	.LBE5101:
 620              	.LBE5102:
 621              	.LBB5103:
 622              	.LBI5103:
1575:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
1576:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1577:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1578:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_start
1579:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1581:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1582:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1583:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					this->_M_impl._M_start,
1584:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1585:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1586:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1587:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1588:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1589:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1590:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1591:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1592:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1593:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1594:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1595:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1596:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1597:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1598:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1599:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1600:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1601:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1602:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1603:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1604:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 					   _M_get_Tp_allocator());
1605:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1606:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1607:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1608:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1609:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // assignment work for the range versions.
1610:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1611:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1612:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1613:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1614:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1615:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _Integer>
1616:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1617:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1618:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1619:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1620:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1621:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1623:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1624:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			   __false_type)
ARM GAS  /tmp/ccfXobHU.s 			page 83


1625:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1627:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1628:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1629:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1630:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1631:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      std::input_iterator_tag);
1632:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1633:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1634:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1635:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1636:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1637:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      std::forward_iterator_tag);
1638:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1639:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1640:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // to be the same thing.
1641:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1642:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1643:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1644:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Internal insert functions follow.
1645:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1646:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1647:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1648:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1649:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1650:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _Integer>
1651:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1652:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1653:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			   __true_type)
1654:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1655:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1656:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1657:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1658:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1659:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1660:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			   _InputIterator __last, __false_type)
1661:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{
1662:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1663:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			  std::__iterator_category(__first));
1664:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	}
1665:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1666:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1667:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _InputIterator>
1668:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1669:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1670:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1671:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1672:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1673:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1674:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1676:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1678:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1679:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // the same thing.
1680:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1681:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
ARM GAS  /tmp/ccfXobHU.s 			page 84


1682:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1683:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1684:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by resize(n).
1685:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1686:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_default_append(size_type __n);
1687:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1688:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       bool
1689:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_shrink_to_fit();
1690:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1691:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1692:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1693:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by insert(p,x)
1694:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1695:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1696:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1697:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       void
1698:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1699:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #else
1700:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1701:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1702:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       struct _Temporary_value
1703:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1704:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	template<typename... _Args>
1705:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  explicit
1706:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1707:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  {
1708:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1709:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				     std::forward<_Args>(__args)...);
1710:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  }
1711:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1712:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	~_Temporary_value()
1713:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1714:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1715:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	value_type&
1716:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1717:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1718:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       private:
1719:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_Tp*
1720:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1721:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1722:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	vector* _M_this;
1723:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1724:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       };
1725:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1726:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1727:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1728:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename _Arg>
1729:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1730:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1731:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1732:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename... _Args>
1733:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	void
1734:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1735:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1736:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1737:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1738:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
ARM GAS  /tmp/ccfXobHU.s 			page 85


1739:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1740:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1741:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       template<typename... _Args>
1742:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	iterator
1743:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1744:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1745:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1746:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       iterator
1747:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1748:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1749:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
1750:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1751:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1752:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       size_type
1753:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1754:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1755:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (max_size() - size() < __n)
1756:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
1757:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1758:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1759:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1760:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
1761:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
1762:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       // Called by constructors to check initial size.
1763:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       static size_type
1764:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
 623              		.loc 1 1764 7 is_stmt 1 view .LVU121
 624              	.LBB5104:
 625              	.LBB5105:
 626              	.LBI5105:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 627              		.loc 6 141 7 view .LVU122
 628              	.LBB5106:
 629              	.LBI5106:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 630              		.loc 5 83 7 view .LVU123
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 631              		.loc 5 83 7 is_stmt 0 view .LVU124
 632              	.LBE5106:
 633              	.LBE5105:
 634              	.LBB5107:
 635              	.LBI5107:
 636              		.loc 6 153 7 is_stmt 1 view .LVU125
 637              	.LBB5108:
 638              	.LBI5108:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 639              		.loc 5 89 7 view .LVU126
 640              	.LBE5108:
 641              	.LBE5107:
1765:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
1766:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 642              		.loc 1 1766 2 is_stmt 0 view .LVU127
 643 0006 002E     		cmp	r6, #0
 644 0008 16DB     		blt	.L28
 645              	.LVL32:
 646              		.loc 1 1766 2 view .LVU128
 647              	.LBE5104:
ARM GAS  /tmp/ccfXobHU.s 			page 86


 648              	.LBE5103:
 649              	.LBB5110:
 650              	.LBI5110:
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 651              		.loc 1 340 7 is_stmt 1 view .LVU129
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 652              		.loc 1 340 7 is_stmt 0 view .LVU130
 653 000a 0446     		mov	r4, r0
 654 000c B010     		asrs	r0, r6, #2
 655              	.LVL33:
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 656              		.loc 1 340 7 view .LVU131
 657 000e 0D46     		mov	r5, r1
 658 0010 1746     		mov	r7, r2
 659              	.LBB5111:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 660              		.loc 1 343 18 view .LVU132
 661 0012 10B1     		cbz	r0, .L25
 662              	.LVL34:
 663              	.LBB5112:
 664              	.LBI5112:
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 665              		.loc 4 443 7 is_stmt 1 view .LVU133
 666              	.LBB5113:
 667              	.LBI5113:
 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 668              		.loc 5 102 7 view .LVU134
 669              	.LBB5114:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 670              		.loc 5 114 41 is_stmt 0 view .LVU135
 671 0014 3046     		mov	r0, r6
 672              	.LVL35:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 673              		.loc 5 114 41 view .LVU136
 674 0016 FFF7FEFF 		bl	_Znwj
 675              	.LVL36:
 676              	.L25:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 677              		.loc 5 114 41 view .LVU137
 678              	.LBE5114:
 679              	.LBE5113:
 680              	.LBE5112:
 681              	.LBE5111:
 682              	.LBE5110:
1580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
 683              		.loc 1 1580 61 view .LVU138
 684 001a 00EB0608 		add	r8, r0, r6
 685              	.LBB5115:
 686              	.LBB5116:
 687              	.LBB5117:
 688              	.LBB5118:
 689              	.LBB5119:
 690              	.LBB5120:
 691              	.LBB5121:
 692              	.LBB5122:
 693              	.LBB5123:
 694              	.LBB5124:
ARM GAS  /tmp/ccfXobHU.s 			page 87


 695              		.file 10 "/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
ARM GAS  /tmp/ccfXobHU.s 			page 88


  57:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
  75:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  76:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** {
  78:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  80:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
  87:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
  89:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
  91:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
  97:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
  98:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 100:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 102:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
 104:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 106:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 108:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 109:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 110:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 113:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
ARM GAS  /tmp/ccfXobHU.s 			page 89


 114:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  iterators themselves.
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 121:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 123:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 125:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 126:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 129:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 131:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 142:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 151:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 153:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 154:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 156:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 163:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 167:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 170:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
ARM GAS  /tmp/ccfXobHU.s 			page 90


 171:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 172:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 173:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 175:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 177:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __first2;
 182:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 183:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 184:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 185:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 186:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 191:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 194:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 195:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 200:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 201:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 205:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 206:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 207:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 208:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 209:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 215:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 219:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 223:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 224:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 225:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 227:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__a < __b)
ARM GAS  /tmp/ccfXobHU.s 			page 91


 228:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 229:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 230:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 231:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 233:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 234:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 235:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 236:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 237:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 238:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 239:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 240:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 241:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 242:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 243:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 244:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 245:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 246:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 247:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 248:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 249:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 250:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 251:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 252:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 253:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 254:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 255:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 256:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 257:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 258:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 259:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 260:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 261:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 262:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 263:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 264:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 265:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 266:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 267:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 268:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 269:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 270:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 272:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 273:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 274:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 277:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 278:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 279:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 280:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 281:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 282:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __it; }
 283:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
ARM GAS  /tmp/ccfXobHU.s 			page 92


 285:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 286:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 287:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 288:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _From
 289:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 290:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 291:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 292:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 293:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 294:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _Iterator
 295:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 296:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     { return __res; }
 297:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 298:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 299:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 300:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 301:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 302:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 303:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 304:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 305:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move
 306:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 307:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 308:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 309:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 310:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 311:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 312:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = *__first;
 313:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 314:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 315:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 316:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 317:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 318:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Category>
 319:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 320:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 321:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 322:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 323:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 324:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 325:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 326:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 327:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 328:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 329:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 330:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 331:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 332:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 333:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 334:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 335:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 336:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 337:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 338:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 339:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 340:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 341:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
ARM GAS  /tmp/ccfXobHU.s 			page 93


 342:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = *__first;
 343:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 344:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 345:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
 346:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 347:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 348:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 349:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 350:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 351:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 352:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 353:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 354:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 355:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _OI
 356:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 357:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 358:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 359:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 360:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    {
 361:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 362:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__first;
 363:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	      ++__result;
 364:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    }
 365:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result;
 366:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 367:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 368:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 369:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 370:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 371:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 372:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 373:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 374:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static _Tp*
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 376:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 377:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 378:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 379:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 380:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 381:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 382:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 383:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 696              		.loc 10 385 4 view .LVU139
 697 001e AF42     		cmp	r7, r5
 698              	.LBE5124:
 699              	.LBE5123:
 700              	.LBE5122:
 701              	.LBE5121:
 702              	.LBE5120:
 703              	.LBE5119:
 704              	.LBE5118:
 705              	.LBE5117:
 706              	.LBE5116:
 707              	.LBE5115:
1578:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
ARM GAS  /tmp/ccfXobHU.s 			page 94


 708              		.loc 1 1578 4 view .LVU140
 709 0020 2060     		str	r0, [r4]
1580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
 710              		.loc 1 1580 4 view .LVU141
 711 0022 C4F80880 		str	r8, [r4, #8]
 712              	.LVL37:
 713              	.LBB5134:
 714              	.LBI5115:
 715              		.file 11 "/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  /tmp/ccfXobHU.s 			page 95


  49:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #if __cplusplus > 201402L
  60:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #include <utility>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #endif
  62:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  63:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #include <type_traits>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #endif
  66:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  67:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** {
  69:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  71:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  72:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  73:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
  74:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  75:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static _ForwardIterator
  76:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  77:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  78:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         {
  79:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  80:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __try
  81:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  83:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  84:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      return __cur;
  85:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
  86:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __catch(...)
  87:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
  88:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  89:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  90:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
  91:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	}
  92:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
  93:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
  94:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<>
  95:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  96:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
  97:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  98:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static _ForwardIterator
  99:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 100:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 101:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 102:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
 103:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 104:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   /**
 105:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
ARM GAS  /tmp/ccfXobHU.s 			page 96


 106:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 107:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 108:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 109:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 110:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *
 111:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 112:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   */
 113:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 114:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 116:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 117:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 118:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 119:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	_ValueType1;
 120:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 121:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	_ValueType2;
 122:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 123:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 124:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #else
 125:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 126:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 127:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 128:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 129:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 130:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 131:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 132:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 133:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 134:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 135:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #endif
 136:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 138:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 139:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 				       && __assignable>::
 140:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 141:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     }
 142:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 143:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 144:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 145:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 146:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 147:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 148:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static void
 149:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 150:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 151:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         {
 152:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 153:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __try
 154:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
 155:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 156:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 157:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
 158:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __catch(...)
 159:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
 160:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 161:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 162:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
ARM GAS  /tmp/ccfXobHU.s 			page 97


 163:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	}
 164:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
 165:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 166:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<>
 167:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 169:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 170:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static void
 171:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 172:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 173:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 174:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
 175:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 176:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   /**
 177:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 178:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 179:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 180:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 181:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 182:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *
 183:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 184:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   */
 185:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 186:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     inline void
 187:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 188:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 189:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 190:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 191:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	_ValueType;
 192:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 193:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 194:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #else
 195:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 196:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 197:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 198:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 199:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 200:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 201:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 202:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 203:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #endif
 204:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 205:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 206:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 207:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     }
 208:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 209:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 210:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 211:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 212:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 213:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 214:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 215:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 216:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 217:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         {
 218:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 219:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __try
ARM GAS  /tmp/ccfXobHU.s 			page 98


 220:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
 221:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 222:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 223:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      return __cur;
 224:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
 225:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __catch(...)
 226:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    {
 227:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 228:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 229:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    }
 230:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	}
 231:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
 232:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 233:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<>
 234:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 235:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 236:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 237:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 238:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 239:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 240:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 241:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     };
 242:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 243:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 244:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 245:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   /**
 246:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 247:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 248:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 249:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 250:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 251:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *
 252:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 253:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   */
 254:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 255:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 256:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 257:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 258:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 259:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	_ValueType;
 260:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 261:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 262:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #else
 263:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 264:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 265:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 266:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 267:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 268:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 269:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 270:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** #endif
 272:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 273:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 274:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
ARM GAS  /tmp/ccfXobHU.s 			page 99


 277:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 278:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 279:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 280:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 281:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 282:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 283:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 284:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     _ForwardIterator
 285:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 286:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 287:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     {
 288:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 289:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       __try
 290:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	{
 291:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 292:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 293:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 294:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  return __cur;
 295:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	}
 296:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****       __catch(...)
 297:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	{
 298:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 299:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 300:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 	}
 301:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     }
 302:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 
 303:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 304:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 305:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 716              		.loc 11 305 5 is_stmt 1 view .LVU142
 717              	.LBB5133:
 718              	.LBI5116:
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 719              		.loc 11 115 5 view .LVU143
 720              	.LBB5132:
 721              	.LBB5131:
 722              	.LBI5118:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 723              		.loc 11 99 9 view .LVU144
 724              	.LBB5130:
 725              	.LBI5119:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 388:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 389:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 390:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 391:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 392:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 394:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 395:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 396:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 397:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 398:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 399:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_II>::__value
 400:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __is_pointer<_OI>::__value
 401:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
ARM GAS  /tmp/ccfXobHU.s 			page 100


 402:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 403:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 404:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 405:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 406:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 407:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 408:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 409:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT>
 410:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct char_traits;
 411:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 412:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 413:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 414:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 415:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 416:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 417:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 418:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 419:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 420:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 421:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 422:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 423:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 424:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 425:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 426:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 427:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 428:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 429:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 430:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 432:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 433:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 434:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 435:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 436:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 437:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 439:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 440:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 441:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 442:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__last),
 443:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 					    std::__niter_base(__result)));
 444:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 445:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 446:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 447:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 448:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 449:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 450:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 451:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 452:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 453:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 454:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 455:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 456:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 457:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 458:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
ARM GAS  /tmp/ccfXobHU.s 			page 101


 459:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 460:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 461:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  within [first,last).
 462:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 463:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 464:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline _OI
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 726              		.loc 10 465 5 view .LVU145
 727              	.LBB5129:
 728              	.LBI5120:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 729              		.loc 10 438 5 view .LVU146
 730              	.LBB5128:
 731              	.LBI5121:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 732              		.loc 10 393 5 view .LVU147
 733              	.LBB5127:
 734              	.LBB5126:
 735              	.LBI5123:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 736              		.loc 10 375 2 view .LVU148
 737              	.LBB5125:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 738              		.loc 10 385 4 is_stmt 0 view .LVU149
 739 0026 03D0     		beq	.L26
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 740              		.loc 10 386 23 view .LVU150
 741 0028 3246     		mov	r2, r6
 742 002a 2946     		mov	r1, r5
 743 002c FFF7FEFF 		bl	memcpy
 744              	.LVL38:
 745              	.L26:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 746              		.loc 10 386 23 view .LVU151
 747              	.LBE5125:
 748              	.LBE5126:
 749              	.LBE5127:
 750              	.LBE5128:
 751              	.LBE5129:
 752              	.LBE5130:
 753              	.LBE5131:
 754              	.LBE5132:
 755              	.LBE5133:
 756              	.LBE5134:
1581:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 757              		.loc 1 1581 4 view .LVU152
 758 0030 C4F80480 		str	r8, [r4, #4]
1585:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 759              		.loc 1 1585 2 view .LVU153
 760 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 761              	.LVL39:
 762              	.L28:
 763              	.LBB5135:
 764              	.LBB5109:
1767:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_length_error(
 765              		.loc 1 1767 24 view .LVU154
 766 0038 0148     		ldr	r0, .L29
ARM GAS  /tmp/ccfXobHU.s 			page 102


 767              	.LVL40:
 768              		.loc 1 1767 24 view .LVU155
 769 003a FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 770              	.LVL41:
 771              	.L30:
 772              		.loc 1 1767 24 view .LVU156
 773 003e 00BF     		.align	2
 774              	.L29:
 775 0040 00000000 		.word	.LC7
 776              	.LBE5109:
 777              	.LBE5135:
 778              		.cfi_endproc
 779              	.LFE4032:
 781              		.section	.rodata._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4,"aMS",
 782              		.align	2
 783              	.LC8:
 784 0000 6D61703A 		.ascii	"map::at\000"
 784      3A617400 
 785              		.section	.text._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax",%progbits
 786              		.align	1
 787              		.p2align 2,,3
 788              		.global	_Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv5-d16
 794              	_Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 795              	.LVL42:
 796              	.LFB2921:
 797              		.file 12 "Mu/music/theory.cpp"
   1:Mu/music/theory.cpp **** /* 
   2:Mu/music/theory.cpp ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Mu/music/theory.cpp ****  * You may use, distribute and modify this code under the
   4:Mu/music/theory.cpp ****  * terms of the GNU AGPLv3 license.
   5:Mu/music/theory.cpp ****  * 
   6:Mu/music/theory.cpp ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Mu/music/theory.cpp ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Mu/music/theory.cpp ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Mu/music/theory.cpp ****  */
  10:Mu/music/theory.cpp **** 
  11:Mu/music/theory.cpp **** #include <algorithm>
  12:Mu/music/theory.cpp **** #include <string> 
  13:Mu/music/theory.cpp **** 
  14:Mu/music/theory.cpp **** #include "theory.h"
  15:Mu/music/theory.cpp **** 
  16:Mu/music/theory.cpp **** using namespace mu;
  17:Mu/music/theory.cpp **** 
  18:Mu/music/theory.cpp **** bool isDiatonic(int note, std::string mode){
 798              		.loc 12 18 44 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		.loc 12 18 44 is_stmt 0 view .LVU158
 803 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 804              		.cfi_def_cfa_offset 32
 805              		.cfi_offset 4, -32
 806              		.cfi_offset 5, -28
ARM GAS  /tmp/ccfXobHU.s 			page 103


 807              		.cfi_offset 6, -24
 808              		.cfi_offset 7, -20
 809              		.cfi_offset 8, -16
 810              		.cfi_offset 9, -12
 811              		.cfi_offset 10, -8
 812              		.cfi_offset 14, -4
 813              	.LBB5284:
 814              	.LBB5285:
 815              	.LBB5286:
 816              	.LBB5287:
 817              	.LBB5288:
 818              		.file 13 "/usr/include/newlib/c++/9.2.1/bits/stl_tree.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // RB tree implementation -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Copyright (c) 1996,1997
  28:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Silicon Graphics Computer Systems, Inc.
  29:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * in supporting documentation.  Silicon Graphics makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Copyright (c) 1994
  40:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Hewlett-Packard Company
  41:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * that both that copyright notice and this permission notice appear
ARM GAS  /tmp/ccfXobHU.s 			page 104


  46:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  50:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *
  51:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  */
  52:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  53:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** /** @file bits/stl_tree.h
  54:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *  This is an internal header file, included by other library headers.
  55:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  *  Do not attempt to use it directly. @headername{map,set}
  56:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****  */
  57:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  58:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #ifndef _STL_TREE_H
  59:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #define _STL_TREE_H 1
  60:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  61:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #pragma GCC system_header
  62:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  63:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #include <bits/stl_algobase.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #include <bits/allocator.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #include <bits/stl_function.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #include <bits/cpp_type_traits.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #include <ext/alloc_traits.h>
  68:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
  69:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** # include <ext/aligned_buffer.h>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
  71:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus > 201402L
  72:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** # include <bits/node_handle.h>
  73:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
  74:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  75:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** namespace std _GLIBCXX_VISIBILITY(default)
  76:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** {
  77:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  79:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus > 201103L
  80:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** # define __cpp_lib_generic_associative_lookup 201304
  81:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
  82:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  83:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // Red-black tree class, designed for use in implementing STL
  84:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // associative containers (set, multiset, map, and multimap). The
  85:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // insertion and deletion algorithms are based on those in Cormen,
  86:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // Leiserson, and Rivest, Introduction to Algorithms (MIT Press,
  87:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // 1990), except that
  88:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   //
  89:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // (1) the header cell is maintained with links not only to the root
  90:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // but also to the leftmost node of the tree, to enable constant
  91:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // time begin(), and to the rightmost node of the tree, to enable
  92:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // linear time performance when used with the generic set algorithms
  93:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // (set_union, etc.)
  94:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   //
  95:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // (2) when a node being deleted has two children its successor node
  96:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // is relinked into its place, rather than copied, so that the only
  97:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // iterators invalidated are those referring to the deleted node.
  98:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   enum _Rb_tree_color { _S_red = false, _S_black = true };
 100:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 101:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   struct _Rb_tree_node_base
 102:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   {
ARM GAS  /tmp/ccfXobHU.s 			page 105


 103:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typedef _Rb_tree_node_base* _Base_ptr;
 104:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typedef const _Rb_tree_node_base* _Const_Base_ptr;
 105:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 106:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree_color	_M_color;
 107:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Base_ptr		_M_parent;
 108:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Base_ptr		_M_left;
 109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Base_ptr		_M_right;
 110:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     static _Base_ptr
 112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 113:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 114:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 115:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return __x;
 116:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 117:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 118:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     static _Const_Base_ptr
 119:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 120:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 121:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x->_M_left != 0) __x = __x->_M_left;
 122:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return __x;
 123:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 124:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 125:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     static _Base_ptr
 126:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 127:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 128:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 129:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return __x;
 130:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 131:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 132:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     static _Const_Base_ptr
 133:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 134:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 135:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x->_M_right != 0) __x = __x->_M_right;
 136:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return __x;
 137:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 138:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   };
 139:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 140:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // Helper type offering value initialization guarantee on the compare functor.
 141:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key_compare>
 142:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct _Rb_tree_key_compare
 143:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 144:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Key_compare		_M_key_compare;
 145:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 146:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_key_compare()
 147:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(
 148:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	is_nothrow_default_constructible<_Key_compare>::value)
 149:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare()
 150:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 151:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_key_compare(const _Key_compare& __comp)
 153:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__comp)
 154:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 155:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 156:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 157:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Copy constructor added for consistency with C++98 mode.
 158:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
 159:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 106


 160:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_key_compare(_Rb_tree_key_compare&& __x)
 161:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	noexcept(is_nothrow_copy_constructible<_Key_compare>::value)
 162:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__x._M_key_compare)
 163:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 164:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 165:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     };
 166:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 167:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   // Helper type to manage default initialization of node count and header.
 168:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   struct _Rb_tree_header
 169:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   {
 170:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree_node_base	_M_header;
 171:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     size_t		_M_node_count; // Keeps track of size of tree.
 172:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 173:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree_header() _GLIBCXX_NOEXCEPT
 174:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_color = _S_red;
 176:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 177:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 178:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 180:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree_header(_Rb_tree_header&& __x) noexcept
 181:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 182:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__x._M_header._M_parent != nullptr)
 183:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_move_data(__x);
 184:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else
 185:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 186:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_header._M_color = _S_red;
 187:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_reset();
 188:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 189:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 190:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 191:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 192:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
 193:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_move_data(_Rb_tree_header& __from)
 194:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 195:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_color = __from._M_header._M_color;
 196:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_parent = __from._M_header._M_parent;
 197:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = __from._M_header._M_left;
 198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = __from._M_header._M_right;
 199:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_parent->_M_parent = &_M_header;
 200:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = __from._M_node_count;
 201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 202:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       __from._M_reset();
 203:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 204:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 205:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
 206:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_reset()
 207:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_parent = 0;
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = &_M_header;
 210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = 0;
 212:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 213:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   };
 214:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 215:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Val>
 216:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct _Rb_tree_node : public _Rb_tree_node_base
ARM GAS  /tmp/ccfXobHU.s 			page 107


 217:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 218:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* _Link_type;
 219:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 220:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 221:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Val _M_value_field;
 222:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 223:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Val*
 224:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_valptr()
 225:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 226:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 227:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const _Val*
 228:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_valptr() const
 229:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return std::__addressof(_M_value_field); }
 230:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 231:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       __gnu_cxx::__aligned_membuf<_Val> _M_storage;
 232:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 233:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Val*
 234:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_valptr()
 235:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 236:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 237:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const _Val*
 238:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_valptr() const
 239:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 240:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 241:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     };
 242:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 243:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 244:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
 245:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 246:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 247:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
 248:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 249:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _GLIBCXX_PURE _Rb_tree_node_base*
 250:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_decrement(_Rb_tree_node_base* __x) throw ();
 251:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 252:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _GLIBCXX_PURE const _Rb_tree_node_base*
 253:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_decrement(const _Rb_tree_node_base* __x) throw ();
 254:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 255:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Tp>
 256:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct _Rb_tree_iterator
 257:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 258:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Tp  value_type;
 259:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Tp& reference;
 260:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Tp* pointer;
 261:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 262:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 263:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 264:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 265:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp>		_Self;
 266:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
 267:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node<_Tp>*		_Link_type;
 268:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 269:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
 270:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node() { }
 271:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 272:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       explicit
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 108


 274:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 275:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 276:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       reference
 277:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 278:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 279:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 280:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pointer
 281:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 282:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 283:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 284:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self&
 285:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 286:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 287:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 288:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 289:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 290:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 291:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self
 292:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 293:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 294:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Self __tmp = *this;
 295:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 296:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __tmp;
 297:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 298:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 299:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self&
 300:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 301:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 304:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 305:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 306:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self
 307:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 308:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 309:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Self __tmp = *this;
 310:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 311:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __tmp;
 312:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 313:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 314:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
 315:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 316:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return __x._M_node == __y._M_node; }
 317:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 318:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
 319:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 320:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return __x._M_node != __y._M_node; }
 321:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 322:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr _M_node;
 323:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   };
 324:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 325:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Tp>
 326:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct _Rb_tree_const_iterator
 327:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 328:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Tp	 value_type;
 329:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const _Tp& reference;
 330:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const _Tp* pointer;
ARM GAS  /tmp/ccfXobHU.s 			page 109


 331:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 332:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_iterator<_Tp> iterator;
 333:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 334:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef bidirectional_iterator_tag iterator_category;
 335:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef ptrdiff_t			 difference_type;
 336:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 337:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<_Tp>		_Self;
 338:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
 339:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Tp>*			_Link_type;
 340:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 341:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
 342:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node() { }
 343:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 344:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       explicit
 345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 346:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 347:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 349:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 350:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 351:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 352:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 353:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 354:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 355:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       reference
 356:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator*() const _GLIBCXX_NOEXCEPT
 357:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 358:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 359:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pointer
 360:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator->() const _GLIBCXX_NOEXCEPT
 361:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 362:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 363:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self&
 364:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator++() _GLIBCXX_NOEXCEPT
 365:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 366:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 367:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 368:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 369:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 370:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self
 371:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 372:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 373:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Self __tmp = *this;
 374:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_increment(_M_node);
 375:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __tmp;
 376:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 377:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 378:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self&
 379:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator--() _GLIBCXX_NOEXCEPT
 380:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 381:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 382:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 383:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 384:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 385:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Self
 386:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 387:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 110


 388:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Self __tmp = *this;
 389:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_node = _Rb_tree_decrement(_M_node);
 390:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __tmp;
 391:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 392:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 393:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
 394:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 395:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return __x._M_node == __y._M_node; }
 396:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 397:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
 398:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 399:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return __x._M_node != __y._M_node; }
 400:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 401:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr _M_node;
 402:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     };
 403:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 404:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   void
 405:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_insert_and_rebalance(const bool __insert_left,
 406:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				_Rb_tree_node_base* __x,
 407:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				_Rb_tree_node_base* __p,
 408:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				_Rb_tree_node_base& __header) throw ();
 409:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 410:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_node_base*
 411:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   _Rb_tree_rebalance_for_erase(_Rb_tree_node_base* const __z,
 412:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			       _Rb_tree_node_base& __header) throw ();
 413:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 414:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201402L
 415:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType, typename = __void_t<>>
 416:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct __has_is_transparent
 417:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     { };
 418:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 419:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 420:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct __has_is_transparent<_Cmp, _SfinaeType,
 421:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				__void_t<typename _Cmp::is_transparent>>
 422:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     { typedef void type; };
 423:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 424:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Cmp, typename _SfinaeType>
 425:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     using __has_is_transparent_t
 426:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       = typename __has_is_transparent<_Cmp, _SfinaeType>::type;
 427:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 428:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 429:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus > 201402L
 430:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Tree1, typename _Cmp2>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     struct _Rb_tree_merge_helper { };
 432:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 433:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 434:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
 435:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc = allocator<_Val> >
 436:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     class _Rb_tree
 437:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 438:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 439:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	rebind<_Rb_tree_node<_Val> >::other _Node_allocator;
 440:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 441:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef __gnu_cxx::__alloc_traits<_Node_allocator> _Alloc_traits;
 442:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 443:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     protected:
 444:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node_base* 		_Base_ptr;
ARM GAS  /tmp/ccfXobHU.s 			page 111


 445:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const _Rb_tree_node_base* 	_Const_Base_ptr;
 446:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_node<_Val>* 		_Link_type;
 447:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const _Rb_tree_node<_Val>*	_Const_Link_type;
 448:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 449:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     private:
 450:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Functor recycling a pool of nodes and using allocation once the pool
 451:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // is empty.
 452:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       struct _Reuse_or_alloc_node
 453:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 454:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Reuse_or_alloc_node(_Rb_tree& __t)
 455:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: _M_root(__t._M_root()), _M_nodes(__t._M_rightmost()), _M_t(__t)
 456:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 457:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (_M_root)
 458:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
 459:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _M_root->_M_parent = 0;
 460:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 461:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (_M_nodes->_M_left)
 462:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_M_nodes = _M_nodes->_M_left;
 463:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
 464:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
 465:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_nodes = 0;
 466:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 467:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 468:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 469:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Reuse_or_alloc_node(const _Reuse_or_alloc_node&) = delete;
 470:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 471:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 472:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	~_Reuse_or_alloc_node()
 473:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{ _M_t._M_erase(static_cast<_Link_type>(_M_root)); }
 474:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 475:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	template<typename _Arg>
 476:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type
 477:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 478:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  operator()(const _Arg& __arg)
 479:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 480:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  operator()(_Arg&& __arg)
 481:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 482:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
 483:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _Link_type __node = static_cast<_Link_type>(_M_extract());
 484:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__node)
 485:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
 486:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_M_t._M_destroy_node(__node);
 487:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_M_t._M_construct_node(__node, _GLIBCXX_FORWARD(_Arg, __arg));
 488:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		return __node;
 489:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
 490:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 491:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg));
 492:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
 493:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 494:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       private:
 495:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Base_ptr
 496:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_extract()
 497:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 498:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (!_M_nodes)
 499:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _M_nodes;
 500:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 501:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Base_ptr __node = _M_nodes;
ARM GAS  /tmp/ccfXobHU.s 			page 112


 502:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_nodes = _M_nodes->_M_parent;
 503:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (_M_nodes)
 504:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
 505:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (_M_nodes->_M_right == __node)
 506:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		{
 507:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  _M_nodes->_M_right = 0;
 508:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 509:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  if (_M_nodes->_M_left)
 510:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		    {
 511:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      _M_nodes = _M_nodes->_M_left;
 512:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 513:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      while (_M_nodes->_M_right)
 514:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_right;
 515:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 516:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      if (_M_nodes->_M_left)
 517:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			_M_nodes = _M_nodes->_M_left;
 518:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		    }
 519:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		}
 520:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      else // __node is on the left.
 521:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_M_nodes->_M_left = 0;
 522:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
 523:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
 524:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_root = 0;
 525:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 526:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __node;
 527:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 528:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 529:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Base_ptr _M_root;
 530:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Base_ptr _M_nodes;
 531:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 532:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       };
 533:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 534:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Functor similar to the previous one but without any pool of nodes to
 535:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // recycle.
 536:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       struct _Alloc_node
 537:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 538:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Alloc_node(_Rb_tree& __t)
 539:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: _M_t(__t) { }
 540:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 541:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	template<typename _Arg>
 542:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type
 543:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 544:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  operator()(const _Arg& __arg) const
 545:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 546:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  operator()(_Arg&& __arg) const
 547:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 548:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 549:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 550:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       private:
 551:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Rb_tree& _M_t;
 552:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       };
 553:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 554:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
 555:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Key 				key_type;
 556:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Val 				value_type;
 557:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef value_type* 			pointer;
 558:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const value_type* 		const_pointer;
ARM GAS  /tmp/ccfXobHU.s 			page 113


 559:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef value_type& 			reference;
 560:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef const value_type& 		const_reference;
 561:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef size_t 				size_type;
 562:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef ptrdiff_t 			difference_type;
 563:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Alloc 				allocator_type;
 564:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 565:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Node_allocator&
 566:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 567:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl; }
 568:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 569:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const _Node_allocator&
 570:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
 571:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl; }
 572:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 573:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       allocator_type
 574:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 575:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return allocator_type(_M_get_Node_allocator()); }
 576:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 577:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     protected:
 578:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type
 579:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_node()
 580:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 581:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 582:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
 583:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 584:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 585:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 586:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 587:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
 588:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_construct_node(_Link_type __node, const value_type& __x)
 589:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 590:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__try
 591:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { get_allocator().construct(__node->_M_valptr(), __x); }
 592:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__catch(...)
 593:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
 594:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_put_node(__node);
 595:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __throw_exception_again;
 596:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
 597:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 598:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 599:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type
 600:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_create_node(const value_type& __x)
 601:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 602:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type __tmp = _M_get_node();
 603:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_construct_node(__tmp, __x);
 604:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __tmp;
 605:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 606:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 607:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
 608:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
 609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_construct_node(_Link_type __node, _Args&&... __args)
 610:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 611:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __try
 612:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
 613:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      ::new(__node) _Rb_tree_node<_Val>;
 614:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _Alloc_traits::construct(_M_get_Node_allocator(),
 615:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				       __node->_M_valptr(),
ARM GAS  /tmp/ccfXobHU.s 			page 114


 616:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				       std::forward<_Args>(__args)...);
 617:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
 618:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __catch(...)
 619:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
 620:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __node->~_Rb_tree_node<_Val>();
 621:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _M_put_node(__node);
 622:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __throw_exception_again;
 623:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
 624:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 625:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 626:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
 627:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type
 628:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_create_node(_Args&&... __args)
 629:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 630:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __tmp = _M_get_node();
 631:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 632:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __tmp;
 633:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 634:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 635:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 636:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
 637:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 638:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 639:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 640:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	get_allocator().destroy(__p->_M_valptr());
 641:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 642:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 643:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__p->~_Rb_tree_node<_Val>();
 644:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 645:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 646:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 647:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
 648:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 649:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 650:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_destroy_node(__p);
 651:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_put_node(__p);
 652:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 653:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 654:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
 655:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type
 656:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_clone_node(_Const_Link_type __x, _NodeGen& __node_gen)
 657:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 658:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __tmp = __node_gen(*__x->_M_valptr());
 659:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __tmp->_M_color = __x->_M_color;
 660:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __tmp->_M_left = 0;
 661:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __tmp->_M_right = 0;
 662:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __tmp;
 663:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 664:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 665:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     protected:
 666:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if _GLIBCXX_INLINE_VERSION
 667:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Key_compare>
 668:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 669:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Unused _Is_pod_comparator is kept as it is part of mangled name.
 670:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Key_compare,
 671:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
 672:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
ARM GAS  /tmp/ccfXobHU.s 			page 115


 673:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	struct _Rb_tree_impl
 674:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: public _Node_allocator
 675:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	, public _Rb_tree_key_compare<_Key_compare>
 676:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	, public _Rb_tree_header
 677:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 678:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
 679:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 680:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl()
 681:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _GLIBCXX_NOEXCEPT_IF(
 682:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		is_nothrow_default_constructible<_Node_allocator>::value
 683:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		&& is_nothrow_default_constructible<_Base_key_compare>::value )
 684:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator()
 685:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 686:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 687:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Rb_tree_impl& __x)
 688:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
 689:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  , _Base_key_compare(__x._M_key_compare)
 690:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 691:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 692:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 693:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, const _Node_allocator& __a)
 694:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(__a), _Base_key_compare(__comp)
 695:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 696:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 697:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&&) = default;
 698:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 699:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  explicit
 700:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(_Node_allocator&& __a)
 701:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a))
 702:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 703:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 704:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(_Rb_tree_impl&& __x, _Node_allocator&& __a)
 705:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)),
 706:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _Base_key_compare(std::move(__x)),
 707:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _Rb_tree_header(std::move(__x))
 708:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 709:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 710:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 711:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 712:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  { }
 713:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 714:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	};
 715:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 716:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_impl<_Compare> _M_impl;
 717:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 718:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     protected:
 719:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr&
 720:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_root() _GLIBCXX_NOEXCEPT
 721:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 722:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 723:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Base_ptr
 724:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_root() const _GLIBCXX_NOEXCEPT
 725:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_parent; }
 726:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 727:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr&
 728:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_leftmost() _GLIBCXX_NOEXCEPT
 729:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
ARM GAS  /tmp/ccfXobHU.s 			page 116


 730:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 731:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Base_ptr
 732:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_leftmost() const _GLIBCXX_NOEXCEPT
 733:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_left; }
 734:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 735:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr&
 736:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_rightmost() _GLIBCXX_NOEXCEPT
 737:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 738:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 739:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Base_ptr
 740:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_rightmost() const _GLIBCXX_NOEXCEPT
 741:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return this->_M_impl._M_header._M_right; }
 742:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 743:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type
 744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_begin() _GLIBCXX_NOEXCEPT
 745:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 746:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 747:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Link_type
 748:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_begin() const _GLIBCXX_NOEXCEPT
 749:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 750:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return static_cast<_Const_Link_type>
 751:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  (this->_M_impl._M_header._M_parent);
 752:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 753:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 754:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr
 755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_end() _GLIBCXX_NOEXCEPT
 756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 757:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 758:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Base_ptr
 759:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_end() const _GLIBCXX_NOEXCEPT
 760:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 761:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 762:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static const_reference
 763:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_value(_Const_Link_type __x)
 764:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return *__x->_M_valptr(); }
 765:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 766:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static const _Key&
 767:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_key(_Const_Link_type __x)
 768:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 769:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 770:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// If we're asking for the key we're presumably using the comparison
 771:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// object, and so this is a good place to sanity check it.
 772:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
 773:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      "comparison object must be invocable "
 774:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      "with two arguments of key type");
 775:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** # if __cplusplus >= 201703L
 776:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 777:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// 2542. Missing const requirements for associative containers
 778:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
 779:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  static_assert(
 780:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
 781:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      "comparison object must be invocable as const");
 782:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** # endif // C++17
 783:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif // C++11
 784:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 785:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _KeyOfValue()(*__x->_M_valptr());
 786:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 117


 787:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 788:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Link_type
 789:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 790:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_left); }
 791:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 792:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Const_Link_type
 793:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 794:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_left); }
 795:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 796:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Link_type
 797:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 798:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(__x->_M_right); }
 799:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 800:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Const_Link_type
 801:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 802:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Const_Link_type>(__x->_M_right); }
 803:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 804:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static const_reference
 805:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_value(_Const_Base_ptr __x)
 806:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return *static_cast<_Const_Link_type>(__x)->_M_valptr(); }
 807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 808:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static const _Key&
 809:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_key(_Const_Base_ptr __x)
 810:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _S_key(static_cast<_Const_Link_type>(__x)); }
 811:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Base_ptr
 813:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 814:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 815:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 816:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Const_Base_ptr
 817:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 818:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_minimum(__x); }
 819:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 820:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Base_ptr
 821:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_maximum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 822:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 823:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 824:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       static _Const_Base_ptr
 825:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _S_maximum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 826:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Rb_tree_node_base::_S_maximum(__x); }
 827:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 828:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
 829:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_iterator<value_type>       iterator;
 830:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef _Rb_tree_const_iterator<value_type> const_iterator;
 831:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 832:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef std::reverse_iterator<iterator>       reverse_iterator;
 833:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
 834:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 835:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus > 201402L
 836:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       using node_type = _Node_handle<_Key, _Val, _Node_allocator>;
 837:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       using insert_return_type = _Node_insert_return<
 838:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	conditional_t<is_same_v<_Key, _Val>, const_iterator, iterator>,
 839:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	node_type>;
 840:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 841:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 842:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 843:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_insert_unique_pos(const key_type& __k);
ARM GAS  /tmp/ccfXobHU.s 			page 118


 844:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 845:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 846:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_insert_equal_pos(const key_type& __k);
 847:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 848:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 849:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_insert_hint_unique_pos(const_iterator __pos,
 850:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				    const key_type& __k);
 851:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 852:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr>
 853:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_get_insert_hint_equal_pos(const_iterator __pos,
 854:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				   const key_type& __k);
 855:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 856:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     private:
 857:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 858:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
 859:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
 860:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y, _Arg&& __v, _NodeGen&);
 861:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 862:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 863:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_node(_Base_ptr __x, _Base_ptr __y, _Link_type __z);
 864:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 865:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
 866:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
 867:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_lower(_Base_ptr __y, _Arg&& __v);
 868:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 869:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
 870:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
 871:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_equal_lower(_Arg&& __x);
 872:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 873:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 874:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_lower_node(_Base_ptr __p, _Link_type __z);
 875:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 876:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 877:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_equal_lower_node(_Link_type __z);
 878:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 879:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
 880:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
 881:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_(_Base_ptr __x, _Base_ptr __y,
 882:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		   const value_type& __v, _NodeGen&);
 883:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 884:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 885:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // 233. Insertion hints in associative containers.
 886:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 887:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_lower(_Base_ptr __y, const value_type& __v);
 888:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 889:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 890:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_equal_lower(const value_type& __x);
 891:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 892:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 893:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
 894:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type
 895:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen&);
 896:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 897:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
 898:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type
 899:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_copy(const _Rb_tree& __x, _NodeGen& __gen)
 900:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
ARM GAS  /tmp/ccfXobHU.s 			page 119


 901:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __root = _M_copy(__x._M_begin(), _M_end(), __gen);
 902:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_leftmost() = _S_minimum(__root);
 903:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_rightmost() = _S_maximum(__root);
 904:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_impl._M_node_count = __x._M_impl._M_node_count;
 905:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __root;
 906:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 908:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type
 909:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_copy(const _Rb_tree& __x)
 910:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Alloc_node __an(*this);
 912:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _M_copy(__x, __an);
 913:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 914:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 915:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
 916:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_erase(_Link_type __x);
 917:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 919:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_lower_bound(_Link_type __x, _Base_ptr __y,
 920:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		     const _Key& __k);
 921:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 922:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
 923:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 924:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		     const _Key& __k) const;
 925:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 926:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
 927:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_upper_bound(_Link_type __x, _Base_ptr __y,
 928:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		     const _Key& __k);
 929:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 930:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
 931:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
 932:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		     const _Key& __k) const;
 933:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 934:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
 935:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // allocation/deallocation
 936:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus < 201103L
 937:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree() { }
 938:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
 939:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree() = default;
 940:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 941:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 942:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(const _Compare& __comp,
 943:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 944:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(__comp, _Node_allocator(__a)) { }
 945:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 946:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x)
 947:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(__x._M_impl)
 948:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 949:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__x._M_root() != 0)
 950:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x);
 951:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 952:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 953:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
 954:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(const allocator_type& __a)
 955:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(_Node_allocator(__a))
 956:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 957:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 120


 958:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(const _Rb_tree& __x, const allocator_type& __a)
 959:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, _Node_allocator(__a))
 960:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 961:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__x._M_root() != nullptr)
 962:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x);
 963:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 964:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 965:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&&) = default;
 966:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 967:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, const allocator_type& __a)
 968:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _Rb_tree(std::move(__x), _Node_allocator(__a))
 969:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 970:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 971:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     private:
 972:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, true_type)
 973:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       noexcept(is_nothrow_default_constructible<_Compare>::value)
 974:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(std::move(__x._M_impl), std::move(__a))
 975:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 976:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 977:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a, false_type)
 978:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_impl(__x._M_impl._M_key_compare, std::move(__a))
 979:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 980:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__x._M_root() != nullptr)
 981:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_move_data(__x, false_type{});
 982:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 983:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 984:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
 985:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree(_Rb_tree&& __x, _Node_allocator&& __a)
 986:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       noexcept( noexcept(
 987:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
 988:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		 std::declval<typename _Alloc_traits::is_always_equal>())) )
 989:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _Rb_tree(std::move(__x), std::move(__a),
 990:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		 typename _Alloc_traits::is_always_equal{})
 991:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { }
 992:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 993:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 994:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       ~_Rb_tree() _GLIBCXX_NOEXCEPT
 995:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_erase(_M_begin()); }
 996:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 997:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree&
 998:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator=(const _Rb_tree& __x);
 999:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1000:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Accessors.
1001:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Compare
1002:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       key_comp() const
1003:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_impl._M_key_compare; }
1004:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1005:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1006:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       begin() _GLIBCXX_NOEXCEPT
1007:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
1008:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1009:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
1010:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       begin() const _GLIBCXX_NOEXCEPT
1011:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return const_iterator(this->_M_impl._M_header._M_left); }
1012:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1013:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1014:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       end() _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 121


1015:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
1016:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1017:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
1018:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       end() const _GLIBCXX_NOEXCEPT
1019:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
1020:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1021:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       reverse_iterator
1022:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       rbegin() _GLIBCXX_NOEXCEPT
1023:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return reverse_iterator(end()); }
1024:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1025:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_reverse_iterator
1026:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1027:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return const_reverse_iterator(end()); }
1028:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1029:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       reverse_iterator
1030:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       rend() _GLIBCXX_NOEXCEPT
1031:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return reverse_iterator(begin()); }
1032:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1033:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_reverse_iterator
1034:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       rend() const _GLIBCXX_NOEXCEPT
1035:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return const_reverse_iterator(begin()); }
1036:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1037:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_NODISCARD bool
1038:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       empty() const _GLIBCXX_NOEXCEPT
1039:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_impl._M_node_count == 0; }
1040:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1041:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       size_type
1042:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       size() const _GLIBCXX_NOEXCEPT
1043:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_impl._M_node_count; }
1044:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1045:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       size_type
1046:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       max_size() const _GLIBCXX_NOEXCEPT
1047:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
1048:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1049:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1050:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       swap(_Rb_tree& __t)
1051:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
1052:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1053:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Insert/erase.
1054:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1055:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
1056:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	pair<iterator, bool>
1057:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_unique(_Arg&& __x);
1058:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1059:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
1060:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1061:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_equal(_Arg&& __x);
1062:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1063:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1064:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1065:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1066:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1067:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
1068:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1069:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, _Arg&& __x)
1070:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1071:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
ARM GAS  /tmp/ccfXobHU.s 			page 122


1072:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return _M_insert_unique_(__pos, std::forward<_Arg>(__x), __an);
1073:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1074:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1075:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg, typename _NodeGen>
1076:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1077:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x, _NodeGen&);
1078:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1079:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Arg>
1080:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1081:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, _Arg&& __x)
1082:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1083:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1084:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return _M_insert_equal_(__pos, std::forward<_Arg>(__x), __an);
1085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1086:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1087:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
1088:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	pair<iterator, bool>
1089:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_emplace_unique(_Args&&... __args);
1090:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1091:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
1092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1093:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_emplace_equal(_Args&&... __args);
1094:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1095:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
1096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1097:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_emplace_hint_unique(const_iterator __pos, _Args&&... __args);
1098:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1099:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename... _Args>
1100:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1101:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_emplace_hint_equal(const_iterator __pos, _Args&&... __args);
1102:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1103:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Iter>
1104:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	using __same_value_type
1105:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;
1106:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1107:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1108:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1110:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1111:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
1113:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1114:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1115:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1116:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1117:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1118:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1119:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1120:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
1121:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_emplace_unique(*__first);
1122:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1123:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1124:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1125:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__enable_if_t<__same_value_type<_InputIterator>::value>
1126:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1127:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1128:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
ARM GAS  /tmp/ccfXobHU.s 			page 123


1129:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
1130:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1131:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1132:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1133:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1134:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__enable_if_t<!__same_value_type<_InputIterator>::value>
1135:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1136:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1137:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1138:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
1139:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_emplace_equal(*__first);
1140:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1141:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1142:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<iterator, bool>
1143:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_unique(const value_type& __x);
1144:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1145:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1146:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_equal(const value_type& __x);
1147:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1148:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
1149:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1150:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_unique_(const_iterator __pos, const value_type& __x,
1151:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			  _NodeGen&);
1152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1153:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1154:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __pos, const value_type& __x)
1155:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1156:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Alloc_node __an(*this);
1157:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _M_insert_unique_(__pos, __x, __an);
1158:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1159:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1160:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _NodeGen>
1161:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1162:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_equal_(const_iterator __pos, const value_type& __x,
1163:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			 _NodeGen&);
1164:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1165:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_equal_(const_iterator __pos, const value_type& __x)
1166:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1167:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Alloc_node __an(*this);
1168:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _M_insert_equal_(__pos, __x, __an);
1169:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1170:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1171:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1172:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1173:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
1174:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1176:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
1177:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
1178:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1179:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1180:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _InputIterator>
1181:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1182:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_insert_range_equal(_InputIterator __first, _InputIterator __last)
1183:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1184:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1185:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (; __first != __last; ++__first)
ARM GAS  /tmp/ccfXobHU.s 			page 124


1186:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_equal_(end(), *__first, __an);
1187:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1188:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1189:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1190:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     private:
1191:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1192:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_erase_aux(const_iterator __position);
1193:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1194:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1195:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_erase_aux(const_iterator __first, const_iterator __last);
1196:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1197:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
1198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1199:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1200:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1202:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1203:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const_iterator __position)
1204:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1205:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__glibcxx_assert(__position != end());
1206:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	const_iterator __result = __position;
1207:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	++__result;
1208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase_aux(__position);
1209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __result._M_const_cast();
1210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1212:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // LWG 2059.
1213:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1214:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1215:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(iterator __position)
1216:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1217:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__glibcxx_assert(__position != end());
1218:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator __result = __position;
1219:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	++__result;
1220:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase_aux(__position);
1221:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __result;
1222:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1223:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1224:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1225:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(iterator __position)
1226:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1227:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__glibcxx_assert(__position != end());
1228:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase_aux(__position);
1229:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1230:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1231:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1232:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const_iterator __position)
1233:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1234:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__glibcxx_assert(__position != end());
1235:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase_aux(__position);
1236:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1237:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1238:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       size_type
1239:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const key_type& __x);
1240:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1241:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1242:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  /tmp/ccfXobHU.s 			page 125


1243:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // DR 130. Associative erase should return an iterator.
1244:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _GLIBCXX_ABI_TAG_CXX11
1245:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1246:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1247:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1248:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase_aux(__first, __last);
1249:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __last._M_const_cast();
1250:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1251:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1252:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1253:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(iterator __first, iterator __last)
1254:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1255:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1256:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1257:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const_iterator __first, const_iterator __last)
1258:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_erase_aux(__first, __last); }
1259:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1260:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1261:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       erase(const key_type* __first, const key_type* __last);
1262:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1263:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1264:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       clear() _GLIBCXX_NOEXCEPT
1265:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1266:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_erase(_M_begin());
1267:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_impl._M_reset();
1268:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1269:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1270:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Set operations.
1271:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1272:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       find(const key_type& __k);
1273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1274:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
1275:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       find(const key_type& __k) const;
1276:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1277:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       size_type
1278:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       count(const key_type& __k) const;
1279:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1280:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1281:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       lower_bound(const key_type& __k)
1282:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
1283:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1284:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
1285:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       lower_bound(const key_type& __k) const
1286:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 819              		.loc 13 1286 56 view .LVU159
 820 0004 584F     		ldr	r7, .L87
 821 0006 BC68     		ldr	r4, [r7, #8]
 822              	.LBE5288:
 823              	.LBE5287:
 824              	.LBE5286:
 825              	.LBE5285:
 826              	.LBE5284:
  19:Mu/music/theory.cpp ****     std::vector<int> v = modeToSemitones.at(mode);
 827              		.loc 12 19 5 is_stmt 1 view .LVU160
 828              	.LVL43:
 829              	.LBB5335:
 830              	.LBI5284:
ARM GAS  /tmp/ccfXobHU.s 			page 126


 831              		.file 14 "/usr/include/newlib/c++/9.2.1/bits/stl_map.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // Map implementation -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Copyright (c) 1996,1997
  40:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** /** @file bits/stl_map.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  *  Do not attempt to use it directly. @headername{map}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #ifndef _STL_MAP_H
ARM GAS  /tmp/ccfXobHU.s 			page 127


  57:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #define _STL_MAP_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #include <bits/functexcept.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #include <bits/concept_check.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
  62:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #include <initializer_list>
  63:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #include <tuple>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
  65:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  66:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** {
  68:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  69:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  70:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  71:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare, typename _Alloc>
  72:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     class multimap;
  73:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
  74:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****   /**
  75:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @brief A standard container made up of (key,value) pairs, which can be
  76:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  retrieved based on a key, in logarithmic time.
  77:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *
  78:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @ingroup associative_containers
  79:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *
  80:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @tparam _Key  Type of key objects.
  81:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @tparam  _Tp  Type of mapped objects.
  82:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @tparam _Compare  Comparison function object type, defaults to less<_Key>.
  83:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  @tparam _Alloc  Allocator type, defaults to
  84:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *                  allocator<pair<const _Key, _Tp>.
  85:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *
  86:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  87:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  <a href="tables.html#66">reversible container</a>, and an
  88:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  <a href="tables.html#69">associative container</a> (using unique keys).
  89:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  For a @c map<Key,T> the key_type is Key, the mapped_type is T, and the
  90:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  value_type is std::pair<const Key,T>.
  91:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *
  92:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  Maps support bidirectional iterators.
  93:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *
  94:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  The private tree data is declared exactly the same way for map and
  95:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  multimap; the distinction is made entirely in how the tree functions are
  96:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****    *  called (*_unique versus *_equal, same as the standard).
  97:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****   */
  98:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****   template <typename _Key, typename _Tp, typename _Compare = std::less<_Key>,
  99:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    typename _Alloc = std::allocator<std::pair<const _Key, _Tp> > >
 100:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     class map
 101:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     {
 102:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     public:
 103:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef _Key					key_type;
 104:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef _Tp					mapped_type;
 105:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef std::pair<const _Key, _Tp>		value_type;
 106:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef _Compare					key_compare;
 107:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef _Alloc					allocator_type;
 108:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 109:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     private:
 110:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 111:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // concept requirements
 112:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 113:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** # if __cplusplus < 201103L
ARM GAS  /tmp/ccfXobHU.s 			page 128


 114:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 115:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** # endif
 116:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       __glibcxx_class_requires4(_Compare, bool, _Key, _Key,
 117:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				_BinaryFunctionConcept)
 118:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       __glibcxx_class_requires2(value_type, _Alloc_value_type, _SameTypeConcept)
 119:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 120:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 121:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L && defined(__STRICT_ANSI__)
 122:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       static_assert(is_same<typename _Alloc::value_type, value_type>::value,
 123:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  "std::map must have the same value_type as its allocator");
 124:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 125:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 126:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     public:
 127:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       class value_compare
 128:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : public std::binary_function<value_type, value_type, bool>
 129:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 130:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	friend class map<_Key, _Tp, _Compare, _Alloc>;
 131:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       protected:
 132:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	_Compare comp;
 133:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 134:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	value_compare(_Compare __c)
 135:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	: comp(__c) { }
 136:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       public:
 138:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	bool operator()(const value_type& __x, const value_type& __y) const
 139:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return comp(__x.first, __y.first); }
 140:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       };
 141:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 142:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     private:
 143:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// This turns a red-black tree into a [multi]map.
 144:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 145:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	rebind<value_type>::other _Pair_alloc_type;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 147:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef _Rb_tree<key_type, value_type, _Select1st<value_type>,
 148:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 		       key_compare, _Pair_alloc_type> _Rep_type;
 149:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 150:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// The actual tree structure.
 151:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       _Rep_type _M_t;
 152:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 153:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef __gnu_cxx::__alloc_traits<_Pair_alloc_type> _Alloc_traits;
 154:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****     public:
 156:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // many of these are specified differently in ISO, but the following are
 157:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // "functionally equivalent"
 158:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Alloc_traits::pointer		 pointer;
 159:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Alloc_traits::const_pointer	 const_pointer;
 160:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Alloc_traits::reference		 reference;
 161:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Alloc_traits::const_reference	 const_reference;
 162:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::iterator		 iterator;
 163:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::const_iterator	 const_iterator;
 164:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::size_type		 size_type;
 165:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::difference_type	 difference_type;
 166:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::reverse_iterator	 reverse_iterator;
 167:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;
 168:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 169:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201402L
 170:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       using node_type = typename _Rep_type::node_type;
ARM GAS  /tmp/ccfXobHU.s 			page 129


 171:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       using insert_return_type = typename _Rep_type::insert_return_type;
 172:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 173:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 174:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // [23.3.1.1] construct/copy/destroy
 175:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // (get_allocator() is also listed in this section)
 176:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 177:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 178:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Default constructor creates no elements.
 179:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 180:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus < 201103L
 181:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map() : _M_t() { }
 182:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
 183:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map() = default;
 184:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 185:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 186:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 187:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Creates a %map with no elements.
 188:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __a  An allocator object.
 190:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 191:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       explicit
 192:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(const _Compare& __comp,
 193:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 194:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a)) { }
 195:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 196:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 197:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  %Map copy constructor.
 198:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 199:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 200:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 201:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus < 201103L
 202:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(const map& __x)
 203:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(__x._M_t) { }
 204:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
 205:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(const map&) = default;
 206:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 207:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 208:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  %Map move constructor.
 209:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 210:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  The newly-created %map contains the exact contents of the moved
 211:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  instance. The moved instance is a valid, but unspecified, %map.
 212:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 213:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(map&&) = default;
 214:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 215:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 216:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Builds a %map from an initializer_list.
 217:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 218:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __comp  A comparison object.
 219:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __a  An allocator object.
 220:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 221:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements in the
 222:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  initializer_list @a __l.
 223:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This is linear in N if the range is already sorted, and NlogN
 224:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  otherwise (where N is @a __l.size()).
 225:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(initializer_list<value_type> __l,
 227:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
ARM GAS  /tmp/ccfXobHU.s 			page 130


 228:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const allocator_type& __a = allocator_type())
 229:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(__comp, _Pair_alloc_type(__a))
 230:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 231:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Allocator-extended default constructor.
 233:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       explicit
 234:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(const allocator_type& __a)
 235:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(_Pair_alloc_type(__a)) { }
 236:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 237:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Allocator-extended copy constructor.
 238:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(const map& __m, const allocator_type& __a)
 239:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(__m._M_t, _Pair_alloc_type(__a)) { }
 240:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 241:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Allocator-extended move constructor.
 242:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(map&& __m, const allocator_type& __a)
 243:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       noexcept(is_nothrow_copy_constructible<_Compare>::value
 244:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	       && _Alloc_traits::_S_always_equal())
 245:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(std::move(__m._M_t), _Pair_alloc_type(__a)) { }
 246:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 247:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Allocator-extended initialier-list constructor.
 248:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map(initializer_list<value_type> __l, const allocator_type& __a)
 249:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       : _M_t(_Pair_alloc_type(__a))
 250:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 251:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 252:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Allocator-extended range constructor.
 253:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _InputIterator>
 254:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 255:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    const allocator_type& __a)
 256:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	: _M_t(_Pair_alloc_type(__a))
 257:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 258:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 259:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 260:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 261:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 262:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __first  An input iterator.
 263:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __last  An input iterator.
 264:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 265:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 266:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 267:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
 268:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  distance(__first,__last)).
 269:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 270:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _InputIterator>
 271:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	map(_InputIterator __first, _InputIterator __last)
 272:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	: _M_t()
 273:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 274:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 275:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 276:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Builds a %map from a range.
 277:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __first  An input iterator.
 278:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __last  An input iterator.
 279:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __comp  A comparison functor.
 280:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __a  An allocator object.
 281:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 282:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Create a %map consisting of copies of the elements from
 283:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  [__first,__last).  This is linear in N if the range is
 284:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  already sorted, and NlogN otherwise (where N is
ARM GAS  /tmp/ccfXobHU.s 			page 131


 285:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  distance(__first,__last)).
 286:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 287:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _InputIterator>
 288:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	map(_InputIterator __first, _InputIterator __last,
 289:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    const _Compare& __comp,
 290:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    const allocator_type& __a = allocator_type())
 291:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	: _M_t(__comp, _Pair_alloc_type(__a))
 292:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 293:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 294:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 295:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 296:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  The dtor only erases the elements, and note that if the elements
 297:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
 298:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  way.  Managing the pointer is the user's responsibility.
 299:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       ~map() = default;
 301:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 302:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 303:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 304:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  %Map assignment operator.
 305:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 306:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Whether the allocator is copied depends on the allocator traits.
 307:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 308:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus < 201103L
 309:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map&
 310:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator=(const map& __x)
 311:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 312:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	_M_t = __x._M_t;
 313:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return *this;
 314:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 315:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
 316:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map&
 317:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator=(const map&) = default;
 318:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 319:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Move assignment operator.
 320:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map&
 321:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator=(map&&) = default;
 322:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 323:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 324:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  %Map list assignment operator.
 325:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __l  An initializer_list.
 326:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 327:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function fills a %map with copies of the elements in the
 328:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  initializer list @a __l.
 329:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 330:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that the assignment completely changes the %map and
 331:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  that the resulting %map's size is the same as the number
 332:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  of elements assigned.
 333:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 334:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       map&
 335:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator=(initializer_list<value_type> __l)
 336:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 337:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	_M_t._M_assign_unique(__l.begin(), __l.end());
 338:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return *this;
 339:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 340:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 341:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 132


 342:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Get a copy of the memory allocation object.
 343:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       allocator_type
 344:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 345:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return allocator_type(_M_t.get_allocator()); }
 346:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 347:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // iterators
 348:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 349:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read/write iterator that points to the first pair in the
 350:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  %map.
 351:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Iteration is done in ascending order according to the keys.
 352:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 353:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
 354:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       begin() _GLIBCXX_NOEXCEPT
 355:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.begin(); }
 356:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 357:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 358:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 359:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 360:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  keys.
 361:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 362:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
 363:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       begin() const _GLIBCXX_NOEXCEPT
 364:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.begin(); }
 365:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 366:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 367:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read/write iterator that points one past the last
 368:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order
 369:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  according to the keys.
 370:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 371:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
 372:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       end() _GLIBCXX_NOEXCEPT
 373:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.end(); }
 374:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 375:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 376:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 377:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 378:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the keys.
 379:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 380:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
 381:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       end() const _GLIBCXX_NOEXCEPT
 382:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.end(); }
 383:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 384:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 385:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to the last pair in
 386:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the %map.  Iteration is done in descending order according to the
 387:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  keys.
 388:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 389:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       reverse_iterator
 390:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       rbegin() _GLIBCXX_NOEXCEPT
 391:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rbegin(); }
 392:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 393:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 394:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
 395:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
 396:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  according to the keys.
 397:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 398:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_reverse_iterator
ARM GAS  /tmp/ccfXobHU.s 			page 133


 399:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 400:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rbegin(); }
 401:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 402:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 403:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read/write reverse iterator that points to one before the
 404:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first pair in the %map.  Iteration is done in descending order
 405:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  according to the keys.
 406:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 407:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       reverse_iterator
 408:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       rend() _GLIBCXX_NOEXCEPT
 409:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rend(); }
 410:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 411:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 412:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 413:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 414:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  order according to the keys.
 415:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 416:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_reverse_iterator
 417:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       rend() const _GLIBCXX_NOEXCEPT
 418:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rend(); }
 419:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 420:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 421:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 422:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points to the first pair
 423:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  in the %map.  Iteration is done in ascending order according to the
 424:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  keys.
 425:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 426:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
 427:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       cbegin() const noexcept
 428:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.begin(); }
 429:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 430:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 431:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 432:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pair in the %map.  Iteration is done in ascending order according to
 433:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the keys.
 434:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 435:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
 436:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       cend() const noexcept
 437:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.end(); }
 438:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 439:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 440:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to the
 441:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  last pair in the %map.  Iteration is done in descending order
 442:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  according to the keys.
 443:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 444:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_reverse_iterator
 445:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       crbegin() const noexcept
 446:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rbegin(); }
 447:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 448:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 449:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a read-only (constant) reverse iterator that points to one
 450:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  before the first pair in the %map.  Iteration is done in descending
 451:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  order according to the keys.
 452:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 453:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_reverse_iterator
 454:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       crend() const noexcept
 455:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.rend(); }
ARM GAS  /tmp/ccfXobHU.s 			page 134


 456:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 457:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 458:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // capacity
 459:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /** Returns true if the %map is empty.  (Thus begin() would equal
 460:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  end().)
 461:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       */
 462:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       _GLIBCXX_NODISCARD bool
 463:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       empty() const _GLIBCXX_NOEXCEPT
 464:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.empty(); }
 465:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 466:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /** Returns the size of the %map.  */
 467:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       size_type
 468:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       size() const _GLIBCXX_NOEXCEPT
 469:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.size(); }
 470:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 471:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /** Returns the maximum size of the %map.  */
 472:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       size_type
 473:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       max_size() const _GLIBCXX_NOEXCEPT
 474:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.max_size(); }
 475:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 476:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // [23.3.1.2] element access
 477:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 478:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Subscript ( @c [] ) access to %map data.
 479:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 480:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 481:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 482:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )
 483:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  operator.  Returns data associated with the key specified in
 484:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  subscript.  If the key does not exist, a pair with that key
 485:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  is created using default values, which is then returned.
 486:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 487:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Lookup requires logarithmic time.
 488:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 489:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       mapped_type&
 490:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator[](const key_type& __k)
 491:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 492:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	// concept requirements
 493:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 494:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 495:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 496:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 497:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 498:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 499:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 500:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					    std::tuple<const key_type&>(__k),
 501:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					    std::tuple<>());
 502:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
 503:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __i = insert(__i, value_type(__k, mapped_type()));
 504:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 505:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 506:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 507:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 508:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 509:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       mapped_type&
 510:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       operator[](key_type&& __k)
 511:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 512:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	// concept requirements
ARM GAS  /tmp/ccfXobHU.s 			page 135


 513:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)
 514:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 515:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 516:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	// __i->first is greater than or equivalent to __k.
 517:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 518:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 519:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					std::forward_as_tuple(std::move(__k)),
 520:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					std::tuple<>());
 521:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 522:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 523:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 524:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 525:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 526:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // DR 464. Suggestion for new member functions in standard containers.
 527:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 528:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Access to %map data.
 529:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __k  The key for which data should be retrieved.
 530:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A reference to the data whose key is equivalent to @a __k, if
 531:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           such a data is present in the %map.
 532:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 533:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 534:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       mapped_type&
 535:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       at(const key_type& __k)
 536:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 537:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator __i = lower_bound(__k);
 538:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 539:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 540:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 541:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 542:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 543:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const mapped_type&
 544:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       at(const key_type& __k) const
 832              		.loc 14 544 7 view .LVU161
 833              	.LBB5331:
 834              	.LBB5313:
 835              	.LBI5286:
 545:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 546:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	const_iterator __i = lower_bound(__k);
 547:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	if (__i == end() || key_comp()(__k, (*__i).first))
 548:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 549:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 550:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 551:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 552:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // modifiers
 553:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 554:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 555:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 556:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 557:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 558:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 559:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *	        part of the pair constructor).
 560:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 561:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 562:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 563:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 564:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 565:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
ARM GAS  /tmp/ccfXobHU.s 			page 136


 566:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the %map.
 567:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 568:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 569:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 570:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 571:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 572:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename... _Args>
 573:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	std::pair<iterator, bool>
 574:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	emplace(_Args&&... __args)
 575:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_emplace_unique(std::forward<_Args>(__args)...); }
 576:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 577:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 578:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 579:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 580:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 581:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                should be inserted.
 582:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 583:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 584:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *	         part of the pair constructor).
 585:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 586:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 587:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          std::pair).
 588:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 589:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 590:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 591:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  does.
 592:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 593:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 594:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  cause no gains in efficiency.
 595:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 596:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  See
 597:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 598:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  for more on @a hinting.
 599:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 600:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 601:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 602:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename... _Args>
 603:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator
 604:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 605:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 606:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return _M_t._M_emplace_hint_unique(__pos,
 607:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					     std::forward<_Args>(__args)...);
 608:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 609:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 610:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201402L
 612:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Extract a node.
 613:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       node_type
 614:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       extract(const_iterator __pos)
 615:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       {
 616:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	__glibcxx_assert(__pos != end());
 617:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return _M_t.extract(__pos);
 618:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       }
 619:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 620:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Extract a node.
 621:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       node_type
 622:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       extract(const key_type& __x)
ARM GAS  /tmp/ccfXobHU.s 			page 137


 623:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.extract(__x); }
 624:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 625:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Re-insert an extracted node.
 626:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert_return_type
 627:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(node_type&& __nh)
 628:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_reinsert_node_unique(std::move(__nh)); }
 629:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 630:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /// Re-insert an extracted node.
 631:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
 632:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(const_iterator __hint, node_type&& __nh)
 633:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_reinsert_node_hint_unique(__hint, std::move(__nh)); }
 634:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 635:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename, typename>
 636:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	friend class std::_Rb_tree_merge_helper;
 637:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 638:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _C2>
 639:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	void
 640:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	merge(map<_Key, _Tp, _C2, _Alloc>& __source)
 641:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 642:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<map, _C2>;
 643:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  _M_t._M_merge_unique(_Merge_helper::_S_get_tree(__source));
 644:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 645:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 646:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _C2>
 647:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	void
 648:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	merge(map<_Key, _Tp, _C2, _Alloc>&& __source)
 649:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ merge(__source); }
 650:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 651:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _C2>
 652:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	void
 653:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	merge(multimap<_Key, _Tp, _C2, _Alloc>& __source)
 654:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 655:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<map, _C2>;
 656:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  _M_t._M_merge_unique(_Merge_helper::_S_get_tree(__source));
 657:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 658:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 659:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _C2>
 660:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	void
 661:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	merge(multimap<_Key, _Tp, _C2, _Alloc>&& __source)
 662:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ merge(__source); }
 663:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif // C++17
 664:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 665:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201402L
 666:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #define __cpp_lib_map_try_emplace 201411
 667:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 668:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 669:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 670:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 671:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                the map.
 672:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair
 673:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                instance.
 674:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 675:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 676:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 677:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           is true if the pair was actually inserted.
 678:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 679:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
ARM GAS  /tmp/ccfXobHU.s 			page 138


 680:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the %map.
 681:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 682:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 683:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  If a %pair is not inserted, this function has no effect.
 684:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 685:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 686:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 687:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename... _Args>
 688:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	pair<iterator, bool>
 689:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	try_emplace(const key_type& __k, _Args&&... __args)
 690:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 691:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i = lower_bound(__k);
 692:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__i == end() || key_comp()(__k, (*__i).first))
 693:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 694:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      __i = emplace_hint(__i, std::piecewise_construct,
 695:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(__k),
 696:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(
 697:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				   std::forward<_Args>(__args)...));
 698:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return {__i, true};
 699:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
 700:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return {__i, false};
 701:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 702:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 703:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // move-capable overload
 704:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename... _Args>
 705:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	pair<iterator, bool>
 706:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	try_emplace(key_type&& __k, _Args&&... __args)
 707:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 708:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i = lower_bound(__k);
 709:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__i == end() || key_comp()(__k, (*__i).first))
 710:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 711:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      __i = emplace_hint(__i, std::piecewise_construct,
 712:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(std::move(__k)),
 713:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(
 714:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				   std::forward<_Args>(__args)...));
 715:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return {__i, true};
 716:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
 717:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return {__i, false};
 718:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 719:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 720:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 721:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to build and insert a std::pair into the %map.
 722:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 723:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 724:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                  pair should be inserted.
 725:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 726:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                the map.
 727:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __args  Arguments used to generate the .second for a new pair
 728:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                instance.
 729:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return An iterator that points to the element with key of the
 730:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          std::pair built from @a __args (may or may not be that
 731:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          std::pair).
 732:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 733:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function is not concerned about whether the insertion took place,
 734:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  and thus does not return a boolean like the single-argument
 735:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  try_emplace() does. However, if insertion did not take place,
 736:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  this function has no effect.
ARM GAS  /tmp/ccfXobHU.s 			page 139


 737:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that the first parameter is only a hint and can potentially
 738:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  improve the performance of the insertion process. A bad hint would
 739:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  cause no gains in efficiency.
 740:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 741:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  See
 742:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 743:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  for more on @a hinting.
 744:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 745:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 746:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 747:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename... _Args>
 748:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator
 749:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	try_emplace(const_iterator __hint, const key_type& __k,
 750:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 		    _Args&&... __args)
 751:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 752:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i;
 753:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 754:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__true_hint.second)
 755:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    __i = emplace_hint(iterator(__true_hint.second),
 756:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::piecewise_construct,
 757:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::forward_as_tuple(__k),
 758:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::forward_as_tuple(
 759:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward<_Args>(__args)...));
 760:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  else
 761:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    __i = iterator(__true_hint.first);
 762:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return __i;
 763:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 764:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 765:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // move-capable overload
 766:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename... _Args>
 767:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator
 768:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 769:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 770:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i;
 771:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 772:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__true_hint.second)
 773:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    __i = emplace_hint(iterator(__true_hint.second),
 774:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::piecewise_construct,
 775:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::forward_as_tuple(std::move(__k)),
 776:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			       std::forward_as_tuple(
 777:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward<_Args>(__args)...));
 778:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  else
 779:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    __i = iterator(__true_hint.first);
 780:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return __i;
 781:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 782:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 783:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 784:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 785:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 786:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 787:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *	     creation of pairs).
 788:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 789:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that
 790:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is
 791:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 792:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 793:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
ARM GAS  /tmp/ccfXobHU.s 			page 140


 794:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 795:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 796:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 797:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 798:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @{
 799:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 800:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       std::pair<iterator, bool>
 801:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(const value_type& __x)
 802:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_insert_unique(__x); }
 803:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 804:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 805:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 806:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 807:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       std::pair<iterator, bool>
 808:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(value_type&& __x)
 809:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_insert_unique(std::move(__x)); }
 810:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 811:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Pair>
 812:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair>::value,
 813:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 		      pair<iterator, bool>>
 814:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert(_Pair&& __x)
 815:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_emplace_unique(std::forward<_Pair>(__x)); }
 816:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 817:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // @}
 818:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 819:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 820:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 821:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to insert a list of std::pairs into the %map.
 822:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __list  A std::initializer_list<value_type> of pairs to be
 823:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                  inserted.
 824:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 825:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 826:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 827:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       void
 828:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(std::initializer_list<value_type> __list)
 829:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { insert(__list.begin(), __list.end()); }
 830:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 831:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 832:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 833:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to insert a std::pair into the %map.
 834:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __position  An iterator that serves as a hint as to where the
 835:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                    pair should be inserted.
 836:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 837:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *               of pairs).
 838:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 839:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 840:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 841:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 842:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function is not concerned about whether the insertion
 843:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  took place, and thus does not return a boolean like the
 844:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  single-argument insert() does.  Note that the first
 845:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  parameter is only a hint and can potentially improve the
 846:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  performance of the insertion process.  A bad hint would
 847:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  cause no gains in efficiency.
 848:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 849:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  See
 850:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
ARM GAS  /tmp/ccfXobHU.s 			page 141


 851:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  for more on @a hinting.
 852:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 853:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time (if the hint is not taken).
 854:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @{
 855:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 856:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
 857:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 858:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(const_iterator __position, const value_type& __x)
 859:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
 860:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(iterator __position, const value_type& __x)
 861:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 862:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_insert_unique_(__position, __x); }
 863:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 864:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
 865:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 866:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 867:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
 868:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       insert(const_iterator __position, value_type&& __x)
 869:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t._M_insert_unique_(__position, std::move(__x)); }
 870:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 871:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Pair>
 872:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair>::value, iterator>
 873:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert(const_iterator __position, _Pair&& __x)
 874:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 875:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return _M_t._M_emplace_hint_unique(__position,
 876:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 					     std::forward<_Pair>(__x));
 877:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 878:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 879:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // @}
 880:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 881:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 882:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Template function that attempts to insert a range of elements.
 883:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 884:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                   inserted.
 885:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 886:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 887:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Complexity similar to that of the range constructor.
 888:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 889:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _InputIterator>
 890:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	void
 891:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert(_InputIterator __first, _InputIterator __last)
 892:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ _M_t._M_insert_range_unique(__first, __last); }
 893:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 894:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201402L
 895:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #define __cpp_lib_map_insertion 201411
 896:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 897:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 898:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 899:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                the map.
 900:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair
 901:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                instance.
 902:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 903:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  A pair, of which the first element is an iterator that
 904:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           points to the possibly inserted pair, and the second is
 905:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           a bool that is true if the pair was actually inserted.
 906:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 907:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
ARM GAS  /tmp/ccfXobHU.s 			page 142


 908:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 909:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
 910:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
 911:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  is assigned from __obj.
 912:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 913:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 914:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 915:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename _Obj>
 916:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	pair<iterator, bool>
 917:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert_or_assign(const key_type& __k, _Obj&& __obj)
 918:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 919:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i = lower_bound(__k);
 920:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__i == end() || key_comp()(__k, (*__i).first))
 921:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 922:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      __i = emplace_hint(__i, std::piecewise_construct,
 923:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(__k),
 924:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(
 925:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				   std::forward<_Obj>(__obj)));
 926:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return {__i, true};
 927:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
 928:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  (*__i).second = std::forward<_Obj>(__obj);
 929:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return {__i, false};
 930:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 931:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 932:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // move-capable overload
 933:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename _Obj>
 934:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	pair<iterator, bool>
 935:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert_or_assign(key_type&& __k, _Obj&& __obj)
 936:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 937:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i = lower_bound(__k);
 938:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__i == end() || key_comp()(__k, (*__i).first))
 939:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 940:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      __i = emplace_hint(__i, std::piecewise_construct,
 941:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(std::move(__k)),
 942:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				 std::forward_as_tuple(
 943:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				   std::forward<_Obj>(__obj)));
 944:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return {__i, true};
 945:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
 946:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  (*__i).second = std::forward<_Obj>(__obj);
 947:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return {__i, false};
 948:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 949:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 950:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
 951:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Attempts to insert or assign a std::pair into the %map.
 952:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 953:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                  pair should be inserted.
 954:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 955:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                the map.
 956:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __obj  Argument used to generate the .second for a pair
 957:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                instance.
 958:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 959:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return An iterator that points to the element with key of
 960:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           @a __x (may or may not be the %pair passed in).
 961:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 962:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function attempts to insert a (key, value) %pair into the %map.
 963:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  A %map relies on unique keys and thus a %pair is only inserted if its
 964:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  first element (the key) is not already present in the %map.
ARM GAS  /tmp/ccfXobHU.s 			page 143


 965:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  If the %pair was already in the %map, the .second of the %pair
 966:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  is assigned from __obj.
 967:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
 968:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Insertion requires logarithmic time.
 969:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
 970:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename _Obj>
 971:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator
 972:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert_or_assign(const_iterator __hint,
 973:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 			 const key_type& __k, _Obj&& __obj)
 974:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 975:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i;
 976:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 977:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__true_hint.second)
 978:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 979:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return emplace_hint(iterator(__true_hint.second),
 980:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::piecewise_construct,
 981:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::forward_as_tuple(__k),
 982:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::forward_as_tuple(
 983:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				    std::forward<_Obj>(__obj)));
 984:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
 985:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __i = iterator(__true_hint.first);
 986:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  (*__i).second = std::forward<_Obj>(__obj);
 987:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return __i;
 988:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
 989:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 990:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // move-capable overload
 991:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template <typename _Obj>
 992:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	iterator
 993:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 994:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{
 995:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  iterator __i;
 996:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  auto __true_hint = _M_t._M_get_insert_hint_unique_pos(__hint, __k);
 997:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  if (__true_hint.second)
 998:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    {
 999:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	      return emplace_hint(iterator(__true_hint.second),
1000:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::piecewise_construct,
1001:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::forward_as_tuple(std::move(__k)),
1002:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				  std::forward_as_tuple(
1003:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 				    std::forward<_Obj>(__obj)));
1004:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	    }
1005:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __i = iterator(__true_hint.first);
1006:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  (*__i).second = std::forward<_Obj>(__obj);
1007:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  return __i;
1008:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	}
1009:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1010:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1011:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
1012:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1013:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
1014:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1015:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Erases an element from a %map.
1016:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
1017:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return An iterator pointing to the element immediately following
1018:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          @a position prior to the element being erased. If no such
1019:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *          element exists, end() is returned.
1020:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1021:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
ARM GAS  /tmp/ccfXobHU.s 			page 144


1022:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
1023:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
1024:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
1025:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the pointer is the user's responsibility.
1026:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1027:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @{
1028:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1029:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
1030:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(const_iterator __position)
1031:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.erase(__position); }
1032:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1033:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // LWG 2059
1034:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       _GLIBCXX_ABI_TAG_CXX11
1035:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
1036:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(iterator __position)
1037:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.erase(__position); }
1038:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // @}
1039:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
1040:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1041:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Erases an element from a %map.
1042:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
1043:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1044:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function erases an element, pointed to by the given
1045:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  iterator, from a %map.  Note that this function only erases
1046:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the element, and that if the element is itself a pointer,
1047:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the pointed-to memory is not touched in any way.  Managing
1048:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the pointer is the user's responsibility.
1049:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1050:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       void
1051:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(iterator __position)
1052:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t.erase(__position); }
1053:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1054:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1055:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1056:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Erases elements according to the provided key.
1057:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of element to be erased.
1058:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  The number of elements erased.
1059:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1060:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function erases all the elements located by the given key from
1061:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  a %map.
1062:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
1063:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
1064:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
1065:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1066:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       size_type
1067:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(const key_type& __x)
1068:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.erase(__x); }
1069:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1070:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus >= 201103L
1071:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1072:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // DR 130. Associative erase should return an iterator.
1073:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1074:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Erases a [first,last) range of elements from a %map.
1075:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
1076:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                   erased.
1077:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
1078:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                be erased.
ARM GAS  /tmp/ccfXobHU.s 			page 145


1079:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return The iterator @a __last.
1080:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1081:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
1082:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
1083:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
1084:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
1085:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1086:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
1087:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(const_iterator __first, const_iterator __last)
1088:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.erase(__first, __last); }
1089:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #else
1090:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1091:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Erases a [__first,__last) range of elements from a %map.
1092:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
1093:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                   erased.
1094:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param __last Iterator pointing to the end of the range to
1095:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *                be erased.
1096:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1097:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function erases a sequence of elements from a %map.
1098:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Note that this function only erases the element, and that if
1099:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
1100:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
1101:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1102:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       void
1103:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       erase(iterator __first, iterator __last)
1104:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t.erase(__first, __last); }
1105:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1106:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1107:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1108:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Swaps data with another %map.
1109:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  A %map of the same element and allocator types.
1110:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1111:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This exchanges the elements between two maps in constant
1112:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  time.  (It is only swapping a pointer, an integer, and an
1113:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  instance of the @c Compare type (which itself is often
1114:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  stateless and empty), so it should be quite fast.)  Note
1115:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  that the global std::swap() function is specialized such
1116:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  that std::swap(m1,m2) will feed to this function.
1117:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1118:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1119:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1120:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       void
1121:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       swap(map& __x)
1122:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
1123:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t.swap(__x._M_t); }
1124:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1125:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1126:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Erases all elements in a %map.  Note that this function only
1127:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  erases the elements, and that if the elements themselves are
1128:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pointers, the pointed-to memory is not touched in any way.
1129:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Managing the pointer is the user's responsibility.
1130:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1131:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       void
1132:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       clear() _GLIBCXX_NOEXCEPT
1133:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { _M_t.clear(); }
1134:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1135:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // observers
ARM GAS  /tmp/ccfXobHU.s 			page 146


1136:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1137:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns the key comparison object out of which the %map was
1138:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  constructed.
1139:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1140:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       key_compare
1141:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       key_comp() const
1142:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.key_comp(); }
1143:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1144:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1145:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  Returns a value comparison object, built from the key comparison
1146:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  object out of which the %map was constructed.
1147:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1148:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       value_compare
1149:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       value_comp() const
1150:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return value_compare(_M_t.key_comp()); }
1151:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1152:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       // [23.3.1.3] map operations
1153:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1154:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1155:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1156:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1157:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1158:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
1159:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           found.
1160:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1161:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1162:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the key matches.  If successful the function returns an iterator
1163:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pointing to the sought after %pair.  If unsuccessful it returns the
1164:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  past-the-end ( @c end() ) iterator.
1165:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1166:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1167:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
1168:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       find(const key_type& __x)
1169:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.find(__x); }
1170:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1171:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201103L
1172:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Kt>
1173:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	auto
1174:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	find(const _Kt& __x) -> decltype(_M_t._M_find_tr(__x))
1175:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1176:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1177:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@}
1178:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1179:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1180:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1181:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Tries to locate an element in a %map.
1182:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) %pair to be located.
1183:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  Read-only (constant) iterator pointing to sought-after
1184:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           element, or end() if not found.
1185:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1186:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function takes a key and tries to locate the element with which
1187:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  the key matches.  If successful the function returns a constant
1188:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  iterator pointing to the sought after %pair. If unsuccessful it
1189:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  returns the past-the-end ( @c end() ) iterator.
1190:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1191:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1192:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
ARM GAS  /tmp/ccfXobHU.s 			page 147


1193:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       find(const key_type& __x) const
1194:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.find(__x); }
1195:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1196:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201103L
1197:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Kt>
1198:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	auto
1199:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	find(const _Kt& __x) const -> decltype(_M_t._M_find_tr(__x))
1200:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x); }
1201:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1202:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@}
1203:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1204:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1205:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1206:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Finds the number of elements with given key.
1207:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pairs to be located.
1208:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  Number of elements with specified key.
1209:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1210:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function only makes sense for multimaps; for map the result will
1211:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  either be 0 (not present) or 1 (present).
1212:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1213:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       size_type
1214:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       count(const key_type& __x) const
1215:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
1216:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1217:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201103L
1218:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Kt>
1219:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	auto
1220:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	count(const _Kt& __x) const -> decltype(_M_t._M_count_tr(__x))
1221:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_count_tr(__x); }
1222:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1223:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@}
1224:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1225:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201703L
1226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1227:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1228:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief  Finds whether an element with the given key exists.
1229:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pairs to be located.
1230:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  True if there is an element with the specified key.
1231:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1232:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       bool
1233:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       contains(const key_type& __x) const
1234:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.find(__x) != _M_t.end(); }
1235:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1236:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Kt>
1237:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	auto
1238:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	contains(const _Kt& __x) const
1239:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	-> decltype(_M_t._M_find_tr(__x), void(), true)
1240:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return _M_t._M_find_tr(__x) != _M_t.end(); }
1241:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@}
1242:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1243:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1244:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1245:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1246:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Finds the beginning of a subsequence matching given key.
1247:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pair to be located.
1248:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  Iterator pointing to first element equal to or greater
1249:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           than key, or end().
ARM GAS  /tmp/ccfXobHU.s 			page 148


1250:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1251:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function returns the first element of a subsequence of elements
1252:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  that matches the given key.  If unsuccessful it returns an iterator
1253:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pointing to the first element that has a greater value than given key
1254:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  or end() if no such element exists.
1255:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1256:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       iterator
1257:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       lower_bound(const key_type& __x)
1258:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.lower_bound(__x); }
1259:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1260:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #if __cplusplus > 201103L
1261:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       template<typename _Kt>
1262:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	auto
1263:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	lower_bound(const _Kt& __x)
1264:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	-> decltype(iterator(_M_t._M_lower_bound_tr(__x)))
1265:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	{ return iterator(_M_t._M_lower_bound_tr(__x)); }
1266:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
1267:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@}
1268:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
1269:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       //@{
1270:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       /**
1271:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @brief Finds the beginning of a subsequence matching given key.
1272:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @param  __x  Key of (key, value) pair to be located.
1273:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  @return  Read-only (constant) iterator pointing to first element
1274:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *           equal to or greater than key, or end().
1275:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *
1276:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  This function returns the first element of a subsequence of elements
1277:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  that matches the given key.  If unsuccessful it returns an iterator
1278:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  pointing to the first element that has a greater value than given key
1279:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        *  or end() if no such element exists.
1280:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****        */
1281:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       const_iterator
1282:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       lower_bound(const key_type& __x) const
 836              		.loc 14 1282 7 view .LVU162
 837              	.LBB5311:
 838              	.LBI5287:
1285:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 839              		.loc 13 1285 7 view .LVU163
 840              	.LBB5309:
 841              	.LBB5289:
 842              	.LBI5289:
 759:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 843              		.loc 13 759 7 view .LVU164
 759:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 844              		.loc 13 759 7 is_stmt 0 view .LVU165
 845              	.LBE5289:
 846              	.LBB5290:
 847              	.LBI5290:
1287:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1288:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1289:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       upper_bound(const key_type& __k)
1290:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1291:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1292:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       const_iterator
1293:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       upper_bound(const key_type& __k) const
1294:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_upper_bound(_M_begin(), _M_end(), __k); }
1295:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 149


1296:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<iterator, iterator>
1297:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       equal_range(const key_type& __k);
1298:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1299:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<const_iterator, const_iterator>
1300:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       equal_range(const key_type& __k) const;
1301:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201402L
1303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1304:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1305:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1306:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k)
1307:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1308:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1309:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __const_this->_M_find_tr(__k)._M_const_cast();
1310:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1311:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1312:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1313:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1314:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	const_iterator
1315:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_find_tr(const _Kt& __k) const
1316:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1317:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __j = _M_lower_bound_tr(__k);
1318:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__j != end() && _M_impl._M_key_compare(__k, _S_key(__j._M_node)))
1319:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __j = end();
1320:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __j;
1321:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1322:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1323:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1324:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1325:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	size_type
1326:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_count_tr(const _Kt& __k) const
1327:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1328:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __p = _M_equal_range_tr(__k);
1329:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return std::distance(__p.first, __p.second);
1330:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1331:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1332:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1333:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1334:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1335:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k)
1336:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1337:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1338:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __const_this->_M_lower_bound_tr(__k)._M_const_cast();
1339:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1340:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1341:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1342:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1343:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	const_iterator
1344:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_lower_bound_tr(const _Kt& __k) const
1345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1346:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __x = _M_begin();
1347:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __y = _M_end();
1348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  while (__x != 0)
1349:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (!_M_impl._M_key_compare(_S_key(__x), __k))
1350:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1351:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__y = __x;
1352:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__x = _S_left(__x);
ARM GAS  /tmp/ccfXobHU.s 			page 150


1353:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1354:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1355:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __x = _S_right(__x);
1356:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return const_iterator(__y);
1357:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1358:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1359:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1360:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1361:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator
1362:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k)
1363:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1364:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1365:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return __const_this->_M_upper_bound_tr(__k)._M_const_cast();
1366:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1367:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1368:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1369:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1370:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	const_iterator
1371:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_upper_bound_tr(const _Kt& __k) const
1372:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1373:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __x = _M_begin();
1374:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __y = _M_end();
1375:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  while (__x != 0)
1376:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (_M_impl._M_key_compare(__k, _S_key(__x)))
1377:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1378:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__y = __x;
1379:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__x = _S_left(__x);
1380:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1381:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1382:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __x = _S_right(__x);
1383:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return const_iterator(__y);
1384:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1385:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1386:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1387:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1388:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	pair<iterator, iterator>
1389:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k)
1390:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1391:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  const _Rb_tree* __const_this = this;
1392:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __ret = __const_this->_M_equal_range_tr(__k);
1393:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return { __ret.first._M_const_cast(), __ret.second._M_const_cast() };
1394:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1395:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1396:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Kt,
1397:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       typename _Req = __has_is_transparent_t<_Compare, _Kt>>
1398:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	pair<const_iterator, const_iterator>
1399:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_equal_range_tr(const _Kt& __k) const
1400:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1401:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __low = _M_lower_bound_tr(__k);
1402:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __high = __low;
1403:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto& __cmp = _M_impl._M_key_compare;
1404:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  while (__high != end() && !__cmp(__k, _S_key(__high._M_node)))
1405:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    ++__high;
1406:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return { __low, __high };
1407:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1408:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1409:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 151


1410:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Debugging.
1411:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       bool
1412:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       __rb_verify() const;
1413:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1414:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1415:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree&
1416:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator=(_Rb_tree&&)
1417:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       noexcept(_Alloc_traits::_S_nothrow_move()
1418:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       && is_nothrow_move_assignable<_Compare>::value);
1419:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1420:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Iterator>
1421:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1422:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_assign_unique(_Iterator, _Iterator);
1423:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1424:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Iterator>
1425:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1426:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_assign_equal(_Iterator, _Iterator);
1427:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1428:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     private:
1429:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Move elements from container with equal allocator.
1430:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1431:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_move_data(_Rb_tree& __x, true_type)
1432:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_impl._M_move_data(__x._M_impl); }
1433:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1434:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Move elements from container with possibly non-equal allocator,
1435:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // which might result in a copy not a move.
1436:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1437:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_move_data(_Rb_tree&, false_type);
1438:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1439:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Move assignment from container with equal allocator.
1440:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1441:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, true_type);
1442:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1443:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Move assignment from container with possibly non-equal allocator,
1444:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // which might result in a copy not a move.
1445:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1446:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_move_assign(_Rb_tree&, false_type);
1447:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1448:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1449:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus > 201402L
1450:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     public:
1451:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Re-insert an extracted node.
1452:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       insert_return_type
1453:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reinsert_node_unique(node_type&& __nh)
1454:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1455:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	insert_return_type __ret;
1456:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__nh.empty())
1457:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __ret.position = end();
1458:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1459:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1460:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1461:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1462:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    auto __res = _M_get_insert_unique_pos(__nh._M_key());
1463:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__res.second)
1464:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1465:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret.position
1466:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
ARM GAS  /tmp/ccfXobHU.s 			page 152


1467:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__nh._M_ptr = nullptr;
1468:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret.inserted = true;
1469:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1470:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1471:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1472:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret.node = std::move(__nh);
1473:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret.position = iterator(__res.first);
1474:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret.inserted = false;
1475:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1476:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1477:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __ret;
1478:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1479:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1480:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Re-insert an extracted node.
1481:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1482:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reinsert_node_equal(node_type&& __nh)
1483:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1484:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator __ret;
1485:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__nh.empty())
1486:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __ret = end();
1487:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1488:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1489:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1490:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    auto __res = _M_get_insert_equal_pos(__nh._M_key());
1491:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__res.second)
1492:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1493:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1494:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1495:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __nh._M_ptr = nullptr;
1496:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1497:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __ret;
1498:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1499:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1500:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Re-insert an extracted node.
1501:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
1502:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reinsert_node_hint_unique(const_iterator __hint, node_type&& __nh)
1503:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1504:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator __ret;
1505:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__nh.empty())
1506:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __ret = end();
1507:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1508:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1509:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1510:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_unique_pos(__hint, __nh._M_key());
1511:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__res.second)
1512:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1513:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1514:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__nh._M_ptr = nullptr;
1515:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1516:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1517:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __ret = iterator(__res.first);
1518:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1519:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __ret;
1520:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1521:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1522:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Re-insert an extracted node.
1523:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator
ARM GAS  /tmp/ccfXobHU.s 			page 153


1524:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reinsert_node_hint_equal(const_iterator __hint, node_type&& __nh)
1525:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1526:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	iterator __ret;
1527:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__nh.empty())
1528:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __ret = end();
1529:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1530:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1531:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __glibcxx_assert(_M_get_Node_allocator() == *__nh._M_alloc);
1532:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    auto __res = _M_get_insert_hint_equal_pos(__hint, __nh._M_key());
1533:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__res.second)
1534:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __ret = _M_insert_node(__res.first, __res.second, __nh._M_ptr);
1535:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    else
1536:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __ret = _M_insert_equal_lower_node(__nh._M_ptr);
1537:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __nh._M_ptr = nullptr;
1538:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1539:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __ret;
1540:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1541:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1542:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Extract a node.
1543:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       node_type
1544:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       extract(const_iterator __pos)
1545:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1546:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	auto __ptr = _Rb_tree_rebalance_for_erase(
1547:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __pos._M_const_cast()._M_node, _M_impl._M_header);
1548:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	--_M_impl._M_node_count;
1549:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return { static_cast<_Link_type>(__ptr), _M_get_Node_allocator() };
1550:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1551:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1552:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Extract a node.
1553:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       node_type
1554:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       extract(const key_type& __k)
1555:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1556:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	node_type __nh;
1557:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	auto __pos = find(__k);
1558:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (__pos != end())
1559:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __nh = extract(const_iterator(__pos));
1560:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __nh;
1561:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1562:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1563:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Compare2>
1564:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	using _Compatible_tree
1565:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  = _Rb_tree<_Key, _Val, _KeyOfValue, _Compare2, _Alloc>;
1566:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1567:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename, typename>
1568:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	friend class _Rb_tree_merge_helper;
1569:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1570:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Merge from a compatible container into one with unique keys.
1571:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Compare2>
1572:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1573:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_merge_unique(_Compatible_tree<_Compare2>& __src) noexcept
1574:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1575:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1576:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1577:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
1578:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto __pos = __i++;
1579:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto __res = _M_get_insert_unique_pos(_KeyOfValue()(*__pos));
1580:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (__res.second)
ARM GAS  /tmp/ccfXobHU.s 			page 154


1581:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		{
1582:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1583:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1584:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1585:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  --__src_impl._M_node_count;
1586:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1587:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1588:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		}
1589:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
1590:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1591:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1592:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       /// Merge from a compatible container into one with equivalent keys.
1593:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       template<typename _Compare2>
1594:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	void
1595:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_merge_equal(_Compatible_tree<_Compare2>& __src) noexcept
1596:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1597:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  using _Merge_helper = _Rb_tree_merge_helper<_Rb_tree, _Compare2>;
1598:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
1599:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
1600:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto __pos = __i++;
1601:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto __res = _M_get_insert_equal_pos(_KeyOfValue()(*__pos));
1602:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (__res.second)
1603:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		{
1604:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  auto& __src_impl = _Merge_helper::_S_get_impl(__src);
1605:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  auto __ptr = _Rb_tree_rebalance_for_erase(
1606:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      __pos._M_node, __src_impl._M_header);
1607:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  --__src_impl._M_node_count;
1608:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  _M_insert_node(__res.first, __res.second,
1609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				 static_cast<_Link_type>(__ptr));
1610:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		}
1611:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
1612:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1613:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif // C++17
1614:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1615:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
1616:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator==(const _Rb_tree& __x, const _Rb_tree& __y)
1617:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1618:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __x.size() == __y.size()
1619:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  && std::equal(__x.begin(), __x.end(), __y.begin());
1620:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1621:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1622:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool
1623:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator<(const _Rb_tree& __x, const _Rb_tree& __y)
1624:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1625:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return std::lexicographical_compare(__x.begin(), __x.end(),
1626:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 					    __y.begin(), __y.end());
1627:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1628:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1629:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1630:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator!=(const _Rb_tree& __x, const _Rb_tree& __y)
1631:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return !(__x == __y); }
1632:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1633:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1634:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator>(const _Rb_tree& __x, const _Rb_tree& __y)
1635:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return __y < __x; }
1636:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1637:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
ARM GAS  /tmp/ccfXobHU.s 			page 155


1638:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator<=(const _Rb_tree& __x, const _Rb_tree& __y)
1639:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return !(__y < __x); }
1640:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1641:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       friend bool _GLIBCXX_DEPRECATED
1642:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       operator>=(const _Rb_tree& __x, const _Rb_tree& __y)
1643:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return !(__x < __y); }
1644:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     };
1645:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1646:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1647:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1648:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     inline void
1649:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,
1650:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
1651:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     { __x.swap(__y); }
1652:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1653:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1654:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1655:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1656:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
1657:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1658:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_move_data(_Rb_tree& __x, false_type)
1659:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1660:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
1661:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_move_data(__x, true_type());
1662:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else
1663:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1664:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
1665:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __lbd =
1666:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    [&__an](const value_type& __cval)
1667:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
1668:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1669:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      return __an(std::move_if_noexcept(__val));
1670:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    };
1671:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1672:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1673:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1674:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1675:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1676:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1677:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     inline void
1678:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1679:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, true_type)
1680:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1681:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       clear();
1682:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1683:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_move_data(__x, true_type());
1684:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       std::__alloc_on_move(_M_get_Node_allocator(),
1685:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   __x._M_get_Node_allocator());
1686:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1687:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1688:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1689:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1690:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
1691:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1692:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_move_assign(_Rb_tree& __x, false_type)
1693:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1694:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (_M_get_Node_allocator() == __x._M_get_Node_allocator())
ARM GAS  /tmp/ccfXobHU.s 			page 156


1695:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _M_move_assign(__x, true_type{});
1696:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1697:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Try to move each node reusing existing nodes and copying __x nodes
1698:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // structure.
1699:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Reuse_or_alloc_node __roan(*this);
1700:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_impl._M_reset();
1701:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__x._M_root() != nullptr)
1702:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1703:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  auto __lbd =
1704:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    [&__roan](const value_type& __cval)
1705:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
1706:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto& __val = const_cast<value_type&>(__cval);
1707:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      return __roan(std::move_if_noexcept(__val));
1708:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    };
1709:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_root() = _M_copy(__x, __lbd);
1710:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x.clear();
1711:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1712:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1713:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1714:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1715:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1716:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     inline _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1717:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1718:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     operator=(_Rb_tree&& __x)
1719:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     noexcept(_Alloc_traits::_S_nothrow_move()
1720:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	     && is_nothrow_move_assignable<_Compare>::value)
1721:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1722:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_impl._M_key_compare = std::move(__x._M_impl._M_key_compare);
1723:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_move_assign(__x, __bool_constant<_Alloc_traits::_S_nothrow_move()>());
1724:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return *this;
1725:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1726:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1727:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1728:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1729:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Iterator>
1730:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1731:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1732:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_assign_unique(_Iterator __first, _Iterator __last)
1733:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1734:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1735:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_impl._M_reset();
1736:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1737:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_insert_unique_(end(), *__first, __roan);
1738:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1739:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1740:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1741:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1742:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Iterator>
1743:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       void
1744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1745:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_assign_equal(_Iterator __first, _Iterator __last)
1746:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1747:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Reuse_or_alloc_node __roan(*this);
1748:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_M_impl._M_reset();
1749:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	for (; __first != __last; ++__first)
1750:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_insert_equal_(end(), *__first, __roan);
1751:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 157


1752:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1753:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1754:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>&
1757:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1758:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     operator=(const _Rb_tree& __x)
1759:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1760:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (this != &__x)
1761:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1762:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  // Note that _Key may be a constant type.
1763:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1764:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
1765:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
1766:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto& __this_alloc = this->_M_get_Node_allocator();
1767:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      auto& __that_alloc = __x._M_get_Node_allocator();
1768:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (!_Alloc_traits::_S_always_equal()
1769:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  && __this_alloc != __that_alloc)
1770:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		{
1771:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  // Replacement allocator cannot free existing storage, we need
1772:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  // to erase nodes first.
1773:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  clear();
1774:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  std::__alloc_on_copy(__this_alloc, __that_alloc);
1775:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		}
1776:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
1777:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1778:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1779:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Reuse_or_alloc_node __roan(*this);
1780:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_impl._M_reset();
1781:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_impl._M_key_compare = __x._M_impl._M_key_compare;
1782:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__x._M_root() != 0)
1783:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_root() = _M_copy(__x, __roan);
1784:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1785:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1786:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return *this;
1787:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1788:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1789:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1790:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1791:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1792:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
1793:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1794:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _NodeGen>
1795:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1796:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1797:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1798:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
1799:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1800:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		 _Arg&& __v,
1801:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1802:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		 const _Val& __v,
1803:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1804:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		 _NodeGen& __node_gen)
1805:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1806:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	bool __insert_left = (__x != 0 || __p == _M_end()
1807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
1808:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 							_S_key(__p)));
ARM GAS  /tmp/ccfXobHU.s 			page 158


1809:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1810:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
1811:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1813:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      this->_M_impl._M_header);
1814:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	++_M_impl._M_node_count;
1815:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return iterator(__z);
1816:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1817:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1818:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1819:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1820:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1821:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg>
1822:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1823:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1824:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1825:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1826:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, _Arg&& __v)
1827:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1828:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_lower(_Base_ptr __p, const _Val& __v)
1829:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1830:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1831:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       bool __insert_left = (__p == _M_end()
1832:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			    || !_M_impl._M_key_compare(_S_key(__p),
1833:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 						       _KeyOfValue()(__v)));
1834:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1835:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type __z = _M_create_node(_GLIBCXX_FORWARD(_Arg, __v));
1836:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1837:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1838:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				    this->_M_impl._M_header);
1839:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       ++_M_impl._M_node_count;
1840:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return iterator(__z);
1841:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1842:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1843:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1844:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1845:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1846:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg>
1847:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1848:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
1849:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1850:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
1851:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_equal_lower(_Arg&& __v)
1852:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
1853:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_equal_lower(const _Val& __v)
1854:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
1855:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1856:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1857:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1858:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
1859:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1860:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x;
1861:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = !_M_impl._M_key_compare(_S_key(__x), _KeyOfValue()(__v)) ?
1862:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_S_left(__x) : _S_right(__x);
1863:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1864:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return _M_insert_lower(__y, _GLIBCXX_FORWARD(_Arg, __v));
1865:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
ARM GAS  /tmp/ccfXobHU.s 			page 159


1866:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1867:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KoV,
1868:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1869:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _NodeGen>
1870:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::_Link_type
1871:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KoV, _Compare, _Alloc>::
1872:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_copy(_Const_Link_type __x, _Base_ptr __p, _NodeGen& __node_gen)
1873:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
1874:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// Structural copy. __x and __p must be non-null.
1875:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	_Link_type __top = _M_clone_node(__x, __node_gen);
1876:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__top->_M_parent = __p;
1877:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1878:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__try
1879:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1880:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    if (__x->_M_right)
1881:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __top->_M_right = _M_copy(_S_right(__x), __top, __node_gen);
1882:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __p = __top;
1883:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __x = _S_left(__x);
1884:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1885:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    while (__x != 0)
1886:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      {
1887:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_Link_type __y = _M_clone_node(__x, __node_gen);
1888:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__p->_M_left = __y;
1889:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__y->_M_parent = __p;
1890:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		if (__x->_M_right)
1891:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		  __y->_M_right = _M_copy(_S_right(__x), __y, __node_gen);
1892:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__p = __y;
1893:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		__x = _S_left(__x);
1894:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      }
1895:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1896:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__catch(...)
1897:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  {
1898:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_erase(__top);
1899:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __throw_exception_again;
1900:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  }
1901:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return __top;
1902:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
1903:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1904:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1905:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1906:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
1907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1908:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_erase(_Link_type __x)
1909:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1910:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // Erase without rebalancing.
1911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
1912:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1913:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_erase(_S_right(__x));
1914:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __y = _S_left(__x);
1915:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_drop_node(__x);
1916:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = __y;
1917:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
1918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1919:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1920:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1921:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1922:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
ARM GAS  /tmp/ccfXobHU.s 			page 160


1923:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1924:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1925:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_lower_bound(_Link_type __x, _Base_ptr __y,
1926:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		   const _Key& __k)
1927:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1928:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
1929:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
1930:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1931:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1932:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = _S_right(__x);
1933:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return iterator(__y);
1934:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1935:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1936:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1937:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1938:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1939:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1940:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 848              		.loc 13 1940 5 is_stmt 1 view .LVU166
 849              	.LBB5291:
1941:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1942:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		   const _Key& __k) const
1943:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1944:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
 850              		.loc 13 1944 18 view .LVU167
 851 0008 002C     		cmp	r4, #0
 852 000a 00F09780 		beq	.L39
 853              	.LBB5292:
 854              	.LBB5293:
 855              	.LBB5294:
 856              	.LBB5295:
 857              	.LBB5296:
 858              	.LBB5297:
 658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
 665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      {
 673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  {
 677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_set_length(0);
 680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  }
 681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		else
ARM GAS  /tmp/ccfXobHU.s 			page 161


 682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  {
 683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  }
 692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      }
 693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->assign(__str);
 697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
 704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__s); }
 706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
 715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(_CharT __c)
 716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->assign(1, __c);
 718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
 719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        **/
 729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
 732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
ARM GAS  /tmp/ccfXobHU.s 			page 162


 739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_set_length(0);
 743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    if (__str.size())
 751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    size_type __capacity;
 761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      {
 763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  {
 765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    __data = _M_data();
 767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  }
 769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      }
 772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    if (__data)
 777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      {
 778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		__str._M_data(__data);
 779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      }
 781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    else
 782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  assign(__str);
 786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__str.clear();
 787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
 788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
 795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
ARM GAS  /tmp/ccfXobHU.s 			page 163


 796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
 799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
 801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****      template<typename _Tp>
 808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return A string_view.
 815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
 819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Iterators:
 821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the %string.
 824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
 826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.
 832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
 834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.
 840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
 842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last character in the %string.
 848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
 850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 164


 853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  order.
 857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reverse_iterator
 859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  reverse element order.
 866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
 868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element order.
 875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reverse_iterator
 877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is done in reverse element order.
 884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
 886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.
 893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
 895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       cbegin() const noexcept
 896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last character in the %string.
 901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
 903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       cend() const noexcept
 904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  reverse element order.
ARM GAS  /tmp/ccfXobHU.s 			page 165


 910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
 912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       crbegin() const noexcept
 913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is done in reverse element order.
 919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
 921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       crend() const noexcept
 922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
 926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Capacity:
 927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  null-termination.
 929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  null-termination.
 935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
 961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  setting them to 0.
 966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccfXobHU.s 			page 166


 967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       resize(size_type __n)
 969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
 974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cpp_exceptions
 977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (capacity() > size())
 978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
 979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    try
 980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      { reserve(0); }
 981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    catch(...)
 982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      { }
 983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
 984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
 989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
 992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
 993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
 998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *          characters.
1002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
1009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  data.
1015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 167


1024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_set_length(0); }
1025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->size() == 0; }
1033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Element access:
1035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  see at().)
1044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
1046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  see at().)
1061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
1063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator[](size_type __pos)
1064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// and in C++11 mode.
1067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
ARM GAS  /tmp/ccfXobHU.s 			page 168


1081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
1084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       at(size_type __n) const
1085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n >= this->size())
1087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __n, this->size());
1091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__n];
1092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
1105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       at(size_type __n)
1106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n >= size())
1108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __n, this->size());
1112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__n];
1113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
1119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
1121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       front() noexcept
1122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](0);
1125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
1130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
1132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       front() const noexcept
1133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](0);
1136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 169


1138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
1141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
1143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       back() noexcept
1144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last element of the %string.
1152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
1154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       back() const noexcept
1155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Modifiers:
1162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__str); }
1170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
1178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__s); }
1179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a character.
1182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->push_back(__c);
1189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
1190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
ARM GAS  /tmp/ccfXobHU.s 			page 170


1195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
1214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const basic_string& __str)
1222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 171


1252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const _CharT* __s)
1264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator,
1304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
1306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
1307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
ARM GAS  /tmp/ccfXobHU.s 			page 172


1309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
1322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         }
1325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
1337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
1343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       push_back(_CharT __c)
1350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 173


1366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
1368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
ARM GAS  /tmp/ccfXobHU.s 			page 174


1423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function returns.
1433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
1467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
1470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccfXobHU.s 			page 175


1480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
1494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
1509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
1516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *              insert at.
1522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
1534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
ARM GAS  /tmp/ccfXobHU.s 			page 176


1537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
1542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *              insert at.
1565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	iterator
1578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
1580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
1586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __end  End of range.
1591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
ARM GAS  /tmp/ccfXobHU.s 			page 177


1594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
1600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
1612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
1624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  /tmp/ccfXobHU.s 			page 178


1651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
1677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
1696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
1702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
ARM GAS  /tmp/ccfXobHU.s 			page 179


1708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
1720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
1746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccfXobHU.s 			page 180


1765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from.
1775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
1779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
1783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      __sv.data()
1786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
1789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
1790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
1798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == npos)
1811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else if (__n != 0)
1813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
1815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
ARM GAS  /tmp/ccfXobHU.s 			page 181


1822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
1826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __position < end());
1830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
1845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __last <= end());
1849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__last == end())
1851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
1853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The string must be non-empty.
1862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
1863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
1864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       pop_back() noexcept
1865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
1870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
ARM GAS  /tmp/ccfXobHU.s 			page 182


1879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  error is thrown.
1887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str.size().
1902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.
1934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccfXobHU.s 			page 183


1936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __n2)
1938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
1959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
1963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
1966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.
1983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
1984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
1985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
1989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
1990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
ARM GAS  /tmp/ccfXobHU.s 			page 184


1993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
1997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const basic_string& __str)
2005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
2021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 185


2050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      _CharT __c)
2068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
2088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator,
2091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
2093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
2096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   && __i2 <= end());
2098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 					   std::__false_type());
2101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
2103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
2104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccfXobHU.s 			page 186


2107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
2108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
2109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
2112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   && __i2 <= end());
2114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
2119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= end());
2161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
ARM GAS  /tmp/ccfXobHU.s 			page 187


2164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
2180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
2185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      __sv.data()
2219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
ARM GAS  /tmp/ccfXobHU.s 			page 188


2221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           to replace at.
2227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           for the replace.
2229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
2242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _Integer>
2243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string&
2244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
2249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string&
2250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    __false_type);
2253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     _CharT __c);
2257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 const size_type __len2);
2261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
2263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
2266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.
ARM GAS  /tmp/ccfXobHU.s 			page 189


2278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  time.
2288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
2290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // String operations:
2293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  happen.
2298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const _CharT*
2300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
2302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const _CharT*
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 859              		.loc 3 2313 24 is_stmt 0 view .LVU168
 860 000e 0437     		adds	r7, r7, #4
 861 0010 0646     		mov	r6, r0
 862 0012 D1E900A5 		ldrd	r10, r5, [r1]
 863 0016 B846     		mov	r8, r7
 864              	.LVL44:
 865              	.L33:
 866              		.loc 3 2313 24 view .LVU169
 867              	.LBE5297:
 868              	.LBE5296:
 869              	.LBE5295:
 870              	.LBE5294:
 871              	.LBE5293:
 872              	.LBI5292:
 873              		.file 15 "/usr/include/newlib/c++/9.2.1/bits/stl_function.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // Functor implementations -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // software; you can redistribute it and/or modify it under the
ARM GAS  /tmp/ccfXobHU.s 			page 190


   7:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** /** @file bits/stl_function.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #ifndef _STL_FUNCTION_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #define _STL_FUNCTION_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
  60:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #include <bits/move.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
  62:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  63:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  /tmp/ccfXobHU.s 			page 191


  64:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** {
  65:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
  67:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.1 base classes
  68:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup functors Function Objects
  69:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup utilities
  70:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
  71:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  the description as well.
  78:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
  79:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  calls, rather than being created as named variables.
  81:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
  82:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  and put the result in @c a, use
  85:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \code
  86:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \endcode
  88:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  To negate every element in @c a, use
  89:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \code
  90:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \endcode
  92:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
  94:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  functors, you might consider doing the same.
  98:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
  99:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
 100:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 101:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /**
 102:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 104:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg, typename _Result>
 105:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct unary_function
 106:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 107:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       /// @c argument_type is the type of the argument
 108:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef _Arg 	argument_type;   
 109:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 110:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       /// @c result_type is the return type
 111:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef _Result 	result_type;  
 112:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 113:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 114:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /**
 115:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 117:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct binary_function
 119:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 120:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       /// @c first_argument_type is the type of the first argument
ARM GAS  /tmp/ccfXobHU.s 			page 192


 121:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 123:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 126:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       /// @c result_type is the return type
 127:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef _Result 	result_type;
 128:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 129:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
 130:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 131:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.2 arithmetic
 132:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup functors
 134:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 135:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  the library provides functors for those operations.  See the
 137:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  for examples of their use.
 139:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 140:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
 141:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 142:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 143:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 144:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   struct __is_transparent;  // undefined
 145:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 146:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 147:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct plus;
 148:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 149:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 150:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct minus;
 151:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 152:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 153:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct multiplies;
 154:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 156:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct divides;
 157:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 158:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 159:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct modulus;
 160:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 161:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 162:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct negate;
 163:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 164:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 165:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 167:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 169:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 171:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x + __y; }
 173:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 174:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 175:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 177:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
ARM GAS  /tmp/ccfXobHU.s 			page 193


 178:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 179:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 181:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x - __y; }
 183:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 184:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 185:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 187:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 189:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 191:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x * __y; }
 193:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 194:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 195:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 197:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 199:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 201:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x / __y; }
 203:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 204:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 205:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 207:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 209:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 211:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x % __y; }
 213:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 214:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 215:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 217:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 219:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 221:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x) const
 222:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return -__x; }
 223:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 224:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 225:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 226:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 227:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 229:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 230:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct plus<void>
 231:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 232:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 233:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
ARM GAS  /tmp/ccfXobHU.s 			page 194


 235:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 240:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 241:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 242:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 243:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 245:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct minus<void>
 246:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 247:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 248:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 250:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 255:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 256:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 257:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 258:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 260:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct multiplies<void>
 261:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 262:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 263:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 265:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 270:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 272:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 273:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 275:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct divides<void>
 276:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 277:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 278:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 280:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 285:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 286:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 287:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 288:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 290:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct modulus<void>
 291:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
ARM GAS  /tmp/ccfXobHU.s 			page 195


 292:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 293:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 295:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 300:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 301:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 302:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 303:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 305:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct negate<void>
 306:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 307:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp>
 308:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 310:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 311:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 315:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 316:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 317:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 318:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
 319:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 320:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.3 comparisons
 321:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup functors
 323:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 324:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  in C++, like @c <.
 326:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 327:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
 328:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 329:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 330:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 331:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct equal_to;
 332:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 333:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 334:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct not_equal_to;
 335:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 336:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 337:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater;
 338:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 339:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 340:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less;
 341:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 342:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 343:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater_equal;
 344:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 345:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 346:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less_equal;
 347:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 348:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 196


 349:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 351:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 353:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 355:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x == __y; }
 357:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 358:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 359:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 360:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 361:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct not_equal_to : public binary_function<_Tp, _Tp, bool>
 362:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 363:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 364:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 365:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 366:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x != __y; }
 367:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 368:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 369:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 370:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 371:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater : public binary_function<_Tp, _Tp, bool>
 372:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 373:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 374:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 375:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 376:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x > __y; }
 377:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 378:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 379:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 380:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 381:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less : public binary_function<_Tp, _Tp, bool>
 382:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 383:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 384:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 874              		.loc 15 385 7 is_stmt 1 view .LVU170
 875              	.LBB5305:
 876              	.LBI5293:
2314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _CharT*
2323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       data() noexcept
2324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
2325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
2326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       allocator_type
ARM GAS  /tmp/ccfXobHU.s 			page 197


2331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns npos.
2359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
ARM GAS  /tmp/ccfXobHU.s 			page 198


2388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 199


2445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
ARM GAS  /tmp/ccfXobHU.s 			page 200


2502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to locate.
2511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
2535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 201


2559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to locate.
2595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
ARM GAS  /tmp/ccfXobHU.s 			page 202


2616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
2619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 203


2673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to avoid.
2678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
2681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
ARM GAS  /tmp/ccfXobHU.s 			page 204


2730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to avoid.
2760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
2763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
2784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
ARM GAS  /tmp/ccfXobHU.s 			page 205


2787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
2798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
2818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  The new string.
2826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string
2834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return basic_string(*this,
2836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
ARM GAS  /tmp/ccfXobHU.s 			page 206


2844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
2861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __r;
2863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
2864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
2871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  if (!__r)
2883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __r;
2885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                against.
2893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
2895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
ARM GAS  /tmp/ccfXobHU.s 			page 207


2901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                against.
2910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
2914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
2915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
2920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
2924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
2925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings by calling
2941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
2946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
ARM GAS  /tmp/ccfXobHU.s 			page 208


2958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  calling
2967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
2972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
2980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  ordered first.
2988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
2989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
2990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
2992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
2995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  one is ordered first.
3012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
3013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
3014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
ARM GAS  /tmp/ccfXobHU.s 			page 209


3015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  one is ordered first.
3036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  no special meaning.
3039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
3040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
3041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __n2) const;
3043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++20
3069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
ARM GAS  /tmp/ccfXobHU.s 			page 210


3072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     };
3073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
3078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @ingroup strings
3082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @ingroup sequences
3083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @doctodo
3096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  A string looks like this:
3102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @code
3104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *                                        [_Rep]
3105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *                                        _M_length
3106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @endcode
3110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  pointer to the header.
3114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  object at the front.
3122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  string length.)
3128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
ARM GAS  /tmp/ccfXobHU.s 			page 211


3129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *
3135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   */
3138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     class basic_string
3141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
3142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Types:
3145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
3146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****                                                             const_iterator;
3163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     protected:
3167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
3171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _Rep: string representation
3172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //   Invariants:
3173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct _Rep_base
ARM GAS  /tmp/ccfXobHU.s 			page 212


3186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	size_type		_M_length;
3188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
3191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// Types:
3195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// (Public) Data members:
3198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// look like this:
3206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// Solving for m:
3208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _Rep&
3218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { 
3220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
3226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         bool
3228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
3230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         }
3240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         bool
3242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 213


3243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
3244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           // _M_dispose.
3250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         }
3255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
3257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
3261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	void
3265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
3267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    {
3271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    }
3277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
3278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT*
3280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_refdata() throw()
3281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT*
3284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
3286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
3289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// Create & Destroy
3291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	static _Rep*
3292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	void
3295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
3297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccfXobHU.s 			page 214


3300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    {
3301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               //   all the previous decrements.
3308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 							 -1) <= 0)
3313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		{
3314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		}
3317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    }
3318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}  // XXX MT
3319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	void
3321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT*
3324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
3326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _M_refdata();
3331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}  // XXX MT
3332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT*
3334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
3336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
3345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
3347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Data Members (public):
3348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // size that the allocator can hold.
3350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
3354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Data Members (private):
3355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 215


3357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _CharT*
3358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _CharT*
3362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _Rep*
3366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
3372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
3376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_leak_hard();
3384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__pos > this->size())
3390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __pos;
3394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
3413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccfXobHU.s 			page 216


3414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
3425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
3427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
3434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
3436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n == 1)
3443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
3445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _Iterator>
3451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static void
3452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
3454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
3457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 217


3471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static void
3472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static int
3477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
3486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return int(__d);
3487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_leak_hard();
3494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static _Rep&
3496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _Res>;
3509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static __sv_type
3512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __svt; }
3514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // is provided.
3519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       struct __sv_wrapper
3520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       };
3524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *          wrapper.
ARM GAS  /tmp/ccfXobHU.s 			page 218


3528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       explicit
3532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
3537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string()
3545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { }
3552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       explicit
3557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   size_type __n);
ARM GAS  /tmp/ccfXobHU.s 			page 219


3585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  has no special meaning.
3603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        **/
3628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 220


3642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { }
3651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
3657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
3660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
3663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
3664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
3667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
3675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	explicit
3698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
ARM GAS  /tmp/ccfXobHU.s 			page 221


3699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
3701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
3713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__str); }
3715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
3721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__s); }
3723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
3732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { 
3734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
3736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        **/
3746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
3747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// NB: DR 1204.
3751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->swap(__str);
3752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
3753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 222


3756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
3760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
3764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
3766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
3773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return A string_view.
3780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
3784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Iterators:
3786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
3791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_leak();
3794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data());
3795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.
3800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
3802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
3810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_leak();
ARM GAS  /tmp/ccfXobHU.s 			page 223


3813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last character in the %string.
3819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
3821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reverse_iterator
3830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  reverse element order.
3837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
3839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reverse_iterator
3848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is done in reverse element order.
3855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
3857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character in the %string.
3864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
3866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       cbegin() const noexcept
3867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 224


3870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last character in the %string.
3872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_iterator
3874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       cend() const noexcept
3875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  reverse element order.
3881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
3883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       crbegin() const noexcept
3884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is done in reverse element order.
3890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reverse_iterator
3892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       crend() const noexcept
3893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
3897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Capacity:
3898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  null-termination.
3900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  null-termination.
3906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
ARM GAS  /tmp/ccfXobHU.s 			page 225


3927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  setting them to 0.
3937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       resize(size_type __n)
3940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cpp_exceptions
3948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (capacity() > size())
3949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
3950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    try
3951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      { reserve(0); }
3952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    catch(...)
3953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      { }
3954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
3955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
3957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
3958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
3964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *          characters.
3970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
3977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
3978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  data.
3983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccfXobHU.s 			page 226


3984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
3987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
3988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
3990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
3992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
3994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  {
3996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  }
3999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
4000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
4003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
4005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       clear()
4006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
4008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->size() == 0; }
4016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Element access:
4018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  see at().)
4027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
4029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
ARM GAS  /tmp/ccfXobHU.s 			page 227


4041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
4046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator[](size_type __pos)
4047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	// and in C++11 mode.
4050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_leak();
4054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
4068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       at(size_type __n) const
4069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n >= this->size())
4071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __n, this->size());
4075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__n];
4076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  unsharing the string.
4088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
4090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       at(size_type __n)
4091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__n >= size())
4093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   __n, this->size());
4097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_leak();
ARM GAS  /tmp/ccfXobHU.s 			page 228


4098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data()[__n];
4099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
4105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
4107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       front()
4108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](0);
4111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
4116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
4118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       front() const noexcept
4119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](0);
4122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  element of the %string.
4127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       reference
4129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       back()
4130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  last element of the %string.
4138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const_reference
4140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       back() const noexcept
4141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
4146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Modifiers:
4148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
ARM GAS  /tmp/ccfXobHU.s 			page 229


4155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__str); }
4156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__s); }
4165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a character.
4168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { 
4174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->push_back(__c);
4175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
4176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
4200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const basic_string& __str);
4208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to append.
ARM GAS  /tmp/ccfXobHU.s 			page 230


4212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(const _CharT* __s)
4241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 231


4269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
4277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
4278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *               from.
4299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return append(__sv.data()
4309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
4313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
4319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       push_back(_CharT __c)
4320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { 
4321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  this->reserve(__len);
4324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
ARM GAS  /tmp/ccfXobHU.s 			page 232


4326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->swap(__str);
4350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
4351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccfXobHU.s 			page 233


4383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function returns.
4394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  character @a __c.
4410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
4424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
4425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  /tmp/ccfXobHU.s 			page 234


4440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
4470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
4485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __end  End of range.
4493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
ARM GAS  /tmp/ccfXobHU.s 			page 235


4497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
4501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         void
4502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
4513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccfXobHU.s 			page 236


4554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
4570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
4588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
4594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
ARM GAS  /tmp/ccfXobHU.s 			page 237


4611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
4637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from.
4667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
ARM GAS  /tmp/ccfXobHU.s 			page 238


4668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
4671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
4675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
4681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
4689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { 
4700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return *this;
4703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
4714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(iterator __position)
4715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 239


4725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       iterator
4734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****  
4736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The string must be non-empty.
4741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
4742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
4743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
4749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.
4758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  error is thrown.
4766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str.size().
4781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  /tmp/ccfXobHU.s 			page 240


4782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.
4813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __n2);
4817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  change if an error is thrown.
4833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
ARM GAS  /tmp/ccfXobHU.s 			page 241


4839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is thrown.
4857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
4894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccfXobHU.s 			page 242


4896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
4946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
ARM GAS  /tmp/ccfXobHU.s 			page 243


4953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
4954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
4959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
4960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
4961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         basic_string&
4962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         {
4965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
4971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
4994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
4995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
4996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
4998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
5006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
ARM GAS  /tmp/ccfXobHU.s 			page 244


5010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  thrown.
5030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++11
5035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
ARM GAS  /tmp/ccfXobHU.s 			page 245


5067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      __sv.data()
5069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           to replace at.
5077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           for the replace.
5079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     private:
5092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _Integer>
5093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string&
5094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InputIterator>
5099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	basic_string&
5100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
5104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     _CharT __c);
5106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string&
5108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		      size_type __n2);
5110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InIterator>
5114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _CharT*
5115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
ARM GAS  /tmp/ccfXobHU.s 			page 246


5124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _Integer>
5125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _CharT*
5126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 				    __end, __a); }
5130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static _CharT*
5132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InIterator>
5136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _CharT*
5137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         }
5142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _InIterator>
5145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _CharT*
5146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		      input_iterator_tag);
5148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<class _FwdIterator>
5152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         static _CharT*
5153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       static _CharT*
5157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     public:
5160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
ARM GAS  /tmp/ccfXobHU.s 			page 247


5181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  time.
5182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       void
5184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       swap(basic_string& __s)
5185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // String operations:
5188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  happen.
5193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const _CharT*
5195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
5197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const _CharT*
5207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _CharT*
5218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       data() noexcept
5219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_M_leak();
5221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return _M_data();
5222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
5224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5228:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       allocator_type
5229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
5231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5232:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5233:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
ARM GAS  /tmp/ccfXobHU.s 			page 248


5238:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5239:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5244:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5245:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5248:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5249:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5254:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns npos.
5257:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5258:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5259:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5264:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5269:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5273:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5274:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5276:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5279:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5280:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5281:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5286:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5291:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5293:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 249


5295:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5300:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5301:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5305:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5308:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5309:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5310:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5311:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5316:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5320:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5321:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5325:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5326:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5332:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5336:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5337:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5338:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5341:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5342:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5347:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5351:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
ARM GAS  /tmp/ccfXobHU.s 			page 250


5352:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5354:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5357:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5358:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5359:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5364:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5368:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5369:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5371:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5373:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5378:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5379:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5383:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5386:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5387:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5388:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5389:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5394:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5398:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5399:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5400:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5404:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5405:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
ARM GAS  /tmp/ccfXobHU.s 			page 251


5409:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5411:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
5415:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5416:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5417:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5420:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5421:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5426:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5430:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5431:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5434:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5437:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5438:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5439:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5444:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5450:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5454:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5456:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to locate.
5459:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5462:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5463:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
ARM GAS  /tmp/ccfXobHU.s 			page 252


5466:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5467:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5470:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5471:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5472:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5473:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5478:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5482:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5483:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5484:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5488:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5489:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5495:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
5499:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5500:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5501:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5504:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5505:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5510:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5514:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5515:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5518:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5521:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5522:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccfXobHU.s 			page 253


5523:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5528:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5532:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5534:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5535:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5538:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5540:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to locate.
5543:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5546:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5547:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5551:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5554:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5555:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5556:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5557:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5562:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5566:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5567:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5571:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5572:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5578:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
ARM GAS  /tmp/ccfXobHU.s 			page 254


5580:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5583:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5584:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5587:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5588:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5593:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5597:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5598:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5601:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5604:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5605:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5606:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5611:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5615:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5616:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5619:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5621:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to avoid.
5624:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
5627:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5628:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5632:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5635:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5636:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 255


5637:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5638:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5643:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5647:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5648:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5649:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5653:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5654:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5660:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns npos.
5664:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5665:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5666:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5669:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5674:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  npos.
5678:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5679:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5680:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5683:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5686:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5687:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5688:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5693:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
ARM GAS  /tmp/ccfXobHU.s 			page 256


5694:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5697:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       size_type
5698:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5701:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5703:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                characters to avoid.
5706:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
5709:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5710:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5714:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5717:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5718:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5719:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5720:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  The new string.
5724:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5726:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5731:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string
5732:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return basic_string(*this,
5734:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5736:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5737:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5741:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5750:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
ARM GAS  /tmp/ccfXobHU.s 			page 257


5751:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
5753:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5757:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
5759:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	return __r;
5761:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       }
5762:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5763:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5765:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
5769:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5770:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5774:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5779:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  if (!__r)
5781:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __r;
5783:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5784:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5785:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5786:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                against.
5791:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
5793:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5794:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5798:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5801:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5802:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5803:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *                 against.
ARM GAS  /tmp/ccfXobHU.s 			page 258


5808:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        */
5812:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       template<typename _Tp>
5813:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
5818:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
5822:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++17
5823:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5824:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5825:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5831:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings by calling
5839:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5843:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
5844:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5846:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5847:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  calling
ARM GAS  /tmp/ccfXobHU.s 			page 259


5865:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5869:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
5870:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5873:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5874:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5878:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  ordered first.
5886:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5887:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
5888:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5890:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5893:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5899:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  one is ordered first.
5910:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5911:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
5912:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5914:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       /**
5915:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
ARM GAS  /tmp/ccfXobHU.s 			page 260


5922:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  one is ordered first.
5934:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *
5935:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****        *  no special meaning.
5937:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       */
5938:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       int
5939:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      size_type __n2) const;
5941:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5942:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5944:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5947:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5948:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5951:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5952:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5955:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5956:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5959:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5960:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5963:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       bool
5964:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif // C++20
5967:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5968:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       friend void
5970:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 					    void* exc);
5972:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       friend const char*
5973:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       friend void
5975:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       friend void
5977:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** # endif
ARM GAS  /tmp/ccfXobHU.s 			page 261


5979:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   };
5980:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5982:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
5992:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6000:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
6010:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6011:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // operator+
6012:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6013:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6018:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
6023:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       __str.append(__rhs);
6025:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       return __str;
6026:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     }
6027:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6028:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6029:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6034:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
ARM GAS  /tmp/ccfXobHU.s 			page 262


6036:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6039:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6040:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6045:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6049:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6050:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6055:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
6060:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       __str.append(__rhs);
6062:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       return __str;
6063:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     }
6064:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6065:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6066:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6071:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
6075:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       return __str;
6080:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     }
6081:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6082:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6089:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
ARM GAS  /tmp/ccfXobHU.s 			page 263


6093:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6095:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     {
6100:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     }
6106:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6107:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6113:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6119:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6125:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      _CharT __rhs)
6129:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
6131:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6132:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // operator ==
6133:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6134:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6139:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6141:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6146:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT>
6147:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline
6148:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
ARM GAS  /tmp/ccfXobHU.s 			page 264


6150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 						    __lhs.size())); }
6154:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6155:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6156:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  String.
6159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6161:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6163:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6167:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6168:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  String.
6170:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6173:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6175:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6176:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // operator !=
6180:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6181:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6188:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6194:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  String.
6197:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6198:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6199:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6201:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6205:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6206:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
ARM GAS  /tmp/ccfXobHU.s 			page 265


6207:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  String.
6208:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6213:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
6217:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   // operator <
6218:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   /**
6219:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****    */
6224:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     inline bool
6226:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 877              		.loc 3 6226 5 view .LVU171
 878              	.LBB5304:
 879              	.LBI5294:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 880              		.loc 3 2853 7 view .LVU172
 881              	.LBB5303:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 882              		.loc 3 2855 18 is_stmt 0 view .LVU173
 883 0018 D4F81490 		ldr	r9, [r4, #20]
 884              	.LVL45:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 885              		.loc 3 2855 18 view .LVU174
 886 001c A945     		cmp	r9, r5
 887 001e 4A46     		mov	r2, r9
 888 0020 28BF     		it	cs
 889 0022 2A46     		movcs	r2, r5
 890              	.LVL46:
 891              	.LBB5298:
 892              	.LBI5296:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 893              		.loc 3 2312 7 is_stmt 1 view .LVU175
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 894              		.loc 3 2312 7 is_stmt 0 view .LVU176
 895              	.LBE5298:
 896              	.LBB5299:
 897              	.LBI5299:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 898              		.loc 7 315 7 is_stmt 1 view .LVU177
 899              	.LBB5300:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 900              		.loc 7 317 2 view .LVU178
 901 0024 22B1     		cbz	r2, .L35
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 902              		.loc 7 325 2 view .LVU179
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 903              		.loc 7 325 25 is_stmt 0 view .LVU180
 904 0026 5146     		mov	r1, r10
ARM GAS  /tmp/ccfXobHU.s 			page 266


 905 0028 2069     		ldr	r0, [r4, #16]
 906 002a FFF7FEFF 		bl	memcmp
 907              	.LVL47:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 908              		.loc 7 325 25 view .LVU181
 909              	.LBE5300:
 910              	.LBE5299:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 911              		.loc 3 2860 2 view .LVU182
 912 002e 08B9     		cbnz	r0, .L36
 913              	.LVL48:
 914              	.L35:
 915              	.LBB5301:
 916              	.LBI5301:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 917              		.loc 3 401 7 is_stmt 1 view .LVU183
 918              	.LBB5302:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 919              		.loc 3 403 51 is_stmt 0 view .LVU184
 920 0030 A9EB0500 		sub	r0, r9, r5
 921              	.LVL49:
 922              	.L36:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 923              		.loc 3 403 51 view .LVU185
 924              	.LBE5302:
 925              	.LBE5301:
 926              	.LBE5303:
 927              	.LBE5304:
 928              	.LBE5305:
 929              	.LBE5292:
1945:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 930              		.loc 13 1945 2 view .LVU186
 931 0034 0028     		cmp	r0, #0
 932 0036 5EDB     		blt	.L37
 933              	.LVL50:
 934              		.loc 13 1945 2 view .LVU187
 935 0038 A046     		mov	r8, r4
1946:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
 936              		.loc 13 1946 28 view .LVU188
 937 003a A468     		ldr	r4, [r4, #8]
 938              	.LVL51:
1944:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 939              		.loc 13 1944 18 is_stmt 1 view .LVU189
 940 003c 002C     		cmp	r4, #0
 941 003e EBD1     		bne	.L33
 942              	.LVL52:
 943              	.L34:
 944              	.LBB5306:
 945              	.LBI5306:
 345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 946              		.loc 13 345 7 view .LVU190
 345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 947              		.loc 13 345 7 is_stmt 0 view .LVU191
 948              	.LBE5306:
 949              	.LBE5291:
 950              	.LBE5290:
 951              	.LBE5309:
ARM GAS  /tmp/ccfXobHU.s 			page 267


 952              	.LBE5311:
 953              	.LBE5313:
 954              	.LBB5314:
 955              	.LBI5314:
 381:/usr/include/newlib/c++/9.2.1/bits/stl_map.h ****       { return _M_t.end(); }
 956              		.loc 14 381 7 is_stmt 1 view .LVU192
 957              	.LBB5315:
 958              	.LBI5315:
1018:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return const_iterator(&this->_M_impl._M_header); }
 959              		.loc 13 1018 7 view .LVU193
 960              	.LBB5316:
 961              	.LBI5316:
 345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 962              		.loc 13 345 7 view .LVU194
 345:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 963              		.loc 13 345 7 is_stmt 0 view .LVU195
 964              	.LBE5316:
 965              	.LBE5315:
 966              	.LBE5314:
 547:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 967              		.loc 14 547 19 view .LVU196
 968 0040 B845     		cmp	r8, r7
 969 0042 7BD0     		beq	.L39
 970              	.LVL53:
 971              	.LBB5317:
 972              	.LBI5317:
 973              		.loc 15 385 7 is_stmt 1 view .LVU197
 974              	.LBB5318:
 975              	.LBI5318:
 976              		.loc 3 6226 5 view .LVU198
 977              	.LBB5319:
 978              	.LBI5319:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 979              		.loc 3 2853 7 view .LVU199
 980              	.LBB5320:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 981              		.loc 3 2856 18 is_stmt 0 view .LVU200
 982 0044 D8F81470 		ldr	r7, [r8, #20]
 983              	.LVL54:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 984              		.loc 3 2856 18 view .LVU201
 985 0048 2A46     		mov	r2, r5
 986 004a BD42     		cmp	r5, r7
 987 004c 28BF     		it	cs
 988 004e 3A46     		movcs	r2, r7
 989              	.LVL55:
 990              	.LBB5321:
 991              	.LBI5321:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 992              		.loc 3 2312 7 is_stmt 1 view .LVU202
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 993              		.loc 3 2312 7 is_stmt 0 view .LVU203
 994              	.LBE5321:
 995              	.LBB5322:
 996              	.LBI5322:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 997              		.loc 7 315 7 is_stmt 1 view .LVU204
ARM GAS  /tmp/ccfXobHU.s 			page 268


 998              	.LBB5323:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 999              		.loc 7 317 2 view .LVU205
 1000 0050 002A     		cmp	r2, #0
 1001 0052 46D0     		beq	.L40
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 1002              		.loc 7 325 2 view .LVU206
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 1003              		.loc 7 325 25 is_stmt 0 view .LVU207
 1004 0054 5046     		mov	r0, r10
 1005 0056 D8F81010 		ldr	r1, [r8, #16]
 1006 005a FFF7FEFF 		bl	memcmp
 1007              	.LVL56:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 1008              		.loc 7 325 25 view .LVU208
 1009              	.LBE5323:
 1010              	.LBE5322:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 1011              		.loc 3 2860 2 view .LVU209
 1012 005e 0028     		cmp	r0, #0
 1013 0060 3FD0     		beq	.L40
 1014              	.L41:
 1015              	.LVL57:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 1016              		.loc 3 2860 2 view .LVU210
 1017              	.LBE5320:
 1018              	.LBE5319:
 1019              	.LBE5318:
 1020              	.LBE5317:
 547:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 1021              		.loc 14 547 19 view .LVU211
 1022 0062 0028     		cmp	r0, #0
 1023 0064 6ADB     		blt	.L39
 1024              	.LVL58:
 547:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  __throw_out_of_range(__N("map::at"));
 1025              		.loc 14 547 19 view .LVU212
 1026              	.LBE5331:
 1027              	.LBE5335:
 1028              	.LBB5336:
 1029              	.LBI5336:
 550:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__x.size(),
 1030              		.loc 1 550 7 is_stmt 1 view .LVU213
 1031              	.LBB5337:
 552:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1032              		.loc 1 552 61 is_stmt 0 view .LVU214
 1033 0066 D8E90A10 		ldrd	r1, r0, [r8, #40]
 1034              	.LBB5338:
 1035              	.LBI5338:
 915:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1036              		.loc 1 915 7 is_stmt 1 view .LVU215
 1037              	.LVL59:
 915:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1038              		.loc 1 915 7 is_stmt 0 view .LVU216
 1039              	.LBE5338:
 1040              	.LBB5340:
 1041              	.LBI5340:
 277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
ARM GAS  /tmp/ccfXobHU.s 			page 269


 1042              		.loc 1 277 7 is_stmt 1 view .LVU217
 277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1043              		.loc 1 277 7 is_stmt 0 view .LVU218
 1044              	.LBE5340:
 1045              	.LBB5341:
 1046              	.LBI5341:
 1047              		.file 16 "/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h"
   1:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
   3:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** //
   5:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  11:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  16:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  20:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  25:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****  */
  28:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  29:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  32:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #pragma GCC system_header
  33:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  34:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** # include <bits/move.h>
  36:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
  37:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #else
  38:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #endif
  40:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  41:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** {
  43:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  45:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** /**
  46:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****  * @ingroup allocators
  48:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** */
  49:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  50:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****   struct __alloc_traits
ARM GAS  /tmp/ccfXobHU.s 			page 270


  51:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #endif
  54:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****   {
  55:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  72:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****   private:
  73:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  78:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****   public:
  79:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  84:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  85:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       {
  86:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  87:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  88:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       }
  89:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  90:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  91:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     template<typename _Ptr>
  92:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  93:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h **** 
  97:/usr/include/newlib/c++/9.2.1/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 1048              		.loc 16 97 19 is_stmt 1 view .LVU219
 1049              	.LBB5342:
 1050              	.LBI5342:
 470:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 471:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 472:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 473:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 474:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 475:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 476:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
ARM GAS  /tmp/ccfXobHU.s 			page 271


 477:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 478:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 479:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 480:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 481:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static void
 482:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 483:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 484:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 485:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 486:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 487:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 488:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 490:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *
 491:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 492:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 493:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       template<typename _Up>
 494:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	static void
 495:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 496:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 497:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 498:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 499:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 500:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 501:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 502:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 503:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 504:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static size_type
 505:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 506:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.max_size(); }
 507:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 
 508:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       /**
 509:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 510:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 511:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****        *  @return @c __rhs
 512:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       */
 513:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       static allocator_type
 514:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 1051              		.loc 4 514 7 view .LVU220
 1052              	.LBB5343:
 1053              	.LBI5343:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1054              		.loc 6 141 7 view .LVU221
 1055              	.LBB5344:
 1056              	.LBI5344:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1057              		.loc 5 83 7 view .LVU222
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1058              		.loc 5 83 7 is_stmt 0 view .LVU223
 1059              	.LBE5344:
 1060              	.LBE5343:
 1061              	.LBE5342:
 1062              	.LBE5341:
 1063              	.LBB5345:
 1064              	.LBB5339:
 916:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 1065              		.loc 1 916 50 view .LVU224
ARM GAS  /tmp/ccfXobHU.s 			page 272


 1066 006a 451A     		subs	r5, r0, r1
 1067              	.LVL60:
 916:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 1068              		.loc 1 916 50 view .LVU225
 1069              	.LBE5339:
 1070              	.LBE5345:
 1071              	.LBB5346:
 1072              	.LBI5346:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 1073              		.loc 1 300 7 is_stmt 1 view .LVU226
 1074              	.LBB5347:
 1075              	.LBI5347:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 1076              		.loc 1 133 2 view .LVU227
 1077              	.LBB5348:
 1078              	.LBI5348:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1079              		.loc 6 141 7 view .LVU228
 1080              	.LBB5349:
 1081              	.LBI5349:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1082              		.loc 5 83 7 view .LVU229
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1083              		.loc 5 83 7 is_stmt 0 view .LVU230
 1084              	.LBE5349:
 1085              	.LBE5348:
 1086              	.LBB5350:
 1087              	.LBI5350:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1088              		.loc 1 94 2 is_stmt 1 view .LVU231
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 1089              		.loc 1 94 2 is_stmt 0 view .LVU232
 1090              	.LBE5350:
 1091              	.LBE5347:
 1092              	.LBB5351:
 1093              	.LBI5351:
 356:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1094              		.loc 1 356 7 is_stmt 1 view .LVU233
 1095              	.LBB5352:
 1096              	.LBI5352:
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1097              		.loc 1 340 7 view .LVU234
 1098              	.LBB5353:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 1099              		.loc 1 343 18 is_stmt 0 view .LVU235
 1100 006c AF10     		asrs	r7, r5, #2
 1101              	.LVL61:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 1102              		.loc 1 343 18 view .LVU236
 1103 006e 3AD0     		beq	.L42
 1104              	.LVL62:
 1105              	.LBB5354:
 1106              	.LBI5354:
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 1107              		.loc 4 443 7 is_stmt 1 view .LVU237
 1108              	.LBB5355:
 1109              	.LBI5355:
ARM GAS  /tmp/ccfXobHU.s 			page 273


 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 1110              		.loc 5 102 7 view .LVU238
 1111              	.LBB5356:
 104:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 1112              		.loc 5 104 2 is_stmt 0 view .LVU239
 1113 0070 B7F1005F 		cmp	r7, #536870912
 1114 0074 73D2     		bcs	.L81
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 1115              		.loc 5 114 41 view .LVU240
 1116 0076 2846     		mov	r0, r5
 1117 0078 FFF7FEFF 		bl	_Znwj
 1118              	.LVL63:
 1119 007c 0446     		mov	r4, r0
 1120              	.LVL64:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 1121              		.loc 5 114 41 view .LVU241
 1122              	.LBE5356:
 1123              	.LBE5355:
 1124              	.LBE5354:
 1125              	.LBE5353:
 1126              	.LBE5352:
 1127              	.LBE5351:
 1128              	.LBE5346:
 1129              	.LBB5363:
 1130              	.LBI5363:
 1131              		.loc 6 153 7 is_stmt 1 view .LVU242
 1132              	.LBB5364:
 1133              	.LBI5364:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1134              		.loc 5 89 7 view .LVU243
 1135              	.LBE5364:
 1136              	.LBE5363:
 1137              	.LBB5366:
 1138              	.LBI5366:
 817:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 1139              		.loc 1 817 7 view .LVU244
 1140              	.LBB5367:
 1141              	.LBI5367:
 1142              		.file 17 "/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  /tmp/ccfXobHU.s 			page 274


  19:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *
  55:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****  */
  59:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  60:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  63:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #include <bits/move.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  68:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
  69:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** # include <type_traits>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
  71:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  72:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus > 201402L
  73:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** # define __cpp_lib_array_constexpr 201603
  74:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
  75:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 275


  76:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** {
  78:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  80:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
  81:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    * @addtogroup iterators
  82:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    * @{
  83:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    */
  84:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
  85:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  86:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
  87:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  88:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  89:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  90:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  91:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  92:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @code
  93:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  94:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @endcode
  95:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
  96:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  97:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  99:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 100:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 101:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 102:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
 103:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 105:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     class reverse_iterator
 106:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 107:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 108:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 109:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 110:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 111:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 112:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     protected:
 113:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _Iterator current;
 114:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 115:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 116:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 117:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     public:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 119:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 120:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 121:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 122:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 123:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 124:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 125:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 126:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 127:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 129:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 130:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 131:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 132:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 276


 133:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 134:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 135:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 136:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 137:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 138:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 139:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 140:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The copy constructor is normal.
 141:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 142:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 143:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 144:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : current(__x.current) { }
 145:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 146:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 147:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 148:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 149:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 150:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 151:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 152:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 153:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 154:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       template<typename _Iter>
 155:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 156:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 157:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	: current(__x.base()) { }
 158:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 159:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 160:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 161:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 162:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 163:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       base() const
 164:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return current; }
 165:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 166:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 167:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 168:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 169:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 170:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 171:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 172:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 173:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 174:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 175:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 176:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 177:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator*() const
 178:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 179:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 180:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *--__tmp;
 181:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 182:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 183:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 184:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 185:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 186:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 187:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 188:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 189:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator->() const
ARM GAS  /tmp/ccfXobHU.s 			page 277


 190:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 191:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 192:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 193:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 194:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	--__tmp;
 195:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return _S_to_pointer(__tmp);
 196:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 197:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 198:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 199:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  @c *this
 200:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 201:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 202:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 203:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 204:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++()
 205:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 206:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	--current;
 207:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 208:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 209:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 210:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 211:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 212:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 213:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 215:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 216:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++(int)
 217:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 218:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 219:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	--current;
 220:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return __tmp;
 221:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 222:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 223:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 224:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  @c *this
 225:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 226:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 227:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 228:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 229:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator--()
 230:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 231:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++current;
 232:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 233:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 234:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 235:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 236:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 237:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 238:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 239:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 240:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 241:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator--(int)
 242:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 243:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 244:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++current;
 245:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return __tmp;
 246:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 278


 247:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 248:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 249:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 251:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 253:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 254:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator+(difference_type __n) const
 255:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 256:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 257:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 258:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  *this
 259:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 260:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 261:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 263:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 264:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator+=(difference_type __n)
 265:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 266:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	current -= __n;
 267:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 268:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 269:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 270:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 271:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 272:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 273:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 275:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 276:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator-(difference_type __n) const
 277:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 278:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 279:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 280:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  *this
 281:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 282:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 283:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 284:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 285:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 286:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator-=(difference_type __n)
 287:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 288:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	current += __n;
 289:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 290:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 291:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 292:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 293:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 294:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 295:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 297:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 298:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator[](difference_type __n) const
 299:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *(*this + __n); }
 300:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 301:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     private:
 302:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       template<typename _Tp>
 303:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
ARM GAS  /tmp/ccfXobHU.s 			page 279


 304:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 305:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****         { return __p; }
 306:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 307:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       template<typename _Tp>
 308:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 309:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 310:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****         { return __t.operator->(); }
 311:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     };
 312:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 313:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   //@{
 314:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 315:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 316:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 317:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @return  A simple bool.
 318:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 319:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 320:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 321:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 322:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 323:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 324:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 325:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 326:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 327:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 328:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 329:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 330:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 331:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 332:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 333:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 334:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 335:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 336:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 337:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 338:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 339:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 340:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 341:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 342:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 343:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 344:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 345:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y < __x; }
 346:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 347:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 348:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 349:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 350:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 351:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 352:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 353:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 354:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 355:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 356:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 357:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 358:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 359:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 360:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
ARM GAS  /tmp/ccfXobHU.s 			page 280


 361:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 362:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 363:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 364:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 365:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 366:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 367:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 368:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 369:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 370:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 371:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 372:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 373:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 374:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 375:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 376:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 377:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 378:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 379:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 380:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 381:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 382:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 383:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y < __x; }
 384:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 385:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 386:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 387:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 388:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 389:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 390:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 391:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 392:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 393:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 394:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 395:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 396:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   //@}
 397:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 398:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 399:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 400:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 401:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 402:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 403:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 404:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 405:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 406:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 407:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 408:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 409:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 410:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #else
 411:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 412:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 413:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 414:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 415:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 416:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 417:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
ARM GAS  /tmp/ccfXobHU.s 			page 281


 418:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 419:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 420:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 421:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 422:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 423:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 424:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 425:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 426:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 427:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 428:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 429:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 430:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 432:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 433:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 434:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** # if __cplusplus > 201103L
 435:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 436:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 437:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 438:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 439:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 440:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 441:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 442:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 443:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 444:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** # endif
 445:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 446:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 447:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 448:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 449:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     auto
 450:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 451:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 452:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 453:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 454:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 455:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 456:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : __is_move_iterator<_Iterator>
 457:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { };
 458:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 459:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator>
 460:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     auto
 461:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 462:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 463:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 464:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 465:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 466:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 467:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 468:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 469:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 470:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 471:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 472:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  push_back.
 473:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 474:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
ARM GAS  /tmp/ccfXobHU.s 			page 282


 475:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  save typing.
 476:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 477:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container>
 478:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     class back_insert_iterator
 479:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 480:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 481:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     protected:
 482:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _Container* container;
 483:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 484:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     public:
 485:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 486:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 487:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 488:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 489:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       explicit
 490:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x)
 491:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 492:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 493:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 494:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 495:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 496:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 497:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 498:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 499:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 500:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 501:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 502:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 503:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 504:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 505:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator&
 506:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 507:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 508:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_back(__value);
 509:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 510:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 511:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #else
 512:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator&
 513:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 514:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 515:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_back(__value);
 516:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 517:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 518:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 519:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator&
 520:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 521:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 522:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 523:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 524:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 525:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 526:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 527:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.
 528:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator&
 529:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator*()
 530:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 531:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 283


 532:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 533:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator&
 534:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++()
 535:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 536:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 537:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 538:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       back_insert_iterator
 539:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++(int)
 540:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 541:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     };
 542:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 543:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 544:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 545:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 546:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 547:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 548:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 549:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 550:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 551:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 552:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  types for you.
 553:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 554:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container>
 555:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 556:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 557:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 558:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 559:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 560:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 561:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 562:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 563:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 564:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  push_front.
 565:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 566:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 567:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  save typing.
 568:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 569:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container>
 570:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     class front_insert_iterator
 571:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 572:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 573:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     protected:
 574:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _Container* container;
 575:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 576:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     public:
 577:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 578:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 579:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 580:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 581:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x)
 582:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 583:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 584:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 585:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 586:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 587:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 588:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
ARM GAS  /tmp/ccfXobHU.s 			page 284


 589:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 590:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 591:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 592:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 593:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 594:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 595:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 596:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator&
 597:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 598:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 599:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_front(__value);
 600:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 601:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 602:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #else
 603:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator&
 604:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 605:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 606:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_front(__value);
 607:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 608:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 609:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 610:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator&
 611:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 612:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 613:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 614:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 615:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 616:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 617:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 618:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.
 619:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator&
 620:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator*()
 621:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 622:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 623:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 624:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator&
 625:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++()
 626:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 627:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 628:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 629:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       front_insert_iterator
 630:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++(int)
 631:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 632:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     };
 633:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 634:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 635:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 636:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 637:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 638:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 639:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 640:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 641:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 642:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 643:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  types for you.
 644:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 645:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container>
ARM GAS  /tmp/ccfXobHU.s 			page 285


 646:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 647:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 648:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 649:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 650:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 651:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 652:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 653:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 654:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 655:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 656:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  position.
 657:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 658:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 659:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  %iterator's position.)
 660:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 661:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 662:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  save typing.
 663:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
 664:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container>
 665:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     class insert_iterator
 666:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 667:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 668:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     protected:
 669:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _Container* container;
 670:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typename _Container::iterator iter;
 671:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 672:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     public:
 673:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 674:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 675:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 676:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 677:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 678:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 679:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 680:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 681:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 682:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 683:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /**
 684:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 685:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 686:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 687:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 688:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 689:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 690:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 691:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 692:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 693:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 694:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 695:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @code
 696:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     // vector v contains A and Z
 697:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
 698:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 699:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     i = 1;
 700:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     i = 2;
 701:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     i = 3;
 702:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *
ARM GAS  /tmp/ccfXobHU.s 			page 286


 703:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 704:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****        *  @endcode
 705:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       */
 706:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 707:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 708:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 709:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 710:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 711:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++iter;
 712:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 713:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 714:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #else
 715:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 716:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 717:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 718:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 719:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++iter;
 720:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 721:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 722:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 723:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 724:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 725:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 726:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 727:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++iter;
 728:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	return *this;
 729:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       }
 730:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** #endif
 731:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 732:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.
 733:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 734:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator*()
 735:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 736:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 737:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 738:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 739:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++()
 740:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 741:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 742:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 743:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       insert_iterator&
 744:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++(int)
 745:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *this; }
 746:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     };
 747:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 748:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   /**
 749:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 750:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @param __i  An iterator into the container.
 751:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 752:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *
 753:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 754:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 755:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 756:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 757:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 758:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****    *  types for you.
 759:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   */
ARM GAS  /tmp/ccfXobHU.s 			page 287


 760:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 761:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 762:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 763:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 764:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 765:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 766:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     }
 767:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 768:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // @} group iterators
 769:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 770:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 771:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** } // namespace
 772:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 773:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 774:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** {
 775:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 776:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 777:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 778:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 779:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 780:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 781:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 782:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 783:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 784:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   using std::iterator_traits;
 785:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   using std::iterator;
 786:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 787:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     class __normal_iterator
 788:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     {
 789:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     protected:
 790:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _Iterator _M_current;
 791:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 792:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 793:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 794:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****     public:
 795:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 796:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 797:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 798:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 799:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 800:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 801:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 802:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 803:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 804:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 805:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       explicit
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 1143              		.loc 17 806 7 view .LVU245
 1144              	.LBE5367:
 1145              	.LBE5366:
 1146              	.LBB5369:
 1147              	.LBI5369:
 835:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 1148              		.loc 1 835 7 view .LVU246
 1149              	.LBB5370:
 1150              	.LBI5370:
 1151              		.loc 17 806 7 view .LVU247
ARM GAS  /tmp/ccfXobHU.s 			page 288


 1152              		.loc 17 806 7 is_stmt 0 view .LVU248
 1153              	.LBE5370:
 1154              	.LBE5369:
 1155              	.LBB5372:
 1156              	.LBI5372:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1157              		.loc 1 273 7 is_stmt 1 view .LVU249
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1158              		.loc 1 273 7 is_stmt 0 view .LVU250
 1159              	.LBE5372:
 555:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 1160              		.loc 1 555 31 view .LVU251
 1161 007e D8E90A13 		ldrd	r1, r3, [r8, #40]
 1162              	.LVL65:
 1163              	.LBB5373:
 1164              	.LBI5373:
 1165              		.loc 11 305 5 is_stmt 1 view .LVU252
 1166              	.LBB5374:
 1167              	.LBI5374:
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 1168              		.loc 11 115 5 view .LVU253
 1169              	.LBB5375:
 1170              	.LBB5376:
 1171              	.LBI5376:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 1172              		.loc 11 99 9 view .LVU254
 1173              	.LBB5377:
 1174              	.LBI5377:
 1175              		.loc 10 465 5 view .LVU255
 1176              	.LBB5378:
 1177              	.LBI5378:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1178              		.loc 10 438 5 view .LVU256
 1179              	.LBB5379:
 1180              	.LBI5379:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1181              		.loc 10 393 5 view .LVU257
 1182              	.LBB5380:
 1183              	.LBB5381:
 1184              	.LBI5381:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 1185              		.loc 10 375 2 view .LVU258
 1186              	.LBB5382:
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  if (_Num)
 1187              		.loc 10 384 34 is_stmt 0 view .LVU259
 1188 0082 5D1A     		subs	r5, r3, r1
 1189              	.LVL66:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1190              		.loc 10 385 4 view .LVU260
 1191 0084 9942     		cmp	r1, r3
 1192 0086 4FEAA508 		asr	r8, r5, #2
 1193              	.LVL67:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1194              		.loc 10 385 4 view .LVU261
 1195 008a 2FD1     		bne	.L59
 1196              	.LVL68:
 1197              	.L45:
ARM GAS  /tmp/ccfXobHU.s 			page 289


 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1198              		.loc 10 385 4 view .LVU262
 1199              	.LBE5382:
 1200              	.LBE5381:
 1201              	.LBE5380:
 1202              	.LBE5379:
 1203              	.LBE5378:
 1204              	.LBE5377:
 1205              	.LBE5376:
 1206              	.LBE5375:
 1207              	.LBE5374:
 1208              	.LBE5373:
 1209              	.LBE5337:
 1210              	.LBE5336:
  20:Mu/music/theory.cpp ****     return std::find(v.begin(), v.end(), note % 12) != v.end();
 1211              		.loc 12 20 47 view .LVU263
 1212 008c 3749     		ldr	r1, .L87+4
 1213 008e F317     		asrs	r3, r6, #31
 1214              	.LBB5421:
 1215              	.LBB5422:
 1216              	.LBB5423:
 1217              	.LBB5424:
 1218              		.file 18 "/usr/include/newlib/c++/9.2.1/bits/stl_algo.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // Algorithm implementation -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
ARM GAS  /tmp/ccfXobHU.s 			page 290


  35:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Copyright (c) 1996
  40:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** /** @file bits/stl_algo.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #ifndef _STL_ALGO_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #define _STL_ALGO_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <cstdlib>	     // for rand
  60:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <bits/algorithmfwd.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <bits/stl_heap.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  63:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <bits/predefined_ops.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  65:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
  66:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #include <bits/uniform_int_dist.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
  68:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  69:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
  70:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  71:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  72:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** {
  73:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  74:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  75:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  76:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Iterator, typename _Compare>
  77:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
  78:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  79:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  80:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
  81:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__comp(__a, __b))
  82:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
  83:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__b, __c))
  84:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __b);
  85:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
  86:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __c);
  87:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
  88:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__result, __a);
  89:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
  90:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__comp(__a, __c))
  91:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __a);
ARM GAS  /tmp/ccfXobHU.s 			page 291


  92:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__comp(__b, __c))
  93:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __c);
  94:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
  95:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::iter_swap(__result, __b);
  96:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
  97:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
  98:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is an overload used by find algos for the Input Iterator case.
  99:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 100:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _InputIterator
 101:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_if(_InputIterator __first, _InputIterator __last,
 102:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Predicate __pred, input_iterator_tag)
 103:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 104:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last && !__pred(__first))
 105:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	++__first;
 106:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first;
 107:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 108:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 109:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is an overload used by find algos for the RAI case.
 110:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Predicate>
 111:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _RandomAccessIterator
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
 113:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 114:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 115:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::difference_type
 116:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__trip_count = (__last - __first) >> 2;
 1219              		.loc 18 116 2 view .LVU264
 1220 0090 4FEAA807 		asr	r7, r8, #2
 1221              	.LBE5424:
 1222              	.LBE5423:
 1223              	.LBE5422:
 1224              	.LBE5421:
 1225              	.LBB5467:
 1226              	.LBB5418:
 1227              	.LBB5410:
 1228              	.LBB5407:
 1229              	.LBB5404:
 1230              	.LBB5401:
 1231              	.LBB5398:
 1232              	.LBB5395:
 1233              	.LBB5392:
 1234              	.LBB5389:
 1235              	.LBB5386:
 1236              	.LBB5383:
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 1237              		.loc 10 387 22 view .LVU265
 1238 0094 6219     		adds	r2, r4, r5
 1239              	.LVL69:
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 1240              		.loc 10 387 22 view .LVU266
 1241              	.LBE5383:
 1242              	.LBE5386:
 1243              	.LBE5389:
 1244              	.LBE5392:
 1245              	.LBE5395:
 1246              	.LBE5398:
 1247              	.LBE5401:
 1248              	.LBE5404:
ARM GAS  /tmp/ccfXobHU.s 			page 292


 1249              	.LBE5407:
 1250              	.LBE5410:
 1251              	.LBE5418:
 1252              	.LBE5467:
 1253              		.loc 12 20 5 is_stmt 1 view .LVU267
 1254              	.LBB5468:
 1255              	.LBI5468:
 808:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1256              		.loc 1 808 7 view .LVU268
 1257              	.LBB5469:
 1258              	.LBI5469:
 1259              		.loc 17 806 7 view .LVU269
 1260              		.loc 17 806 7 is_stmt 0 view .LVU270
 1261              	.LBE5469:
 1262              	.LBE5468:
 1263              	.LBB5471:
 1264              	.LBI5471:
 826:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1265              		.loc 1 826 7 is_stmt 1 view .LVU271
 1266              	.LBB5472:
 1267              	.LBI5472:
 1268              		.loc 17 806 7 view .LVU272
 1269              		.loc 17 806 7 is_stmt 0 view .LVU273
 1270              	.LBE5472:
 1271              	.LBE5471:
 1272              		.loc 12 20 47 view .LVU274
 1273 0096 81FB0601 		smull	r0, r1, r1, r6
 1274              	.LBB5474:
 1275              	.LBB5457:
 1276              	.LBB5451:
 1277              	.LBB5445:
 117:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __trip_count > 0; --__trip_count)
 1278              		.loc 18 118 27 view .LVU275
 1279 009a 002F     		cmp	r7, #0
 1280              	.LBE5445:
 1281              	.LBE5451:
 1282              	.LBE5457:
 1283              	.LBE5474:
 1284              		.loc 12 20 47 view .LVU276
 1285 009c C3EB6103 		rsb	r3, r3, r1, asr #1
 1286 00a0 03EB4303 		add	r3, r3, r3, lsl #1
 1287 00a4 A6EB8303 		sub	r3, r6, r3, lsl #2
 1288              	.LVL70:
 1289              	.LBB5475:
 1290              	.LBI5421:
 119:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 121:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 122:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 123:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 125:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 126:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 127:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 129:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
ARM GAS  /tmp/ccfXobHU.s 			page 293


 130:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 131:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 133:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 134:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 135:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 136:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       switch (__last - __first)
 138:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 139:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	case 3:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 141:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 142:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 143:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	case 2:
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 145:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 147:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	case 1:
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(__first))
 149:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 150:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
 151:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	case 0:
 152:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	default:
 153:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __last;
 154:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 155:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 156:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 157:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Iterator, typename _Predicate>
 158:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _Iterator
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
 160:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 161:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __find_if(__first, __last, __pred,
 162:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       std::__iterator_category(__first));
 163:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 164:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 165:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// Provided for stable_partition to use.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 167:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _InputIterator
 168:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 169:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _Predicate __pred)
 170:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 171:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__find_if(__first, __last,
 172:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 173:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    std::__iterator_category(__first));
 174:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 175:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 176:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 177:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// remaining range length instead of comparing against an end
 178:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// iterator.
 179:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 180:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _InputIterator
 181:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 182:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 183:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __len; --__len,  (void) ++__first)
 184:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 185:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  break;
 186:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first;
ARM GAS  /tmp/ccfXobHU.s 			page 294


 187:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 188:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 189:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_difference
 190:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_intersection
 191:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_symmetric_difference
 192:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_union
 193:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // for_each
 194:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // find
 195:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // find_if
 196:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // find_first_of
 197:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // adjacent_find
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // count
 199:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // count_if
 200:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // search
 201:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 202:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator1
 205:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 206:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 207:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _BinaryPredicate  __predicate)
 208:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 209:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Test for empty ranges
 210:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 211:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first1;
 212:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 213:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Test for a pattern of length 1.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 215:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (++__p1 == __last2)
 216:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return std::__find_if(__first1, __last1,
 217:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 218:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 219:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // General case.
 220:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator2 __p;
 221:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator1 __current = __first1;
 222:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 223:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (;;)
 224:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 225:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first1 =
 226:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::__find_if(__first1, __last1,
 227:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 228:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 229:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__first1 == __last1)
 230:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __last1;
 231:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __p = __p1;
 233:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __current = __first1;
 234:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (++__current == __last1)
 235:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __last1;
 236:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 237:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__predicate(__current, __p))
 238:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 239:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (++__p == __last2)
 240:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return __first1;
 241:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (++__current == __last1)
 242:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return __last1;
 243:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
ARM GAS  /tmp/ccfXobHU.s 			page 295


 244:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first1;
 245:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 246:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first1;
 247:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 248:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 249:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // search_n
 250:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 251:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 252:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 253:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 254:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 255:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 256:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 257:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 258:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 259:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   std::forward_iterator_tag)
 260:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 261:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 262:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last)
 263:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 264:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 265:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __n = __count;
 266:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ForwardIterator __i = __first;
 267:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__i;
 268:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 269:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 270:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__i;
 271:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      --__n;
 272:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
 273:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__n == 1)
 274:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 275:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__i == __last)
 276:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __last;
 277:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 278:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 279:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __last;
 280:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 281:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 282:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 283:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 284:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  iterators.
 285:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 286:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
 287:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 288:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _RandomAccessIter
 289:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 290:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 291:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   std::random_access_iterator_tag)
 292:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 293:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 294:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
 295:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 296:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 297:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __remainder = __count;
 298:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 299:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 300:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
ARM GAS  /tmp/ccfXobHU.s 			page 296


 301:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first += __remainder;
 302:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __tailSize -= __remainder;
 303:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 304:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  // next possible match.
 305:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 306:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 307:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 308:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (--__remainder == 0)
 309:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return (__first - __count); // Success
 310:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
 311:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 312:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 313:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __last; // Failure
 314:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 315:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 316:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 317:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 318:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 319:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 320:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _Integer __count,
 321:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 322:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 323:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__count <= 0)
 324:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
 325:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 326:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__count == 1)
 327:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 328:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 329:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 330:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				 std::__iterator_category(__first));
 331:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 332:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 333:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // find_end for forward iterators.
 334:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 335:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 336:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator1
 337:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 338:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 339:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 340:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 341:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 342:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first2 == __last2)
 343:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last1;
 344:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 345:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator1 __result = __last1;
 346:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (1)
 347:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 348:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ForwardIterator1 __new_result
 349:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 350:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__new_result == __last1)
 351:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __result;
 352:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
 353:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 354:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __result = __new_result;
 355:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __first1 = __new_result;
 356:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first1;
 357:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
ARM GAS  /tmp/ccfXobHU.s 			page 297


 358:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 359:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 360:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 361:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 362:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 363:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 364:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _BidirectionalIterator1
 365:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 366:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 367:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 368:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 369:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 370:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 371:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 372:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 373:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 374:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator1>)
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 376:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator2>)
 377:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 378:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 379:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 380:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 381:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 382:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 383:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
 384:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					      __comp);
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__rresult == __rlast1)
 388:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last1;
 389:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
 390:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 391:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 392:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __result;
 394:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 395:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 396:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 397:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 398:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 399:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 400:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 401:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 402:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 403:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 404:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   The last iterator @c i in the range
 405:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 406:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 407:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 408:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 409:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 410:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 411:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
 412:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 413:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 414:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  subsequence contained in [__first1,__last1).
ARM GAS  /tmp/ccfXobHU.s 			page 298


 415:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 416:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 417:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 418:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 419:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 420:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 421:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 422:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 423:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 424:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator1
 425:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 426:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 427:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 428:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 429:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 430:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 431:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 432:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 433:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 434:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 435:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 436:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 437:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 439:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 440:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 441:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 442:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 443:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 444:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 445:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 446:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 447:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 448:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 449:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 450:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    The predicate to use.
 451:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return The last iterator @c i in the range @p
 452:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
 453:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 454:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 455:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  exists.
 456:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 457:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 458:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 459:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 460:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 461:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 462:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 463:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 464:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 465:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 466:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 467:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 468:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 469:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 470:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 471:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
ARM GAS  /tmp/ccfXobHU.s 			page 299


 472:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 473:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator1
 474:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 475:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 476:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _BinaryPredicate __comp)
 477:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 478:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 479:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 480:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 481:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 482:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 483:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 484:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 485:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 486:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 487:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 488:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 489:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 490:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 491:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 492:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 493:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
 494:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 495:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
 496:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          of a sequence.
 497:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 498:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 499:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 500:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 501:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 502:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 503:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
 504:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 505:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 506:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 507:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
 508:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 509:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 510:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 511:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 512:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 513:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          of a sequence.
 514:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 515:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 516:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 517:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 518:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 519:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 520:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 521:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 522:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 523:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 524:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
 525:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 526:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 527:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 528:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
ARM GAS  /tmp/ccfXobHU.s 			page 300


 529:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for at least an element
 530:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          of a sequence.
 531:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 532:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 533:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 534:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 535:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 536:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 537:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Returns true if an element exists in the range @p
 538:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 539:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  otherwise.
 540:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 541:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 542:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
 543:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 544:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 545:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 546:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 547:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 548:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          predicate is false.
 549:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 550:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 551:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 552:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 553:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 554:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 555:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 556:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 557:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _InputIterator
 558:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 559:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_Predicate __pred)
 560:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 561:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 562:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 563:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 564:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 565:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 566:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__find_if_not(__first, __last,
 567:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 568:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 569:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 570:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 571:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 572:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 573:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 574:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 575:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 576:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 577:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 578:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  do not.
 579:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 580:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 581:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
 582:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
 583:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Predicate __pred)
 584:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 585:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
ARM GAS  /tmp/ccfXobHU.s 			page 301


 586:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
 587:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return true;
 588:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__first;
 589:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::none_of(__first, __last, __pred);
 590:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 591:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 592:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 593:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 594:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 595:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
 596:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
 597:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 598:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 599:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 600:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 601:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 602:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 603:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
 604:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _Predicate __pred)
 605:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 606:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 607:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 608:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 609:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 610:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 611:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // A specific debug-mode test will be necessary...
 612:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 613:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 614:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 615:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
 616:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 617:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 618:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __half;
 619:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __middle;
 620:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 621:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__len > 0)
 622:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 623:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __half = __len >> 1;
 624:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __middle = __first;
 625:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
 626:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__pred(*__middle))
 627:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 628:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __first = __middle;
 629:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first;
 630:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
 631:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
 632:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
 633:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __len = __half;
 634:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 635:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first;
 636:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 637:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
 638:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 639:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 640:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 641:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
 642:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
ARM GAS  /tmp/ccfXobHU.s 			page 302


 643:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 644:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 645:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 646:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 647:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
 648:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *__result = *__first;
 649:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__result;
 650:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
 651:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
 652:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 653:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 654:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 655:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 656:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 657:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 658:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 659:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 660:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __value   The value to be removed.
 661:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 662:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 663:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 664:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 665:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 666:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  are copied is unchanged.
 667:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 668:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 669:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
 670:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 671:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 672:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 673:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 674:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 675:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 676:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 677:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 678:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 679:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 680:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 681:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 682:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 683:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 684:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 685:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 686:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 687:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 688:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 689:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 690:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 691:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 692:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 693:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 694:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 695:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 696:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 697:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 698:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  copied is unchanged.
 699:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
ARM GAS  /tmp/ccfXobHU.s 			page 303


 700:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 701:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 702:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
 703:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 704:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 705:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 706:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 707:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 708:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 709:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 710:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 711:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 712:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 713:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 714:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 715:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 716:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 717:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 718:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
 719:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 720:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 721:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 722:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 723:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 724:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 725:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 726:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 727:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 728:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 729:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
 730:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 731:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 732:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  copied is unchanged.
 733:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 734:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 735:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Predicate>
 736:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
 737:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 738:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 739:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 740:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 741:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 742:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 743:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 744:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 745:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 746:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 747:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 748:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 749:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__pred(*__first))
 750:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
 751:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *__result = *__first;
 752:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__result;
 753:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
 754:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
 755:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 756:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 304


 757:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 758:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
 759:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
 760:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 761:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 762:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__n > 0)
 763:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 764:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (true)
 765:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
 766:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__result = *__first;
 767:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__result;
 768:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (--__n > 0)
 769:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		++__first;
 770:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      else
 771:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		break;
 772:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
 773:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 774:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
 775:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 776:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 777:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 778:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _OutputIterator>
 779:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
 780:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 781:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 782:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 783:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 784:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 785:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 786:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 787:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 788:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __n      The number of elements to copy.
 789:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result An output iterator.
 790:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  result+n.
 791:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 792:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 793:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 794:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 795:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  optimizations such as unrolling).
 796:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 797:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 798:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
 799:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 800:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 801:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 802:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 803:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 804:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 805:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 806:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 807:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   std::__iterator_category(__first));
 808:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 809:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 810:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 811:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 812:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         depending on the truth value of a predicate.
 813:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
ARM GAS  /tmp/ccfXobHU.s 			page 305


 814:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 815:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 816:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __out_true   An output iterator.
 817:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __out_false  An output iterator.
 818:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 819:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 820:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 821:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 822:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
 823:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 824:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 825:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 826:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 827:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 828:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 829:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 830:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Predicate __pred)
 831:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 832:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 833:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 834:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 835:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 836:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 837:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 838:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 839:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 840:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 841:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       
 842:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 843:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__pred(*__first))
 844:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
 845:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *__out_true = *__first;
 846:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__out_true;
 847:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
 848:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	else
 849:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
 850:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *__out_false = *__first;
 851:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__out_false;
 852:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
 853:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 854:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 855:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 856:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
 857:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 858:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 859:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 860:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 861:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_Predicate __pred)
 862:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 863:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 864:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
 865:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
 866:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __result = __first;
 867:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__first;
 868:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 869:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__pred(__first))
 870:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
ARM GAS  /tmp/ccfXobHU.s 			page 306


 871:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *__result = _GLIBCXX_MOVE(*__first);
 872:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__result;
 873:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
 874:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
 875:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 876:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 877:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 878:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Remove elements from a sequence.
 879:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 880:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 881:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 882:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __value  The value to be removed.
 883:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 884:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 885:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 886:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
 887:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 888:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 889:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 890:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 891:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 892:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 893:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 894:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 895:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 896:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 897:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   const _Tp& __value)
 898:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 899:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 900:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 901:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
 902:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 903:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 904:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 905:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 906:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 907:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 908:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 909:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 910:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 911:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 912:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 913:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 914:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 915:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 916:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 917:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 918:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 919:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
 920:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 921:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 922:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 923:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 924:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 925:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 926:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 927:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
ARM GAS  /tmp/ccfXobHU.s 			page 307


 928:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 929:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 930:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Predicate __pred)
 931:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 932:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 933:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 934:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
 935:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 936:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 937:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 938:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 939:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 940:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 941:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 942:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 943:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 944:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 945:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 946:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 947:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 948:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
 949:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
 950:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
 951:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__next != __last)
 952:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 953:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__binary_pred(__first, __next))
 954:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 955:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first = __next;
 956:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
 957:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __last;
 958:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 959:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 960:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 961:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
 962:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
 963:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 964:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 965:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Skip the beginning, if already unique.
 966:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 967:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
 968:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
 969:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 970:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Do the real copy work.
 971:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __dest = __first;
 972:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__first;
 973:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__first != __last)
 974:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__dest, __first))
 975:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 976:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return ++__dest;
 977:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
 978:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
 979:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
 980:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 981:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 982:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 983:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 984:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
ARM GAS  /tmp/ccfXobHU.s 			page 308


 985:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
 986:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 987:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  values that compare equal.
 988:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 989:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
 990:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 991:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 992:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
 993:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
 994:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
 995:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 996:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 997:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
 998:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 999:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1000:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
1001:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
1002:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1003:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1004:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__unique(__first, __last,
1005:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
1006:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1007:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1008:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1009:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
1010:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1011:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
1012:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
1013:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
1014:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1015:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1016:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
1017:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  values for which @p __binary_pred returns true.
1018:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
1019:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  not removed is unchanged.
1020:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
1021:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
1022:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1023:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1024:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1025:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1026:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   _BinaryPredicate __binary_pred)
1027:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1028:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1029:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1030:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1031:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1032:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1033:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1034:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1035:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1036:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__unique(__first, __last,
1037:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1038:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1039:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1040:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1041:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an uglified
ARM GAS  /tmp/ccfXobHU.s 			page 309


1042:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1043:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1044:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1045:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1046:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1047:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1048:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
1049:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1050:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1051:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1052:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1053:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1054:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1055:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1056:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1057:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1058:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1059:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       *__result = *__first;
1060:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__next != __last)
1061:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__first, __next))
1062:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
1063:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __first = __next;
1064:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *++__result = *__first;
1065:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
1066:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return ++__result;
1067:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1068:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1069:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1070:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an uglified
1071:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1072:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1073:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1074:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1075:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1076:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1077:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
1078:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1079:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1080:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1081:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1082:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1083:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1084:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
1085:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1086:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1087:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1088:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1089:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__rebound_pred
1090:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1091:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       *__result = __value;
1092:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__first != __last)
1093:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1094:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
1095:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __value = *__first;
1096:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    *++__result = __value;
1097:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
1098:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return ++__result;
ARM GAS  /tmp/ccfXobHU.s 			page 310


1099:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1100:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1101:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1102:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an uglified
1103:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1104:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *              _BinaryPredicate)
1105:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1106:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1107:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1108:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1109:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
1110:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1111:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1113:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1114:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1115:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1116:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1117:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       *__result = *__first;
1119:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__first != __last)
1120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__binary_pred(__result, __first))
1121:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *++__result = *__first;
1122:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return ++__result;
1123:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1124:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1125:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1126:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1127:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1128:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  overloaded for bidirectional iterators.
1129:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1130:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1131:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1133:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1134:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1135:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (true)
1136:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__first == __last || __first == --__last)
1137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return;
1138:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	else
1139:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
1140:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __last);
1141:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__first;
1142:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
1143:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1144:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1145:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1146:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1147:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  overloaded for random access iterators.
1149:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1150:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1151:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1152:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
1153:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      random_access_iterator_tag)
1154:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1155:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
ARM GAS  /tmp/ccfXobHU.s 			page 311


1156:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
1157:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__last;
1158:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first < __last)
1159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1160:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1161:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1162:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__last;
1163:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1164:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1165:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1166:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1167:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Reverse a sequence.
1168:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1169:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1170:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1171:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   reverse() returns no value.
1172:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1173:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1174:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  so that the first element becomes the last etc.
1175:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1176:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1177:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1178:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1179:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
1180:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1181:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1182:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1183:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1184:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1185:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1186:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1187:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1188:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1189:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1190:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
1191:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1192:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1193:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1194:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1195:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1196:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1197:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1198:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1199:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1200:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1201:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1202:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1203:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1204:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1205:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1206:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
1207:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1208:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		 _OutputIterator __result)
1209:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1210:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1211:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1212:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
ARM GAS  /tmp/ccfXobHU.s 			page 312


1213:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1214:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1215:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1216:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1217:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last)
1218:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1219:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__last;
1220:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__result = *__last;
1221:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__result;
1222:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1223:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
1224:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1225:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1226:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1227:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1228:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1229:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1230:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _EuclideanRingElement>
1231:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _EuclideanRingElement
1232:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1233:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1234:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__n != 0)
1235:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1236:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1237:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __m = __n;
1238:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __n = __t;
1239:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1240:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __m;
1241:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1242:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1243:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   inline namespace _V2
1244:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   {
1245:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1246:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1247:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
1248:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
1249:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __rotate(_ForwardIterator __first,
1250:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _ForwardIterator __middle,
1251:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _ForwardIterator __last,
1252:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     forward_iterator_tag)
1253:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1254:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __middle)
1255:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
1256:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1257:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1258:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1259:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __first2 = __middle;
1260:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       do
1261:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1262:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1263:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1264:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first2;
1265:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__first == __middle)
1266:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __middle = __first2;
1267:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1268:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first2 != __last);
1269:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 313


1270:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __ret = __first;
1271:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1272:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first2 = __middle;
1273:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1274:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first2 != __last)
1275:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1276:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1277:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1278:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first2;
1279:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__first == __middle)
1280:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __middle = __first2;
1281:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else if (__first2 == __last)
1282:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __first2 = __middle;
1283:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1284:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __ret;
1285:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1286:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1287:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1288:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1289:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _BidirectionalIterator
1290:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1291:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _BidirectionalIterator __middle,
1292:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _BidirectionalIterator __last,
1293:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1294:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1295:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1296:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1297:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1298:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1299:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __middle)
1300:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
1301:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1302:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1303:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1304:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1305:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1306:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1307:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __middle && __middle != __last)
1308:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1309:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, --__last);
1310:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1311:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1312:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1313:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __middle)
1314:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1315:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1316:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __last;
1317:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1318:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
1319:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1320:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1321:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __first;
1322:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1323:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1324:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1325:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1326:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
ARM GAS  /tmp/ccfXobHU.s 			page 314


1327:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1328:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1329:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _RandomAccessIterator __middle,
1330:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _RandomAccessIterator __last,
1331:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     random_access_iterator_tag)
1332:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1333:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1334:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1335:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1336:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1337:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __middle)
1338:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
1339:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__last == __middle)
1340:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1341:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1342:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1343:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Distance;
1344:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1345:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_ValueType;
1346:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1347:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __n = __last   - __first;
1348:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __k = __middle - __first;
1349:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1350:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__k == __n - __k)
1351:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1352:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1353:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __middle;
1354:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1355:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1356:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __p = __first;
1357:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __ret = __first + (__last - __middle);
1358:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1359:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (;;)
1360:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1361:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__k < __n - __k)
1362:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
1363:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1364:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{
1365:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1366:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1367:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1368:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  return __ret;
1369:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		}
1370:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1371:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1372:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{
1373:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1374:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  ++__p;
1375:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  ++__q;
1376:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		}
1377:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __n %= __k;
1378:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__n == 0)
1379:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return __ret;
1380:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::swap(__n, __k);
1381:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __k = __n - __k;
1382:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
1383:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
ARM GAS  /tmp/ccfXobHU.s 			page 315


1384:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
1385:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __k = __n - __k;
1386:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1387:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{
1388:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1389:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1390:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1391:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  return __ret;
1392:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		}
1393:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1394:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __p = __q - __k;
1395:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1396:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{
1397:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  --__p;
1398:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  --__q;
1399:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1400:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		}
1401:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __n %= __k;
1402:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__n == 0)
1403:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return __ret;
1404:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::swap(__n, __k);
1405:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
1406:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1407:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1408:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1409:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
1410:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    // DR 488. rotate throws away useful information
1411:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1412:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1413:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1414:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1415:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1416:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1417:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  first + (last - middle).
1418:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1419:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1420:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1421:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1422:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1423:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last).
1424:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1425:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1426:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__middle,__last).
1427:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1428:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Performs
1429:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1430:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1431:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1432:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
1433:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1434:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1435:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   _ForwardIterator __last)
1436:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1437:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1438:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1439:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1440:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
ARM GAS  /tmp/ccfXobHU.s 			page 316


1441:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1442:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1443:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__rotate(__first, __middle, __last,
1444:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   std::__iterator_category(__first));
1445:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1446:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1447:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   } // namespace _V2
1448:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1449:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1450:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1451:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1452:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1453:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1454:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1455:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1456:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1457:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1458:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1459:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1460:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
1461:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1462:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1463:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first,__last).
1464:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1465:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Performs 
1466:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1467:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1468:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1469:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1470:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
1471:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1472:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_ForwardIterator __last, _OutputIterator __result)
1473:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1474:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1475:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1476:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1477:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1478:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1479:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1480:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1481:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::copy(__first, __middle,
1482:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       std::copy(__middle, __last, __result));
1483:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1484:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1485:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function...
1486:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1487:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
1488:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1489:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1490:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1491:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
1492:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1493:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1494:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__pred(*__first))
1495:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (++__first == __last)
1496:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __first;
1497:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 317


1498:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1499:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1500:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (++__next != __last)
1501:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__pred(*__next))
1502:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
1503:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __next);
1504:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__first;
1505:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
1506:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1507:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first;
1508:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1509:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1510:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function...
1511:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1512:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _BidirectionalIterator
1513:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1514:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1515:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1516:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (true)
1517:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1518:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (true)
1519:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    if (__first == __last)
1520:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return __first;
1521:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    else if (__pred(*__first))
1522:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first;
1523:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    else
1524:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      break;
1525:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__last;
1526:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (true)
1527:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    if (__first == __last)
1528:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return __first;
1529:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1530:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      --__last;
1531:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    else
1532:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      break;
1533:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1534:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1535:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1536:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1537:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1538:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // partition
1539:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1540:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function...
1541:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1542:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// and __len == distance(__first, __last).
1543:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   ///
1544:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1545:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// move-assign an element onto itself.
1546:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
1547:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Distance>
1548:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
1549:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
1550:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				_ForwardIterator __last,
1551:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				_Predicate __pred, _Distance __len,
1552:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				_Pointer __buffer,
1553:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				_Distance __buffer_size)
1554:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
ARM GAS  /tmp/ccfXobHU.s 			page 318


1555:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len == 1)
1556:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1557:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1558:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len <= __buffer_size)
1559:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1560:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1561:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _Pointer __result2 = __buffer;
1562:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1563:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1564:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1565:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1566:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1567:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__result2;
1568:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1569:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  for (; __first != __last; ++__first)
1570:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    if (__pred(__first))
1571:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      {
1572:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1573:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		++__result1;
1574:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      }
1575:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    else
1576:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      {
1577:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1578:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		++__result2;
1579:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      }
1580:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1581:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1582:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __result1;
1583:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1584:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1585:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __middle = __first;
1586:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::advance(__middle, __len / 2);
1587:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __left_split =
1588:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__stable_partition_adaptive(__first, __middle, __pred,
1589:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					 __len / 2, __buffer,
1590:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					 __buffer_size);
1591:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1592:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Advance past true-predicate values to satisfy this
1593:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // function's preconditions.
1594:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1595:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __right_split =
1596:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1597:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1598:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__right_len)
1599:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__right_split =
1600:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__stable_partition_adaptive(__right_split, __last, __pred,
1601:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					   __right_len,
1602:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					   __buffer, __buffer_size);
1603:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1604:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::rotate(__left_split, __middle, __right_split);
1605:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1606:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1607:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1608:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
1609:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1610:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       _Predicate __pred)
1611:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
ARM GAS  /tmp/ccfXobHU.s 			page 319


1612:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1613:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1614:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
1615:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __first;
1616:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1617:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1618:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_ValueType;
1619:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1620:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
1621:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1622:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType>
1623:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__buf(__first, std::distance(__first, __last));
1624:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return
1625:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__stable_partition_adaptive(__first, __last, __pred,
1626:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					 _DistanceType(__buf.requested_size()),
1627:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					 __buf.begin(),
1628:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					 _DistanceType(__buf.size()));
1629:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1630:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1631:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1632:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1633:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         of a sequence, preserving relative ordering.
1634:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1635:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1636:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1637:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A predicate functor.
1638:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1639:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1640:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  in the range @p [middle,last).
1641:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1642:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1643:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1644:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1645:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1646:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1647:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1648:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1649:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
1650:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1651:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Predicate __pred)
1652:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1653:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1654:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1655:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _ForwardIterator>)
1656:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1657:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1658:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1659:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1660:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__stable_partition(__first, __last,
1661:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1662:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1663:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1664:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routines.
1665:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1666:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1667:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1668:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __middle,
ARM GAS  /tmp/ccfXobHU.s 			page 320


1669:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1670:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1671:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1672:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1673:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__comp(__i, __first))
1674:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1675:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1676:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1677:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // partial_sort
1678:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1679:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1680:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
1681:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1682:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1683:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			_RandomAccessIterator __result_first,
1684:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			_RandomAccessIterator __result_last,
1685:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			_Compare __comp)
1686:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1687:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1688:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_InputValueType;
1689:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1690:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1691:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1692:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__result_first == __result_last)
1693:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __result_last;
1694:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1695:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1696:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1697:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__result_real_last = *__first;
1698:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__result_real_last;
1699:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1700:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1701:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       
1702:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1703:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last)
1704:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1705:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__first, __result_first))
1706:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1707:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			       _DistanceType(__result_real_last
1708:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					     - __result_first),
1709:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			       _InputValueType(*__first), __comp);
1710:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1711:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1712:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1713:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result_real_last;
1714:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1715:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1716:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1717:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
1718:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1719:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
1720:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
1721:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1722:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1723:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1724:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1725:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
ARM GAS  /tmp/ccfXobHU.s 			page 321


1726:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1727:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1728:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1729:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1730:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1731:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  *j<*i is false.
1732:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1733:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1734:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1735:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1736:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1737:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1738:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last)
1739:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1740:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1741:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1742:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_InputValueType;
1743:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1744:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_OutputValueType;
1745:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
1746:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1747:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1748:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1749:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1750:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _OutputValueType>)
1751:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1752:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						     _OutputValueType>)
1753:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1754:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1755:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
1756:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1757:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1758:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1759:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				      __result_first, __result_last,
1760:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1761:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1762:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1763:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1764:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1765:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         comparison.
1766:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1767:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An input iterator.
1768:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another input iterator.
1769:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1770:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1771:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
1772:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1773:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
1774:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1775:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
1776:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1777:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1778:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1779:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1780:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __comp(*j,*i) is false.
1781:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1782:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
ARM GAS  /tmp/ccfXobHU.s 			page 322


1783:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1784:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
1785:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1786:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1787:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1788:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last,
1789:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Compare __comp)
1790:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1791:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1792:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1793:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_InputValueType;
1794:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1795:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_OutputValueType;
1796:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
1797:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1798:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
1799:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1800:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1801:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1802:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1803:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _OutputValueType>)
1804:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1806:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1807:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1808:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1809:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
1810:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1811:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1812:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1813:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				      __result_first, __result_last,
1814:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
1815:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1816:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1817:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1818:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1819:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1820:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
1821:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			      _Compare __comp)
1822:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1823:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1824:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1825:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __next = __last;
1826:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__next;
1827:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__comp(__val, __next))
1828:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1829:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1830:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __last = __next;
1831:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__next;
1832:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1833:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
1834:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1835:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1836:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1837:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1838:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1839:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
ARM GAS  /tmp/ccfXobHU.s 			page 323


1840:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1841:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1842:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last) return;
1843:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1844:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1845:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1846:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__i, __first))
1847:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
1848:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1849:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1850:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1851:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1852:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
1853:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
1854:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1855:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1856:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1857:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1858:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1859:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1860:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1861:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
1862:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
1863:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1864:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1865:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1866:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1867:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1868:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1869:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1870:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
1871:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @doctodo
1872:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This controls some aspect of the sort routines.
1873:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
1874:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   enum { _S_threshold = 16 };
1875:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1876:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1877:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1878:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1879:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1880:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1881:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1882:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
1883:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1884:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1885:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1886:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					  __comp);
1887:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1888:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
1889:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1890:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1891:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1892:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function...
1893:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1894:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _RandomAccessIterator
1895:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1896:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __last,
ARM GAS  /tmp/ccfXobHU.s 			page 324


1897:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1898:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1899:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (true)
1900:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1901:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
1902:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__first;
1903:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__last;
1904:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
1905:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    --__last;
1906:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (!(__first < __last))
1907:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
1908:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1909:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
1910:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1911:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1912:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1913:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function...
1914:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1915:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _RandomAccessIterator
1916:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
1917:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1918:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1919:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1920:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1921:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __comp);
1922:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1923:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1924:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1925:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1926:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
1927:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1928:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _RandomAccessIterator __middle,
1929:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _RandomAccessIterator __last,
1930:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Compare __comp)
1931:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1932:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1933:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1934:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1935:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1936:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1937:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1938:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1939:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1940:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _RandomAccessIterator __last,
1941:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1942:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1943:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
1944:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1945:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1946:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
1947:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
1948:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return;
1949:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
1950:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__depth_limit;
1951:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1952:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1953:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
ARM GAS  /tmp/ccfXobHU.s 			page 325


1954:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __last = __cut;
1955:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1956:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1957:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1958:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // sort
1959:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1960:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1961:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
1962:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1963:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   _Compare __comp)
1964:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1965:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first != __last)
1966:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1967:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1968:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				std::__lg(__last - __first) * 2,
1969:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__comp);
1970:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
1971:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1972:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1973:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
1974:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1975:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
1976:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1977:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1978:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _Compare __comp)
1979:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
1980:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__last - __first > 3)
1981:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
1982:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1983:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
1984:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1985:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      // Place the nth largest element in its final position.
1986:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::iter_swap(__first, __nth);
1987:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return;
1988:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
1989:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__depth_limit;
1990:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1991:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1992:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__cut <= __nth)
1993:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __first = __cut;
1994:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
1995:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __last = __cut;
1996:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
1997:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
1998:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
1999:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2000:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // nth_element
2001:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2002:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // lower_bound moved to stl_algobase.h
2003:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2004:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2005:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2006:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2007:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2008:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2009:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2010:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
ARM GAS  /tmp/ccfXobHU.s 			page 326


2011:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2012:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2013:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2014:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           than @p __val.
2015:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2016:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2017:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2018:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2019:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2020:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2021:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2022:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2023:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2024:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2025:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2026:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2027:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2028:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2029:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2030:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2031:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2032:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2033:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2034:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2035:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2036:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2037:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
2038:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2039:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2040:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2041:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2042:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
2043:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2044:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2045:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2046:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__len > 0)
2047:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2048:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2049:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2050:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2051:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__val, __middle))
2052:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __len = __half;
2053:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2054:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2055:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __first = __middle;
2056:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first;
2057:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2058:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2059:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2060:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first;
2061:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2062:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2063:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2064:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2065:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2066:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2067:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
ARM GAS  /tmp/ccfXobHU.s 			page 327


2068:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2069:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2070:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2071:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2072:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2073:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2074:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2075:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2076:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2077:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		const _Tp& __val)
2078:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2079:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2080:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2081:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2082:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2083:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2084:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2085:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2086:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2087:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2088:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2089:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2090:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2091:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         without changing the ordering.
2092:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2093:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2094:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2095:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2096:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2097:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2098:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2099:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2100:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2101:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2102:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2103:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2104:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2105:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
2106:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2107:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2108:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2109:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2110:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2111:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2113:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2114:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2115:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2116:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2117:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2119:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2121:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2122:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2123:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2124:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  const _Tp& __val,
ARM GAS  /tmp/ccfXobHU.s 			page 328


2125:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2126:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2127:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2128:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
2129:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2130:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2131:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__len > 0)
2133:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2134:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2135:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2136:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2138:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2139:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __first = __middle;
2140:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first;
2141:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2142:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2143:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2144:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __len = __half;
2145:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2146:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2147:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _ForwardIterator __left
2148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
2149:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::advance(__first, __len);
2150:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _ForwardIterator __right
2151:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2152:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2153:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2154:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2155:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2156:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2157:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2158:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2160:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2161:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2162:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2163:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2164:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2165:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2166:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2167:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2168:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is equivalent to
2169:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @code
2170:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
2171:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2172:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @endcode
2173:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  but does not actually call those functions.
2174:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2175:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2176:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2177:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2178:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		const _Tp& __val)
2179:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2180:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2181:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
ARM GAS  /tmp/ccfXobHU.s 			page 329


2182:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2183:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2184:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2185:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2186:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2187:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2188:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2189:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2190:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2191:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2192:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2193:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2194:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2195:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2196:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2197:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2198:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2199:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2200:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2201:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2202:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2203:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2204:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This is equivalent to
2205:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @code
2206:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2207:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2208:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @endcode
2209:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  but does not actually call those functions.
2210:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2211:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2212:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2213:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2214:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2215:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2216:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2217:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2218:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2219:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2220:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2221:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2222:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2223:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2224:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2225:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2226:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2227:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2228:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2229:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2230:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2231:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2232:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2233:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2234:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2235:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2236:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2237:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2238:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
ARM GAS  /tmp/ccfXobHU.s 			page 330


2239:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  __first,@p __last ].
2240:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2241:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2242:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2243:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2244:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2245:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
2246:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2247:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  const _Tp& __val)
2248:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2249:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2250:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2251:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2252:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2253:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2254:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2255:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2256:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __i
2257:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2258:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2259:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __i != __last && !(__val < *__i);
2260:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2261:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2262:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2263:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2264:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2265:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2266:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2267:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val     The search term.
2268:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2269:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2270:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2271:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2272:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2273:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2274:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2275:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2276:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2277:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2278:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
2279:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2280:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2281:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2282:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2283:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2284:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2285:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2286:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2287:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2288:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2289:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 						__val, __comp);
2290:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2291:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __i
2292:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2293:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2294:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2295:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
ARM GAS  /tmp/ccfXobHU.s 			page 331


2296:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2297:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // merge
2298:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2299:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2300:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2301:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2302:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2303:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2304:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2305:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2306:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2307:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2308:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2309:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2310:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2311:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2312:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first2;
2313:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2314:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2315:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2316:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2317:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first1;
2318:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2319:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__result;
2320:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2321:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first1 != __last1)
2322:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2323:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2324:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2325:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2326:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2327:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2328:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2329:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
2330:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2331:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2332:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator2 __last2,
2333:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   _BidirectionalIterator3 __result,
2334:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   _Compare __comp)
2335:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2336:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first1 == __last1)
2337:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2338:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2339:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return;
2340:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2341:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__first2 == __last2)
2342:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
2343:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2344:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__last1;
2345:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__last2;
2346:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (true)
2347:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2348:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__last2, __last1))
2349:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2350:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2351:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__first1 == __last1)
2352:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{
ARM GAS  /tmp/ccfXobHU.s 			page 332


2353:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2354:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  return;
2355:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		}
2356:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      --__last1;
2357:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2358:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2359:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2360:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2361:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__first2 == __last2)
2362:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		return;
2363:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      --__last2;
2364:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2365:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2366:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2367:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2368:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2369:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2370:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Distance>
2371:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _BidirectionalIterator1
2372:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
2373:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2374:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator1 __last,
2375:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2376:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2377:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Distance __buffer_size)
2378:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2379:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2380:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2381:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2382:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__len2)
2383:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2384:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2385:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2386:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
2387:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2388:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2389:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
2390:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2391:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__len1 <= __buffer_size)
2392:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2393:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__len1)
2394:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2395:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2396:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2397:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2398:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2399:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2400:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __last;
2401:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2402:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
2403:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return std::rotate(__first, __middle, __last);
2404:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2405:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2406:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2407:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2408:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Pointer, typename _Compare>
2409:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
ARM GAS  /tmp/ccfXobHU.s 			page 333


2410:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2411:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __middle,
2412:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last,
2413:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2414:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2415:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Compare __comp)
2416:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2417:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2418:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2419:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2420:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
2421:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __first, __comp);
2422:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2423:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else if (__len2 <= __buffer_size)
2424:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2425:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2426:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2427:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					      __buffer_end, __last, __comp);
2428:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2429:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
2430:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2431:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2432:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2433:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _Distance __len11 = 0;
2434:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _Distance __len22 = 0;
2435:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__len1 > __len2)
2436:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2437:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len11 = __len1 / 2;
2438:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::advance(__first_cut, __len11);
2439:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __second_cut
2440:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2441:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2442:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
2443:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2444:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2445:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2446:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len22 = __len2 / 2;
2447:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::advance(__second_cut, __len22);
2448:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __first_cut
2449:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2450:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2451:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2452:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2453:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2454:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __new_middle
2455:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2456:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2457:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __buffer_size);
2458:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2459:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2460:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2461:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__len1 - __len11,
2462:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__len2 - __len22, __buffer,
2463:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__buffer_size, __comp);
2464:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2465:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2466:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 334


2467:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2468:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2469:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
2470:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2471:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2472:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _BidirectionalIterator __middle,
2473:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _BidirectionalIterator __last,
2474:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2475:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Compare __comp)
2476:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2477:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2478:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
2479:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2480:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len1 + __len2 == 2)
2481:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2482:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__middle, __first))
2483:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    std::iter_swap(__first, __middle);
2484:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return;
2485:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2486:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2487:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2488:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2489:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __len11 = 0;
2490:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __len22 = 0;
2491:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len1 > __len2)
2492:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2493:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __len11 = __len1 / 2;
2494:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__first_cut, __len11);
2495:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __second_cut
2496:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2497:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2498:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2499:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2500:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
2501:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2502:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __len22 = __len2 / 2;
2503:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::advance(__second_cut, __len22);
2504:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first_cut
2505:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2506:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2507:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2508:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2509:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2510:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator __new_middle
2511:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= std::rotate(__first_cut, __middle, __second_cut);
2512:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2513:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __len11, __len22, __comp);
2514:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2515:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2516:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2517:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2518:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2519:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2520:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2521:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _BidirectionalIterator __middle,
2522:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _BidirectionalIterator __last,
2523:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _Compare __comp)
ARM GAS  /tmp/ccfXobHU.s 			page 335


2524:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2525:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2526:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _ValueType;
2527:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2528:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _DistanceType;
2529:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2530:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __middle || __middle == __last)
2531:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
2532:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2533:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2534:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2535:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2536:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2537:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _TmpBuf __buf(__first, __len1 + __len2);
2538:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2539:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__buf.begin() == 0)
2540:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__merge_without_buffer
2541:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2542:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
2543:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__merge_adaptive
2544:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2545:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2546:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2547:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2548:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2549:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2550:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2551:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2552:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2553:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2554:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  Nothing.
2555:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2556:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2557:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2558:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2559:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
2560:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  range will always come before elements from the second.
2561:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2562:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2563:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2564:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  distance(__first,__last).
2565:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2566:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2567:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
2568:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2569:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2570:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __last)
2571:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2572:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2573:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2574:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2575:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2576:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2577:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2578:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2579:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2580:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 336


2581:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2582:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2583:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2584:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2585:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2586:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2587:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2588:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
2589:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2590:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2591:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2592:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  Nothing.
2593:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2594:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2595:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
2596:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2597:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2598:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  come before elements from the second.
2599:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2600:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2601:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2602:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  distance(__first,__last).
2603:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2604:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2605:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  the function used for the initial sort.
2606:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2607:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2608:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline void
2609:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2610:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2611:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _BidirectionalIterator __last,
2612:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		  _Compare __comp)
2613:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2614:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2615:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2616:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2617:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2618:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2619:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2620:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2621:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2622:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
2623:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2624:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2625:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2626:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2627:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2628:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2629:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2630:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2631:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
2632:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
2633:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2634:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2635:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2636:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2637:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
ARM GAS  /tmp/ccfXobHU.s 			page 337


2638:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2639:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2640:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2641:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2642:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first2;
2643:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2644:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
2645:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2646:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2647:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first1;
2648:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2649:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__result;
2650:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2651:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2652:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2653:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					   __result));
2654:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2655:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2656:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2657:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2658:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2659:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2660:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator1 __last,
2661:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2662:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Compare __comp)
2663:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2664:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2665:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2666:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__last - __first >= __two_step)
2667:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2668:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2669:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				       __first + __step_size,
2670:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				       __first + __two_step,
2671:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				       __result, __comp);
2672:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first += __two_step;
2673:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2674:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2675:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2676:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2677:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2678:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2679:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2680:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2681:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
2682:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2683:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2684:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2685:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2686:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2687:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__last - __first >= __chunk_size)
2688:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2689:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2690:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first += __chunk_size;
2691:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2692:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2693:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2694:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 338


2695:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   enum { _S_chunk_size = 7 };
2696:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2697:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2698:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2699:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2700:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     _RandomAccessIterator __last,
2701:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     _Pointer __buffer, _Compare __comp)
2702:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2703:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2704:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Distance;
2705:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2706:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _Distance __len = __last - __first;
2707:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2708:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2709:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2710:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
2711:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2712:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__step_size < __len)
2713:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2714:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2715:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				 __step_size, __comp);
2716:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __step_size *= 2;
2717:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2718:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				 __step_size, __comp);
2719:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __step_size *= 2;
2720:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2721:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2722:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2723:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2724:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2725:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2726:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2727:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2728:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Pointer __buffer, _Distance __buffer_size,
2729:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _Compare __comp)
2730:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2731:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2732:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
2733:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__len > __buffer_size)
2734:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2735:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2736:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				      __buffer_size, __comp);
2737:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2738:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				      __buffer_size, __comp);
2739:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2740:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
2741:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2742:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2743:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2744:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2745:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2746:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    _Distance(__middle - __first),
2747:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    _Distance(__last - __middle),
2748:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    __buffer, __buffer_size,
2749:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			    __comp);
2750:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2751:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 339


2752:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2753:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2754:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
2755:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2756:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2757:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2758:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__last - __first < 15)
2759:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2760:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2761:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return;
2762:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2763:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2764:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2765:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2766:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2767:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __middle - __first,
2768:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __last - __middle,
2769:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  __comp);
2770:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2771:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2772:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // stable_sort
2773:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2774:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2775:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2776:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2777:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // ranges are sorted.
2778:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2779:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2780:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
2781:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
2782:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2783:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2784:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	       _Compare __comp)
2785:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2786:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2787:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__comp(__first2, __first1))
2788:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return false;
2789:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	else if (__comp(__first1, __first2))
2790:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first1;
2791:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	else
2792:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  {
2793:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__first1;
2794:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    ++__first2;
2795:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  }
2796:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2797:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __first2 == __last2;
2798:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2799:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2800:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2801:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2802:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2803:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2804:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2805:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2806:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2807:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2808:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup set_algorithms
ARM GAS  /tmp/ccfXobHU.s 			page 340


2809:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2810:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2811:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2812:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2813:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  The iterators over each range only move forward, so this is a
2814:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2815:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2816:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  returned.
2817:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2818:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2819:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
2820:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2821:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2822:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2823:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2824:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2825:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2826:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2827:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2828:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2829:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2830:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2831:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2832:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2833:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2834:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive2(__first1, __last1);
2835:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive2(__first2, __last2);
2836:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2837:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2838:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2839:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2840:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2841:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2842:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2843:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  using comparison.
2844:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup set_algorithms
2845:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2846:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2847:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2848:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2849:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    Comparison function to use.
2850:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2851:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
2852:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2853:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2854:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2855:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2856:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2857:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2858:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2859:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2860:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  reaches @p __last2, false is returned.
2861:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2862:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2863:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Compare>
2864:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
2865:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
ARM GAS  /tmp/ccfXobHU.s 			page 341


2866:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2867:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	     _Compare __comp)
2868:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2869:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2870:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2871:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2872:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2873:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2874:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2875:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2876:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2877:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2878:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2879:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2880:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first1, __last1, __comp);
2881:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first2, __last2, __comp);
2882:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2883:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2884:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2885:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2886:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2887:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // nth_element
2888:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // merge
2889:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_difference
2890:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_intersection
2891:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_union
2892:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // stable_sort
2893:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // set_symmetric_difference
2894:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // min_element
2895:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // max_element
2896:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2897:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2898:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
2899:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2900:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2901:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2902:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
2903:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return false;
2904:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
2905:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__i;
2906:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__i == __last)
2907:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return false;
2908:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __i = __last;
2909:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__i;
2910:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2911:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for(;;)
2912:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
2913:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2914:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__i;
2915:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__i, __ii))
2916:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2917:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2918:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      while (!__comp(__i, --__j))
2919:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{}
2920:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
2921:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
2922:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
ARM GAS  /tmp/ccfXobHU.s 			page 342


2923:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return true;
2924:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2925:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__i == __first)
2926:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
2927:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
2928:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2929:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return false;
2930:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
2931:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
2932:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2933:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2934:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2935:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2936:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2937:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
2938:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
2939:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2940:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2941:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2942:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2943:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2944:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2945:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2946:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2947:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
2948:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2949:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
2950:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2951:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2952:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2953:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2954:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2955:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2956:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2957:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2958:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2959:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__next_permutation
2960:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2961:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2962:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2963:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
2964:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2965:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          comparison functor.
2966:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2967:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
2968:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
2969:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
2970:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2971:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
2972:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2973:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2974:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2975:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2976:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  smallest is generated and false returned.
2977:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
2978:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2979:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
ARM GAS  /tmp/ccfXobHU.s 			page 343


2980:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2981:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
2982:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
2983:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
2984:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2985:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2986:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2987:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2988:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2989:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2990:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
2991:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2992:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__next_permutation
2993:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
2994:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
2995:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
2996:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2997:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
2998:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
2999:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3000:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3001:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
3002:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return false;
3003:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
3004:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__i;
3005:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__i == __last)
3006:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return false;
3007:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __i = __last;
3008:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       --__i;
3009:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3010:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for(;;)
3011:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3012:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3013:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  --__i;
3014:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__ii, __i))
3015:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3016:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3017:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      while (!__comp(--__j, __i))
3018:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		{}
3019:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
3020:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
3021:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3022:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return true;
3023:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3024:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__i == __first)
3025:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3026:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
3027:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3028:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      return false;
3029:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3030:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3031:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3032:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3033:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3034:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3035:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3036:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
ARM GAS  /tmp/ccfXobHU.s 			page 344


3037:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3038:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3039:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3040:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3041:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3042:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3043:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3044:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  returned.
3045:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3046:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
3047:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3048:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3049:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
3050:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3051:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3052:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3053:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3054:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3055:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3056:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3057:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3058:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3059:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3060:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3061:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3062:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3063:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3064:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3065:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          comparison functor.
3066:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3067:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3068:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3069:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
3070:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3071:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3072:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3073:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3074:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3075:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3076:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  the largest is generated and false returned.
3077:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3078:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3079:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3080:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3081:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3082:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3083:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3084:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3085:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3086:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3087:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3088:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3089:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3090:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3091:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3092:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3093:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
ARM GAS  /tmp/ccfXobHU.s 			page 345


3094:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3095:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3096:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // replace
3097:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // replace_if
3098:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3099:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3100:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3101:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _OutputIterator
3102:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
3103:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _OutputIterator __result,
3104:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3105:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3106:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first, (void)++__result)
3107:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__pred(__first))
3108:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__result = __new_value;
3109:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	else
3110:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  *__result = *__first;
3111:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __result;
3112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3113:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3114:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3115:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3116:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         value.
3117:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3119:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
3121:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3122:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3123:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3124:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3125:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3126:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3127:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3128:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3129:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
3130:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3131:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		 _OutputIterator __result,
3132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3133:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3134:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3135:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3136:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3138:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3139:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3140:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3141:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3142:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3143:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3144:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					      __new_value);
3145:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3146:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3147:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3149:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         returns true with another value.
3150:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
ARM GAS  /tmp/ccfXobHU.s 			page 346


3151:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3152:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3153:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3154:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred       A predicate.
3155:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3156:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3157:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3158:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
3159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3160:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3161:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3162:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3163:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3164:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _OutputIterator
3165:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3166:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _OutputIterator __result,
3167:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3168:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3169:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3170:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3171:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3172:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3173:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3174:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3175:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3176:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3177:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3178:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3179:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 					      __new_value);
3180:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3181:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3182:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3183:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     typename iterator_traits<_InputIterator>::difference_type
3184:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3185:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3186:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
3187:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3188:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__pred(__first))
3189:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__n;
3190:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __n;
3191:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3192:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3193:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus >= 201103L
3194:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3195:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3196:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3197:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3198:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3199:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3200:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3201:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3202:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3203:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3204:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3205:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3206:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3207:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
ARM GAS  /tmp/ccfXobHU.s 			page 347


3208:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          according to a comparison functor.
3209:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3210:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3211:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3212:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3213:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3214:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3215:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3216:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3217:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3218:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Compare __comp)
3219:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3220:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3221:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3222:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _ForwardIterator
3223:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3224:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		      _Compare __comp)
3225:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3226:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
3227:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return __last;
3228:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3229:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3230:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (++__next; __next != __last; __first = __next, (void)++__next)
3231:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (__comp(__next, __first))
3232:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __next;
3233:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __next;
3234:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3235:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3236:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3237:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3238:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3239:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3240:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3241:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3242:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3243:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3244:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3245:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
3246:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3247:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3248:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3249:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3250:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3251:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3252:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3253:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3254:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3255:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3256:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3257:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3258:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3259:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3260:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3261:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3262:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   An iterator.
3263:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3264:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
ARM GAS  /tmp/ccfXobHU.s 			page 348


3265:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3266:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3267:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3268:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3269:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _ForwardIterator
3270:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3271:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		    _Compare __comp)
3272:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3273:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3274:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3275:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3276:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3277:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3278:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3279:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3280:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3281:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3282:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3283:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3284:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3285:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3286:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3287:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3288:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3289:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3290:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3291:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  __b) otherwise.
3292:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3293:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp>
3294:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3295:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3296:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3297:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3298:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3299:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3300:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3301:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3302:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		       : pair<const _Tp&, const _Tp&>(__a, __b);
3303:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3304:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3305:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3306:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3307:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3308:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3309:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3310:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3311:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3312:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  __b) otherwise.
3313:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3314:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3315:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3316:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3317:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
3318:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3319:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3320:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			      : pair<const _Tp&, const _Tp&>(__a, __b);
3321:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
ARM GAS  /tmp/ccfXobHU.s 			page 349


3322:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3323:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3324:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3325:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3326:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3327:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _Compare __comp)
3328:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3329:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3330:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last
3331:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  || ++__next == __last)
3332:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return std::make_pair(__first, __first);
3333:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3334:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator __min{}, __max{};
3335:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__comp(__next, __first))
3336:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3337:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __min = __next;
3338:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __max = __first;
3339:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3340:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
3341:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3342:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __min = __first;
3343:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __max = __next;
3344:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3345:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3346:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __first = __next;
3347:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       ++__first;
3348:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3349:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       while (__first != __last)
3350:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3351:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __next = __first;
3352:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (++__next == __last)
3353:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3354:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3355:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__min = __first;
3356:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      else if (!__comp(__first, __max))
3357:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__max = __first;
3358:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      break;
3359:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3360:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3361:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__comp(__next, __first))
3362:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3363:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__comp(__next, __min))
3364:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__min = __next;
3365:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (!__comp(__first, __max))
3366:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__max = __first;
3367:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3368:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  else
3369:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3370:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3371:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__min = __first;
3372:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      if (!__comp(__next, __max))
3373:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__max = __next;
3374:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3375:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3376:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __first = __next;
3377:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first;
3378:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
ARM GAS  /tmp/ccfXobHU.s 			page 350


3379:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3380:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::make_pair(__min, __max);
3381:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3382:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3383:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3384:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3385:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          elements in a range.
3386:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3387:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3388:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3389:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3390:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3391:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3392:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3393:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3394:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator>
3395:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3396:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3397:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3398:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3399:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3400:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3401:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3402:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3403:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3404:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3405:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3406:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3407:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3408:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3409:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3410:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3411:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3412:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          elements in a range.
3413:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3414:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  Start of range.
3415:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   End of range.
3416:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp   Comparison functor.
3417:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3418:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3419:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3420:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3421:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3422:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3423:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3424:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3425:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3426:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _Compare __comp)
3427:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3428:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3429:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3430:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3431:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3432:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3433:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3434:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3435:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 351


3436:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3437:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3438:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3439:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3440:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   // N2722 + DR 915.
3441:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp>
3442:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3443:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _Tp
3444:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     min(initializer_list<_Tp> __l)
3445:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3446:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3447:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3448:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3449:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _Tp
3450:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3451:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3452:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3453:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp>
3454:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3455:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _Tp
3456:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     max(initializer_list<_Tp> __l)
3457:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3458:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3459:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3460:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3461:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _Tp
3462:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3463:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3464:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3465:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp>
3466:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3467:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3468:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3469:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3470:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3471:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3472:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3473:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3474:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3475:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3476:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3477:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3478:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3479:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3480:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3481:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3482:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3483:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3484:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3485:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3486:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3487:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
3488:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3489:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _BinaryPredicate __pred)
3490:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3491:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3492:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // have the same elements in the same order.
ARM GAS  /tmp/ccfXobHU.s 			page 352


3493:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
3494:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3495:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  break;
3496:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3497:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first1 == __last1)
3498:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return true;
3499:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3500:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Establish __last2 assuming equal ranges by iterating over the
3501:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // rest of the list.
3502:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _ForwardIterator2 __last2 = __first2;
3503:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       std::advance(__last2, std::distance(__first1, __last1));
3504:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3505:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3506:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3507:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3508:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3509:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  
3510:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __matches
3511:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    = std::__count_if(__first2, __last2,
3512:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3513:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (0 == __matches ||
3514:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      std::__count_if(__scan, __last1,
3515:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3516:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      != __matches)
3517:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return false;
3518:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3519:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return true;
3520:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3521:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3522:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3523:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3524:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          to the first sequence.
3525:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3526:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3527:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3528:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3529:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3530:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          [__first2, __first2 + (__last1 - __first1)), beginning with 
3531:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          ForwardIterator2 begin, such that equal(__first1, __last1, begin)
3532:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          returns true; otherwise, returns false.
3533:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3534:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3535:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3536:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3537:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2)
3538:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3539:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3540:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3541:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3542:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3543:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator1>::value_type,
3544:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator2>::value_type>)
3545:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3546:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3547:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3548:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_equal_to_iter());
3549:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
ARM GAS  /tmp/ccfXobHU.s 			page 353


3550:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3551:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3552:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3553:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          to the first sequence.
3554:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3555:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3556:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3557:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3558:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3559:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3560:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3561:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3562:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3563:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3564:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3565:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3566:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3567:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3568:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3569:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3570:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3571:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3572:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3573:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3574:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3575:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3576:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3577:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3578:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3579:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3580:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3581:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3582:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3583:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus > 201103L
3584:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3585:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3586:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     bool
3587:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3588:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3589:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		     _BinaryPredicate __pred)
3590:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3591:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       using _Cat1
3592:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3593:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       using _Cat2
3594:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3595:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3596:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3597:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3598:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__ra_iters)
3599:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3600:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3601:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3602:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__d1 != __d2)
3603:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return false;
3604:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3605:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3606:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
ARM GAS  /tmp/ccfXobHU.s 			page 354


3607:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // have the same elements in the same order.
3608:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first1 != __last1 && __first2 != __last2;
3609:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  ++__first1, (void)++__first2)
3610:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3611:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  break;
3612:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3613:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__ra_iters)
3614:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3615:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__first1 == __last1)
3616:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return true;
3617:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3618:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
3619:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3620:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3621:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3622:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3623:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return true;
3624:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__d1 != __d2)
3625:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return false;
3626:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3627:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3628:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3629:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3630:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3631:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3632:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3633:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3634:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3635:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3636:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  if (0 == __matches
3637:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3638:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3639:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      != __matches)
3640:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return false;
3641:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3642:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return true;
3643:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3644:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3645:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3646:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3647:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          to the first sequence.
3648:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3649:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3650:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3651:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3652:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3653:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3654:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3655:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3656:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3657:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3658:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3659:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3660:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3661:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3662:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3663:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
ARM GAS  /tmp/ccfXobHU.s 			page 355


3664:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3665:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3666:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return
3667:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3668:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
3669:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3670:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3671:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3672:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3673:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          to the first sequence.
3674:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3675:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3676:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3677:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3678:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3679:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3680:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3681:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3682:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
3683:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *          otherwise, returns false.
3684:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3685:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3686:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3687:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline bool
3688:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3689:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3690:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 		   _BinaryPredicate __pred)
3691:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3692:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3693:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3694:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3695:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3696:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3697:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3698:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3699:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus > 201402L
3700:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3701:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #define __cpp_lib_clamp 201603
3702:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3703:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3704:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Returns the value clamped between lo and hi.
3705:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3706:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val  A value of arbitrary type.
3707:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __lo   A lower limit of arbitrary type.
3708:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __hi   An upper limit of arbitrary type.
3709:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return max(__val, __lo) if __val < __hi or min(__val, __hi) otherwise.
3710:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    */
3711:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp>
3712:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     constexpr const _Tp&
3713:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
3714:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3715:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_assert(!(__hi < __lo));
3716:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return (__val < __lo) ? __lo : (__hi < __val) ? __hi : __val;
3717:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3718:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3719:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3720:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief  Returns the value clamped between lo and hi.
ARM GAS  /tmp/ccfXobHU.s 			page 356


3721:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3722:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val   A value of arbitrary type.
3723:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __lo    A lower limit of arbitrary type.
3724:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __hi    An upper limit of arbitrary type.
3725:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __comp  A comparison functor.
3726:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return max(__val, __lo, __comp) if __comp(__val, __hi)
3727:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *	      or min(__val, __hi, __comp) otherwise.
3728:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    */
3729:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3730:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     constexpr const _Tp&
3731:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi, _Compare __comp)
3732:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3733:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_assert(!__comp(__hi, __lo));
3734:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __comp(__val, __lo) ? __lo : __comp(__hi, __val) ? __hi : __val;
3735:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3736:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif // C++17
3737:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif // C++14
3738:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3739:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #ifdef _GLIBCXX_USE_C99_STDINT_TR1
3740:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3741:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Generate two uniformly distributed integers using a
3742:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         single distribution invocation.
3743:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __b0    The upper bound for the first integer.
3744:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __b1    The upper bound for the second integer.
3745:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __g     A UniformRandomBitGenerator.
3746:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  A pair (i, j) with i and j uniformly distributed
3747:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *           over [0, __b0) and [0, __b1), respectively.
3748:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3749:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Requires: __b0 * __b1 <= __g.max() - __g.min().
3750:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3751:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Using uniform_int_distribution with a range that is very
3752:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  small relative to the range of the generator ends up wasting
3753:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  potentially expensively generated randomness, since
3754:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  uniform_int_distribution does not store leftover randomness
3755:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  between invocations.
3756:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3757:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  If we know we want two integers in ranges that are sufficiently
3758:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  small, we can compose the ranges, use a single distribution
3759:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  invocation, and significantly reduce the waste.
3760:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3761:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _IntType, typename _UniformRandomBitGenerator>
3762:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     pair<_IntType, _IntType>
3763:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     __gen_two_uniform_ints(_IntType __b0, _IntType __b1,
3764:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 			   _UniformRandomBitGenerator&& __g)
3765:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3766:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       _IntType __x
3767:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	= uniform_int_distribution<_IntType>{0, (__b0 * __b1) - 1}(__g);
3768:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return std::make_pair(__x / __b1, __x % __b1);
3769:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3770:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3771:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3772:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Shuffle the elements of a sequence using a uniform random
3773:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *         number generator.
3774:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3775:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
3776:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
3777:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __g       A UniformRandomNumberGenerator (26.5.1.3).
ARM GAS  /tmp/ccfXobHU.s 			page 357


3778:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return  Nothing.
3779:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3780:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Reorders the elements in the range @p [__first,__last) using @p __g to
3781:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  provide random numbers.
3782:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3783:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _RandomAccessIterator,
3784:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	   typename _UniformRandomNumberGenerator>
3785:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     void
3786:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
3787:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    _UniformRandomNumberGenerator&& __g)
3788:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3789:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3790:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
3791:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    _RandomAccessIterator>)
3792:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3793:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3794:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__first == __last)
3795:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
3796:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3797:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
3798:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_DistanceType;
3799:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3800:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename std::make_unsigned<_DistanceType>::type __ud_type;
3801:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename std::uniform_int_distribution<__ud_type> __distr_type;
3802:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename __distr_type::param_type __p_type;
3803:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3804:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename remove_reference<_UniformRandomNumberGenerator>::type
3805:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_Gen;
3806:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typedef typename common_type<typename _Gen::result_type, __ud_type>::type
3807:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__uc_type;
3808:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3809:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const __uc_type __urngrange = __g.max() - __g.min();
3810:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       const __uc_type __urange = __uc_type(__last - __first);
3811:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3812:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if (__urngrange / __urange >= __urange)
3813:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****         // I.e. (__urngrange >= __urange * __urange) but without wrap issues.
3814:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       {
3815:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	_RandomAccessIterator __i = __first + 1;
3816:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3817:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// Since we know the range isn't empty, an even number of elements
3818:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// means an uneven number of elements /to swap/, in which case we
3819:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// do the first one up front:
3820:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3821:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	if ((__urange % 2) == 0)
3822:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3823:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  __distr_type __d{0, 1};
3824:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__i++, __first + __d(__g));
3825:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3826:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3827:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// Now we know that __last - __i is even, so we do the rest in pairs,
3828:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// using a single distribution invocation to produce swap positions
3829:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	// for two successive elements at a time:
3830:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3831:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	while (__i != __last)
3832:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3833:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  const __uc_type __swap_range = __uc_type(__i - __first) + 1;
3834:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 358


3835:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  const pair<__uc_type, __uc_type> __pospos =
3836:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    __gen_two_uniform_ints(__swap_range, __swap_range + 1, __g);
3837:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3838:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__i++, __first + __pospos.first);
3839:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::iter_swap(__i++, __first + __pospos.second);
3840:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3841:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3842:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	return;
3843:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       }
3844:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3845:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __distr_type __d;
3846:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3847:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
3848:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	std::iter_swap(__i, __first + __d(__g, __p_type(0, __i - __first)));
3849:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3850:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif
3851:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3852:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif // C++11
3853:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3854:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
3855:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3856:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3857:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Apply a function to every element of a sequence.
3858:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3859:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3860:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3861:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __f      A unary function object.
3862:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   @p __f
3863:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3864:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Applies the function object @p __f to each element in the range
3865:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @p [first,last).  @p __f must not modify the order of the sequence.
3866:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  If @p __f has a return value it is ignored.
3867:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3868:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Function>
3869:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _Function
3870:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     for_each(_InputIterator __first, _InputIterator __last, _Function __f)
3871:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3872:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       // concept requirements
3873:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3874:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3875:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3876:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	__f(*__first);
3877:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       return __f; // N.B. [alg.foreach] says std::move(f) but it's redundant.
3878:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3879:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3880:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #if __cplusplus >= 201703L
3881:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3882:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Apply a function to every element of a sequence.
3883:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3884:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3885:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __n      A value convertible to an integer.
3886:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __f      A unary function object.
3887:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   `__first+__n`
3888:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *
3889:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  Applies the function object `__f` to each element in the range
3890:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  `[first, first+n)`.  `__f` must not modify the order of the sequence.
3891:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  If `__f` has a return value it is ignored.
ARM GAS  /tmp/ccfXobHU.s 			page 359


3892:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3893:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _Function>
3894:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     _InputIterator
3895:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     for_each_n(_InputIterator __first, _Size __n, _Function __f)
3896:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
3897:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::difference_type __n2 = __n;
3898:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       using _Cat = typename iterator_traits<_InputIterator>::iterator_category;
3899:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       if constexpr (is_base_of_v<random_access_iterator_tag, _Cat>)
3900:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3901:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  auto __last = __first + __n2;
3902:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  std::for_each(__first, __last, std::move(__f));
3903:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __last;
3904:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3905:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****       else
3906:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
3907:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  while (__n2-->0)
3908:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    {
3909:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      __f(*__first);
3910:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      ++__first;
3911:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    }
3912:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	  return __first;
3913:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	}
3914:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     }
3915:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** #endif // C++17
3916:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 
3917:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   /**
3918:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @brief Find the first occurrence of a value in a sequence.
3919:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3920:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3921:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3922:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @param  __val    The value to find.
3923:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3924:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****    *  such that @c *i == @p __val, or @p __last if no such iterator exists.
3925:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   */
3926:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3927:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     inline _InputIterator
3928:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     find(_InputIterator __first, _InputIterator __last,
 1291              		.loc 18 3928 5 is_stmt 1 view .LVU277
 1292              	.LBB5458:
 1293              	.LBI5458:
 1294              		.file 19 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
   1:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // Default predicates for internal use -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // Copyright (C) 2013-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /tmp/ccfXobHU.s 			page 360


  17:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** /** @file predefined_ops.h
  26:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****  *  You should not attempt to use it directly. @headername{algorithm}
  28:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #ifndef _GLIBCXX_PREDEFINED_OPS_H
  31:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #define _GLIBCXX_PREDEFINED_OPS_H	1
  32:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  33:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** namespace __gnu_cxx
  34:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** {
  35:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** namespace __ops
  36:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** {
  37:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   struct _Iter_less_iter
  38:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   {
  39:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     template<typename _Iterator1, typename _Iterator2>
  40:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _GLIBCXX14_CONSTEXPR
  41:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       bool
  42:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       operator()(_Iterator1 __it1, _Iterator2 __it2) const
  43:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { return *__it1 < *__it2; }
  44:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   };
  45:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  46:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   _GLIBCXX14_CONSTEXPR
  47:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_less_iter
  48:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_less_iter()
  49:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_less_iter(); }
  50:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   struct _Iter_less_val
  52:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   {
  53:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #if __cplusplus >= 201103L
  54:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     constexpr _Iter_less_val() = default;
  55:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #else
  56:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     _Iter_less_val() { }
  57:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #endif
  58:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     explicit
  60:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     _Iter_less_val(_Iter_less_iter) { }
  61:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  62:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     template<typename _Iterator, typename _Value>
  63:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       bool
  64:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       operator()(_Iterator __it, _Value& __val) const
  65:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { return *__it < __val; }
  66:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   };
  67:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  68:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_less_val
  69:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_less_val()
  70:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  71:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  72:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_less_val
  73:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_comp_val(_Iter_less_iter)
ARM GAS  /tmp/ccfXobHU.s 			page 361


  74:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_less_val(); }
  75:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  76:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   struct _Val_less_iter
  77:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   {
  78:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #if __cplusplus >= 201103L
  79:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     constexpr _Val_less_iter() = default;
  80:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #else
  81:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     _Val_less_iter() { }
  82:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #endif
  83:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  84:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     explicit
  85:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     _Val_less_iter(_Iter_less_iter) { }
  86:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  87:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     template<typename _Value, typename _Iterator>
  88:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       bool
  89:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       operator()(_Value& __val, _Iterator __it) const
  90:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { return __val < *__it; }
  91:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   };
  92:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  93:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Val_less_iter
  94:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __val_less_iter()
  95:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Val_less_iter(); }
  96:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
  97:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Val_less_iter
  98:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __val_comp_iter(_Iter_less_iter)
  99:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Val_less_iter(); }
 100:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 101:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   struct _Iter_equal_to_iter
 102:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   {
 103:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     template<typename _Iterator1, typename _Iterator2>
 104:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       bool
 105:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       operator()(_Iterator1 __it1, _Iterator2 __it2) const
 106:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { return *__it1 == *__it2; }
 107:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   };
 108:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 109:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_equal_to_iter
 110:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_equal_to_iter()
 111:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_equal_to_iter(); }
 112:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 113:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   struct _Iter_equal_to_val
 114:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   {
 115:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     template<typename _Iterator, typename _Value>
 116:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       bool
 117:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       operator()(_Iterator __it, _Value& __val) const
 118:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { return *__it == __val; }
 119:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   };
 120:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 121:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_equal_to_val
 122:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_equal_to_val()
 123:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_equal_to_val(); }
 124:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 125:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   inline _Iter_equal_to_val
 126:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   __iter_comp_val(_Iter_equal_to_iter)
 127:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   { return _Iter_equal_to_val(); }
 128:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 129:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 130:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     struct _Iter_comp_iter
ARM GAS  /tmp/ccfXobHU.s 			page 362


 131:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     {
 132:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Compare _M_comp;
 133:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 134:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit _GLIBCXX14_CONSTEXPR
 135:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Iter_comp_iter(_Compare __comp)
 136:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(_GLIBCXX_MOVE(__comp))
 137:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 138:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 139:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       template<typename _Iterator1, typename _Iterator2>
 140:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****         _GLIBCXX14_CONSTEXPR
 141:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****         bool
 142:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****         operator()(_Iterator1 __it1, _Iterator2 __it2)
 143:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****         { return bool(_M_comp(*__it1, *__it2)); }
 144:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     };
 145:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 146:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 147:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     _GLIBCXX14_CONSTEXPR
 148:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     inline _Iter_comp_iter<_Compare>
 149:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __iter_comp_iter(_Compare __comp)
 150:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     { return _Iter_comp_iter<_Compare>(_GLIBCXX_MOVE(__comp)); }
 151:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 152:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 153:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     struct _Iter_comp_val
 154:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     {
 155:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Compare _M_comp;
 156:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 157:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 158:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Iter_comp_val(_Compare __comp)
 159:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(_GLIBCXX_MOVE(__comp))
 160:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 161:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 162:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 163:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Iter_comp_val(const _Iter_comp_iter<_Compare>& __comp)
 164:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(__comp._M_comp)
 165:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 166:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 167:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #if __cplusplus >= 201103L
 168:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 169:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Iter_comp_val(_Iter_comp_iter<_Compare>&& __comp)
 170:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(std::move(__comp._M_comp))
 171:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 172:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #endif
 173:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 174:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       template<typename _Iterator, typename _Value>
 175:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	bool
 176:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	operator()(_Iterator __it, _Value& __val)
 177:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return bool(_M_comp(*__it, __val)); }
 178:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     };
 179:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 180:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 181:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****    inline _Iter_comp_val<_Compare>
 182:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __iter_comp_val(_Compare __comp)
 183:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     { return _Iter_comp_val<_Compare>(_GLIBCXX_MOVE(__comp)); }
 184:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 185:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 186:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     inline _Iter_comp_val<_Compare>
 187:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __iter_comp_val(_Iter_comp_iter<_Compare> __comp)
ARM GAS  /tmp/ccfXobHU.s 			page 363


 188:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     { return _Iter_comp_val<_Compare>(_GLIBCXX_MOVE(__comp)); }
 189:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 190:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 191:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     struct _Val_comp_iter
 192:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     {
 193:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Compare _M_comp;
 194:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 195:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 196:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Val_comp_iter(_Compare __comp)
 197:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(_GLIBCXX_MOVE(__comp))
 198:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 199:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 200:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 201:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Val_comp_iter(const _Iter_comp_iter<_Compare>& __comp)
 202:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(__comp._M_comp)
 203:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 204:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 205:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #if __cplusplus >= 201103L
 206:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 207:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Val_comp_iter(_Iter_comp_iter<_Compare>&& __comp)
 208:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_comp(std::move(__comp._M_comp))
 209:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 210:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** #endif
 211:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 212:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       template<typename _Value, typename _Iterator>
 213:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	bool
 214:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	operator()(_Value& __val, _Iterator __it)
 215:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return bool(_M_comp(__val, *__it)); }
 216:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     };
 217:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 218:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 219:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     inline _Val_comp_iter<_Compare>
 220:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __val_comp_iter(_Compare __comp)
 221:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     { return _Val_comp_iter<_Compare>(_GLIBCXX_MOVE(__comp)); }
 222:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 223:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Compare>
 224:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     inline _Val_comp_iter<_Compare>
 225:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __val_comp_iter(_Iter_comp_iter<_Compare> __comp)
 226:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     { return _Val_comp_iter<_Compare>(_GLIBCXX_MOVE(__comp)); }
 227:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 228:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Value>
 229:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     struct _Iter_equals_val
 230:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     {
 231:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Value& _M_value;
 232:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 233:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       explicit
 234:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       _Iter_equals_val(_Value& __value)
 235:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_value(__value)
 236:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       { }
 237:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 238:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****       template<typename _Iterator>
 239:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	bool
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	operator()(_Iterator __it)
 241:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 242:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     };
 243:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 
 244:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****   template<typename _Value>
ARM GAS  /tmp/ccfXobHU.s 			page 364


 245:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     inline _Iter_equals_val<_Value>
 246:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h ****     __iter_equals_val(_Value& __val)
 1295              		.loc 19 246 5 view .LVU278
 1296              	.LBB5459:
 1297              	.LBI5459:
 234:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_value(__value)
 1298              		.loc 19 234 7 view .LVU279
 234:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_value(__value)
 1299              		.loc 19 234 7 is_stmt 0 view .LVU280
 1300              	.LBE5459:
 1301              	.LBE5458:
 1302              	.LBB5461:
 1303              	.LBI5422:
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 1304              		.loc 18 159 5 is_stmt 1 view .LVU281
 1305              	.LBB5452:
 1306              	.LBI5423:
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 1307              		.loc 18 112 5 view .LVU282
 1308              	.LBB5446:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1309              		.loc 18 118 27 view .LVU283
 1310 00a8 5BDD     		ble	.L61
 1311 00aa 04EB0717 		add	r7, r4, r7, lsl #4
 1312              	.LVL71:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1313              		.loc 18 118 27 is_stmt 0 view .LVU284
 1314 00ae 2146     		mov	r1, r4
 1315 00b0 0BE0     		b	.L52
 1316              	.LVL72:
 1317              	.L47:
 1318              	.LBB5425:
 1319              	.LBI5425:
 807:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 808:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 809:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 810:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       template<typename _Iter>
 811:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 812:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 			  typename __enable_if<
 813:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 814:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 815:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 816:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 817:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       // Forward iterator requirements
 818:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       reference
 819:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 820:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return *_M_current; }
 821:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 822:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       pointer
 823:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 824:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       { return _M_current; }
 825:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 
 826:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       __normal_iterator&
 827:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 1320              		.loc 17 827 7 is_stmt 1 view .LVU285
 1321              		.loc 17 827 7 is_stmt 0 view .LVU286
 1322              	.LBE5425:
ARM GAS  /tmp/ccfXobHU.s 			page 365


 1323              	.LBB5427:
 1324              	.LBI5427:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1325              		.loc 19 240 2 is_stmt 1 view .LVU287
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1326              		.loc 19 240 2 is_stmt 0 view .LVU288
 1327              	.LBE5427:
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1328              		.loc 18 124 4 view .LVU289
 1329 00b2 4868     		ldr	r0, [r1, #4]
 1330 00b4 8342     		cmp	r3, r0
 1331 00b6 22D0     		beq	.L82
 1332              	.LVL73:
 1333              	.LBB5428:
 1334              	.LBI5428:
 1335              		.loc 17 827 7 is_stmt 1 view .LVU290
 1336              		.loc 17 827 7 is_stmt 0 view .LVU291
 1337              	.LBE5428:
 1338              	.LBB5430:
 1339              	.LBI5430:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1340              		.loc 19 240 2 is_stmt 1 view .LVU292
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1341              		.loc 19 240 2 is_stmt 0 view .LVU293
 1342              	.LBE5430:
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1343              		.loc 18 128 4 view .LVU294
 1344 00b8 8868     		ldr	r0, [r1, #8]
 1345 00ba 8342     		cmp	r3, r0
 1346 00bc 24D0     		beq	.L83
 1347              	.LVL74:
 1348              	.LBB5431:
 1349              	.LBI5431:
 1350              		.loc 17 827 7 is_stmt 1 view .LVU295
 1351              		.loc 17 827 7 is_stmt 0 view .LVU296
 1352              	.LBE5431:
 1353              	.LBB5433:
 1354              	.LBI5433:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1355              		.loc 19 240 2 is_stmt 1 view .LVU297
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1356              		.loc 19 240 2 is_stmt 0 view .LVU298
 1357              	.LBE5433:
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1358              		.loc 18 132 4 view .LVU299
 1359 00be C868     		ldr	r0, [r1, #12]
 1360 00c0 8342     		cmp	r3, r0
 1361 00c2 27D0     		beq	.L84
 1362              	.LVL75:
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1363              		.loc 18 132 4 view .LVU300
 1364 00c4 1031     		adds	r1, r1, #16
 1365              	.LVL76:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1366              		.loc 18 118 7 is_stmt 1 view .LVU301
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1367              		.loc 18 118 27 view .LVU302
ARM GAS  /tmp/ccfXobHU.s 			page 366


 1368 00c6 8F42     		cmp	r7, r1
 1369 00c8 2AD0     		beq	.L85
 1370              	.LVL77:
 1371              	.L52:
 1372              	.LBB5434:
 1373              	.LBI5434:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1374              		.loc 19 240 2 view .LVU303
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1375              		.loc 19 240 2 is_stmt 0 view .LVU304
 1376              	.LBE5434:
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1377              		.loc 18 120 4 view .LVU305
 1378 00ca 0868     		ldr	r0, [r1]
 1379 00cc 8342     		cmp	r3, r0
 1380 00ce F0D1     		bne	.L47
 1381              	.LVL78:
 1382              	.L80:
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1383              		.loc 18 120 4 view .LVU306
 1384 00d0 551A     		subs	r5, r2, r1
 1385 00d2 18BF     		it	ne
 1386 00d4 0125     		movne	r5, #1
 1387              	.LVL79:
 1388              	.L48:
 120:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1389              		.loc 18 120 4 view .LVU307
 1390              	.LBE5446:
 1391              	.LBE5452:
 1392              	.LBE5461:
 1393              	.LBE5475:
 1394              	.LBB5476:
 1395              	.LBI5476:
 826:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1396              		.loc 1 826 7 is_stmt 1 view .LVU308
 1397              	.LBB5477:
 1398              	.LBI5477:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1399              		.loc 17 806 7 view .LVU309
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1400              		.loc 17 806 7 is_stmt 0 view .LVU310
 1401              	.LBE5477:
 1402              	.LBE5476:
 1403              	.LBB5479:
 1404              	.LBI5479:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1405              		.loc 1 675 7 is_stmt 1 view .LVU311
 1406              	.LBB5480:
 1407              	.LBI5480:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1408              		.loc 1 273 7 view .LVU312
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1409              		.loc 1 273 7 is_stmt 0 view .LVU313
 1410              	.LBE5480:
 1411              	.LBB5481:
 1412              	.LBI5481:
 1413              		.loc 2 203 5 is_stmt 1 view .LVU314
ARM GAS  /tmp/ccfXobHU.s 			page 367


 1414              		.loc 2 203 5 is_stmt 0 view .LVU315
 1415              	.LBE5481:
 1416              	.LBB5482:
 1417              	.LBI5482:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1418              		.loc 1 330 7 is_stmt 1 view .LVU316
 1419              	.LBB5483:
 1420              	.LBI5483:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1421              		.loc 1 347 7 view .LVU317
 1422              	.LBB5484:
 1423              	.LBB5485:
 1424              	.LBI5485:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1425              		.loc 4 469 7 view .LVU318
 1426              	.LBB5486:
 1427              	.LBB5487:
 1428              	.LBI5487:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 1429              		.loc 5 119 7 view .LVU319
 1430              	.LBB5488:
 1431              		.loc 5 128 19 is_stmt 0 view .LVU320
 1432 00d6 2046     		mov	r0, r4
 1433 00d8 FFF7FEFF 		bl	_ZdlPv
 1434              	.LVL80:
 1435              		.loc 5 128 19 view .LVU321
 1436              	.LBE5488:
 1437              	.LBE5487:
 1438              	.LBE5486:
 1439              	.LBE5485:
 1440              	.LBE5484:
 1441              	.LBE5483:
 1442              	.LBB5489:
 1443              	.LBI5489:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 1444              		.loc 1 125 14 is_stmt 1 view .LVU322
 1445              	.LBB5490:
 1446              	.LBI5490:
 1447              		.loc 6 153 7 view .LVU323
 1448              	.LBB5491:
 1449              	.LBI5491:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1450              		.loc 5 89 7 view .LVU324
 1451              	.L77:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1452              		.loc 5 89 7 is_stmt 0 view .LVU325
 1453              	.LBE5491:
 1454              	.LBE5490:
 1455              	.LBE5489:
 1456              	.LBE5482:
 1457              	.LBE5479:
  21:Mu/music/theory.cpp **** };...
 1458              		.loc 12 21 1 view .LVU326
 1459 00dc 2846     		mov	r0, r5
 1460 00de BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1461              	.LVL81:
 1462              	.L40:
ARM GAS  /tmp/ccfXobHU.s 			page 368


 1463              	.LBB5496:
 1464              	.LBB5332:
 1465              	.LBB5329:
 1466              	.LBB5328:
 1467              	.LBB5327:
 1468              	.LBB5326:
 1469              	.LBB5324:
 1470              	.LBI5324:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 1471              		.loc 3 401 7 is_stmt 1 view .LVU327
 1472              	.LBB5325:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 1473              		.loc 3 403 51 is_stmt 0 view .LVU328
 1474 00e2 E81B     		subs	r0, r5, r7
 1475              	.LVL82:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 1476              		.loc 3 403 51 view .LVU329
 1477              	.LBE5325:
 1478              	.LBE5324:
 1479 00e4 BDE7     		b	.L41
 1480              	.LVL83:
 1481              	.L42:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 1482              		.loc 3 403 51 view .LVU330
 1483              	.LBE5326:
 1484              	.LBE5327:
 1485              	.LBE5328:
 1486              	.LBE5329:
 1487              	.LBE5332:
 1488              	.LBE5496:
 1489              	.LBB5497:
 1490              	.LBB5419:
 1491              	.LBB5411:
 1492              		.loc 6 153 7 is_stmt 1 view .LVU331
 1493              	.LBB5365:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1494              		.loc 5 89 7 view .LVU332
 1495              	.LBE5365:
 1496              	.LBE5411:
 1497              	.LBB5412:
 817:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 1498              		.loc 1 817 7 view .LVU333
 1499              	.LBB5368:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1500              		.loc 17 806 7 view .LVU334
 1501              	.LBE5368:
 1502              	.LBE5412:
 1503              	.LBB5413:
 835:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 1504              		.loc 1 835 7 view .LVU335
 1505              	.LBB5371:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1506              		.loc 17 806 7 view .LVU336
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1507              		.loc 17 806 7 is_stmt 0 view .LVU337
 1508              	.LBE5371:
 1509              	.LBE5413:
ARM GAS  /tmp/ccfXobHU.s 			page 369


 1510              	.LBB5414:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1511              		.loc 1 273 7 is_stmt 1 view .LVU338
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1512              		.loc 1 273 7 is_stmt 0 view .LVU339
 1513              	.LBE5414:
 1514              	.LBB5415:
 1515              		.loc 11 305 5 is_stmt 1 view .LVU340
 1516              	.LBB5408:
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 1517              		.loc 11 115 5 view .LVU341
 1518              	.LBB5405:
 1519              	.LBB5402:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 1520              		.loc 11 99 9 view .LVU342
 1521              	.LBB5399:
 1522              		.loc 10 465 5 view .LVU343
 1523              	.LBB5396:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1524              		.loc 10 438 5 view .LVU344
 1525              	.LBB5393:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 1526              		.loc 10 393 5 view .LVU345
 1527              	.LBB5390:
 1528              	.LBB5387:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 1529              		.loc 10 375 2 view .LVU346
 1530              	.LBB5384:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1531              		.loc 10 385 4 is_stmt 0 view .LVU347
 1532 00e6 8142     		cmp	r1, r0
 1533 00e8 37D0     		beq	.L86
 1534 00ea B846     		mov	r8, r7
 1535              	.LVL84:
 1536              	.L59:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1537              		.loc 10 386 23 view .LVU348
 1538 00ec 2A46     		mov	r2, r5
 1539 00ee 2046     		mov	r0, r4
 1540 00f0 FFF7FEFF 		bl	memmove
 1541              	.LVL85:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1542              		.loc 10 386 23 view .LVU349
 1543 00f4 CAE7     		b	.L45
 1544              	.LVL86:
 1545              	.L37:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 1546              		.loc 10 386 23 view .LVU350
 1547              	.LBE5384:
 1548              	.LBE5387:
 1549              	.LBE5390:
 1550              	.LBE5393:
 1551              	.LBE5396:
 1552              	.LBE5399:
 1553              	.LBE5402:
 1554              	.LBE5405:
 1555              	.LBE5408:
ARM GAS  /tmp/ccfXobHU.s 			page 370


 1556              	.LBE5415:
 1557              	.LBE5419:
 1558              	.LBE5497:
 1559              	.LBB5498:
 1560              	.LBB5333:
 1561              	.LBB5330:
 1562              	.LBB5312:
 1563              	.LBB5310:
 1564              	.LBB5308:
 1565              	.LBB5307:
1947:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1948:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = _S_right(__x);
 1566              		.loc 13 1948 18 view .LVU351
 1567 00f6 E468     		ldr	r4, [r4, #12]
 1568              	.LVL87:
1944:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 1569              		.loc 13 1944 18 is_stmt 1 view .LVU352
 1570 00f8 002C     		cmp	r4, #0
 1571 00fa 8DD1     		bne	.L33
 1572 00fc A0E7     		b	.L34
 1573              	.LVL88:
 1574              	.L82:
1944:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 1575              		.loc 13 1944 18 is_stmt 0 view .LVU353
 1576              	.LBE5307:
 1577              	.LBE5308:
 1578              	.LBE5310:
 1579              	.LBE5312:
 1580              	.LBE5330:
 1581              	.LBE5333:
 1582              	.LBE5498:
 1583              	.LBB5499:
 1584              	.LBB5462:
 1585              	.LBB5453:
 1586              	.LBB5447:
 1587              	.LBB5435:
 1588              	.LBB5426:
 828:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 829:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h **** 	++_M_current;
 1589              		.loc 17 829 2 view .LVU354
 1590 00fe 0431     		adds	r1, r1, #4
 1591              	.LVL89:
 1592              		.loc 17 829 2 view .LVU355
 1593 0100 551A     		subs	r5, r2, r1
 1594 0102 18BF     		it	ne
 1595 0104 0125     		movne	r5, #1
 1596 0106 E6E7     		b	.L48
 1597              	.LVL90:
 1598              	.L83:
 1599              		.loc 17 829 2 view .LVU356
 1600              	.LBE5426:
 1601              	.LBE5435:
 1602              	.LBB5436:
 1603              	.LBB5429:
 1604 0108 01F10803 		add	r3, r1, #8
 1605 010c D51A     		subs	r5, r2, r3
 1606 010e 18BF     		it	ne
ARM GAS  /tmp/ccfXobHU.s 			page 371


 1607 0110 0125     		movne	r5, #1
 1608 0112 E0E7     		b	.L48
 1609              	.LVL91:
 1610              	.L84:
 1611              		.loc 17 829 2 view .LVU357
 1612              	.LBE5429:
 1613              	.LBE5436:
 1614              	.LBB5437:
 1615              	.LBB5432:
 1616 0114 01F10C05 		add	r5, r1, #12
 1617 0118 551B     		subs	r5, r2, r5
 1618 011a 18BF     		it	ne
 1619 011c 0125     		movne	r5, #1
 1620 011e DAE7     		b	.L48
 1621              	.LVL92:
 1622              	.L85:
 1623              		.loc 17 829 2 view .LVU358
 1624 0120 571A     		subs	r7, r2, r1
 1625 0122 4FEAA708 		asr	r8, r7, #2
 1626              	.LVL93:
 1627              	.L46:
 1628              		.loc 17 829 2 view .LVU359
 1629              	.LBE5432:
 1630              	.LBE5437:
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1631              		.loc 18 137 7 view .LVU360
 1632 0126 B8F1020F 		cmp	r8, #2
 1633 012a 0ED0     		beq	.L53
 1634 012c B8F1030F 		cmp	r8, #3
 1635 0130 07D0     		beq	.L54
 1636 0132 B8F1010F 		cmp	r8, #1
 1637 0136 0CD0     		beq	.L55
 1638              	.L62:
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1639              		.loc 18 137 7 view .LVU361
 1640 0138 0025     		movs	r5, #0
 1641 013a CCE7     		b	.L48
 1642              	.LVL94:
 1643              	.L39:
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1644              		.loc 18 137 7 view .LVU362
 1645              	.LBE5447:
 1646              	.LBE5453:
 1647              	.LBE5462:
 1648              	.LBE5499:
 1649              	.LBB5500:
 1650              	.LBB5334:
 548:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 1651              		.loc 14 548 24 view .LVU363
 1652 013c 0C48     		ldr	r0, .L87+8
 1653 013e FFF7FEFF 		bl	_ZSt20__throw_out_of_rangePKc
 1654              	.LVL95:
 1655              	.L54:
 548:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	return (*__i).second;
 1656              		.loc 14 548 24 view .LVU364
 1657              	.LBE5334:
 1658              	.LBE5500:
ARM GAS  /tmp/ccfXobHU.s 			page 372


 1659              	.LBB5501:
 1660              	.LBB5463:
 1661              	.LBB5454:
 1662              	.LBB5448:
 1663              	.LBB5438:
 1664              	.LBI5438:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1665              		.loc 19 240 2 is_stmt 1 view .LVU365
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1666              		.loc 19 240 2 is_stmt 0 view .LVU366
 1667              	.LBE5438:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1668              		.loc 18 140 4 view .LVU367
 1669 0142 0868     		ldr	r0, [r1]
 1670 0144 8342     		cmp	r3, r0
 1671 0146 C3D0     		beq	.L80
 1672              	.LVL96:
 1673              	.LBB5439:
 1674              	.LBI5439:
 827:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 1675              		.loc 17 827 7 is_stmt 1 view .LVU368
 1676              	.LBB5440:
 1677              		.loc 17 829 2 is_stmt 0 view .LVU369
 1678 0148 0431     		adds	r1, r1, #4
 1679              	.LVL97:
 1680              	.L53:
 1681              		.loc 17 829 2 view .LVU370
 1682              	.LBE5440:
 1683              	.LBE5439:
 1684              	.LBB5441:
 1685              	.LBI5441:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1686              		.loc 19 240 2 is_stmt 1 view .LVU371
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1687              		.loc 19 240 2 is_stmt 0 view .LVU372
 1688              	.LBE5441:
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1689              		.loc 18 144 4 view .LVU373
 1690 014a 0868     		ldr	r0, [r1]
 1691 014c 8342     		cmp	r3, r0
 1692 014e BFD0     		beq	.L80
 1693              	.LVL98:
 1694              	.LBB5442:
 1695              	.LBI5442:
 827:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       {
 1696              		.loc 17 827 7 is_stmt 1 view .LVU374
 1697              	.LBB5443:
 1698              		.loc 17 829 2 is_stmt 0 view .LVU375
 1699 0150 0431     		adds	r1, r1, #4
 1700              	.LVL99:
 1701              	.L55:
 1702              		.loc 17 829 2 view .LVU376
 1703              	.LBE5443:
 1704              	.LBE5442:
 1705              	.LBB5444:
 1706              	.LBI5444:
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
ARM GAS  /tmp/ccfXobHU.s 			page 373


 1707              		.loc 19 240 2 is_stmt 1 view .LVU377
 240:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	{ return *__it == _M_value; }
 1708              		.loc 19 240 2 is_stmt 0 view .LVU378
 1709              	.LBE5444:
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1710              		.loc 18 148 4 view .LVU379
 1711 0152 0868     		ldr	r0, [r1]
 1712 0154 8342     		cmp	r3, r0
 1713 0156 EFD1     		bne	.L62
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1714              		.loc 18 148 4 view .LVU380
 1715 0158 BAE7     		b	.L80
 1716              	.LVL100:
 1717              	.L86:
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	    return __first;
 1718              		.loc 18 148 4 view .LVU381
 1719              	.LBE5448:
 1720              	.LBE5454:
 1721              	.LBE5463:
 1722              	.LBE5501:
  20:Mu/music/theory.cpp ****     return std::find(v.begin(), v.end(), note % 12) != v.end();
 1723              		.loc 12 20 5 is_stmt 1 view .LVU382
 1724              	.LBB5502:
 808:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1725              		.loc 1 808 7 view .LVU383
 1726              	.LBB5470:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1727              		.loc 17 806 7 view .LVU384
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1728              		.loc 17 806 7 is_stmt 0 view .LVU385
 1729              	.LBE5470:
 1730              	.LBE5502:
 1731              	.LBB5503:
 826:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1732              		.loc 1 826 7 is_stmt 1 view .LVU386
 1733              	.LBB5473:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1734              		.loc 17 806 7 view .LVU387
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1735              		.loc 17 806 7 is_stmt 0 view .LVU388
 1736              	.LBE5473:
 1737              	.LBE5503:
 1738              	.LBB5504:
 1739              		.loc 18 3928 5 is_stmt 1 view .LVU389
 1740              	.LBB5464:
 1741              		.loc 19 246 5 view .LVU390
 1742              	.LBB5460:
 234:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_value(__value)
 1743              		.loc 19 234 7 view .LVU391
 234:/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h **** 	: _M_value(__value)
 1744              		.loc 19 234 7 is_stmt 0 view .LVU392
 1745              	.LBE5460:
 1746              	.LBE5464:
 1747              	.LBB5465:
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h ****     {
 1748              		.loc 18 159 5 is_stmt 1 view .LVU393
 1749              	.LBB5455:
ARM GAS  /tmp/ccfXobHU.s 			page 374


 112:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 1750              		.loc 18 112 5 view .LVU394
 1751              	.LBB5449:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1752              		.loc 18 118 27 view .LVU395
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1753              		.loc 18 118 27 is_stmt 0 view .LVU396
 1754              	.LBE5449:
 1755              	.LBE5455:
 1756              	.LBE5465:
 1757              	.LBE5504:
 1758              	.LBB5505:
 826:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 1759              		.loc 1 826 7 is_stmt 1 view .LVU397
 1760              	.LBB5478:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1761              		.loc 17 806 7 view .LVU398
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 1762              		.loc 17 806 7 is_stmt 0 view .LVU399
 1763              	.LBE5478:
 1764              	.LBE5505:
 1765              	.LBB5506:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1766              		.loc 1 675 7 is_stmt 1 view .LVU400
 1767              	.LBB5493:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1768              		.loc 1 273 7 view .LVU401
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 1769              		.loc 1 273 7 is_stmt 0 view .LVU402
 1770              	.LBE5493:
 1771              	.LBB5494:
 1772              		.loc 2 203 5 is_stmt 1 view .LVU403
 1773              		.loc 2 203 5 is_stmt 0 view .LVU404
 1774              	.LBE5494:
 1775              	.LBB5495:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1776              		.loc 1 330 7 is_stmt 1 view .LVU405
 1777              	.LBB5492:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1778              		.loc 1 347 7 view .LVU406
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 1779              		.loc 1 347 7 is_stmt 0 view .LVU407
 1780              	.LBE5492:
 1781              	.LBE5495:
 1782              	.LBE5506:
 1783              	.LBB5507:
 1784              	.LBB5420:
 1785              	.LBB5416:
 1786              	.LBB5409:
 1787              	.LBB5406:
 1788              	.LBB5403:
 1789              	.LBB5400:
 1790              	.LBB5397:
 1791              	.LBB5394:
 1792              	.LBB5391:
 1793              	.LBB5388:
 1794              	.LBB5385:
ARM GAS  /tmp/ccfXobHU.s 			page 375


 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1795              		.loc 10 385 4 view .LVU408
 1796 015a 3D46     		mov	r5, r7
 1797              	.LVL101:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1798              		.loc 10 385 4 view .LVU409
 1799 015c BEE7     		b	.L77
 1800              	.LVL102:
 1801              	.L81:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1802              		.loc 10 385 4 view .LVU410
 1803              	.LBE5385:
 1804              	.LBE5388:
 1805              	.LBE5391:
 1806              	.LBE5394:
 1807              	.LBE5397:
 1808              	.LBE5400:
 1809              	.LBE5403:
 1810              	.LBE5406:
 1811              	.LBE5409:
 1812              	.LBE5416:
 1813              	.LBB5417:
 1814              	.LBB5362:
 1815              	.LBB5361:
 1816              	.LBB5360:
 1817              	.LBB5359:
 1818              	.LBB5358:
 1819              	.LBB5357:
 105:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1820              		.loc 5 105 26 view .LVU411
 1821 015e FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 1822              	.LVL103:
 1823              	.L61:
 105:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 1824              		.loc 5 105 26 view .LVU412
 1825              	.LBE5357:
 1826              	.LBE5358:
 1827              	.LBE5359:
 1828              	.LBE5360:
 1829              	.LBE5361:
 1830              	.LBE5362:
 1831              	.LBE5417:
 1832              	.LBE5420:
 1833              	.LBE5507:
 1834              	.LBB5508:
 1835              	.LBB5466:
 1836              	.LBB5456:
 1837              	.LBB5450:
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algo.h **** 	{
 1838              		.loc 18 118 27 view .LVU413
 1839 0162 2146     		mov	r1, r4
 1840 0164 DFE7     		b	.L46
 1841              	.L88:
 1842 0166 00BF     		.align	2
 1843              	.L87:
 1844 0168 00000000 		.word	.LANCHOR0
 1845 016c ABAAAA2A 		.word	715827883
ARM GAS  /tmp/ccfXobHU.s 			page 376


 1846 0170 00000000 		.word	.LC8
 1847              	.LBE5450:
 1848              	.LBE5456:
 1849              	.LBE5466:
 1850              	.LBE5508:
 1851              		.cfi_endproc
 1852              	.LFE2921:
 1854              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt
 1855              		.align	1
 1856              		.p2align 2,,3
 1857              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select
 1858              		.syntax unified
 1859              		.thumb
 1860              		.thumb_func
 1861              		.fpu fpv5-d16
 1863              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_
 1864              	.LVL104:
 1865              	.LFB3472:
1907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_erase(_Link_type __x)
 1866              		.loc 13 1907 5 is_stmt 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
1911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 1870              		.loc 13 1911 18 view .LVU415
 1871 0000 A9B1     		cbz	r1, .L98
1907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_erase(_Link_type __x)
 1872              		.loc 13 1907 5 is_stmt 0 view .LVU416
 1873 0002 70B5     		push	{r4, r5, r6, lr}
 1874              		.cfi_def_cfa_offset 16
 1875              		.cfi_offset 4, -16
 1876              		.cfi_offset 5, -12
 1877              		.cfi_offset 6, -8
 1878              		.cfi_offset 14, -4
 1879 0004 0646     		mov	r6, r0
 1880 0006 0C46     		mov	r4, r1
 1881              	.LVL105:
 1882              	.L92:
 1883              	.LBB5536:
1913:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __y = _S_left(__x);
 1884              		.loc 13 1913 4 view .LVU417
 1885 0008 E168     		ldr	r1, [r4, #12]
 1886 000a 3046     		mov	r0, r6
 1887 000c FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1st
 1888              	.LVL106:
 1889              	.LBB5537:
 1890              	.LBB5538:
 1891              	.LBB5539:
 1892              	.LBB5540:
 1893              	.LBB5541:
 1894              	.LBB5542:
 1895              	.LBB5543:
 1896              	.LBB5544:
 1897              	.LBB5545:
 1898              	.LBI5545:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1899              		.loc 3 236 7 is_stmt 1 view .LVU418
ARM GAS  /tmp/ccfXobHU.s 			page 377


 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1900              		.loc 3 236 7 is_stmt 0 view .LVU419
 1901              	.LBE5545:
 1902              	.LBB5553:
 1903              	.LBB5554:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 1904              		.loc 3 222 26 view .LVU420
 1905 0010 2069     		ldr	r0, [r4, #16]
 1906              	.LVL107:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 1907              		.loc 3 222 26 view .LVU421
 1908              	.LBE5554:
 1909              	.LBE5553:
 1910              	.LBB5560:
 1911              	.LBB5546:
 1912              	.LBB5547:
 1913              	.LBI5547:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1914              		.loc 4 469 7 is_stmt 1 view .LVU422
 1915              	.LBB5548:
 1916              	.LBI5548:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 1917              		.loc 5 119 7 view .LVU423
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 1918              		.loc 5 119 7 is_stmt 0 view .LVU424
 1919              	.LBE5548:
 1920              	.LBE5547:
 1921              	.LBE5546:
 1922              	.LBE5560:
 1923              	.LBB5561:
 1924              	.LBB5558:
 1925              	.LBB5555:
 1926              	.LBB5556:
 203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 1927              		.loc 3 203 57 view .LVU425
 1928 0012 04F11803 		add	r3, r4, #24
 1929 0016 2546     		mov	r5, r4
 1930              	.LBE5556:
 1931              	.LBE5555:
 1932              	.LBE5558:
 1933              	.LBE5561:
 1934              	.LBE5544:
 1935              	.LBE5543:
 1936              	.LBE5542:
 1937              	.LBE5541:
 1938              	.LBE5540:
 1939              	.LBE5539:
 1940              	.LBE5538:
 1941              	.LBE5537:
1914:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_drop_node(__x);
 1942              		.loc 13 1914 28 view .LVU426
 1943 0018 A468     		ldr	r4, [r4, #8]
 1944              	.LVL108:
 1945              	.LBB5578:
 1946              	.LBI5537:
 648:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 1947              		.loc 13 648 7 is_stmt 1 view .LVU427
ARM GAS  /tmp/ccfXobHU.s 			page 378


 1948              	.LBB5573:
 1949              	.LBI5538:
 637:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 1950              		.loc 13 637 7 view .LVU428
 1951              	.LBB5572:
 1952              	.LBI5539:
 495:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 1953              		.loc 4 495 2 view .LVU429
 1954              	.LBB5571:
 1955              	.LBI5540:
 129:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 130:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 131:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       size_type
 132:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 133:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 134:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __PTRDIFF_MAX__ < __SIZE_MAX__
 135:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 136:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #else
 137:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	return size_t(-1) / sizeof(_Tp);
 138:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #endif
 139:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 140:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 141:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
 142:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 143:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	void
 144:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 145:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 146:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
 147:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 148:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 149:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       template<typename _Up>
 150:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	void
 151:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	destroy(_Up* __p)
 1956              		.loc 5 151 2 view .LVU430
 1957              	.LBB5570:
 1958              	.LBI5541:
 1959              		.file 20 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  /tmp/ccfXobHU.s 			page 379


  21:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  40:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** /** @file bits/stl_pair.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #define _STL_PAIR_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  61:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
  62:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  63:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif
  64:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  65:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** {
  67:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  68:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  69:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   /**
  70:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *  @addtogroup utilities
  71:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *  @{
  72:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    */
  73:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  74:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
  75:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   /// piecewise_construct_t
  76:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  77:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 380


  78:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   /// piecewise_construct
  79:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  80:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     piecewise_construct_t();
  81:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  82:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // Forward declarations.
  83:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template<typename...>
  84:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     class tuple;
  85:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  86:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template<std::size_t...>
  87:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     struct _Index_tuple;
  88:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
  89:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  90:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // constructors.
  91:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  92:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // is_convertible if the types are the same to
  93:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // avoid querying those properties for incomplete types.
  94:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template <bool, typename _T1, typename _T2>
  95:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     struct _PCC
  96:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     {
  97:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
  98:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
  99:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 100:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 101:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 102:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 103:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 104:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 105:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 106:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 107:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 108:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 109:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 110:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 112:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 113:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 114:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 115:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 116:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 117:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 118:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 119:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 120:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 121:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 122:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 123:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 124:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 125:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 126:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _CopyMovePair()
 127:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 128:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 129:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 130:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 131:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				       __do_converts,
 132:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 133:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 134:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
ARM GAS  /tmp/ccfXobHU.s 			page 381


 135:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      __converts
 136:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      >::value;
 137:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 138:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 139:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 140:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _MoveCopyPair()
 141:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 142:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 143:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 144:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	using __converts = typename conditional<__implicit,
 145:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				       __do_converts,
 146:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 				       __not_<__do_converts>>::type;
 147:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 148:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 149:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      __converts
 150:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		      >::value;
 151:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 152:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   };
 153:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 154:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template <typename _T1, typename _T2>
 155:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     struct _PCC<false, _T1, _T2>
 156:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     {
 157:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 158:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ConstructiblePair()
 159:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 160:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return false;
 161:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 162:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 163:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 164:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 165:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 166:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return false;
 167:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 168:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 169:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 170:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 171:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 172:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return false;
 173:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 174:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 175:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 176:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 177:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       {
 178:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	return false;
 179:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       }
 180:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   };
 181:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 182:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // PR libstdc++/79141, a utility type for preventing
 183:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // initialization of an argument of a disabled assignment
 184:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   // operator from a pair of empty braces.
 185:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   struct __nonesuch_no_braces : std::__nonesuch {
 186:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     explicit __nonesuch_no_braces(const __nonesuch&) = delete;
 187:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   };
 188:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif // C++11
 189:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 190:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 191:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   {
ARM GAS  /tmp/ccfXobHU.s 			page 382


 192:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 193:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 194:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     __pair_base() = default;
 195:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     ~__pair_base() = default;
 196:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     __pair_base(const __pair_base&) = default;
 197:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 198:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif // C++11
 199:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   };
 200:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 201:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****  /**
 202:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 203:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *
 204:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
 205:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
 206:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****    */
 207:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****   template<typename _T1, typename _T2>
 208:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     struct pair
 1960              		.loc 20 208 12 view .LVU431
 1961              	.LBB5569:
 1962              	.LBI5542:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 1963              		.loc 3 657 7 view .LVU432
 1964              	.LBB5565:
 1965              	.LBI5543:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 1966              		.loc 3 229 7 view .LVU433
 1967              	.LBB5564:
 1968              	.LBB5562:
 1969              	.LBI5553:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1970              		.loc 3 221 7 view .LVU434
 1971              	.LBB5559:
 1972              	.LBB5557:
 1973              	.LBI5555:
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 1974              		.loc 3 200 7 view .LVU435
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 1975              		.loc 3 200 7 is_stmt 0 view .LVU436
 1976              	.LBE5557:
 1977              	.LBE5559:
 1978              	.LBE5562:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1979              		.loc 3 231 2 view .LVU437
 1980 001a 9842     		cmp	r0, r3
 1981 001c 01D0     		beq	.L91
 1982              	.LBB5563:
 1983              	.LBB5552:
 1984              	.LBB5551:
 1985              	.LBB5550:
 1986              	.LBB5549:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 1987              		.loc 5 128 19 view .LVU438
 1988 001e FFF7FEFF 		bl	_ZdlPv
 1989              	.LVL109:
 1990              	.L91:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 1991              		.loc 5 128 19 view .LVU439
ARM GAS  /tmp/ccfXobHU.s 			page 383


 1992              	.LBE5549:
 1993              	.LBE5550:
 1994              	.LBE5551:
 1995              	.LBE5552:
 1996              	.LBE5563:
 1997              	.LBE5564:
 1998              	.LBE5565:
 1999              	.LBB5566:
 2000              	.LBI5566:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2001              		.loc 3 150 14 is_stmt 1 view .LVU440
 2002              	.LBB5567:
 2003              	.LBI5567:
 2004              		.loc 6 153 7 view .LVU441
 2005              	.LBB5568:
 2006              	.LBI5568:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2007              		.loc 5 89 7 view .LVU442
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2008              		.loc 5 89 7 is_stmt 0 view .LVU443
 2009              	.LBE5568:
 2010              	.LBE5567:
 2011              	.LBE5566:
 2012              	.LBE5569:
 2013              	.LBE5570:
 2014              	.LBE5571:
 2015              	.LBE5572:
 2016              	.LBE5573:
 2017              	.LBB5574:
 2018              	.LBI5574:
 583:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2019              		.loc 13 583 7 is_stmt 1 view .LVU444
 2020              	.LBB5575:
 2021              	.LBI5575:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2022              		.loc 4 469 7 view .LVU445
 2023              	.LBB5576:
 2024              	.LBI5576:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2025              		.loc 5 119 7 view .LVU446
 2026              	.LBB5577:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2027              		.loc 5 128 19 is_stmt 0 view .LVU447
 2028 0022 2846     		mov	r0, r5
 2029 0024 FFF7FEFF 		bl	_ZdlPv
 2030              	.LVL110:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2031              		.loc 5 128 19 view .LVU448
 2032              	.LBE5577:
 2033              	.LBE5576:
 2034              	.LBE5575:
 2035              	.LBE5574:
 2036              	.LBE5578:
 2037              	.LBE5536:
1911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 2038              		.loc 13 1911 18 is_stmt 1 view .LVU449
 2039 0028 002C     		cmp	r4, #0
ARM GAS  /tmp/ccfXobHU.s 			page 384


 2040 002a EDD1     		bne	.L92
1918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2041              		.loc 13 1918 5 is_stmt 0 view .LVU450
 2042 002c 70BD     		pop	{r4, r5, r6, pc}
 2043              	.LVL111:
 2044              	.L98:
 2045              		.cfi_def_cfa_offset 0
 2046              		.cfi_restore 4
 2047              		.cfi_restore 5
 2048              		.cfi_restore 6
 2049              		.cfi_restore 14
1918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2050              		.loc 13 1918 5 view .LVU451
 2051 002e 7047     		bx	lr
 2052              		.cfi_endproc
 2053              	.LFE3472:
 2055              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pa
 2056              		.align	1
 2057              		.p2align 2,,3
 2058              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iE
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv5-d16
 2064              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED2Ev:
 2065              	.LVL112:
 2066              	.LFB3893:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2067              		.loc 14 300 7 is_stmt 1 view -0
 2068              		.cfi_startproc
 2069              		@ args = 0, pretend = 0, frame = 0
 2070              		@ frame_needed = 0, uses_anonymous_args = 0
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2071              		.loc 14 300 7 is_stmt 0 view .LVU453
 2072 0000 10B5     		push	{r4, lr}
 2073              		.cfi_def_cfa_offset 8
 2074              		.cfi_offset 4, -8
 2075              		.cfi_offset 14, -4
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2076              		.loc 14 300 7 view .LVU454
 2077 0002 0446     		mov	r4, r0
 2078              	.LVL113:
 2079              	.LBB5579:
 2080              	.LBB5580:
 2081              	.LBI5580:
 994:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_erase(_M_begin()); }
 2082              		.loc 13 994 7 is_stmt 1 view .LVU455
 2083              	.LBB5581:
 2084              	.LBB5582:
 2085              	.LBI5582:
 744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2086              		.loc 13 744 7 view .LVU456
 744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2087              		.loc 13 744 7 is_stmt 0 view .LVU457
 2088              	.LBE5582:
 995:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2089              		.loc 13 995 9 view .LVU458
ARM GAS  /tmp/ccfXobHU.s 			page 385


 2090 0004 8168     		ldr	r1, [r0, #8]
 2091 0006 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1st
 2092              	.LVL114:
 2093              	.LBB5583:
 2094              	.LBI5583:
 673:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: public _Node_allocator
 2095              		.loc 13 673 9 is_stmt 1 view .LVU459
 2096              	.LBB5584:
 2097              	.LBI5584:
 2098              		.loc 6 153 7 view .LVU460
 2099              	.LBB5585:
 2100              	.LBI5585:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2101              		.loc 5 89 7 view .LVU461
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2102              		.loc 5 89 7 is_stmt 0 view .LVU462
 2103              	.LBE5585:
 2104              	.LBE5584:
 2105              	.LBE5583:
 2106              	.LBE5581:
 2107              	.LBE5580:
 2108              	.LBE5579:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2109              		.loc 14 300 7 view .LVU463
 2110 000a 2046     		mov	r0, r4
 2111 000c 10BD     		pop	{r4, pc}
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2112              		.loc 14 300 7 view .LVU464
 2113              		.cfi_endproc
 2114              	.LFE3893:
 2116              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iE
 2117              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIK
 2118 000e 00BF     		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 2119              		.align	1
 2120              		.p2align 2,,3
 2121              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 2122              		.syntax unified
 2123              		.thumb
 2124              		.thumb_func
 2125              		.fpu fpv5-d16
 2127              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 2128              	.LVL115:
 2129              	.LFB3528:
1907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_erase(_Link_type __x)
 2130              		.loc 13 1907 5 is_stmt 1 view -0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
1911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 2134              		.loc 13 1911 18 view .LVU466
 2135 0000 C9B1     		cbz	r1, .L116
1907:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_erase(_Link_type __x)
 2136              		.loc 13 1907 5 is_stmt 0 view .LVU467
 2137 0002 70B5     		push	{r4, r5, r6, lr}
 2138              		.cfi_def_cfa_offset 16
 2139              		.cfi_offset 4, -16
 2140              		.cfi_offset 5, -12
ARM GAS  /tmp/ccfXobHU.s 			page 386


 2141              		.cfi_offset 6, -8
 2142              		.cfi_offset 14, -4
 2143 0004 0646     		mov	r6, r0
 2144 0006 0C46     		mov	r4, r1
 2145              	.LVL116:
 2146              	.L107:
 2147              	.LBB5633:
1913:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Link_type __y = _S_left(__x);
 2148              		.loc 13 1913 4 view .LVU468
 2149 0008 E168     		ldr	r1, [r4, #12]
 2150 000a 3046     		mov	r0, r6
 2151 000c FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2152              	.LVL117:
 2153              	.LBB5634:
 2154              	.LBB5635:
 2155              	.LBB5636:
 2156              	.LBB5637:
 2157              	.LBB5638:
 2158              	.LBB5639:
 2159              	.LBB5640:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 2160              		.loc 1 677 15 view .LVU469
 2161 0010 A06A     		ldr	r0, [r4, #40]
 2162              	.LVL118:
 2163              	.LBB5641:
 2164              	.LBB5642:
 2165              	.LBB5643:
 2166              	.LBB5644:
 2167              	.LBI5644:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2168              		.loc 4 469 7 is_stmt 1 view .LVU470
 2169              	.LBB5645:
 2170              	.LBB5646:
 2171              	.LBI5646:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2172              		.loc 5 119 7 view .LVU471
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2173              		.loc 5 119 7 is_stmt 0 view .LVU472
 2174 0012 2546     		mov	r5, r4
 2175              	.LBE5646:
 2176              	.LBE5645:
 2177              	.LBE5644:
 2178              	.LBE5643:
 2179              	.LBE5642:
 2180              	.LBE5641:
 2181              	.LBE5640:
 2182              	.LBE5639:
 2183              	.LBE5638:
 2184              	.LBE5637:
 2185              	.LBE5636:
 2186              	.LBE5635:
 2187              	.LBE5634:
1914:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_drop_node(__x);
 2188              		.loc 13 1914 28 view .LVU473
 2189 0014 A468     		ldr	r4, [r4, #8]
 2190              	.LVL119:
 2191              	.LBB5693:
ARM GAS  /tmp/ccfXobHU.s 			page 387


 2192              	.LBI5634:
 648:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 2193              		.loc 13 648 7 is_stmt 1 view .LVU474
 2194              	.LBB5688:
 2195              	.LBI5635:
 637:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 2196              		.loc 13 637 7 view .LVU475
 2197              	.LBB5687:
 2198              	.LBI5636:
 495:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 2199              		.loc 4 495 2 view .LVU476
 2200              	.LBB5686:
 2201              	.LBI5637:
 2202              		.loc 5 151 2 view .LVU477
 2203              	.LBB5685:
 2204              	.LBI5638:
 2205              		.loc 20 208 12 view .LVU478
 2206              	.LBB5660:
 2207              	.LBI5639:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2208              		.loc 1 675 7 view .LVU479
 2209              	.LBB5659:
 2210              	.LBB5656:
 2211              	.LBI5656:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 2212              		.loc 1 273 7 view .LVU480
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 2213              		.loc 1 273 7 is_stmt 0 view .LVU481
 2214              	.LBE5656:
 2215              	.LBB5657:
 2216              	.LBI5657:
 2217              		.loc 2 203 5 is_stmt 1 view .LVU482
 2218              		.loc 2 203 5 is_stmt 0 view .LVU483
 2219              	.LBE5657:
 2220              	.LBB5658:
 2221              	.LBI5641:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2222              		.loc 1 330 7 is_stmt 1 view .LVU484
 2223              	.LBB5652:
 2224              	.LBI5642:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2225              		.loc 1 347 7 view .LVU485
 2226              	.LBB5651:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2227              		.loc 1 350 2 is_stmt 0 view .LVU486
 2228 0016 08B1     		cbz	r0, .L105
 2229              	.LBB5650:
 2230              	.LBB5649:
 2231              	.LBB5648:
 2232              	.LBB5647:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2233              		.loc 5 128 19 view .LVU487
 2234 0018 FFF7FEFF 		bl	_ZdlPv
 2235              	.LVL120:
 2236              	.L105:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2237              		.loc 5 128 19 view .LVU488
ARM GAS  /tmp/ccfXobHU.s 			page 388


 2238              	.LBE5647:
 2239              	.LBE5648:
 2240              	.LBE5649:
 2241              	.LBE5650:
 2242              	.LBE5651:
 2243              	.LBE5652:
 2244              	.LBB5653:
 2245              	.LBI5653:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2246              		.loc 1 125 14 is_stmt 1 view .LVU489
 2247              	.LBB5654:
 2248              	.LBI5654:
 2249              		.loc 6 153 7 view .LVU490
 2250              	.LBB5655:
 2251              	.LBI5655:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2252              		.loc 5 89 7 view .LVU491
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2253              		.loc 5 89 7 is_stmt 0 view .LVU492
 2254              	.LBE5655:
 2255              	.LBE5654:
 2256              	.LBE5653:
 2257              	.LBE5658:
 2258              	.LBE5659:
 2259              	.LBE5660:
 2260              	.LBB5661:
 2261              	.LBI5661:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 2262              		.loc 3 657 7 is_stmt 1 view .LVU493
 2263              	.LBB5662:
 2264              	.LBI5662:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2265              		.loc 3 229 7 view .LVU494
 2266              	.LBB5663:
 2267              	.LBB5664:
 2268              	.LBI5664:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2269              		.loc 3 221 7 view .LVU495
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2270              		.loc 3 221 7 is_stmt 0 view .LVU496
 2271              	.LBE5664:
 2272              	.LBB5670:
 2273              	.LBI5670:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2274              		.loc 3 236 7 is_stmt 1 view .LVU497
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2275              		.loc 3 236 7 is_stmt 0 view .LVU498
 2276              	.LBE5670:
 2277              	.LBB5678:
 2278              	.LBB5665:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2279              		.loc 3 222 26 view .LVU499
 2280 001c 2869     		ldr	r0, [r5, #16]
 2281              	.LVL121:
 2282              	.LBB5666:
 2283              	.LBI5666:
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 389


 2284              		.loc 3 200 7 is_stmt 1 view .LVU500
 200:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2285              		.loc 3 200 7 is_stmt 0 view .LVU501
 2286              	.LBE5666:
 2287              	.LBE5665:
 2288              	.LBE5678:
 2289              	.LBB5679:
 2290              	.LBB5671:
 2291              	.LBB5672:
 2292              	.LBI5672:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2293              		.loc 4 469 7 is_stmt 1 view .LVU502
 2294              	.LBB5673:
 2295              	.LBI5673:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2296              		.loc 5 119 7 view .LVU503
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2297              		.loc 5 119 7 is_stmt 0 view .LVU504
 2298              	.LBE5673:
 2299              	.LBE5672:
 2300              	.LBE5671:
 2301              	.LBE5679:
 2302              	.LBB5680:
 2303              	.LBB5669:
 2304              	.LBB5668:
 2305              	.LBB5667:
 203:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 2306              		.loc 3 203 57 view .LVU505
 2307 001e 05F11803 		add	r3, r5, #24
 2308              	.LBE5667:
 2309              	.LBE5668:
 2310              	.LBE5669:
 2311              	.LBE5680:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2312              		.loc 3 231 2 view .LVU506
 2313 0022 9842     		cmp	r0, r3
 2314 0024 01D0     		beq	.L106
 2315              	.LBB5681:
 2316              	.LBB5677:
 2317              	.LBB5676:
 2318              	.LBB5675:
 2319              	.LBB5674:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2320              		.loc 5 128 19 view .LVU507
 2321 0026 FFF7FEFF 		bl	_ZdlPv
 2322              	.LVL122:
 2323              	.L106:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2324              		.loc 5 128 19 view .LVU508
 2325              	.LBE5674:
 2326              	.LBE5675:
 2327              	.LBE5676:
 2328              	.LBE5677:
 2329              	.LBE5681:
 2330              	.LBE5663:
 2331              	.LBE5662:
 2332              	.LBB5682:
ARM GAS  /tmp/ccfXobHU.s 			page 390


 2333              	.LBI5682:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2334              		.loc 3 150 14 is_stmt 1 view .LVU509
 2335              	.LBB5683:
 2336              	.LBI5683:
 2337              		.loc 6 153 7 view .LVU510
 2338              	.LBB5684:
 2339              	.LBI5684:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2340              		.loc 5 89 7 view .LVU511
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2341              		.loc 5 89 7 is_stmt 0 view .LVU512
 2342              	.LBE5684:
 2343              	.LBE5683:
 2344              	.LBE5682:
 2345              	.LBE5661:
 2346              	.LBE5685:
 2347              	.LBE5686:
 2348              	.LBE5687:
 2349              	.LBE5688:
 2350              	.LBB5689:
 2351              	.LBI5689:
 583:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 2352              		.loc 13 583 7 is_stmt 1 view .LVU513
 2353              	.LBB5690:
 2354              	.LBI5690:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2355              		.loc 4 469 7 view .LVU514
 2356              	.LBB5691:
 2357              	.LBI5691:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2358              		.loc 5 119 7 view .LVU515
 2359              	.LBB5692:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2360              		.loc 5 128 19 is_stmt 0 view .LVU516
 2361 002a 2846     		mov	r0, r5
 2362 002c FFF7FEFF 		bl	_ZdlPv
 2363              	.LVL123:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2364              		.loc 5 128 19 view .LVU517
 2365              	.LBE5692:
 2366              	.LBE5691:
 2367              	.LBE5690:
 2368              	.LBE5689:
 2369              	.LBE5693:
 2370              	.LBE5633:
1911:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 2371              		.loc 13 1911 18 is_stmt 1 view .LVU518
 2372 0030 002C     		cmp	r4, #0
 2373 0032 E9D1     		bne	.L107
1918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2374              		.loc 13 1918 5 is_stmt 0 view .LVU519
 2375 0034 70BD     		pop	{r4, r5, r6, pc}
 2376              	.LVL124:
 2377              	.L116:
 2378              		.cfi_def_cfa_offset 0
 2379              		.cfi_restore 4
ARM GAS  /tmp/ccfXobHU.s 			page 391


 2380              		.cfi_restore 5
 2381              		.cfi_restore 6
 2382              		.cfi_restore 14
1918:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2383              		.loc 13 1918 5 view .LVU520
 2384 0036 7047     		bx	lr
 2385              		.cfi_endproc
 2386              	.LFE3528:
 2388              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 2389              		.align	1
 2390              		.p2align 2,,3
 2391              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2392              		.syntax unified
 2393              		.thumb
 2394              		.thumb_func
 2395              		.fpu fpv5-d16
 2397              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 2398              	.LVL125:
 2399              	.LFB3896:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2400              		.loc 14 300 7 is_stmt 1 view -0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2404              		.loc 14 300 7 is_stmt 0 view .LVU522
 2405 0000 10B5     		push	{r4, lr}
 2406              		.cfi_def_cfa_offset 8
 2407              		.cfi_offset 4, -8
 2408              		.cfi_offset 14, -4
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2409              		.loc 14 300 7 view .LVU523
 2410 0002 0446     		mov	r4, r0
 2411              	.LVL126:
 2412              	.LBB5694:
 2413              	.LBB5695:
 2414              	.LBI5695:
 994:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { _M_erase(_M_begin()); }
 2415              		.loc 13 994 7 is_stmt 1 view .LVU524
 2416              	.LBB5696:
 2417              	.LBB5697:
 2418              	.LBI5697:
 744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2419              		.loc 13 744 7 view .LVU525
 744:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 2420              		.loc 13 744 7 is_stmt 0 view .LVU526
 2421              	.LBE5697:
 995:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 2422              		.loc 13 995 9 view .LVU527
 2423 0004 8168     		ldr	r1, [r0, #8]
 2424 0006 FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 2425              	.LVL127:
 2426              	.LBB5698:
 2427              	.LBI5698:
 673:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: public _Node_allocator
 2428              		.loc 13 673 9 is_stmt 1 view .LVU528
 2429              	.LBB5699:
ARM GAS  /tmp/ccfXobHU.s 			page 392


 2430              	.LBI5699:
 2431              		.loc 6 153 7 view .LVU529
 2432              	.LBB5700:
 2433              	.LBI5700:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2434              		.loc 5 89 7 view .LVU530
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2435              		.loc 5 89 7 is_stmt 0 view .LVU531
 2436              	.LBE5700:
 2437              	.LBE5699:
 2438              	.LBE5698:
 2439              	.LBE5696:
 2440              	.LBE5695:
 2441              	.LBE5694:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2442              		.loc 14 300 7 view .LVU532
 2443 000a 2046     		mov	r0, r4
 2444 000c 10BD     		pop	{r4, pc}
 300:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** #endif
 2445              		.loc 14 300 7 view .LVU533
 2446              		.cfi_endproc
 2447              	.LFE3896:
 2449              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 2450              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 2451 000e 00BF     		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St2
 2452              		.align	2
 2453              	.LC9:
 2454 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 2454      635F7374 
 2454      72696E67 
 2454      3A3A5F4D 
 2454      5F636F6E 
 2455              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 2456              		.align	1
 2457              		.p2align 2,,3
 2458              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2462              		.fpu fpv5-d16
 2464              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 2465              	.LVL128:
 2466              	.LFB3677:
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2467              		.loc 8 206 7 is_stmt 1 view -0
 2468              		.cfi_startproc
 2469              		@ args = 0, pretend = 0, frame = 8
 2470              		@ frame_needed = 0, uses_anonymous_args = 0
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2471              		.loc 8 206 7 is_stmt 0 view .LVU535
 2472 0000 70B5     		push	{r4, r5, r6, lr}
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 6, -8
 2477              		.cfi_offset 14, -4
 2478 0002 0546     		mov	r5, r0
ARM GAS  /tmp/ccfXobHU.s 			page 393


 2479 0004 82B0     		sub	sp, sp, #8
 2480              		.cfi_def_cfa_offset 24
 206:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2481              		.loc 8 206 7 view .LVU536
 2482 0006 0E46     		mov	r6, r1
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2483              		.loc 8 211 42 view .LVU537
 2484 0008 02B1     		cbz	r2, .L122
 2485 000a 41B3     		cbz	r1, .L138
 2486              	.L122:
 2487              	.LVL129:
 2488              	.LBB5725:
 2489              	.LBI5725:
 2490              		.loc 9 138 5 is_stmt 1 view .LVU538
 2491              	.LBB5726:
 2492              	.LBI5726:
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2493              		.loc 9 98 5 view .LVU539
 2494              	.LBB5727:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2495              		.loc 9 104 23 is_stmt 0 view .LVU540
 2496 000c 941B     		subs	r4, r2, r6
 2497              	.LBE5727:
 2498              	.LBE5726:
 2499              	.LBE5725:
 217:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 2500              		.loc 8 217 2 view .LVU541
 2501 000e 0F2C     		cmp	r4, #15
 215:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 
 2502              		.loc 8 215 12 view .LVU542
 2503 0010 0194     		str	r4, [sp, #4]
 217:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	  {
 2504              		.loc 8 217 2 view .LVU543
 2505 0012 11D8     		bhi	.L139
 2506              	.LBB5728:
 2507              	.LBB5729:
 2508              	.LBB5730:
 348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2509              		.loc 3 348 2 view .LVU544
 2510 0014 012C     		cmp	r4, #1
 2511              	.LBE5730:
 2512              	.LBE5729:
 2513              	.LBE5728:
 225:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	__catch(...)
 2514              		.loc 8 225 6 view .LVU545
 2515 0016 2868     		ldr	r0, [r5]
 2516              	.LVL130:
 2517              	.LBB5750:
 2518              	.LBI5728:
 392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 2519              		.loc 3 392 7 is_stmt 1 view .LVU546
 2520              	.LBB5746:
 2521              	.LBI5729:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2522              		.loc 3 346 7 view .LVU547
 2523              	.LBB5742:
 348:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
ARM GAS  /tmp/ccfXobHU.s 			page 394


 2524              		.loc 3 348 2 is_stmt 0 view .LVU548
 2525 0018 08D1     		bne	.L125
 349:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	else
 2526              		.loc 3 349 23 view .LVU549
 2527 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2528              	.LVL131:
 2529              	.LBB5731:
 2530              	.LBI5731:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 2531              		.loc 7 299 7 is_stmt 1 view .LVU550
 2532              	.LBB5732:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2533              		.loc 7 300 9 view .LVU551
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2534              		.loc 7 300 14 is_stmt 0 view .LVU552
 2535 001c 0370     		strb	r3, [r0]
 2536              	.LBE5732:
 2537              	.LBE5731:
 2538              	.LBE5742:
 2539              	.LBE5746:
 2540              	.LBE5750:
 2541              	.LBB5751:
 2542              	.LBB5752:
 2543              	.LBB5753:
 2544              	.LBB5754:
 2545 001e 0023     		movs	r3, #0
 2546 0020 019C     		ldr	r4, [sp, #4]
 2547              	.LVL132:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2548              		.loc 7 300 14 view .LVU553
 2549 0022 2868     		ldr	r0, [r5]
 2550              	.LVL133:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2551              		.loc 7 300 14 view .LVU554
 2552              	.LBE5754:
 2553              	.LBE5753:
 2554              	.LBE5752:
 2555              	.LBI5751:
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2556              		.loc 3 214 7 is_stmt 1 view .LVU555
 2557              	.LBB5773:
 2558              	.LBB5760:
 2559              	.LBI5760:
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2560              		.loc 3 182 7 view .LVU556
 2561              	.LBB5761:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2562              		.loc 3 183 9 is_stmt 0 view .LVU557
 2563 0024 6C60     		str	r4, [r5, #4]
 2564              	.LVL134:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2565              		.loc 3 183 9 view .LVU558
 2566              	.LBE5761:
 2567              	.LBE5760:
 2568              	.LBB5764:
 2569              	.LBI5753:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
ARM GAS  /tmp/ccfXobHU.s 			page 395


 2570              		.loc 7 299 7 is_stmt 1 view .LVU559
 2571              	.LBB5755:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2572              		.loc 7 300 9 view .LVU560
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2573              		.loc 7 300 14 is_stmt 0 view .LVU561
 2574 0026 0355     		strb	r3, [r0, r4]
 2575              	.LVL135:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2576              		.loc 7 300 14 view .LVU562
 2577              	.LBE5755:
 2578              	.LBE5764:
 2579              	.LBE5773:
 2580              	.LBE5751:
 233:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc ****       }
 2581              		.loc 8 233 7 view .LVU563
 2582 0028 02B0     		add	sp, sp, #8
 2583              		.cfi_remember_state
 2584              		.cfi_def_cfa_offset 16
 2585              		@ sp needed
 2586 002a 70BD     		pop	{r4, r5, r6, pc}
 2587              	.LVL136:
 2588              	.L125:
 2589              		.cfi_restore_state
 2590              	.LBB5776:
 2591              	.LBB5747:
 2592              	.LBB5743:
 2593              	.LBB5733:
 2594              	.LBI5733:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2595              		.loc 3 346 7 is_stmt 1 view .LVU564
 2596              	.LBB5734:
 2597              	.LBI5734:
 361:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 2598              		.loc 7 361 7 view .LVU565
 2599              	.LBB5735:
 363:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __s1;
 2600              		.loc 7 363 2 view .LVU566
 2601 002c 64B9     		cbnz	r4, .L124
 2602              	.LVL137:
 363:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __s1;
 2603              		.loc 7 363 2 is_stmt 0 view .LVU567
 2604              	.LBE5735:
 2605              	.LBE5734:
 2606              	.LBE5733:
 2607              	.LBE5743:
 2608              	.LBE5747:
 2609              	.LBE5776:
 2610              	.LBB5777:
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2611              		.loc 3 214 7 is_stmt 1 view .LVU568
 2612              	.LBB5774:
 2613              	.LBB5765:
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2614              		.loc 3 182 7 view .LVU569
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2615              		.loc 3 182 7 is_stmt 0 view .LVU570
ARM GAS  /tmp/ccfXobHU.s 			page 396


 2616              	.LBE5765:
 2617              	.LBB5766:
 2618              	.LBB5756:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2619              		.loc 7 300 14 view .LVU571
 2620 002e 0023     		movs	r3, #0
 2621              	.LBE5756:
 2622              	.LBE5766:
 2623              	.LBB5767:
 2624              	.LBB5762:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2625              		.loc 3 183 9 view .LVU572
 2626 0030 6C60     		str	r4, [r5, #4]
 2627              	.LVL138:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2628              		.loc 3 183 9 view .LVU573
 2629              	.LBE5762:
 2630              	.LBE5767:
 2631              	.LBB5768:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 2632              		.loc 7 299 7 is_stmt 1 view .LVU574
 2633              	.LBB5757:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2634              		.loc 7 300 9 view .LVU575
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2635              		.loc 7 300 14 is_stmt 0 view .LVU576
 2636 0032 0355     		strb	r3, [r0, r4]
 2637              	.LVL139:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2638              		.loc 7 300 14 view .LVU577
 2639              	.LBE5757:
 2640              	.LBE5768:
 2641              	.LBE5774:
 2642              	.LBE5777:
 2643              		.loc 8 233 7 view .LVU578
 2644 0034 02B0     		add	sp, sp, #8
 2645              		.cfi_remember_state
 2646              		.cfi_def_cfa_offset 16
 2647              		@ sp needed
 2648 0036 70BD     		pop	{r4, r5, r6, pc}
 2649              	.LVL140:
 2650              	.L139:
 2651              		.cfi_restore_state
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2652              		.loc 8 219 6 view .LVU579
 2653 0038 0022     		movs	r2, #0
 2654              	.LVL141:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2655              		.loc 8 219 6 view .LVU580
 2656 003a 01A9     		add	r1, sp, #4
 2657              	.LVL142:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2658              		.loc 8 219 6 view .LVU581
 2659 003c 2846     		mov	r0, r5
 2660              	.LVL143:
 219:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2661              		.loc 8 219 6 view .LVU582
ARM GAS  /tmp/ccfXobHU.s 			page 397


 2662 003e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 2663              	.LVL144:
 2664              	.LBB5778:
 2665              	.LBB5779:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2666              		.loc 3 211 9 view .LVU583
 2667 0042 019B     		ldr	r3, [sp, #4]
 2668              	.LVL145:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2669              		.loc 3 211 9 view .LVU584
 2670              	.LBE5779:
 2671              	.LBE5778:
 2672              	.LBB5781:
 2673              	.LBI5781:
 178:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2674              		.loc 3 178 7 is_stmt 1 view .LVU585
 2675              	.LBB5782:
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2676              		.loc 3 179 9 is_stmt 0 view .LVU586
 2677 0044 2860     		str	r0, [r5]
 2678              	.LVL146:
 179:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2679              		.loc 3 179 9 view .LVU587
 2680              	.LBE5782:
 2681              	.LBE5781:
 2682              	.LBB5783:
 2683              	.LBI5778:
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2684              		.loc 3 210 7 is_stmt 1 view .LVU588
 210:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2685              		.loc 3 210 7 is_stmt 0 view .LVU589
 2686              	.LBE5783:
 2687              	.LBB5784:
 392:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 2688              		.loc 3 392 7 is_stmt 1 view .LVU590
 2689              	.LBB5748:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2690              		.loc 3 346 7 view .LVU591
 2691              	.LBB5744:
 2692              	.LBB5740:
 346:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2693              		.loc 3 346 7 view .LVU592
 2694              	.LBB5738:
 361:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 2695              		.loc 7 361 7 view .LVU593
 2696              	.LBB5736:
 363:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return __s1;
 2697              		.loc 7 363 2 view .LVU594
 2698              	.LBE5736:
 2699              	.LBE5738:
 2700              	.LBE5740:
 2701              	.LBE5744:
 2702              	.LBE5748:
 2703              	.LBE5784:
 2704              	.LBB5785:
 2705              	.LBB5780:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 398


 2706              		.loc 3 211 9 is_stmt 0 view .LVU595
 2707 0046 AB60     		str	r3, [r5, #8]
 2708              	.LVL147:
 2709              	.L124:
 211:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2710              		.loc 3 211 9 view .LVU596
 2711              	.LBE5780:
 2712              	.LBE5785:
 2713              	.LBB5786:
 2714              	.LBB5749:
 2715              	.LBB5745:
 2716              	.LBB5741:
 2717              	.LBB5739:
 2718              	.LBB5737:
 2719              		.loc 7 365 2 is_stmt 1 view .LVU597
 2720              		.loc 7 365 49 is_stmt 0 view .LVU598
 2721 0048 2246     		mov	r2, r4
 2722 004a 3146     		mov	r1, r6
 2723 004c FFF7FEFF 		bl	memcpy
 2724              	.LVL148:
 2725              		.loc 7 365 49 view .LVU599
 2726 0050 019C     		ldr	r4, [sp, #4]
 2727              	.LVL149:
 2728              		.loc 7 365 49 view .LVU600
 2729 0052 2868     		ldr	r0, [r5]
 2730              	.LVL150:
 2731              		.loc 7 365 49 view .LVU601
 2732              	.LBE5737:
 2733              	.LBE5739:
 2734              	.LBE5741:
 2735              	.LBE5745:
 2736              	.LBE5749:
 2737              	.LBE5786:
 2738              	.LBB5787:
 214:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2739              		.loc 3 214 7 is_stmt 1 view .LVU602
 2740              	.LBB5775:
 2741              	.LBB5769:
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2742              		.loc 3 182 7 view .LVU603
 182:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2743              		.loc 3 182 7 is_stmt 0 view .LVU604
 2744              	.LBE5769:
 2745              	.LBB5770:
 2746              	.LBB5758:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2747              		.loc 7 300 14 view .LVU605
 2748 0054 0023     		movs	r3, #0
 2749              	.LBE5758:
 2750              	.LBE5770:
 2751              	.LBB5771:
 2752              	.LBB5763:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 2753              		.loc 3 183 9 view .LVU606
 2754 0056 6C60     		str	r4, [r5, #4]
 2755              	.LVL151:
 183:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 399


 2756              		.loc 3 183 9 view .LVU607
 2757              	.LBE5763:
 2758              	.LBE5771:
 2759              	.LBB5772:
 299:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       { __c1 = __c2; }
 2760              		.loc 7 299 7 is_stmt 1 view .LVU608
 2761              	.LBB5759:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2762              		.loc 7 300 9 view .LVU609
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2763              		.loc 7 300 14 is_stmt 0 view .LVU610
 2764 0058 0355     		strb	r3, [r0, r4]
 2765              	.LVL152:
 300:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 
 2766              		.loc 7 300 14 view .LVU611
 2767              	.LBE5759:
 2768              	.LBE5772:
 2769              	.LBE5775:
 2770              	.LBE5787:
 2771              		.loc 8 233 7 view .LVU612
 2772 005a 02B0     		add	sp, sp, #8
 2773              		.cfi_remember_state
 2774              		.cfi_def_cfa_offset 16
 2775              		@ sp needed
 2776 005c 70BD     		pop	{r4, r5, r6, pc}
 2777              	.LVL153:
 2778              	.L138:
 2779              		.cfi_restore_state
 212:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2780              		.loc 8 212 28 view .LVU613
 2781 005e 0148     		ldr	r0, .L140
 2782              	.LVL154:
 212:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2783              		.loc 8 212 28 view .LVU614
 2784 0060 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 2785              	.LVL155:
 2786              	.L141:
 212:/usr/include/newlib/c++/9.2.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2787              		.loc 8 212 28 view .LVU615
 2788              		.align	2
 2789              	.L140:
 2790 0064 00000000 		.word	.LC9
 2791              		.cfi_endproc
 2792              	.LFE3677:
 2794              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range
 2795              		.align	1
 2796              		.p2align 2,,3
 2797              		.syntax unified
 2798              		.thumb
 2799              		.thumb_func
 2800              		.fpu fpv5-d16
 2802              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5
 2803              	.LVL156:
 2804              	.LFB4031:
1574:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
 2805              		.loc 1 1574 2 is_stmt 1 view -0
 2806              		.cfi_startproc
ARM GAS  /tmp/ccfXobHU.s 			page 400


 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
1574:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
 2809              		.loc 1 1574 2 is_stmt 0 view .LVU617
 2810 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2811              		.cfi_def_cfa_offset 32
 2812              		.cfi_offset 3, -32
 2813              		.cfi_offset 4, -28
 2814              		.cfi_offset 5, -24
 2815              		.cfi_offset 6, -20
 2816              		.cfi_offset 7, -16
 2817              		.cfi_offset 8, -12
 2818              		.cfi_offset 9, -8
 2819              		.cfi_offset 14, -4
 2820              	.LBB5833:
 2821              	.LBB5834:
 2822              	.LBB5835:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2823              		.loc 9 104 21 view .LVU618
 2824 0004 551A     		subs	r5, r2, r1
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2825              		.loc 9 104 23 view .LVU619
 2826 0006 204C     		ldr	r4, .L151
 2827              	.LBE5835:
 2828              	.LBE5834:
 2829              	.LBE5833:
1574:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
 2830              		.loc 1 1574 2 view .LVU620
 2831 0008 0646     		mov	r6, r0
 2832              	.LVL157:
 2833              	.LBB5839:
 2834              	.LBI5833:
 2835              		.loc 9 138 5 is_stmt 1 view .LVU621
 2836              	.LBB5837:
 2837              	.LBI5834:
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2838              		.loc 9 98 5 view .LVU622
  98:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2839              		.loc 9 98 5 is_stmt 0 view .LVU623
 2840              	.LBE5837:
 2841              	.LBE5839:
 2842              	.LBB5840:
 2843              	.LBB5841:
1766:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_length_error(
 2844              		.loc 1 1766 2 view .LVU624
 2845 000a 204B     		ldr	r3, .L151+4
 2846              	.LBE5841:
 2847              	.LBE5840:
 2848              	.LBB5848:
 2849              	.LBB5838:
 2850              	.LBB5836:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2851              		.loc 9 104 23 view .LVU625
 2852 000c E810     		asrs	r0, r5, #3
 2853              	.LVL158:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2854              		.loc 9 104 23 view .LVU626
ARM GAS  /tmp/ccfXobHU.s 			page 401


 2855 000e 04FB00F4 		mul	r4, r4, r0
 2856              	.LVL159:
 104:/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_funcs.h ****     }
 2857              		.loc 9 104 23 view .LVU627
 2858              	.LBE5836:
 2859              	.LBE5838:
 2860              	.LBE5848:
 2861              	.LBB5849:
 2862              	.LBI5840:
1764:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2863              		.loc 1 1764 7 is_stmt 1 view .LVU628
 2864              	.LBB5846:
 2865              	.LBB5842:
 2866              	.LBI5842:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2867              		.loc 6 141 7 view .LVU629
 2868              	.LBB5843:
 2869              	.LBI5843:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2870              		.loc 5 83 7 view .LVU630
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2871              		.loc 5 83 7 is_stmt 0 view .LVU631
 2872              	.LBE5843:
 2873              	.LBE5842:
 2874              	.LBB5844:
 2875              	.LBI5844:
 2876              		.loc 6 153 7 is_stmt 1 view .LVU632
 2877              	.LBB5845:
 2878              	.LBI5845:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 2879              		.loc 5 89 7 view .LVU633
 2880              	.LBE5845:
 2881              	.LBE5844:
1766:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_length_error(
 2882              		.loc 1 1766 2 is_stmt 0 view .LVU634
 2883 0012 9C42     		cmp	r4, r3
 2884 0014 35D8     		bhi	.L150
 2885              	.LVL160:
1766:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  __throw_length_error(
 2886              		.loc 1 1766 2 view .LVU635
 2887              	.LBE5846:
 2888              	.LBE5849:
 2889              	.LBB5850:
 2890              	.LBI5850:
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2891              		.loc 1 340 7 is_stmt 1 view .LVU636
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 2892              		.loc 1 340 7 is_stmt 0 view .LVU637
 2893 0016 0F46     		mov	r7, r1
 2894 0018 9046     		mov	r8, r2
 2895              	.LBB5851:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 2896              		.loc 1 343 18 view .LVU638
 2897 001a 1CB1     		cbz	r4, .L145
 2898              	.LVL161:
 2899              	.LBB5852:
 2900              	.LBI5852:
ARM GAS  /tmp/ccfXobHU.s 			page 402


 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 2901              		.loc 4 443 7 is_stmt 1 view .LVU639
 2902              	.LBB5853:
 2903              	.LBI5853:
 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 2904              		.loc 5 102 7 view .LVU640
 2905              	.LBB5854:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2906              		.loc 5 114 41 is_stmt 0 view .LVU641
 2907 001c 2846     		mov	r0, r5
 2908 001e FFF7FEFF 		bl	_Znwj
 2909              	.LVL162:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2910              		.loc 5 114 41 view .LVU642
 2911 0022 0446     		mov	r4, r0
 2912              	.LVL163:
 2913              	.L145:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 2914              		.loc 5 114 41 view .LVU643
 2915              	.LBE5854:
 2916              	.LBE5853:
 2917              	.LBE5852:
 2918              	.LBE5851:
 2919              	.LBE5850:
1580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
 2920              		.loc 1 1580 61 view .LVU644
 2921 0024 6319     		adds	r3, r4, r5
 2922              	.LBB5855:
 2923              	.LBB5856:
 2924              	.LBB5857:
 2925              	.LBB5858:
 2926              	.LBB5859:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2927              		.loc 11 82 23 view .LVU645
 2928 0026 B845     		cmp	r8, r7
 2929              	.LBE5859:
 2930              	.LBE5858:
 2931              	.LBE5857:
 2932              	.LBE5856:
 2933              	.LBE5855:
1578:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 2934              		.loc 1 1578 4 view .LVU646
 2935 0028 3460     		str	r4, [r6]
1580:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
 2936              		.loc 1 1580 4 view .LVU647
 2937 002a B360     		str	r3, [r6, #8]
 2938              	.LVL164:
 2939              	.LBB5902:
 2940              	.LBI5855:
 2941              		.loc 11 305 5 is_stmt 1 view .LVU648
 2942              	.LBB5900:
 2943              	.LBI5856:
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 2944              		.loc 11 115 5 view .LVU649
 2945              	.LBB5898:
 2946              	.LBB5896:
 2947              	.LBI5858:
ARM GAS  /tmp/ccfXobHU.s 			page 403


  76:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 2948              		.loc 11 76 9 view .LVU650
 2949              	.LBB5894:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2950              		.loc 11 82 23 view .LVU651
 2951 002c 26D0     		beq	.L146
 2952 002e 183D     		subs	r5, r5, #24
 2953              	.LVL165:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2954              		.loc 11 82 23 is_stmt 0 view .LVU652
 2955 0030 174B     		ldr	r3, .L151+8
 2956 0032 1837     		adds	r7, r7, #24
 2957              	.LVL166:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2958              		.loc 11 82 23 view .LVU653
 2959 0034 04F10808 		add	r8, r4, #8
 2960              	.LVL167:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2961              		.loc 11 82 23 view .LVU654
 2962 0038 ED08     		lsrs	r5, r5, #3
 2963              	.LVL168:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 2964              		.loc 11 82 23 view .LVU655
 2965 003a 03FB05F5 		mul	r5, r3, r5
 2966 003e 25F06045 		bic	r5, r5, #-536870912
 2967 0042 05EB4509 		add	r9, r5, r5, lsl #1
 2968 0046 04EBC909 		add	r9, r4, r9, lsl #3
 2969 004a 09F12009 		add	r9, r9, #32
 2970              	.LVL169:
 2971              	.L147:
 2972              	.LBB5860:
 2973              	.LBI5860:
  74:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 2974              		.loc 2 74 5 is_stmt 1 view .LVU656
  74:/usr/include/newlib/c++/9.2.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 2975              		.loc 2 74 5 is_stmt 0 view .LVU657
 2976              	.LBE5860:
 2977              	.LBE5894:
 2978              	.LBE5896:
 2979              	.LBE5898:
 2980              	.LBE5900:
 2981              	.LBE5902:
 2982              		.file 21 "/usr/include/newlib/c++/9.2.1/new"
   1:/usr/include/newlib/c++/9.2.1/new **** // The -*- C++ -*- dynamic memory management header.
   2:/usr/include/newlib/c++/9.2.1/new **** 
   3:/usr/include/newlib/c++/9.2.1/new **** // Copyright (C) 1994-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/new **** 
   5:/usr/include/newlib/c++/9.2.1/new **** // This file is part of GCC.
   6:/usr/include/newlib/c++/9.2.1/new **** //
   7:/usr/include/newlib/c++/9.2.1/new **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/newlib/c++/9.2.1/new **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/newlib/c++/9.2.1/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/newlib/c++/9.2.1/new **** // any later version.
  11:/usr/include/newlib/c++/9.2.1/new **** // 
  12:/usr/include/newlib/c++/9.2.1/new **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/newlib/c++/9.2.1/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/newlib/c++/9.2.1/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  /tmp/ccfXobHU.s 			page 404


  15:/usr/include/newlib/c++/9.2.1/new **** // GNU General Public License for more details.
  16:/usr/include/newlib/c++/9.2.1/new **** // 
  17:/usr/include/newlib/c++/9.2.1/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/newlib/c++/9.2.1/new **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/newlib/c++/9.2.1/new **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/newlib/c++/9.2.1/new **** 
  21:/usr/include/newlib/c++/9.2.1/new **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/newlib/c++/9.2.1/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/newlib/c++/9.2.1/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/newlib/c++/9.2.1/new **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/newlib/c++/9.2.1/new **** 
  26:/usr/include/newlib/c++/9.2.1/new **** /** @file new
  27:/usr/include/newlib/c++/9.2.1/new ****  *  This is a Standard C++ Library header.
  28:/usr/include/newlib/c++/9.2.1/new ****  *
  29:/usr/include/newlib/c++/9.2.1/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/usr/include/newlib/c++/9.2.1/new ****  *  handling memory allocation errors; see
  31:/usr/include/newlib/c++/9.2.1/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/usr/include/newlib/c++/9.2.1/new ****  */
  33:/usr/include/newlib/c++/9.2.1/new **** 
  34:/usr/include/newlib/c++/9.2.1/new **** #ifndef _NEW
  35:/usr/include/newlib/c++/9.2.1/new **** #define _NEW
  36:/usr/include/newlib/c++/9.2.1/new **** 
  37:/usr/include/newlib/c++/9.2.1/new **** #pragma GCC system_header
  38:/usr/include/newlib/c++/9.2.1/new **** 
  39:/usr/include/newlib/c++/9.2.1/new **** #include <bits/c++config.h>
  40:/usr/include/newlib/c++/9.2.1/new **** #include <exception>
  41:/usr/include/newlib/c++/9.2.1/new **** 
  42:/usr/include/newlib/c++/9.2.1/new **** #pragma GCC visibility push(default)
  43:/usr/include/newlib/c++/9.2.1/new **** 
  44:/usr/include/newlib/c++/9.2.1/new **** extern "C++" {
  45:/usr/include/newlib/c++/9.2.1/new **** 
  46:/usr/include/newlib/c++/9.2.1/new **** namespace std 
  47:/usr/include/newlib/c++/9.2.1/new **** {
  48:/usr/include/newlib/c++/9.2.1/new ****   /**
  49:/usr/include/newlib/c++/9.2.1/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/usr/include/newlib/c++/9.2.1/new ****    *  @ingroup exceptions
  51:/usr/include/newlib/c++/9.2.1/new ****    *
  52:/usr/include/newlib/c++/9.2.1/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/usr/include/newlib/c++/9.2.1/new ****    *  errors from the throwing forms of @c new.  */
  54:/usr/include/newlib/c++/9.2.1/new ****   class bad_alloc : public exception 
  55:/usr/include/newlib/c++/9.2.1/new ****   {
  56:/usr/include/newlib/c++/9.2.1/new ****   public:
  57:/usr/include/newlib/c++/9.2.1/new ****     bad_alloc() throw() { }
  58:/usr/include/newlib/c++/9.2.1/new **** 
  59:/usr/include/newlib/c++/9.2.1/new **** #if __cplusplus >= 201103L
  60:/usr/include/newlib/c++/9.2.1/new ****     bad_alloc(const bad_alloc&) = default;
  61:/usr/include/newlib/c++/9.2.1/new ****     bad_alloc& operator=(const bad_alloc&) = default;
  62:/usr/include/newlib/c++/9.2.1/new **** #endif
  63:/usr/include/newlib/c++/9.2.1/new **** 
  64:/usr/include/newlib/c++/9.2.1/new ****     // This declaration is not useless:
  65:/usr/include/newlib/c++/9.2.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  66:/usr/include/newlib/c++/9.2.1/new ****     virtual ~bad_alloc() throw();
  67:/usr/include/newlib/c++/9.2.1/new **** 
  68:/usr/include/newlib/c++/9.2.1/new ****     // See comment in eh_exception.cc.
  69:/usr/include/newlib/c++/9.2.1/new ****     virtual const char* what() const throw();
  70:/usr/include/newlib/c++/9.2.1/new ****   };
  71:/usr/include/newlib/c++/9.2.1/new **** 
ARM GAS  /tmp/ccfXobHU.s 			page 405


  72:/usr/include/newlib/c++/9.2.1/new **** #if __cplusplus >= 201103L
  73:/usr/include/newlib/c++/9.2.1/new ****   class bad_array_new_length : public bad_alloc
  74:/usr/include/newlib/c++/9.2.1/new ****   {
  75:/usr/include/newlib/c++/9.2.1/new ****   public:
  76:/usr/include/newlib/c++/9.2.1/new ****     bad_array_new_length() throw() { }
  77:/usr/include/newlib/c++/9.2.1/new **** 
  78:/usr/include/newlib/c++/9.2.1/new ****     // This declaration is not useless:
  79:/usr/include/newlib/c++/9.2.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  80:/usr/include/newlib/c++/9.2.1/new ****     virtual ~bad_array_new_length() throw();
  81:/usr/include/newlib/c++/9.2.1/new **** 
  82:/usr/include/newlib/c++/9.2.1/new ****     // See comment in eh_exception.cc.
  83:/usr/include/newlib/c++/9.2.1/new ****     virtual const char* what() const throw();
  84:/usr/include/newlib/c++/9.2.1/new ****   };
  85:/usr/include/newlib/c++/9.2.1/new **** #endif
  86:/usr/include/newlib/c++/9.2.1/new **** 
  87:/usr/include/newlib/c++/9.2.1/new **** #if __cpp_aligned_new
  88:/usr/include/newlib/c++/9.2.1/new ****   enum class align_val_t: size_t {};
  89:/usr/include/newlib/c++/9.2.1/new **** #endif
  90:/usr/include/newlib/c++/9.2.1/new **** 
  91:/usr/include/newlib/c++/9.2.1/new ****   struct nothrow_t
  92:/usr/include/newlib/c++/9.2.1/new ****   {
  93:/usr/include/newlib/c++/9.2.1/new **** #if __cplusplus >= 201103L
  94:/usr/include/newlib/c++/9.2.1/new ****     explicit nothrow_t() = default;
  95:/usr/include/newlib/c++/9.2.1/new **** #endif
  96:/usr/include/newlib/c++/9.2.1/new ****   };
  97:/usr/include/newlib/c++/9.2.1/new **** 
  98:/usr/include/newlib/c++/9.2.1/new ****   extern const nothrow_t nothrow;
  99:/usr/include/newlib/c++/9.2.1/new **** 
 100:/usr/include/newlib/c++/9.2.1/new ****   /** If you write your own error handler to be called by @c new, it must
 101:/usr/include/newlib/c++/9.2.1/new ****    *  be of this type.  */
 102:/usr/include/newlib/c++/9.2.1/new ****   typedef void (*new_handler)();
 103:/usr/include/newlib/c++/9.2.1/new **** 
 104:/usr/include/newlib/c++/9.2.1/new ****   /// Takes a replacement handler as the argument, returns the
 105:/usr/include/newlib/c++/9.2.1/new ****   /// previous handler.
 106:/usr/include/newlib/c++/9.2.1/new ****   new_handler set_new_handler(new_handler) throw();
 107:/usr/include/newlib/c++/9.2.1/new **** 
 108:/usr/include/newlib/c++/9.2.1/new **** #if __cplusplus >= 201103L
 109:/usr/include/newlib/c++/9.2.1/new ****   /// Return the current new handler.
 110:/usr/include/newlib/c++/9.2.1/new ****   new_handler get_new_handler() noexcept;
 111:/usr/include/newlib/c++/9.2.1/new **** #endif
 112:/usr/include/newlib/c++/9.2.1/new **** } // namespace std
 113:/usr/include/newlib/c++/9.2.1/new **** 
 114:/usr/include/newlib/c++/9.2.1/new **** //@{
 115:/usr/include/newlib/c++/9.2.1/new **** /** These are replaceable signatures:
 116:/usr/include/newlib/c++/9.2.1/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 117:/usr/include/newlib/c++/9.2.1/new ****  *  - normal array new and delete (same)
 118:/usr/include/newlib/c++/9.2.1/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 119:/usr/include/newlib/c++/9.2.1/new ****  *    @c NULL on error)
 120:/usr/include/newlib/c++/9.2.1/new ****  *  - @c nothrow array new and delete (same)
 121:/usr/include/newlib/c++/9.2.1/new ****  *
 122:/usr/include/newlib/c++/9.2.1/new ****  *  Placement new and delete signatures (take a memory address argument,
 123:/usr/include/newlib/c++/9.2.1/new ****  *  does nothing) may not be replaced by a user's program.
 124:/usr/include/newlib/c++/9.2.1/new **** */
 125:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 126:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 127:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 128:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
ARM GAS  /tmp/ccfXobHU.s 			page 406


 129:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 130:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 131:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 132:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 133:/usr/include/newlib/c++/9.2.1/new **** #if __cpp_sized_deallocation
 134:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 135:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 136:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 137:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 138:/usr/include/newlib/c++/9.2.1/new **** #endif
 139:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 140:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__, __malloc__));
 141:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 142:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__, __malloc__));
 143:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 144:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 145:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 146:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 147:/usr/include/newlib/c++/9.2.1/new **** #if __cpp_aligned_new
 148:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 149:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 150:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 151:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 152:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*, std::align_val_t)
 153:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 154:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 155:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 156:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 157:/usr/include/newlib/c++/9.2.1/new ****   __attribute__((__externally_visible__));
 158:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 159:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 160:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*, std::align_val_t)
 161:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 162:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 163:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 164:/usr/include/newlib/c++/9.2.1/new **** #if __cpp_sized_deallocation
 165:/usr/include/newlib/c++/9.2.1/new **** void operator delete(void*, std::size_t, std::align_val_t)
 166:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 167:/usr/include/newlib/c++/9.2.1/new **** void operator delete[](void*, std::size_t, std::align_val_t)
 168:/usr/include/newlib/c++/9.2.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 169:/usr/include/newlib/c++/9.2.1/new **** #endif // __cpp_sized_deallocation
 170:/usr/include/newlib/c++/9.2.1/new **** #endif // __cpp_aligned_new
 171:/usr/include/newlib/c++/9.2.1/new **** 
 172:/usr/include/newlib/c++/9.2.1/new **** // Default placement versions of operator new.
 173:/usr/include/newlib/c++/9.2.1/new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 174:/usr/include/newlib/c++/9.2.1/new **** { return __p; }
 2983              		.loc 21 174 3 is_stmt 1 view .LVU658
 2984              	.LBB5903:
 2985              	.LBB5901:
 2986              	.LBB5899:
 2987              	.LBB5897:
 2988              	.LBB5895:
 2989              	.LBB5893:
 2990              	.LBB5861:
 2991              	.LBI5861:
 448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 2992              		.loc 3 448 7 view .LVU659
ARM GAS  /tmp/ccfXobHU.s 			page 407


 2993              	.LBB5862:
 2994              	.LBB5863:
 2995              	.LBI5863:
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2996              		.loc 3 190 7 view .LVU660
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 2997              		.loc 3 190 7 is_stmt 0 view .LVU661
 2998              	.LBE5863:
 2999              	.LBB5864:
 3000              	.LBI5864:
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 3001              		.loc 3 290 7 is_stmt 1 view .LVU662
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 3002              		.loc 3 290 7 is_stmt 0 view .LVU663
 3003              	.LBE5864:
 3004              	.LBB5865:
 3005              	.LBI5865:
 3006              		.loc 16 97 19 is_stmt 1 view .LVU664
 3007              	.LBB5866:
 3008              	.LBI5866:
 3009              		.loc 4 514 7 view .LVU665
 3010              	.LBB5867:
 3011              	.LBI5867:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3012              		.loc 6 141 7 view .LVU666
 3013              	.LBB5868:
 3014              	.LBI5868:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3015              		.loc 5 83 7 view .LVU667
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3016              		.loc 5 83 7 is_stmt 0 view .LVU668
 3017              	.LBE5868:
 3018              	.LBE5867:
 3019              	.LBE5866:
 3020              	.LBE5865:
 3021              	.LBB5869:
 3022              	.LBI5869:
 159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 3023              		.loc 3 159 2 is_stmt 1 view .LVU669
 3024              	.LBB5870:
 3025              	.LBB5871:
 3026              	.LBI5871:
 3027              		.file 22 "/usr/include/newlib/c++/9.2.1/bits/move.h"
   1:/usr/include/newlib/c++/9.2.1/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/move.h **** // Copyright (C) 2007-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/move.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/move.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/move.h **** // GNU General Public License for more details.
ARM GAS  /tmp/ccfXobHU.s 			page 408


  15:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/move.h **** /** @file bits/move.h
  26:/usr/include/newlib/c++/9.2.1/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/newlib/c++/9.2.1/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/newlib/c++/9.2.1/bits/move.h ****  */
  29:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  30:/usr/include/newlib/c++/9.2.1/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/newlib/c++/9.2.1/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  33:/usr/include/newlib/c++/9.2.1/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/newlib/c++/9.2.1/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  36:/usr/include/newlib/c++/9.2.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/newlib/c++/9.2.1/bits/move.h **** {
  38:/usr/include/newlib/c++/9.2.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  40:/usr/include/newlib/c++/9.2.1/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/newlib/c++/9.2.1/bits/move.h ****   /**
  42:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/newlib/c++/9.2.1/bits/move.h ****    */
  45:/usr/include/newlib/c++/9.2.1/bits/move.h ****   template<typename _Tp>
  46:/usr/include/newlib/c++/9.2.1/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:/usr/include/newlib/c++/9.2.1/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return __builtin_addressof(__r); }
  49:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  50:/usr/include/newlib/c++/9.2.1/bits/move.h **** #if __cplusplus >= 201103L
  51:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  52:/usr/include/newlib/c++/9.2.1/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  53:/usr/include/newlib/c++/9.2.1/bits/move.h **** } // namespace
  54:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  55:/usr/include/newlib/c++/9.2.1/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  56:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  57:/usr/include/newlib/c++/9.2.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/newlib/c++/9.2.1/bits/move.h **** {
  59:/usr/include/newlib/c++/9.2.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  61:/usr/include/newlib/c++/9.2.1/bits/move.h ****   /**
  62:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @addtogroup utilities
  63:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @{
  64:/usr/include/newlib/c++/9.2.1/bits/move.h ****    */
  65:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  66:/usr/include/newlib/c++/9.2.1/bits/move.h ****   /**
  67:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @brief  Forward an lvalue.
  68:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  69:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *
  70:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  71:/usr/include/newlib/c++/9.2.1/bits/move.h ****    */
ARM GAS  /tmp/ccfXobHU.s 			page 409


  72:/usr/include/newlib/c++/9.2.1/bits/move.h ****   template<typename _Tp>
  73:/usr/include/newlib/c++/9.2.1/bits/move.h ****     constexpr _Tp&&
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  75:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  76:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  77:/usr/include/newlib/c++/9.2.1/bits/move.h ****   /**
  78:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @brief  Forward an rvalue.
  79:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  80:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *
  81:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  82:/usr/include/newlib/c++/9.2.1/bits/move.h ****    */
  83:/usr/include/newlib/c++/9.2.1/bits/move.h ****   template<typename _Tp>
  84:/usr/include/newlib/c++/9.2.1/bits/move.h ****     constexpr _Tp&&
  85:/usr/include/newlib/c++/9.2.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  86:/usr/include/newlib/c++/9.2.1/bits/move.h ****     {
  87:/usr/include/newlib/c++/9.2.1/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  88:/usr/include/newlib/c++/9.2.1/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  89:/usr/include/newlib/c++/9.2.1/bits/move.h ****       return static_cast<_Tp&&>(__t);
  90:/usr/include/newlib/c++/9.2.1/bits/move.h ****     }
  91:/usr/include/newlib/c++/9.2.1/bits/move.h **** 
  92:/usr/include/newlib/c++/9.2.1/bits/move.h ****   /**
  93:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  94:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  95:/usr/include/newlib/c++/9.2.1/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  96:/usr/include/newlib/c++/9.2.1/bits/move.h ****   */
  97:/usr/include/newlib/c++/9.2.1/bits/move.h ****   template<typename _Tp>
  98:/usr/include/newlib/c++/9.2.1/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
  99:/usr/include/newlib/c++/9.2.1/bits/move.h ****     move(_Tp&& __t) noexcept
 3028              		.loc 22 99 5 view .LVU670
 3029              		.loc 22 99 5 is_stmt 0 view .LVU671
 3030              	.LBE5871:
 3031              	.LBB5872:
 3032              	.LBI5872:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3033              		.loc 6 141 7 is_stmt 1 view .LVU672
 3034              	.LBB5873:
 3035              	.LBI5873:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3036              		.loc 5 83 7 view .LVU673
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3037              		.loc 5 83 7 is_stmt 0 view .LVU674
 3038              	.LBE5873:
 3039              	.LBE5872:
 3040              	.LBE5870:
 3041              	.LBE5869:
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3042              		.loc 3 451 9 view .LVU675
 3043 004e 57F8181C 		ldr	r1, [r7, #-24]
 3044              	.LBB5875:
 3045              	.LBB5876:
 3046              	.LBB5877:
 3047              	.LBB5878:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 3048              		.loc 3 247 11 view .LVU676
 3049 0052 A8F10800 		sub	r0, r8, #8
 3050              	.LVL170:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccfXobHU.s 			page 410


 3051              		.loc 3 247 11 view .LVU677
 3052              	.LBE5878:
 3053              	.LBE5877:
 3054              	.LBE5876:
 3055              	.LBE5875:
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3056              		.loc 3 451 9 view .LVU678
 3057 0056 57F8142C 		ldr	r2, [r7, #-20]
 3058              	.LBB5885:
 3059              	.LBB5883:
 3060              	.LBB5881:
 3061              	.LBB5879:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 3062              		.loc 3 247 11 view .LVU679
 3063 005a 4FF00003 		mov	r3, #0
 3064              	.LBE5879:
 3065              	.LBE5881:
 3066              	.LBE5883:
 3067              	.LBE5885:
 3068              	.LBB5886:
 3069              	.LBB5874:
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 3070              		.loc 3 160 46 view .LVU680
 3071 005e 48F8088C 		str	r8, [r8, #-8]
 3072              	.LVL171:
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 3073              		.loc 3 160 46 view .LVU681
 3074              	.LBE5874:
 3075              	.LBE5886:
 3076              	.LBB5887:
 3077              	.LBI5887:
 3078              		.loc 6 153 7 is_stmt 1 view .LVU682
 3079              	.LBB5888:
 3080              	.LBI5888:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3081              		.loc 5 89 7 view .LVU683
 3082              	.LBE5888:
 3083              	.LBE5887:
 3084              	.LBB5889:
 3085              	.LBI5889:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3086              		.loc 3 186 7 view .LVU684
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3087              		.loc 3 186 7 is_stmt 0 view .LVU685
 3088              	.LBE5889:
 3089              	.LBB5890:
 3090              	.LBI5890:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3091              		.loc 3 186 7 is_stmt 1 view .LVU686
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3092              		.loc 3 186 7 is_stmt 0 view .LVU687
 3093              	.LBE5890:
 3094              	.LBB5891:
 3095              	.LBI5891:
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 3096              		.loc 3 936 7 is_stmt 1 view .LVU688
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccfXobHU.s 			page 411


 3097              		.loc 3 936 7 is_stmt 0 view .LVU689
 3098              	.LBE5891:
 3099              	.LBB5892:
 3100              	.LBI5875:
 263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 3101              		.loc 3 263 9 is_stmt 1 view .LVU690
 3102              	.LBB5884:
 3103              	.LBB5882:
 3104              	.LBI5877:
 243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 std::__false_type)
 3105              		.loc 3 243 9 view .LVU691
 3106 0062 08F11808 		add	r8, r8, #24
 3107              	.LBB5880:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 3108              		.loc 3 247 11 is_stmt 0 view .LVU692
 3109 0066 0A44     		add	r2, r2, r1
 3110              	.LVL172:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 3111              		.loc 3 247 11 view .LVU693
 3112 0068 1837     		adds	r7, r7, #24
 3113 006a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 3114              	.LVL173:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 3115              		.loc 3 247 11 view .LVU694
 3116              	.LBE5880:
 3117              	.LBE5882:
 3118              	.LBE5884:
 3119              	.LBE5892:
 3120              	.LBE5862:
 3121              	.LBE5861:
 3122              	.LBE5893:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 3123              		.loc 11 82 8 is_stmt 1 view .LVU695
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 3124              		.loc 11 82 23 view .LVU696
 3125 006e C845     		cmp	r8, r9
 3126 0070 EDD1     		bne	.L147
 3127 0072 0135     		adds	r5, r5, #1
 3128 0074 05EB4505 		add	r5, r5, r5, lsl #1
 3129 0078 04EBC504 		add	r4, r4, r5, lsl #3
 3130              	.LVL174:
 3131              	.L146:
  82:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 3132              		.loc 11 82 23 is_stmt 0 view .LVU697
 3133              	.LBE5895:
 3134              	.LBE5897:
 3135              	.LBE5899:
 3136              	.LBE5901:
 3137              	.LBE5903:
1581:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 3138              		.loc 1 1581 4 view .LVU698
 3139 007c 7460     		str	r4, [r6, #4]
1585:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 3140              		.loc 1 1585 2 view .LVU699
 3141 007e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3142              	.LVL175:
 3143              	.L150:
ARM GAS  /tmp/ccfXobHU.s 			page 412


 3144              	.LBB5904:
 3145              	.LBB5847:
 3146              		.loc 1 1767 24 view .LVU700
 3147 0082 0448     		ldr	r0, .L151+12
 3148 0084 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 3149              	.LVL176:
 3150              	.L152:
 3151              		.loc 1 1767 24 view .LVU701
 3152              		.align	2
 3153              	.L151:
 3154 0088 ABAAAAAA 		.word	-1431655765
 3155 008c 55555505 		.word	89478485
 3156 0090 ABAAAA0A 		.word	178956971
 3157 0094 00000000 		.word	.LC7
 3158              	.LBE5847:
 3159              	.LBE5904:
 3160              		.cfi_endproc
 3161              	.LFE4031:
 3163              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt
 3164              		.align	1
 3165              		.p2align 2,,3
 3166              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select
 3167              		.syntax unified
 3168              		.thumb
 3169              		.thumb_func
 3170              		.fpu fpv5-d16
 3172              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_
 3173              	.LVL177:
 3174              	.LFB3727:
1949:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return const_iterator(__y);
1950:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1951:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1952:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1953:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1954:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1955:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      _Compare, _Alloc>::iterator
1956:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1957:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_upper_bound(_Link_type __x, _Base_ptr __y,
1958:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		   const _Key& __k)
1959:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1960:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
1961:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1962:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1963:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1964:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = _S_right(__x);
1965:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return iterator(__y);
1966:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1967:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1968:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1969:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1970:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue,
1971:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      _Compare, _Alloc>::const_iterator
1972:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1973:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
1974:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		   const _Key& __k) const
1975:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1976:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
ARM GAS  /tmp/ccfXobHU.s 			page 413


1977:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	if (_M_impl._M_key_compare(__k, _S_key(__x)))
1978:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x, __x = _S_left(__x);
1979:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	else
1980:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = _S_right(__x);
1981:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return const_iterator(__y);
1982:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
1983:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
1984:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
1985:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
1986:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
1987:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator,
1988:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
1989:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator>
1990:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1991:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     equal_range(const _Key& __k)
1992:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
1993:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type __x = _M_begin();
1994:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
1995:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
1996:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
1997:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
1998:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __x = _S_right(__x);
1999:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2000:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2001:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
2002:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
2003:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _Link_type __xu(__x);
2004:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _Base_ptr __yu(__y);
2005:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2006:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
2007:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      return pair<iterator,
2008:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			  iterator>(_M_lower_bound(__x, __y, __k),
2009:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				    _M_upper_bound(__xu, __yu, __k));
2010:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
2011:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2012:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return pair<iterator, iterator>(iterator(__y),
2013:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      iterator(__y));
2014:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2015:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2016:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2017:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2018:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2019:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator,
2020:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2021:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::const_iterator>
2022:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2023:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     equal_range(const _Key& __k) const
2024:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2025:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Link_type __x = _M_begin();
2026:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Const_Base_ptr __y = _M_end();
2027:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
2028:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2029:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (_M_impl._M_key_compare(_S_key(__x), __k))
2030:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __x = _S_right(__x);
2031:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
2032:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    __y = __x, __x = _S_left(__x);
2033:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
ARM GAS  /tmp/ccfXobHU.s 			page 414


2034:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
2035:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _Const_Link_type __xu(__x);
2036:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      _Const_Base_ptr __yu(__y);
2037:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __y = __x, __x = _S_left(__x);
2038:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      __xu = _S_right(__xu);
2039:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      return pair<const_iterator,
2040:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			  const_iterator>(_M_lower_bound(__x, __y, __k),
2041:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 					  _M_upper_bound(__xu, __yu, __k));
2042:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
2043:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2044:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return pair<const_iterator, const_iterator>(const_iterator(__y),
2045:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 						  const_iterator(__y));
2046:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2047:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2048:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2049:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2050:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     void
2051:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2052:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     swap(_Rb_tree& __t)
2053:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value)
2054:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2055:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (_M_root() == 0)
2056:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2057:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__t._M_root() != 0)
2058:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_impl._M_move_data(__t._M_impl);
2059:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2060:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else if (__t._M_root() == 0)
2061:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	__t._M_impl._M_move_data(_M_impl);
2062:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else
2063:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2064:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  std::swap(_M_root(),__t._M_root());
2065:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  std::swap(_M_leftmost(),__t._M_leftmost());
2066:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  std::swap(_M_rightmost(),__t._M_rightmost());
2067:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2068:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _M_root()->_M_parent = _M_end();
2069:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __t._M_root()->_M_parent = __t._M_end();
2070:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  std::swap(this->_M_impl._M_node_count, __t._M_impl._M_node_count);
2071:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2072:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // No need to swap header's color as it does not change.
2073:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       std::swap(this->_M_impl._M_key_compare, __t._M_impl._M_key_compare);
2074:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2075:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Alloc_traits::_S_on_swap(_M_get_Node_allocator(),
2076:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				__t._M_get_Node_allocator());
2077:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2078:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2079:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2080:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2081:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2082:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2083:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2084:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 3175              		.loc 13 2085 5 is_stmt 1 view -0
 3176              		.cfi_startproc
 3177              		@ args = 0, pretend = 0, frame = 8
 3178              		@ frame_needed = 0, uses_anonymous_args = 0
 3179              		.loc 13 2085 5 is_stmt 0 view .LVU703
ARM GAS  /tmp/ccfXobHU.s 			page 415


 3180 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3181              		.cfi_def_cfa_offset 36
 3182              		.cfi_offset 4, -36
 3183              		.cfi_offset 5, -32
 3184              		.cfi_offset 6, -28
 3185              		.cfi_offset 7, -24
 3186              		.cfi_offset 8, -20
 3187              		.cfi_offset 9, -16
 3188              		.cfi_offset 10, -12
 3189              		.cfi_offset 11, -8
 3190              		.cfi_offset 14, -4
2086:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
2087:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2088:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2089:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type __x = _M_begin();
 3191              		.loc 13 2089 18 view .LVU704
 3192 0004 8C68     		ldr	r4, [r1, #8]
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 3193              		.loc 13 2085 5 view .LVU705
 3194 0006 83B0     		sub	sp, sp, #12
 3195              		.cfi_def_cfa_offset 48
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 3196              		.loc 13 2085 5 view .LVU706
 3197 0008 8B46     		mov	fp, r1
 3198 000a 8146     		mov	r9, r0
 3199              	.LVL178:
 3200              	.LBB5959:
 3201              	.LBI5959:
 755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 3202              		.loc 13 755 7 is_stmt 1 view .LVU707
 755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 3203              		.loc 13 755 7 is_stmt 0 view .LVU708
 3204              	.LBE5959:
2090:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
2091:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       bool __comp = true;
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
 3205              		.loc 13 2092 18 is_stmt 1 view .LVU709
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 3206              		.loc 13 2085 5 is_stmt 0 view .LVU710
 3207 000c 0192     		str	r2, [sp, #4]
 3208              		.loc 13 2092 18 view .LVU711
 3209 000e B4B3     		cbz	r4, .L176
 3210              	.LBB5961:
 3211              	.LBB5962:
 3212              	.LBB5963:
 3213              	.LBB5964:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 3214              		.loc 3 2855 18 view .LVU712
 3215 0010 019B     		ldr	r3, [sp, #4]
 3216 0012 D3F80480 		ldr	r8, [r3, #4]
2859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
 3217              		.loc 3 2859 32 view .LVU713
 3218 0016 D3F800A0 		ldr	r10, [r3]
 3219              	.LVL179:
 3220              	.L156:
2859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
 3221              		.loc 3 2859 32 view .LVU714
ARM GAS  /tmp/ccfXobHU.s 			page 416


 3222              	.LBE5964:
 3223              	.LBE5963:
 3224              	.LBE5962:
 3225              	.LBI5961:
 3226              		.loc 15 385 7 is_stmt 1 view .LVU715
 3227              	.LBB5978:
 3228              	.LBI5962:
 3229              		.loc 3 6226 5 view .LVU716
 3230              	.LBB5977:
 3231              	.LBI5963:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3232              		.loc 3 2853 7 view .LVU717
 3233              	.LBB5976:
 3234              	.LBB5965:
 3235              	.LBB5966:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3236              		.loc 7 325 2 view .LVU718
 3237              	.LBE5966:
 3238              	.LBE5965:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 3239              		.loc 3 2856 18 is_stmt 0 view .LVU719
 3240 001a 6669     		ldr	r6, [r4, #20]
 3241              	.LVL180:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 3242              		.loc 3 2856 18 view .LVU720
 3243 001c 4546     		mov	r5, r8
 3244              	.LBB5969:
 3245              	.LBB5970:
2313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3246              		.loc 3 2313 24 view .LVU721
 3247 001e 2769     		ldr	r7, [r4, #16]
 3248              	.LBE5970:
 3249              	.LBE5969:
 3250              	.LBB5971:
 3251              	.LBB5967:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3252              		.loc 7 325 25 view .LVU722
 3253 0020 5046     		mov	r0, r10
 3254 0022 B045     		cmp	r8, r6
 3255 0024 3946     		mov	r1, r7
 3256 0026 28BF     		it	cs
 3257 0028 3546     		movcs	r5, r6
 3258              	.LVL181:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3259              		.loc 7 325 25 view .LVU723
 3260              	.LBE5967:
 3261              	.LBE5971:
 3262              	.LBB5972:
 3263              	.LBI5969:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 3264              		.loc 3 2312 7 is_stmt 1 view .LVU724
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 3265              		.loc 3 2312 7 is_stmt 0 view .LVU725
 3266              	.LBE5972:
 3267              	.LBB5973:
 3268              	.LBI5965:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 417


 3269              		.loc 7 315 7 is_stmt 1 view .LVU726
 3270              	.LBB5968:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 3271              		.loc 7 317 2 view .LVU727
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3272              		.loc 7 325 25 is_stmt 0 view .LVU728
 3273 002a 2A46     		mov	r2, r5
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 3274              		.loc 7 317 2 view .LVU729
 3275 002c 15B1     		cbz	r5, .L158
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3276              		.loc 7 325 25 view .LVU730
 3277 002e FFF7FEFF 		bl	memcmp
 3278              	.LVL182:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3279              		.loc 7 325 25 view .LVU731
 3280              	.LBE5968:
 3281              	.LBE5973:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 3282              		.loc 3 2860 2 view .LVU732
 3283 0032 08B9     		cbnz	r0, .L159
 3284              	.LVL183:
 3285              	.L158:
 3286              	.LBB5974:
 3287              	.LBI5974:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3288              		.loc 3 401 7 is_stmt 1 view .LVU733
 3289              	.LBB5975:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3290              		.loc 3 403 51 is_stmt 0 view .LVU734
 3291 0034 A8EB0600 		sub	r0, r8, r6
 3292              	.LVL184:
 3293              	.L159:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3294              		.loc 3 403 51 view .LVU735
 3295              	.LBE5975:
 3296              	.LBE5974:
 3297              	.LBE5976:
 3298              	.LBE5977:
 3299              	.LBE5978:
 3300              	.LBE5961:
2093:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2094:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x;
2095:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = __comp ? _S_left(__x) : _S_right(__x);
 3301              		.loc 13 2096 42 view .LVU736
 3302 0038 0021     		movs	r1, #0
 3303              		.loc 13 2096 17 view .LVU737
 3304 003a 8842     		cmp	r0, r1
 3305 003c 03DB     		blt	.L177
 3306              		.loc 13 2096 42 discriminator 2 view .LVU738
 3307 003e E268     		ldr	r2, [r4, #12]
 3308              	.LVL185:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3309              		.loc 13 2092 18 is_stmt 1 discriminator 2 view .LVU739
 3310 0040 2AB1     		cbz	r2, .L157
 3311              	.LVL186:
ARM GAS  /tmp/ccfXobHU.s 			page 418


 3312              	.L178:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3313              		.loc 13 2092 18 is_stmt 0 discriminator 2 view .LVU740
 3314 0042 1446     		mov	r4, r2
 3315              	.LVL187:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3316              		.loc 13 2092 18 discriminator 2 view .LVU741
 3317 0044 E9E7     		b	.L156
 3318              	.LVL188:
 3319              	.L177:
 3320              		.loc 13 2096 26 discriminator 1 view .LVU742
 3321 0046 A268     		ldr	r2, [r4, #8]
 3322              	.LVL189:
 3323              		.loc 13 2096 26 discriminator 1 view .LVU743
 3324 0048 0121     		movs	r1, #1
 3325              	.LVL190:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3326              		.loc 13 2092 18 is_stmt 1 discriminator 1 view .LVU744
 3327 004a 002A     		cmp	r2, #0
 3328 004c F9D1     		bne	.L178
 3329              	.LVL191:
 3330              	.L157:
 3331              	.LBB5979:
 3332              	.LBI5979:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3333              		.loc 13 273 7 view .LVU745
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3334              		.loc 13 273 7 is_stmt 0 view .LVU746
 3335              	.LBE5979:
2097:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2098:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator __j = iterator(__y);
2099:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__comp)
 3336              		.loc 13 2099 7 view .LVU747
 3337 004e B9B9     		cbnz	r1, .L155
 3338 0050 A346     		mov	fp, r4
 3339              	.LVL192:
 3340              	.L162:
 3341              	.LBB5980:
 3342              	.LBI5980:
 3343              		.loc 15 385 7 is_stmt 1 view .LVU748
 3344              	.LBB5981:
 3345              	.LBI5981:
 3346              		.loc 3 6226 5 view .LVU749
 3347              	.LBB5982:
 3348              	.LBI5982:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3349              		.loc 3 2853 7 view .LVU750
 3350              	.LBB5983:
 3351              	.LBB5984:
 3352              	.LBI5984:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 3353              		.loc 7 315 7 view .LVU751
 3354              	.LBB5985:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 3355              		.loc 7 317 2 view .LVU752
 3356 0052 8DB1     		cbz	r5, .L165
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
ARM GAS  /tmp/ccfXobHU.s 			page 419


 3357              		.loc 7 325 2 view .LVU753
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3358              		.loc 7 325 25 is_stmt 0 view .LVU754
 3359 0054 2A46     		mov	r2, r5
 3360 0056 5146     		mov	r1, r10
 3361 0058 3846     		mov	r0, r7
 3362 005a FFF7FEFF 		bl	memcmp
 3363              	.LVL193:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3364              		.loc 7 325 25 view .LVU755
 3365              	.LBE5985:
 3366              	.LBE5984:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 3367              		.loc 3 2860 2 view .LVU756
 3368 005e 58B1     		cbz	r0, .L165
 3369              	.L166:
 3370              	.LVL194:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 3371              		.loc 3 2860 2 view .LVU757
 3372              	.LBE5983:
 3373              	.LBE5982:
 3374              	.LBE5981:
 3375              	.LBE5980:
2100:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2101:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__j == begin())
2102:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(__x, __y);
2103:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
2104:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    --__j;
2105:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2106:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 3376              		.loc 13 2106 7 view .LVU758
 3377 0060 0028     		cmp	r0, #0
 3378              	.LVL195:
 3379              	.LBB5991:
 3380              	.LBI5991:
 209:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     : private __pair_base<_T1, _T2>
 210:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     {
 211:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       typedef _T1 first_type;    /// @c first_type is the first bound type
 212:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       typedef _T2 second_type;   /// @c second_type is the second bound type
 213:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 214:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       _T1 first;                 /// @c first is a copy of the first object
 215:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       _T2 second;                /// @c second is a copy of the second object
 216:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 217:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 218:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 219:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 220:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        *  respective default constructors.  */
 221:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 222:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1 = _T1,
 223:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                 typename _U2 = _T2,
 224:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                 typename enable_if<__and_<
 225:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 226:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 227:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                                    ::value, bool>::type = true>
 228:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif
 229:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 230:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       : first(), second() { }
ARM GAS  /tmp/ccfXobHU.s 			page 420


 231:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 232:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus >= 201103L
 233:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1 = _T1,
 234:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                 typename _U2 = _T2,
 235:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                 typename enable_if<__and_<
 236:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                        is_default_constructible<_U1>,
 237:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                        is_default_constructible<_U2>,
 238:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                        __not_<
 239:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 240:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 241:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                                    ::value, bool>::type = false>
 242:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       explicit constexpr pair()
 243:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       : first(), second() { }
 244:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif
 245:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 246:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       /** Two objects may be passed to a @c pair constructor to be copied.  */
 247:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus < 201103L
 248:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 249:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 250:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #else
 251:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 252:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 253:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 254:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 255:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 256:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 257:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	                 && _PCCP::template
 258:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 259:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=true>
 260:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 261:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 262:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 263:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 264:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 		enable_if<_PCCP::template
 265:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 266:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	                  && !_PCCP::template
 267:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 268:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=false>
 269:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 270:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       : first(__a), second(__b) { }
 271:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #endif
 272:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 273:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       /** There is also a templated copy ctor for the @c pair class itself.  */
 274:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #if __cplusplus < 201103L
 275:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2>
 276:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 277:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 278:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** #else
 279:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 280:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template <typename _U1, typename _U2>
 281:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 282:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 283:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			    _T1, _T2>;
 284:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 285:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 286:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 287:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
ARM GAS  /tmp/ccfXobHU.s 			page 421


 288:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 289:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 290:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			  bool>::type=true>
 291:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 292:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****         : first(__p.first), second(__p.second) { }
 293:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 294:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 298:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=false>
 300:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 301:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 302:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(const pair&) = default;
 304:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 305:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 306:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       // DR 811.
 307:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename
 308:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 309:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 310:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=true>
 311:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 312:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 313:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 314:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename
 315:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 316:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 317:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=false>
 318:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 319:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 320:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 321:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U2, typename
 322:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 323:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 324:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=true>
 325:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 326:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 327:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 328:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U2, typename
 329:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 330:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 331:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=false>
 332:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 333:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 334:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 335:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       template<typename _U1, typename _U2, typename
 336:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	       enable_if<_PCCP::template
 337:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 338:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			  && _PCCP::template
 339:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 340:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****                          bool>::type=true>
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 3381              		.loc 20 341 12 is_stmt 1 view .LVU759
 3382              	.LBB5992:
 3383              	.LBB5993:
ARM GAS  /tmp/ccfXobHU.s 			page 422


 3384              	.LBB5994:
 3385              	.LBI5994:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3386              		.loc 22 74 5 view .LVU760
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3387              		.loc 22 74 5 is_stmt 0 view .LVU761
 3388              	.LBE5994:
 342:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 3389              		.loc 20 342 64 view .LVU762
 3390 0062 4FF00003 		mov	r3, #0
 3391              	.LBE5993:
 3392              	.LBE5992:
 3393              	.LBE5991:
2107:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _Res(__x, __y);
2108:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return _Res(__j._M_node, 0);
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 3394              		.loc 13 2109 5 view .LVU763
 3395 0066 4846     		mov	r0, r9
 3396              	.LBB5998:
 3397              	.LBB5997:
 3398              	.LBB5996:
 3399              		.loc 20 342 64 view .LVU764
 3400 0068 B4BF     		ite	lt
 3401 006a C9E9003B 		strdlt	r3, fp, [r9]
 3402              	.LVL196:
 3403              	.LBB5995:
 3404              	.LBI5995:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3405              		.loc 22 74 5 is_stmt 1 view .LVU765
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3406              		.loc 22 74 5 is_stmt 0 view .LVU766
 3407              	.LBE5995:
 3408              	.LBE5996:
 3409              	.LBE5997:
 3410              	.LBE5998:
 3411              	.LBB5999:
 3412              	.LBI5999:
 311:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 3413              		.loc 20 311 18 is_stmt 1 view .LVU767
 3414              	.LBB6000:
 3415              	.LBB6001:
 3416              	.LBB6002:
 3417              	.LBI6002:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3418              		.loc 22 74 5 view .LVU768
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3419              		.loc 22 74 5 is_stmt 0 view .LVU769
 3420              	.LBE6002:
 312:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 3421              		.loc 20 312 51 view .LVU770
 3422 006e C9E90043 		strdge	r4, r3, [r9]
 3423              	.LVL197:
 312:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 3424              		.loc 20 312 51 view .LVU771
 3425              	.LBE6001:
 3426              	.LBE6000:
 3427              	.LBE5999:
ARM GAS  /tmp/ccfXobHU.s 			page 423


 3428              		.loc 13 2109 5 view .LVU772
 3429 0072 03B0     		add	sp, sp, #12
 3430              		.cfi_remember_state
 3431              		.cfi_def_cfa_offset 36
 3432              		@ sp needed
 3433 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3434              	.LVL198:
 3435              	.L165:
 3436              		.cfi_restore_state
 3437              	.LBB6003:
 3438              	.LBB5990:
 3439              	.LBB5989:
 3440              	.LBB5988:
 3441              	.LBB5986:
 3442              	.LBI5986:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3443              		.loc 3 401 7 is_stmt 1 view .LVU773
 3444              	.LBB5987:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3445              		.loc 3 403 51 is_stmt 0 view .LVU774
 3446 0078 A6EB0800 		sub	r0, r6, r8
 3447              	.LVL199:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3448              		.loc 3 403 51 view .LVU775
 3449              	.LBE5987:
 3450              	.LBE5986:
 3451 007c F0E7     		b	.L166
 3452              	.LVL200:
 3453              	.L176:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3454              		.loc 3 403 51 view .LVU776
 3455              	.LBE5988:
 3456              	.LBE5989:
 3457              	.LBE5990:
 3458              	.LBE6003:
 3459              	.LBB6004:
 3460              	.LBB5960:
 756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 3461              		.loc 13 756 31 view .LVU777
 3462 007e 0C1D     		adds	r4, r1, #4
 3463              	.LVL201:
 3464              	.L155:
 756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 3465              		.loc 13 756 31 view .LVU778
 3466              	.LBE5960:
 3467              	.LBE6004:
 3468              	.LBB6005:
 3469              	.LBI6005:
1006:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
 3470              		.loc 13 1006 7 is_stmt 1 view .LVU779
 3471              	.LBB6006:
 3472              	.LBI6006:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3473              		.loc 13 273 7 view .LVU780
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3474              		.loc 13 273 7 is_stmt 0 view .LVU781
 3475              	.LBE6006:
ARM GAS  /tmp/ccfXobHU.s 			page 424


 3476              	.LBE6005:
2101:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(__x, __y);
 3477              		.loc 13 2101 4 view .LVU782
 3478 0080 DBF80C30 		ldr	r3, [fp, #12]
 3479 0084 A342     		cmp	r3, r4
 3480 0086 10D0     		beq	.L179
 3481              	.LVL202:
 3482              	.LBB6007:
 3483              	.LBI6007:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 3484              		.loc 13 300 7 is_stmt 1 view .LVU783
 3485              	.LBB6008:
 302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 3486              		.loc 13 302 30 is_stmt 0 view .LVU784
 3487 0088 2046     		mov	r0, r4
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 3488              		.loc 13 303 10 view .LVU785
 3489 008a A346     		mov	fp, r4
 3490              	.LVL203:
 302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 3491              		.loc 13 302 30 view .LVU786
 3492 008c FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 3493              	.LVL204:
 3494 0090 019B     		ldr	r3, [sp, #4]
 3495 0092 4669     		ldr	r6, [r0, #20]
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 3496              		.loc 13 303 10 view .LVU787
 3497 0094 0446     		mov	r4, r0
 3498              	.LVL205:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 3499              		.loc 13 303 10 view .LVU788
 3500 0096 D3F80480 		ldr	r8, [r3, #4]
 3501              	.LVL206:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 3502              		.loc 13 303 10 view .LVU789
 3503 009a D3F800A0 		ldr	r10, [r3]
 3504 009e B045     		cmp	r8, r6
 3505 00a0 4546     		mov	r5, r8
 3506 00a2 0769     		ldr	r7, [r0, #16]
 3507 00a4 28BF     		it	cs
 3508 00a6 3546     		movcs	r5, r6
 3509 00a8 D3E7     		b	.L162
 3510              	.LVL207:
 3511              	.L179:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 3512              		.loc 13 303 10 view .LVU790
 3513              	.LBE6008:
 3514              	.LBE6007:
 3515              	.LBB6009:
 3516              	.LBI6009:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 3517              		.loc 20 341 12 is_stmt 1 view .LVU791
 3518              	.LBB6010:
 3519              	.LBB6011:
 3520              	.LBB6012:
 3521              	.LBI6012:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
ARM GAS  /tmp/ccfXobHU.s 			page 425


 3522              		.loc 22 74 5 view .LVU792
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3523              		.loc 22 74 5 is_stmt 0 view .LVU793
 3524              	.LBE6012:
 3525              		.loc 20 342 64 view .LVU794
 3526 00aa 0023     		movs	r3, #0
 3527              	.LBE6011:
 3528              	.LBE6010:
 3529              	.LBE6009:
 3530              		.loc 13 2109 5 view .LVU795
 3531 00ac 4846     		mov	r0, r9
 3532              	.LBB6016:
 3533              	.LBB6015:
 3534              	.LBB6014:
 3535              		.loc 20 342 64 view .LVU796
 3536 00ae C9E90034 		strd	r3, r4, [r9]
 3537              	.LVL208:
 3538              	.LBB6013:
 3539              	.LBI6013:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3540              		.loc 22 74 5 is_stmt 1 view .LVU797
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 3541              		.loc 22 74 5 is_stmt 0 view .LVU798
 3542              	.LBE6013:
 3543              	.LBE6014:
 3544              	.LBE6015:
 3545              	.LBE6016:
 3546              		.loc 13 2109 5 view .LVU799
 3547 00b2 03B0     		add	sp, sp, #12
 3548              		.cfi_def_cfa_offset 36
 3549              		@ sp needed
 3550 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3551              		.loc 13 2109 5 view .LVU800
 3552              		.cfi_endproc
 3553              	.LFE3727:
 3555              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pa
 3556              		.align	1
 3557              		.p2align 2,,3
 3558              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iE
 3559              		.syntax unified
 3560              		.thumb
 3561              		.thumb_func
 3562              		.fpu fpv5-d16
 3564              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC2ESt
 3565              	.LVL209:
 3566              	.LFB3165:
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 3567              		.loc 14 226 7 is_stmt 1 view -0
 3568              		.cfi_startproc
 3569              		@ args = 4, pretend = 0, frame = 16
 3570              		@ frame_needed = 0, uses_anonymous_args = 0
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 3571              		.loc 14 226 7 is_stmt 0 view .LVU802
 3572 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3573              		.cfi_def_cfa_offset 36
 3574              		.cfi_offset 4, -36
 3575              		.cfi_offset 5, -32
ARM GAS  /tmp/ccfXobHU.s 			page 426


 3576              		.cfi_offset 6, -28
 3577              		.cfi_offset 7, -24
 3578              		.cfi_offset 8, -20
 3579              		.cfi_offset 9, -16
 3580              		.cfi_offset 10, -12
 3581              		.cfi_offset 11, -8
 3582              		.cfi_offset 14, -4
 3583 0004 85B0     		sub	sp, sp, #20
 3584              		.cfi_def_cfa_offset 56
 3585              	.LBB6250:
 3586              	.LBB6251:
 3587              	.LBB6252:
 3588              	.LBB6253:
 3589              	.LBB6254:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 3590              		.loc 13 175 26 view .LVU803
 3591 0006 0023     		movs	r3, #0
 3592              	.LVL210:
 3593              	.LBB6255:
 3594              	.LBB6256:
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 3595              		.loc 13 209 27 view .LVU804
 3596 0008 00F1040B 		add	fp, r0, #4
 3597              	.LVL211:
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 3598              		.loc 13 209 27 view .LVU805
 3599              	.LBE6256:
 3600              	.LBE6255:
 3601              	.LBE6254:
 3602              	.LBE6253:
 3603              	.LBE6252:
 3604              	.LBE6251:
 3605              	.LBB6278:
 3606              	.LBI6278:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3607              		.loc 6 141 7 is_stmt 1 view .LVU806
 3608              	.LBB6279:
 3609              	.LBI6279:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3610              		.loc 5 83 7 view .LVU807
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3611              		.loc 5 83 7 is_stmt 0 view .LVU808
 3612              	.LBE6279:
 3613              	.LBE6278:
 3614              	.LBB6280:
 3615              	.LBI6251:
 942:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 3616              		.loc 13 942 7 is_stmt 1 view .LVU809
 3617              	.LBB6271:
 3618              	.LBI6271:
 151:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 3619              		.loc 6 151 2 view .LVU810
 3620              	.LBB6272:
 3621              	.LBI6272:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3622              		.loc 5 80 7 view .LVU811
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 427


 3623              		.loc 5 80 7 is_stmt 0 view .LVU812
 3624              	.LBE6272:
 3625              	.LBE6271:
 3626              	.LBB6273:
 3627              	.LBI6252:
 710:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 3628              		.loc 13 710 4 is_stmt 1 view .LVU813
 3629              	.LBB6264:
 3630              	.LBI6264:
 3631              		.loc 22 99 5 view .LVU814
 3632              		.loc 22 99 5 is_stmt 0 view .LVU815
 3633              	.LBE6264:
 3634              	.LBB6265:
 3635              	.LBI6265:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3636              		.loc 6 141 7 is_stmt 1 view .LVU816
 3637              	.LBB6266:
 3638              	.LBI6266:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3639              		.loc 5 83 7 view .LVU817
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3640              		.loc 5 83 7 is_stmt 0 view .LVU818
 3641              	.LBE6266:
 3642              	.LBE6265:
 3643              	.LBB6267:
 3644              	.LBI6267:
 152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__comp)
 3645              		.loc 13 152 7 is_stmt 1 view .LVU819
 152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__comp)
 3646              		.loc 13 152 7 is_stmt 0 view .LVU820
 3647              	.LBE6267:
 3648              	.LBB6268:
 3649              	.LBI6253:
 173:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 3650              		.loc 13 173 5 is_stmt 1 view .LVU821
 3651              	.LBB6261:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 3652              		.loc 13 175 7 view .LVU822
 3653              	.LBE6261:
 3654              	.LBE6268:
 3655              	.LBE6273:
 3656              	.LBE6280:
 3657              	.LBE6250:
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 3658              		.loc 14 226 7 is_stmt 0 view .LVU823
 3659 000c 0646     		mov	r6, r0
 3660 000e 6C46     		mov	r4, sp
 3661              	.LBB6419:
 3662              	.LBB6281:
 3663              	.LBB6274:
 3664              	.LBB6269:
 3665              	.LBB6262:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 3666              		.loc 13 175 26 view .LVU824
 3667 0010 0371     		strb	r3, [r0, #4]
 176:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 3668              		.loc 13 176 7 is_stmt 1 view .LVU825
ARM GAS  /tmp/ccfXobHU.s 			page 428


 3669              	.LVL212:
 3670              	.LBB6259:
 3671              	.LBI6255:
 206:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 3672              		.loc 13 206 5 view .LVU826
 3673              	.LBB6257:
 208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = &_M_header;
 3674              		.loc 13 208 7 view .LVU827
 208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = &_M_header;
 3675              		.loc 13 208 27 is_stmt 0 view .LVU828
 3676 0012 8360     		str	r3, [r0, #8]
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 3677              		.loc 13 209 7 is_stmt 1 view .LVU829
 210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = 0;
 3678              		.loc 13 210 7 view .LVU830
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 3679              		.loc 13 211 7 view .LVU831
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 3680              		.loc 13 211 21 is_stmt 0 view .LVU832
 3681 0014 4361     		str	r3, [r0, #20]
 3682              	.LVL213:
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 3683              		.loc 13 211 21 view .LVU833
 3684              	.LBE6257:
 3685              	.LBE6259:
 3686              	.LBE6262:
 3687              	.LBE6269:
 3688              	.LBE6274:
 3689              	.LBB6275:
 3690              	.LBI6275:
 3691              		.loc 6 153 7 is_stmt 1 view .LVU834
 3692              	.LBB6276:
 3693              	.LBI6276:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3694              		.loc 5 89 7 view .LVU835
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3695              		.loc 5 89 7 is_stmt 0 view .LVU836
 3696              	.LBE6276:
 3697              	.LBE6275:
 3698              	.LBE6281:
 3699              	.LBB6282:
 3700              	.LBI6282:
 3701              		.loc 6 153 7 is_stmt 1 view .LVU837
 3702              	.LBB6283:
 3703              	.LBI6283:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3704              		.loc 5 89 7 view .LVU838
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 3705              		.loc 5 89 7 is_stmt 0 view .LVU839
 3706              	.LBE6283:
 3707              	.LBE6282:
 3708              	.LBB6284:
 3709              	.LBI6284:
 3710              		.file 23 "/usr/include/newlib/c++/9.2.1/initializer_list"
   1:/usr/include/newlib/c++/9.2.1/initializer_list **** // std::initializer_list support -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/initializer_list **** 
   3:/usr/include/newlib/c++/9.2.1/initializer_list **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
ARM GAS  /tmp/ccfXobHU.s 			page 429


   4:/usr/include/newlib/c++/9.2.1/initializer_list **** //
   5:/usr/include/newlib/c++/9.2.1/initializer_list **** // This file is part of GCC.
   6:/usr/include/newlib/c++/9.2.1/initializer_list **** //
   7:/usr/include/newlib/c++/9.2.1/initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/newlib/c++/9.2.1/initializer_list **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/newlib/c++/9.2.1/initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/newlib/c++/9.2.1/initializer_list **** // any later version.
  11:/usr/include/newlib/c++/9.2.1/initializer_list **** //
  12:/usr/include/newlib/c++/9.2.1/initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/newlib/c++/9.2.1/initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/newlib/c++/9.2.1/initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/newlib/c++/9.2.1/initializer_list **** // GNU General Public License for more details.
  16:/usr/include/newlib/c++/9.2.1/initializer_list **** //
  17:/usr/include/newlib/c++/9.2.1/initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/newlib/c++/9.2.1/initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/newlib/c++/9.2.1/initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  21:/usr/include/newlib/c++/9.2.1/initializer_list **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/newlib/c++/9.2.1/initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/newlib/c++/9.2.1/initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/newlib/c++/9.2.1/initializer_list **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  26:/usr/include/newlib/c++/9.2.1/initializer_list **** /** @file initializer_list
  27:/usr/include/newlib/c++/9.2.1/initializer_list ****  *  This is a Standard C++ Library header.
  28:/usr/include/newlib/c++/9.2.1/initializer_list ****  */
  29:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  30:/usr/include/newlib/c++/9.2.1/initializer_list **** #ifndef _INITIALIZER_LIST
  31:/usr/include/newlib/c++/9.2.1/initializer_list **** #define _INITIALIZER_LIST
  32:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  33:/usr/include/newlib/c++/9.2.1/initializer_list **** #pragma GCC system_header
  34:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  35:/usr/include/newlib/c++/9.2.1/initializer_list **** #if __cplusplus < 201103L
  36:/usr/include/newlib/c++/9.2.1/initializer_list **** # include <bits/c++0x_warning.h>
  37:/usr/include/newlib/c++/9.2.1/initializer_list **** #else // C++0x
  38:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  39:/usr/include/newlib/c++/9.2.1/initializer_list **** #pragma GCC visibility push(default)
  40:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  41:/usr/include/newlib/c++/9.2.1/initializer_list **** #include <bits/c++config.h>
  42:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  43:/usr/include/newlib/c++/9.2.1/initializer_list **** namespace std
  44:/usr/include/newlib/c++/9.2.1/initializer_list **** {
  45:/usr/include/newlib/c++/9.2.1/initializer_list ****   /// initializer_list
  46:/usr/include/newlib/c++/9.2.1/initializer_list ****   template<class _E>
  47:/usr/include/newlib/c++/9.2.1/initializer_list ****     class initializer_list
  48:/usr/include/newlib/c++/9.2.1/initializer_list ****     {
  49:/usr/include/newlib/c++/9.2.1/initializer_list ****     public:
  50:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef _E 		value_type;
  51:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef const _E& 	reference;
  52:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef const _E& 	const_reference;
  53:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef size_t 		size_type;
  54:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef const _E* 	iterator;
  55:/usr/include/newlib/c++/9.2.1/initializer_list ****       typedef const _E* 	const_iterator;
  56:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  57:/usr/include/newlib/c++/9.2.1/initializer_list ****     private:
  58:/usr/include/newlib/c++/9.2.1/initializer_list ****       iterator			_M_array;
  59:/usr/include/newlib/c++/9.2.1/initializer_list ****       size_type			_M_len;
  60:/usr/include/newlib/c++/9.2.1/initializer_list **** 
ARM GAS  /tmp/ccfXobHU.s 			page 430


  61:/usr/include/newlib/c++/9.2.1/initializer_list ****       // The compiler can call a private constructor.
  62:/usr/include/newlib/c++/9.2.1/initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:/usr/include/newlib/c++/9.2.1/initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  65:/usr/include/newlib/c++/9.2.1/initializer_list ****     public:
  66:/usr/include/newlib/c++/9.2.1/initializer_list ****       constexpr initializer_list() noexcept
  67:/usr/include/newlib/c++/9.2.1/initializer_list ****       : _M_array(0), _M_len(0) { }
  68:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  69:/usr/include/newlib/c++/9.2.1/initializer_list ****       // Number of elements.
  70:/usr/include/newlib/c++/9.2.1/initializer_list ****       constexpr size_type
  71:/usr/include/newlib/c++/9.2.1/initializer_list ****       size() const noexcept { return _M_len; }
  72:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  73:/usr/include/newlib/c++/9.2.1/initializer_list ****       // First element.
  74:/usr/include/newlib/c++/9.2.1/initializer_list ****       constexpr const_iterator
  75:/usr/include/newlib/c++/9.2.1/initializer_list ****       begin() const noexcept { return _M_array; }
 3711              		.loc 23 75 7 is_stmt 1 view .LVU840
 3712              		.loc 23 75 7 is_stmt 0 view .LVU841
 3713              	.LBE6284:
 3714              	.LBB6285:
 3715              	.LBI6285:
  76:/usr/include/newlib/c++/9.2.1/initializer_list **** 
  77:/usr/include/newlib/c++/9.2.1/initializer_list ****       // One past the last element.
  78:/usr/include/newlib/c++/9.2.1/initializer_list ****       constexpr const_iterator
  79:/usr/include/newlib/c++/9.2.1/initializer_list ****       end() const noexcept { return begin() + size(); }
 3716              		.loc 23 79 7 is_stmt 1 view .LVU842
 3717              		.loc 23 79 7 is_stmt 0 view .LVU843
 3718              	.LBE6285:
 3719              	.LBE6419:
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 3720              		.loc 14 226 7 view .LVU844
 3721 0016 84E80600 		stm	r4, {r1, r2}
 3722              	.LBB6420:
 3723              	.LBB6287:
 3724              	.LBB6286:
 3725              		.loc 23 79 45 view .LVU845
 3726 001a C2EBC202 		rsb	r2, r2, r2, lsl #3
 3727              		.loc 23 79 52 view .LVU846
 3728 001e 01EB820A 		add	r10, r1, r2, lsl #2
 3729              	.LVL214:
 3730              		.loc 23 79 52 view .LVU847
 3731              	.LBE6286:
 3732              	.LBE6287:
 3733              	.LBB6288:
 3734              	.LBI6288:
1109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3735              		.loc 13 1109 2 is_stmt 1 view .LVU848
 3736              	.LBB6289:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 3737              		.loc 13 1112 19 view .LVU849
 3738 0022 8A45     		cmp	r10, r1
 3739              	.LBE6289:
 3740              	.LBE6288:
 3741              	.LBB6414:
 3742              	.LBB6277:
 3743              	.LBB6270:
 3744              	.LBB6263:
 3745              	.LBB6260:
ARM GAS  /tmp/ccfXobHU.s 			page 431


 3746              	.LBB6258:
 210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = 0;
 3747              		.loc 13 210 26 is_stmt 0 view .LVU850
 3748 0024 C0E903BB 		strd	fp, fp, [r0, #12]
 3749              	.LBE6258:
 3750              	.LBE6260:
 3751              	.LBE6263:
 3752              	.LBE6270:
 3753              	.LBE6277:
 3754              	.LBE6414:
 3755              	.LBB6415:
 3756              	.LBB6410:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 3757              		.loc 13 1112 19 view .LVU851
 3758 0028 47D0     		beq	.L181
 3759 002a 0C46     		mov	r4, r1
 3760              	.LVL215:
 3761              	.L190:
 3762              	.LBB6290:
 3763              	.LBI6290:
1014:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 3764              		.loc 13 1014 7 is_stmt 1 view .LVU852
 3765              	.LBB6291:
 3766              	.LBI6291:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3767              		.loc 13 273 7 view .LVU853
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3768              		.loc 13 273 7 is_stmt 0 view .LVU854
 3769              	.LBE6291:
 3770              	.LBE6290:
 3771              	.LBB6292:
 3772              	.LBI6292:
 348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 3773              		.loc 13 348 7 is_stmt 1 view .LVU855
 348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 3774              		.loc 13 348 7 is_stmt 0 view .LVU856
 3775              	.LBE6292:
 3776              	.LBB6293:
 3777              	.LBI6293:
2110:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2111:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2113:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2114:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
2115:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2116:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2117:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2118:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_equal_pos(const key_type& __k)
2119:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2120:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2121:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Link_type __x = _M_begin();
2122:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
2123:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       while (__x != 0)
2124:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2125:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __y = __x;
2126:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  __x = _M_impl._M_key_compare(__k, _S_key(__x)) ?
2127:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		_S_left(__x) : _S_right(__x);
ARM GAS  /tmp/ccfXobHU.s 			page 432


2128:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2129:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return _Res(__x, __y);
2130:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2131:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2132:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2133:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2134:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2135:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg>
2136:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2137:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2138:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::iterator, bool>
2139:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2140:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2141:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_unique(_Arg&& __v)
2142:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
2143:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_unique(const _Val& __v)
2144:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2145:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2146:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef pair<iterator, bool> _Res;
2147:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2148:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
2149:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2150:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__res.second)
2151:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  _Alloc_node __an(*this);
2153:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  return _Res(_M_insert_(__res.first, __res.second,
2154:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				 _GLIBCXX_FORWARD(_Arg, __v), __an),
2155:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		      true);
2156:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2157:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2158:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return _Res(iterator(__res.first), false);
2159:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2160:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2161:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2162:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2163:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2164:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg>
2165:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2166:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2167:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2168:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2169:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_equal(_Arg&& __v)
2170:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
2171:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_insert_equal(const _Val& __v)
2172:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2173:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2174:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
2175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	= _M_get_insert_equal_pos(_KeyOfValue()(__v));
2176:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Alloc_node __an(*this);
2177:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       return _M_insert_(__res.first, __res.second,
2178:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			_GLIBCXX_FORWARD(_Arg, __v), __an);
2179:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2180:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2181:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2182:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
2183:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
2184:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr,
ARM GAS  /tmp/ccfXobHU.s 			page 433


2185:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
2186:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			   _Compare, _Alloc>::_Base_ptr>
2187:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
2188:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
2189:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				  const key_type& __k)
2190:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2191:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       iterator __pos = __position._M_const_cast();
2192:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typedef pair<_Base_ptr, _Base_ptr> _Res;
2193:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2194:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       // end()
2195:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__pos._M_node == _M_end())
2196:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2197:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (size() > 0
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
2199:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2200:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
2201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2202:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2203:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
2204:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2205:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  // First, try before...
2206:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  iterator __before = __pos;
2207:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__pos._M_node == _M_leftmost()) // begin()
2208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(_M_leftmost(), _M_leftmost());
2209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
2210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
2211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (_S_right(__before._M_node) == 0)
2212:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		return _Res(0, __before._M_node);
2213:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      else
2214:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		return _Res(__pos._M_node, __pos._M_node);
2215:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
2216:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
2217:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2218:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2219:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
2220:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
2221:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  // ... then try after.
2222:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  iterator __after = __pos;
2223:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  if (__pos._M_node == _M_rightmost())
2224:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
2225:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
2226:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    {
2227:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      if (_S_right(__pos._M_node) == 0)
2228:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		return _Res(0, __pos._M_node);
2229:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	      else
2230:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 		return _Res(__after._M_node, __after._M_node);
2231:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    }
2232:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  else
2233:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _M_get_insert_unique_pos(__k);
2234:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
2235:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       else
2236:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	// Equivalent keys.
2237:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _Res(__pos._M_node, 0);
2238:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
2239:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2240:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****   template<typename _Key, typename _Val, typename _KeyOfValue,
2241:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	   typename _Compare, typename _Alloc>
ARM GAS  /tmp/ccfXobHU.s 			page 434


2242:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2243:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _Arg, typename _NodeGen>
2244:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
2245:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     template<typename _NodeGen>
2246:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2247:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
2248:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 3778              		.loc 13 2248 7 is_stmt 1 view .LVU857
 3779              	.LBB6294:
 3780              	.LBB6295:
 3781              	.LBI6295:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 387:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 388:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 389:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 390:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 391:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater_equal : public binary_function<_Tp, _Tp, bool>
 392:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 393:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 394:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 395:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 396:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x >= __y; }
 397:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 398:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 399:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 400:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 401:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less_equal : public binary_function<_Tp, _Tp, bool>
 402:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 403:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 404:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 405:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 406:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x <= __y; }
 407:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 408:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 409:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // Partial specialization of std::greater for pointers.
 410:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 411:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
 412:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 413:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR bool
 414:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
 415:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       {
 416:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus >= 201402L
 417:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 418:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_is_constant_evaluated())
 419:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #else
 420:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_constant_p(__x > __y))
 421:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 422:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return __x > __y;
 423:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 424:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	return (__UINTPTR_TYPE__)__x > (__UINTPTR_TYPE__)__y;
 425:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       }
 426:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 427:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 428:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // Partial specialization of std::less for pointers.
 429:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 430:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
 431:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
ARM GAS  /tmp/ccfXobHU.s 			page 435


 432:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR bool
 433:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
 434:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       {
 435:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus >= 201402L
 436:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 437:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_is_constant_evaluated())
 438:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #else
 439:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_constant_p(__x < __y))
 440:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 441:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return __x < __y;
 442:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 443:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
 444:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       }
 445:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 446:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 447:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // Partial specialization of std::greater_equal for pointers.
 448:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 449:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater_equal<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
 450:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 451:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR bool
 452:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
 453:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       {
 454:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus >= 201402L
 455:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 456:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_is_constant_evaluated())
 457:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #else
 458:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_constant_p(__x >= __y))
 459:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 460:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return __x >= __y;
 461:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 462:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	return (__UINTPTR_TYPE__)__x >= (__UINTPTR_TYPE__)__y;
 463:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       }
 464:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 465:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 466:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // Partial specialization of std::less_equal for pointers.
 467:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 468:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less_equal<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
 469:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 470:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR bool
 471:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
 472:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       {
 473:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus >= 201402L
 474:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 475:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_is_constant_evaluated())
 476:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #else
 477:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	if (__builtin_constant_p(__x <= __y))
 478:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 479:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return __x <= __y;
 480:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 481:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	return (__UINTPTR_TYPE__)__x <= (__UINTPTR_TYPE__)__y;
 482:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       }
 483:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 484:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 485:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus >= 201402L
 486:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 487:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 488:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct equal_to<void>
ARM GAS  /tmp/ccfXobHU.s 			page 436


 489:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 490:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 491:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 492:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 493:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) == std::forward<_Up>(__u)))
 494:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) == std::forward<_Up>(__u))
 495:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) == std::forward<_Up>(__u); }
 496:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 497:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 498:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 499:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 500:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 501:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 502:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct not_equal_to<void>
 503:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 504:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 505:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 506:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 507:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) != std::forward<_Up>(__u)))
 508:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) != std::forward<_Up>(__u))
 509:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) != std::forward<_Up>(__u); }
 510:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 511:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 512:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 513:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 514:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 515:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 516:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater<void>
 517:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 518:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 519:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 520:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 521:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) > std::forward<_Up>(__u)))
 522:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) > std::forward<_Up>(__u))
 523:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 524:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return _S_cmp(std::forward<_Tp>(__t), std::forward<_Up>(__u),
 525:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 			__ptr_cmp<_Tp, _Up>{});
 526:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 527:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 528:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 529:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr bool
 530:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp* __t, _Up* __u) const noexcept
 531:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return greater<common_type_t<_Tp*, _Up*>>{}(__t, __u); }
 532:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 533:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 534:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 535:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     private:
 536:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 537:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr decltype(auto)
 538:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, false_type)
 539:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) > std::forward<_Up>(__u); }
 540:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 541:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 542:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr bool
 543:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept
 544:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 545:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return greater<const volatile void*>{}(
ARM GAS  /tmp/ccfXobHU.s 			page 437


 546:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Tp>(__t)),
 547:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Up>(__u)));
 548:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 549:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 550:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no viable operator> member function.
 551:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 552:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2 : true_type { };
 553:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 554:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call T.operator>(U)
 555:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 556:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2<_Tp, _Up, __void_t<
 557:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(std::declval<_Tp>().operator>(std::declval<_Up>()))>>
 558:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 559:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 560:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no overloaded operator> for these operands.
 561:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 562:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };
 563:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 564:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call operator>(T,U)
 565:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 566:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded<_Tp, _Up, __void_t<
 567:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(operator>(std::declval<_Tp>(), std::declval<_Up>()))>>
 568:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 569:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 570:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 571:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,
 572:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Tp, const volatile void*>,
 573:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Up, const volatile void*>>;
 574:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 575:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 576:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 577:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 578:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less<void>
 579:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 580:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 581:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 582:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 583:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) < std::forward<_Up>(__u)))
 584:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) < std::forward<_Up>(__u))
 585:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 586:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return _S_cmp(std::forward<_Tp>(__t), std::forward<_Up>(__u),
 587:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 			__ptr_cmp<_Tp, _Up>{});
 588:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 589:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 590:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 591:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr bool
 592:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp* __t, _Up* __u) const noexcept
 593:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return less<common_type_t<_Tp*, _Up*>>{}(__t, __u); }
 594:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 595:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 596:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 597:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     private:
 598:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 599:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr decltype(auto)
 600:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, false_type)
 601:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) < std::forward<_Up>(__u); }
 602:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 438


 603:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 604:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr bool
 605:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept
 606:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 607:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return less<const volatile void*>{}(
 608:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Tp>(__t)),
 609:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Up>(__u)));
 610:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 611:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 612:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no viable operator< member function.
 613:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 614:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2 : true_type { };
 615:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 616:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call T.operator<(U)
 617:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 618:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2<_Tp, _Up, __void_t<
 619:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(std::declval<_Tp>().operator<(std::declval<_Up>()))>>
 620:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 621:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 622:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no overloaded operator< for these operands.
 623:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 624:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };
 625:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 626:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call operator<(T,U)
 627:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 628:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded<_Tp, _Up, __void_t<
 629:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(operator<(std::declval<_Tp>(), std::declval<_Up>()))>>
 630:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 631:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 632:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 633:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,
 634:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Tp, const volatile void*>,
 635:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Up, const volatile void*>>;
 636:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 637:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 638:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 639:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 640:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct greater_equal<void>
 641:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 642:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 643:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 644:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 645:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) >= std::forward<_Up>(__u)))
 646:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) >= std::forward<_Up>(__u))
 647:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 648:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return _S_cmp(std::forward<_Tp>(__t), std::forward<_Up>(__u),
 649:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 			__ptr_cmp<_Tp, _Up>{});
 650:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 651:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 652:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 653:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr bool
 654:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp* __t, _Up* __u) const noexcept
 655:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return greater_equal<common_type_t<_Tp*, _Up*>>{}(__t, __u); }
 656:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 657:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 658:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 659:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     private:
ARM GAS  /tmp/ccfXobHU.s 			page 439


 660:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 661:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr decltype(auto)
 662:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, false_type)
 663:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) >= std::forward<_Up>(__u); }
 664:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 665:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 666:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr bool
 667:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept
 668:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 669:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return greater_equal<const volatile void*>{}(
 670:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Tp>(__t)),
 671:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Up>(__u)));
 672:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 673:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 674:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no viable operator>= member function.
 675:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 676:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2 : true_type { };
 677:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 678:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call T.operator>=(U)
 679:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 680:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2<_Tp, _Up, __void_t<
 681:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(std::declval<_Tp>().operator>=(std::declval<_Up>()))>>
 682:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 683:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 684:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no overloaded operator>= for these operands.
 685:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 686:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };
 687:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 688:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call operator>=(T,U)
 689:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 690:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded<_Tp, _Up, __void_t<
 691:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(operator>=(std::declval<_Tp>(), std::declval<_Up>()))>>
 692:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 693:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 694:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 695:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,
 696:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Tp, const volatile void*>,
 697:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Up, const volatile void*>>;
 698:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 699:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 700:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 701:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 702:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct less_equal<void>
 703:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 704:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 705:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr auto
 706:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 707:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) <= std::forward<_Up>(__u)))
 708:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) <= std::forward<_Up>(__u))
 709:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 710:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return _S_cmp(std::forward<_Tp>(__t), std::forward<_Up>(__u),
 711:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 			__ptr_cmp<_Tp, _Up>{});
 712:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 713:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 714:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 715:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	constexpr bool
 716:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp* __t, _Up* __u) const noexcept
ARM GAS  /tmp/ccfXobHU.s 			page 440


 717:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return less_equal<common_type_t<_Tp*, _Up*>>{}(__t, __u); }
 718:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 719:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 720:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 721:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     private:
 722:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 723:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr decltype(auto)
 724:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, false_type)
 725:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) <= std::forward<_Up>(__u); }
 726:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 727:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 728:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	static constexpr bool
 729:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_S_cmp(_Tp&& __t, _Up&& __u, true_type) noexcept
 730:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{
 731:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  return less_equal<const volatile void*>{}(
 732:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Tp>(__t)),
 733:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      static_cast<const volatile void*>(std::forward<_Up>(__u)));
 734:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	}
 735:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 736:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no viable operator<= member function.
 737:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 738:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2 : true_type { };
 739:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 740:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call T.operator<=(U)
 741:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 742:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded2<_Tp, _Up, __void_t<
 743:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(std::declval<_Tp>().operator<=(std::declval<_Up>()))>>
 744:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 745:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 746:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // True if there is no overloaded operator<= for these operands.
 747:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up, typename = void>
 748:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded : __not_overloaded2<_Tp, _Up> { };
 749:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 750:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       // False if we can call operator<=(T,U)
 751:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 752:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	struct __not_overloaded<_Tp, _Up, __void_t<
 753:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	  decltype(operator<=(std::declval<_Tp>(), std::declval<_Up>()))>>
 754:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	: false_type { };
 755:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 756:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template<typename _Tp, typename _Up>
 757:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	using __ptr_cmp = __and_<__not_overloaded<_Tp, _Up>,
 758:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Tp, const volatile void*>,
 759:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	      is_convertible<_Up, const volatile void*>>;
 760:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 761:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif // C++14
 762:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
 763:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 764:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.4 logical operations
 765:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup logical_functors Boolean Operations Classes
 766:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup functors
 767:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 768:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Here are wrapper functors for Boolean operations: @c &&, @c ||,
 769:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  and @c !.
 770:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 771:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
 772:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
 773:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
ARM GAS  /tmp/ccfXobHU.s 			page 441


 774:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 775:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_and;
 776:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 777:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 778:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_or;
 779:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 780:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 781:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_not;
 782:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 783:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 784:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 785:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 786:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_and : public binary_function<_Tp, _Tp, bool>
 787:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 788:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 789:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 790:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 791:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x && __y; }
 792:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 793:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 794:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 795:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 796:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_or : public binary_function<_Tp, _Tp, bool>
 797:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 798:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 799:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 800:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 801:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x || __y; }
 802:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 803:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 804:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 805:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 806:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_not : public unary_function<_Tp, bool>
 807:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 808:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 809:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
 810:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x) const
 811:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return !__x; }
 812:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 813:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 814:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 815:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 816:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 817:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_and<void>
 818:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 819:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 820:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 821:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 822:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 823:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) && std::forward<_Up>(__u)))
 824:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) && std::forward<_Up>(__u))
 825:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) && std::forward<_Up>(__u); }
 826:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 827:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 828:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 829:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 830:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
ARM GAS  /tmp/ccfXobHU.s 			page 442


 831:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 832:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_or<void>
 833:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 834:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 835:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 836:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 837:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 838:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) || std::forward<_Up>(__u)))
 839:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) || std::forward<_Up>(__u))
 840:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) || std::forward<_Up>(__u); }
 841:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 842:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 843:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 844:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 845:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link logical_functors Boolean operations functors@endlink.
 846:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<>
 847:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct logical_not<void>
 848:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 849:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp>
 850:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 851:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 852:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 853:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(!std::forward<_Tp>(__t)))
 854:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(!std::forward<_Tp>(__t))
 855:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return !std::forward<_Tp>(__t); }
 856:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 857:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 858:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 859:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 860:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
 861:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 862:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 863:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 864:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_and;
 865:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 866:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 867:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_or;
 868:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 869:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 870:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_xor;
 871:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 872:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp = void>
 873:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_not;
 874:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 875:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 876:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 877:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // DR 660. Missing Bitwise Operations.
 878:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 879:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_and : public binary_function<_Tp, _Tp, _Tp>
 880:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 881:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 882:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 883:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 884:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x & __y; }
 885:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 886:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 887:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
ARM GAS  /tmp/ccfXobHU.s 			page 443


 888:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_or : public binary_function<_Tp, _Tp, _Tp>
 889:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 890:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 891:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 892:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 893:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x | __y; }
 894:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 895:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 896:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 897:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_xor : public binary_function<_Tp, _Tp, _Tp>
 898:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 899:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
 900:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 901:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 902:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x ^ __y; }
 903:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 904:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 905:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
 906:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_not : public unary_function<_Tp, _Tp>
 907:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 908:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
 909:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp
 910:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x) const
 911:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return ~__x; }
 912:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 913:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 914:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #if __cplusplus > 201103L
 915:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template <>
 916:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_and<void>
 917:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 918:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 919:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 920:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 921:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 922:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) & std::forward<_Up>(__u)))
 923:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) & std::forward<_Up>(__u))
 924:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) & std::forward<_Up>(__u); }
 925:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 926:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 927:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 928:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 929:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template <>
 930:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_or<void>
 931:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 932:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 933:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 934:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 935:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 936:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) | std::forward<_Up>(__u)))
 937:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) | std::forward<_Up>(__u))
 938:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) | std::forward<_Up>(__u); }
 939:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 940:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 941:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 942:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 943:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template <>
 944:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_xor<void>
ARM GAS  /tmp/ccfXobHU.s 			page 444


 945:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 946:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp, typename _Up>
 947:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 948:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 949:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 950:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u)))
 951:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) ^ std::forward<_Up>(__u))
 952:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return std::forward<_Tp>(__t) ^ std::forward<_Up>(__u); }
 953:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 954:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 955:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 956:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 957:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template <>
 958:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct bit_not<void>
 959:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
 960:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       template <typename _Tp>
 961:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 962:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	auto
 963:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	operator()(_Tp&& __t) const
 964:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	noexcept(noexcept(~std::forward<_Tp>(__t)))
 965:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	-> decltype(~std::forward<_Tp>(__t))
 966:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 	{ return ~std::forward<_Tp>(__t); }
 967:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 968:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typedef __is_transparent is_transparent;
 969:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
 970:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** #endif
 971:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
 972:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.5 negators
 973:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup negators Negators
 974:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup functors
 975:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 976:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The functions @c not1 and @c not2 each take a predicate functor
 977:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  and return an instance of @c unary_negate or
 978:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @c binary_negate, respectively.  These classes are functors whose
 979:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @c operator() performs the stored predicate function and then returns
 980:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  the negation of the result.
 981:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 982:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  For example, given a vector of integers and a trivial predicate,
 983:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \code
 984:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  struct IntGreaterThanThree
 985:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *    : public std::unary_function<int, bool>
 986:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  {
 987:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *      bool operator() (int x) { return x > 3; }
 988:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  };
 989:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 990:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  std::find_if (v.begin(), v.end(), not1(IntGreaterThanThree()));
 991:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  \endcode
 992:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The call to @c find_if will locate the first index (i) of @c v for which
 993:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  <code>!(v[i] > 3)</code> is true.
 994:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 995:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The not1/unary_negate combination works on predicates taking a single
 996:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  argument.  The not2/binary_negate combination works on predicates which
 997:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  take two arguments.
 998:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
 999:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
1000:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
1001:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
ARM GAS  /tmp/ccfXobHU.s 			page 445


1002:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Predicate>
1003:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     class unary_negate
1004:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     : public unary_function<typename _Predicate::argument_type, bool>
1005:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1006:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     protected:
1007:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Predicate _M_pred;
1008:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1009:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     public:
1010:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
1011:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       explicit
1012:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       unary_negate(const _Predicate& __x) : _M_pred(__x) { }
1013:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1014:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
1015:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
1016:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const typename _Predicate::argument_type& __x) const
1017:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return !_M_pred(__x); }
1018:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
1019:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1020:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
1021:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Predicate>
1022:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
1023:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     inline unary_negate<_Predicate>
1024:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     not1(const _Predicate& __pred)
1025:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     { return unary_negate<_Predicate>(__pred); }
1026:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1027:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
1028:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Predicate>
1029:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     class binary_negate
1030:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     : public binary_function<typename _Predicate::first_argument_type,
1031:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 			     typename _Predicate::second_argument_type, bool>
1032:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1033:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     protected:
1034:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Predicate _M_pred;
1035:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1036:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     public:
1037:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
1038:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       explicit
1039:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       binary_negate(const _Predicate& __x) : _M_pred(__x) { }
1040:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1041:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _GLIBCXX14_CONSTEXPR
1042:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       bool
1043:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const typename _Predicate::first_argument_type& __x,
1044:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 		 const typename _Predicate::second_argument_type& __y) const
1045:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return !_M_pred(__x, __y); }
1046:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
1047:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1048:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link negators negation functors@endlink.
1049:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Predicate>
1050:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     _GLIBCXX14_CONSTEXPR
1051:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     inline binary_negate<_Predicate>
1052:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     not2(const _Predicate& __pred)
1053:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     { return binary_negate<_Predicate>(__pred); }
1054:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
1055:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1056:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // 20.3.7 adaptors pointers functions
1057:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @defgroup pointer_adaptors Adaptors for pointers to functions
1058:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    * @ingroup functors
ARM GAS  /tmp/ccfXobHU.s 			page 446


1059:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
1060:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The advantage of function objects over pointers to functions is that
1061:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  the objects in the standard library declare nested typedefs describing
1062:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  their argument and result types with uniform names (e.g., @c result_type
1063:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  from the base classes @c unary_function and @c binary_function).
1064:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Sometimes those typedefs are required, not just optional.
1065:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
1066:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  Adaptors are provided to turn pointers to unary (single-argument) and
1067:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  binary (double-argument) functions into function objects.  The
1068:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  long-winded functor @c pointer_to_unary_function is constructed with a
1069:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  function pointer @c f, and its @c operator() called with argument @c x
1070:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  returns @c f(x).  The functor @c pointer_to_binary_function does the same
1071:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  thing, but with a double-argument @c f and @c operator().
1072:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
1073:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  The function @c ptr_fun takes a pointer-to-function @c f and constructs
1074:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  an instance of the appropriate functor.
1075:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *
1076:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    *  @{
1077:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****    */
1078:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
1079:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg, typename _Result>
1080:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     class pointer_to_unary_function : public unary_function<_Arg, _Result>
1081:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1082:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     protected:
1083:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg);
1084:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1085:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     public:
1086:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       pointer_to_unary_function() { }
1087:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1088:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       explicit
1089:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       pointer_to_unary_function(_Result (*__x)(_Arg))
1090:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       : _M_ptr(__x) { }
1091:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1092:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Result
1093:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Arg __x) const
1094:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return _M_ptr(__x); }
1095:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
1096:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1097:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
1098:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg, typename _Result>
1099:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     inline pointer_to_unary_function<_Arg, _Result>
1100:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg))
1101:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     { return pointer_to_unary_function<_Arg, _Result>(__x); }
1102:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1103:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
1104:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
1105:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     class pointer_to_binary_function
1106:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     : public binary_function<_Arg1, _Arg2, _Result>
1107:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1108:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     protected:
1109:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Result (*_M_ptr)(_Arg1, _Arg2);
1110:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1111:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     public:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       pointer_to_binary_function() { }
1113:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1114:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       explicit
1115:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))
ARM GAS  /tmp/ccfXobHU.s 			page 447


1116:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       : _M_ptr(__x) { }
1117:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1118:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Result
1119:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Arg1 __x, _Arg2 __y) const
1120:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return _M_ptr(__x, __y); }
1121:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
1122:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1123:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /// One of the @link pointer_adaptors adaptors for function pointers@endlink.
1124:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
1125:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     inline pointer_to_binary_function<_Arg1, _Arg2, _Result>
1126:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     ptr_fun(_Result (*__x)(_Arg1, _Arg2))
1127:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }
1128:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   /** @}  */
1129:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1130:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp>
1131:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct _Identity
1132:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     : public unary_function<_Tp, _Tp>
1133:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1134:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       _Tp&
1135:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Tp& __x) const
1136:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x; }
1137:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1138:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       const _Tp&
1139:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Tp& __x) const
1140:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x; }
1141:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     };
1142:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1143:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   // Partial specialization, avoids confusing errors in e.g. std::set<const T>.
1144:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Tp> struct _Identity<const _Tp> : _Identity<_Tp> { };
1145:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1146:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****   template<typename _Pair>
1147:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     struct _Select1st
1148:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     : public unary_function<_Pair, typename _Pair::first_type>
1149:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****     {
1150:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       typename _Pair::first_type&
1151:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(_Pair& __x) const
1152:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x.first; }
1153:/usr/include/newlib/c++/9.2.1/bits/stl_function.h **** 
1154:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       const typename _Pair::first_type&
1155:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       operator()(const _Pair& __x) const
 3782              		.loc 15 1155 7 view .LVU858
 3783              		.loc 15 1155 7 is_stmt 0 view .LVU859
 3784              	.LBE6295:
 3785              	.LBB6296:
 3786              	.LBI6296:
2187:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 3787              		.loc 13 2187 5 is_stmt 1 view .LVU860
 3788              	.LBB6297:
 3789              	.LBB6298:
 3790              	.LBI6298:
 352:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 3791              		.loc 13 352 7 view .LVU861
 3792              	.LBB6299:
 3793              	.LBI6299:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 3794              		.loc 13 273 7 view .LVU862
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
ARM GAS  /tmp/ccfXobHU.s 			page 448


 3795              		.loc 13 273 7 is_stmt 0 view .LVU863
 3796              	.LBE6299:
 3797              	.LBE6298:
 3798              	.LBB6300:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 3799              		.loc 13 2198 8 view .LVU864
 3800 002c 93B1     		cbz	r3, .L182
 3801 002e D6F81090 		ldr	r9, [r6, #16]
 3802              	.LVL216:
 3803              	.LBB6301:
 3804              	.LBI6301:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 3805              		.loc 15 385 7 is_stmt 1 view .LVU865
 3806              	.LBB6302:
 3807              	.LBI6302:
 3808              		.loc 3 6226 5 view .LVU866
 3809              	.LBB6303:
 3810              	.LBI6303:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3811              		.loc 3 2853 7 view .LVU867
 3812              	.LBB6304:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 3813              		.loc 3 2856 18 is_stmt 0 view .LVU868
 3814 0032 6568     		ldr	r5, [r4, #4]
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 3815              		.loc 3 2855 18 view .LVU869
 3816 0034 D9F81470 		ldr	r7, [r9, #20]
 3817              	.LVL217:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 3818              		.loc 3 2855 18 view .LVU870
 3819 0038 AF42     		cmp	r7, r5
 3820 003a 3A46     		mov	r2, r7
 3821 003c 28BF     		it	cs
 3822 003e 2A46     		movcs	r2, r5
 3823              	.LVL218:
 3824              	.LBB6305:
 3825              	.LBI6305:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 3826              		.loc 3 2312 7 is_stmt 1 view .LVU871
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 3827              		.loc 3 2312 7 is_stmt 0 view .LVU872
 3828              	.LBE6305:
 3829              	.LBB6306:
 3830              	.LBI6306:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 3831              		.loc 7 315 7 is_stmt 1 view .LVU873
 3832              	.LBB6307:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 3833              		.loc 7 317 2 view .LVU874
 3834 0040 2AB1     		cbz	r2, .L183
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3835              		.loc 7 325 2 view .LVU875
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3836              		.loc 7 325 25 is_stmt 0 view .LVU876
 3837 0042 2168     		ldr	r1, [r4]
 3838 0044 D9F81000 		ldr	r0, [r9, #16]
 3839 0048 FFF7FEFF 		bl	memcmp
ARM GAS  /tmp/ccfXobHU.s 			page 449


 3840              	.LVL219:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 3841              		.loc 7 325 25 view .LVU877
 3842              	.LBE6307:
 3843              	.LBE6306:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 3844              		.loc 3 2860 2 view .LVU878
 3845 004c 00B9     		cbnz	r0, .L184
 3846              	.LVL220:
 3847              	.L183:
 3848              	.LBB6308:
 3849              	.LBI6308:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 3850              		.loc 3 401 7 is_stmt 1 view .LVU879
 3851              	.LBB6309:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3852              		.loc 3 403 51 is_stmt 0 view .LVU880
 3853 004e 781B     		subs	r0, r7, r5
 3854              	.LVL221:
 3855              	.L184:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3856              		.loc 3 403 51 view .LVU881
 3857              	.LBE6309:
 3858              	.LBE6308:
 3859              	.LBE6304:
 3860              	.LBE6303:
 3861              	.LBE6302:
 3862              	.LBE6301:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 3863              		.loc 13 2198 8 view .LVU882
 3864 0050 0028     		cmp	r0, #0
 3865 0052 47DB     		blt	.L204
 3866              	.LVL222:
 3867              	.L182:
2201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 3868              		.loc 13 2201 41 view .LVU883
 3869 0054 2246     		mov	r2, r4
 3870 0056 3146     		mov	r1, r6
 3871 0058 02A8     		add	r0, sp, #8
 3872 005a FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1st
 3873              	.LVL223:
 3874 005e DDE90259 		ldrd	r5, r9, [sp, #8]
 3875              	.LVL224:
2201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 3876              		.loc 13 2201 41 view .LVU884
 3877              	.LBE6300:
 3878              	.LBE6297:
 3879              	.LBE6296:
2249:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __position,
2250:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #if __cplusplus >= 201103L
2251:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			_Arg&& __v,
2252:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #else
2253:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			const _Val& __v,
2254:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
2255:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			_NodeGen& __node_gen)
2256:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
2257:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       pair<_Base_ptr, _Base_ptr> __res
ARM GAS  /tmp/ccfXobHU.s 			page 450


2258:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
2259:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
2260:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       if (__res.second)
 3880              		.loc 13 2260 7 view .LVU885
 3881 0062 B9F1000F 		cmp	r9, #0
 3882 0066 23D0     		beq	.L186
 3883 0068 003D     		subs	r5, r5, #0
 3884              	.LVL225:
 3885              		.loc 13 2260 7 view .LVU886
 3886 006a 18BF     		it	ne
 3887 006c 0125     		movne	r5, #1
 3888              	.LVL226:
 3889              	.L185:
 3890              	.LBB6314:
 3891              	.LBI6314:
1797:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 3892              		.loc 13 1797 7 is_stmt 1 view .LVU887
1797:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 3893              		.loc 13 1797 7 is_stmt 0 view .LVU888
 3894 006e CB45     		cmp	fp, r9
 3895 0070 08BF     		it	eq
 3896 0072 45F00105 		orreq	r5, r5, #1
 3897              	.LBB6315:
1806:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 3898              		.loc 13 1806 33 view .LVU889
 3899 0076 25B3     		cbz	r5, .L205
 3900              	.L187:
 3901              	.LVL227:
 3902              	.LBB6316:
 3903              	.LBI6316:
 546:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 3904              		.loc 13 546 4 is_stmt 1 view .LVU890
 3905              	.LBB6317:
 3906              	.LBI6317:
 628:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3907              		.loc 13 628 2 view .LVU891
 3908              	.LBB6318:
 3909              	.LBB6319:
 3910              	.LBI6319:
 579:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 3911              		.loc 13 579 7 view .LVU892
 3912              	.LBB6320:
 3913              	.LBI6320:
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 3914              		.loc 4 443 7 view .LVU893
 3915              	.LBB6321:
 3916              	.LBI6321:
 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 3917              		.loc 5 102 7 view .LVU894
 3918              	.LBB6322:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 3919              		.loc 5 114 41 is_stmt 0 view .LVU895
 3920 0078 2C20     		movs	r0, #44
 3921 007a FFF7FEFF 		bl	_Znwj
 3922              	.LVL228:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 3923              		.loc 5 114 41 view .LVU896
ARM GAS  /tmp/ccfXobHU.s 			page 451


 3924              	.LBE6322:
 3925              	.LBE6321:
 3926              	.LBE6320:
 3927              	.LBE6319:
 3928              	.LBB6326:
 3929              	.LBB6327:
 3930              	.LBB6328:
 3931              	.LBB6329:
 3932              	.LBB6330:
 3933              	.LBB6331:
 3934              	.LBB6332:
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 3935              		.loc 3 451 9 view .LVU897
 3936 007e 2168     		ldr	r1, [r4]
 3937 0080 6268     		ldr	r2, [r4, #4]
 3938              	.LBE6332:
 3939              	.LBE6331:
 3940              	.LBE6330:
 3941              	.LBE6329:
 3942              	.LBE6328:
 3943              	.LBE6327:
 3944              	.LBE6326:
 3945              	.LBB6373:
 3946              	.LBB6325:
 3947              	.LBB6324:
 3948              	.LBB6323:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 3949              		.loc 5 114 41 view .LVU898
 3950 0082 8046     		mov	r8, r0
 3951              	.LVL229:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 3952              		.loc 5 114 41 view .LVU899
 3953              	.LBE6323:
 3954              	.LBE6324:
 3955              	.LBE6325:
 3956              	.LBE6373:
 3957              	.LBB6374:
 3958              	.LBI6326:
 609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3959              		.loc 13 609 2 is_stmt 1 view .LVU900
 609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 3960              		.loc 13 609 2 is_stmt 0 view .LVU901
 3961              	.LBE6374:
 3962              	.LBE6318:
 3963              	.LBE6317:
 3964              	.LBE6316:
 3965              	.LBE6315:
 3966              	.LBE6314:
 3967              	.LBE6294:
 3968              	.LBE6293:
 3969              	.LBE6410:
 3970              	.LBE6415:
 3971              	.LBE6420:
 3972              		.loc 21 174 3 is_stmt 1 view .LVU902
 3973              	.LBB6421:
 3974              	.LBB6416:
 3975              	.LBB6411:
ARM GAS  /tmp/ccfXobHU.s 			page 452


 3976              	.LBB6407:
 3977              	.LBB6404:
 3978              	.LBB6400:
 3979              	.LBB6397:
 3980              	.LBB6384:
 3981              	.LBB6381:
 3982              	.LBB6378:
 3983              	.LBB6375:
 3984              	.LBB6370:
 3985              	.LBI6327:
 482:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 3986              		.loc 4 482 2 view .LVU903
 3987              	.LBB6367:
 3988              	.LBI6328:
 144:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3989              		.loc 5 144 2 view .LVU904
 144:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 3990              		.loc 5 144 2 is_stmt 0 view .LVU905
 3991              	.LBE6367:
 3992              	.LBE6370:
 3993              	.LBE6375:
 3994              	.LBE6378:
 3995              	.LBE6381:
 3996              	.LBE6384:
 3997              	.LBE6397:
 3998              	.LBE6400:
 3999              	.LBE6404:
 4000              	.LBE6407:
 4001              	.LBE6411:
 4002              	.LBE6416:
 4003              	.LBE6421:
 4004              		.loc 21 174 3 is_stmt 1 view .LVU906
 4005              	.LBB6422:
 4006              	.LBB6417:
 4007              	.LBB6412:
 4008              	.LBB6408:
 4009              	.LBB6405:
 4010              	.LBB6401:
 4011              	.LBB6398:
 4012              	.LBB6385:
 4013              	.LBB6382:
 4014              	.LBB6379:
 4015              	.LBB6376:
 4016              	.LBB6371:
 4017              	.LBB6368:
 4018              	.LBB6365:
 4019              	.LBI6329:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 4020              		.loc 20 303 17 view .LVU907
 4021              	.LBB6363:
 4022              	.LBB6362:
 4023              	.LBI6331:
 448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 4024              		.loc 3 448 7 view .LVU908
 4025              	.LBB6361:
 4026              	.LBB6333:
 4027              	.LBI6333:
ARM GAS  /tmp/ccfXobHU.s 			page 453


 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4028              		.loc 3 190 7 view .LVU909
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4029              		.loc 3 190 7 is_stmt 0 view .LVU910
 4030              	.LBE6333:
 4031              	.LBB6335:
 4032              	.LBI6335:
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 4033              		.loc 3 290 7 is_stmt 1 view .LVU911
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 4034              		.loc 3 290 7 is_stmt 0 view .LVU912
 4035              	.LBE6335:
 4036              	.LBB6336:
 4037              	.LBI6336:
 4038              		.loc 16 97 19 is_stmt 1 view .LVU913
 4039              	.LBB6337:
 4040              	.LBI6337:
 4041              		.loc 4 514 7 view .LVU914
 4042              	.LBB6338:
 4043              	.LBI6338:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4044              		.loc 6 141 7 view .LVU915
 4045              	.LBB6339:
 4046              	.LBI6339:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4047              		.loc 5 83 7 view .LVU916
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4048              		.loc 5 83 7 is_stmt 0 view .LVU917
 4049              	.LBE6339:
 4050              	.LBE6338:
 4051              	.LBE6337:
 4052              	.LBE6336:
 4053              	.LBB6340:
 4054              	.LBI6340:
 159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4055              		.loc 3 159 2 is_stmt 1 view .LVU918
 4056              	.LBB6341:
 4057              	.LBB6342:
 4058              	.LBI6342:
 4059              		.loc 22 99 5 view .LVU919
 4060              		.loc 22 99 5 is_stmt 0 view .LVU920
 4061              	.LBE6342:
 4062              	.LBB6343:
 4063              	.LBI6343:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4064              		.loc 6 141 7 is_stmt 1 view .LVU921
 4065              	.LBB6344:
 4066              	.LBI6344:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4067              		.loc 5 83 7 view .LVU922
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4068              		.loc 5 83 7 is_stmt 0 view .LVU923
 4069              	.LBE6344:
 4070              	.LBE6343:
 4071              	.LBE6341:
 4072              	.LBE6340:
 4073              	.LBB6346:
ARM GAS  /tmp/ccfXobHU.s 			page 454


 4074              	.LBB6334:
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 4075              		.loc 3 193 51 view .LVU924
 4076 0084 00F11807 		add	r7, r0, #24
 4077              	.LVL230:
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 4078              		.loc 3 193 51 view .LVU925
 4079              	.LBE6334:
 4080              	.LBE6346:
 4081              	.LBB6347:
 4082              	.LBB6348:
 4083              	.LBB6349:
 4084              	.LBB6350:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 4085              		.loc 3 247 11 view .LVU926
 4086 0088 4FF00003 		mov	r3, #0
 4087 008c 0A44     		add	r2, r2, r1
 4088 008e 1030     		adds	r0, r0, #16
 4089              	.LVL231:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 4090              		.loc 3 247 11 view .LVU927
 4091              	.LBE6350:
 4092              	.LBE6349:
 4093              	.LBE6348:
 4094              	.LBE6347:
 4095              	.LBB6354:
 4096              	.LBB6345:
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 4097              		.loc 3 160 46 view .LVU928
 4098 0090 C8F81070 		str	r7, [r8, #16]
 4099              	.LVL232:
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 4100              		.loc 3 160 46 view .LVU929
 4101              	.LBE6345:
 4102              	.LBE6354:
 4103              	.LBB6355:
 4104              	.LBI6355:
 4105              		.loc 6 153 7 is_stmt 1 view .LVU930
 4106              	.LBB6356:
 4107              	.LBI6356:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4108              		.loc 5 89 7 view .LVU931
 4109              	.LBE6356:
 4110              	.LBE6355:
 4111              	.LBB6357:
 4112              	.LBI6357:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4113              		.loc 3 186 7 view .LVU932
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4114              		.loc 3 186 7 is_stmt 0 view .LVU933
 4115              	.LBE6357:
 4116              	.LBB6358:
 4117              	.LBI6358:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4118              		.loc 3 186 7 is_stmt 1 view .LVU934
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4119              		.loc 3 186 7 is_stmt 0 view .LVU935
ARM GAS  /tmp/ccfXobHU.s 			page 455


 4120              	.LBE6358:
 4121              	.LBB6359:
 4122              	.LBI6359:
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 4123              		.loc 3 936 7 is_stmt 1 view .LVU936
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 4124              		.loc 3 936 7 is_stmt 0 view .LVU937
 4125              	.LBE6359:
 4126              	.LBB6360:
 4127              	.LBI6347:
 263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 4128              		.loc 3 263 9 is_stmt 1 view .LVU938
 4129              	.LBB6353:
 4130              	.LBB6352:
 4131              	.LBI6349:
 243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 std::__false_type)
 4132              		.loc 3 243 9 view .LVU939
 4133              	.LBB6351:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 4134              		.loc 3 247 11 is_stmt 0 view .LVU940
 4135 0094 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 4136              	.LVL233:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 4137              		.loc 3 247 11 view .LVU941
 4138              	.LBE6351:
 4139              	.LBE6352:
 4140              	.LBE6353:
 4141              	.LBE6360:
 4142              	.LBE6361:
 4143              	.LBE6362:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 4144              		.loc 20 303 17 view .LVU942
 4145 0098 A769     		ldr	r7, [r4, #24]
 4146              	.LBE6363:
 4147              	.LBE6365:
 4148              	.LBE6368:
 4149              	.LBE6371:
 4150              	.LBE6376:
 4151              	.LBE6379:
 4152              	.LBE6382:
 4153              	.LBE6385:
1812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      this->_M_impl._M_header);
 4154              		.loc 13 1812 31 view .LVU943
 4155 009a 5B46     		mov	r3, fp
 4156 009c 4A46     		mov	r2, r9
 4157 009e 2846     		mov	r0, r5
 4158 00a0 4146     		mov	r1, r8
 4159              	.LBB6386:
 4160              	.LBB6383:
 4161              	.LBB6380:
 4162              	.LBB6377:
 4163              	.LBB6372:
 4164              	.LBB6369:
 4165              	.LBB6366:
 4166              	.LBB6364:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 4167              		.loc 20 303 17 view .LVU944
ARM GAS  /tmp/ccfXobHU.s 			page 456


 4168 00a2 C8F82870 		str	r7, [r8, #40]
 4169              	.LVL234:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 4170              		.loc 20 303 17 view .LVU945
 4171              	.LBE6364:
 4172              	.LBE6366:
 4173              	.LBE6369:
 4174              	.LBE6372:
 4175              	.LBE6377:
 4176              	.LBE6380:
 4177              	.LBE6383:
 4178              	.LBE6386:
1812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      this->_M_impl._M_header);
 4179              		.loc 13 1812 31 view .LVU946
 4180 00a6 FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
 4181              	.LVL235:
1814:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return iterator(__z);
 4182              		.loc 13 1814 2 view .LVU947
 4183 00aa 7369     		ldr	r3, [r6, #20]
 4184 00ac 0133     		adds	r3, r3, #1
 4185 00ae 7361     		str	r3, [r6, #20]
 4186              	.LVL236:
 4187              	.LBB6387:
 4188              	.LBI6387:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4189              		.loc 13 273 7 is_stmt 1 view .LVU948
 4190              	.L186:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4191              		.loc 13 273 7 is_stmt 0 view .LVU949
 4192              	.LBE6387:
 4193              	.LBE6398:
 4194              	.LBE6401:
 4195              	.LBE6405:
 4196              	.LBE6408:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 4197              		.loc 13 1112 4 is_stmt 1 view .LVU950
 4198 00b0 1C34     		adds	r4, r4, #28
 4199              	.LVL237:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 4200              		.loc 13 1112 19 view .LVU951
 4201 00b2 5445     		cmp	r4, r10
 4202 00b4 01D0     		beq	.L181
 4203 00b6 7369     		ldr	r3, [r6, #20]
 4204 00b8 B8E7     		b	.L190
 4205              	.LVL238:
 4206              	.L181:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 4207              		.loc 13 1112 19 is_stmt 0 view .LVU952
 4208              	.LBE6412:
 4209              	.LBE6417:
 4210              	.LBE6422:
 230:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 4211              		.loc 14 230 62 view .LVU953
 4212 00ba 3046     		mov	r0, r6
 4213 00bc 05B0     		add	sp, sp, #20
 4214              		.cfi_remember_state
 4215              		.cfi_def_cfa_offset 36
ARM GAS  /tmp/ccfXobHU.s 			page 457


 4216              	.LVL239:
 230:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 4217              		.loc 14 230 62 view .LVU954
 4218              		@ sp needed
 4219 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4220              	.LVL240:
 4221              	.L205:
 4222              		.cfi_restore_state
 4223              	.LBB6423:
 4224              	.LBB6418:
 4225              	.LBB6413:
 4226              	.LBB6409:
 4227              	.LBB6406:
 4228              	.LBB6402:
 4229              	.LBB6399:
 4230              	.LBB6388:
 4231              	.LBI6388:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 4232              		.loc 15 385 7 is_stmt 1 view .LVU955
 4233              	.LBB6389:
 4234              	.LBI6389:
 4235              		.loc 3 6226 5 view .LVU956
 4236              	.LBB6390:
 4237              	.LBI6390:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4238              		.loc 3 2853 7 view .LVU957
 4239              	.LBB6391:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 4240              		.loc 3 2855 18 is_stmt 0 view .LVU958
 4241 00c2 6768     		ldr	r7, [r4, #4]
 4242              	.LVL241:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 4243              		.loc 3 2856 18 view .LVU959
 4244 00c4 D9F81450 		ldr	r5, [r9, #20]
 4245              	.LVL242:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 4246              		.loc 3 2856 18 view .LVU960
 4247 00c8 3A46     		mov	r2, r7
 4248 00ca AF42     		cmp	r7, r5
 4249 00cc 28BF     		it	cs
 4250 00ce 2A46     		movcs	r2, r5
 4251              	.LVL243:
 4252              	.LBB6392:
 4253              	.LBI6392:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4254              		.loc 3 2312 7 is_stmt 1 view .LVU961
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4255              		.loc 3 2312 7 is_stmt 0 view .LVU962
 4256              	.LBE6392:
 4257              	.LBB6393:
 4258              	.LBI6393:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 4259              		.loc 7 315 7 is_stmt 1 view .LVU963
 4260              	.LBB6394:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 4261              		.loc 7 317 2 view .LVU964
 4262 00d0 2AB1     		cbz	r2, .L188
ARM GAS  /tmp/ccfXobHU.s 			page 458


 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4263              		.loc 7 325 2 view .LVU965
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4264              		.loc 7 325 25 is_stmt 0 view .LVU966
 4265 00d2 D9F81010 		ldr	r1, [r9, #16]
 4266 00d6 2068     		ldr	r0, [r4]
 4267 00d8 FFF7FEFF 		bl	memcmp
 4268              	.LVL244:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4269              		.loc 7 325 25 view .LVU967
 4270              	.LBE6394:
 4271              	.LBE6393:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 4272              		.loc 3 2860 2 view .LVU968
 4273 00dc 00B9     		cbnz	r0, .L189
 4274              	.LVL245:
 4275              	.L188:
 4276              	.LBB6395:
 4277              	.LBI6395:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4278              		.loc 3 401 7 is_stmt 1 view .LVU969
 4279              	.LBB6396:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4280              		.loc 3 403 51 is_stmt 0 view .LVU970
 4281 00de 781B     		subs	r0, r7, r5
 4282              	.LVL246:
 4283              	.L189:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4284              		.loc 3 403 51 view .LVU971
 4285              	.LBE6396:
 4286              	.LBE6395:
 4287              	.LBE6391:
 4288              	.LBE6390:
 4289              	.LBE6389:
 4290              	.LBE6388:
1807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 							_S_key(__p)));
 4291              		.loc 13 1807 10 view .LVU972
 4292 00e0 C50F     		lsrs	r5, r0, #31
 4293 00e2 C9E7     		b	.L187
 4294              	.LVL247:
 4295              	.L204:
1807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 							_S_key(__p)));
 4296              		.loc 13 1807 10 view .LVU973
 4297              	.LBE6399:
 4298              	.LBE6402:
 4299              	.LBB6403:
 4300              	.LBB6313:
 4301              	.LBB6312:
 4302              	.LBB6310:
 4303              	.LBI6310:
 325:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 4304              		.loc 20 325 18 is_stmt 1 view .LVU974
 4305              	.LBB6311:
 4306              	.LBI6311:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4307              		.loc 22 74 5 view .LVU975
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
ARM GAS  /tmp/ccfXobHU.s 			page 459


 4308              		.loc 22 74 5 is_stmt 0 view .LVU976
 4309              	.LBE6311:
 4310              	.LBE6310:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 4311              		.loc 13 2198 8 view .LVU977
 4312 00e4 0025     		movs	r5, #0
 4313 00e6 C2E7     		b	.L185
 4314              	.LBE6312:
 4315              	.LBE6313:
 4316              	.LBE6403:
 4317              	.LBE6406:
 4318              	.LBE6409:
 4319              	.LBE6413:
 4320              	.LBE6418:
 4321              	.LBE6423:
 4322              		.cfi_endproc
 4323              	.LFE3165:
 4325              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iE
 4326              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIK
 4327              		.section	.text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6v
 4328              		.align	1
 4329              		.p2align 2,,3
 4330              		.weak	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSa
 4331              		.syntax unified
 4332              		.thumb
 4333              		.thumb_func
 4334              		.fpu fpv5-d16
 4336              	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt
 4337              	.LVL248:
 4338              	.LFB3763:
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 4339              		.loc 13 2085 5 is_stmt 1 view -0
 4340              		.cfi_startproc
 4341              		@ args = 0, pretend = 0, frame = 8
 4342              		@ frame_needed = 0, uses_anonymous_args = 0
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 4343              		.loc 13 2085 5 is_stmt 0 view .LVU979
 4344 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4345              		.cfi_def_cfa_offset 36
 4346              		.cfi_offset 4, -36
 4347              		.cfi_offset 5, -32
 4348              		.cfi_offset 6, -28
 4349              		.cfi_offset 7, -24
 4350              		.cfi_offset 8, -20
 4351              		.cfi_offset 9, -16
 4352              		.cfi_offset 10, -12
 4353              		.cfi_offset 11, -8
 4354              		.cfi_offset 14, -4
2089:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _Base_ptr __y = _M_end();
 4355              		.loc 13 2089 18 view .LVU980
 4356 0004 8C68     		ldr	r4, [r1, #8]
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 4357              		.loc 13 2085 5 view .LVU981
 4358 0006 83B0     		sub	sp, sp, #12
 4359              		.cfi_def_cfa_offset 48
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 4360              		.loc 13 2085 5 view .LVU982
ARM GAS  /tmp/ccfXobHU.s 			page 460


 4361 0008 8B46     		mov	fp, r1
 4362 000a 8146     		mov	r9, r0
 4363              	.LVL249:
 4364              	.LBB6478:
 4365              	.LBI6478:
 755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 4366              		.loc 13 755 7 is_stmt 1 view .LVU983
 755:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return &this->_M_impl._M_header; }
 4367              		.loc 13 755 7 is_stmt 0 view .LVU984
 4368              	.LBE6478:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4369              		.loc 13 2092 18 is_stmt 1 view .LVU985
2085:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_unique_pos(const key_type& __k)
 4370              		.loc 13 2085 5 is_stmt 0 view .LVU986
 4371 000c 0192     		str	r2, [sp, #4]
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4372              		.loc 13 2092 18 view .LVU987
 4373 000e B4B3     		cbz	r4, .L229
 4374              	.LBB6480:
 4375              	.LBB6481:
 4376              	.LBB6482:
 4377              	.LBB6483:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 4378              		.loc 3 2855 18 view .LVU988
 4379 0010 019B     		ldr	r3, [sp, #4]
 4380 0012 D3F80480 		ldr	r8, [r3, #4]
2859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
 4381              		.loc 3 2859 32 view .LVU989
 4382 0016 D3F800A0 		ldr	r10, [r3]
 4383              	.LVL250:
 4384              	.L209:
2859:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	if (!__r)
 4385              		.loc 3 2859 32 view .LVU990
 4386              	.LBE6483:
 4387              	.LBE6482:
 4388              	.LBE6481:
 4389              	.LBI6480:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 4390              		.loc 15 385 7 is_stmt 1 view .LVU991
 4391              	.LBB6497:
 4392              	.LBI6481:
 4393              		.loc 3 6226 5 view .LVU992
 4394              	.LBB6496:
 4395              	.LBI6482:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4396              		.loc 3 2853 7 view .LVU993
 4397              	.LBB6495:
 4398              	.LBB6484:
 4399              	.LBB6485:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4400              		.loc 7 325 2 view .LVU994
 4401              	.LBE6485:
 4402              	.LBE6484:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 4403              		.loc 3 2856 18 is_stmt 0 view .LVU995
 4404 001a 6669     		ldr	r6, [r4, #20]
 4405              	.LVL251:
ARM GAS  /tmp/ccfXobHU.s 			page 461


2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 4406              		.loc 3 2856 18 view .LVU996
 4407 001c 4546     		mov	r5, r8
 4408              	.LBB6488:
 4409              	.LBB6489:
2313:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4410              		.loc 3 2313 24 view .LVU997
 4411 001e 2769     		ldr	r7, [r4, #16]
 4412              	.LBE6489:
 4413              	.LBE6488:
 4414              	.LBB6490:
 4415              	.LBB6486:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4416              		.loc 7 325 25 view .LVU998
 4417 0020 5046     		mov	r0, r10
 4418 0022 B045     		cmp	r8, r6
 4419 0024 3946     		mov	r1, r7
 4420 0026 28BF     		it	cs
 4421 0028 3546     		movcs	r5, r6
 4422              	.LVL252:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4423              		.loc 7 325 25 view .LVU999
 4424              	.LBE6486:
 4425              	.LBE6490:
 4426              	.LBB6491:
 4427              	.LBI6488:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4428              		.loc 3 2312 7 is_stmt 1 view .LVU1000
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4429              		.loc 3 2312 7 is_stmt 0 view .LVU1001
 4430              	.LBE6491:
 4431              	.LBB6492:
 4432              	.LBI6484:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 4433              		.loc 7 315 7 is_stmt 1 view .LVU1002
 4434              	.LBB6487:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 4435              		.loc 7 317 2 view .LVU1003
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4436              		.loc 7 325 25 is_stmt 0 view .LVU1004
 4437 002a 2A46     		mov	r2, r5
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 4438              		.loc 7 317 2 view .LVU1005
 4439 002c 15B1     		cbz	r5, .L211
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4440              		.loc 7 325 25 view .LVU1006
 4441 002e FFF7FEFF 		bl	memcmp
 4442              	.LVL253:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4443              		.loc 7 325 25 view .LVU1007
 4444              	.LBE6487:
 4445              	.LBE6492:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 4446              		.loc 3 2860 2 view .LVU1008
 4447 0032 08B9     		cbnz	r0, .L212
 4448              	.LVL254:
 4449              	.L211:
ARM GAS  /tmp/ccfXobHU.s 			page 462


 4450              	.LBB6493:
 4451              	.LBI6493:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4452              		.loc 3 401 7 is_stmt 1 view .LVU1009
 4453              	.LBB6494:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4454              		.loc 3 403 51 is_stmt 0 view .LVU1010
 4455 0034 A8EB0600 		sub	r0, r8, r6
 4456              	.LVL255:
 4457              	.L212:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4458              		.loc 3 403 51 view .LVU1011
 4459              	.LBE6494:
 4460              	.LBE6493:
 4461              	.LBE6495:
 4462              	.LBE6496:
 4463              	.LBE6497:
 4464              	.LBE6480:
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 4465              		.loc 13 2096 42 view .LVU1012
 4466 0038 0021     		movs	r1, #0
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 4467              		.loc 13 2096 17 view .LVU1013
 4468 003a 8842     		cmp	r0, r1
 4469 003c 03DB     		blt	.L230
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 4470              		.loc 13 2096 42 discriminator 2 view .LVU1014
 4471 003e E268     		ldr	r2, [r4, #12]
 4472              	.LVL256:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4473              		.loc 13 2092 18 is_stmt 1 discriminator 2 view .LVU1015
 4474 0040 2AB1     		cbz	r2, .L210
 4475              	.LVL257:
 4476              	.L231:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4477              		.loc 13 2092 18 is_stmt 0 discriminator 2 view .LVU1016
 4478 0042 1446     		mov	r4, r2
 4479              	.LVL258:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4480              		.loc 13 2092 18 discriminator 2 view .LVU1017
 4481 0044 E9E7     		b	.L209
 4482              	.LVL259:
 4483              	.L230:
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 4484              		.loc 13 2096 26 discriminator 1 view .LVU1018
 4485 0046 A268     		ldr	r2, [r4, #8]
 4486              	.LVL260:
2096:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 4487              		.loc 13 2096 26 discriminator 1 view .LVU1019
 4488 0048 0121     		movs	r1, #1
 4489              	.LVL261:
2092:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4490              		.loc 13 2092 18 is_stmt 1 discriminator 1 view .LVU1020
 4491 004a 002A     		cmp	r2, #0
 4492 004c F9D1     		bne	.L231
 4493              	.LVL262:
 4494              	.L210:
ARM GAS  /tmp/ccfXobHU.s 			page 463


 4495              	.LBB6498:
 4496              	.LBI6498:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4497              		.loc 13 273 7 view .LVU1021
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4498              		.loc 13 273 7 is_stmt 0 view .LVU1022
 4499              	.LBE6498:
2099:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4500              		.loc 13 2099 7 view .LVU1023
 4501 004e B9B9     		cbnz	r1, .L208
 4502 0050 A346     		mov	fp, r4
 4503              	.LVL263:
 4504              	.L215:
 4505              	.LBB6499:
 4506              	.LBI6499:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 4507              		.loc 15 385 7 is_stmt 1 view .LVU1024
 4508              	.LBB6500:
 4509              	.LBI6500:
 4510              		.loc 3 6226 5 view .LVU1025
 4511              	.LBB6501:
 4512              	.LBI6501:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4513              		.loc 3 2853 7 view .LVU1026
 4514              	.LBB6502:
 4515              	.LBB6503:
 4516              	.LBI6503:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 4517              		.loc 7 315 7 view .LVU1027
 4518              	.LBB6504:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 4519              		.loc 7 317 2 view .LVU1028
 4520 0052 8DB1     		cbz	r5, .L218
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4521              		.loc 7 325 2 view .LVU1029
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4522              		.loc 7 325 25 is_stmt 0 view .LVU1030
 4523 0054 2A46     		mov	r2, r5
 4524 0056 5146     		mov	r1, r10
 4525 0058 3846     		mov	r0, r7
 4526 005a FFF7FEFF 		bl	memcmp
 4527              	.LVL264:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 4528              		.loc 7 325 25 view .LVU1031
 4529              	.LBE6504:
 4530              	.LBE6503:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 4531              		.loc 3 2860 2 view .LVU1032
 4532 005e 58B1     		cbz	r0, .L218
 4533              	.L219:
 4534              	.LVL265:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 4535              		.loc 3 2860 2 view .LVU1033
 4536              	.LBE6502:
 4537              	.LBE6501:
 4538              	.LBE6500:
 4539              	.LBE6499:
ARM GAS  /tmp/ccfXobHU.s 			page 464


2106:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return _Res(__x, __y);
 4540              		.loc 13 2106 7 view .LVU1034
 4541 0060 0028     		cmp	r0, #0
 4542              	.LVL266:
 4543              	.LBB6510:
 4544              	.LBI6510:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 4545              		.loc 20 341 12 is_stmt 1 view .LVU1035
 4546              	.LBB6511:
 4547              	.LBB6512:
 4548              	.LBB6513:
 4549              	.LBI6513:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4550              		.loc 22 74 5 view .LVU1036
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4551              		.loc 22 74 5 is_stmt 0 view .LVU1037
 4552              	.LBE6513:
 4553              		.loc 20 342 64 view .LVU1038
 4554 0062 4FF00003 		mov	r3, #0
 4555              	.LBE6512:
 4556              	.LBE6511:
 4557              	.LBE6510:
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4558              		.loc 13 2109 5 view .LVU1039
 4559 0066 4846     		mov	r0, r9
 4560              	.LBB6517:
 4561              	.LBB6516:
 4562              	.LBB6515:
 4563              		.loc 20 342 64 view .LVU1040
 4564 0068 B4BF     		ite	lt
 4565 006a C9E9003B 		strdlt	r3, fp, [r9]
 4566              	.LVL267:
 4567              	.LBB6514:
 4568              	.LBI6514:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4569              		.loc 22 74 5 is_stmt 1 view .LVU1041
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4570              		.loc 22 74 5 is_stmt 0 view .LVU1042
 4571              	.LBE6514:
 4572              	.LBE6515:
 4573              	.LBE6516:
 4574              	.LBE6517:
 4575              	.LBB6518:
 4576              	.LBI6518:
 311:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 4577              		.loc 20 311 18 is_stmt 1 view .LVU1043
 4578              	.LBB6519:
 4579              	.LBB6520:
 4580              	.LBB6521:
 4581              	.LBI6521:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4582              		.loc 22 74 5 view .LVU1044
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4583              		.loc 22 74 5 is_stmt 0 view .LVU1045
 4584              	.LBE6521:
 312:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 4585              		.loc 20 312 51 view .LVU1046
ARM GAS  /tmp/ccfXobHU.s 			page 465


 4586 006e C9E90043 		strdge	r4, r3, [r9]
 4587              	.LVL268:
 312:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 
 4588              		.loc 20 312 51 view .LVU1047
 4589              	.LBE6520:
 4590              	.LBE6519:
 4591              	.LBE6518:
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4592              		.loc 13 2109 5 view .LVU1048
 4593 0072 03B0     		add	sp, sp, #12
 4594              		.cfi_remember_state
 4595              		.cfi_def_cfa_offset 36
 4596              		@ sp needed
 4597 0074 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4598              	.LVL269:
 4599              	.L218:
 4600              		.cfi_restore_state
 4601              	.LBB6522:
 4602              	.LBB6509:
 4603              	.LBB6508:
 4604              	.LBB6507:
 4605              	.LBB6505:
 4606              	.LBI6505:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4607              		.loc 3 401 7 is_stmt 1 view .LVU1049
 4608              	.LBB6506:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4609              		.loc 3 403 51 is_stmt 0 view .LVU1050
 4610 0078 A6EB0800 		sub	r0, r6, r8
 4611              	.LVL270:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4612              		.loc 3 403 51 view .LVU1051
 4613              	.LBE6506:
 4614              	.LBE6505:
 4615 007c F0E7     		b	.L219
 4616              	.LVL271:
 4617              	.L229:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 4618              		.loc 3 403 51 view .LVU1052
 4619              	.LBE6507:
 4620              	.LBE6508:
 4621              	.LBE6509:
 4622              	.LBE6522:
 4623              	.LBB6523:
 4624              	.LBB6479:
 756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4625              		.loc 13 756 31 view .LVU1053
 4626 007e 0C1D     		adds	r4, r1, #4
 4627              	.LVL272:
 4628              	.L208:
 756:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4629              		.loc 13 756 31 view .LVU1054
 4630              	.LBE6479:
 4631              	.LBE6523:
 4632              	.LBB6524:
 4633              	.LBI6524:
1006:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(this->_M_impl._M_header._M_left); }
ARM GAS  /tmp/ccfXobHU.s 			page 466


 4634              		.loc 13 1006 7 is_stmt 1 view .LVU1055
 4635              	.LBB6525:
 4636              	.LBI6525:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4637              		.loc 13 273 7 view .LVU1056
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4638              		.loc 13 273 7 is_stmt 0 view .LVU1057
 4639              	.LBE6525:
 4640              	.LBE6524:
2101:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(__x, __y);
 4641              		.loc 13 2101 4 view .LVU1058
 4642 0080 DBF80C30 		ldr	r3, [fp, #12]
 4643 0084 A342     		cmp	r3, r4
 4644 0086 10D0     		beq	.L232
 4645              	.LVL273:
 4646              	.LBB6526:
 4647              	.LBI6526:
 300:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       {
 4648              		.loc 13 300 7 is_stmt 1 view .LVU1059
 4649              	.LBB6527:
 302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 4650              		.loc 13 302 30 is_stmt 0 view .LVU1060
 4651 0088 2046     		mov	r0, r4
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 4652              		.loc 13 303 10 view .LVU1061
 4653 008a A346     		mov	fp, r4
 4654              	.LVL274:
 302:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return *this;
 4655              		.loc 13 302 30 view .LVU1062
 4656 008c FFF7FEFF 		bl	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
 4657              	.LVL275:
 4658 0090 019B     		ldr	r3, [sp, #4]
 4659 0092 4669     		ldr	r6, [r0, #20]
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 4660              		.loc 13 303 10 view .LVU1063
 4661 0094 0446     		mov	r4, r0
 4662              	.LVL276:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 4663              		.loc 13 303 10 view .LVU1064
 4664 0096 D3F80480 		ldr	r8, [r3, #4]
 4665              	.LVL277:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 4666              		.loc 13 303 10 view .LVU1065
 4667 009a D3F800A0 		ldr	r10, [r3]
 4668 009e B045     		cmp	r8, r6
 4669 00a0 4546     		mov	r5, r8
 4670 00a2 0769     		ldr	r7, [r0, #16]
 4671 00a4 28BF     		it	cs
 4672 00a6 3546     		movcs	r5, r6
 4673 00a8 D3E7     		b	.L215
 4674              	.LVL278:
 4675              	.L232:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       }
 4676              		.loc 13 303 10 view .LVU1066
 4677              	.LBE6527:
 4678              	.LBE6526:
 4679              	.LBB6528:
ARM GAS  /tmp/ccfXobHU.s 			page 467


 4680              	.LBI6528:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 4681              		.loc 20 341 12 is_stmt 1 view .LVU1067
 4682              	.LBB6529:
 4683              	.LBB6530:
 4684              	.LBB6531:
 4685              	.LBI6531:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4686              		.loc 22 74 5 view .LVU1068
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4687              		.loc 22 74 5 is_stmt 0 view .LVU1069
 4688              	.LBE6531:
 4689              		.loc 20 342 64 view .LVU1070
 4690 00aa 0023     		movs	r3, #0
 4691              	.LBE6530:
 4692              	.LBE6529:
 4693              	.LBE6528:
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4694              		.loc 13 2109 5 view .LVU1071
 4695 00ac 4846     		mov	r0, r9
 4696              	.LBB6535:
 4697              	.LBB6534:
 4698              	.LBB6533:
 4699              		.loc 20 342 64 view .LVU1072
 4700 00ae C9E90034 		strd	r3, r4, [r9]
 4701              	.LVL279:
 4702              	.LBB6532:
 4703              	.LBI6532:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4704              		.loc 22 74 5 is_stmt 1 view .LVU1073
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 4705              		.loc 22 74 5 is_stmt 0 view .LVU1074
 4706              	.LBE6532:
 4707              	.LBE6533:
 4708              	.LBE6534:
 4709              	.LBE6535:
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4710              		.loc 13 2109 5 view .LVU1075
 4711 00b2 03B0     		add	sp, sp, #12
 4712              		.cfi_def_cfa_offset 36
 4713              		@ sp needed
 4714 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
2109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 
 4715              		.loc 13 2109 5 view .LVU1076
 4716              		.cfi_endproc
 4717              	.LFE3763:
 4719              		.section	.text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4l
 4720              		.align	1
 4721              		.p2align 2,,3
 4722              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 4723              		.syntax unified
 4724              		.thumb
 4725              		.thumb_func
 4726              		.fpu fpv5-d16
 4728              	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pa
 4729              	.LVL280:
 4730              	.LFB3226:
ARM GAS  /tmp/ccfXobHU.s 			page 468


 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 4731              		.loc 14 226 7 is_stmt 1 view -0
 4732              		.cfi_startproc
 4733              		@ args = 4, pretend = 0, frame = 24
 4734              		@ frame_needed = 0, uses_anonymous_args = 0
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 4735              		.loc 14 226 7 is_stmt 0 view .LVU1078
 4736 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4737              		.cfi_def_cfa_offset 36
 4738              		.cfi_offset 4, -36
 4739              		.cfi_offset 5, -32
 4740              		.cfi_offset 6, -28
 4741              		.cfi_offset 7, -24
 4742              		.cfi_offset 8, -20
 4743              		.cfi_offset 9, -16
 4744              		.cfi_offset 10, -12
 4745              		.cfi_offset 11, -8
 4746              		.cfi_offset 14, -4
 4747 0004 87B0     		sub	sp, sp, #28
 4748              		.cfi_def_cfa_offset 64
 4749              	.LBB6816:
 4750              	.LBB6817:
 4751              	.LBB6818:
 4752              	.LBB6819:
 4753              	.LBB6820:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 4754              		.loc 13 175 26 view .LVU1079
 4755 0006 0023     		movs	r3, #0
 4756              	.LVL281:
 4757              	.LBB6821:
 4758              	.LBB6822:
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 4759              		.loc 13 209 27 view .LVU1080
 4760 0008 00F1040A 		add	r10, r0, #4
 4761              	.LVL282:
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 4762              		.loc 13 209 27 view .LVU1081
 4763              	.LBE6822:
 4764              	.LBE6821:
 4765              	.LBE6820:
 4766              	.LBE6819:
 4767              	.LBE6818:
 4768              	.LBE6817:
 4769              	.LBB6844:
 4770              	.LBI6844:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4771              		.loc 6 141 7 is_stmt 1 view .LVU1082
 4772              	.LBB6845:
 4773              	.LBI6845:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4774              		.loc 5 83 7 view .LVU1083
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4775              		.loc 5 83 7 is_stmt 0 view .LVU1084
 4776              	.LBE6845:
 4777              	.LBE6844:
 4778              	.LBB6846:
 4779              	.LBI6817:
ARM GAS  /tmp/ccfXobHU.s 			page 469


 942:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	       const allocator_type& __a = allocator_type())
 4780              		.loc 13 942 7 is_stmt 1 view .LVU1085
 4781              	.LBB6837:
 4782              	.LBI6837:
 151:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 4783              		.loc 6 151 2 view .LVU1086
 4784              	.LBB6838:
 4785              	.LBI6838:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4786              		.loc 5 80 7 view .LVU1087
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4787              		.loc 5 80 7 is_stmt 0 view .LVU1088
 4788              	.LBE6838:
 4789              	.LBE6837:
 4790              	.LBB6839:
 4791              	.LBI6818:
 710:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 4792              		.loc 13 710 4 is_stmt 1 view .LVU1089
 4793              	.LBB6830:
 4794              	.LBI6830:
 4795              		.loc 22 99 5 view .LVU1090
 4796              		.loc 22 99 5 is_stmt 0 view .LVU1091
 4797              	.LBE6830:
 4798              	.LBB6831:
 4799              	.LBI6831:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4800              		.loc 6 141 7 is_stmt 1 view .LVU1092
 4801              	.LBB6832:
 4802              	.LBI6832:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4803              		.loc 5 83 7 view .LVU1093
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4804              		.loc 5 83 7 is_stmt 0 view .LVU1094
 4805              	.LBE6832:
 4806              	.LBE6831:
 4807              	.LBB6833:
 4808              	.LBI6833:
 152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__comp)
 4809              		.loc 13 152 7 is_stmt 1 view .LVU1095
 152:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_key_compare(__comp)
 4810              		.loc 13 152 7 is_stmt 0 view .LVU1096
 4811              	.LBE6833:
 4812              	.LBB6834:
 4813              	.LBI6819:
 173:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 4814              		.loc 13 173 5 is_stmt 1 view .LVU1097
 4815              	.LBB6827:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 4816              		.loc 13 175 7 view .LVU1098
 4817              	.LBE6827:
 4818              	.LBE6834:
 4819              	.LBE6839:
 4820              	.LBE6846:
 4821              	.LBE6816:
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 4822              		.loc 14 226 7 is_stmt 0 view .LVU1099
 4823 000c 0746     		mov	r7, r0
ARM GAS  /tmp/ccfXobHU.s 			page 470


 4824 000e 02AC     		add	r4, sp, #8
 4825              	.LBB7082:
 4826              	.LBB6847:
 4827              	.LBB6840:
 4828              	.LBB6835:
 4829              	.LBB6828:
 175:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_reset();
 4830              		.loc 13 175 26 view .LVU1100
 4831 0010 0371     		strb	r3, [r0, #4]
 176:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 4832              		.loc 13 176 7 is_stmt 1 view .LVU1101
 4833              	.LVL283:
 4834              	.LBB6825:
 4835              	.LBI6821:
 206:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     {
 4836              		.loc 13 206 5 view .LVU1102
 4837              	.LBB6823:
 208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = &_M_header;
 4838              		.loc 13 208 7 view .LVU1103
 208:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_left = &_M_header;
 4839              		.loc 13 208 27 is_stmt 0 view .LVU1104
 4840 0012 8360     		str	r3, [r0, #8]
 209:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_header._M_right = &_M_header;
 4841              		.loc 13 209 7 is_stmt 1 view .LVU1105
 210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = 0;
 4842              		.loc 13 210 7 view .LVU1106
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 4843              		.loc 13 211 7 view .LVU1107
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 4844              		.loc 13 211 21 is_stmt 0 view .LVU1108
 4845 0014 4361     		str	r3, [r0, #20]
 4846              	.LVL284:
 211:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     }
 4847              		.loc 13 211 21 view .LVU1109
 4848              	.LBE6823:
 4849              	.LBE6825:
 4850              	.LBE6828:
 4851              	.LBE6835:
 4852              	.LBE6840:
 4853              	.LBB6841:
 4854              	.LBI6841:
 4855              		.loc 6 153 7 is_stmt 1 view .LVU1110
 4856              	.LBB6842:
 4857              	.LBI6842:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4858              		.loc 5 89 7 view .LVU1111
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4859              		.loc 5 89 7 is_stmt 0 view .LVU1112
 4860              	.LBE6842:
 4861              	.LBE6841:
 4862              	.LBE6847:
 4863              	.LBB6848:
 4864              	.LBI6848:
 4865              		.loc 6 153 7 is_stmt 1 view .LVU1113
 4866              	.LBB6849:
 4867              	.LBI6849:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 471


 4868              		.loc 5 89 7 view .LVU1114
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 4869              		.loc 5 89 7 is_stmt 0 view .LVU1115
 4870              	.LBE6849:
 4871              	.LBE6848:
 4872              	.LBB6850:
 4873              	.LBI6850:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 4874              		.loc 23 75 7 is_stmt 1 view .LVU1116
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 4875              		.loc 23 75 7 is_stmt 0 view .LVU1117
 4876              	.LBE6850:
 4877              	.LBB6851:
 4878              	.LBI6851:
 4879              		.loc 23 79 7 is_stmt 1 view .LVU1118
 4880              		.loc 23 79 7 is_stmt 0 view .LVU1119
 4881              	.LBE6851:
 4882              	.LBE7082:
 226:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 	  const _Compare& __comp = _Compare(),
 4883              		.loc 14 226 7 view .LVU1120
 4884 0016 84E80600 		stm	r4, {r1, r2}
 4885              	.LBB7083:
 4886              	.LBB6853:
 4887              	.LBB6852:
 4888              		.loc 23 79 45 view .LVU1121
 4889 001a 039A     		ldr	r2, [sp, #12]
 4890 001c 02EBC202 		add	r2, r2, r2, lsl #3
 4891              		.loc 23 79 52 view .LVU1122
 4892 0020 01EB8209 		add	r9, r1, r2, lsl #2
 4893              	.LVL285:
 4894              		.loc 23 79 52 view .LVU1123
 4895              	.LBE6852:
 4896              	.LBE6853:
 4897              	.LBB6854:
 4898              	.LBI6854:
1109:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 4899              		.loc 13 1109 2 is_stmt 1 view .LVU1124
 4900              	.LBB6855:
 4901              	.LBB6856:
 4902              	.LBI6856:
 538:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: _M_t(__t) { }
 4903              		.loc 13 538 2 view .LVU1125
 538:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	: _M_t(__t) { }
 4904              		.loc 13 538 2 is_stmt 0 view .LVU1126
 4905              	.LBE6856:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 4906              		.loc 13 1112 19 is_stmt 1 view .LVU1127
 4907 0024 8945     		cmp	r9, r1
 4908              	.LBE6855:
 4909              	.LBE6854:
 4910              	.LBB7077:
 4911              	.LBB6843:
 4912              	.LBB6836:
 4913              	.LBB6829:
 4914              	.LBB6826:
 4915              	.LBB6824:
 210:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_node_count = 0;
ARM GAS  /tmp/ccfXobHU.s 			page 472


 4916              		.loc 13 210 26 is_stmt 0 view .LVU1128
 4917 0026 C0E903AA 		strd	r10, r10, [r0, #12]
 4918              	.LBE6824:
 4919              	.LBE6826:
 4920              	.LBE6829:
 4921              	.LBE6836:
 4922              	.LBE6843:
 4923              	.LBE7077:
 4924              	.LBB7078:
 4925              	.LBB7073:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 4926              		.loc 13 1112 19 view .LVU1129
 4927 002a 6FD0     		beq	.L234
 4928 002c 0C46     		mov	r4, r1
 4929              	.LVL286:
 4930              	.L247:
 4931              	.LBB6857:
 4932              	.LBI6857:
1014:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(&this->_M_impl._M_header); }
 4933              		.loc 13 1014 7 is_stmt 1 view .LVU1130
 4934              	.LBB6858:
 4935              	.LBI6858:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4936              		.loc 13 273 7 view .LVU1131
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4937              		.loc 13 273 7 is_stmt 0 view .LVU1132
 4938              	.LBE6858:
 4939              	.LBE6857:
 4940              	.LBB6859:
 4941              	.LBI6859:
 348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 4942              		.loc 13 348 7 is_stmt 1 view .LVU1133
 348:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__it._M_node) { }
 4943              		.loc 13 348 7 is_stmt 0 view .LVU1134
 4944              	.LBE6859:
 4945              	.LBB6860:
 4946              	.LBI6860:
2248:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_unique_(const_iterator __position,
 4947              		.loc 13 2248 7 is_stmt 1 view .LVU1135
 4948              	.LBB6861:
 4949              	.LBB6862:
 4950              	.LBI6862:
 4951              		.loc 15 1155 7 view .LVU1136
 4952              		.loc 15 1155 7 is_stmt 0 view .LVU1137
 4953              	.LBE6862:
 4954              	.LBB6863:
 4955              	.LBI6863:
2187:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****     _M_get_insert_hint_unique_pos(const_iterator __position,
 4956              		.loc 13 2187 5 is_stmt 1 view .LVU1138
 4957              	.LBB6864:
 4958              	.LBB6865:
 4959              	.LBI6865:
 352:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 4960              		.loc 13 352 7 view .LVU1139
 4961              	.LBB6866:
 4962              	.LBI6866:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
ARM GAS  /tmp/ccfXobHU.s 			page 473


 4963              		.loc 13 273 7 view .LVU1140
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 4964              		.loc 13 273 7 is_stmt 0 view .LVU1141
 4965              	.LBE6866:
 4966              	.LBE6865:
 4967              	.LBB6867:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 4968              		.loc 13 2198 8 view .LVU1142
 4969 002e 93B1     		cbz	r3, .L235
 4970 0030 D7F81080 		ldr	r8, [r7, #16]
 4971              	.LVL287:
 4972              	.LBB6868:
 4973              	.LBI6868:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 4974              		.loc 15 385 7 is_stmt 1 view .LVU1143
 4975              	.LBB6869:
 4976              	.LBI6869:
 4977              		.loc 3 6226 5 view .LVU1144
 4978              	.LBB6870:
 4979              	.LBI6870:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 4980              		.loc 3 2853 7 view .LVU1145
 4981              	.LBB6871:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 4982              		.loc 3 2856 18 is_stmt 0 view .LVU1146
 4983 0034 6568     		ldr	r5, [r4, #4]
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 4984              		.loc 3 2855 18 view .LVU1147
 4985 0036 D8F81460 		ldr	r6, [r8, #20]
 4986              	.LVL288:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 4987              		.loc 3 2855 18 view .LVU1148
 4988 003a AE42     		cmp	r6, r5
 4989 003c 3246     		mov	r2, r6
 4990 003e 28BF     		it	cs
 4991 0040 2A46     		movcs	r2, r5
 4992              	.LVL289:
 4993              	.LBB6872:
 4994              	.LBI6872:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4995              		.loc 3 2312 7 is_stmt 1 view .LVU1149
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 4996              		.loc 3 2312 7 is_stmt 0 view .LVU1150
 4997              	.LBE6872:
 4998              	.LBB6873:
 4999              	.LBI6873:
 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 5000              		.loc 7 315 7 is_stmt 1 view .LVU1151
 5001              	.LBB6874:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 5002              		.loc 7 317 2 view .LVU1152
 5003 0042 2AB1     		cbz	r2, .L236
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5004              		.loc 7 325 2 view .LVU1153
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5005              		.loc 7 325 25 is_stmt 0 view .LVU1154
 5006 0044 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccfXobHU.s 			page 474


 5007 0046 D8F81000 		ldr	r0, [r8, #16]
 5008 004a FFF7FEFF 		bl	memcmp
 5009              	.LVL290:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5010              		.loc 7 325 25 view .LVU1155
 5011              	.LBE6874:
 5012              	.LBE6873:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 5013              		.loc 3 2860 2 view .LVU1156
 5014 004e 00B9     		cbnz	r0, .L237
 5015              	.LVL291:
 5016              	.L236:
 5017              	.LBB6875:
 5018              	.LBI6875:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 5019              		.loc 3 401 7 is_stmt 1 view .LVU1157
 5020              	.LBB6876:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 5021              		.loc 3 403 51 is_stmt 0 view .LVU1158
 5022 0050 701B     		subs	r0, r6, r5
 5023              	.LVL292:
 5024              	.L237:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 5025              		.loc 3 403 51 view .LVU1159
 5026              	.LBE6876:
 5027              	.LBE6875:
 5028              	.LBE6871:
 5029              	.LBE6870:
 5030              	.LBE6869:
 5031              	.LBE6868:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 5032              		.loc 13 2198 8 view .LVU1160
 5033 0052 0028     		cmp	r0, #0
 5034 0054 6FDB     		blt	.L261
 5035              	.LVL293:
 5036              	.L235:
2201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 5037              		.loc 13 2201 41 view .LVU1161
 5038 0056 2246     		mov	r2, r4
 5039 0058 3946     		mov	r1, r7
 5040 005a 04A8     		add	r0, sp, #16
 5041 005c FFF7FEFF 		bl	_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiE
 5042              	.LVL294:
 5043 0060 DDE90468 		ldrd	r6, r8, [sp, #16]
 5044              	.LVL295:
2201:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	}
 5045              		.loc 13 2201 41 view .LVU1162
 5046              	.LBE6867:
 5047              	.LBE6864:
 5048              	.LBE6863:
 5049              		.loc 13 2260 7 view .LVU1163
 5050 0064 B8F1000F 		cmp	r8, #0
 5051 0068 49D0     		beq	.L239
 5052 006a 003E     		subs	r6, r6, #0
 5053              	.LVL296:
 5054              		.loc 13 2260 7 view .LVU1164
 5055 006c 18BF     		it	ne
ARM GAS  /tmp/ccfXobHU.s 			page 475


 5056 006e 0126     		movne	r6, #1
 5057              	.LVL297:
 5058              	.L238:
 5059              	.LBB6881:
 5060              	.LBI6881:
1797:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       _M_insert_(_Base_ptr __x, _Base_ptr __p,
 5061              		.loc 13 1797 7 is_stmt 1 view .LVU1165
 5062 0070 C245     		cmp	r10, r8
 5063 0072 08BF     		it	eq
 5064 0074 46F00106 		orreq	r6, r6, #1
 5065              	.LBB6882:
1806:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 5066              		.loc 13 1806 33 is_stmt 0 view .LVU1166
 5067 0078 002E     		cmp	r6, #0
 5068 007a 4BD0     		beq	.L262
 5069              	.L240:
 5070              	.LVL298:
 5071              	.LBB6883:
 5072              	.LBI6883:
 546:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** #endif
 5073              		.loc 13 546 4 is_stmt 1 view .LVU1167
 5074              	.LBB6884:
 5075              	.LBI6884:
 628:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 5076              		.loc 13 628 2 view .LVU1168
 5077              	.LBB6885:
 5078              	.LBB6886:
 5079              	.LBI6886:
 579:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 5080              		.loc 13 579 7 view .LVU1169
 5081              	.LBB6887:
 5082              	.LBI6887:
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 5083              		.loc 4 443 7 view .LVU1170
 5084              	.LBB6888:
 5085              	.LBI6888:
 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 5086              		.loc 5 102 7 view .LVU1171
 5087              	.LBB6889:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5088              		.loc 5 114 41 is_stmt 0 view .LVU1172
 5089 007c 3420     		movs	r0, #52
 5090 007e FFF7FEFF 		bl	_Znwj
 5091              	.LVL299:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5092              		.loc 5 114 41 view .LVU1173
 5093              	.LBE6889:
 5094              	.LBE6888:
 5095              	.LBE6887:
 5096              	.LBE6886:
 5097              	.LBB6893:
 5098              	.LBB6894:
 5099              	.LBB6895:
 5100              	.LBB6896:
 5101              	.LBB6897:
 5102              	.LBB6898:
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 476


 5103              		.loc 3 451 9 view .LVU1174
 5104 0082 2168     		ldr	r1, [r4]
 5105              	.LBE6898:
 5106              	.LBE6897:
 5107              	.LBE6896:
 5108              	.LBE6895:
 5109              	.LBE6894:
 5110              	.LBE6893:
 5111              	.LBB7022:
 5112              	.LBB6892:
 5113              	.LBB6891:
 5114              	.LBB6890:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5115              		.loc 5 114 41 view .LVU1175
 5116 0084 0546     		mov	r5, r0
 5117              	.LVL300:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5118              		.loc 5 114 41 view .LVU1176
 5119              	.LBE6890:
 5120              	.LBE6891:
 5121              	.LBE6892:
 5122              	.LBE7022:
 5123              	.LBB7023:
 5124              	.LBI6893:
 609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 5125              		.loc 13 609 2 is_stmt 1 view .LVU1177
 609:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	{
 5126              		.loc 13 609 2 is_stmt 0 view .LVU1178
 5127              	.LBE7023:
 5128              	.LBE6885:
 5129              	.LBE6884:
 5130              	.LBE6883:
 5131              	.LBE6882:
 5132              	.LBE6881:
 5133              	.LBE6861:
 5134              	.LBE6860:
 5135              	.LBE7073:
 5136              	.LBE7078:
 5137              	.LBE7083:
 5138              		.loc 21 174 3 is_stmt 1 view .LVU1179
 5139              	.LBB7084:
 5140              	.LBB7079:
 5141              	.LBB7074:
 5142              	.LBB7069:
 5143              	.LBB7065:
 5144              	.LBB7059:
 5145              	.LBB7054:
 5146              	.LBB7039:
 5147              	.LBB7034:
 5148              	.LBB7029:
 5149              	.LBB7024:
 5150              	.LBB7014:
 5151              	.LBI7014:
 234:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       { return _M_storage._M_ptr(); }
 5152              		.loc 13 234 7 view .LVU1180
 5153              	.LBB7015:
 5154              	.LBI7015:
ARM GAS  /tmp/ccfXobHU.s 			page 477


 5155              		.file 24 "/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h"
   1:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // Aligned memory buffer -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
   3:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // Copyright (C) 2013-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** //
   5:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  11:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  16:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  20:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  25:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** /** @file ext/aligned_buffer.h
  26:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****  */
  28:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  29:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #ifndef _ALIGNED_BUFFER_H
  30:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #define _ALIGNED_BUFFER_H 1
  31:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  32:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #pragma GCC system_header
  33:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  34:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #if __cplusplus >= 201103L
  35:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** # include <type_traits>
  36:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #else
  37:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** # include <bits/c++0x_warning.h>
  38:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** #endif
  39:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  40:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** namespace __gnu_cxx
  41:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** {
  42:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****   // A utility type containing a POD object that can hold an object of type
  43:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****   // _Tp initialized via placement new or allocator_traits::construct.
  44:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****   // Intended for use as a data member subobject, use __aligned_buffer for
  45:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****   // complete objects.
  46:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****   template<typename _Tp>
  47:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****     struct __aligned_membuf
  48:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****     {
  49:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // Target macro ADJUST_FIELD_ALIGN can produce different alignment for
  50:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // types when used as class members. __aligned_membuf is intended
  51:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // for use as a class member, so align the buffer as for a class member.
  52:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // Since GCC 8 we could just use alignof(_Tp) instead, but older
  53:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // versions of non-GNU compilers might still need this trick.
  54:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       struct _Tp2 { _Tp _M_t; };
  55:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  56:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
ARM GAS  /tmp/ccfXobHU.s 			page 478


  57:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  58:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       __aligned_membuf() = default;
  59:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  60:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       // Can be used to avoid value-initialization zeroing _M_storage.
  61:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       __aligned_membuf(std::nullptr_t) { }
  62:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  63:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       void*
  64:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       _M_addr() noexcept
  65:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
  66:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  67:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       const void*
  68:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       _M_addr() const noexcept
  69:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       { return static_cast<const void*>(&_M_storage); }
  70:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h **** 
  71:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       _Tp*
  72:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       _M_ptr() noexcept
 5156              		.loc 24 72 7 view .LVU1181
 5157              	.LBB7016:
 5158              	.LBI7016:
  64:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 5159              		.loc 24 64 7 view .LVU1182
  64:/usr/include/newlib/c++/9.2.1/ext/aligned_buffer.h ****       { return static_cast<void*>(&_M_storage); }
 5160              		.loc 24 64 7 is_stmt 0 view .LVU1183
 5161              	.LBE7016:
 5162              	.LBE7015:
 5163              	.LBE7014:
 5164              	.LBB7017:
 5165              	.LBI6894:
 482:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 5166              		.loc 4 482 2 is_stmt 1 view .LVU1184
 5167              	.LBB7009:
 5168              	.LBI6895:
 144:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 5169              		.loc 5 144 2 view .LVU1185
 144:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 5170              		.loc 5 144 2 is_stmt 0 view .LVU1186
 5171              	.LBE7009:
 5172              	.LBE7017:
 5173              	.LBE7024:
 5174              	.LBE7029:
 5175              	.LBE7034:
 5176              	.LBE7039:
 5177              	.LBE7054:
 5178              	.LBE7059:
 5179              	.LBE7065:
 5180              	.LBE7069:
 5181              	.LBE7074:
 5182              	.LBE7079:
 5183              	.LBE7084:
 5184              		.loc 21 174 3 is_stmt 1 view .LVU1187
 5185              	.LBB7085:
 5186              	.LBB7080:
 5187              	.LBB7075:
 5188              	.LBB7070:
 5189              	.LBB7066:
 5190              	.LBB7060:
 5191              	.LBB7055:
ARM GAS  /tmp/ccfXobHU.s 			page 479


 5192              	.LBB7040:
 5193              	.LBB7035:
 5194              	.LBB7030:
 5195              	.LBB7025:
 5196              	.LBB7018:
 5197              	.LBB7010:
 5198              	.LBB7005:
 5199              	.LBI6896:
 303:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 5200              		.loc 20 303 17 view .LVU1188
 5201              	.LBB6928:
 5202              	.LBI6897:
 448:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 5203              		.loc 3 448 7 view .LVU1189
 5204              	.LBB6927:
 5205              	.LBB6899:
 5206              	.LBI6899:
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 5207              		.loc 3 190 7 view .LVU1190
 190:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 5208              		.loc 3 190 7 is_stmt 0 view .LVU1191
 5209              	.LBE6899:
 5210              	.LBB6901:
 5211              	.LBI6901:
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 5212              		.loc 3 290 7 is_stmt 1 view .LVU1192
 290:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus; }
 5213              		.loc 3 290 7 is_stmt 0 view .LVU1193
 5214              	.LBE6901:
 5215              	.LBB6902:
 5216              	.LBI6902:
 5217              		.loc 16 97 19 is_stmt 1 view .LVU1194
 5218              	.LBB6903:
 5219              	.LBI6903:
 5220              		.loc 4 514 7 view .LVU1195
 5221              	.LBB6904:
 5222              	.LBI6904:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5223              		.loc 6 141 7 view .LVU1196
 5224              	.LBB6905:
 5225              	.LBI6905:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5226              		.loc 5 83 7 view .LVU1197
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5227              		.loc 5 83 7 is_stmt 0 view .LVU1198
 5228              	.LBE6905:
 5229              	.LBE6904:
 5230              	.LBE6903:
 5231              	.LBE6902:
 5232              	.LBB6906:
 5233              	.LBI6906:
 159:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5234              		.loc 3 159 2 is_stmt 1 view .LVU1199
 5235              	.LBB6907:
 5236              	.LBB6908:
 5237              	.LBI6908:
 5238              		.loc 22 99 5 view .LVU1200
ARM GAS  /tmp/ccfXobHU.s 			page 480


 5239              		.loc 22 99 5 is_stmt 0 view .LVU1201
 5240              	.LBE6908:
 5241              	.LBB6909:
 5242              	.LBI6909:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5243              		.loc 6 141 7 is_stmt 1 view .LVU1202
 5244              	.LBB6910:
 5245              	.LBI6910:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5246              		.loc 5 83 7 view .LVU1203
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5247              		.loc 5 83 7 is_stmt 0 view .LVU1204
 5248              	.LBE6910:
 5249              	.LBE6909:
 5250              	.LBE6907:
 5251              	.LBE6906:
 5252              	.LBB6912:
 5253              	.LBB6900:
 193:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #else
 5254              		.loc 3 193 51 view .LVU1205
 5255 0086 00F1180C 		add	ip, r0, #24
 5256              	.LBE6900:
 5257              	.LBE6912:
 451:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 5258              		.loc 3 451 9 view .LVU1206
 5259 008a 6268     		ldr	r2, [r4, #4]
 5260              	.LBB6913:
 5261              	.LBB6914:
 5262              	.LBB6915:
 5263              	.LBB6916:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 5264              		.loc 3 247 11 view .LVU1207
 5265 008c 4FF00003 		mov	r3, #0
 5266              	.LBE6916:
 5267              	.LBE6915:
 5268              	.LBE6914:
 5269              	.LBE6913:
 5270              	.LBB6920:
 5271              	.LBB6911:
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 5272              		.loc 3 160 46 view .LVU1208
 5273 0090 C5F810C0 		str	ip, [r5, #16]
 160:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** #endif
 5274              		.loc 3 160 46 view .LVU1209
 5275              	.LBE6911:
 5276              	.LBE6920:
 5277              	.LBB6921:
 5278              	.LBI6921:
 5279              		.loc 6 153 7 is_stmt 1 view .LVU1210
 5280              	.LBB6922:
 5281              	.LBI6922:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5282              		.loc 5 89 7 view .LVU1211
 5283              	.LBE6922:
 5284              	.LBE6921:
 5285              	.LBB6923:
 5286              	.LBI6923:
ARM GAS  /tmp/ccfXobHU.s 			page 481


 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5287              		.loc 3 186 7 view .LVU1212
 5288              	.LVL301:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5289              		.loc 3 186 7 is_stmt 0 view .LVU1213
 5290              	.LBE6923:
 5291              	.LBB6924:
 5292              	.LBI6924:
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5293              		.loc 3 186 7 is_stmt 1 view .LVU1214
 186:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5294              		.loc 3 186 7 is_stmt 0 view .LVU1215
 5295              	.LBE6924:
 5296              	.LBB6925:
 5297              	.LBI6925:
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 5298              		.loc 3 936 7 is_stmt 1 view .LVU1216
 936:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_string_length; }
 5299              		.loc 3 936 7 is_stmt 0 view .LVU1217
 5300              	.LBE6925:
 5301              	.LBB6926:
 5302              	.LBI6913:
 263:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	{
 5303              		.loc 3 263 9 is_stmt 1 view .LVU1218
 5304              	.LBB6919:
 5305              	.LBB6918:
 5306              	.LBI6915:
 243:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 			 std::__false_type)
 5307              		.loc 3 243 9 view .LVU1219
 5308              	.LBB6917:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 5309              		.loc 3 247 11 is_stmt 0 view .LVU1220
 5310 0094 1030     		adds	r0, r0, #16
 5311 0096 0A44     		add	r2, r2, r1
 5312              	.LVL302:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 5313              		.loc 3 247 11 view .LVU1221
 5314 0098 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 5315              	.LVL303:
 247:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	}
 5316              		.loc 3 247 11 view .LVU1222
 5317              	.LBE6917:
 5318              	.LBE6918:
 5319              	.LBE6919:
 5320              	.LBE6926:
 5321              	.LBE6927:
 5322              	.LBE6928:
 5323              	.LBB6929:
 5324              	.LBI6929:
 550:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _Base(__x.size(),
 5325              		.loc 1 550 7 is_stmt 1 view .LVU1223
 5326              	.LBB6930:
 552:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 5327              		.loc 1 552 61 is_stmt 0 view .LVU1224
 5328 009c A169     		ldr	r1, [r4, #24]
 5329 009e D4F81CC0 		ldr	ip, [r4, #28]
 5330              	.LBB6931:
ARM GAS  /tmp/ccfXobHU.s 			page 482


 5331              	.LBI6931:
 915:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5332              		.loc 1 915 7 is_stmt 1 view .LVU1225
 5333              	.LVL304:
 915:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5334              		.loc 1 915 7 is_stmt 0 view .LVU1226
 5335              	.LBE6931:
 5336              	.LBB6933:
 5337              	.LBI6933:
 277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 5338              		.loc 1 277 7 is_stmt 1 view .LVU1227
 277:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 5339              		.loc 1 277 7 is_stmt 0 view .LVU1228
 5340              	.LBE6933:
 5341              	.LBB6934:
 5342              	.LBI6934:
 5343              		.loc 16 97 19 is_stmt 1 view .LVU1229
 5344              	.LBB6935:
 5345              	.LBI6935:
 5346              		.loc 4 514 7 view .LVU1230
 5347              	.LBB6936:
 5348              	.LBI6936:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5349              		.loc 6 141 7 view .LVU1231
 5350              	.LBB6937:
 5351              	.LBI6937:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5352              		.loc 5 83 7 view .LVU1232
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5353              		.loc 5 83 7 is_stmt 0 view .LVU1233
 5354              	.LBE6937:
 5355              	.LBE6936:
 5356              	.LBE6935:
 5357              	.LBE6934:
 5358              	.LBB6938:
 5359              	.LBB6939:
 5360              	.LBB6940:
 5361              	.LBB6941:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 5362              		.loc 1 95 47 view .LVU1234
 5363 00a2 0023     		movs	r3, #0
 5364              	.LBE6941:
 5365              	.LBE6940:
 5366              	.LBE6939:
 5367              	.LBE6938:
 5368              	.LBB6967:
 5369              	.LBB6932:
 916:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 5370              		.loc 1 916 50 view .LVU1235
 5371 00a4 ACEB010B 		sub	fp, ip, r1
 5372              	.LVL305:
 916:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 5373              		.loc 1 916 50 view .LVU1236
 5374              	.LBE6932:
 5375              	.LBE6967:
 5376              	.LBB6968:
 5377              	.LBI6938:
ARM GAS  /tmp/ccfXobHU.s 			page 483


 300:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a)
 5378              		.loc 1 300 7 is_stmt 1 view .LVU1237
 5379              	.LBB6946:
 5380              	.LBI6939:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 5381              		.loc 1 133 2 view .LVU1238
 5382              	.LBB6943:
 5383              	.LBI6943:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5384              		.loc 6 141 7 view .LVU1239
 5385              	.LBB6944:
 5386              	.LBI6944:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5387              		.loc 5 83 7 view .LVU1240
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5388              		.loc 5 83 7 is_stmt 0 view .LVU1241
 5389              	.LBE6944:
 5390              	.LBE6943:
 5391              	.LBB6945:
 5392              	.LBI6940:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 5393              		.loc 1 94 2 is_stmt 1 view .LVU1242
 5394              	.LBB6942:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 5395              		.loc 1 95 47 is_stmt 0 view .LVU1243
 5396 00a8 AB62     		str	r3, [r5, #40]
 5397 00aa C5E90B33 		strd	r3, r3, [r5, #44]
 5398              	.LVL306:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 5399              		.loc 1 95 47 view .LVU1244
 5400              	.LBE6942:
 5401              	.LBE6945:
 5402              	.LBE6946:
 5403              	.LBB6947:
 5404              	.LBI6947:
 356:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 5405              		.loc 1 356 7 is_stmt 1 view .LVU1245
 5406              	.LBB6948:
 5407              	.LBB6949:
 5408              	.LBI6949:
 340:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 5409              		.loc 1 340 7 view .LVU1246
 5410              	.LBB6950:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5411              		.loc 1 343 18 is_stmt 0 view .LVU1247
 5412 00ae 5FEAAB03 		asrs	r3, fp, #2
 5413              	.LVL307:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5414              		.loc 1 343 18 view .LVU1248
 5415 00b2 29D0     		beq	.L263
 5416              	.LVL308:
 5417              	.LBB6951:
 5418              	.LBI6951:
 443:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 5419              		.loc 4 443 7 is_stmt 1 view .LVU1249
 5420              	.LBB6952:
 5421              	.LBI6952:
ARM GAS  /tmp/ccfXobHU.s 			page 484


 102:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 5422              		.loc 5 102 7 view .LVU1250
 5423              	.LBB6953:
 104:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 5424              		.loc 5 104 2 is_stmt 0 view .LVU1251
 5425 00b4 B3F1005F 		cmp	r3, #536870912
 5426 00b8 3FD2     		bcs	.L264
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5427              		.loc 5 114 41 view .LVU1252
 5428 00ba 5846     		mov	r0, fp
 5429 00bc FFF7FEFF 		bl	_Znwj
 5430              	.LVL309:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5431              		.loc 5 114 41 view .LVU1253
 5432 00c0 0346     		mov	r3, r0
 5433              	.LVL310:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5434              		.loc 5 114 41 view .LVU1254
 5435 00c2 D4E9061C 		ldrd	r1, ip, [r4, #24]
 5436 00c6 ACEB0102 		sub	r2, ip, r1
 5437              	.LVL311:
 5438              	.L244:
 114:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 5439              		.loc 5 114 41 view .LVU1255
 5440              	.LBE6953:
 5441              	.LBE6952:
 5442              	.LBE6951:
 5443              	.LBE6950:
 5444              	.LBE6949:
 360:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5445              		.loc 1 360 59 view .LVU1256
 5446 00ca 03EB0B00 		add	r0, r3, fp
 5447              	.LBE6948:
 5448              	.LBE6947:
 5449              	.LBE6968:
 5450              	.LBB6969:
 5451              	.LBB6970:
 5452              	.LBB6971:
 5453              	.LBB6972:
 5454              	.LBB6973:
 5455              	.LBB6974:
 5456              	.LBB6975:
 5457              	.LBB6976:
 5458              	.LBB6977:
 5459              	.LBB6978:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 5460              		.loc 10 385 4 view .LVU1257
 5461 00ce 6145     		cmp	r1, ip
 5462              	.LBE6978:
 5463              	.LBE6977:
 5464              	.LBE6976:
 5465              	.LBE6975:
 5466              	.LBE6974:
 5467              	.LBE6973:
 5468              	.LBE6972:
 5469              	.LBE6971:
 5470              	.LBE6970:
ARM GAS  /tmp/ccfXobHU.s 			page 485


 5471              	.LBE6969:
 5472              	.LBB6988:
 5473              	.LBB6964:
 5474              	.LBB6961:
 359:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5475              		.loc 1 359 2 view .LVU1258
 5476 00d0 C5E90A33 		strd	r3, r3, [r5, #40]
 360:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5477              		.loc 1 360 2 view .LVU1259
 5478 00d4 2863     		str	r0, [r5, #48]
 5479              	.LVL312:
 360:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5480              		.loc 1 360 2 view .LVU1260
 5481              	.LBE6961:
 5482              	.LBE6964:
 5483              	.LBE6988:
 5484              	.LBB6989:
 5485              	.LBI6989:
 5486              		.loc 6 153 7 is_stmt 1 view .LVU1261
 5487              	.LBB6990:
 5488              	.LBI6990:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5489              		.loc 5 89 7 view .LVU1262
 5490              	.LBE6990:
 5491              	.LBE6989:
 5492              	.LBB6991:
 5493              	.LBI6991:
 817:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 5494              		.loc 1 817 7 view .LVU1263
 5495              	.LBB6992:
 5496              	.LBI6992:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 5497              		.loc 17 806 7 view .LVU1264
 5498              	.LBE6992:
 5499              	.LBE6991:
 5500              	.LBB6993:
 5501              	.LBI6993:
 835:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 5502              		.loc 1 835 7 view .LVU1265
 5503              	.LBB6994:
 5504              	.LBI6994:
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 5505              		.loc 17 806 7 view .LVU1266
 806:/usr/include/newlib/c++/9.2.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 5506              		.loc 17 806 7 is_stmt 0 view .LVU1267
 5507              	.LBE6994:
 5508              	.LBE6993:
 5509              	.LBB6995:
 5510              	.LBI6995:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 5511              		.loc 1 273 7 is_stmt 1 view .LVU1268
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 5512              		.loc 1 273 7 is_stmt 0 view .LVU1269
 5513              	.LBE6995:
 5514              	.LBB6996:
 5515              	.LBI6969:
 5516              		.loc 11 305 5 is_stmt 1 view .LVU1270
ARM GAS  /tmp/ccfXobHU.s 			page 486


 5517              	.LBB6987:
 5518              	.LBI6970:
 115:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 5519              		.loc 11 115 5 view .LVU1271
 5520              	.LBB6986:
 5521              	.LBB6985:
 5522              	.LBI6972:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 5523              		.loc 11 99 9 view .LVU1272
 5524              	.LBB6984:
 5525              	.LBI6973:
 5526              		.loc 10 465 5 view .LVU1273
 5527              	.LBB6983:
 5528              	.LBI6974:
 438:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 5529              		.loc 10 438 5 view .LVU1274
 5530              	.LBB6982:
 5531              	.LBI6975:
 393:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 5532              		.loc 10 393 5 view .LVU1275
 5533              	.LBB6981:
 5534              	.LBB6980:
 5535              	.LBI6977:
 375:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 5536              		.loc 10 375 2 view .LVU1276
 5537              	.LBB6979:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 5538              		.loc 10 385 4 is_stmt 0 view .LVU1277
 5539 00d6 05D0     		beq	.L246
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 5540              		.loc 10 386 23 view .LVU1278
 5541 00d8 1846     		mov	r0, r3
 5542 00da 0192     		str	r2, [sp, #4]
 5543 00dc FFF7FEFF 		bl	memmove
 5544              	.LVL313:
 386:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  return __result + _Num;
 5545              		.loc 10 386 23 view .LVU1279
 5546 00e0 019A     		ldr	r2, [sp, #4]
 5547 00e2 0346     		mov	r3, r0
 5548              	.L246:
 5549              	.LVL314:
 387:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 5550              		.loc 10 387 22 view .LVU1280
 5551 00e4 03EB020C 		add	ip, r3, r2
 5552              	.LBE6979:
 5553              	.LBE6980:
 5554              	.LBE6981:
 5555              	.LBE6982:
 5556              	.LBE6983:
 5557              	.LBE6984:
 5558              	.LBE6985:
 5559              	.LBE6986:
 5560              	.LBE6987:
 5561              	.LBE6996:
 5562              	.LBE6930:
 5563              	.LBE6929:
 5564              	.LBE7005:
ARM GAS  /tmp/ccfXobHU.s 			page 487


 5565              	.LBE7010:
 5566              	.LBE7018:
 5567              	.LBE7025:
 5568              	.LBE7030:
 5569              	.LBE7035:
 5570              	.LBE7040:
1812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      this->_M_impl._M_header);
 5571              		.loc 13 1812 31 view .LVU1281
 5572 00e8 2946     		mov	r1, r5
 5573 00ea 5346     		mov	r3, r10
 5574 00ec 4246     		mov	r2, r8
 5575 00ee 3046     		mov	r0, r6
 5576              	.LBB7041:
 5577              	.LBB7036:
 5578              	.LBB7031:
 5579              	.LBB7026:
 5580              	.LBB7019:
 5581              	.LBB7011:
 5582              	.LBB7006:
 5583              	.LBB7002:
 5584              	.LBB6999:
 554:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 5585              		.loc 1 554 2 view .LVU1282
 5586 00f0 C5F82CC0 		str	ip, [r5, #44]
 5587              	.LVL315:
 554:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 5588              		.loc 1 554 2 view .LVU1283
 5589              	.LBE6999:
 5590              	.LBE7002:
 5591              	.LBE7006:
 5592              	.LBE7011:
 5593              	.LBE7019:
 5594              	.LBE7026:
 5595              	.LBE7031:
 5596              	.LBE7036:
 5597              	.LBE7041:
1812:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 				      this->_M_impl._M_header);
 5598              		.loc 13 1812 31 view .LVU1284
 5599 00f4 FFF7FEFF 		bl	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
 5600              	.LVL316:
1814:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	return iterator(__z);
 5601              		.loc 13 1814 2 view .LVU1285
 5602 00f8 7B69     		ldr	r3, [r7, #20]
 5603 00fa 0133     		adds	r3, r3, #1
 5604 00fc 7B61     		str	r3, [r7, #20]
 5605              	.LVL317:
 5606              	.LBB7042:
 5607              	.LBI7042:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 5608              		.loc 13 273 7 is_stmt 1 view .LVU1286
 5609              	.L239:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h ****       : _M_node(__x) { }
 5610              		.loc 13 273 7 is_stmt 0 view .LVU1287
 5611              	.LBE7042:
 5612              	.LBE7055:
 5613              	.LBE7060:
 5614              	.LBE7066:
ARM GAS  /tmp/ccfXobHU.s 			page 488


 5615              	.LBE7070:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 5616              		.loc 13 1112 4 is_stmt 1 view .LVU1288
 5617 00fe 2434     		adds	r4, r4, #36
 5618              	.LVL318:
1112:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    _M_insert_unique_(end(), *__first, __an);
 5619              		.loc 13 1112 19 view .LVU1289
 5620 0100 4C45     		cmp	r4, r9
 5621 0102 03D0     		beq	.L234
 5622 0104 7B69     		ldr	r3, [r7, #20]
 5623 0106 92E7     		b	.L247
 5624              	.LVL319:
 5625              	.L263:
 5626              	.LBB7071:
 5627              	.LBB7067:
 5628              	.LBB7061:
 5629              	.LBB7056:
 5630              	.LBB7043:
 5631              	.LBB7037:
 5632              	.LBB7032:
 5633              	.LBB7027:
 5634              	.LBB7020:
 5635              	.LBB7012:
 5636              	.LBB7007:
 5637              	.LBB7003:
 5638              	.LBB7000:
 5639              	.LBB6997:
 5640              	.LBB6965:
 5641              	.LBB6962:
 5642              	.LBB6959:
 5643              	.LBB6957:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5644              		.loc 1 343 18 is_stmt 0 view .LVU1290
 5645 0108 5A46     		mov	r2, fp
 5646 010a DEE7     		b	.L244
 5647              	.LVL320:
 5648              	.L234:
 343:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       }
 5649              		.loc 1 343 18 view .LVU1291
 5650              	.LBE6957:
 5651              	.LBE6959:
 5652              	.LBE6962:
 5653              	.LBE6965:
 5654              	.LBE6997:
 5655              	.LBE7000:
 5656              	.LBE7003:
 5657              	.LBE7007:
 5658              	.LBE7012:
 5659              	.LBE7020:
 5660              	.LBE7027:
 5661              	.LBE7032:
 5662              	.LBE7037:
 5663              	.LBE7043:
 5664              	.LBE7056:
 5665              	.LBE7061:
 5666              	.LBE7067:
 5667              	.LBE7071:
ARM GAS  /tmp/ccfXobHU.s 			page 489


 5668              	.LBE7075:
 5669              	.LBE7080:
 5670              	.LBE7085:
 230:/usr/include/newlib/c++/9.2.1/bits/stl_map.h **** 
 5671              		.loc 14 230 62 view .LVU1292
 5672 010c 3846     		mov	r0, r7
 5673 010e 07B0     		add	sp, sp, #28
 5674              		.cfi_remember_state
 5675              		.cfi_def_cfa_offset 36
 5676              		@ sp needed
 5677 0110 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5678              	.LVL321:
 5679              	.L262:
 5680              		.cfi_restore_state
 5681              	.LBB7086:
 5682              	.LBB7081:
 5683              	.LBB7076:
 5684              	.LBB7072:
 5685              	.LBB7068:
 5686              	.LBB7062:
 5687              	.LBB7057:
 5688              	.LBB7044:
 5689              	.LBI7044:
 385:/usr/include/newlib/c++/9.2.1/bits/stl_function.h ****       { return __x < __y; }
 5690              		.loc 15 385 7 is_stmt 1 view .LVU1293
 5691              	.LBB7045:
 5692              	.LBI7045:
 5693              		.loc 3 6226 5 view .LVU1294
 5694              	.LBB7046:
 5695              	.LBI7046:
2853:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 5696              		.loc 3 2853 7 view .LVU1295
 5697              	.LBB7047:
2855:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
 5698              		.loc 3 2855 18 is_stmt 0 view .LVU1296
 5699 0114 6668     		ldr	r6, [r4, #4]
 5700              	.LVL322:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 5701              		.loc 3 2856 18 view .LVU1297
 5702 0116 D8F81450 		ldr	r5, [r8, #20]
 5703              	.LVL323:
2856:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
 5704              		.loc 3 2856 18 view .LVU1298
 5705 011a 3246     		mov	r2, r6
 5706 011c AE42     		cmp	r6, r5
 5707 011e 28BF     		it	cs
 5708 0120 2A46     		movcs	r2, r5
 5709              	.LVL324:
 5710              	.LBB7048:
 5711              	.LBI7048:
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 5712              		.loc 3 2312 7 is_stmt 1 view .LVU1299
2312:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data(); }
 5713              		.loc 3 2312 7 is_stmt 0 view .LVU1300
 5714              	.LBE7048:
 5715              	.LBB7049:
 5716              	.LBI7049:
ARM GAS  /tmp/ccfXobHU.s 			page 490


 315:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       {
 5717              		.loc 7 315 7 is_stmt 1 view .LVU1301
 5718              	.LBB7050:
 317:/usr/include/newlib/c++/9.2.1/bits/char_traits.h **** 	  return 0;
 5719              		.loc 7 317 2 view .LVU1302
 5720 0122 2AB1     		cbz	r2, .L241
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5721              		.loc 7 325 2 view .LVU1303
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5722              		.loc 7 325 25 is_stmt 0 view .LVU1304
 5723 0124 D8F81010 		ldr	r1, [r8, #16]
 5724 0128 2068     		ldr	r0, [r4]
 5725 012a FFF7FEFF 		bl	memcmp
 5726              	.LVL325:
 325:/usr/include/newlib/c++/9.2.1/bits/char_traits.h ****       }
 5727              		.loc 7 325 25 view .LVU1305
 5728              	.LBE7050:
 5729              	.LBE7049:
2860:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
 5730              		.loc 3 2860 2 view .LVU1306
 5731 012e 00B9     		cbnz	r0, .L242
 5732              	.LVL326:
 5733              	.L241:
 5734              	.LBB7051:
 5735              	.LBI7051:
 401:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 5736              		.loc 3 401 7 is_stmt 1 view .LVU1307
 5737              	.LBB7052:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 5738              		.loc 3 403 51 is_stmt 0 view .LVU1308
 5739 0130 701B     		subs	r0, r6, r5
 5740              	.LVL327:
 5741              	.L242:
 403:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 5742              		.loc 3 403 51 view .LVU1309
 5743              	.LBE7052:
 5744              	.LBE7051:
 5745              	.LBE7047:
 5746              	.LBE7046:
 5747              	.LBE7045:
 5748              	.LBE7044:
1807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 							_S_key(__p)));
 5749              		.loc 13 1807 10 view .LVU1310
 5750 0132 C60F     		lsrs	r6, r0, #31
 5751 0134 A2E7     		b	.L240
 5752              	.LVL328:
 5753              	.L261:
1807:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 							_S_key(__p)));
 5754              		.loc 13 1807 10 view .LVU1311
 5755              	.LBE7057:
 5756              	.LBE7062:
 5757              	.LBB7063:
 5758              	.LBB6880:
 5759              	.LBB6879:
 5760              	.LBB6877:
 5761              	.LBI6877:
 325:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
ARM GAS  /tmp/ccfXobHU.s 			page 491


 5762              		.loc 20 325 18 is_stmt 1 view .LVU1312
 5763              	.LBB6878:
 5764              	.LBI6878:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 5765              		.loc 22 74 5 view .LVU1313
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 5766              		.loc 22 74 5 is_stmt 0 view .LVU1314
 5767              	.LBE6878:
 5768              	.LBE6877:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 5769              		.loc 13 2198 8 view .LVU1315
 5770 0136 0026     		movs	r6, #0
 5771 0138 9AE7     		b	.L238
 5772              	.LVL329:
 5773              	.L264:
2198:/usr/include/newlib/c++/9.2.1/bits/stl_tree.h **** 	    return _Res(0, _M_rightmost());
 5774              		.loc 13 2198 8 view .LVU1316
 5775              	.LBE6879:
 5776              	.LBE6880:
 5777              	.LBE7063:
 5778              	.LBB7064:
 5779              	.LBB7058:
 5780              	.LBB7053:
 5781              	.LBB7038:
 5782              	.LBB7033:
 5783              	.LBB7028:
 5784              	.LBB7021:
 5785              	.LBB7013:
 5786              	.LBB7008:
 5787              	.LBB7004:
 5788              	.LBB7001:
 5789              	.LBB6998:
 5790              	.LBB6966:
 5791              	.LBB6963:
 5792              	.LBB6960:
 5793              	.LBB6958:
 5794              	.LBB6956:
 5795              	.LBB6955:
 5796              	.LBB6954:
 105:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5797              		.loc 5 105 26 view .LVU1317
 5798 013a FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 5799              	.LVL330:
 105:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 5800              		.loc 5 105 26 view .LVU1318
 5801              	.LBE6954:
 5802              	.LBE6955:
 5803              	.LBE6956:
 5804              	.LBE6958:
 5805              	.LBE6960:
 5806              	.LBE6963:
 5807              	.LBE6966:
 5808              	.LBE6998:
 5809              	.LBE7001:
 5810              	.LBE7004:
 5811              	.LBE7008:
 5812              	.LBE7013:
ARM GAS  /tmp/ccfXobHU.s 			page 492


 5813              	.LBE7021:
 5814              	.LBE7028:
 5815              	.LBE7033:
 5816              	.LBE7038:
 5817              	.LBE7053:
 5818              	.LBE7058:
 5819              	.LBE7064:
 5820              	.LBE7068:
 5821              	.LBE7072:
 5822              	.LBE7076:
 5823              	.LBE7081:
 5824              	.LBE7086:
 5825              		.cfi_endproc
 5826              	.LFE3226:
 5828              		.weak	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 5829              		.thumb_set _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessI
 5830 013e 00BF     		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4,"aMS",%progbit
 5831              		.align	2
 5832              	.LC10:
 5833 0000 3100     		.ascii	"1\000"
 5834 0002 0000     		.align	2
 5835              	.LC11:
 5836 0004 3200     		.ascii	"2\000"
 5837 0006 0000     		.align	2
 5838              	.LC12:
 5839 0008 3400     		.ascii	"4\000"
 5840 000a 0000     		.align	2
 5841              	.LC13:
 5842 000c 3800     		.ascii	"8\000"
 5843 000e 0000     		.align	2
 5844              	.LC14:
 5845 0010 313600   		.ascii	"16\000"
 5846 0013 00       		.align	2
 5847              	.LC15:
 5848 0014 4300     		.ascii	"C\000"
 5849 0016 0000     		.align	2
 5850              	.LC16:
 5851 0018 432300   		.ascii	"C#\000"
 5852 001b 00       		.align	2
 5853              	.LC17:
 5854 001c 4400     		.ascii	"D\000"
 5855 001e 0000     		.align	2
 5856              	.LC18:
 5857 0020 442300   		.ascii	"D#\000"
 5858 0023 00       		.align	2
 5859              	.LC19:
 5860 0024 4500     		.ascii	"E\000"
 5861 0026 0000     		.align	2
 5862              	.LC20:
 5863 0028 4600     		.ascii	"F\000"
 5864 002a 0000     		.align	2
 5865              	.LC21:
 5866 002c 462300   		.ascii	"F#\000"
 5867 002f 00       		.align	2
 5868              	.LC22:
 5869 0030 4700     		.ascii	"G\000"
 5870 0032 0000     		.align	2
ARM GAS  /tmp/ccfXobHU.s 			page 493


 5871              	.LC23:
 5872 0034 472300   		.ascii	"G#\000"
 5873 0037 00       		.align	2
 5874              	.LC24:
 5875 0038 4100     		.ascii	"A\000"
 5876 003a 0000     		.align	2
 5877              	.LC25:
 5878 003c 412300   		.ascii	"A#\000"
 5879 003f 00       		.align	2
 5880              	.LC26:
 5881 0040 4200     		.ascii	"B\000"
 5882 0042 0000     		.align	2
 5883              	.LC27:
 5884 0044 433000   		.ascii	"C0\000"
 5885 0047 00       		.align	2
 5886              	.LC28:
 5887 0048 43233000 		.ascii	"C#0\000"
 5888              		.align	2
 5889              	.LC29:
 5890 004c 443000   		.ascii	"D0\000"
 5891 004f 00       		.align	2
 5892              	.LC30:
 5893 0050 44233000 		.ascii	"D#0\000"
 5894              		.align	2
 5895              	.LC31:
 5896 0054 453000   		.ascii	"E0\000"
 5897 0057 00       		.align	2
 5898              	.LC32:
 5899 0058 463000   		.ascii	"F0\000"
 5900 005b 00       		.align	2
 5901              	.LC33:
 5902 005c 46233000 		.ascii	"F#0\000"
 5903              		.align	2
 5904              	.LC34:
 5905 0060 473000   		.ascii	"G0\000"
 5906 0063 00       		.align	2
 5907              	.LC35:
 5908 0064 47233000 		.ascii	"G#0\000"
 5909              		.align	2
 5910              	.LC36:
 5911 0068 413000   		.ascii	"A0\000"
 5912 006b 00       		.align	2
 5913              	.LC37:
 5914 006c 41233000 		.ascii	"A#0\000"
 5915              		.align	2
 5916              	.LC38:
 5917 0070 423000   		.ascii	"B0\000"
 5918 0073 00       		.align	2
 5919              	.LC39:
 5920 0074 433100   		.ascii	"C1\000"
 5921 0077 00       		.align	2
 5922              	.LC40:
 5923 0078 43233100 		.ascii	"C#1\000"
 5924              		.align	2
 5925              	.LC41:
 5926 007c 443100   		.ascii	"D1\000"
 5927 007f 00       		.align	2
ARM GAS  /tmp/ccfXobHU.s 			page 494


 5928              	.LC42:
 5929 0080 44233100 		.ascii	"D#1\000"
 5930              		.align	2
 5931              	.LC43:
 5932 0084 453100   		.ascii	"E1\000"
 5933 0087 00       		.align	2
 5934              	.LC44:
 5935 0088 463100   		.ascii	"F1\000"
 5936 008b 00       		.align	2
 5937              	.LC45:
 5938 008c 46233100 		.ascii	"F#1\000"
 5939              		.align	2
 5940              	.LC46:
 5941 0090 473100   		.ascii	"G1\000"
 5942 0093 00       		.align	2
 5943              	.LC47:
 5944 0094 47233100 		.ascii	"G#1\000"
 5945              		.align	2
 5946              	.LC48:
 5947 0098 413100   		.ascii	"A1\000"
 5948 009b 00       		.align	2
 5949              	.LC49:
 5950 009c 41233100 		.ascii	"A#1\000"
 5951              		.align	2
 5952              	.LC50:
 5953 00a0 423100   		.ascii	"B1\000"
 5954 00a3 00       		.align	2
 5955              	.LC51:
 5956 00a4 433200   		.ascii	"C2\000"
 5957 00a7 00       		.align	2
 5958              	.LC52:
 5959 00a8 43233200 		.ascii	"C#2\000"
 5960              		.align	2
 5961              	.LC53:
 5962 00ac 443200   		.ascii	"D2\000"
 5963 00af 00       		.align	2
 5964              	.LC54:
 5965 00b0 44233200 		.ascii	"D#2\000"
 5966              		.align	2
 5967              	.LC55:
 5968 00b4 453200   		.ascii	"E2\000"
 5969 00b7 00       		.align	2
 5970              	.LC56:
 5971 00b8 463200   		.ascii	"F2\000"
 5972 00bb 00       		.align	2
 5973              	.LC57:
 5974 00bc 46233200 		.ascii	"F#2\000"
 5975              		.align	2
 5976              	.LC58:
 5977 00c0 473200   		.ascii	"G2\000"
 5978 00c3 00       		.align	2
 5979              	.LC59:
 5980 00c4 47233200 		.ascii	"G#2\000"
 5981              		.align	2
 5982              	.LC60:
 5983 00c8 413200   		.ascii	"A2\000"
 5984 00cb 00       		.align	2
ARM GAS  /tmp/ccfXobHU.s 			page 495


 5985              	.LC61:
 5986 00cc 41233200 		.ascii	"A#2\000"
 5987              		.align	2
 5988              	.LC62:
 5989 00d0 423200   		.ascii	"B2\000"
 5990 00d3 00       		.align	2
 5991              	.LC63:
 5992 00d4 433300   		.ascii	"C3\000"
 5993 00d7 00       		.align	2
 5994              	.LC64:
 5995 00d8 43233300 		.ascii	"C#3\000"
 5996              		.align	2
 5997              	.LC65:
 5998 00dc 443300   		.ascii	"D3\000"
 5999 00df 00       		.align	2
 6000              	.LC66:
 6001 00e0 44233300 		.ascii	"D#3\000"
 6002              		.align	2
 6003              	.LC67:
 6004 00e4 453300   		.ascii	"E3\000"
 6005 00e7 00       		.align	2
 6006              	.LC68:
 6007 00e8 463300   		.ascii	"F3\000"
 6008 00eb 00       		.align	2
 6009              	.LC69:
 6010 00ec 46233300 		.ascii	"F#3\000"
 6011              		.align	2
 6012              	.LC70:
 6013 00f0 473300   		.ascii	"G3\000"
 6014 00f3 00       		.align	2
 6015              	.LC71:
 6016 00f4 47233300 		.ascii	"G#3\000"
 6017              		.align	2
 6018              	.LC72:
 6019 00f8 413300   		.ascii	"A3\000"
 6020 00fb 00       		.align	2
 6021              	.LC73:
 6022 00fc 41233300 		.ascii	"A#3\000"
 6023              		.align	2
 6024              	.LC74:
 6025 0100 423300   		.ascii	"B3\000"
 6026 0103 00       		.align	2
 6027              	.LC75:
 6028 0104 433400   		.ascii	"C4\000"
 6029 0107 00       		.align	2
 6030              	.LC76:
 6031 0108 43233400 		.ascii	"C#4\000"
 6032              		.align	2
 6033              	.LC77:
 6034 010c 443400   		.ascii	"D4\000"
 6035 010f 00       		.align	2
 6036              	.LC78:
 6037 0110 44233400 		.ascii	"D#4\000"
 6038              		.align	2
 6039              	.LC79:
 6040 0114 453400   		.ascii	"E4\000"
 6041 0117 00       		.align	2
ARM GAS  /tmp/ccfXobHU.s 			page 496


 6042              	.LC80:
 6043 0118 463400   		.ascii	"F4\000"
 6044 011b 00       		.align	2
 6045              	.LC81:
 6046 011c 46233400 		.ascii	"F#4\000"
 6047              		.align	2
 6048              	.LC82:
 6049 0120 473400   		.ascii	"G4\000"
 6050 0123 00       		.align	2
 6051              	.LC83:
 6052 0124 47233400 		.ascii	"G#4\000"
 6053              		.align	2
 6054              	.LC84:
 6055 0128 413400   		.ascii	"A4\000"
 6056 012b 00       		.align	2
 6057              	.LC85:
 6058 012c 41233400 		.ascii	"A#4\000"
 6059              		.align	2
 6060              	.LC86:
 6061 0130 423400   		.ascii	"B4\000"
 6062 0133 00       		.align	2
 6063              	.LC87:
 6064 0134 4D616A6F 		.ascii	"Major\000"
 6064      7200
 6065 013a 0000     		.align	2
 6066              	.LC88:
 6067 013c 4D696E6F 		.ascii	"Minor\000"
 6067      7200
 6068 0142 0000     		.align	2
 6069              	.LC89:
 6070 0144 446F7269 		.ascii	"Dorian\000"
 6070      616E00
 6071 014b 00       		.align	2
 6072              	.LC90:
 6073 014c 50687972 		.ascii	"Phyrgi\000"
 6073      676900
 6074 0153 00       		.align	2
 6075              	.LC91:
 6076 0154 4C796469 		.ascii	"Lydian\000"
 6076      616E00
 6077 015b 00       		.align	2
 6078              	.LC92:
 6079 015c 4D69786F 		.ascii	"Mixo\000"
 6079      00
 6080 0161 000000   		.align	2
 6081              	.LC93:
 6082 0164 4C6F6372 		.ascii	"Locri\000"
 6082      6900
 6083 016a 0000     		.align	2
 6084              	.LC94:
 6085 016c 4E6F6E65 		.ascii	"None\000"
 6085      00
 6086 0171 000000   		.align	2
 6087              	.LC95:
 6088 0174 44726F70 		.ascii	"Drop 2\000"
 6088      203200
 6089 017b 00       		.align	2
ARM GAS  /tmp/ccfXobHU.s 			page 497


 6090              	.LC96:
 6091 017c 44726F70 		.ascii	"Drop 3\000"
 6091      203300
 6092 0183 00       		.align	2
 6093              	.LC97:
 6094 0184 44726F70 		.ascii	"Drop 4\000"
 6094      203400
 6095              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 6096              		.align	1
 6097              		.p2align 2,,3
 6098              		.syntax unified
 6099              		.thumb
 6100              		.thumb_func
 6101              		.fpu fpv5-d16
 6103              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 6104              	.LFB4033:
 6105              		.loc 12 21 2 is_stmt 1 view -0
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 1752
 6108              		@ frame_needed = 0, uses_anonymous_args = 0
 6109              	.LVL331:
 6110              		.loc 12 21 2 is_stmt 0 view .LVU1320
 6111 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6112              		.cfi_def_cfa_offset 28
 6113              		.cfi_offset 4, -28
 6114              		.cfi_offset 5, -24
 6115              		.cfi_offset 6, -20
 6116              		.cfi_offset 7, -16
 6117              		.cfi_offset 8, -12
 6118              		.cfi_offset 9, -8
 6119              		.cfi_offset 14, -4
 6120 0004 ADF2E46D 		subw	sp, sp, #1764
 6121              		.cfi_def_cfa_offset 1792
 6122              	.LVL332:
 6123              	.LBB8050:
 6124              	.LBI8050:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6125              		.loc 20 341 12 is_stmt 1 view .LVU1321
 6126              	.LBB8051:
 6127              	.LBB8052:
 6128              	.LBB8053:
 6129              	.LBI8053:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6130              		.loc 22 74 5 view .LVU1322
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6131              		.loc 22 74 5 is_stmt 0 view .LVU1323
 6132              	.LBE8053:
 6133              	.LBB8054:
 6134              	.LBI8054:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6135              		.loc 6 138 7 is_stmt 1 view .LVU1324
 6136              	.LBB8055:
 6137              	.LBI8055:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6138              		.loc 5 80 7 view .LVU1325
 6139              	.LBE8055:
 6140              	.LBE8054:
ARM GAS  /tmp/ccfXobHU.s 			page 498


 6141              		.loc 20 342 64 is_stmt 0 view .LVU1326
 6142 0008 B649     		ldr	r1, .L320
 6143 000a 50A8     		add	r0, sp, #320
 6144              	.LVL333:
 6145              		.loc 20 342 64 view .LVU1327
 6146              	.LBE8052:
 6147              	.LBE8051:
 6148              	.LBE8050:
 6149              		.file 25 "Mu/music/theory.h"
   1:Mu/music/theory.h **** /* 
   2:Mu/music/theory.h ****  * Copyright (C) 2021 Evan Pernu - All Rights Reserved
   3:Mu/music/theory.h ****  * You may use, distribute and modify this code under the
   4:Mu/music/theory.h ****  * terms of the GNU AGPLv3 license.
   5:Mu/music/theory.h ****  * 
   6:Mu/music/theory.h ****  * You should have received a copy of the GNU AGPLv3 license with
   7:Mu/music/theory.h ****  * this file (LICENSE.md). If not, please write to: evanpernu@gmail.com, 
   8:Mu/music/theory.h ****  * or visit: https://www.gnu.org/licenses/agpl-3.0.en.html
   9:Mu/music/theory.h ****  */
  10:Mu/music/theory.h **** 
  11:Mu/music/theory.h **** #pragma once
  12:Mu/music/theory.h **** 
  13:Mu/music/theory.h **** #include <map>
  14:Mu/music/theory.h **** #include <vector>
  15:Mu/music/theory.h **** 
  16:Mu/music/theory.h **** namespace mu {
  17:Mu/music/theory.h **** 
  18:Mu/music/theory.h ****     const int MAX_NOTE = 60;
  19:Mu/music/theory.h ****     const int MIN_NOTE = 0;
  20:Mu/music/theory.h **** 
  21:Mu/music/theory.h ****     // Returns true if the given note is diatonic to the given mode
  22:Mu/music/theory.h ****     // @param a note's index in semitones from C or C0
  23:Mu/music/theory.h ****     // @param an element of mu::allModes
  24:Mu/music/theory.h ****     bool isDiatonic(int, std::string);
  25:Mu/music/theory.h **** 
  26:Mu/music/theory.h ****     // This seems redundant but it may be needed for fractional clock divs
  27:Mu/music/theory.h ****     const std::map<std::string, int> clockInDivToInt {
  28:Mu/music/theory.h ****         {"1",  1},
  29:Mu/music/theory.h ****         {"2",  2},
  30:Mu/music/theory.h ****         {"4",  4},            
  31:Mu/music/theory.h ****         {"8",  8},
  32:Mu/music/theory.h ****         {"16", 16}
  33:Mu/music/theory.h ****     };
 6150              		.loc 25 33 5 view .LVU1328
 6151 000c 50AC     		add	r4, sp, #320
 6152              	.LBB8063:
 6153              	.LBB8061:
 6154              	.LBB8059:
 6155              		.loc 20 342 64 view .LVU1329
 6156 000e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6157              	.LVL334:
 6158              	.LBB8056:
 6159              	.LBI8056:
 6160              		.loc 6 153 7 is_stmt 1 view .LVU1330
 6161              	.LBB8057:
 6162              	.LBI8057:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6163              		.loc 5 89 7 view .LVU1331
ARM GAS  /tmp/ccfXobHU.s 			page 499


 6164              	.LBE8057:
 6165              	.LBE8056:
 6166              	.LBB8058:
 6167              	.LBI8058:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6168              		.loc 22 74 5 view .LVU1332
 6169              	.LBE8058:
 6170              		.loc 20 342 64 is_stmt 0 view .LVU1333
 6171 0012 0123     		movs	r3, #1
 6172              	.LBE8059:
 6173              	.LBE8061:
 6174              	.LBE8063:
 6175              	.LBB8064:
 6176              	.LBB8065:
 6177              	.LBB8066:
 6178 0014 B449     		ldr	r1, .L320+4
 6179 0016 57A8     		add	r0, sp, #348
 6180              	.LBE8066:
 6181              	.LBE8065:
 6182              	.LBE8064:
 6183              	.LBB8077:
 6184              	.LBB8062:
 6185              	.LBB8060:
 6186 0018 5693     		str	r3, [sp, #344]
 6187              	.LVL335:
 6188              		.loc 20 342 64 view .LVU1334
 6189              	.LBE8060:
 6190              	.LBE8062:
 6191              	.LBE8077:
 6192              	.LBB8078:
 6193              	.LBI8064:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6194              		.loc 20 341 12 is_stmt 1 view .LVU1335
 6195              	.LBB8075:
 6196              	.LBB8073:
 6197              	.LBB8067:
 6198              	.LBI8067:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6199              		.loc 22 74 5 view .LVU1336
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6200              		.loc 22 74 5 is_stmt 0 view .LVU1337
 6201              	.LBE8067:
 6202              	.LBB8068:
 6203              	.LBI8068:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6204              		.loc 6 138 7 is_stmt 1 view .LVU1338
 6205              	.LBB8069:
 6206              	.LBI8069:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6207              		.loc 5 80 7 view .LVU1339
 6208              	.LBE8069:
 6209              	.LBE8068:
 6210              		.loc 20 342 64 is_stmt 0 view .LVU1340
 6211 001a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6212              	.LVL336:
 6213              	.LBB8070:
 6214              	.LBI8070:
ARM GAS  /tmp/ccfXobHU.s 			page 500


 6215              		.loc 6 153 7 is_stmt 1 view .LVU1341
 6216              	.LBB8071:
 6217              	.LBI8071:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6218              		.loc 5 89 7 view .LVU1342
 6219              	.LBE8071:
 6220              	.LBE8070:
 6221              	.LBB8072:
 6222              	.LBI8072:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6223              		.loc 22 74 5 view .LVU1343
 6224              	.LBE8072:
 6225              		.loc 20 342 64 is_stmt 0 view .LVU1344
 6226 001e 0223     		movs	r3, #2
 6227              	.LBE8073:
 6228              	.LBE8075:
 6229              	.LBE8078:
 6230              	.LBB8079:
 6231              	.LBB8080:
 6232              	.LBB8081:
 6233 0020 B249     		ldr	r1, .L320+8
 6234 0022 5EA8     		add	r0, sp, #376
 6235              	.LBE8081:
 6236              	.LBE8080:
 6237              	.LBE8079:
 6238              		.loc 25 33 5 view .LVU1345
 6239 0024 0DF59278 		add	r8, sp, #292
 6240              	.LBB8092:
 6241              	.LBB8076:
 6242              	.LBB8074:
 6243              		.loc 20 342 64 view .LVU1346
 6244 0028 5D93     		str	r3, [sp, #372]
 6245              	.LVL337:
 6246              		.loc 20 342 64 view .LVU1347
 6247              	.LBE8074:
 6248              	.LBE8076:
 6249              	.LBE8092:
 6250              	.LBB8093:
 6251              	.LBI8079:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6252              		.loc 20 341 12 is_stmt 1 view .LVU1348
 6253              	.LBB8090:
 6254              	.LBB8088:
 6255              	.LBB8082:
 6256              	.LBI8082:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6257              		.loc 22 74 5 view .LVU1349
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6258              		.loc 22 74 5 is_stmt 0 view .LVU1350
 6259              	.LBE8082:
 6260              	.LBB8083:
 6261              	.LBI8083:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6262              		.loc 6 138 7 is_stmt 1 view .LVU1351
 6263              	.LBB8084:
 6264              	.LBI8084:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 501


 6265              		.loc 5 80 7 view .LVU1352
 6266              	.LBE8084:
 6267              	.LBE8083:
 6268              		.loc 20 342 64 is_stmt 0 view .LVU1353
 6269 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6270              	.LVL338:
 6271              	.LBB8085:
 6272              	.LBI8085:
 6273              		.loc 6 153 7 is_stmt 1 view .LVU1354
 6274              	.LBB8086:
 6275              	.LBI8086:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6276              		.loc 5 89 7 view .LVU1355
 6277              	.LBE8086:
 6278              	.LBE8085:
 6279              	.LBB8087:
 6280              	.LBI8087:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6281              		.loc 22 74 5 view .LVU1356
 6282              	.LBE8087:
 6283              		.loc 20 342 64 is_stmt 0 view .LVU1357
 6284 002e 0423     		movs	r3, #4
 6285              	.LBE8088:
 6286              	.LBE8090:
 6287              	.LBE8093:
 6288              	.LBB8094:
 6289              	.LBB8095:
 6290              	.LBB8096:
 6291 0030 AF49     		ldr	r1, .L320+12
 6292 0032 65A8     		add	r0, sp, #404
 6293              	.LBE8096:
 6294              	.LBE8095:
 6295              	.LBE8094:
 6296              		.loc 25 33 5 view .LVU1358
 6297 0034 0DF58479 		add	r9, sp, #264
 6298              	.LBB8107:
 6299              	.LBB8091:
 6300              	.LBB8089:
 6301              		.loc 20 342 64 view .LVU1359
 6302 0038 6493     		str	r3, [sp, #400]
 6303              	.LVL339:
 6304              		.loc 20 342 64 view .LVU1360
 6305              	.LBE8089:
 6306              	.LBE8091:
 6307              	.LBE8107:
 6308              	.LBB8108:
 6309              	.LBI8094:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6310              		.loc 20 341 12 is_stmt 1 view .LVU1361
 6311              	.LBB8105:
 6312              	.LBB8103:
 6313              	.LBB8097:
 6314              	.LBI8097:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6315              		.loc 22 74 5 view .LVU1362
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6316              		.loc 22 74 5 is_stmt 0 view .LVU1363
ARM GAS  /tmp/ccfXobHU.s 			page 502


 6317              	.LBE8097:
 6318              	.LBB8098:
 6319              	.LBI8098:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6320              		.loc 6 138 7 is_stmt 1 view .LVU1364
 6321              	.LBB8099:
 6322              	.LBI8099:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6323              		.loc 5 80 7 view .LVU1365
 6324              	.LBE8099:
 6325              	.LBE8098:
 6326              		.loc 20 342 64 is_stmt 0 view .LVU1366
 6327 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6328              	.LVL340:
 6329              	.LBB8100:
 6330              	.LBI8100:
 6331              		.loc 6 153 7 is_stmt 1 view .LVU1367
 6332              	.LBB8101:
 6333              	.LBI8101:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6334              		.loc 5 89 7 view .LVU1368
 6335              	.LBE8101:
 6336              	.LBE8100:
 6337              	.LBB8102:
 6338              	.LBI8102:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6339              		.loc 22 74 5 view .LVU1369
 6340              	.LBE8102:
 6341              		.loc 20 342 64 is_stmt 0 view .LVU1370
 6342 003e 0823     		movs	r3, #8
 6343              	.LBE8103:
 6344              	.LBE8105:
 6345              	.LBE8108:
 6346              	.LBB8109:
 6347              	.LBB8110:
 6348              	.LBB8111:
 6349 0040 AC49     		ldr	r1, .L320+16
 6350 0042 6CA8     		add	r0, sp, #432
 6351 0044 4BAD     		add	r5, sp, #300
 6352              	.LBE8111:
 6353              	.LBE8110:
 6354              	.LBE8109:
 6355              	.LBB8124:
 6356              	.LBB8106:
 6357              	.LBB8104:
 6358 0046 6B93     		str	r3, [sp, #428]
 6359              	.LVL341:
 6360              		.loc 20 342 64 view .LVU1371
 6361              	.LBE8104:
 6362              	.LBE8106:
 6363              	.LBE8124:
 6364              	.LBB8125:
 6365              	.LBI8109:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6366              		.loc 20 341 12 is_stmt 1 view .LVU1372
 6367              	.LBB8121:
 6368              	.LBB8118:
ARM GAS  /tmp/ccfXobHU.s 			page 503


 6369              	.LBB8112:
 6370              	.LBI8112:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6371              		.loc 22 74 5 view .LVU1373
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6372              		.loc 22 74 5 is_stmt 0 view .LVU1374
 6373              	.LBE8112:
 6374              	.LBB8113:
 6375              	.LBI8113:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6376              		.loc 6 138 7 is_stmt 1 view .LVU1375
 6377              	.LBB8114:
 6378              	.LBI8114:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6379              		.loc 5 80 7 view .LVU1376
 6380              	.LBE8114:
 6381              	.LBE8113:
 6382              		.loc 20 342 64 is_stmt 0 view .LVU1377
 6383 0048 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6384              	.LVL342:
 6385              	.LBB8115:
 6386              	.LBI8115:
 6387              		.loc 6 153 7 is_stmt 1 view .LVU1378
 6388              	.LBB8116:
 6389              	.LBI8116:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6390              		.loc 5 89 7 view .LVU1379
 6391              	.LBE8116:
 6392              	.LBE8115:
 6393              	.LBB8117:
 6394              	.LBI8117:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 6395              		.loc 22 74 5 view .LVU1380
 6396              	.LBE8117:
 6397              	.LBE8118:
 6398              	.LBE8121:
 6399              	.LBE8125:
 6400              		.loc 25 33 5 is_stmt 0 view .LVU1381
 6401 004c 0520     		movs	r0, #5
 6402              	.LBB8126:
 6403              	.LBB8122:
 6404              	.LBB8119:
 6405              		.loc 20 342 64 view .LVU1382
 6406 004e 1021     		movs	r1, #16
 6407              	.LBE8119:
 6408              	.LBE8122:
 6409              	.LBE8126:
 6410              		.loc 25 33 5 view .LVU1383
 6411 0050 08AA     		add	r2, sp, #32
 6412 0052 0894     		str	r4, [sp, #32]
 6413 0054 0990     		str	r0, [sp, #36]
 6414 0056 4346     		mov	r3, r8
 6415 0058 CDF80090 		str	r9, [sp]
 6416 005c 6EAC     		add	r4, sp, #440
 6417              	.LBB8127:
 6418              	.LBB8123:
 6419              	.LBB8120:
ARM GAS  /tmp/ccfXobHU.s 			page 504


 6420              		.loc 20 342 64 view .LVU1384
 6421 005e 7291     		str	r1, [sp, #456]
 6422              	.LVL343:
 6423              		.loc 20 342 64 view .LVU1385
 6424              	.LBE8120:
 6425              	.LBE8123:
 6426              	.LBE8127:
 6427              	.LBB8128:
 6428              	.LBI8128:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6429              		.loc 6 138 7 is_stmt 1 view .LVU1386
 6430              	.LBB8129:
 6431              	.LBI8129:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6432              		.loc 5 80 7 view .LVU1387
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6433              		.loc 5 80 7 is_stmt 0 view .LVU1388
 6434              	.LBE8129:
 6435              	.LBE8128:
 6436              		.loc 25 33 5 view .LVU1389
 6437 0060 A548     		ldr	r0, .L320+20
 6438 0062 06CA     		ldm	r2, {r1, r2}
 6439 0064 FFF7FEFF 		bl	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC
 6440              	.LVL344:
 6441              	.LBB8130:
 6442              	.LBI8130:
 6443              		.loc 6 153 7 is_stmt 1 view .LVU1390
 6444              	.LBB8131:
 6445              	.LBI8131:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6446              		.loc 5 89 7 view .LVU1391
 6447              	.L267:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6448              		.loc 5 89 7 is_stmt 0 view .LVU1392
 6449              	.LBE8131:
 6450              	.LBE8130:
 6451              	.LBB8132:
 6452              	.LBI8132:
 208:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     : private __pair_base<_T1, _T2>
 6453              		.loc 20 208 12 is_stmt 1 view .LVU1393
 6454              	.LBB8133:
 6455              	.LBI8133:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 6456              		.loc 3 657 7 view .LVU1394
 6457              	.LBB8134:
 6458              	.LBI8134:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 6459              		.loc 3 229 7 view .LVU1395
 6460              	.LBB8135:
 6461              	.LBB8136:
 6462              	.LBI8136:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6463              		.loc 3 221 7 view .LVU1396
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6464              		.loc 3 221 7 is_stmt 0 view .LVU1397
 6465              	.LBE8136:
 6466              	.LBB8138:
ARM GAS  /tmp/ccfXobHU.s 			page 505


 6467              	.LBI8138:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6468              		.loc 3 236 7 is_stmt 1 view .LVU1398
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6469              		.loc 3 236 7 is_stmt 0 view .LVU1399
 6470              	.LBE8138:
 6471              	.LBB8146:
 6472              	.LBB8137:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 6473              		.loc 3 222 26 view .LVU1400
 6474 0068 54F8080C 		ldr	r0, [r4, #-8]
 6475              	.LVL345:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 6476              		.loc 3 222 26 view .LVU1401
 6477              	.LBE8137:
 6478              	.LBE8146:
 6479              	.LBB8147:
 6480              	.LBB8139:
 6481              	.LBB8140:
 6482              	.LBI8140:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6483              		.loc 4 469 7 is_stmt 1 view .LVU1402
 6484              	.LBB8141:
 6485              	.LBI8141:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 6486              		.loc 5 119 7 view .LVU1403
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 6487              		.loc 5 119 7 is_stmt 0 view .LVU1404
 6488              	.LBE8141:
 6489              	.LBE8140:
 6490              	.LBE8139:
 6491              	.LBE8147:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6492              		.loc 3 231 2 view .LVU1405
 6493 006c A042     		cmp	r0, r4
 6494 006e A4F11C04 		sub	r4, r4, #28
 6495              	.LVL346:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6496              		.loc 3 231 2 view .LVU1406
 6497 0072 01D0     		beq	.L266
 6498              	.LBB8148:
 6499              	.LBB8145:
 6500              	.LBB8144:
 6501              	.LBB8143:
 6502              	.LBB8142:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 6503              		.loc 5 128 19 view .LVU1407
 6504 0074 FFF7FEFF 		bl	_ZdlPv
 6505              	.LVL347:
 6506              	.L266:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 6507              		.loc 5 128 19 view .LVU1408
 6508              	.LBE8142:
 6509              	.LBE8143:
 6510              	.LBE8144:
 6511              	.LBE8145:
 6512              	.LBE8148:
ARM GAS  /tmp/ccfXobHU.s 			page 506


 6513              	.LBE8135:
 6514              	.LBE8134:
 6515              	.LBB8149:
 6516              	.LBI8149:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 6517              		.loc 3 150 14 is_stmt 1 view .LVU1409
 6518              	.LBB8150:
 6519              	.LBI8150:
 6520              		.loc 6 153 7 view .LVU1410
 6521              	.LBB8151:
 6522              	.LBI8151:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6523              		.loc 5 89 7 view .LVU1411
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6524              		.loc 5 89 7 is_stmt 0 view .LVU1412
 6525              	.LBE8151:
 6526              	.LBE8150:
 6527              	.LBE8149:
 6528              	.LBE8133:
 6529              	.LBE8132:
 6530              		.loc 25 33 5 view .LVU1413
 6531 0078 AC42     		cmp	r4, r5
 6532 007a F5D1     		bne	.L267
  27:Mu/music/theory.h ****         {"1",  1},
 6533              		.loc 25 27 38 view .LVU1414
 6534 007c 9F4A     		ldr	r2, .L320+24
 6535 007e 94AC     		add	r4, sp, #592
 6536              	.LVL348:
  27:Mu/music/theory.h ****         {"1",  1},
 6537              		.loc 25 27 38 view .LVU1415
 6538 0080 9F49     		ldr	r1, .L320+28
 6539 0082 4CAE     		add	r6, sp, #304
 6540 0084 9C48     		ldr	r0, .L320+20
 6541 0086 FFF7FEFF 		bl	__aeabi_atexit
 6542              	.LVL349:
 6543              	.LBB8152:
 6544              	.LBI8152:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6545              		.loc 6 138 7 is_stmt 1 view .LVU1416
 6546              	.LBB8153:
 6547              	.LBI8153:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6548              		.loc 5 80 7 view .LVU1417
 6549              	.LBE8153:
 6550              	.LBE8152:
  34:Mu/music/theory.h **** 
  35:Mu/music/theory.h ****     // Note that the indices of these elements also correspond to
  36:Mu/music/theory.h ****     // their semitone distances from C.
  37:Mu/music/theory.h ****     const std::vector<std::string> allNotes {
  38:Mu/music/theory.h ****         "C",
  39:Mu/music/theory.h ****         "C#",
  40:Mu/music/theory.h ****         "D",
  41:Mu/music/theory.h ****         "D#",
  42:Mu/music/theory.h ****         "E",
  43:Mu/music/theory.h ****         "F",
  44:Mu/music/theory.h ****         "F#",
  45:Mu/music/theory.h ****         "G",
ARM GAS  /tmp/ccfXobHU.s 			page 507


  46:Mu/music/theory.h ****         "G#",
  47:Mu/music/theory.h ****         "A",
  48:Mu/music/theory.h ****         "A#",
  49:Mu/music/theory.h ****         "B"
  50:Mu/music/theory.h ****     };
 6551              		.loc 25 50 5 is_stmt 0 view .LVU1418
 6552 008a 9E49     		ldr	r1, .L320+32
 6553 008c 50A8     		add	r0, sp, #320
 6554 008e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6555              	.LVL350:
 6556              	.LBB8154:
 6557              	.LBI8154:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6558              		.loc 6 138 7 is_stmt 1 view .LVU1419
 6559              	.LBB8155:
 6560              	.LBI8155:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6561              		.loc 5 80 7 view .LVU1420
 6562              	.LBE8155:
 6563              	.LBE8154:
 6564              		.loc 25 50 5 is_stmt 0 view .LVU1421
 6565 0092 9D49     		ldr	r1, .L320+36
 6566 0094 56A8     		add	r0, sp, #344
 6567 0096 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6568              	.LVL351:
 6569              	.LBB8156:
 6570              	.LBI8156:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6571              		.loc 6 138 7 is_stmt 1 view .LVU1422
 6572              	.LBB8157:
 6573              	.LBI8157:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6574              		.loc 5 80 7 view .LVU1423
 6575              	.LBE8157:
 6576              	.LBE8156:
 6577              		.loc 25 50 5 is_stmt 0 view .LVU1424
 6578 009a 9C49     		ldr	r1, .L320+40
 6579 009c 5CA8     		add	r0, sp, #368
 6580 009e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6581              	.LVL352:
 6582              	.LBB8158:
 6583              	.LBI8158:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6584              		.loc 6 138 7 is_stmt 1 view .LVU1425
 6585              	.LBB8159:
 6586              	.LBI8159:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6587              		.loc 5 80 7 view .LVU1426
 6588              	.LBE8159:
 6589              	.LBE8158:
 6590              		.loc 25 50 5 is_stmt 0 view .LVU1427
 6591 00a2 9B49     		ldr	r1, .L320+44
 6592 00a4 62A8     		add	r0, sp, #392
 6593 00a6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6594              	.LVL353:
 6595              	.LBB8160:
 6596              	.LBI8160:
ARM GAS  /tmp/ccfXobHU.s 			page 508


 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6597              		.loc 6 138 7 is_stmt 1 view .LVU1428
 6598              	.LBB8161:
 6599              	.LBI8161:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6600              		.loc 5 80 7 view .LVU1429
 6601              	.LBE8161:
 6602              	.LBE8160:
 6603              		.loc 25 50 5 is_stmt 0 view .LVU1430
 6604 00aa 9A49     		ldr	r1, .L320+48
 6605 00ac 68A8     		add	r0, sp, #416
 6606 00ae FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6607              	.LVL354:
 6608              	.LBB8162:
 6609              	.LBI8162:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6610              		.loc 6 138 7 is_stmt 1 view .LVU1431
 6611              	.LBB8163:
 6612              	.LBI8163:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6613              		.loc 5 80 7 view .LVU1432
 6614              	.LBE8163:
 6615              	.LBE8162:
 6616              		.loc 25 50 5 is_stmt 0 view .LVU1433
 6617 00b2 9949     		ldr	r1, .L320+52
 6618 00b4 6EA8     		add	r0, sp, #440
 6619 00b6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6620              	.LVL355:
 6621              	.LBB8164:
 6622              	.LBI8164:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6623              		.loc 6 138 7 is_stmt 1 view .LVU1434
 6624              	.LBB8165:
 6625              	.LBI8165:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6626              		.loc 5 80 7 view .LVU1435
 6627              	.LBE8165:
 6628              	.LBE8164:
 6629              		.loc 25 50 5 is_stmt 0 view .LVU1436
 6630 00ba 9849     		ldr	r1, .L320+56
 6631 00bc 74A8     		add	r0, sp, #464
 6632 00be FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6633              	.LVL356:
 6634              	.LBB8166:
 6635              	.LBI8166:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6636              		.loc 6 138 7 is_stmt 1 view .LVU1437
 6637              	.LBB8167:
 6638              	.LBI8167:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6639              		.loc 5 80 7 view .LVU1438
 6640              	.LBE8167:
 6641              	.LBE8166:
 6642              		.loc 25 50 5 is_stmt 0 view .LVU1439
 6643 00c2 9749     		ldr	r1, .L320+60
 6644 00c4 7AA8     		add	r0, sp, #488
 6645 00c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
ARM GAS  /tmp/ccfXobHU.s 			page 509


 6646              	.LVL357:
 6647              	.LBB8168:
 6648              	.LBI8168:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6649              		.loc 6 138 7 is_stmt 1 view .LVU1440
 6650              	.LBB8169:
 6651              	.LBI8169:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6652              		.loc 5 80 7 view .LVU1441
 6653              	.LBE8169:
 6654              	.LBE8168:
 6655              		.loc 25 50 5 is_stmt 0 view .LVU1442
 6656 00ca 9649     		ldr	r1, .L320+64
 6657 00cc 80A8     		add	r0, sp, #512
 6658 00ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6659              	.LVL358:
 6660              	.LBB8170:
 6661              	.LBI8170:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6662              		.loc 6 138 7 is_stmt 1 view .LVU1443
 6663              	.LBB8171:
 6664              	.LBI8171:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6665              		.loc 5 80 7 view .LVU1444
 6666              	.LBE8171:
 6667              	.LBE8170:
 6668              		.loc 25 50 5 is_stmt 0 view .LVU1445
 6669 00d2 9549     		ldr	r1, .L320+68
 6670 00d4 86A8     		add	r0, sp, #536
 6671 00d6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6672              	.LVL359:
 6673              	.LBB8172:
 6674              	.LBI8172:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6675              		.loc 6 138 7 is_stmt 1 view .LVU1446
 6676              	.LBB8173:
 6677              	.LBI8173:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6678              		.loc 5 80 7 view .LVU1447
 6679              	.LBE8173:
 6680              	.LBE8172:
 6681              		.loc 25 50 5 is_stmt 0 view .LVU1448
 6682 00da 9449     		ldr	r1, .L320+72
 6683 00dc 8CA8     		add	r0, sp, #560
 6684 00de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6685              	.LVL360:
 6686              	.LBB8174:
 6687              	.LBI8174:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6688              		.loc 6 138 7 is_stmt 1 view .LVU1449
 6689              	.LBB8175:
 6690              	.LBI8175:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6691              		.loc 5 80 7 view .LVU1450
 6692              	.LBE8175:
 6693              	.LBE8174:
 6694              		.loc 25 50 5 is_stmt 0 view .LVU1451
ARM GAS  /tmp/ccfXobHU.s 			page 510


 6695 00e2 9349     		ldr	r1, .L320+76
 6696 00e4 92A8     		add	r0, sp, #584
 6697 00e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6698              	.LVL361:
 6699              	.LBB8176:
 6700              	.LBI8176:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6701              		.loc 6 138 7 is_stmt 1 view .LVU1452
 6702              	.LBB8177:
 6703              	.LBI8177:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6704              		.loc 5 80 7 view .LVU1453
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6705              		.loc 5 80 7 is_stmt 0 view .LVU1454
 6706              	.LBE8177:
 6707              	.LBE8176:
 6708              	.LBB8178:
 6709              	.LBI8178:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 6710              		.loc 1 622 7 is_stmt 1 view .LVU1455
 6711              	.LBB8179:
 6712              	.LBB8180:
 6713              	.LBI8180:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 6714              		.loc 1 290 7 view .LVU1456
 6715              	.LBB8181:
 6716              	.LBI8181:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 6717              		.loc 1 133 2 view .LVU1457
 6718              	.LBB8182:
 6719              	.LBI8182:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6720              		.loc 6 141 7 view .LVU1458
 6721              	.LBB8183:
 6722              	.LBI8183:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6723              		.loc 5 83 7 view .LVU1459
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6724              		.loc 5 83 7 is_stmt 0 view .LVU1460
 6725              	.LBE8183:
 6726              	.LBE8182:
 6727              	.LBB8184:
 6728              	.LBI8184:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 6729              		.loc 1 94 2 is_stmt 1 view .LVU1461
 6730              	.LBB8185:
 6731              	.LBB8186:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 6732              		.loc 1 95 47 is_stmt 0 view .LVU1462
 6733 00ea 9248     		ldr	r0, .L320+80
 6734 00ec 0023     		movs	r3, #0
 6735              	.LBE8186:
 6736              	.LBE8185:
 6737              	.LBE8184:
 6738              	.LBE8181:
 6739              	.LBE8180:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
ARM GAS  /tmp/ccfXobHU.s 			page 511


 6740              		.loc 1 626 2 view .LVU1463
 6741 00ee 98AA     		add	r2, sp, #608
 6742 00f0 50A9     		add	r1, sp, #320
 6743              	.LBB8195:
 6744              	.LBB8193:
 6745              	.LBB8191:
 6746              	.LBB8189:
 6747              	.LBB8187:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 6748              		.loc 1 95 47 view .LVU1464
 6749 00f2 8360     		str	r3, [r0, #8]
 6750              	.LVL362:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 6751              		.loc 1 95 47 view .LVU1465
 6752              	.LBE8187:
 6753              	.LBE8189:
 6754              	.LBE8191:
 6755              	.LBE8193:
 6756              	.LBE8195:
 6757              	.LBB8196:
 6758              	.LBI8196:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 6759              		.loc 23 75 7 is_stmt 1 view .LVU1466
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 6760              		.loc 23 75 7 is_stmt 0 view .LVU1467
 6761              	.LBE8196:
 6762              	.LBB8197:
 6763              	.LBI8197:
 6764              		.loc 23 79 7 is_stmt 1 view .LVU1468
 6765              		.loc 23 79 7 is_stmt 0 view .LVU1469
 6766              	.LBE8197:
 6767              	.LBB8198:
 6768              	.LBB8194:
 6769              	.LBB8192:
 6770              	.LBB8190:
 6771              	.LBB8188:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 6772              		.loc 1 95 47 view .LVU1470
 6773 00f4 C0E90033 		strd	r3, r3, [r0]
 6774              	.LBE8188:
 6775              	.LBE8190:
 6776              	.LBE8192:
 6777              	.LBE8194:
 6778              	.LBE8198:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 6779              		.loc 1 626 2 view .LVU1471
 6780 00f8 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeI
 6781              	.LVL363:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 6782              		.loc 1 626 2 view .LVU1472
 6783              	.LBE8179:
 6784              	.LBE8178:
 6785              	.LBB8199:
 6786              	.LBI8199:
 6787              		.loc 6 153 7 is_stmt 1 view .LVU1473
 6788              	.LBB8200:
 6789              	.LBI8200:
ARM GAS  /tmp/ccfXobHU.s 			page 512


  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6790              		.loc 5 89 7 view .LVU1474
 6791              	.L269:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6792              		.loc 5 89 7 is_stmt 0 view .LVU1475
 6793              	.LBE8200:
 6794              	.LBE8199:
 6795              	.LBB8201:
 6796              	.LBI8201:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 6797              		.loc 3 657 7 is_stmt 1 view .LVU1476
 6798              	.LBB8202:
 6799              	.LBI8202:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 6800              		.loc 3 229 7 view .LVU1477
 6801              	.LBB8203:
 6802              	.LBB8204:
 6803              	.LBI8204:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6804              		.loc 3 221 7 view .LVU1478
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6805              		.loc 3 221 7 is_stmt 0 view .LVU1479
 6806              	.LBE8204:
 6807              	.LBB8206:
 6808              	.LBI8206:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6809              		.loc 3 236 7 is_stmt 1 view .LVU1480
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6810              		.loc 3 236 7 is_stmt 0 view .LVU1481
 6811              	.LBE8206:
 6812              	.LBB8214:
 6813              	.LBB8205:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 6814              		.loc 3 222 26 view .LVU1482
 6815 00fc 54F8080C 		ldr	r0, [r4, #-8]
 6816              	.LVL364:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 6817              		.loc 3 222 26 view .LVU1483
 6818              	.LBE8205:
 6819              	.LBE8214:
 6820              	.LBB8215:
 6821              	.LBB8207:
 6822              	.LBB8208:
 6823              	.LBI8208:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6824              		.loc 4 469 7 is_stmt 1 view .LVU1484
 6825              	.LBB8209:
 6826              	.LBI8209:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 6827              		.loc 5 119 7 view .LVU1485
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 6828              		.loc 5 119 7 is_stmt 0 view .LVU1486
 6829              	.LBE8209:
 6830              	.LBE8208:
 6831              	.LBE8207:
 6832              	.LBE8215:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  /tmp/ccfXobHU.s 			page 513


 6833              		.loc 3 231 2 view .LVU1487
 6834 0100 A042     		cmp	r0, r4
 6835 0102 A4F11804 		sub	r4, r4, #24
 6836              	.LVL365:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6837              		.loc 3 231 2 view .LVU1488
 6838 0106 01D0     		beq	.L268
 6839              	.LBB8216:
 6840              	.LBB8213:
 6841              	.LBB8212:
 6842              	.LBB8211:
 6843              	.LBB8210:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 6844              		.loc 5 128 19 view .LVU1489
 6845 0108 FFF7FEFF 		bl	_ZdlPv
 6846              	.LVL366:
 6847              	.L268:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 6848              		.loc 5 128 19 view .LVU1490
 6849              	.LBE8210:
 6850              	.LBE8211:
 6851              	.LBE8212:
 6852              	.LBE8213:
 6853              	.LBE8216:
 6854              	.LBE8203:
 6855              	.LBE8202:
 6856              	.LBB8217:
 6857              	.LBI8217:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 6858              		.loc 3 150 14 is_stmt 1 view .LVU1491
 6859              	.LBB8218:
 6860              	.LBI8218:
 6861              		.loc 6 153 7 view .LVU1492
 6862              	.LBB8219:
 6863              	.LBI8219:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6864              		.loc 5 89 7 view .LVU1493
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6865              		.loc 5 89 7 is_stmt 0 view .LVU1494
 6866              	.LBE8219:
 6867              	.LBE8218:
 6868              	.LBE8217:
 6869              	.LBE8201:
 6870              		.loc 25 50 5 view .LVU1495
 6871 010c B442     		cmp	r4, r6
 6872 010e F5D1     		bne	.L269
 6873              	.LBB8220:
 6874              	.LBI8220:
 6875              		.loc 6 153 7 is_stmt 1 view .LVU1496
 6876              	.LBB8221:
 6877              	.LBI8221:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6878              		.loc 5 89 7 view .LVU1497
 6879              	.LBE8221:
 6880              	.LBE8220:
 6881              	.LBB8222:
 6882              	.LBI8222:
ARM GAS  /tmp/ccfXobHU.s 			page 514


 6883              		.loc 6 153 7 view .LVU1498
 6884              	.LBB8223:
 6885              	.LBI8223:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6886              		.loc 5 89 7 view .LVU1499
 6887              	.LBE8223:
 6888              	.LBE8222:
 6889              	.LBB8224:
 6890              	.LBI8224:
 6891              		.loc 6 153 7 view .LVU1500
 6892              	.LBB8225:
 6893              	.LBI8225:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6894              		.loc 5 89 7 view .LVU1501
 6895              	.LBE8225:
 6896              	.LBE8224:
 6897              	.LBB8226:
 6898              	.LBI8226:
 6899              		.loc 6 153 7 view .LVU1502
 6900              	.LBB8227:
 6901              	.LBI8227:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6902              		.loc 5 89 7 view .LVU1503
 6903              	.LBE8227:
 6904              	.LBE8226:
 6905              	.LBB8228:
 6906              	.LBI8228:
 6907              		.loc 6 153 7 view .LVU1504
 6908              	.LBB8229:
 6909              	.LBI8229:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6910              		.loc 5 89 7 view .LVU1505
 6911              	.LBE8229:
 6912              	.LBE8228:
 6913              	.LBB8230:
 6914              	.LBI8230:
 6915              		.loc 6 153 7 view .LVU1506
 6916              	.LBB8231:
 6917              	.LBI8231:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6918              		.loc 5 89 7 view .LVU1507
 6919              	.LBE8231:
 6920              	.LBE8230:
 6921              	.LBB8232:
 6922              	.LBI8232:
 6923              		.loc 6 153 7 view .LVU1508
 6924              	.LBB8233:
 6925              	.LBI8233:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6926              		.loc 5 89 7 view .LVU1509
 6927              	.LBE8233:
 6928              	.LBE8232:
 6929              	.LBB8234:
 6930              	.LBI8234:
 6931              		.loc 6 153 7 view .LVU1510
 6932              	.LBB8235:
 6933              	.LBI8235:
ARM GAS  /tmp/ccfXobHU.s 			page 515


  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6934              		.loc 5 89 7 view .LVU1511
 6935              	.LBE8235:
 6936              	.LBE8234:
 6937              	.LBB8236:
 6938              	.LBI8236:
 6939              		.loc 6 153 7 view .LVU1512
 6940              	.LBB8237:
 6941              	.LBI8237:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6942              		.loc 5 89 7 view .LVU1513
 6943              	.LBE8237:
 6944              	.LBE8236:
 6945              	.LBB8238:
 6946              	.LBI8238:
 6947              		.loc 6 153 7 view .LVU1514
 6948              	.LBB8239:
 6949              	.LBI8239:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6950              		.loc 5 89 7 view .LVU1515
 6951              	.LBE8239:
 6952              	.LBE8238:
 6953              	.LBB8240:
 6954              	.LBI8240:
 6955              		.loc 6 153 7 view .LVU1516
 6956              	.LBB8241:
 6957              	.LBI8241:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6958              		.loc 5 89 7 view .LVU1517
 6959              	.LBE8241:
 6960              	.LBE8240:
 6961              	.LBB8242:
 6962              	.LBI8242:
 6963              		.loc 6 153 7 view .LVU1518
 6964              	.LBB8243:
 6965              	.LBI8243:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6966              		.loc 5 89 7 view .LVU1519
 6967              	.LBE8243:
 6968              	.LBE8242:
  37:Mu/music/theory.h ****         "C",
 6969              		.loc 25 37 36 is_stmt 0 view .LVU1520
 6970 0110 7A4A     		ldr	r2, .L320+24
 6971 0112 0DF5DA64 		add	r4, sp, #1744
 6972              	.LVL367:
  37:Mu/music/theory.h ****         "C",
 6973              		.loc 25 37 36 view .LVU1521
 6974 0116 8849     		ldr	r1, .L320+84
 6975 0118 8648     		ldr	r0, .L320+80
 6976 011a FFF7FEFF 		bl	__aeabi_atexit
 6977              	.LVL368:
 6978              	.LBB8244:
 6979              	.LBI8244:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6980              		.loc 6 138 7 is_stmt 1 view .LVU1522
 6981              	.LBB8245:
 6982              	.LBI8245:
ARM GAS  /tmp/ccfXobHU.s 			page 516


  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6983              		.loc 5 80 7 view .LVU1523
 6984              	.LBE8245:
 6985              	.LBE8244:
  51:Mu/music/theory.h **** 
  52:Mu/music/theory.h ****     // Note that the indices of these elements also correspond to
  53:Mu/music/theory.h ****     // their semitone distances from C0.
  54:Mu/music/theory.h ****     const std::vector<std::string> allNotes5Oct {
  55:Mu/music/theory.h ****         "C0",
  56:Mu/music/theory.h ****         "C#0",
  57:Mu/music/theory.h ****         "D0",
  58:Mu/music/theory.h ****         "D#0",
  59:Mu/music/theory.h ****         "E0",
  60:Mu/music/theory.h ****         "F0",
  61:Mu/music/theory.h ****         "F#0",
  62:Mu/music/theory.h ****         "G0",
  63:Mu/music/theory.h ****         "G#0",
  64:Mu/music/theory.h ****         "A0",
  65:Mu/music/theory.h ****         "A#0",
  66:Mu/music/theory.h ****         "B0",
  67:Mu/music/theory.h ****         "C1",
  68:Mu/music/theory.h ****         "C#1",
  69:Mu/music/theory.h ****         "D1",
  70:Mu/music/theory.h ****         "D#1",
  71:Mu/music/theory.h ****         "E1",
  72:Mu/music/theory.h ****         "F1",
  73:Mu/music/theory.h ****         "F#1",
  74:Mu/music/theory.h ****         "G1",
  75:Mu/music/theory.h ****         "G#1",
  76:Mu/music/theory.h ****         "A1",
  77:Mu/music/theory.h ****         "A#1",
  78:Mu/music/theory.h ****         "B1",
  79:Mu/music/theory.h ****         "C2",
  80:Mu/music/theory.h ****         "C#2",
  81:Mu/music/theory.h ****         "D2",
  82:Mu/music/theory.h ****         "D#2",
  83:Mu/music/theory.h ****         "E2",
  84:Mu/music/theory.h ****         "F2",
  85:Mu/music/theory.h ****         "F#2",
  86:Mu/music/theory.h ****         "G2",
  87:Mu/music/theory.h ****         "G#2",
  88:Mu/music/theory.h ****         "A2",
  89:Mu/music/theory.h ****         "A#2",
  90:Mu/music/theory.h ****         "B2",
  91:Mu/music/theory.h ****         "C3",
  92:Mu/music/theory.h ****         "C#3",
  93:Mu/music/theory.h ****         "D3",
  94:Mu/music/theory.h ****         "D#3",
  95:Mu/music/theory.h ****         "E3",
  96:Mu/music/theory.h ****         "F3",
  97:Mu/music/theory.h ****         "F#3",
  98:Mu/music/theory.h ****         "G3",
  99:Mu/music/theory.h ****         "G#3",
 100:Mu/music/theory.h ****         "A3",
 101:Mu/music/theory.h ****         "A#3",
 102:Mu/music/theory.h ****         "B3",
 103:Mu/music/theory.h ****         "C4",
ARM GAS  /tmp/ccfXobHU.s 			page 517


 104:Mu/music/theory.h ****         "C#4",
 105:Mu/music/theory.h ****         "D4",
 106:Mu/music/theory.h ****         "D#4",
 107:Mu/music/theory.h ****         "E4",
 108:Mu/music/theory.h ****         "F4",
 109:Mu/music/theory.h ****         "F#4",
 110:Mu/music/theory.h ****         "G4",
 111:Mu/music/theory.h ****         "G#4",
 112:Mu/music/theory.h ****         "A4",
 113:Mu/music/theory.h ****         "A#4",
 114:Mu/music/theory.h ****         "B4"
 115:Mu/music/theory.h ****         // "C5" ??? TODO does this fit
 116:Mu/music/theory.h ****     };
 6986              		.loc 25 116 5 is_stmt 0 view .LVU1524
 6987 011e 8749     		ldr	r1, .L320+88
 6988 0120 50A8     		add	r0, sp, #320
 6989 0122 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 6990              	.LVL369:
 6991              	.LBB8246:
 6992              	.LBI8246:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 6993              		.loc 6 138 7 is_stmt 1 view .LVU1525
 6994              	.LBB8247:
 6995              	.LBI8247:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 6996              		.loc 5 80 7 view .LVU1526
 6997              	.LBE8247:
 6998              	.LBE8246:
 6999              		.loc 25 116 5 is_stmt 0 view .LVU1527
 7000 0126 8649     		ldr	r1, .L320+92
 7001 0128 56A8     		add	r0, sp, #344
 7002 012a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7003              	.LVL370:
 7004              	.LBB8248:
 7005              	.LBI8248:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7006              		.loc 6 138 7 is_stmt 1 view .LVU1528
 7007              	.LBB8249:
 7008              	.LBI8249:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7009              		.loc 5 80 7 view .LVU1529
 7010              	.LBE8249:
 7011              	.LBE8248:
 7012              		.loc 25 116 5 is_stmt 0 view .LVU1530
 7013 012e 8549     		ldr	r1, .L320+96
 7014 0130 5CA8     		add	r0, sp, #368
 7015 0132 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7016              	.LVL371:
 7017              	.LBB8250:
 7018              	.LBI8250:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7019              		.loc 6 138 7 is_stmt 1 view .LVU1531
 7020              	.LBB8251:
 7021              	.LBI8251:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7022              		.loc 5 80 7 view .LVU1532
 7023              	.LBE8251:
ARM GAS  /tmp/ccfXobHU.s 			page 518


 7024              	.LBE8250:
 7025              		.loc 25 116 5 is_stmt 0 view .LVU1533
 7026 0136 8449     		ldr	r1, .L320+100
 7027 0138 62A8     		add	r0, sp, #392
 7028 013a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7029              	.LVL372:
 7030              	.LBB8252:
 7031              	.LBI8252:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7032              		.loc 6 138 7 is_stmt 1 view .LVU1534
 7033              	.LBB8253:
 7034              	.LBI8253:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7035              		.loc 5 80 7 view .LVU1535
 7036              	.LBE8253:
 7037              	.LBE8252:
 7038              		.loc 25 116 5 is_stmt 0 view .LVU1536
 7039 013e 8349     		ldr	r1, .L320+104
 7040 0140 68A8     		add	r0, sp, #416
 7041 0142 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7042              	.LVL373:
 7043              	.LBB8254:
 7044              	.LBI8254:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7045              		.loc 6 138 7 is_stmt 1 view .LVU1537
 7046              	.LBB8255:
 7047              	.LBI8255:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7048              		.loc 5 80 7 view .LVU1538
 7049              	.LBE8255:
 7050              	.LBE8254:
 7051              		.loc 25 116 5 is_stmt 0 view .LVU1539
 7052 0146 8249     		ldr	r1, .L320+108
 7053 0148 6EA8     		add	r0, sp, #440
 7054 014a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7055              	.LVL374:
 7056              	.LBB8256:
 7057              	.LBI8256:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7058              		.loc 6 138 7 is_stmt 1 view .LVU1540
 7059              	.LBB8257:
 7060              	.LBI8257:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7061              		.loc 5 80 7 view .LVU1541
 7062              	.LBE8257:
 7063              	.LBE8256:
 7064              		.loc 25 116 5 is_stmt 0 view .LVU1542
 7065 014e 8149     		ldr	r1, .L320+112
 7066 0150 74A8     		add	r0, sp, #464
 7067 0152 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7068              	.LVL375:
 7069              	.LBB8258:
 7070              	.LBI8258:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7071              		.loc 6 138 7 is_stmt 1 view .LVU1543
 7072              	.LBB8259:
 7073              	.LBI8259:
ARM GAS  /tmp/ccfXobHU.s 			page 519


  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7074              		.loc 5 80 7 view .LVU1544
 7075              	.LBE8259:
 7076              	.LBE8258:
 7077              		.loc 25 116 5 is_stmt 0 view .LVU1545
 7078 0156 8049     		ldr	r1, .L320+116
 7079 0158 7AA8     		add	r0, sp, #488
 7080 015a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7081              	.LVL376:
 7082              	.LBB8260:
 7083              	.LBI8260:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7084              		.loc 6 138 7 is_stmt 1 view .LVU1546
 7085              	.LBB8261:
 7086              	.LBI8261:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7087              		.loc 5 80 7 view .LVU1547
 7088              	.LBE8261:
 7089              	.LBE8260:
 7090              		.loc 25 116 5 is_stmt 0 view .LVU1548
 7091 015e 7F49     		ldr	r1, .L320+120
 7092 0160 80A8     		add	r0, sp, #512
 7093 0162 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7094              	.LVL377:
 7095              	.LBB8262:
 7096              	.LBI8262:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7097              		.loc 6 138 7 is_stmt 1 view .LVU1549
 7098              	.LBB8263:
 7099              	.LBI8263:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7100              		.loc 5 80 7 view .LVU1550
 7101              	.LBE8263:
 7102              	.LBE8262:
 7103              		.loc 25 116 5 is_stmt 0 view .LVU1551
 7104 0166 7E49     		ldr	r1, .L320+124
 7105 0168 86A8     		add	r0, sp, #536
 7106 016a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7107              	.LVL378:
 7108              	.LBB8264:
 7109              	.LBI8264:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7110              		.loc 6 138 7 is_stmt 1 view .LVU1552
 7111              	.LBB8265:
 7112              	.LBI8265:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7113              		.loc 5 80 7 view .LVU1553
 7114              	.LBE8265:
 7115              	.LBE8264:
 7116              		.loc 25 116 5 is_stmt 0 view .LVU1554
 7117 016e 7D49     		ldr	r1, .L320+128
 7118 0170 8CA8     		add	r0, sp, #560
 7119 0172 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7120              	.LVL379:
 7121              	.LBB8266:
 7122              	.LBI8266:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 520


 7123              		.loc 6 138 7 is_stmt 1 view .LVU1555
 7124              	.LBB8267:
 7125              	.LBI8267:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7126              		.loc 5 80 7 view .LVU1556
 7127              	.LBE8267:
 7128              	.LBE8266:
 7129              		.loc 25 116 5 is_stmt 0 view .LVU1557
 7130 0176 7C49     		ldr	r1, .L320+132
 7131 0178 92A8     		add	r0, sp, #584
 7132 017a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7133              	.LVL380:
 7134              	.LBB8268:
 7135              	.LBI8268:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7136              		.loc 6 138 7 is_stmt 1 view .LVU1558
 7137              	.LBB8269:
 7138              	.LBI8269:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7139              		.loc 5 80 7 view .LVU1559
 7140              	.LBE8269:
 7141              	.LBE8268:
 7142              		.loc 25 116 5 is_stmt 0 view .LVU1560
 7143 017e 7B49     		ldr	r1, .L320+136
 7144 0180 98A8     		add	r0, sp, #608
 7145 0182 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7146              	.LVL381:
 7147              	.LBB8270:
 7148              	.LBI8270:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7149              		.loc 6 138 7 is_stmt 1 view .LVU1561
 7150              	.LBB8271:
 7151              	.LBI8271:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7152              		.loc 5 80 7 view .LVU1562
 7153              	.LBE8271:
 7154              	.LBE8270:
 7155              		.loc 25 116 5 is_stmt 0 view .LVU1563
 7156 0186 7A49     		ldr	r1, .L320+140
 7157 0188 9EA8     		add	r0, sp, #632
 7158 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7159              	.LVL382:
 7160              	.LBB8272:
 7161              	.LBI8272:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7162              		.loc 6 138 7 is_stmt 1 view .LVU1564
 7163              	.LBB8273:
 7164              	.LBI8273:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7165              		.loc 5 80 7 view .LVU1565
 7166              	.LBE8273:
 7167              	.LBE8272:
 7168              		.loc 25 116 5 is_stmt 0 view .LVU1566
 7169 018e 7949     		ldr	r1, .L320+144
 7170 0190 A4A8     		add	r0, sp, #656
 7171 0192 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7172              	.LVL383:
ARM GAS  /tmp/ccfXobHU.s 			page 521


 7173              	.LBB8274:
 7174              	.LBI8274:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7175              		.loc 6 138 7 is_stmt 1 view .LVU1567
 7176              	.LBB8275:
 7177              	.LBI8275:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7178              		.loc 5 80 7 view .LVU1568
 7179              	.LBE8275:
 7180              	.LBE8274:
 7181              		.loc 25 116 5 is_stmt 0 view .LVU1569
 7182 0196 7849     		ldr	r1, .L320+148
 7183 0198 AAA8     		add	r0, sp, #680
 7184 019a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7185              	.LVL384:
 7186              	.LBB8276:
 7187              	.LBI8276:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7188              		.loc 6 138 7 is_stmt 1 view .LVU1570
 7189              	.LBB8277:
 7190              	.LBI8277:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7191              		.loc 5 80 7 view .LVU1571
 7192              	.LBE8277:
 7193              	.LBE8276:
 7194              		.loc 25 116 5 is_stmt 0 view .LVU1572
 7195 019e 7749     		ldr	r1, .L320+152
 7196 01a0 B0A8     		add	r0, sp, #704
 7197 01a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7198              	.LVL385:
 7199              	.LBB8278:
 7200              	.LBI8278:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7201              		.loc 6 138 7 is_stmt 1 view .LVU1573
 7202              	.LBB8279:
 7203              	.LBI8279:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7204              		.loc 5 80 7 view .LVU1574
 7205              	.LBE8279:
 7206              	.LBE8278:
 7207              		.loc 25 116 5 is_stmt 0 view .LVU1575
 7208 01a6 7649     		ldr	r1, .L320+156
 7209 01a8 B6A8     		add	r0, sp, #728
 7210 01aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7211              	.LVL386:
 7212              	.LBB8280:
 7213              	.LBI8280:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7214              		.loc 6 138 7 is_stmt 1 view .LVU1576
 7215              	.LBB8281:
 7216              	.LBI8281:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7217              		.loc 5 80 7 view .LVU1577
 7218              	.LBE8281:
 7219              	.LBE8280:
 7220              		.loc 25 116 5 is_stmt 0 view .LVU1578
 7221 01ae 7549     		ldr	r1, .L320+160
ARM GAS  /tmp/ccfXobHU.s 			page 522


 7222 01b0 BCA8     		add	r0, sp, #752
 7223 01b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7224              	.LVL387:
 7225              	.LBB8282:
 7226              	.LBI8282:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7227              		.loc 6 138 7 is_stmt 1 view .LVU1579
 7228              	.LBB8283:
 7229              	.LBI8283:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7230              		.loc 5 80 7 view .LVU1580
 7231              	.LBE8283:
 7232              	.LBE8282:
 7233              		.loc 25 116 5 is_stmt 0 view .LVU1581
 7234 01b6 7449     		ldr	r1, .L320+164
 7235 01b8 C2A8     		add	r0, sp, #776
 7236 01ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7237              	.LVL388:
 7238              	.LBB8284:
 7239              	.LBI8284:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7240              		.loc 6 138 7 is_stmt 1 view .LVU1582
 7241              	.LBB8285:
 7242              	.LBI8285:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7243              		.loc 5 80 7 view .LVU1583
 7244              	.LBE8285:
 7245              	.LBE8284:
 7246              		.loc 25 116 5 is_stmt 0 view .LVU1584
 7247 01be 7349     		ldr	r1, .L320+168
 7248 01c0 C8A8     		add	r0, sp, #800
 7249 01c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7250              	.LVL389:
 7251              	.LBB8286:
 7252              	.LBI8286:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7253              		.loc 6 138 7 is_stmt 1 view .LVU1585
 7254              	.LBB8287:
 7255              	.LBI8287:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7256              		.loc 5 80 7 view .LVU1586
 7257              	.LBE8287:
 7258              	.LBE8286:
 7259              		.loc 25 116 5 is_stmt 0 view .LVU1587
 7260 01c6 7249     		ldr	r1, .L320+172
 7261 01c8 CEA8     		add	r0, sp, #824
 7262 01ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7263              	.LVL390:
 7264              	.LBB8288:
 7265              	.LBI8288:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7266              		.loc 6 138 7 is_stmt 1 view .LVU1588
 7267              	.LBB8289:
 7268              	.LBI8289:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7269              		.loc 5 80 7 view .LVU1589
 7270              	.LBE8289:
ARM GAS  /tmp/ccfXobHU.s 			page 523


 7271              	.LBE8288:
 7272              		.loc 25 116 5 is_stmt 0 view .LVU1590
 7273 01ce 7149     		ldr	r1, .L320+176
 7274 01d0 D4A8     		add	r0, sp, #848
 7275 01d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7276              	.LVL391:
 7277              	.LBB8290:
 7278              	.LBI8290:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7279              		.loc 6 138 7 is_stmt 1 view .LVU1591
 7280              	.LBB8291:
 7281              	.LBI8291:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7282              		.loc 5 80 7 view .LVU1592
 7283              	.LBE8291:
 7284              	.LBE8290:
 7285              		.loc 25 116 5 is_stmt 0 view .LVU1593
 7286 01d6 7049     		ldr	r1, .L320+180
 7287 01d8 DAA8     		add	r0, sp, #872
 7288 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7289              	.LVL392:
 7290              	.LBB8292:
 7291              	.LBI8292:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7292              		.loc 6 138 7 is_stmt 1 view .LVU1594
 7293              	.LBB8293:
 7294              	.LBI8293:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7295              		.loc 5 80 7 view .LVU1595
 7296              	.LBE8293:
 7297              	.LBE8292:
 7298              		.loc 25 116 5 is_stmt 0 view .LVU1596
 7299 01de 6F49     		ldr	r1, .L320+184
 7300 01e0 E0A8     		add	r0, sp, #896
 7301 01e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7302              	.LVL393:
 7303              	.LBB8294:
 7304              	.LBI8294:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7305              		.loc 6 138 7 is_stmt 1 view .LVU1597
 7306              	.LBB8295:
 7307              	.LBI8295:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7308              		.loc 5 80 7 view .LVU1598
 7309              	.LBE8295:
 7310              	.LBE8294:
 7311              		.loc 25 116 5 is_stmt 0 view .LVU1599
 7312 01e6 6E49     		ldr	r1, .L320+188
 7313 01e8 E6A8     		add	r0, sp, #920
 7314 01ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7315              	.LVL394:
 7316              	.LBB8296:
 7317              	.LBI8296:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7318              		.loc 6 138 7 is_stmt 1 view .LVU1600
 7319              	.LBB8297:
 7320              	.LBI8297:
ARM GAS  /tmp/ccfXobHU.s 			page 524


  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7321              		.loc 5 80 7 view .LVU1601
 7322              	.LBE8297:
 7323              	.LBE8296:
 7324              		.loc 25 116 5 is_stmt 0 view .LVU1602
 7325 01ee 6D49     		ldr	r1, .L320+192
 7326 01f0 ECA8     		add	r0, sp, #944
 7327 01f2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7328              	.LVL395:
 7329              	.LBB8298:
 7330              	.LBI8298:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7331              		.loc 6 138 7 is_stmt 1 view .LVU1603
 7332              	.LBB8299:
 7333              	.LBI8299:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7334              		.loc 5 80 7 view .LVU1604
 7335              	.LBE8299:
 7336              	.LBE8298:
 7337              		.loc 25 116 5 is_stmt 0 view .LVU1605
 7338 01f6 6C49     		ldr	r1, .L320+196
 7339 01f8 F2A8     		add	r0, sp, #968
 7340 01fa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7341              	.LVL396:
 7342              	.LBB8300:
 7343              	.LBI8300:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7344              		.loc 6 138 7 is_stmt 1 view .LVU1606
 7345              	.LBB8301:
 7346              	.LBI8301:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7347              		.loc 5 80 7 view .LVU1607
 7348              	.LBE8301:
 7349              	.LBE8300:
 7350              		.loc 25 116 5 is_stmt 0 view .LVU1608
 7351 01fe 6B49     		ldr	r1, .L320+200
 7352 0200 F8A8     		add	r0, sp, #992
 7353 0202 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7354              	.LVL397:
 7355              	.LBB8302:
 7356              	.LBI8302:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7357              		.loc 6 138 7 is_stmt 1 view .LVU1609
 7358              	.LBB8303:
 7359              	.LBI8303:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7360              		.loc 5 80 7 view .LVU1610
 7361              	.LBE8303:
 7362              	.LBE8302:
 7363              		.loc 25 116 5 is_stmt 0 view .LVU1611
 7364 0206 6A49     		ldr	r1, .L320+204
 7365 0208 FEA8     		add	r0, sp, #1016
 7366 020a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7367              	.LVL398:
 7368              	.LBB8304:
 7369              	.LBI8304:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 525


 7370              		.loc 6 138 7 is_stmt 1 view .LVU1612
 7371              	.LBB8305:
 7372              	.LBI8305:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7373              		.loc 5 80 7 view .LVU1613
 7374              	.LBE8305:
 7375              	.LBE8304:
 7376              		.loc 25 116 5 is_stmt 0 view .LVU1614
 7377 020e 6949     		ldr	r1, .L320+208
 7378 0210 0DF58260 		add	r0, sp, #1040
 7379 0214 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7380              	.LVL399:
 7381              	.LBB8306:
 7382              	.LBI8306:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7383              		.loc 6 138 7 is_stmt 1 view .LVU1615
 7384              	.LBB8307:
 7385              	.LBI8307:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7386              		.loc 5 80 7 view .LVU1616
 7387              	.LBE8307:
 7388              	.LBE8306:
 7389              		.loc 25 116 5 is_stmt 0 view .LVU1617
 7390 0218 6749     		ldr	r1, .L320+212
 7391 021a 0DF58560 		add	r0, sp, #1064
 7392 021e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7393              	.LVL400:
 7394              	.LBB8308:
 7395              	.LBI8308:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7396              		.loc 6 138 7 is_stmt 1 view .LVU1618
 7397              	.LBB8309:
 7398              	.LBI8309:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7399              		.loc 5 80 7 view .LVU1619
 7400              	.LBE8309:
 7401              	.LBE8308:
 7402              		.loc 25 116 5 is_stmt 0 view .LVU1620
 7403 0222 6649     		ldr	r1, .L320+216
 7404 0224 0DF58860 		add	r0, sp, #1088
 7405 0228 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7406              	.LVL401:
 7407              	.LBB8310:
 7408              	.LBI8310:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7409              		.loc 6 138 7 is_stmt 1 view .LVU1621
 7410              	.LBB8311:
 7411              	.LBI8311:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7412              		.loc 5 80 7 view .LVU1622
 7413              	.LBE8311:
 7414              	.LBE8310:
 7415              		.loc 25 116 5 is_stmt 0 view .LVU1623
 7416 022c 6449     		ldr	r1, .L320+220
 7417 022e 0DF58B60 		add	r0, sp, #1112
 7418 0232 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7419              	.LVL402:
ARM GAS  /tmp/ccfXobHU.s 			page 526


 7420              	.LBB8312:
 7421              	.LBI8312:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7422              		.loc 6 138 7 is_stmt 1 view .LVU1624
 7423              	.LBB8313:
 7424              	.LBI8313:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7425              		.loc 5 80 7 view .LVU1625
 7426              	.LBE8313:
 7427              	.LBE8312:
 7428              		.loc 25 116 5 is_stmt 0 view .LVU1626
 7429 0236 6349     		ldr	r1, .L320+224
 7430 0238 0DF58E60 		add	r0, sp, #1136
 7431 023c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7432              	.LVL403:
 7433              	.LBB8314:
 7434              	.LBI8314:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7435              		.loc 6 138 7 is_stmt 1 view .LVU1627
 7436              	.LBB8315:
 7437              	.LBI8315:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7438              		.loc 5 80 7 view .LVU1628
 7439              	.LBE8315:
 7440              	.LBE8314:
 7441              		.loc 25 116 5 is_stmt 0 view .LVU1629
 7442 0240 6149     		ldr	r1, .L320+228
 7443 0242 0DF59160 		add	r0, sp, #1160
 7444 0246 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7445              	.LVL404:
 7446              	.LBB8316:
 7447              	.LBI8316:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7448              		.loc 6 138 7 is_stmt 1 view .LVU1630
 7449              	.LBB8317:
 7450              	.LBI8317:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7451              		.loc 5 80 7 view .LVU1631
 7452              	.LBE8317:
 7453              	.LBE8316:
 7454              		.loc 25 116 5 is_stmt 0 view .LVU1632
 7455 024a 6049     		ldr	r1, .L320+232
 7456 024c 0DF59460 		add	r0, sp, #1184
 7457 0250 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7458              	.LVL405:
 7459              	.LBB8318:
 7460              	.LBI8318:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7461              		.loc 6 138 7 is_stmt 1 view .LVU1633
 7462              	.LBB8319:
 7463              	.LBI8319:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7464              		.loc 5 80 7 view .LVU1634
 7465              	.LBE8319:
 7466              	.LBE8318:
 7467              		.loc 25 116 5 is_stmt 0 view .LVU1635
 7468 0254 5E49     		ldr	r1, .L320+236
ARM GAS  /tmp/ccfXobHU.s 			page 527


 7469 0256 0DF59760 		add	r0, sp, #1208
 7470 025a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7471              	.LVL406:
 7472              	.LBB8320:
 7473              	.LBI8320:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7474              		.loc 6 138 7 is_stmt 1 view .LVU1636
 7475              	.LBB8321:
 7476              	.LBI8321:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7477              		.loc 5 80 7 view .LVU1637
 7478              	.LBE8321:
 7479              	.LBE8320:
 7480              		.loc 25 116 5 is_stmt 0 view .LVU1638
 7481 025e 5D49     		ldr	r1, .L320+240
 7482 0260 0DF59A60 		add	r0, sp, #1232
 7483 0264 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7484              	.LVL407:
 7485              	.LBB8322:
 7486              	.LBI8322:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7487              		.loc 6 138 7 is_stmt 1 view .LVU1639
 7488              	.LBB8323:
 7489              	.LBI8323:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7490              		.loc 5 80 7 view .LVU1640
 7491              	.LBE8323:
 7492              	.LBE8322:
 7493              		.loc 25 116 5 is_stmt 0 view .LVU1641
 7494 0268 5B49     		ldr	r1, .L320+244
 7495 026a 0DF59D60 		add	r0, sp, #1256
 7496 026e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7497              	.LVL408:
 7498              	.LBB8324:
 7499              	.LBI8324:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7500              		.loc 6 138 7 is_stmt 1 view .LVU1642
 7501              	.LBB8325:
 7502              	.LBI8325:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7503              		.loc 5 80 7 view .LVU1643
 7504              	.LBE8325:
 7505              	.LBE8324:
 7506              		.loc 25 116 5 is_stmt 0 view .LVU1644
 7507 0272 5A49     		ldr	r1, .L320+248
 7508 0274 0DF5A060 		add	r0, sp, #1280
 7509 0278 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7510              	.LVL409:
 7511              	.LBB8326:
 7512              	.LBI8326:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7513              		.loc 6 138 7 is_stmt 1 view .LVU1645
 7514              	.LBB8327:
 7515              	.LBI8327:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7516              		.loc 5 80 7 view .LVU1646
 7517              	.LBE8327:
ARM GAS  /tmp/ccfXobHU.s 			page 528


 7518              	.LBE8326:
 7519              		.loc 25 116 5 is_stmt 0 view .LVU1647
 7520 027c 5849     		ldr	r1, .L320+252
 7521 027e 0DF5A360 		add	r0, sp, #1304
 7522 0282 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7523              	.LVL410:
 7524              	.LBB8328:
 7525              	.LBI8328:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7526              		.loc 6 138 7 is_stmt 1 view .LVU1648
 7527              	.LBB8329:
 7528              	.LBI8329:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7529              		.loc 5 80 7 view .LVU1649
 7530              	.LBE8329:
 7531              	.LBE8328:
 7532              		.loc 25 116 5 is_stmt 0 view .LVU1650
 7533 0286 5749     		ldr	r1, .L320+256
 7534 0288 0DF5A660 		add	r0, sp, #1328
 7535 028c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7536              	.LVL411:
 7537              	.LBB8330:
 7538              	.LBI8330:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7539              		.loc 6 138 7 is_stmt 1 view .LVU1651
 7540              	.LBB8331:
 7541              	.LBI8331:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7542              		.loc 5 80 7 view .LVU1652
 7543              	.LBE8331:
 7544              	.LBE8330:
 7545              		.loc 25 116 5 is_stmt 0 view .LVU1653
 7546 0290 5549     		ldr	r1, .L320+260
 7547 0292 0DF5A960 		add	r0, sp, #1352
 7548 0296 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7549              	.LVL412:
 7550              	.LBB8332:
 7551              	.LBI8332:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7552              		.loc 6 138 7 is_stmt 1 view .LVU1654
 7553              	.LBB8333:
 7554              	.LBI8333:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7555              		.loc 5 80 7 view .LVU1655
 7556              	.LBE8333:
 7557              	.LBE8332:
 7558              		.loc 25 116 5 is_stmt 0 view .LVU1656
 7559 029a 5449     		ldr	r1, .L320+264
 7560 029c 0DF5AC60 		add	r0, sp, #1376
 7561 02a0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7562              	.LVL413:
 7563              	.LBB8334:
 7564              	.LBI8334:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7565              		.loc 6 138 7 is_stmt 1 view .LVU1657
 7566              	.LBB8335:
 7567              	.LBI8335:
ARM GAS  /tmp/ccfXobHU.s 			page 529


  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7568              		.loc 5 80 7 view .LVU1658
 7569              	.LBE8335:
 7570              	.LBE8334:
 7571              		.loc 25 116 5 is_stmt 0 view .LVU1659
 7572 02a4 5249     		ldr	r1, .L320+268
 7573 02a6 0DF5AF60 		add	r0, sp, #1400
 7574 02aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7575              	.LVL414:
 7576              	.LBB8336:
 7577              	.LBI8336:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7578              		.loc 6 138 7 is_stmt 1 view .LVU1660
 7579              	.LBB8337:
 7580              	.LBI8337:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7581              		.loc 5 80 7 view .LVU1661
 7582              	.LBE8337:
 7583              	.LBE8336:
 7584              		.loc 25 116 5 is_stmt 0 view .LVU1662
 7585 02ae 5149     		ldr	r1, .L320+272
 7586 02b0 0DF5B260 		add	r0, sp, #1424
 7587 02b4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7588              	.LVL415:
 7589              	.LBB8338:
 7590              	.LBI8338:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7591              		.loc 6 138 7 is_stmt 1 view .LVU1663
 7592              	.LBB8339:
 7593              	.LBI8339:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7594              		.loc 5 80 7 view .LVU1664
 7595              	.LBE8339:
 7596              	.LBE8338:
 7597              		.loc 25 116 5 is_stmt 0 view .LVU1665
 7598 02b8 4F49     		ldr	r1, .L320+276
 7599 02ba 0DF5B560 		add	r0, sp, #1448
 7600 02be FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7601              	.LVL416:
 7602              	.LBB8340:
 7603              	.LBI8340:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7604              		.loc 6 138 7 is_stmt 1 view .LVU1666
 7605              	.LBB8341:
 7606              	.LBI8341:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7607              		.loc 5 80 7 view .LVU1667
 7608              	.LBE8341:
 7609              	.LBE8340:
 7610              		.loc 25 116 5 is_stmt 0 view .LVU1668
 7611 02c2 4E49     		ldr	r1, .L320+280
 7612 02c4 0DF5B860 		add	r0, sp, #1472
 7613 02c8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7614              	.LVL417:
 7615              	.LBB8342:
 7616              	.LBI8342:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 530


 7617              		.loc 6 138 7 is_stmt 1 view .LVU1669
 7618              	.LBB8343:
 7619              	.LBI8343:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7620              		.loc 5 80 7 view .LVU1670
 7621              	.LBE8343:
 7622              	.LBE8342:
 7623              		.loc 25 116 5 is_stmt 0 view .LVU1671
 7624 02cc 4C49     		ldr	r1, .L320+284
 7625 02ce 0DF5BB60 		add	r0, sp, #1496
 7626 02d2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7627              	.LVL418:
 7628              	.LBB8344:
 7629              	.LBI8344:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7630              		.loc 6 138 7 is_stmt 1 view .LVU1672
 7631              	.LBB8345:
 7632              	.LBI8345:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7633              		.loc 5 80 7 view .LVU1673
 7634              	.LBE8345:
 7635              	.LBE8344:
 7636              		.loc 25 116 5 is_stmt 0 view .LVU1674
 7637 02d6 4B49     		ldr	r1, .L320+288
 7638 02d8 0DF5BE60 		add	r0, sp, #1520
 7639 02dc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7640              	.LVL419:
 7641 02e0 92E0     		b	.L321
 7642              	.L322:
 7643 02e2 00BF     		.align	2
 7644              	.L320:
 7645 02e4 00000000 		.word	.LC10
 7646 02e8 04000000 		.word	.LC11
 7647 02ec 08000000 		.word	.LC12
 7648 02f0 0C000000 		.word	.LC13
 7649 02f4 10000000 		.word	.LC14
 7650 02f8 00000000 		.word	.LANCHOR1
 7651 02fc 00000000 		.word	__dso_handle
 7652 0300 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iE
 7653 0304 14000000 		.word	.LC15
 7654 0308 18000000 		.word	.LC16
 7655 030c 1C000000 		.word	.LC17
 7656 0310 20000000 		.word	.LC18
 7657 0314 24000000 		.word	.LC19
 7658 0318 28000000 		.word	.LC20
 7659 031c 2C000000 		.word	.LC21
 7660 0320 30000000 		.word	.LC22
 7661 0324 34000000 		.word	.LC23
 7662 0328 38000000 		.word	.LC24
 7663 032c 3C000000 		.word	.LC25
 7664 0330 40000000 		.word	.LC26
 7665 0334 00000000 		.word	.LANCHOR2
 7666 0338 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 7667 033c 44000000 		.word	.LC27
 7668 0340 48000000 		.word	.LC28
 7669 0344 4C000000 		.word	.LC29
 7670 0348 50000000 		.word	.LC30
ARM GAS  /tmp/ccfXobHU.s 			page 531


 7671 034c 54000000 		.word	.LC31
 7672 0350 58000000 		.word	.LC32
 7673 0354 5C000000 		.word	.LC33
 7674 0358 60000000 		.word	.LC34
 7675 035c 64000000 		.word	.LC35
 7676 0360 68000000 		.word	.LC36
 7677 0364 6C000000 		.word	.LC37
 7678 0368 70000000 		.word	.LC38
 7679 036c 74000000 		.word	.LC39
 7680 0370 78000000 		.word	.LC40
 7681 0374 7C000000 		.word	.LC41
 7682 0378 80000000 		.word	.LC42
 7683 037c 84000000 		.word	.LC43
 7684 0380 88000000 		.word	.LC44
 7685 0384 8C000000 		.word	.LC45
 7686 0388 90000000 		.word	.LC46
 7687 038c 94000000 		.word	.LC47
 7688 0390 98000000 		.word	.LC48
 7689 0394 9C000000 		.word	.LC49
 7690 0398 A0000000 		.word	.LC50
 7691 039c A4000000 		.word	.LC51
 7692 03a0 A8000000 		.word	.LC52
 7693 03a4 AC000000 		.word	.LC53
 7694 03a8 B0000000 		.word	.LC54
 7695 03ac B4000000 		.word	.LC55
 7696 03b0 B8000000 		.word	.LC56
 7697 03b4 BC000000 		.word	.LC57
 7698 03b8 C0000000 		.word	.LC58
 7699 03bc C4000000 		.word	.LC59
 7700 03c0 C8000000 		.word	.LC60
 7701 03c4 CC000000 		.word	.LC61
 7702 03c8 D0000000 		.word	.LC62
 7703 03cc D4000000 		.word	.LC63
 7704 03d0 D8000000 		.word	.LC64
 7705 03d4 DC000000 		.word	.LC65
 7706 03d8 E0000000 		.word	.LC66
 7707 03dc E4000000 		.word	.LC67
 7708 03e0 E8000000 		.word	.LC68
 7709 03e4 EC000000 		.word	.LC69
 7710 03e8 F0000000 		.word	.LC70
 7711 03ec F4000000 		.word	.LC71
 7712 03f0 F8000000 		.word	.LC72
 7713 03f4 FC000000 		.word	.LC73
 7714 03f8 00010000 		.word	.LC74
 7715 03fc 04010000 		.word	.LC75
 7716 0400 08010000 		.word	.LC76
 7717 0404 0C010000 		.word	.LC77
 7718              	.L321:
 7719              	.LBB8346:
 7720              	.LBI8346:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7721              		.loc 6 138 7 is_stmt 1 view .LVU1675
 7722              	.LBB8347:
 7723              	.LBI8347:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7724              		.loc 5 80 7 view .LVU1676
 7725              	.LBE8347:
ARM GAS  /tmp/ccfXobHU.s 			page 532


 7726              	.LBE8346:
 7727              		.loc 25 116 5 is_stmt 0 view .LVU1677
 7728 0408 AD49     		ldr	r1, .L323
 7729 040a 0DF5C160 		add	r0, sp, #1544
 7730 040e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7731              	.LVL420:
 7732              	.LBB8348:
 7733              	.LBI8348:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7734              		.loc 6 138 7 is_stmt 1 view .LVU1678
 7735              	.LBB8349:
 7736              	.LBI8349:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7737              		.loc 5 80 7 view .LVU1679
 7738              	.LBE8349:
 7739              	.LBE8348:
 7740              		.loc 25 116 5 is_stmt 0 view .LVU1680
 7741 0412 AC49     		ldr	r1, .L323+4
 7742 0414 0DF5C460 		add	r0, sp, #1568
 7743 0418 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7744              	.LVL421:
 7745              	.LBB8350:
 7746              	.LBI8350:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7747              		.loc 6 138 7 is_stmt 1 view .LVU1681
 7748              	.LBB8351:
 7749              	.LBI8351:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7750              		.loc 5 80 7 view .LVU1682
 7751              	.LBE8351:
 7752              	.LBE8350:
 7753              		.loc 25 116 5 is_stmt 0 view .LVU1683
 7754 041c AA49     		ldr	r1, .L323+8
 7755 041e 0DF5C760 		add	r0, sp, #1592
 7756 0422 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7757              	.LVL422:
 7758              	.LBB8352:
 7759              	.LBI8352:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7760              		.loc 6 138 7 is_stmt 1 view .LVU1684
 7761              	.LBB8353:
 7762              	.LBI8353:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7763              		.loc 5 80 7 view .LVU1685
 7764              	.LBE8353:
 7765              	.LBE8352:
 7766              		.loc 25 116 5 is_stmt 0 view .LVU1686
 7767 0426 A949     		ldr	r1, .L323+12
 7768 0428 0DF5CA60 		add	r0, sp, #1616
 7769 042c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7770              	.LVL423:
 7771              	.LBB8354:
 7772              	.LBI8354:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7773              		.loc 6 138 7 is_stmt 1 view .LVU1687
 7774              	.LBB8355:
 7775              	.LBI8355:
ARM GAS  /tmp/ccfXobHU.s 			page 533


  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7776              		.loc 5 80 7 view .LVU1688
 7777              	.LBE8355:
 7778              	.LBE8354:
 7779              		.loc 25 116 5 is_stmt 0 view .LVU1689
 7780 0430 A749     		ldr	r1, .L323+16
 7781 0432 0DF5CD60 		add	r0, sp, #1640
 7782 0436 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7783              	.LVL424:
 7784              	.LBB8356:
 7785              	.LBI8356:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7786              		.loc 6 138 7 is_stmt 1 view .LVU1690
 7787              	.LBB8357:
 7788              	.LBI8357:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7789              		.loc 5 80 7 view .LVU1691
 7790              	.LBE8357:
 7791              	.LBE8356:
 7792              		.loc 25 116 5 is_stmt 0 view .LVU1692
 7793 043a A649     		ldr	r1, .L323+20
 7794 043c 0DF5D060 		add	r0, sp, #1664
 7795 0440 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7796              	.LVL425:
 7797              	.LBB8358:
 7798              	.LBI8358:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7799              		.loc 6 138 7 is_stmt 1 view .LVU1693
 7800              	.LBB8359:
 7801              	.LBI8359:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7802              		.loc 5 80 7 view .LVU1694
 7803              	.LBE8359:
 7804              	.LBE8358:
 7805              		.loc 25 116 5 is_stmt 0 view .LVU1695
 7806 0444 A449     		ldr	r1, .L323+24
 7807 0446 0DF5D360 		add	r0, sp, #1688
 7808 044a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7809              	.LVL426:
 7810              	.LBB8360:
 7811              	.LBI8360:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7812              		.loc 6 138 7 is_stmt 1 view .LVU1696
 7813              	.LBB8361:
 7814              	.LBI8361:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7815              		.loc 5 80 7 view .LVU1697
 7816              	.LBE8361:
 7817              	.LBE8360:
 7818              		.loc 25 116 5 is_stmt 0 view .LVU1698
 7819 044e A349     		ldr	r1, .L323+28
 7820 0450 0DF5D660 		add	r0, sp, #1712
 7821 0454 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7822              	.LVL427:
 7823              	.LBB8362:
 7824              	.LBI8362:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 534


 7825              		.loc 6 138 7 is_stmt 1 view .LVU1699
 7826              	.LBB8363:
 7827              	.LBI8363:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7828              		.loc 5 80 7 view .LVU1700
 7829              	.LBE8363:
 7830              	.LBE8362:
 7831              		.loc 25 116 5 is_stmt 0 view .LVU1701
 7832 0458 A149     		ldr	r1, .L323+32
 7833 045a 0DF5D960 		add	r0, sp, #1736
 7834 045e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 7835              	.LVL428:
 7836              	.LBB8364:
 7837              	.LBI8364:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 7838              		.loc 6 138 7 is_stmt 1 view .LVU1702
 7839              	.LBB8365:
 7840              	.LBI8365:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7841              		.loc 5 80 7 view .LVU1703
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7842              		.loc 5 80 7 is_stmt 0 view .LVU1704
 7843              	.LBE8365:
 7844              	.LBE8364:
 7845              	.LBB8366:
 7846              	.LBI8366:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 7847              		.loc 1 622 7 is_stmt 1 view .LVU1705
 7848              	.LBB8367:
 7849              	.LBB8368:
 7850              	.LBI8368:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 7851              		.loc 1 290 7 view .LVU1706
 7852              	.LBB8369:
 7853              	.LBI8369:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 7854              		.loc 1 133 2 view .LVU1707
 7855              	.LBB8370:
 7856              	.LBI8370:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7857              		.loc 6 141 7 view .LVU1708
 7858              	.LBB8371:
 7859              	.LBI8371:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7860              		.loc 5 83 7 view .LVU1709
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7861              		.loc 5 83 7 is_stmt 0 view .LVU1710
 7862              	.LBE8371:
 7863              	.LBE8370:
 7864              	.LBB8372:
 7865              	.LBI8372:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7866              		.loc 1 94 2 is_stmt 1 view .LVU1711
 7867              	.LBB8373:
 7868              	.LBB8374:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 7869              		.loc 1 95 47 is_stmt 0 view .LVU1712
ARM GAS  /tmp/ccfXobHU.s 			page 535


 7870 0462 A048     		ldr	r0, .L323+36
 7871 0464 0023     		movs	r3, #0
 7872              	.LBE8374:
 7873              	.LBE8373:
 7874              	.LBE8372:
 7875              	.LBE8369:
 7876              	.LBE8368:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 7877              		.loc 1 626 2 view .LVU1713
 7878 0466 0DF5DC62 		add	r2, sp, #1760
 7879 046a 50A9     		add	r1, sp, #320
 7880              	.LBB8383:
 7881              	.LBB8381:
 7882              	.LBB8379:
 7883              	.LBB8377:
 7884              	.LBB8375:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 7885              		.loc 1 95 47 view .LVU1714
 7886 046c 8360     		str	r3, [r0, #8]
 7887              	.LVL429:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 7888              		.loc 1 95 47 view .LVU1715
 7889              	.LBE8375:
 7890              	.LBE8377:
 7891              	.LBE8379:
 7892              	.LBE8381:
 7893              	.LBE8383:
 7894              	.LBB8384:
 7895              	.LBI8384:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 7896              		.loc 23 75 7 is_stmt 1 view .LVU1716
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 7897              		.loc 23 75 7 is_stmt 0 view .LVU1717
 7898              	.LBE8384:
 7899              	.LBB8385:
 7900              	.LBI8385:
 7901              		.loc 23 79 7 is_stmt 1 view .LVU1718
 7902              		.loc 23 79 7 is_stmt 0 view .LVU1719
 7903              	.LBE8385:
 7904              	.LBB8386:
 7905              	.LBB8382:
 7906              	.LBB8380:
 7907              	.LBB8378:
 7908              	.LBB8376:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 7909              		.loc 1 95 47 view .LVU1720
 7910 046e C0E90033 		strd	r3, r3, [r0]
 7911              	.LBE8376:
 7912              	.LBE8378:
 7913              	.LBE8380:
 7914              	.LBE8382:
 7915              	.LBE8386:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 7916              		.loc 1 626 2 view .LVU1721
 7917 0472 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeI
 7918              	.LVL430:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
ARM GAS  /tmp/ccfXobHU.s 			page 536


 7919              		.loc 1 626 2 view .LVU1722
 7920              	.LBE8367:
 7921              	.LBE8366:
 7922              	.LBB8387:
 7923              	.LBI8387:
 7924              		.loc 6 153 7 is_stmt 1 view .LVU1723
 7925              	.LBB8388:
 7926              	.LBI8388:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7927              		.loc 5 89 7 view .LVU1724
 7928              	.L271:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 7929              		.loc 5 89 7 is_stmt 0 view .LVU1725
 7930              	.LBE8388:
 7931              	.LBE8387:
 7932              	.LBB8389:
 7933              	.LBI8389:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 7934              		.loc 3 657 7 is_stmt 1 view .LVU1726
 7935              	.LBB8390:
 7936              	.LBI8390:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 7937              		.loc 3 229 7 view .LVU1727
 7938              	.LBB8391:
 7939              	.LBB8392:
 7940              	.LBI8392:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7941              		.loc 3 221 7 view .LVU1728
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7942              		.loc 3 221 7 is_stmt 0 view .LVU1729
 7943              	.LBE8392:
 7944              	.LBB8394:
 7945              	.LBI8394:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7946              		.loc 3 236 7 is_stmt 1 view .LVU1730
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7947              		.loc 3 236 7 is_stmt 0 view .LVU1731
 7948              	.LBE8394:
 7949              	.LBB8402:
 7950              	.LBB8393:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 7951              		.loc 3 222 26 view .LVU1732
 7952 0476 54F8080C 		ldr	r0, [r4, #-8]
 7953              	.LVL431:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 7954              		.loc 3 222 26 view .LVU1733
 7955              	.LBE8393:
 7956              	.LBE8402:
 7957              	.LBB8403:
 7958              	.LBB8395:
 7959              	.LBB8396:
 7960              	.LBI8396:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7961              		.loc 4 469 7 is_stmt 1 view .LVU1734
 7962              	.LBB8397:
 7963              	.LBI8397:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 537


 7964              		.loc 5 119 7 view .LVU1735
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 7965              		.loc 5 119 7 is_stmt 0 view .LVU1736
 7966              	.LBE8397:
 7967              	.LBE8396:
 7968              	.LBE8395:
 7969              	.LBE8403:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7970              		.loc 3 231 2 view .LVU1737
 7971 047a A042     		cmp	r0, r4
 7972 047c A4F11804 		sub	r4, r4, #24
 7973              	.LVL432:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7974              		.loc 3 231 2 view .LVU1738
 7975 0480 01D0     		beq	.L270
 7976              	.LBB8404:
 7977              	.LBB8401:
 7978              	.LBB8400:
 7979              	.LBB8399:
 7980              	.LBB8398:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 7981              		.loc 5 128 19 view .LVU1739
 7982 0482 FFF7FEFF 		bl	_ZdlPv
 7983              	.LVL433:
 7984              	.L270:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 7985              		.loc 5 128 19 view .LVU1740
 7986              	.LBE8398:
 7987              	.LBE8399:
 7988              	.LBE8400:
 7989              	.LBE8401:
 7990              	.LBE8404:
 7991              	.LBE8391:
 7992              	.LBE8390:
 7993              	.LBB8405:
 7994              	.LBI8405:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 7995              		.loc 3 150 14 is_stmt 1 view .LVU1741
 7996              	.LBB8406:
 7997              	.LBI8406:
 7998              		.loc 6 153 7 view .LVU1742
 7999              	.LBB8407:
 8000              	.LBI8407:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8001              		.loc 5 89 7 view .LVU1743
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8002              		.loc 5 89 7 is_stmt 0 view .LVU1744
 8003              	.LBE8407:
 8004              	.LBE8406:
 8005              	.LBE8405:
 8006              	.LBE8389:
 8007              		.loc 25 116 5 view .LVU1745
 8008 0486 B442     		cmp	r4, r6
 8009 0488 F5D1     		bne	.L271
 8010              	.LBB8408:
 8011              	.LBI8408:
 8012              		.loc 6 153 7 is_stmt 1 view .LVU1746
ARM GAS  /tmp/ccfXobHU.s 			page 538


 8013              	.LBB8409:
 8014              	.LBI8409:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8015              		.loc 5 89 7 view .LVU1747
 8016              	.LBE8409:
 8017              	.LBE8408:
 8018              	.LBB8410:
 8019              	.LBI8410:
 8020              		.loc 6 153 7 view .LVU1748
 8021              	.LBB8411:
 8022              	.LBI8411:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8023              		.loc 5 89 7 view .LVU1749
 8024              	.LBE8411:
 8025              	.LBE8410:
 8026              	.LBB8412:
 8027              	.LBI8412:
 8028              		.loc 6 153 7 view .LVU1750
 8029              	.LBB8413:
 8030              	.LBI8413:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8031              		.loc 5 89 7 view .LVU1751
 8032              	.LBE8413:
 8033              	.LBE8412:
 8034              	.LBB8414:
 8035              	.LBI8414:
 8036              		.loc 6 153 7 view .LVU1752
 8037              	.LBB8415:
 8038              	.LBI8415:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8039              		.loc 5 89 7 view .LVU1753
 8040              	.LBE8415:
 8041              	.LBE8414:
 8042              	.LBB8416:
 8043              	.LBI8416:
 8044              		.loc 6 153 7 view .LVU1754
 8045              	.LBB8417:
 8046              	.LBI8417:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8047              		.loc 5 89 7 view .LVU1755
 8048              	.LBE8417:
 8049              	.LBE8416:
 8050              	.LBB8418:
 8051              	.LBI8418:
 8052              		.loc 6 153 7 view .LVU1756
 8053              	.LBB8419:
 8054              	.LBI8419:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8055              		.loc 5 89 7 view .LVU1757
 8056              	.LBE8419:
 8057              	.LBE8418:
 8058              	.LBB8420:
 8059              	.LBI8420:
 8060              		.loc 6 153 7 view .LVU1758
 8061              	.LBB8421:
 8062              	.LBI8421:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 539


 8063              		.loc 5 89 7 view .LVU1759
 8064              	.LBE8421:
 8065              	.LBE8420:
 8066              	.LBB8422:
 8067              	.LBI8422:
 8068              		.loc 6 153 7 view .LVU1760
 8069              	.LBB8423:
 8070              	.LBI8423:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8071              		.loc 5 89 7 view .LVU1761
 8072              	.LBE8423:
 8073              	.LBE8422:
 8074              	.LBB8424:
 8075              	.LBI8424:
 8076              		.loc 6 153 7 view .LVU1762
 8077              	.LBB8425:
 8078              	.LBI8425:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8079              		.loc 5 89 7 view .LVU1763
 8080              	.LBE8425:
 8081              	.LBE8424:
 8082              	.LBB8426:
 8083              	.LBI8426:
 8084              		.loc 6 153 7 view .LVU1764
 8085              	.LBB8427:
 8086              	.LBI8427:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8087              		.loc 5 89 7 view .LVU1765
 8088              	.LBE8427:
 8089              	.LBE8426:
 8090              	.LBB8428:
 8091              	.LBI8428:
 8092              		.loc 6 153 7 view .LVU1766
 8093              	.LBB8429:
 8094              	.LBI8429:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8095              		.loc 5 89 7 view .LVU1767
 8096              	.LBE8429:
 8097              	.LBE8428:
 8098              	.LBB8430:
 8099              	.LBI8430:
 8100              		.loc 6 153 7 view .LVU1768
 8101              	.LBB8431:
 8102              	.LBI8431:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8103              		.loc 5 89 7 view .LVU1769
 8104              	.LBE8431:
 8105              	.LBE8430:
 8106              	.LBB8432:
 8107              	.LBI8432:
 8108              		.loc 6 153 7 view .LVU1770
 8109              	.LBB8433:
 8110              	.LBI8433:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8111              		.loc 5 89 7 view .LVU1771
 8112              	.LBE8433:
 8113              	.LBE8432:
ARM GAS  /tmp/ccfXobHU.s 			page 540


 8114              	.LBB8434:
 8115              	.LBI8434:
 8116              		.loc 6 153 7 view .LVU1772
 8117              	.LBB8435:
 8118              	.LBI8435:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8119              		.loc 5 89 7 view .LVU1773
 8120              	.LBE8435:
 8121              	.LBE8434:
 8122              	.LBB8436:
 8123              	.LBI8436:
 8124              		.loc 6 153 7 view .LVU1774
 8125              	.LBB8437:
 8126              	.LBI8437:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8127              		.loc 5 89 7 view .LVU1775
 8128              	.LBE8437:
 8129              	.LBE8436:
 8130              	.LBB8438:
 8131              	.LBI8438:
 8132              		.loc 6 153 7 view .LVU1776
 8133              	.LBB8439:
 8134              	.LBI8439:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8135              		.loc 5 89 7 view .LVU1777
 8136              	.LBE8439:
 8137              	.LBE8438:
 8138              	.LBB8440:
 8139              	.LBI8440:
 8140              		.loc 6 153 7 view .LVU1778
 8141              	.LBB8441:
 8142              	.LBI8441:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8143              		.loc 5 89 7 view .LVU1779
 8144              	.LBE8441:
 8145              	.LBE8440:
 8146              	.LBB8442:
 8147              	.LBI8442:
 8148              		.loc 6 153 7 view .LVU1780
 8149              	.LBB8443:
 8150              	.LBI8443:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8151              		.loc 5 89 7 view .LVU1781
 8152              	.LBE8443:
 8153              	.LBE8442:
 8154              	.LBB8444:
 8155              	.LBI8444:
 8156              		.loc 6 153 7 view .LVU1782
 8157              	.LBB8445:
 8158              	.LBI8445:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8159              		.loc 5 89 7 view .LVU1783
 8160              	.LBE8445:
 8161              	.LBE8444:
 8162              	.LBB8446:
 8163              	.LBI8446:
 8164              		.loc 6 153 7 view .LVU1784
ARM GAS  /tmp/ccfXobHU.s 			page 541


 8165              	.LBB8447:
 8166              	.LBI8447:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8167              		.loc 5 89 7 view .LVU1785
 8168              	.LBE8447:
 8169              	.LBE8446:
 8170              	.LBB8448:
 8171              	.LBI8448:
 8172              		.loc 6 153 7 view .LVU1786
 8173              	.LBB8449:
 8174              	.LBI8449:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8175              		.loc 5 89 7 view .LVU1787
 8176              	.LBE8449:
 8177              	.LBE8448:
 8178              	.LBB8450:
 8179              	.LBI8450:
 8180              		.loc 6 153 7 view .LVU1788
 8181              	.LBB8451:
 8182              	.LBI8451:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8183              		.loc 5 89 7 view .LVU1789
 8184              	.LBE8451:
 8185              	.LBE8450:
 8186              	.LBB8452:
 8187              	.LBI8452:
 8188              		.loc 6 153 7 view .LVU1790
 8189              	.LBB8453:
 8190              	.LBI8453:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8191              		.loc 5 89 7 view .LVU1791
 8192              	.LBE8453:
 8193              	.LBE8452:
 8194              	.LBB8454:
 8195              	.LBI8454:
 8196              		.loc 6 153 7 view .LVU1792
 8197              	.LBB8455:
 8198              	.LBI8455:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8199              		.loc 5 89 7 view .LVU1793
 8200              	.LBE8455:
 8201              	.LBE8454:
 8202              	.LBB8456:
 8203              	.LBI8456:
 8204              		.loc 6 153 7 view .LVU1794
 8205              	.LBB8457:
 8206              	.LBI8457:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8207              		.loc 5 89 7 view .LVU1795
 8208              	.LBE8457:
 8209              	.LBE8456:
 8210              	.LBB8458:
 8211              	.LBI8458:
 8212              		.loc 6 153 7 view .LVU1796
 8213              	.LBB8459:
 8214              	.LBI8459:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 542


 8215              		.loc 5 89 7 view .LVU1797
 8216              	.LBE8459:
 8217              	.LBE8458:
 8218              	.LBB8460:
 8219              	.LBI8460:
 8220              		.loc 6 153 7 view .LVU1798
 8221              	.LBB8461:
 8222              	.LBI8461:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8223              		.loc 5 89 7 view .LVU1799
 8224              	.LBE8461:
 8225              	.LBE8460:
 8226              	.LBB8462:
 8227              	.LBI8462:
 8228              		.loc 6 153 7 view .LVU1800
 8229              	.LBB8463:
 8230              	.LBI8463:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8231              		.loc 5 89 7 view .LVU1801
 8232              	.LBE8463:
 8233              	.LBE8462:
 8234              	.LBB8464:
 8235              	.LBI8464:
 8236              		.loc 6 153 7 view .LVU1802
 8237              	.LBB8465:
 8238              	.LBI8465:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8239              		.loc 5 89 7 view .LVU1803
 8240              	.LBE8465:
 8241              	.LBE8464:
 8242              	.LBB8466:
 8243              	.LBI8466:
 8244              		.loc 6 153 7 view .LVU1804
 8245              	.LBB8467:
 8246              	.LBI8467:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8247              		.loc 5 89 7 view .LVU1805
 8248              	.LBE8467:
 8249              	.LBE8466:
 8250              	.LBB8468:
 8251              	.LBI8468:
 8252              		.loc 6 153 7 view .LVU1806
 8253              	.LBB8469:
 8254              	.LBI8469:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8255              		.loc 5 89 7 view .LVU1807
 8256              	.LBE8469:
 8257              	.LBE8468:
 8258              	.LBB8470:
 8259              	.LBI8470:
 8260              		.loc 6 153 7 view .LVU1808
 8261              	.LBB8471:
 8262              	.LBI8471:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8263              		.loc 5 89 7 view .LVU1809
 8264              	.LBE8471:
 8265              	.LBE8470:
ARM GAS  /tmp/ccfXobHU.s 			page 543


 8266              	.LBB8472:
 8267              	.LBI8472:
 8268              		.loc 6 153 7 view .LVU1810
 8269              	.LBB8473:
 8270              	.LBI8473:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8271              		.loc 5 89 7 view .LVU1811
 8272              	.LBE8473:
 8273              	.LBE8472:
 8274              	.LBB8474:
 8275              	.LBI8474:
 8276              		.loc 6 153 7 view .LVU1812
 8277              	.LBB8475:
 8278              	.LBI8475:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8279              		.loc 5 89 7 view .LVU1813
 8280              	.LBE8475:
 8281              	.LBE8474:
 8282              	.LBB8476:
 8283              	.LBI8476:
 8284              		.loc 6 153 7 view .LVU1814
 8285              	.LBB8477:
 8286              	.LBI8477:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8287              		.loc 5 89 7 view .LVU1815
 8288              	.LBE8477:
 8289              	.LBE8476:
 8290              	.LBB8478:
 8291              	.LBI8478:
 8292              		.loc 6 153 7 view .LVU1816
 8293              	.LBB8479:
 8294              	.LBI8479:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8295              		.loc 5 89 7 view .LVU1817
 8296              	.LBE8479:
 8297              	.LBE8478:
 8298              	.LBB8480:
 8299              	.LBI8480:
 8300              		.loc 6 153 7 view .LVU1818
 8301              	.LBB8481:
 8302              	.LBI8481:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8303              		.loc 5 89 7 view .LVU1819
 8304              	.LBE8481:
 8305              	.LBE8480:
 8306              	.LBB8482:
 8307              	.LBI8482:
 8308              		.loc 6 153 7 view .LVU1820
 8309              	.LBB8483:
 8310              	.LBI8483:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8311              		.loc 5 89 7 view .LVU1821
 8312              	.LBE8483:
 8313              	.LBE8482:
 8314              	.LBB8484:
 8315              	.LBI8484:
 8316              		.loc 6 153 7 view .LVU1822
ARM GAS  /tmp/ccfXobHU.s 			page 544


 8317              	.LBB8485:
 8318              	.LBI8485:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8319              		.loc 5 89 7 view .LVU1823
 8320              	.LBE8485:
 8321              	.LBE8484:
 8322              	.LBB8486:
 8323              	.LBI8486:
 8324              		.loc 6 153 7 view .LVU1824
 8325              	.LBB8487:
 8326              	.LBI8487:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8327              		.loc 5 89 7 view .LVU1825
 8328              	.LBE8487:
 8329              	.LBE8486:
 8330              	.LBB8488:
 8331              	.LBI8488:
 8332              		.loc 6 153 7 view .LVU1826
 8333              	.LBB8489:
 8334              	.LBI8489:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8335              		.loc 5 89 7 view .LVU1827
 8336              	.LBE8489:
 8337              	.LBE8488:
 8338              	.LBB8490:
 8339              	.LBI8490:
 8340              		.loc 6 153 7 view .LVU1828
 8341              	.LBB8491:
 8342              	.LBI8491:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8343              		.loc 5 89 7 view .LVU1829
 8344              	.LBE8491:
 8345              	.LBE8490:
 8346              	.LBB8492:
 8347              	.LBI8492:
 8348              		.loc 6 153 7 view .LVU1830
 8349              	.LBB8493:
 8350              	.LBI8493:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8351              		.loc 5 89 7 view .LVU1831
 8352              	.LBE8493:
 8353              	.LBE8492:
 8354              	.LBB8494:
 8355              	.LBI8494:
 8356              		.loc 6 153 7 view .LVU1832
 8357              	.LBB8495:
 8358              	.LBI8495:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8359              		.loc 5 89 7 view .LVU1833
 8360              	.LBE8495:
 8361              	.LBE8494:
 8362              	.LBB8496:
 8363              	.LBI8496:
 8364              		.loc 6 153 7 view .LVU1834
 8365              	.LBB8497:
 8366              	.LBI8497:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 545


 8367              		.loc 5 89 7 view .LVU1835
 8368              	.LBE8497:
 8369              	.LBE8496:
 8370              	.LBB8498:
 8371              	.LBI8498:
 8372              		.loc 6 153 7 view .LVU1836
 8373              	.LBB8499:
 8374              	.LBI8499:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8375              		.loc 5 89 7 view .LVU1837
 8376              	.LBE8499:
 8377              	.LBE8498:
 8378              	.LBB8500:
 8379              	.LBI8500:
 8380              		.loc 6 153 7 view .LVU1838
 8381              	.LBB8501:
 8382              	.LBI8501:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8383              		.loc 5 89 7 view .LVU1839
 8384              	.LBE8501:
 8385              	.LBE8500:
 8386              	.LBB8502:
 8387              	.LBI8502:
 8388              		.loc 6 153 7 view .LVU1840
 8389              	.LBB8503:
 8390              	.LBI8503:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8391              		.loc 5 89 7 view .LVU1841
 8392              	.LBE8503:
 8393              	.LBE8502:
 8394              	.LBB8504:
 8395              	.LBI8504:
 8396              		.loc 6 153 7 view .LVU1842
 8397              	.LBB8505:
 8398              	.LBI8505:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8399              		.loc 5 89 7 view .LVU1843
 8400              	.LBE8505:
 8401              	.LBE8504:
 8402              	.LBB8506:
 8403              	.LBI8506:
 8404              		.loc 6 153 7 view .LVU1844
 8405              	.LBB8507:
 8406              	.LBI8507:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8407              		.loc 5 89 7 view .LVU1845
 8408              	.LBE8507:
 8409              	.LBE8506:
 8410              	.LBB8508:
 8411              	.LBI8508:
 8412              		.loc 6 153 7 view .LVU1846
 8413              	.LBB8509:
 8414              	.LBI8509:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8415              		.loc 5 89 7 view .LVU1847
 8416              	.LBE8509:
 8417              	.LBE8508:
ARM GAS  /tmp/ccfXobHU.s 			page 546


 8418              	.LBB8510:
 8419              	.LBI8510:
 8420              		.loc 6 153 7 view .LVU1848
 8421              	.LBB8511:
 8422              	.LBI8511:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8423              		.loc 5 89 7 view .LVU1849
 8424              	.LBE8511:
 8425              	.LBE8510:
 8426              	.LBB8512:
 8427              	.LBI8512:
 8428              		.loc 6 153 7 view .LVU1850
 8429              	.LBB8513:
 8430              	.LBI8513:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8431              		.loc 5 89 7 view .LVU1851
 8432              	.LBE8513:
 8433              	.LBE8512:
 8434              	.LBB8514:
 8435              	.LBI8514:
 8436              		.loc 6 153 7 view .LVU1852
 8437              	.LBB8515:
 8438              	.LBI8515:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8439              		.loc 5 89 7 view .LVU1853
 8440              	.LBE8515:
 8441              	.LBE8514:
 8442              	.LBB8516:
 8443              	.LBI8516:
 8444              		.loc 6 153 7 view .LVU1854
 8445              	.LBB8517:
 8446              	.LBI8517:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8447              		.loc 5 89 7 view .LVU1855
 8448              	.LBE8517:
 8449              	.LBE8516:
 8450              	.LBB8518:
 8451              	.LBI8518:
 8452              		.loc 6 153 7 view .LVU1856
 8453              	.LBB8519:
 8454              	.LBI8519:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8455              		.loc 5 89 7 view .LVU1857
 8456              	.LBE8519:
 8457              	.LBE8518:
 8458              	.LBB8520:
 8459              	.LBI8520:
 8460              		.loc 6 153 7 view .LVU1858
 8461              	.LBB8521:
 8462              	.LBI8521:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8463              		.loc 5 89 7 view .LVU1859
 8464              	.LBE8521:
 8465              	.LBE8520:
 8466              	.LBB8522:
 8467              	.LBI8522:
 8468              		.loc 6 153 7 view .LVU1860
ARM GAS  /tmp/ccfXobHU.s 			page 547


 8469              	.LBB8523:
 8470              	.LBI8523:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8471              		.loc 5 89 7 view .LVU1861
 8472              	.LBE8523:
 8473              	.LBE8522:
 8474              	.LBB8524:
 8475              	.LBI8524:
 8476              		.loc 6 153 7 view .LVU1862
 8477              	.LBB8525:
 8478              	.LBI8525:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8479              		.loc 5 89 7 view .LVU1863
 8480              	.LBE8525:
 8481              	.LBE8524:
 8482              	.LBB8526:
 8483              	.LBI8526:
 8484              		.loc 6 153 7 view .LVU1864
 8485              	.LBB8527:
 8486              	.LBI8527:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8487              		.loc 5 89 7 view .LVU1865
 8488              	.LBE8527:
 8489              	.LBE8526:
  54:Mu/music/theory.h ****         "C0",
 8490              		.loc 25 54 36 is_stmt 0 view .LVU1866
 8491 048a 974A     		ldr	r2, .L323+40
 8492 048c 76AC     		add	r4, sp, #472
 8493              	.LVL434:
  54:Mu/music/theory.h ****         "C0",
 8494              		.loc 25 54 36 view .LVU1867
 8495 048e 9749     		ldr	r1, .L323+44
 8496 0490 9448     		ldr	r0, .L323+36
 8497 0492 FFF7FEFF 		bl	__aeabi_atexit
 8498              	.LVL435:
 8499              	.LBB8528:
 8500              	.LBI8528:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8501              		.loc 6 138 7 is_stmt 1 view .LVU1868
 8502              	.LBB8529:
 8503              	.LBI8529:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8504              		.loc 5 80 7 view .LVU1869
 8505              	.LBE8529:
 8506              	.LBE8528:
 117:Mu/music/theory.h **** 
 118:Mu/music/theory.h ****     // Note: Mode names are currently abbreviated due to 
 119:Mu/music/theory.h ****     // Daisy Patch screen size limitations.
 120:Mu/music/theory.h ****     //
 121:Mu/music/theory.h ****     // TODO support exotic modes
 122:Mu/music/theory.h ****     const std::vector<std::string> modes {
 123:Mu/music/theory.h ****         "Major",
 124:Mu/music/theory.h ****         "Minor",
 125:Mu/music/theory.h ****         "Dorian",
 126:Mu/music/theory.h ****         "Phyrgi", // Phyrgian
 127:Mu/music/theory.h ****         "Lydian",
 128:Mu/music/theory.h ****         "Mixo",   // Mixolydian
ARM GAS  /tmp/ccfXobHU.s 			page 548


 129:Mu/music/theory.h ****         "Locri",  // Locrian
 130:Mu/music/theory.h ****     };
 8507              		.loc 25 130 5 is_stmt 0 view .LVU1870
 8508 0496 9649     		ldr	r1, .L323+48
 8509 0498 50A8     		add	r0, sp, #320
 8510 049a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8511              	.LVL436:
 8512              	.LBB8530:
 8513              	.LBI8530:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8514              		.loc 6 138 7 is_stmt 1 view .LVU1871
 8515              	.LBB8531:
 8516              	.LBI8531:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8517              		.loc 5 80 7 view .LVU1872
 8518              	.LBE8531:
 8519              	.LBE8530:
 8520              		.loc 25 130 5 is_stmt 0 view .LVU1873
 8521 049e 9549     		ldr	r1, .L323+52
 8522 04a0 56A8     		add	r0, sp, #344
 8523 04a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8524              	.LVL437:
 8525              	.LBB8532:
 8526              	.LBI8532:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8527              		.loc 6 138 7 is_stmt 1 view .LVU1874
 8528              	.LBB8533:
 8529              	.LBI8533:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8530              		.loc 5 80 7 view .LVU1875
 8531              	.LBE8533:
 8532              	.LBE8532:
 8533              		.loc 25 130 5 is_stmt 0 view .LVU1876
 8534 04a6 9449     		ldr	r1, .L323+56
 8535 04a8 5CA8     		add	r0, sp, #368
 8536 04aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8537              	.LVL438:
 8538              	.LBB8534:
 8539              	.LBI8534:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8540              		.loc 6 138 7 is_stmt 1 view .LVU1877
 8541              	.LBB8535:
 8542              	.LBI8535:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8543              		.loc 5 80 7 view .LVU1878
 8544              	.LBE8535:
 8545              	.LBE8534:
 8546              		.loc 25 130 5 is_stmt 0 view .LVU1879
 8547 04ae 9349     		ldr	r1, .L323+60
 8548 04b0 62A8     		add	r0, sp, #392
 8549 04b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8550              	.LVL439:
 8551              	.LBB8536:
 8552              	.LBI8536:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8553              		.loc 6 138 7 is_stmt 1 view .LVU1880
 8554              	.LBB8537:
ARM GAS  /tmp/ccfXobHU.s 			page 549


 8555              	.LBI8537:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8556              		.loc 5 80 7 view .LVU1881
 8557              	.LBE8537:
 8558              	.LBE8536:
 8559              		.loc 25 130 5 is_stmt 0 view .LVU1882
 8560 04b6 9249     		ldr	r1, .L323+64
 8561 04b8 68A8     		add	r0, sp, #416
 8562 04ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8563              	.LVL440:
 8564              	.LBB8538:
 8565              	.LBI8538:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8566              		.loc 6 138 7 is_stmt 1 view .LVU1883
 8567              	.LBB8539:
 8568              	.LBI8539:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8569              		.loc 5 80 7 view .LVU1884
 8570              	.LBE8539:
 8571              	.LBE8538:
 8572              		.loc 25 130 5 is_stmt 0 view .LVU1885
 8573 04be 9149     		ldr	r1, .L323+68
 8574 04c0 6EA8     		add	r0, sp, #440
 8575 04c2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8576              	.LVL441:
 8577              	.LBB8540:
 8578              	.LBI8540:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8579              		.loc 6 138 7 is_stmt 1 view .LVU1886
 8580              	.LBB8541:
 8581              	.LBI8541:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8582              		.loc 5 80 7 view .LVU1887
 8583              	.LBE8541:
 8584              	.LBE8540:
 8585              		.loc 25 130 5 is_stmt 0 view .LVU1888
 8586 04c6 9049     		ldr	r1, .L323+72
 8587 04c8 74A8     		add	r0, sp, #464
 8588 04ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8589              	.LVL442:
 8590              	.LBB8542:
 8591              	.LBI8542:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8592              		.loc 6 138 7 is_stmt 1 view .LVU1889
 8593              	.LBB8543:
 8594              	.LBI8543:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8595              		.loc 5 80 7 view .LVU1890
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8596              		.loc 5 80 7 is_stmt 0 view .LVU1891
 8597              	.LBE8543:
 8598              	.LBE8542:
 8599              	.LBB8544:
 8600              	.LBI8544:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 8601              		.loc 1 622 7 is_stmt 1 view .LVU1892
 8602              	.LBB8545:
ARM GAS  /tmp/ccfXobHU.s 			page 550


 8603              	.LBB8546:
 8604              	.LBI8546:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 8605              		.loc 1 290 7 view .LVU1893
 8606              	.LBB8547:
 8607              	.LBI8547:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 8608              		.loc 1 133 2 view .LVU1894
 8609              	.LBB8548:
 8610              	.LBI8548:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8611              		.loc 6 141 7 view .LVU1895
 8612              	.LBB8549:
 8613              	.LBI8549:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8614              		.loc 5 83 7 view .LVU1896
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8615              		.loc 5 83 7 is_stmt 0 view .LVU1897
 8616              	.LBE8549:
 8617              	.LBE8548:
 8618              	.LBB8550:
 8619              	.LBI8550:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8620              		.loc 1 94 2 is_stmt 1 view .LVU1898
 8621              	.LBB8551:
 8622              	.LBB8552:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8623              		.loc 1 95 47 is_stmt 0 view .LVU1899
 8624 04ce 8F48     		ldr	r0, .L323+76
 8625 04d0 0023     		movs	r3, #0
 8626              	.LBE8552:
 8627              	.LBE8551:
 8628              	.LBE8550:
 8629              	.LBE8547:
 8630              	.LBE8546:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8631              		.loc 1 626 2 view .LVU1900
 8632 04d2 7AAA     		add	r2, sp, #488
 8633 04d4 50A9     		add	r1, sp, #320
 8634              	.LBB8561:
 8635              	.LBB8559:
 8636              	.LBB8557:
 8637              	.LBB8555:
 8638              	.LBB8553:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8639              		.loc 1 95 47 view .LVU1901
 8640 04d6 8360     		str	r3, [r0, #8]
 8641              	.LVL443:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8642              		.loc 1 95 47 view .LVU1902
 8643              	.LBE8553:
 8644              	.LBE8555:
 8645              	.LBE8557:
 8646              	.LBE8559:
 8647              	.LBE8561:
 8648              	.LBB8562:
 8649              	.LBI8562:
ARM GAS  /tmp/ccfXobHU.s 			page 551


  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 8650              		.loc 23 75 7 is_stmt 1 view .LVU1903
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 8651              		.loc 23 75 7 is_stmt 0 view .LVU1904
 8652              	.LBE8562:
 8653              	.LBB8563:
 8654              	.LBI8563:
 8655              		.loc 23 79 7 is_stmt 1 view .LVU1905
 8656              		.loc 23 79 7 is_stmt 0 view .LVU1906
 8657              	.LBE8563:
 8658              	.LBB8564:
 8659              	.LBB8560:
 8660              	.LBB8558:
 8661              	.LBB8556:
 8662              	.LBB8554:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8663              		.loc 1 95 47 view .LVU1907
 8664 04d8 C0E90033 		strd	r3, r3, [r0]
 8665              	.LBE8554:
 8666              	.LBE8556:
 8667              	.LBE8558:
 8668              	.LBE8560:
 8669              	.LBE8564:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8670              		.loc 1 626 2 view .LVU1908
 8671 04dc FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeI
 8672              	.LVL444:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8673              		.loc 1 626 2 view .LVU1909
 8674              	.LBE8545:
 8675              	.LBE8544:
 8676              	.LBB8565:
 8677              	.LBI8565:
 8678              		.loc 6 153 7 is_stmt 1 view .LVU1910
 8679              	.LBB8566:
 8680              	.LBI8566:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8681              		.loc 5 89 7 view .LVU1911
 8682              	.L273:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8683              		.loc 5 89 7 is_stmt 0 view .LVU1912
 8684              	.LBE8566:
 8685              	.LBE8565:
 8686              	.LBB8567:
 8687              	.LBI8567:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 8688              		.loc 3 657 7 is_stmt 1 view .LVU1913
 8689              	.LBB8568:
 8690              	.LBI8568:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 8691              		.loc 3 229 7 view .LVU1914
 8692              	.LBB8569:
 8693              	.LBB8570:
 8694              	.LBI8570:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8695              		.loc 3 221 7 view .LVU1915
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
ARM GAS  /tmp/ccfXobHU.s 			page 552


 8696              		.loc 3 221 7 is_stmt 0 view .LVU1916
 8697              	.LBE8570:
 8698              	.LBB8572:
 8699              	.LBI8572:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8700              		.loc 3 236 7 is_stmt 1 view .LVU1917
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8701              		.loc 3 236 7 is_stmt 0 view .LVU1918
 8702              	.LBE8572:
 8703              	.LBB8580:
 8704              	.LBB8571:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 8705              		.loc 3 222 26 view .LVU1919
 8706 04e0 54F8080C 		ldr	r0, [r4, #-8]
 8707              	.LVL445:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 8708              		.loc 3 222 26 view .LVU1920
 8709              	.LBE8571:
 8710              	.LBE8580:
 8711              	.LBB8581:
 8712              	.LBB8573:
 8713              	.LBB8574:
 8714              	.LBI8574:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8715              		.loc 4 469 7 is_stmt 1 view .LVU1921
 8716              	.LBB8575:
 8717              	.LBI8575:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 8718              		.loc 5 119 7 view .LVU1922
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 8719              		.loc 5 119 7 is_stmt 0 view .LVU1923
 8720              	.LBE8575:
 8721              	.LBE8574:
 8722              	.LBE8573:
 8723              	.LBE8581:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8724              		.loc 3 231 2 view .LVU1924
 8725 04e4 A042     		cmp	r0, r4
 8726 04e6 A4F11804 		sub	r4, r4, #24
 8727              	.LVL446:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8728              		.loc 3 231 2 view .LVU1925
 8729 04ea 01D0     		beq	.L272
 8730              	.LBB8582:
 8731              	.LBB8579:
 8732              	.LBB8578:
 8733              	.LBB8577:
 8734              	.LBB8576:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 8735              		.loc 5 128 19 view .LVU1926
 8736 04ec FFF7FEFF 		bl	_ZdlPv
 8737              	.LVL447:
 8738              	.L272:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 8739              		.loc 5 128 19 view .LVU1927
 8740              	.LBE8576:
 8741              	.LBE8577:
ARM GAS  /tmp/ccfXobHU.s 			page 553


 8742              	.LBE8578:
 8743              	.LBE8579:
 8744              	.LBE8582:
 8745              	.LBE8569:
 8746              	.LBE8568:
 8747              	.LBB8583:
 8748              	.LBI8583:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 8749              		.loc 3 150 14 is_stmt 1 view .LVU1928
 8750              	.LBB8584:
 8751              	.LBI8584:
 8752              		.loc 6 153 7 view .LVU1929
 8753              	.LBB8585:
 8754              	.LBI8585:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8755              		.loc 5 89 7 view .LVU1930
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8756              		.loc 5 89 7 is_stmt 0 view .LVU1931
 8757              	.LBE8585:
 8758              	.LBE8584:
 8759              	.LBE8583:
 8760              	.LBE8567:
 8761              		.loc 25 130 5 view .LVU1932
 8762 04f0 A642     		cmp	r6, r4
 8763 04f2 F5D1     		bne	.L273
 8764              	.LBB8586:
 8765              	.LBI8586:
 8766              		.loc 6 153 7 is_stmt 1 view .LVU1933
 8767              	.LBB8587:
 8768              	.LBI8587:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8769              		.loc 5 89 7 view .LVU1934
 8770              	.LBE8587:
 8771              	.LBE8586:
 8772              	.LBB8588:
 8773              	.LBI8588:
 8774              		.loc 6 153 7 view .LVU1935
 8775              	.LBB8589:
 8776              	.LBI8589:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8777              		.loc 5 89 7 view .LVU1936
 8778              	.LBE8589:
 8779              	.LBE8588:
 8780              	.LBB8590:
 8781              	.LBI8590:
 8782              		.loc 6 153 7 view .LVU1937
 8783              	.LBB8591:
 8784              	.LBI8591:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8785              		.loc 5 89 7 view .LVU1938
 8786              	.LBE8591:
 8787              	.LBE8590:
 8788              	.LBB8592:
 8789              	.LBI8592:
 8790              		.loc 6 153 7 view .LVU1939
 8791              	.LBB8593:
 8792              	.LBI8593:
ARM GAS  /tmp/ccfXobHU.s 			page 554


  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8793              		.loc 5 89 7 view .LVU1940
 8794              	.LBE8593:
 8795              	.LBE8592:
 8796              	.LBB8594:
 8797              	.LBI8594:
 8798              		.loc 6 153 7 view .LVU1941
 8799              	.LBB8595:
 8800              	.LBI8595:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8801              		.loc 5 89 7 view .LVU1942
 8802              	.LBE8595:
 8803              	.LBE8594:
 8804              	.LBB8596:
 8805              	.LBI8596:
 8806              		.loc 6 153 7 view .LVU1943
 8807              	.LBB8597:
 8808              	.LBI8597:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8809              		.loc 5 89 7 view .LVU1944
 8810              	.LBE8597:
 8811              	.LBE8596:
 8812              	.LBB8598:
 8813              	.LBI8598:
 8814              		.loc 6 153 7 view .LVU1945
 8815              	.LBB8599:
 8816              	.LBI8599:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8817              		.loc 5 89 7 view .LVU1946
 8818              	.LBE8599:
 8819              	.LBE8598:
 131:Mu/music/theory.h **** 
 132:Mu/music/theory.h ****     // Maps scale names to their first octave of semitone values
 133:Mu/music/theory.h ****     const std::map<std::string, std::vector<int>> modeToSemitones {
 134:Mu/music/theory.h ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 8820              		.loc 25 134 25 is_stmt 0 view .LVU1947
 8821 04f4 864D     		ldr	r5, .L323+80
 8822 04f6 4746     		mov	r7, r8
 122:Mu/music/theory.h ****         "Major",
 8823              		.loc 25 122 36 view .LVU1948
 8824 04f8 7B4A     		ldr	r2, .L323+40
 8825              	.LBB8600:
 8826              	.LBB8601:
 8827              	.LBB8602:
 8828              	.LBB8603:
 8829              	.LBB8604:
 8830              	.LBB8605:
 8831              	.LBB8606:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8832              		.loc 1 95 47 view .LVU1949
 8833 04fa 0024     		movs	r4, #0
 8834              	.LVL448:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8835              		.loc 1 95 47 view .LVU1950
 8836              	.LBE8606:
 8837              	.LBE8605:
 8838              	.LBE8604:
ARM GAS  /tmp/ccfXobHU.s 			page 555


 8839              	.LBE8603:
 8840              	.LBE8602:
 8841              	.LBE8601:
 8842              	.LBE8600:
 122:Mu/music/theory.h ****         "Major",
 8843              		.loc 25 122 36 view .LVU1951
 8844 04fc 7B49     		ldr	r1, .L323+44
 8845 04fe 8348     		ldr	r0, .L323+76
 8846 0500 FFF7FEFF 		bl	__aeabi_atexit
 8847              	.LVL449:
 8848              	.LBB8627:
 8849              	.LBB8624:
 8850              	.LBB8619:
 8851              	.LBB8616:
 8852              	.LBB8611:
 8853              	.LBB8609:
 8854              	.LBB8607:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8855              		.loc 1 95 47 view .LVU1952
 8856 0504 1E94     		str	r4, [sp, #120]
 8857              	.LBE8607:
 8858              	.LBE8609:
 8859              	.LBE8611:
 8860              	.LBE8616:
 8861              	.LBE8619:
 8862              	.LBE8624:
 8863              	.LBE8627:
 8864              		.loc 25 134 25 view .LVU1953
 8865 0506 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8866 0508 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8867 050a 95E80700 		ldm	r5, {r0, r1, r2}
 8868 050e 87E80700 		stm	r7, {r0, r1, r2}
 8869              	.LBB8628:
 8870              	.LBI8628:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8871              		.loc 6 138 7 is_stmt 1 view .LVU1954
 8872              	.LBB8629:
 8873              	.LBI8629:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8874              		.loc 5 80 7 view .LVU1955
 8875              	.LVL450:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8876              		.loc 5 80 7 is_stmt 0 view .LVU1956
 8877              	.LBE8629:
 8878              	.LBE8628:
 8879              	.LBB8630:
 8880              	.LBI8600:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 8881              		.loc 1 622 7 is_stmt 1 view .LVU1957
 8882              	.LBB8625:
 8883              	.LBB8620:
 8884              	.LBI8602:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 8885              		.loc 1 290 7 view .LVU1958
 8886              	.LBB8617:
 8887              	.LBI8603:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
ARM GAS  /tmp/ccfXobHU.s 			page 556


 8888              		.loc 1 133 2 view .LVU1959
 8889              	.LBB8612:
 8890              	.LBI8612:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8891              		.loc 6 141 7 view .LVU1960
 8892              	.LBB8613:
 8893              	.LBI8613:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8894              		.loc 5 83 7 view .LVU1961
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8895              		.loc 5 83 7 is_stmt 0 view .LVU1962
 8896              	.LBE8613:
 8897              	.LBE8612:
 8898              	.LBB8614:
 8899              	.LBI8604:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8900              		.loc 1 94 2 is_stmt 1 view .LVU1963
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8901              		.loc 1 94 2 is_stmt 0 view .LVU1964
 8902              	.LBE8614:
 8903              	.LBE8617:
 8904              	.LBE8620:
 8905              	.LBB8621:
 8906              	.LBI8621:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 8907              		.loc 23 75 7 is_stmt 1 view .LVU1965
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 8908              		.loc 23 75 7 is_stmt 0 view .LVU1966
 8909              	.LBE8621:
 8910              	.LBB8622:
 8911              	.LBI8622:
 8912              		.loc 23 79 7 is_stmt 1 view .LVU1967
 8913              		.loc 23 79 7 is_stmt 0 view .LVU1968
 8914              	.LBE8622:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8915              		.loc 1 626 2 view .LVU1969
 8916 0512 50AA     		add	r2, sp, #320
 8917 0514 1CA8     		add	r0, sp, #112
 8918              	.LVL451:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8919              		.loc 1 626 2 view .LVU1970
 8920 0516 4146     		mov	r1, r8
 8921              	.LBE8625:
 8922              	.LBE8630:
 135:Mu/music/theory.h ****         {"Minor",  std::vector<int>{0, 2, 3, 5, 7, 8, 10}},
 8923              		.loc 25 135 25 view .LVU1971
 8924 0518 05F10C07 		add	r7, r5, #12
 8925              	.LBB8631:
 8926              	.LBB8626:
 8927              	.LBB8623:
 8928              	.LBB8618:
 8929              	.LBB8615:
 8930              	.LBB8610:
 8931              	.LBB8608:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 8932              		.loc 1 95 47 view .LVU1972
 8933 051c CDE91C44 		strd	r4, r4, [sp, #112]
ARM GAS  /tmp/ccfXobHU.s 			page 557


 8934              	.LBE8608:
 8935              	.LBE8610:
 8936              	.LBE8615:
 8937              	.LBE8618:
 8938              	.LBE8623:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8939              		.loc 1 626 2 view .LVU1973
 8940 0520 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 8941              	.LVL452:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 8942              		.loc 1 626 2 view .LVU1974
 8943              	.LBE8626:
 8944              	.LBE8631:
 8945              	.LBB8632:
 8946              	.LBI8632:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8947              		.loc 20 341 12 is_stmt 1 view .LVU1975
 8948              	.LBB8633:
 8949              	.LBB8634:
 8950              	.LBB8635:
 8951              	.LBI8635:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8952              		.loc 22 74 5 view .LVU1976
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8953              		.loc 22 74 5 is_stmt 0 view .LVU1977
 8954              	.LBE8635:
 8955              	.LBB8636:
 8956              	.LBI8636:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 8957              		.loc 6 138 7 is_stmt 1 view .LVU1978
 8958              	.LBB8637:
 8959              	.LBI8637:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8960              		.loc 5 80 7 view .LVU1979
 8961              	.LBE8637:
 8962              	.LBE8636:
 8963              		.loc 20 342 64 is_stmt 0 view .LVU1980
 8964 0524 7249     		ldr	r1, .L323+48
 8965 0526 50A8     		add	r0, sp, #320
 8966 0528 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 8967              	.LVL453:
 8968              	.LBB8638:
 8969              	.LBI8638:
 8970              		.loc 6 153 7 is_stmt 1 view .LVU1981
 8971              	.LBB8639:
 8972              	.LBI8639:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8973              		.loc 5 89 7 view .LVU1982
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 8974              		.loc 5 89 7 is_stmt 0 view .LVU1983
 8975              	.LBE8639:
 8976              	.LBE8638:
 8977              	.LBB8640:
 8978              	.LBI8640:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 8979              		.loc 22 74 5 is_stmt 1 view .LVU1984
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
ARM GAS  /tmp/ccfXobHU.s 			page 558


 8980              		.loc 22 74 5 is_stmt 0 view .LVU1985
 8981              	.LBE8640:
 8982              	.LBB8641:
 8983              	.LBI8641:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 8984              		.loc 1 569 7 is_stmt 1 view .LVU1986
 8985              	.LBB8642:
 8986              	.LBI8642:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 8987              		.loc 1 305 7 view .LVU1987
 8988              	.LBB8643:
 8989              	.LBI8643:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 8990              		.loc 1 140 2 view .LVU1988
 8991              	.LBB8644:
 8992              	.LBI8644:
 8993              		.loc 22 99 5 view .LVU1989
 8994              		.loc 22 99 5 is_stmt 0 view .LVU1990
 8995              	.LBE8644:
 8996              	.LBB8645:
 8997              	.LBI8645:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8998              		.loc 6 141 7 is_stmt 1 view .LVU1991
 8999              	.LBB8646:
 9000              	.LBI8646:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9001              		.loc 5 83 7 view .LVU1992
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9002              		.loc 5 83 7 is_stmt 0 view .LVU1993
 9003              	.LBE8646:
 9004              	.LBE8645:
 9005              	.LBB8647:
 9006              	.LBI8647:
 9007              		.loc 22 99 5 is_stmt 1 view .LVU1994
 9008              		.loc 22 99 5 is_stmt 0 view .LVU1995
 9009              	.LBE8647:
 9010              	.LBB8648:
 9011              	.LBI8648:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 9012              		.loc 1 99 2 is_stmt 1 view .LVU1996
 9013              	.LBE8648:
 9014              	.LBE8643:
 9015              	.LBE8642:
 9016              	.LBE8641:
 9017              	.LBE8634:
 9018              	.LBE8633:
 9019              	.LBE8632:
 9020              		.loc 25 135 25 is_stmt 0 view .LVU1997
 9021 052c CC46     		mov	ip, r9
 9022              	.LBB8697:
 9023              	.LBB8698:
 9024              	.LBB8699:
 9025              	.LBB8700:
 9026              	.LBB8701:
 9027              	.LBB8702:
 9028              	.LBB8703:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
ARM GAS  /tmp/ccfXobHU.s 			page 559


 9029              		.loc 1 95 47 view .LVU1998
 9030 052e 1B94     		str	r4, [sp, #108]
 9031              	.LBE8703:
 9032              	.LBE8702:
 9033              	.LBE8701:
 9034              	.LBE8700:
 9035              	.LBE8699:
 9036              	.LBE8698:
 9037              	.LBE8697:
 9038              		.loc 25 135 25 view .LVU1999
 9039 0530 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 9040 0532 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 9041 0536 97E80700 		ldm	r7, {r0, r1, r2}
 9042              	.LBB8720:
 9043              	.LBB8691:
 9044              	.LBB8685:
 9045              	.LBB8679:
 9046              	.LBB8673:
 9047              	.LBB8667:
 9048              	.LBB8661:
 9049              	.LBB8649:
 9050              	.LBB8650:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9051              		.loc 1 101 43 view .LVU2000
 9052 053a DDE91C37 		ldrd	r3, r7, [sp, #112]
 9053              	.LBE8650:
 9054              	.LBE8649:
 9055              	.LBE8661:
 9056              	.LBE8667:
 9057              	.LBE8673:
 9058              	.LBE8679:
 9059              	.LBE8685:
 9060              	.LBE8691:
 9061              	.LBE8720:
 9062              		.loc 25 135 25 view .LVU2001
 9063 053e 8CE80700 		stm	ip, {r0, r1, r2}
 9064              	.LBB8721:
 9065              	.LBB8692:
 9066              	.LBB8686:
 9067              	.LBB8680:
 9068              	.LBB8674:
 9069              	.LBB8668:
 9070              	.LBB8662:
 9071              	.LBB8656:
 9072              	.LBB8651:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9073              		.loc 1 101 43 view .LVU2002
 9074 0542 5693     		str	r3, [sp, #344]
 9075              	.LBE8651:
 9076              	.LBE8656:
 9077              	.LBE8662:
 9078              	.LBE8668:
 9079              	.LBE8674:
 9080              	.LBE8680:
 9081              	.LBE8686:
 9082              	.LBE8692:
 9083              	.LBE8721:
ARM GAS  /tmp/ccfXobHU.s 			page 560


 9084              	.LBB8722:
 9085              	.LBB8716:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9086              		.loc 1 626 2 view .LVU2003
 9087 0544 4246     		mov	r2, r8
 9088              	.LBE8716:
 9089              	.LBE8722:
 9090              	.LBB8723:
 9091              	.LBB8693:
 9092              	.LBB8687:
 9093              	.LBB8681:
 9094              	.LBB8675:
 9095              	.LBB8669:
 9096              	.LBB8663:
 9097              	.LBB8657:
 9098              	.LBB8652:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9099              		.loc 1 101 43 view .LVU2004
 9100 0546 1E9B     		ldr	r3, [sp, #120]
 9101              	.LBE8652:
 9102              	.LBE8657:
 9103              	.LBE8663:
 9104              	.LBE8669:
 9105              	.LBE8675:
 9106              	.LBE8681:
 9107              	.LBE8687:
 9108              	.LBE8693:
 9109              	.LBE8723:
 9110              	.LBB8724:
 9111              	.LBB8717:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9112              		.loc 1 626 2 view .LVU2005
 9113 0548 19A8     		add	r0, sp, #100
 9114 054a 4946     		mov	r1, r9
 9115              	.LBE8717:
 9116              	.LBE8724:
 9117              	.LBB8725:
 9118              	.LBB8694:
 9119              	.LBB8688:
 9120              	.LBB8682:
 9121              	.LBB8676:
 9122              	.LBB8670:
 9123              	.LBB8664:
 9124              	.LBB8658:
 9125              	.LBB8653:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9126              		.loc 1 101 43 view .LVU2006
 9127 054c 5797     		str	r7, [sp, #348]
 9128 054e 5893     		str	r3, [sp, #352]
 9129              	.LBE8653:
 9130              	.LBE8658:
 9131              	.LBE8664:
 9132              	.LBE8670:
 9133              	.LBE8676:
 9134              	.LBE8682:
 9135              	.LBE8688:
 9136              	.LBE8694:
ARM GAS  /tmp/ccfXobHU.s 			page 561


 9137              	.LBE8725:
 136:Mu/music/theory.h ****         {"Dorian", std::vector<int>{0, 2, 3, 5, 7, 9, 10}},
 9138              		.loc 25 136 25 view .LVU2007
 9139 0550 3BAF     		add	r7, sp, #236
 9140              	.LBB8726:
 9141              	.LBB8695:
 9142              	.LBB8689:
 9143              	.LBB8683:
 9144              	.LBB8677:
 9145              	.LBB8671:
 9146              	.LBB8665:
 9147              	.LBB8659:
 9148              	.LBB8654:
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9149              		.loc 1 102 4 view .LVU2008
 9150 0552 1C94     		str	r4, [sp, #112]
 9151              	.LVL454:
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9152              		.loc 1 102 4 view .LVU2009
 9153              	.LBE8654:
 9154              	.LBE8659:
 9155              	.LBE8665:
 9156              	.LBE8671:
 9157              	.LBE8677:
 9158              	.LBE8683:
 9159              	.LBE8689:
 9160              	.LBE8695:
 9161              	.LBE8726:
 9162              	.LBB8727:
 9163              	.LBI8727:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9164              		.loc 6 138 7 is_stmt 1 view .LVU2010
 9165              	.LBB8728:
 9166              	.LBI8728:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9167              		.loc 5 80 7 view .LVU2011
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9168              		.loc 5 80 7 is_stmt 0 view .LVU2012
 9169              	.LBE8728:
 9170              	.LBE8727:
 9171              	.LBB8729:
 9172              	.LBI8697:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 9173              		.loc 1 622 7 is_stmt 1 view .LVU2013
 9174              	.LBB8718:
 9175              	.LBB8712:
 9176              	.LBI8699:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 9177              		.loc 1 290 7 view .LVU2014
 9178              	.LBB8710:
 9179              	.LBI8700:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 9180              		.loc 1 133 2 view .LVU2015
 9181              	.LBB8706:
 9182              	.LBI8706:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9183              		.loc 6 141 7 view .LVU2016
ARM GAS  /tmp/ccfXobHU.s 			page 562


 9184              	.LBB8707:
 9185              	.LBI8707:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9186              		.loc 5 83 7 view .LVU2017
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9187              		.loc 5 83 7 is_stmt 0 view .LVU2018
 9188              	.LBE8707:
 9189              	.LBE8706:
 9190              	.LBB8708:
 9191              	.LBI8701:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9192              		.loc 1 94 2 is_stmt 1 view .LVU2019
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9193              		.loc 1 94 2 is_stmt 0 view .LVU2020
 9194              	.LBE8708:
 9195              	.LBE8710:
 9196              	.LBE8712:
 9197              	.LBB8713:
 9198              	.LBI8713:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9199              		.loc 23 75 7 is_stmt 1 view .LVU2021
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9200              		.loc 23 75 7 is_stmt 0 view .LVU2022
 9201              	.LBE8713:
 9202              	.LBB8714:
 9203              	.LBI8714:
 9204              		.loc 23 79 7 is_stmt 1 view .LVU2023
 9205              		.loc 23 79 7 is_stmt 0 view .LVU2024
 9206              	.LBE8714:
 9207              	.LBE8718:
 9208              	.LBE8729:
 9209              	.LBB8730:
 9210              	.LBB8696:
 9211              	.LBB8690:
 9212              	.LBB8684:
 9213              	.LBB8678:
 9214              	.LBB8672:
 9215              	.LBB8666:
 9216              	.LBB8660:
 9217              	.LBB8655:
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9218              		.loc 1 102 4 view .LVU2025
 9219 0554 1D94     		str	r4, [sp, #116]
 9220 0556 1E94     		str	r4, [sp, #120]
 9221              	.LBE8655:
 9222              	.LBE8660:
 9223              	.LBE8666:
 9224              	.LBE8672:
 9225              	.LBE8678:
 9226              	.LBE8684:
 9227              	.LBE8690:
 9228              	.LBE8696:
 9229              	.LBE8730:
 9230              	.LBB8731:
 9231              	.LBB8719:
 9232              	.LBB8715:
 9233              	.LBB8711:
ARM GAS  /tmp/ccfXobHU.s 			page 563


 9234              	.LBB8709:
 9235              	.LBB8705:
 9236              	.LBB8704:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9237              		.loc 1 95 47 view .LVU2026
 9238 0558 CDE91944 		strd	r4, r4, [sp, #100]
 9239              	.LBE8704:
 9240              	.LBE8705:
 9241              	.LBE8709:
 9242              	.LBE8711:
 9243              	.LBE8715:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9244              		.loc 1 626 2 view .LVU2027
 9245 055c FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 9246              	.LVL455:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9247              		.loc 1 626 2 view .LVU2028
 9248              	.LBE8719:
 9249              	.LBE8731:
 9250              	.LBB8732:
 9251              	.LBI8732:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 9252              		.loc 20 341 12 is_stmt 1 view .LVU2029
 9253              	.LBB8733:
 9254              	.LBB8734:
 9255              	.LBB8735:
 9256              	.LBI8735:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9257              		.loc 22 74 5 view .LVU2030
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9258              		.loc 22 74 5 is_stmt 0 view .LVU2031
 9259              	.LBE8735:
 9260              	.LBB8736:
 9261              	.LBI8736:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9262              		.loc 6 138 7 is_stmt 1 view .LVU2032
 9263              	.LBB8737:
 9264              	.LBI8737:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9265              		.loc 5 80 7 view .LVU2033
 9266              	.LBE8737:
 9267              	.LBE8736:
 9268              		.loc 20 342 64 is_stmt 0 view .LVU2034
 9269 0560 6449     		ldr	r1, .L323+52
 9270 0562 59A8     		add	r0, sp, #356
 9271              	.LVL456:
 9272              		.loc 20 342 64 view .LVU2035
 9273 0564 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 9274              	.LVL457:
 9275              	.LBB8738:
 9276              	.LBI8738:
 9277              		.loc 6 153 7 is_stmt 1 view .LVU2036
 9278              	.LBB8739:
 9279              	.LBI8739:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9280              		.loc 5 89 7 view .LVU2037
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 564


 9281              		.loc 5 89 7 is_stmt 0 view .LVU2038
 9282              	.LBE8739:
 9283              	.LBE8738:
 9284              	.LBB8740:
 9285              	.LBI8740:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9286              		.loc 22 74 5 is_stmt 1 view .LVU2039
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9287              		.loc 22 74 5 is_stmt 0 view .LVU2040
 9288              	.LBE8740:
 9289              	.LBB8741:
 9290              	.LBI8741:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9291              		.loc 1 569 7 is_stmt 1 view .LVU2041
 9292              	.LBB8742:
 9293              	.LBI8742:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9294              		.loc 1 305 7 view .LVU2042
 9295              	.LBB8743:
 9296              	.LBI8743:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 9297              		.loc 1 140 2 view .LVU2043
 9298              	.LBB8744:
 9299              	.LBI8744:
 9300              		.loc 22 99 5 view .LVU2044
 9301              		.loc 22 99 5 is_stmt 0 view .LVU2045
 9302              	.LBE8744:
 9303              	.LBB8745:
 9304              	.LBI8745:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9305              		.loc 6 141 7 is_stmt 1 view .LVU2046
 9306              	.LBB8746:
 9307              	.LBI8746:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9308              		.loc 5 83 7 view .LVU2047
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9309              		.loc 5 83 7 is_stmt 0 view .LVU2048
 9310              	.LBE8746:
 9311              	.LBE8745:
 9312              	.LBB8747:
 9313              	.LBI8747:
 9314              		.loc 22 99 5 is_stmt 1 view .LVU2049
 9315              		.loc 22 99 5 is_stmt 0 view .LVU2050
 9316              	.LBE8747:
 9317              	.LBB8748:
 9318              	.LBI8748:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 9319              		.loc 1 99 2 is_stmt 1 view .LVU2051
 9320              	.LBE8748:
 9321              	.LBE8743:
 9322              	.LBE8742:
 9323              	.LBE8741:
 9324              	.LBE8734:
 9325              	.LBE8733:
 9326              	.LBE8732:
 9327              		.loc 25 136 25 is_stmt 0 view .LVU2052
 9328 0568 05F1280C 		add	ip, r5, #40
ARM GAS  /tmp/ccfXobHU.s 			page 565


 9329              	.LBB8757:
 9330              	.LBB8758:
 9331              	.LBB8759:
 9332              	.LBB8760:
 9333              	.LBB8761:
 9334              	.LBB8762:
 9335              	.LBB8763:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9336              		.loc 1 95 47 view .LVU2053
 9337 056c 1894     		str	r4, [sp, #96]
 9338              	.LBE8763:
 9339              	.LBE8762:
 9340              	.LBE8761:
 9341              	.LBE8760:
 9342              	.LBE8759:
 9343              	.LBE8758:
 9344              	.LBE8757:
 9345              		.loc 25 136 25 view .LVU2054
 9346 056e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 9347 0572 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 9348              	.LBB8778:
 9349              	.LBB8756:
 9350              	.LBB8755:
 9351              	.LBB8754:
 9352              	.LBB8753:
 9353              	.LBB8752:
 9354              	.LBB8751:
 9355              	.LBB8749:
 9356              	.LBB8750:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9357              		.loc 1 101 43 view .LVU2055
 9358 0574 199B     		ldr	r3, [sp, #100]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9359              		.loc 1 102 4 view .LVU2056
 9360 0576 1994     		str	r4, [sp, #100]
 9361              	.LVL458:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9362              		.loc 1 101 43 view .LVU2057
 9363 0578 5F93     		str	r3, [sp, #380]
 9364 057a 1A9B     		ldr	r3, [sp, #104]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9365              		.loc 1 102 4 view .LVU2058
 9366 057c 1A94     		str	r4, [sp, #104]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9367              		.loc 1 101 43 view .LVU2059
 9368 057e 6093     		str	r3, [sp, #384]
 9369 0580 1B9B     		ldr	r3, [sp, #108]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9370              		.loc 1 102 4 view .LVU2060
 9371 0582 1B94     		str	r4, [sp, #108]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9372              		.loc 1 101 43 view .LVU2061
 9373 0584 6193     		str	r3, [sp, #388]
 9374              	.LBE8750:
 9375              	.LBE8749:
 9376              	.LBE8751:
 9377              	.LBE8752:
ARM GAS  /tmp/ccfXobHU.s 			page 566


 9378              	.LBE8753:
 9379              	.LBE8754:
 9380              	.LBE8755:
 9381              	.LBE8756:
 9382              	.LBE8778:
 9383              		.loc 25 136 25 view .LVU2062
 9384 0586 9CE80700 		ldm	ip, {r0, r1, r2}
 9385 058a 87E80700 		stm	r7, {r0, r1, r2}
 9386              	.LBB8779:
 9387              	.LBI8779:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9388              		.loc 6 138 7 is_stmt 1 view .LVU2063
 9389              	.LBB8780:
 9390              	.LBI8780:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9391              		.loc 5 80 7 view .LVU2064
 9392              	.LVL459:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9393              		.loc 5 80 7 is_stmt 0 view .LVU2065
 9394              	.LBE8780:
 9395              	.LBE8779:
 9396              	.LBB8781:
 9397              	.LBI8757:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 9398              		.loc 1 622 7 is_stmt 1 view .LVU2066
 9399              	.LBB8776:
 9400              	.LBB8772:
 9401              	.LBI8759:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 9402              		.loc 1 290 7 view .LVU2067
 9403              	.LBB8770:
 9404              	.LBI8760:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 9405              		.loc 1 133 2 view .LVU2068
 9406              	.LBB8766:
 9407              	.LBI8766:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9408              		.loc 6 141 7 view .LVU2069
 9409              	.LBB8767:
 9410              	.LBI8767:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9411              		.loc 5 83 7 view .LVU2070
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9412              		.loc 5 83 7 is_stmt 0 view .LVU2071
 9413              	.LBE8767:
 9414              	.LBE8766:
 9415              	.LBB8768:
 9416              	.LBI8761:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9417              		.loc 1 94 2 is_stmt 1 view .LVU2072
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9418              		.loc 1 94 2 is_stmt 0 view .LVU2073
 9419              	.LBE8768:
 9420              	.LBE8770:
 9421              	.LBE8772:
 9422              	.LBB8773:
 9423              	.LBI8773:
ARM GAS  /tmp/ccfXobHU.s 			page 567


  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9424              		.loc 23 75 7 is_stmt 1 view .LVU2074
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9425              		.loc 23 75 7 is_stmt 0 view .LVU2075
 9426              	.LBE8773:
 9427              	.LBB8774:
 9428              	.LBI8774:
 9429              		.loc 23 79 7 is_stmt 1 view .LVU2076
 9430              		.loc 23 79 7 is_stmt 0 view .LVU2077
 9431              	.LBE8774:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9432              		.loc 1 626 2 view .LVU2078
 9433 058e 4A46     		mov	r2, r9
 9434 0590 3BA9     		add	r1, sp, #236
 9435              	.LVL460:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9436              		.loc 1 626 2 view .LVU2079
 9437 0592 16A8     		add	r0, sp, #88
 9438              	.LVL461:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9439              		.loc 1 626 2 view .LVU2080
 9440              	.LBE8776:
 9441              	.LBE8781:
 137:Mu/music/theory.h ****         {"Phyrgi", std::vector<int>{0, 1, 3, 5, 7, 9, 10}},
 9442              		.loc 25 137 25 view .LVU2081
 9443 0594 34AF     		add	r7, sp, #208
 9444              	.LBB8782:
 9445              	.LBB8777:
 9446              	.LBB8775:
 9447              	.LBB8771:
 9448              	.LBB8769:
 9449              	.LBB8765:
 9450              	.LBB8764:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9451              		.loc 1 95 47 view .LVU2082
 9452 0596 CDE91644 		strd	r4, r4, [sp, #88]
 9453              	.LBE8764:
 9454              	.LBE8765:
 9455              	.LBE8769:
 9456              	.LBE8771:
 9457              	.LBE8775:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9458              		.loc 1 626 2 view .LVU2083
 9459 059a FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 9460              	.LVL462:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9461              		.loc 1 626 2 view .LVU2084
 9462              	.LBE8777:
 9463              	.LBE8782:
 9464              	.LBB8783:
 9465              	.LBI8783:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 9466              		.loc 20 341 12 is_stmt 1 view .LVU2085
 9467              	.LBB8784:
 9468              	.LBB8785:
 9469              	.LBB8786:
 9470              	.LBI8786:
ARM GAS  /tmp/ccfXobHU.s 			page 568


  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9471              		.loc 22 74 5 view .LVU2086
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9472              		.loc 22 74 5 is_stmt 0 view .LVU2087
 9473              	.LBE8786:
 9474              	.LBB8787:
 9475              	.LBI8787:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9476              		.loc 6 138 7 is_stmt 1 view .LVU2088
 9477              	.LBB8788:
 9478              	.LBI8788:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9479              		.loc 5 80 7 view .LVU2089
 9480              	.LBE8788:
 9481              	.LBE8787:
 9482              		.loc 20 342 64 is_stmt 0 view .LVU2090
 9483 059e 5649     		ldr	r1, .L323+56
 9484 05a0 62A8     		add	r0, sp, #392
 9485              	.LVL463:
 9486              		.loc 20 342 64 view .LVU2091
 9487 05a2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 9488              	.LVL464:
 9489              	.LBB8789:
 9490              	.LBI8789:
 9491              		.loc 6 153 7 is_stmt 1 view .LVU2092
 9492              	.LBB8790:
 9493              	.LBI8790:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9494              		.loc 5 89 7 view .LVU2093
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9495              		.loc 5 89 7 is_stmt 0 view .LVU2094
 9496              	.LBE8790:
 9497              	.LBE8789:
 9498              	.LBB8791:
 9499              	.LBI8791:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9500              		.loc 22 74 5 is_stmt 1 view .LVU2095
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9501              		.loc 22 74 5 is_stmt 0 view .LVU2096
 9502              	.LBE8791:
 9503              	.LBB8792:
 9504              	.LBI8792:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9505              		.loc 1 569 7 is_stmt 1 view .LVU2097
 9506              	.LBB8793:
 9507              	.LBI8793:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9508              		.loc 1 305 7 view .LVU2098
 9509              	.LBB8794:
 9510              	.LBI8794:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 9511              		.loc 1 140 2 view .LVU2099
 9512              	.LBB8795:
 9513              	.LBI8795:
 9514              		.loc 22 99 5 view .LVU2100
 9515              		.loc 22 99 5 is_stmt 0 view .LVU2101
 9516              	.LBE8795:
ARM GAS  /tmp/ccfXobHU.s 			page 569


 9517              	.LBB8796:
 9518              	.LBI8796:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9519              		.loc 6 141 7 is_stmt 1 view .LVU2102
 9520              	.LBB8797:
 9521              	.LBI8797:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9522              		.loc 5 83 7 view .LVU2103
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9523              		.loc 5 83 7 is_stmt 0 view .LVU2104
 9524              	.LBE8797:
 9525              	.LBE8796:
 9526              	.LBB8798:
 9527              	.LBI8798:
 9528              		.loc 22 99 5 is_stmt 1 view .LVU2105
 9529              		.loc 22 99 5 is_stmt 0 view .LVU2106
 9530              	.LBE8798:
 9531              	.LBB8799:
 9532              	.LBI8799:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 9533              		.loc 1 99 2 is_stmt 1 view .LVU2107
 9534              	.LBE8799:
 9535              	.LBE8794:
 9536              	.LBE8793:
 9537              	.LBE8792:
 9538              	.LBE8785:
 9539              	.LBE8784:
 9540              	.LBE8783:
 9541              		.loc 25 137 25 is_stmt 0 view .LVU2108
 9542 05a6 05F1440C 		add	ip, r5, #68
 9543              	.LBB8808:
 9544              	.LBB8809:
 9545              	.LBB8810:
 9546              	.LBB8811:
 9547              	.LBB8812:
 9548              	.LBB8813:
 9549              	.LBB8814:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9550              		.loc 1 95 47 view .LVU2109
 9551 05aa 1594     		str	r4, [sp, #84]
 9552              	.LBE8814:
 9553              	.LBE8813:
 9554              	.LBE8812:
 9555              	.LBE8811:
 9556              	.LBE8810:
 9557              	.LBE8809:
 9558              	.LBE8808:
 9559              		.loc 25 137 25 view .LVU2110
 9560 05ac BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 9561 05b0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 9562              	.LBB8829:
 9563              	.LBB8807:
 9564              	.LBB8806:
 9565              	.LBB8805:
 9566              	.LBB8804:
 9567              	.LBB8803:
 9568              	.LBB8802:
ARM GAS  /tmp/ccfXobHU.s 			page 570


 9569              	.LBB8800:
 9570              	.LBB8801:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9571              		.loc 1 101 43 view .LVU2111
 9572 05b2 169B     		ldr	r3, [sp, #88]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9573              		.loc 1 102 4 view .LVU2112
 9574 05b4 1694     		str	r4, [sp, #88]
 9575              	.LVL465:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9576              		.loc 1 101 43 view .LVU2113
 9577 05b6 6893     		str	r3, [sp, #416]
 9578 05b8 179B     		ldr	r3, [sp, #92]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9579              		.loc 1 102 4 view .LVU2114
 9580 05ba 1794     		str	r4, [sp, #92]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9581              		.loc 1 101 43 view .LVU2115
 9582 05bc 6993     		str	r3, [sp, #420]
 9583 05be 189B     		ldr	r3, [sp, #96]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9584              		.loc 1 102 4 view .LVU2116
 9585 05c0 1894     		str	r4, [sp, #96]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9586              		.loc 1 101 43 view .LVU2117
 9587 05c2 6A93     		str	r3, [sp, #424]
 9588              	.LBE8801:
 9589              	.LBE8800:
 9590              	.LBE8802:
 9591              	.LBE8803:
 9592              	.LBE8804:
 9593              	.LBE8805:
 9594              	.LBE8806:
 9595              	.LBE8807:
 9596              	.LBE8829:
 9597              		.loc 25 137 25 view .LVU2118
 9598 05c4 9CE80700 		ldm	ip, {r0, r1, r2}
 9599 05c8 87E80700 		stm	r7, {r0, r1, r2}
 9600              	.LBB8830:
 9601              	.LBI8830:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9602              		.loc 6 138 7 is_stmt 1 view .LVU2119
 9603              	.LBB8831:
 9604              	.LBI8831:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9605              		.loc 5 80 7 view .LVU2120
 9606              	.LVL466:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9607              		.loc 5 80 7 is_stmt 0 view .LVU2121
 9608              	.LBE8831:
 9609              	.LBE8830:
 9610              	.LBB8832:
 9611              	.LBI8808:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 9612              		.loc 1 622 7 is_stmt 1 view .LVU2122
 9613              	.LBB8827:
 9614              	.LBB8823:
ARM GAS  /tmp/ccfXobHU.s 			page 571


 9615              	.LBI8810:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 9616              		.loc 1 290 7 view .LVU2123
 9617              	.LBB8821:
 9618              	.LBI8811:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 9619              		.loc 1 133 2 view .LVU2124
 9620              	.LBB8817:
 9621              	.LBI8817:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9622              		.loc 6 141 7 view .LVU2125
 9623              	.LBB8818:
 9624              	.LBI8818:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9625              		.loc 5 83 7 view .LVU2126
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9626              		.loc 5 83 7 is_stmt 0 view .LVU2127
 9627              	.LBE8818:
 9628              	.LBE8817:
 9629              	.LBB8819:
 9630              	.LBI8812:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9631              		.loc 1 94 2 is_stmt 1 view .LVU2128
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9632              		.loc 1 94 2 is_stmt 0 view .LVU2129
 9633              	.LBE8819:
 9634              	.LBE8821:
 9635              	.LBE8823:
 9636              	.LBB8824:
 9637              	.LBI8824:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9638              		.loc 23 75 7 is_stmt 1 view .LVU2130
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9639              		.loc 23 75 7 is_stmt 0 view .LVU2131
 9640              	.LBE8824:
 9641              	.LBB8825:
 9642              	.LBI8825:
 9643              		.loc 23 79 7 is_stmt 1 view .LVU2132
 9644              		.loc 23 79 7 is_stmt 0 view .LVU2133
 9645              	.LBE8825:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9646              		.loc 1 626 2 view .LVU2134
 9647 05cc 3BAA     		add	r2, sp, #236
 9648 05ce 34A9     		add	r1, sp, #208
 9649              	.LVL467:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9650              		.loc 1 626 2 view .LVU2135
 9651 05d0 13A8     		add	r0, sp, #76
 9652              	.LVL468:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9653              		.loc 1 626 2 view .LVU2136
 9654              	.LBE8827:
 9655              	.LBE8832:
 138:Mu/music/theory.h ****         {"Lydian", std::vector<int>{0, 2, 4, 6, 7, 9, 11}},
 9656              		.loc 25 138 25 view .LVU2137
 9657 05d2 2DAF     		add	r7, sp, #180
 9658              	.LBB8833:
ARM GAS  /tmp/ccfXobHU.s 			page 572


 9659              	.LBB8828:
 9660              	.LBB8826:
 9661              	.LBB8822:
 9662              	.LBB8820:
 9663              	.LBB8816:
 9664              	.LBB8815:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9665              		.loc 1 95 47 view .LVU2138
 9666 05d4 CDE91344 		strd	r4, r4, [sp, #76]
 9667              	.LBE8815:
 9668              	.LBE8816:
 9669              	.LBE8820:
 9670              	.LBE8822:
 9671              	.LBE8826:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9672              		.loc 1 626 2 view .LVU2139
 9673 05d8 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 9674              	.LVL469:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9675              		.loc 1 626 2 view .LVU2140
 9676              	.LBE8828:
 9677              	.LBE8833:
 9678              	.LBB8834:
 9679              	.LBI8834:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 9680              		.loc 20 341 12 is_stmt 1 view .LVU2141
 9681              	.LBB8835:
 9682              	.LBB8836:
 9683              	.LBB8837:
 9684              	.LBI8837:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9685              		.loc 22 74 5 view .LVU2142
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9686              		.loc 22 74 5 is_stmt 0 view .LVU2143
 9687              	.LBE8837:
 9688              	.LBB8838:
 9689              	.LBI8838:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9690              		.loc 6 138 7 is_stmt 1 view .LVU2144
 9691              	.LBB8839:
 9692              	.LBI8839:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9693              		.loc 5 80 7 view .LVU2145
 9694              	.LBE8839:
 9695              	.LBE8838:
 9696              		.loc 20 342 64 is_stmt 0 view .LVU2146
 9697 05dc 4749     		ldr	r1, .L323+60
 9698 05de 6BA8     		add	r0, sp, #428
 9699              	.LVL470:
 9700              		.loc 20 342 64 view .LVU2147
 9701 05e0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 9702              	.LVL471:
 9703              	.LBB8840:
 9704              	.LBI8840:
 9705              		.loc 6 153 7 is_stmt 1 view .LVU2148
 9706              	.LBB8841:
 9707              	.LBI8841:
ARM GAS  /tmp/ccfXobHU.s 			page 573


  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9708              		.loc 5 89 7 view .LVU2149
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9709              		.loc 5 89 7 is_stmt 0 view .LVU2150
 9710              	.LBE8841:
 9711              	.LBE8840:
 9712              	.LBB8842:
 9713              	.LBI8842:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9714              		.loc 22 74 5 is_stmt 1 view .LVU2151
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9715              		.loc 22 74 5 is_stmt 0 view .LVU2152
 9716              	.LBE8842:
 9717              	.LBB8843:
 9718              	.LBI8843:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9719              		.loc 1 569 7 is_stmt 1 view .LVU2153
 9720              	.LBB8844:
 9721              	.LBI8844:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9722              		.loc 1 305 7 view .LVU2154
 9723              	.LBB8845:
 9724              	.LBI8845:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 9725              		.loc 1 140 2 view .LVU2155
 9726              	.LBB8846:
 9727              	.LBI8846:
 9728              		.loc 22 99 5 view .LVU2156
 9729              		.loc 22 99 5 is_stmt 0 view .LVU2157
 9730              	.LBE8846:
 9731              	.LBB8847:
 9732              	.LBI8847:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9733              		.loc 6 141 7 is_stmt 1 view .LVU2158
 9734              	.LBB8848:
 9735              	.LBI8848:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9736              		.loc 5 83 7 view .LVU2159
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9737              		.loc 5 83 7 is_stmt 0 view .LVU2160
 9738              	.LBE8848:
 9739              	.LBE8847:
 9740              	.LBB8849:
 9741              	.LBI8849:
 9742              		.loc 22 99 5 is_stmt 1 view .LVU2161
 9743              		.loc 22 99 5 is_stmt 0 view .LVU2162
 9744              	.LBE8849:
 9745              	.LBB8850:
 9746              	.LBI8850:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 9747              		.loc 1 99 2 is_stmt 1 view .LVU2163
 9748              	.LBE8850:
 9749              	.LBE8845:
 9750              	.LBE8844:
 9751              	.LBE8843:
 9752              	.LBE8836:
 9753              	.LBE8835:
ARM GAS  /tmp/ccfXobHU.s 			page 574


 9754              	.LBE8834:
 9755              		.loc 25 138 25 is_stmt 0 view .LVU2164
 9756 05e4 05F1600C 		add	ip, r5, #96
 9757              	.LBB8859:
 9758              	.LBB8860:
 9759              	.LBB8861:
 9760              	.LBB8862:
 9761              	.LBB8863:
 9762              	.LBB8864:
 9763              	.LBB8865:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9764              		.loc 1 95 47 view .LVU2165
 9765 05e8 1294     		str	r4, [sp, #72]
 9766              	.LBE8865:
 9767              	.LBE8864:
 9768              	.LBE8863:
 9769              	.LBE8862:
 9770              	.LBE8861:
 9771              	.LBE8860:
 9772              	.LBE8859:
 9773              		.loc 25 138 25 view .LVU2166
 9774 05ea BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 9775 05ee 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 9776              	.LBB8880:
 9777              	.LBB8858:
 9778              	.LBB8857:
 9779              	.LBB8856:
 9780              	.LBB8855:
 9781              	.LBB8854:
 9782              	.LBB8853:
 9783              	.LBB8851:
 9784              	.LBB8852:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9785              		.loc 1 101 43 view .LVU2167
 9786 05f0 139B     		ldr	r3, [sp, #76]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9787              		.loc 1 102 4 view .LVU2168
 9788 05f2 1394     		str	r4, [sp, #76]
 9789              	.LVL472:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9790              		.loc 1 101 43 view .LVU2169
 9791 05f4 7193     		str	r3, [sp, #452]
 9792 05f6 149B     		ldr	r3, [sp, #80]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9793              		.loc 1 102 4 view .LVU2170
 9794 05f8 1494     		str	r4, [sp, #80]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9795              		.loc 1 101 43 view .LVU2171
 9796 05fa 7293     		str	r3, [sp, #456]
 9797 05fc 159B     		ldr	r3, [sp, #84]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 9798              		.loc 1 102 4 view .LVU2172
 9799 05fe 1594     		str	r4, [sp, #84]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 9800              		.loc 1 101 43 view .LVU2173
 9801 0600 7393     		str	r3, [sp, #460]
 9802              	.LBE8852:
ARM GAS  /tmp/ccfXobHU.s 			page 575


 9803              	.LBE8851:
 9804              	.LBE8853:
 9805              	.LBE8854:
 9806              	.LBE8855:
 9807              	.LBE8856:
 9808              	.LBE8857:
 9809              	.LBE8858:
 9810              	.LBE8880:
 9811              		.loc 25 138 25 view .LVU2174
 9812 0602 9CE80700 		ldm	ip, {r0, r1, r2}
 9813 0606 87E80700 		stm	r7, {r0, r1, r2}
 9814              	.LBB8881:
 9815              	.LBI8881:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9816              		.loc 6 138 7 is_stmt 1 view .LVU2175
 9817              	.LBB8882:
 9818              	.LBI8882:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9819              		.loc 5 80 7 view .LVU2176
 9820              	.LVL473:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9821              		.loc 5 80 7 is_stmt 0 view .LVU2177
 9822              	.LBE8882:
 9823              	.LBE8881:
 9824              	.LBB8883:
 9825              	.LBI8859:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 9826              		.loc 1 622 7 is_stmt 1 view .LVU2178
 9827              	.LBB8878:
 9828              	.LBB8874:
 9829              	.LBI8861:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 9830              		.loc 1 290 7 view .LVU2179
 9831              	.LBB8872:
 9832              	.LBI8862:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 9833              		.loc 1 133 2 view .LVU2180
 9834              	.LBB8868:
 9835              	.LBI8868:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9836              		.loc 6 141 7 view .LVU2181
 9837              	.LBB8869:
 9838              	.LBI8869:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9839              		.loc 5 83 7 view .LVU2182
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9840              		.loc 5 83 7 is_stmt 0 view .LVU2183
 9841              	.LBE8869:
 9842              	.LBE8868:
 9843              	.LBB8870:
 9844              	.LBI8863:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9845              		.loc 1 94 2 is_stmt 1 view .LVU2184
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 9846              		.loc 1 94 2 is_stmt 0 view .LVU2185
 9847              	.LBE8870:
 9848              	.LBE8872:
ARM GAS  /tmp/ccfXobHU.s 			page 576


 9849              	.LBE8874:
 9850              	.LBB8875:
 9851              	.LBI8875:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9852              		.loc 23 75 7 is_stmt 1 view .LVU2186
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 9853              		.loc 23 75 7 is_stmt 0 view .LVU2187
 9854              	.LBE8875:
 9855              	.LBB8876:
 9856              	.LBI8876:
 9857              		.loc 23 79 7 is_stmt 1 view .LVU2188
 9858              		.loc 23 79 7 is_stmt 0 view .LVU2189
 9859              	.LBE8876:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9860              		.loc 1 626 2 view .LVU2190
 9861 060a 34AA     		add	r2, sp, #208
 9862 060c 2DA9     		add	r1, sp, #180
 9863              	.LVL474:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9864              		.loc 1 626 2 view .LVU2191
 9865 060e 10A8     		add	r0, sp, #64
 9866              	.LVL475:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9867              		.loc 1 626 2 view .LVU2192
 9868              	.LBE8878:
 9869              	.LBE8883:
 139:Mu/music/theory.h ****         {"Mixo",   std::vector<int>{0, 2, 4, 5, 7, 9, 10}},
 9870              		.loc 25 139 25 view .LVU2193
 9871 0610 26AF     		add	r7, sp, #152
 9872              	.LBB8884:
 9873              	.LBB8879:
 9874              	.LBB8877:
 9875              	.LBB8873:
 9876              	.LBB8871:
 9877              	.LBB8867:
 9878              	.LBB8866:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9879              		.loc 1 95 47 view .LVU2194
 9880 0612 CDE91044 		strd	r4, r4, [sp, #64]
 9881              	.LBE8866:
 9882              	.LBE8867:
 9883              	.LBE8871:
 9884              	.LBE8873:
 9885              	.LBE8877:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9886              		.loc 1 626 2 view .LVU2195
 9887 0616 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 9888              	.LVL476:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 9889              		.loc 1 626 2 view .LVU2196
 9890              	.LBE8879:
 9891              	.LBE8884:
 9892              	.LBB8885:
 9893              	.LBI8885:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 9894              		.loc 20 341 12 is_stmt 1 view .LVU2197
 9895              	.LBB8886:
ARM GAS  /tmp/ccfXobHU.s 			page 577


 9896              	.LBB8887:
 9897              	.LBB8888:
 9898              	.LBI8888:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9899              		.loc 22 74 5 view .LVU2198
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9900              		.loc 22 74 5 is_stmt 0 view .LVU2199
 9901              	.LBE8888:
 9902              	.LBB8889:
 9903              	.LBI8889:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 9904              		.loc 6 138 7 is_stmt 1 view .LVU2200
 9905              	.LBB8890:
 9906              	.LBI8890:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9907              		.loc 5 80 7 view .LVU2201
 9908              	.LBE8890:
 9909              	.LBE8889:
 9910              		.loc 20 342 64 is_stmt 0 view .LVU2202
 9911 061a 3949     		ldr	r1, .L323+64
 9912 061c 74A8     		add	r0, sp, #464
 9913              	.LVL477:
 9914              		.loc 20 342 64 view .LVU2203
 9915 061e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 9916              	.LVL478:
 9917              	.LBB8891:
 9918              	.LBI8891:
 9919              		.loc 6 153 7 is_stmt 1 view .LVU2204
 9920              	.LBB8892:
 9921              	.LBI8892:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9922              		.loc 5 89 7 view .LVU2205
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9923              		.loc 5 89 7 is_stmt 0 view .LVU2206
 9924              	.LBE8892:
 9925              	.LBE8891:
 9926              	.LBB8893:
 9927              	.LBI8893:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9928              		.loc 22 74 5 is_stmt 1 view .LVU2207
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 9929              		.loc 22 74 5 is_stmt 0 view .LVU2208
 9930              	.LBE8893:
 9931              	.LBB8894:
 9932              	.LBI8894:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9933              		.loc 1 569 7 is_stmt 1 view .LVU2209
 9934              	.LBB8895:
 9935              	.LBI8895:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 9936              		.loc 1 305 7 view .LVU2210
 9937              	.LBB8896:
 9938              	.LBI8896:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 9939              		.loc 1 140 2 view .LVU2211
 9940              	.LBB8897:
 9941              	.LBI8897:
ARM GAS  /tmp/ccfXobHU.s 			page 578


 9942              		.loc 22 99 5 view .LVU2212
 9943              		.loc 22 99 5 is_stmt 0 view .LVU2213
 9944              	.LBE8897:
 9945              	.LBB8898:
 9946              	.LBI8898:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9947              		.loc 6 141 7 is_stmt 1 view .LVU2214
 9948              	.LBB8899:
 9949              	.LBI8899:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9950              		.loc 5 83 7 view .LVU2215
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 9951              		.loc 5 83 7 is_stmt 0 view .LVU2216
 9952              	.LBE8899:
 9953              	.LBE8898:
 9954              	.LBB8900:
 9955              	.LBI8900:
 9956              		.loc 22 99 5 is_stmt 1 view .LVU2217
 9957              		.loc 22 99 5 is_stmt 0 view .LVU2218
 9958              	.LBE8900:
 9959              	.LBB8901:
 9960              	.LBI8901:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 9961              		.loc 1 99 2 is_stmt 1 view .LVU2219
 9962              	.LBE8901:
 9963              	.LBE8896:
 9964              	.LBE8895:
 9965              	.LBE8894:
 9966              	.LBE8887:
 9967              	.LBE8886:
 9968              	.LBE8885:
 9969              		.loc 25 139 25 is_stmt 0 view .LVU2220
 9970 0622 05F17C0C 		add	ip, r5, #124
 140:Mu/music/theory.h ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 9971              		.loc 25 140 25 view .LVU2221
 9972 0626 9835     		adds	r5, r5, #152
 9973              	.LBB8910:
 9974              	.LBB8911:
 9975              	.LBB8912:
 9976              	.LBB8913:
 9977              	.LBB8914:
 9978              	.LBB8915:
 9979              	.LBB8916:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 9980              		.loc 1 95 47 view .LVU2222
 9981 0628 0F94     		str	r4, [sp, #60]
 9982              	.LBE8916:
 9983              	.LBE8915:
 9984              	.LBE8914:
 9985              	.LBE8913:
 9986              	.LBE8912:
 9987              	.LBE8911:
 9988              	.LBE8910:
 139:Mu/music/theory.h ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 9989              		.loc 25 139 25 view .LVU2223
 9990 062a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 9991 062e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccfXobHU.s 			page 579


 9992              	.LBB8931:
 9993              	.LBB8909:
 9994              	.LBB8908:
 9995              	.LBB8907:
 9996              	.LBB8906:
 9997              	.LBB8905:
 9998              	.LBB8904:
 9999              	.LBB8902:
 10000              	.LBB8903:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10001              		.loc 1 101 43 view .LVU2224
 10002 0630 109B     		ldr	r3, [sp, #64]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10003              		.loc 1 102 4 view .LVU2225
 10004 0632 1094     		str	r4, [sp, #64]
 10005              	.LVL479:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10006              		.loc 1 101 43 view .LVU2226
 10007 0634 7A93     		str	r3, [sp, #488]
 10008 0636 119B     		ldr	r3, [sp, #68]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10009              		.loc 1 102 4 view .LVU2227
 10010 0638 1194     		str	r4, [sp, #68]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10011              		.loc 1 101 43 view .LVU2228
 10012 063a 7B93     		str	r3, [sp, #492]
 10013 063c 129B     		ldr	r3, [sp, #72]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10014              		.loc 1 102 4 view .LVU2229
 10015 063e 1294     		str	r4, [sp, #72]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10016              		.loc 1 101 43 view .LVU2230
 10017 0640 7C93     		str	r3, [sp, #496]
 10018              	.LBE8903:
 10019              	.LBE8902:
 10020              	.LBE8904:
 10021              	.LBE8905:
 10022              	.LBE8906:
 10023              	.LBE8907:
 10024              	.LBE8908:
 10025              	.LBE8909:
 10026              	.LBE8931:
 139:Mu/music/theory.h ****         {"Locri",  std::vector<int>{0, 1, 3, 5, 6, 8, 10}},
 10027              		.loc 25 139 25 view .LVU2231
 10028 0642 9CE80700 		ldm	ip, {r0, r1, r2}
 10029 0646 87E80700 		stm	r7, {r0, r1, r2}
 10030              	.LBB8932:
 10031              	.LBI8932:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 10032              		.loc 6 138 7 is_stmt 1 view .LVU2232
 10033              	.LBB8933:
 10034              	.LBI8933:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10035              		.loc 5 80 7 view .LVU2233
 10036              	.LVL480:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10037              		.loc 5 80 7 is_stmt 0 view .LVU2234
ARM GAS  /tmp/ccfXobHU.s 			page 580


 10038              	.LBE8933:
 10039              	.LBE8932:
 10040              	.LBB8934:
 10041              	.LBI8910:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10042              		.loc 1 622 7 is_stmt 1 view .LVU2235
 10043              	.LBB8929:
 10044              	.LBB8925:
 10045              	.LBI8912:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 10046              		.loc 1 290 7 view .LVU2236
 10047              	.LBB8923:
 10048              	.LBI8913:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 10049              		.loc 1 133 2 view .LVU2237
 10050              	.LBB8919:
 10051              	.LBI8919:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10052              		.loc 6 141 7 view .LVU2238
 10053              	.LBB8920:
 10054              	.LBI8920:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10055              		.loc 5 83 7 view .LVU2239
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10056              		.loc 5 83 7 is_stmt 0 view .LVU2240
 10057              	.LBE8920:
 10058              	.LBE8919:
 10059              	.LBB8921:
 10060              	.LBI8914:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10061              		.loc 1 94 2 is_stmt 1 view .LVU2241
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10062              		.loc 1 94 2 is_stmt 0 view .LVU2242
 10063              	.LBE8921:
 10064              	.LBE8923:
 10065              	.LBE8925:
 10066              	.LBB8926:
 10067              	.LBI8926:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 10068              		.loc 23 75 7 is_stmt 1 view .LVU2243
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 10069              		.loc 23 75 7 is_stmt 0 view .LVU2244
 10070              	.LBE8926:
 10071              	.LBB8927:
 10072              	.LBI8927:
 10073              		.loc 23 79 7 is_stmt 1 view .LVU2245
 10074              		.loc 23 79 7 is_stmt 0 view .LVU2246
 10075              	.LBE8927:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10076              		.loc 1 626 2 view .LVU2247
 10077 064a 2DAA     		add	r2, sp, #180
 10078 064c 26A9     		add	r1, sp, #152
 10079              	.LVL481:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10080              		.loc 1 626 2 view .LVU2248
 10081 064e 0DA8     		add	r0, sp, #52
 10082              	.LVL482:
ARM GAS  /tmp/ccfXobHU.s 			page 581


 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10083              		.loc 1 626 2 view .LVU2249
 10084              	.LBE8929:
 10085              	.LBE8934:
 10086              		.loc 25 140 25 view .LVU2250
 10087 0650 1FAF     		add	r7, sp, #124
 10088              	.LBB8935:
 10089              	.LBB8930:
 10090              	.LBB8928:
 10091              	.LBB8924:
 10092              	.LBB8922:
 10093              	.LBB8918:
 10094              	.LBB8917:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 10095              		.loc 1 95 47 view .LVU2251
 10096 0652 CDE90D44 		strd	r4, r4, [sp, #52]
 10097              	.LBE8917:
 10098              	.LBE8918:
 10099              	.LBE8922:
 10100              	.LBE8924:
 10101              	.LBE8928:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10102              		.loc 1 626 2 view .LVU2252
 10103 0656 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 10104              	.LVL483:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10105              		.loc 1 626 2 view .LVU2253
 10106              	.LBE8930:
 10107              	.LBE8935:
 10108              	.LBB8936:
 10109              	.LBI8936:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 10110              		.loc 20 341 12 is_stmt 1 view .LVU2254
 10111              	.LBB8937:
 10112              	.LBB8938:
 10113              	.LBB8939:
 10114              	.LBI8939:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10115              		.loc 22 74 5 view .LVU2255
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10116              		.loc 22 74 5 is_stmt 0 view .LVU2256
 10117              	.LBE8939:
 10118              	.LBB8940:
 10119              	.LBI8940:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 10120              		.loc 6 138 7 is_stmt 1 view .LVU2257
 10121              	.LBB8941:
 10122              	.LBI8941:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10123              		.loc 5 80 7 view .LVU2258
 10124              	.LBE8941:
 10125              	.LBE8940:
 10126              		.loc 20 342 64 is_stmt 0 view .LVU2259
 10127 065a 2A49     		ldr	r1, .L323+68
 10128 065c 7DA8     		add	r0, sp, #500
 10129              	.LVL484:
 10130              		.loc 20 342 64 view .LVU2260
ARM GAS  /tmp/ccfXobHU.s 			page 582


 10131 065e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 10132              	.LVL485:
 10133              	.LBB8942:
 10134              	.LBI8942:
 10135              		.loc 6 153 7 is_stmt 1 view .LVU2261
 10136              	.LBB8943:
 10137              	.LBI8943:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10138              		.loc 5 89 7 view .LVU2262
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10139              		.loc 5 89 7 is_stmt 0 view .LVU2263
 10140              	.LBE8943:
 10141              	.LBE8942:
 10142              	.LBB8944:
 10143              	.LBI8944:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10144              		.loc 22 74 5 is_stmt 1 view .LVU2264
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10145              		.loc 22 74 5 is_stmt 0 view .LVU2265
 10146              	.LBE8944:
 10147              	.LBB8945:
 10148              	.LBI8945:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 10149              		.loc 1 569 7 is_stmt 1 view .LVU2266
 10150              	.LBB8946:
 10151              	.LBI8946:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 10152              		.loc 1 305 7 view .LVU2267
 10153              	.LBB8947:
 10154              	.LBI8947:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 10155              		.loc 1 140 2 view .LVU2268
 10156              	.LBB8948:
 10157              	.LBI8948:
 10158              		.loc 22 99 5 view .LVU2269
 10159              		.loc 22 99 5 is_stmt 0 view .LVU2270
 10160              	.LBE8948:
 10161              	.LBB8949:
 10162              	.LBI8949:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10163              		.loc 6 141 7 is_stmt 1 view .LVU2271
 10164              	.LBB8950:
 10165              	.LBI8950:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10166              		.loc 5 83 7 view .LVU2272
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10167              		.loc 5 83 7 is_stmt 0 view .LVU2273
 10168              	.LBE8950:
 10169              	.LBE8949:
 10170              	.LBB8951:
 10171              	.LBI8951:
 10172              		.loc 22 99 5 is_stmt 1 view .LVU2274
 10173              		.loc 22 99 5 is_stmt 0 view .LVU2275
 10174              	.LBE8951:
 10175              	.LBB8952:
 10176              	.LBI8952:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
ARM GAS  /tmp/ccfXobHU.s 			page 583


 10177              		.loc 1 99 2 is_stmt 1 view .LVU2276
 10178              	.LBE8952:
 10179              	.LBE8947:
 10180              	.LBE8946:
 10181              	.LBE8945:
 10182              	.LBE8938:
 10183              	.LBE8937:
 10184              	.LBE8936:
 10185              	.LBB8961:
 10186              	.LBB8962:
 10187              	.LBB8963:
 10188              	.LBB8964:
 10189              	.LBB8965:
 10190              	.LBB8966:
 10191              	.LBB8967:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 10192              		.loc 1 95 47 is_stmt 0 view .LVU2277
 10193 0662 0C94     		str	r4, [sp, #48]
 10194              	.LBE8967:
 10195              	.LBE8966:
 10196              	.LBE8965:
 10197              	.LBE8964:
 10198              	.LBE8963:
 10199              	.LBE8962:
 10200              	.LBE8961:
 10201              		.loc 25 140 25 view .LVU2278
 10202 0664 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10203 0666 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 10204              	.LBB8982:
 10205              	.LBB8960:
 10206              	.LBB8959:
 10207              	.LBB8958:
 10208              	.LBB8957:
 10209              	.LBB8956:
 10210              	.LBB8955:
 10211              	.LBB8953:
 10212              	.LBB8954:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10213              		.loc 1 101 43 view .LVU2279
 10214 0668 0D9B     		ldr	r3, [sp, #52]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10215              		.loc 1 102 4 view .LVU2280
 10216 066a 0D94     		str	r4, [sp, #52]
 10217              	.LVL486:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10218              		.loc 1 101 43 view .LVU2281
 10219 066c 8393     		str	r3, [sp, #524]
 10220 066e 0E9B     		ldr	r3, [sp, #56]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10221              		.loc 1 102 4 view .LVU2282
 10222 0670 0E94     		str	r4, [sp, #56]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10223              		.loc 1 101 43 view .LVU2283
 10224 0672 8493     		str	r3, [sp, #528]
 10225 0674 0F9B     		ldr	r3, [sp, #60]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10226              		.loc 1 102 4 view .LVU2284
ARM GAS  /tmp/ccfXobHU.s 			page 584


 10227 0676 0F94     		str	r4, [sp, #60]
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10228              		.loc 1 101 43 view .LVU2285
 10229 0678 8593     		str	r3, [sp, #532]
 10230              	.LBE8954:
 10231              	.LBE8953:
 10232              	.LBE8955:
 10233              	.LBE8956:
 10234              	.LBE8957:
 10235              	.LBE8958:
 10236              	.LBE8959:
 10237              	.LBE8960:
 10238              	.LBE8982:
 10239              		.loc 25 140 25 view .LVU2286
 10240 067a 95E80700 		ldm	r5, {r0, r1, r2}
 10241 067e 87E80700 		stm	r7, {r0, r1, r2}
 10242              	.LBB8983:
 10243              	.LBI8983:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 10244              		.loc 6 138 7 is_stmt 1 view .LVU2287
 10245              	.LBB8984:
 10246              	.LBI8984:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10247              		.loc 5 80 7 view .LVU2288
 10248              	.LVL487:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10249              		.loc 5 80 7 is_stmt 0 view .LVU2289
 10250              	.LBE8984:
 10251              	.LBE8983:
 10252              	.LBB8985:
 10253              	.LBI8961:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 10254              		.loc 1 622 7 is_stmt 1 view .LVU2290
 10255              	.LBB8980:
 10256              	.LBB8976:
 10257              	.LBI8963:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 10258              		.loc 1 290 7 view .LVU2291
 10259              	.LBB8974:
 10260              	.LBI8964:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 10261              		.loc 1 133 2 view .LVU2292
 10262              	.LBB8970:
 10263              	.LBI8970:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10264              		.loc 6 141 7 view .LVU2293
 10265              	.LBB8971:
 10266              	.LBI8971:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10267              		.loc 5 83 7 view .LVU2294
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10268              		.loc 5 83 7 is_stmt 0 view .LVU2295
 10269              	.LBE8971:
 10270              	.LBE8970:
 10271              	.LBB8972:
 10272              	.LBI8965:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
ARM GAS  /tmp/ccfXobHU.s 			page 585


 10273              		.loc 1 94 2 is_stmt 1 view .LVU2296
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 10274              		.loc 1 94 2 is_stmt 0 view .LVU2297
 10275              	.LBE8972:
 10276              	.LBE8974:
 10277              	.LBE8976:
 10278              	.LBB8977:
 10279              	.LBI8977:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 10280              		.loc 23 75 7 is_stmt 1 view .LVU2298
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 10281              		.loc 23 75 7 is_stmt 0 view .LVU2299
 10282              	.LBE8977:
 10283              	.LBB8978:
 10284              	.LBI8978:
 10285              		.loc 23 79 7 is_stmt 1 view .LVU2300
 10286              		.loc 23 79 7 is_stmt 0 view .LVU2301
 10287              	.LBE8978:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10288              		.loc 1 626 2 view .LVU2302
 10289 0682 26AA     		add	r2, sp, #152
 10290 0684 1FA9     		add	r1, sp, #124
 10291              	.LVL488:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10292              		.loc 1 626 2 view .LVU2303
 10293 0686 0AA8     		add	r0, sp, #40
 10294              	.LVL489:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10295              		.loc 1 626 2 view .LVU2304
 10296              	.LBE8980:
 10297              	.LBE8985:
 141:Mu/music/theory.h ****     };
 10298              		.loc 25 141 5 view .LVU2305
 10299 0688 06AF     		add	r7, sp, #24
 10300 068a 88AD     		add	r5, sp, #544
 10301              	.LBB8986:
 10302              	.LBB8981:
 10303              	.LBB8979:
 10304              	.LBB8975:
 10305              	.LBB8973:
 10306              	.LBB8969:
 10307              	.LBB8968:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 10308              		.loc 1 95 47 view .LVU2306
 10309 068c CDE90A44 		strd	r4, r4, [sp, #40]
 10310              	.LBE8968:
 10311              	.LBE8969:
 10312              	.LBE8973:
 10313              	.LBE8975:
 10314              	.LBE8979:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10315              		.loc 1 626 2 view .LVU2307
 10316 0690 FFF7FEFF 		bl	_ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.
 10317              	.LVL490:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 10318              		.loc 1 626 2 view .LVU2308
 10319              	.LBE8981:
ARM GAS  /tmp/ccfXobHU.s 			page 586


 10320              	.LBE8986:
 10321              	.LBB8987:
 10322              	.LBI8987:
 341:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 10323              		.loc 20 341 12 is_stmt 1 view .LVU2309
 10324              	.LBB8988:
 10325              	.LBB8989:
 10326              	.LBB8990:
 10327              	.LBI8990:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10328              		.loc 22 74 5 view .LVU2310
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10329              		.loc 22 74 5 is_stmt 0 view .LVU2311
 10330              	.LBE8990:
 10331              	.LBB8991:
 10332              	.LBI8991:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 10333              		.loc 6 138 7 is_stmt 1 view .LVU2312
 10334              	.LBB8992:
 10335              	.LBI8992:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10336              		.loc 5 80 7 view .LVU2313
 10337              	.LBE8992:
 10338              	.LBE8991:
 10339              		.loc 20 342 64 is_stmt 0 view .LVU2314
 10340 0694 1C49     		ldr	r1, .L323+72
 10341 0696 86A8     		add	r0, sp, #536
 10342              	.LVL491:
 10343              		.loc 20 342 64 view .LVU2315
 10344 0698 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 10345              	.LVL492:
 10346              	.LBB8993:
 10347              	.LBI8993:
 10348              		.loc 6 153 7 is_stmt 1 view .LVU2316
 10349              	.LBB8994:
 10350              	.LBI8994:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10351              		.loc 5 89 7 view .LVU2317
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10352              		.loc 5 89 7 is_stmt 0 view .LVU2318
 10353              	.LBE8994:
 10354              	.LBE8993:
 10355              	.LBB8995:
 10356              	.LBI8995:
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10357              		.loc 22 74 5 is_stmt 1 view .LVU2319
  74:/usr/include/newlib/c++/9.2.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 10358              		.loc 22 74 5 is_stmt 0 view .LVU2320
 10359              	.LBE8995:
 10360              	.LBB8996:
 10361              	.LBI8996:
 569:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 10362              		.loc 1 569 7 is_stmt 1 view .LVU2321
 10363              	.LBB8997:
 10364              	.LBI8997:
 305:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 
 10365              		.loc 1 305 7 view .LVU2322
ARM GAS  /tmp/ccfXobHU.s 			page 587


 10366              	.LBB8998:
 10367              	.LBI8998:
 140:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 10368              		.loc 1 140 2 view .LVU2323
 10369              	.LBB8999:
 10370              	.LBI8999:
 10371              		.loc 22 99 5 view .LVU2324
 10372              		.loc 22 99 5 is_stmt 0 view .LVU2325
 10373              	.LBE8999:
 10374              	.LBB9000:
 10375              	.LBI9000:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10376              		.loc 6 141 7 is_stmt 1 view .LVU2326
 10377              	.LBB9001:
 10378              	.LBI9001:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10379              		.loc 5 83 7 view .LVU2327
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10380              		.loc 5 83 7 is_stmt 0 view .LVU2328
 10381              	.LBE9001:
 10382              	.LBE9000:
 10383              	.LBB9002:
 10384              	.LBI9002:
 10385              		.loc 22 99 5 is_stmt 1 view .LVU2329
 10386              		.loc 22 99 5 is_stmt 0 view .LVU2330
 10387              	.LBE9002:
 10388              	.LBB9003:
 10389              	.LBI9003:
  99:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 10390              		.loc 1 99 2 is_stmt 1 view .LVU2331
 10391              	.LBB9004:
 10392              	.LBB9005:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10393              		.loc 1 101 43 is_stmt 0 view .LVU2332
 10394 069c 0A9B     		ldr	r3, [sp, #40]
 10395              	.LBE9005:
 10396              	.LBE9004:
 10397              	.LBE9003:
 10398              	.LBE8998:
 10399              	.LBE8997:
 10400              	.LBE8996:
 10401              	.LBE8989:
 10402              	.LBE8988:
 10403              	.LBE8987:
 10404              		.loc 25 141 5 view .LVU2333
 10405 069e 0721     		movs	r1, #7
 10406 06a0 50A8     		add	r0, sp, #320
 10407              	.LBB9062:
 10408              	.LBB9055:
 10409              	.LBB9048:
 10410              	.LBB9041:
 10411              	.LBB9034:
 10412              	.LBB9027:
 10413              	.LBB9020:
 10414              	.LBB9013:
 10415              	.LBB9006:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
ARM GAS  /tmp/ccfXobHU.s 			page 588


 10416              		.loc 1 101 43 view .LVU2334
 10417 06a2 0B9A     		ldr	r2, [sp, #44]
 10418              	.LBE9006:
 10419              	.LBE9013:
 10420              	.LBE9020:
 10421              	.LBE9027:
 10422              	.LBE9034:
 10423              	.LBE9041:
 10424              	.LBE9048:
 10425              	.LBE9055:
 10426              	.LBE9062:
 10427              		.loc 25 141 5 view .LVU2335
 10428 06a4 0DF1100C 		add	ip, sp, #16
 10429              	.LBB9063:
 10430              	.LBB9056:
 10431              	.LBB9049:
 10432              	.LBB9042:
 10433              	.LBB9035:
 10434              	.LBB9028:
 10435              	.LBB9021:
 10436              	.LBB9014:
 10437              	.LBB9007:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10438              		.loc 1 101 43 view .LVU2336
 10439 06a8 0293     		str	r3, [sp, #8]
 10440              	.LBE9007:
 10441              	.LBE9014:
 10442              	.LBE9021:
 10443              	.LBE9028:
 10444              	.LBE9035:
 10445              	.LBE9042:
 10446              	.LBE9049:
 10447              	.LBE9056:
 10448              	.LBE9063:
 10449              		.loc 25 141 5 view .LVU2337
 10450 06aa 05AB     		add	r3, sp, #20
 10451              	.LBB9064:
 10452              	.LBB9057:
 10453              	.LBB9050:
 10454              	.LBB9043:
 10455              	.LBB9036:
 10456              	.LBB9029:
 10457              	.LBB9022:
 10458              	.LBB9015:
 10459              	.LBB9008:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10460              		.loc 1 101 43 view .LVU2338
 10461 06ac 0392     		str	r2, [sp, #12]
 10462 06ae 0C9A     		ldr	r2, [sp, #48]
 10463              	.LBE9008:
 10464              	.LBE9015:
 10465              	.LBE9022:
 10466              	.LBE9029:
 10467              	.LBE9036:
 10468              	.LBE9043:
 10469              	.LBE9050:
 10470              	.LBE9057:
ARM GAS  /tmp/ccfXobHU.s 			page 589


 10471              	.LBE9064:
 10472              		.loc 25 141 5 view .LVU2339
 10473 06b0 CDF800C0 		str	ip, [sp]
 10474              	.LBB9065:
 10475              	.LBB9058:
 10476              	.LBB9051:
 10477              	.LBB9044:
 10478              	.LBB9037:
 10479              	.LBB9030:
 10480              	.LBB9023:
 10481              	.LBB9016:
 10482              	.LBB9009:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10483              		.loc 1 101 43 view .LVU2340
 10484 06b4 8E92     		str	r2, [sp, #568]
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10485              		.loc 1 102 4 view .LVU2341
 10486 06b6 0A94     		str	r4, [sp, #40]
 10487              	.LVL493:
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10488              		.loc 1 102 4 view .LVU2342
 10489              	.LBE9009:
 10490              	.LBE9016:
 10491              	.LBE9023:
 10492              	.LBE9030:
 10493              	.LBE9037:
 10494              	.LBE9044:
 10495              	.LBE9051:
 10496              	.LBE9058:
 10497              	.LBE9065:
 10498              	.LBB9066:
 10499              	.LBI9066:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 10500              		.loc 6 138 7 is_stmt 1 view .LVU2343
 10501              	.LBB9067:
 10502              	.LBI9067:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10503              		.loc 5 80 7 view .LVU2344
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10504              		.loc 5 80 7 is_stmt 0 view .LVU2345
 10505              	.LBE9067:
 10506              	.LBE9066:
 10507              		.loc 25 141 5 view .LVU2346
 10508 06b8 CDE90601 		strd	r0, r1, [sp, #24]
 10509              	.LBB9068:
 10510              	.LBB9059:
 10511              	.LBB9052:
 10512              	.LBB9045:
 10513              	.LBB9038:
 10514              	.LBB9031:
 10515              	.LBB9024:
 10516              	.LBB9017:
 10517              	.LBB9010:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10518              		.loc 1 101 43 view .LVU2347
 10519 06bc 0299     		ldr	r1, [sp, #8]
 10520 06be 29E0     		b	.L324
ARM GAS  /tmp/ccfXobHU.s 			page 590


 10521              	.L325:
 10522              		.align	2
 10523              	.L323:
 10524 06c0 10010000 		.word	.LC78
 10525 06c4 14010000 		.word	.LC79
 10526 06c8 18010000 		.word	.LC80
 10527 06cc 1C010000 		.word	.LC81
 10528 06d0 20010000 		.word	.LC82
 10529 06d4 24010000 		.word	.LC83
 10530 06d8 28010000 		.word	.LC84
 10531 06dc 2C010000 		.word	.LC85
 10532 06e0 30010000 		.word	.LC86
 10533 06e4 00000000 		.word	.LANCHOR3
 10534 06e8 00000000 		.word	__dso_handle
 10535 06ec 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 10536 06f0 34010000 		.word	.LC87
 10537 06f4 3C010000 		.word	.LC88
 10538 06f8 44010000 		.word	.LC89
 10539 06fc 4C010000 		.word	.LC90
 10540 0700 54010000 		.word	.LC91
 10541 0704 5C010000 		.word	.LC92
 10542 0708 64010000 		.word	.LC93
 10543 070c 00000000 		.word	.LANCHOR4
 10544 0710 00000000 		.word	.LANCHOR5
 10545              	.L324:
 10546              	.LBE9010:
 10547              	.LBE9017:
 10548              	.LBE9024:
 10549              	.LBE9031:
 10550              	.LBE9038:
 10551              	.LBE9045:
 10552              	.LBE9052:
 10553              	.LBE9059:
 10554              	.LBE9068:
 10555              		.loc 25 141 5 view .LVU2348
 10556 0714 4948     		ldr	r0, .L326
 10557              	.LBB9069:
 10558              	.LBB9060:
 10559              	.LBB9053:
 10560              	.LBB9046:
 10561              	.LBB9039:
 10562              	.LBB9032:
 10563              	.LBB9025:
 10564              	.LBB9018:
 10565              	.LBB9011:
 101:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 10566              		.loc 1 101 43 view .LVU2349
 10567 0716 8C91     		str	r1, [sp, #560]
 10568 0718 0399     		ldr	r1, [sp, #12]
 10569 071a 8D91     		str	r1, [sp, #564]
 10570              	.LBE9011:
 10571              	.LBE9018:
 10572              	.LBE9025:
 10573              	.LBE9032:
 10574              	.LBE9039:
 10575              	.LBE9046:
 10576              	.LBE9053:
ARM GAS  /tmp/ccfXobHU.s 			page 591


 10577              	.LBE9060:
 10578              	.LBE9069:
 10579              		.loc 25 141 5 view .LVU2350
 10580 071c 97E80600 		ldm	r7, {r1, r2}
 10581              	.LBB9070:
 10582              	.LBB9061:
 10583              	.LBB9054:
 10584              	.LBB9047:
 10585              	.LBB9040:
 10586              	.LBB9033:
 10587              	.LBB9026:
 10588              	.LBB9019:
 10589              	.LBB9012:
 102:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** #endif
 10590              		.loc 1 102 4 view .LVU2351
 10591 0720 CDE90B44 		strd	r4, r4, [sp, #44]
 10592              	.LBE9012:
 10593              	.LBE9019:
 10594              	.LBE9026:
 10595              	.LBE9033:
 10596              	.LBE9040:
 10597              	.LBE9047:
 10598              	.LBE9054:
 10599              	.LBE9061:
 10600              	.LBE9070:
 10601              		.loc 25 141 5 view .LVU2352
 10602 0724 FFF7FEFF 		bl	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaIS
 10603              	.LVL494:
 10604              	.LBB9071:
 10605              	.LBI9071:
 10606              		.loc 6 153 7 is_stmt 1 view .LVU2353
 10607              	.LBB9072:
 10608              	.LBI9072:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10609              		.loc 5 89 7 view .LVU2354
 10610              	.L276:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10611              		.loc 5 89 7 is_stmt 0 view .LVU2355
 10612              	.LBE9072:
 10613              	.LBE9071:
 10614              	.LBB9073:
 10615              	.LBI9073:
 208:/usr/include/newlib/c++/9.2.1/bits/stl_pair.h ****     : private __pair_base<_T1, _T2>
 10616              		.loc 20 208 12 is_stmt 1 view .LVU2356
 10617              	.LBB9074:
 10618              	.LBI9074:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10619              		.loc 1 675 7 view .LVU2357
 10620              	.LBB9075:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10621              		.loc 1 677 15 is_stmt 0 view .LVU2358
 10622 0728 2869     		ldr	r0, [r5, #16]
 10623              	.LVL495:
 10624              	.LBB9076:
 10625              	.LBI9076:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10626              		.loc 1 273 7 is_stmt 1 view .LVU2359
ARM GAS  /tmp/ccfXobHU.s 			page 592


 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10627              		.loc 1 273 7 is_stmt 0 view .LVU2360
 10628              	.LBE9076:
 10629              	.LBB9077:
 10630              	.LBI9077:
 10631              		.loc 2 203 5 is_stmt 1 view .LVU2361
 10632              		.loc 2 203 5 is_stmt 0 view .LVU2362
 10633              	.LBE9077:
 10634              	.LBB9078:
 10635              	.LBI9078:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10636              		.loc 1 330 7 is_stmt 1 view .LVU2363
 10637              	.LBB9079:
 10638              	.LBI9079:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10639              		.loc 1 347 7 view .LVU2364
 10640              	.LBB9080:
 10641              	.LBB9081:
 10642              	.LBI9081:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10643              		.loc 4 469 7 view .LVU2365
 10644              	.LBB9082:
 10645              	.LBB9083:
 10646              	.LBI9083:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10647              		.loc 5 119 7 view .LVU2366
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10648              		.loc 5 119 7 is_stmt 0 view .LVU2367
 10649              	.LBE9083:
 10650              	.LBE9082:
 10651              	.LBE9081:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10652              		.loc 1 350 2 view .LVU2368
 10653 072a 08B1     		cbz	r0, .L274
 10654              	.LBB9087:
 10655              	.LBB9086:
 10656              	.LBB9085:
 10657              	.LBB9084:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10658              		.loc 5 128 19 view .LVU2369
 10659 072c FFF7FEFF 		bl	_ZdlPv
 10660              	.LVL496:
 10661              	.L274:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10662              		.loc 5 128 19 view .LVU2370
 10663              	.LBE9084:
 10664              	.LBE9085:
 10665              	.LBE9086:
 10666              	.LBE9087:
 10667              	.LBE9080:
 10668              	.LBE9079:
 10669              	.LBB9088:
 10670              	.LBI9088:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10671              		.loc 1 125 14 is_stmt 1 view .LVU2371
 10672              	.LBB9089:
 10673              	.LBI9089:
ARM GAS  /tmp/ccfXobHU.s 			page 593


 10674              		.loc 6 153 7 view .LVU2372
 10675              	.LBB9090:
 10676              	.LBI9090:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10677              		.loc 5 89 7 view .LVU2373
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10678              		.loc 5 89 7 is_stmt 0 view .LVU2374
 10679              	.LBE9090:
 10680              	.LBE9089:
 10681              	.LBE9088:
 10682              	.LBE9078:
 10683              	.LBE9075:
 10684              	.LBE9074:
 10685              	.LBB9091:
 10686              	.LBI9091:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 10687              		.loc 3 657 7 is_stmt 1 view .LVU2375
 10688              	.LBB9092:
 10689              	.LBI9092:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 10690              		.loc 3 229 7 view .LVU2376
 10691              	.LBB9093:
 10692              	.LBB9094:
 10693              	.LBI9094:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10694              		.loc 3 221 7 view .LVU2377
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10695              		.loc 3 221 7 is_stmt 0 view .LVU2378
 10696              	.LBE9094:
 10697              	.LBB9096:
 10698              	.LBI9096:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10699              		.loc 3 236 7 is_stmt 1 view .LVU2379
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10700              		.loc 3 236 7 is_stmt 0 view .LVU2380
 10701              	.LBE9096:
 10702              	.LBB9104:
 10703              	.LBB9095:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 10704              		.loc 3 222 26 view .LVU2381
 10705 0730 55F8080C 		ldr	r0, [r5, #-8]
 10706              	.LVL497:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 10707              		.loc 3 222 26 view .LVU2382
 10708              	.LBE9095:
 10709              	.LBE9104:
 10710              	.LBB9105:
 10711              	.LBB9097:
 10712              	.LBB9098:
 10713              	.LBI9098:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10714              		.loc 4 469 7 is_stmt 1 view .LVU2383
 10715              	.LBB9099:
 10716              	.LBI9099:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10717              		.loc 5 119 7 view .LVU2384
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 594


 10718              		.loc 5 119 7 is_stmt 0 view .LVU2385
 10719              	.LBE9099:
 10720              	.LBE9098:
 10721              	.LBE9097:
 10722              	.LBE9105:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10723              		.loc 3 231 2 view .LVU2386
 10724 0734 A842     		cmp	r0, r5
 10725 0736 A5F12405 		sub	r5, r5, #36
 10726              	.LVL498:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10727              		.loc 3 231 2 view .LVU2387
 10728 073a 01D0     		beq	.L275
 10729              	.LBB9106:
 10730              	.LBB9103:
 10731              	.LBB9102:
 10732              	.LBB9101:
 10733              	.LBB9100:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10734              		.loc 5 128 19 view .LVU2388
 10735 073c FFF7FEFF 		bl	_ZdlPv
 10736              	.LVL499:
 10737              	.L275:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10738              		.loc 5 128 19 view .LVU2389
 10739              	.LBE9100:
 10740              	.LBE9101:
 10741              	.LBE9102:
 10742              	.LBE9103:
 10743              	.LBE9106:
 10744              	.LBE9093:
 10745              	.LBE9092:
 10746              	.LBB9107:
 10747              	.LBI9107:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 10748              		.loc 3 150 14 is_stmt 1 view .LVU2390
 10749              	.LBB9108:
 10750              	.LBI9108:
 10751              		.loc 6 153 7 view .LVU2391
 10752              	.LBB9109:
 10753              	.LBI9109:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10754              		.loc 5 89 7 view .LVU2392
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10755              		.loc 5 89 7 is_stmt 0 view .LVU2393
 10756              	.LBE9109:
 10757              	.LBE9108:
 10758              	.LBE9107:
 10759              	.LBE9091:
 10760              	.LBE9073:
 10761              		.loc 25 141 5 view .LVU2394
 10762 0740 4545     		cmp	r5, r8
 10763 0742 F1D1     		bne	.L276
 10764              	.LVL500:
 10765              	.LBB9110:
 10766              	.LBI9110:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 595


 10767              		.loc 1 675 7 is_stmt 1 view .LVU2395
 10768              	.LBB9111:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10769              		.loc 1 677 15 is_stmt 0 view .LVU2396
 10770 0744 0A98     		ldr	r0, [sp, #40]
 10771              	.LVL501:
 10772              	.LBB9112:
 10773              	.LBI9112:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10774              		.loc 1 273 7 is_stmt 1 view .LVU2397
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10775              		.loc 1 273 7 is_stmt 0 view .LVU2398
 10776              	.LBE9112:
 10777              	.LBB9113:
 10778              	.LBI9113:
 10779              		.loc 2 203 5 is_stmt 1 view .LVU2399
 10780              		.loc 2 203 5 is_stmt 0 view .LVU2400
 10781              	.LBE9113:
 10782              	.LBB9114:
 10783              	.LBI9114:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10784              		.loc 1 330 7 is_stmt 1 view .LVU2401
 10785              	.LBB9115:
 10786              	.LBI9115:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10787              		.loc 1 347 7 view .LVU2402
 10788              	.LBB9116:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10789              		.loc 1 350 2 is_stmt 0 view .LVU2403
 10790 0746 08B1     		cbz	r0, .L277
 10791              	.LVL502:
 10792              	.LBB9117:
 10793              	.LBI9117:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10794              		.loc 4 469 7 is_stmt 1 view .LVU2404
 10795              	.LBB9118:
 10796              	.LBB9119:
 10797              	.LBI9119:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10798              		.loc 5 119 7 view .LVU2405
 10799              	.LBB9120:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10800              		.loc 5 128 19 is_stmt 0 view .LVU2406
 10801 0748 FFF7FEFF 		bl	_ZdlPv
 10802              	.LVL503:
 10803              	.L277:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10804              		.loc 5 128 19 view .LVU2407
 10805              	.LBE9120:
 10806              	.LBE9119:
 10807              	.LBE9118:
 10808              	.LBE9117:
 10809              	.LBE9116:
 10810              	.LBE9115:
 10811              	.LBB9121:
 10812              	.LBI9121:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
ARM GAS  /tmp/ccfXobHU.s 			page 596


 10813              		.loc 1 125 14 is_stmt 1 view .LVU2408
 10814              	.LBB9122:
 10815              	.LBI9122:
 10816              		.loc 6 153 7 view .LVU2409
 10817              	.LBB9123:
 10818              	.LBI9123:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10819              		.loc 5 89 7 view .LVU2410
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10820              		.loc 5 89 7 is_stmt 0 view .LVU2411
 10821              	.LBE9123:
 10822              	.LBE9122:
 10823              	.LBE9121:
 10824              	.LBE9114:
 10825              	.LBE9111:
 10826              	.LBE9110:
 10827              	.LBB9124:
 10828              	.LBI9124:
 10829              		.loc 6 153 7 is_stmt 1 view .LVU2412
 10830              	.LBB9125:
 10831              	.LBI9125:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10832              		.loc 5 89 7 view .LVU2413
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10833              		.loc 5 89 7 is_stmt 0 view .LVU2414
 10834              	.LBE9125:
 10835              	.LBE9124:
 10836              	.LBB9126:
 10837              	.LBI9126:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10838              		.loc 1 675 7 is_stmt 1 view .LVU2415
 10839              	.LBB9127:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10840              		.loc 1 677 15 is_stmt 0 view .LVU2416
 10841 074c 0D98     		ldr	r0, [sp, #52]
 10842              	.LVL504:
 10843              	.LBB9128:
 10844              	.LBI9128:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10845              		.loc 1 273 7 is_stmt 1 view .LVU2417
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10846              		.loc 1 273 7 is_stmt 0 view .LVU2418
 10847              	.LBE9128:
 10848              	.LBB9129:
 10849              	.LBI9129:
 10850              		.loc 2 203 5 is_stmt 1 view .LVU2419
 10851              		.loc 2 203 5 is_stmt 0 view .LVU2420
 10852              	.LBE9129:
 10853              	.LBB9130:
 10854              	.LBI9130:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10855              		.loc 1 330 7 is_stmt 1 view .LVU2421
 10856              	.LBB9131:
 10857              	.LBI9131:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10858              		.loc 1 347 7 view .LVU2422
 10859              	.LBB9132:
ARM GAS  /tmp/ccfXobHU.s 			page 597


 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10860              		.loc 1 350 2 is_stmt 0 view .LVU2423
 10861 074e 08B1     		cbz	r0, .L278
 10862              	.LVL505:
 10863              	.LBB9133:
 10864              	.LBI9133:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10865              		.loc 4 469 7 is_stmt 1 view .LVU2424
 10866              	.LBB9134:
 10867              	.LBB9135:
 10868              	.LBI9135:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10869              		.loc 5 119 7 view .LVU2425
 10870              	.LBB9136:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10871              		.loc 5 128 19 is_stmt 0 view .LVU2426
 10872 0750 FFF7FEFF 		bl	_ZdlPv
 10873              	.LVL506:
 10874              	.L278:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10875              		.loc 5 128 19 view .LVU2427
 10876              	.LBE9136:
 10877              	.LBE9135:
 10878              	.LBE9134:
 10879              	.LBE9133:
 10880              	.LBE9132:
 10881              	.LBE9131:
 10882              	.LBB9137:
 10883              	.LBI9137:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10884              		.loc 1 125 14 is_stmt 1 view .LVU2428
 10885              	.LBB9138:
 10886              	.LBI9138:
 10887              		.loc 6 153 7 view .LVU2429
 10888              	.LBB9139:
 10889              	.LBI9139:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10890              		.loc 5 89 7 view .LVU2430
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10891              		.loc 5 89 7 is_stmt 0 view .LVU2431
 10892              	.LBE9139:
 10893              	.LBE9138:
 10894              	.LBE9137:
 10895              	.LBE9130:
 10896              	.LBE9127:
 10897              	.LBE9126:
 10898              	.LBB9140:
 10899              	.LBI9140:
 10900              		.loc 6 153 7 is_stmt 1 view .LVU2432
 10901              	.LBB9141:
 10902              	.LBI9141:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10903              		.loc 5 89 7 view .LVU2433
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10904              		.loc 5 89 7 is_stmt 0 view .LVU2434
 10905              	.LBE9141:
 10906              	.LBE9140:
ARM GAS  /tmp/ccfXobHU.s 			page 598


 10907              	.LBB9142:
 10908              	.LBI9142:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10909              		.loc 1 675 7 is_stmt 1 view .LVU2435
 10910              	.LBB9143:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10911              		.loc 1 677 15 is_stmt 0 view .LVU2436
 10912 0754 1098     		ldr	r0, [sp, #64]
 10913              	.LVL507:
 10914              	.LBB9144:
 10915              	.LBI9144:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10916              		.loc 1 273 7 is_stmt 1 view .LVU2437
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10917              		.loc 1 273 7 is_stmt 0 view .LVU2438
 10918              	.LBE9144:
 10919              	.LBB9145:
 10920              	.LBI9145:
 10921              		.loc 2 203 5 is_stmt 1 view .LVU2439
 10922              		.loc 2 203 5 is_stmt 0 view .LVU2440
 10923              	.LBE9145:
 10924              	.LBB9146:
 10925              	.LBI9146:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10926              		.loc 1 330 7 is_stmt 1 view .LVU2441
 10927              	.LBB9147:
 10928              	.LBI9147:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10929              		.loc 1 347 7 view .LVU2442
 10930              	.LBB9148:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10931              		.loc 1 350 2 is_stmt 0 view .LVU2443
 10932 0756 08B1     		cbz	r0, .L279
 10933              	.LVL508:
 10934              	.LBB9149:
 10935              	.LBI9149:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10936              		.loc 4 469 7 is_stmt 1 view .LVU2444
 10937              	.LBB9150:
 10938              	.LBB9151:
 10939              	.LBI9151:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 10940              		.loc 5 119 7 view .LVU2445
 10941              	.LBB9152:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10942              		.loc 5 128 19 is_stmt 0 view .LVU2446
 10943 0758 FFF7FEFF 		bl	_ZdlPv
 10944              	.LVL509:
 10945              	.L279:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 10946              		.loc 5 128 19 view .LVU2447
 10947              	.LBE9152:
 10948              	.LBE9151:
 10949              	.LBE9150:
 10950              	.LBE9149:
 10951              	.LBE9148:
 10952              	.LBE9147:
ARM GAS  /tmp/ccfXobHU.s 			page 599


 10953              	.LBB9153:
 10954              	.LBI9153:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 10955              		.loc 1 125 14 is_stmt 1 view .LVU2448
 10956              	.LBB9154:
 10957              	.LBI9154:
 10958              		.loc 6 153 7 view .LVU2449
 10959              	.LBB9155:
 10960              	.LBI9155:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10961              		.loc 5 89 7 view .LVU2450
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10962              		.loc 5 89 7 is_stmt 0 view .LVU2451
 10963              	.LBE9155:
 10964              	.LBE9154:
 10965              	.LBE9153:
 10966              	.LBE9146:
 10967              	.LBE9143:
 10968              	.LBE9142:
 10969              	.LBB9156:
 10970              	.LBI9156:
 10971              		.loc 6 153 7 is_stmt 1 view .LVU2452
 10972              	.LBB9157:
 10973              	.LBI9157:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10974              		.loc 5 89 7 view .LVU2453
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 10975              		.loc 5 89 7 is_stmt 0 view .LVU2454
 10976              	.LBE9157:
 10977              	.LBE9156:
 10978              	.LBB9158:
 10979              	.LBI9158:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10980              		.loc 1 675 7 is_stmt 1 view .LVU2455
 10981              	.LBB9159:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 10982              		.loc 1 677 15 is_stmt 0 view .LVU2456
 10983 075c 1398     		ldr	r0, [sp, #76]
 10984              	.LVL510:
 10985              	.LBB9160:
 10986              	.LBI9160:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10987              		.loc 1 273 7 is_stmt 1 view .LVU2457
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 10988              		.loc 1 273 7 is_stmt 0 view .LVU2458
 10989              	.LBE9160:
 10990              	.LBB9161:
 10991              	.LBI9161:
 10992              		.loc 2 203 5 is_stmt 1 view .LVU2459
 10993              		.loc 2 203 5 is_stmt 0 view .LVU2460
 10994              	.LBE9161:
 10995              	.LBB9162:
 10996              	.LBI9162:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 10997              		.loc 1 330 7 is_stmt 1 view .LVU2461
 10998              	.LBB9163:
 10999              	.LBI9163:
ARM GAS  /tmp/ccfXobHU.s 			page 600


 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11000              		.loc 1 347 7 view .LVU2462
 11001              	.LBB9164:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11002              		.loc 1 350 2 is_stmt 0 view .LVU2463
 11003 075e 08B1     		cbz	r0, .L280
 11004              	.LVL511:
 11005              	.LBB9165:
 11006              	.LBI9165:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11007              		.loc 4 469 7 is_stmt 1 view .LVU2464
 11008              	.LBB9166:
 11009              	.LBB9167:
 11010              	.LBI9167:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11011              		.loc 5 119 7 view .LVU2465
 11012              	.LBB9168:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11013              		.loc 5 128 19 is_stmt 0 view .LVU2466
 11014 0760 FFF7FEFF 		bl	_ZdlPv
 11015              	.LVL512:
 11016              	.L280:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11017              		.loc 5 128 19 view .LVU2467
 11018              	.LBE9168:
 11019              	.LBE9167:
 11020              	.LBE9166:
 11021              	.LBE9165:
 11022              	.LBE9164:
 11023              	.LBE9163:
 11024              	.LBB9169:
 11025              	.LBI9169:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11026              		.loc 1 125 14 is_stmt 1 view .LVU2468
 11027              	.LBB9170:
 11028              	.LBI9170:
 11029              		.loc 6 153 7 view .LVU2469
 11030              	.LBB9171:
 11031              	.LBI9171:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11032              		.loc 5 89 7 view .LVU2470
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11033              		.loc 5 89 7 is_stmt 0 view .LVU2471
 11034              	.LBE9171:
 11035              	.LBE9170:
 11036              	.LBE9169:
 11037              	.LBE9162:
 11038              	.LBE9159:
 11039              	.LBE9158:
 11040              	.LBB9172:
 11041              	.LBI9172:
 11042              		.loc 6 153 7 is_stmt 1 view .LVU2472
 11043              	.LBB9173:
 11044              	.LBI9173:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11045              		.loc 5 89 7 view .LVU2473
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccfXobHU.s 			page 601


 11046              		.loc 5 89 7 is_stmt 0 view .LVU2474
 11047              	.LBE9173:
 11048              	.LBE9172:
 11049              	.LBB9174:
 11050              	.LBI9174:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11051              		.loc 1 675 7 is_stmt 1 view .LVU2475
 11052              	.LBB9175:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 11053              		.loc 1 677 15 is_stmt 0 view .LVU2476
 11054 0764 1698     		ldr	r0, [sp, #88]
 11055              	.LVL513:
 11056              	.LBB9176:
 11057              	.LBI9176:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11058              		.loc 1 273 7 is_stmt 1 view .LVU2477
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11059              		.loc 1 273 7 is_stmt 0 view .LVU2478
 11060              	.LBE9176:
 11061              	.LBB9177:
 11062              	.LBI9177:
 11063              		.loc 2 203 5 is_stmt 1 view .LVU2479
 11064              		.loc 2 203 5 is_stmt 0 view .LVU2480
 11065              	.LBE9177:
 11066              	.LBB9178:
 11067              	.LBI9178:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11068              		.loc 1 330 7 is_stmt 1 view .LVU2481
 11069              	.LBB9179:
 11070              	.LBI9179:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11071              		.loc 1 347 7 view .LVU2482
 11072              	.LBB9180:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11073              		.loc 1 350 2 is_stmt 0 view .LVU2483
 11074 0766 08B1     		cbz	r0, .L281
 11075              	.LVL514:
 11076              	.LBB9181:
 11077              	.LBI9181:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11078              		.loc 4 469 7 is_stmt 1 view .LVU2484
 11079              	.LBB9182:
 11080              	.LBB9183:
 11081              	.LBI9183:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11082              		.loc 5 119 7 view .LVU2485
 11083              	.LBB9184:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11084              		.loc 5 128 19 is_stmt 0 view .LVU2486
 11085 0768 FFF7FEFF 		bl	_ZdlPv
 11086              	.LVL515:
 11087              	.L281:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11088              		.loc 5 128 19 view .LVU2487
 11089              	.LBE9184:
 11090              	.LBE9183:
 11091              	.LBE9182:
ARM GAS  /tmp/ccfXobHU.s 			page 602


 11092              	.LBE9181:
 11093              	.LBE9180:
 11094              	.LBE9179:
 11095              	.LBB9185:
 11096              	.LBI9185:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11097              		.loc 1 125 14 is_stmt 1 view .LVU2488
 11098              	.LBB9186:
 11099              	.LBI9186:
 11100              		.loc 6 153 7 view .LVU2489
 11101              	.LBB9187:
 11102              	.LBI9187:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11103              		.loc 5 89 7 view .LVU2490
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11104              		.loc 5 89 7 is_stmt 0 view .LVU2491
 11105              	.LBE9187:
 11106              	.LBE9186:
 11107              	.LBE9185:
 11108              	.LBE9178:
 11109              	.LBE9175:
 11110              	.LBE9174:
 11111              	.LBB9188:
 11112              	.LBI9188:
 11113              		.loc 6 153 7 is_stmt 1 view .LVU2492
 11114              	.LBB9189:
 11115              	.LBI9189:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11116              		.loc 5 89 7 view .LVU2493
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11117              		.loc 5 89 7 is_stmt 0 view .LVU2494
 11118              	.LBE9189:
 11119              	.LBE9188:
 11120              	.LBB9190:
 11121              	.LBI9190:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11122              		.loc 1 675 7 is_stmt 1 view .LVU2495
 11123              	.LBB9191:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 11124              		.loc 1 677 15 is_stmt 0 view .LVU2496
 11125 076c 1998     		ldr	r0, [sp, #100]
 11126              	.LVL516:
 11127              	.LBB9192:
 11128              	.LBI9192:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11129              		.loc 1 273 7 is_stmt 1 view .LVU2497
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11130              		.loc 1 273 7 is_stmt 0 view .LVU2498
 11131              	.LBE9192:
 11132              	.LBB9193:
 11133              	.LBI9193:
 11134              		.loc 2 203 5 is_stmt 1 view .LVU2499
 11135              		.loc 2 203 5 is_stmt 0 view .LVU2500
 11136              	.LBE9193:
 11137              	.LBB9194:
 11138              	.LBI9194:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
ARM GAS  /tmp/ccfXobHU.s 			page 603


 11139              		.loc 1 330 7 is_stmt 1 view .LVU2501
 11140              	.LBB9195:
 11141              	.LBI9195:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11142              		.loc 1 347 7 view .LVU2502
 11143              	.LBB9196:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11144              		.loc 1 350 2 is_stmt 0 view .LVU2503
 11145 076e 08B1     		cbz	r0, .L282
 11146              	.LVL517:
 11147              	.LBB9197:
 11148              	.LBI9197:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11149              		.loc 4 469 7 is_stmt 1 view .LVU2504
 11150              	.LBB9198:
 11151              	.LBB9199:
 11152              	.LBI9199:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11153              		.loc 5 119 7 view .LVU2505
 11154              	.LBB9200:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11155              		.loc 5 128 19 is_stmt 0 view .LVU2506
 11156 0770 FFF7FEFF 		bl	_ZdlPv
 11157              	.LVL518:
 11158              	.L282:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11159              		.loc 5 128 19 view .LVU2507
 11160              	.LBE9200:
 11161              	.LBE9199:
 11162              	.LBE9198:
 11163              	.LBE9197:
 11164              	.LBE9196:
 11165              	.LBE9195:
 11166              	.LBB9201:
 11167              	.LBI9201:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11168              		.loc 1 125 14 is_stmt 1 view .LVU2508
 11169              	.LBB9202:
 11170              	.LBI9202:
 11171              		.loc 6 153 7 view .LVU2509
 11172              	.LBB9203:
 11173              	.LBI9203:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11174              		.loc 5 89 7 view .LVU2510
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11175              		.loc 5 89 7 is_stmt 0 view .LVU2511
 11176              	.LBE9203:
 11177              	.LBE9202:
 11178              	.LBE9201:
 11179              	.LBE9194:
 11180              	.LBE9191:
 11181              	.LBE9190:
 11182              	.LBB9204:
 11183              	.LBI9204:
 11184              		.loc 6 153 7 is_stmt 1 view .LVU2512
 11185              	.LBB9205:
 11186              	.LBI9205:
ARM GAS  /tmp/ccfXobHU.s 			page 604


  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11187              		.loc 5 89 7 view .LVU2513
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11188              		.loc 5 89 7 is_stmt 0 view .LVU2514
 11189              	.LBE9205:
 11190              	.LBE9204:
 11191              	.LBB9206:
 11192              	.LBI9206:
 675:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11193              		.loc 1 675 7 is_stmt 1 view .LVU2515
 11194              	.LBB9207:
 677:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 11195              		.loc 1 677 15 is_stmt 0 view .LVU2516
 11196 0774 1C98     		ldr	r0, [sp, #112]
 11197              	.LVL519:
 11198              	.LBB9208:
 11199              	.LBI9208:
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11200              		.loc 1 273 7 is_stmt 1 view .LVU2517
 273:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       { return this->_M_impl; }
 11201              		.loc 1 273 7 is_stmt 0 view .LVU2518
 11202              	.LBE9208:
 11203              	.LBB9209:
 11204              	.LBI9209:
 11205              		.loc 2 203 5 is_stmt 1 view .LVU2519
 11206              		.loc 2 203 5 is_stmt 0 view .LVU2520
 11207              	.LBE9209:
 11208              	.LBB9210:
 11209              	.LBI9210:
 330:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11210              		.loc 1 330 7 is_stmt 1 view .LVU2521
 11211              	.LBB9211:
 11212              	.LBI9211:
 347:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       {
 11213              		.loc 1 347 7 view .LVU2522
 11214              	.LBB9212:
 350:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 11215              		.loc 1 350 2 is_stmt 0 view .LVU2523
 11216 0776 08B1     		cbz	r0, .L283
 11217              	.LVL520:
 11218              	.LBB9213:
 11219              	.LBI9213:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11220              		.loc 4 469 7 is_stmt 1 view .LVU2524
 11221              	.LBB9214:
 11222              	.LBB9215:
 11223              	.LBI9215:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11224              		.loc 5 119 7 view .LVU2525
 11225              	.LBB9216:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11226              		.loc 5 128 19 is_stmt 0 view .LVU2526
 11227 0778 FFF7FEFF 		bl	_ZdlPv
 11228              	.LVL521:
 11229              	.L283:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11230              		.loc 5 128 19 view .LVU2527
ARM GAS  /tmp/ccfXobHU.s 			page 605


 11231              	.LBE9216:
 11232              	.LBE9215:
 11233              	.LBE9214:
 11234              	.LBE9213:
 11235              	.LBE9212:
 11236              	.LBE9211:
 11237              	.LBB9217:
 11238              	.LBI9217:
 125:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 11239              		.loc 1 125 14 is_stmt 1 view .LVU2528
 11240              	.LBB9218:
 11241              	.LBI9218:
 11242              		.loc 6 153 7 view .LVU2529
 11243              	.LBB9219:
 11244              	.LBI9219:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11245              		.loc 5 89 7 view .LVU2530
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11246              		.loc 5 89 7 is_stmt 0 view .LVU2531
 11247              	.LBE9219:
 11248              	.LBE9218:
 11249              	.LBE9217:
 11250              	.LBE9210:
 11251              	.LBE9207:
 11252              	.LBE9206:
 11253              	.LBB9220:
 11254              	.LBI9220:
 11255              		.loc 6 153 7 is_stmt 1 view .LVU2532
 11256              	.LBB9221:
 11257              	.LBI9221:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11258              		.loc 5 89 7 view .LVU2533
 11259              	.LBE9221:
 11260              	.LBE9220:
 133:Mu/music/theory.h ****         {"Major",  std::vector<int>{0, 2, 4, 5, 7, 9, 11}},
 11261              		.loc 25 133 51 is_stmt 0 view .LVU2534
 11262 077c 304A     		ldr	r2, .L326+4
 11263 077e 64AC     		add	r4, sp, #400
 11264 0780 3049     		ldr	r1, .L326+8
 11265 0782 2E48     		ldr	r0, .L326
 11266 0784 FFF7FEFF 		bl	__aeabi_atexit
 11267              	.LVL522:
 11268              	.LBB9222:
 11269              	.LBI9222:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11270              		.loc 6 138 7 is_stmt 1 view .LVU2535
 11271              	.LBB9223:
 11272              	.LBI9223:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11273              		.loc 5 80 7 view .LVU2536
 11274              	.LBE9223:
 11275              	.LBE9222:
 142:Mu/music/theory.h **** 
 143:Mu/music/theory.h ****     const std::vector<std::string> allInversions {
 144:Mu/music/theory.h ****         "None",
 145:Mu/music/theory.h ****         "Drop 2",
 146:Mu/music/theory.h ****         "Drop 3",
ARM GAS  /tmp/ccfXobHU.s 			page 606


 147:Mu/music/theory.h ****         "Drop 4"
 148:Mu/music/theory.h ****     };
 11276              		.loc 25 148 5 is_stmt 0 view .LVU2537
 11277 0788 2F49     		ldr	r1, .L326+12
 11278 078a 50A8     		add	r0, sp, #320
 11279 078c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11280              	.LVL523:
 11281              	.LBB9224:
 11282              	.LBI9224:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11283              		.loc 6 138 7 is_stmt 1 view .LVU2538
 11284              	.LBB9225:
 11285              	.LBI9225:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11286              		.loc 5 80 7 view .LVU2539
 11287              	.LBE9225:
 11288              	.LBE9224:
 11289              		.loc 25 148 5 is_stmt 0 view .LVU2540
 11290 0790 2E49     		ldr	r1, .L326+16
 11291 0792 56A8     		add	r0, sp, #344
 11292 0794 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11293              	.LVL524:
 11294              	.LBB9226:
 11295              	.LBI9226:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11296              		.loc 6 138 7 is_stmt 1 view .LVU2541
 11297              	.LBB9227:
 11298              	.LBI9227:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11299              		.loc 5 80 7 view .LVU2542
 11300              	.LBE9227:
 11301              	.LBE9226:
 11302              		.loc 25 148 5 is_stmt 0 view .LVU2543
 11303 0798 2D49     		ldr	r1, .L326+20
 11304 079a 5CA8     		add	r0, sp, #368
 11305 079c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11306              	.LVL525:
 11307              	.LBB9228:
 11308              	.LBI9228:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11309              		.loc 6 138 7 is_stmt 1 view .LVU2544
 11310              	.LBB9229:
 11311              	.LBI9229:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11312              		.loc 5 80 7 view .LVU2545
 11313              	.LBE9229:
 11314              	.LBE9228:
 11315              		.loc 25 148 5 is_stmt 0 view .LVU2546
 11316 07a0 2C49     		ldr	r1, .L326+24
 11317 07a2 62A8     		add	r0, sp, #392
 11318 07a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11319              	.LVL526:
 11320              	.LBB9230:
 11321              	.LBI9230:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11322              		.loc 6 138 7 is_stmt 1 view .LVU2547
 11323              	.LBB9231:
ARM GAS  /tmp/ccfXobHU.s 			page 607


 11324              	.LBI9231:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11325              		.loc 5 80 7 view .LVU2548
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11326              		.loc 5 80 7 is_stmt 0 view .LVU2549
 11327              	.LBE9231:
 11328              	.LBE9230:
 11329              	.LBB9232:
 11330              	.LBI9232:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11331              		.loc 1 622 7 is_stmt 1 view .LVU2550
 11332              	.LBB9233:
 11333              	.LBB9234:
 11334              	.LBI9234:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 11335              		.loc 1 290 7 view .LVU2551
 11336              	.LBB9235:
 11337              	.LBI9235:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 11338              		.loc 1 133 2 view .LVU2552
 11339              	.LBB9236:
 11340              	.LBI9236:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11341              		.loc 6 141 7 view .LVU2553
 11342              	.LBB9237:
 11343              	.LBI9237:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11344              		.loc 5 83 7 view .LVU2554
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11345              		.loc 5 83 7 is_stmt 0 view .LVU2555
 11346              	.LBE9237:
 11347              	.LBE9236:
 11348              	.LBB9238:
 11349              	.LBI9238:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11350              		.loc 1 94 2 is_stmt 1 view .LVU2556
 11351              	.LBB9239:
 11352              	.LBB9240:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11353              		.loc 1 95 47 is_stmt 0 view .LVU2557
 11354 07a8 2B48     		ldr	r0, .L326+28
 11355 07aa 0023     		movs	r3, #0
 11356              	.LBE9240:
 11357              	.LBE9239:
 11358              	.LBE9238:
 11359              	.LBE9235:
 11360              	.LBE9234:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11361              		.loc 1 626 2 view .LVU2558
 11362 07ac 68AA     		add	r2, sp, #416
 11363 07ae 50A9     		add	r1, sp, #320
 11364              	.LBB9249:
 11365              	.LBB9247:
 11366              	.LBB9245:
 11367              	.LBB9243:
 11368              	.LBB9241:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
ARM GAS  /tmp/ccfXobHU.s 			page 608


 11369              		.loc 1 95 47 view .LVU2559
 11370 07b0 8360     		str	r3, [r0, #8]
 11371              	.LVL527:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11372              		.loc 1 95 47 view .LVU2560
 11373              	.LBE9241:
 11374              	.LBE9243:
 11375              	.LBE9245:
 11376              	.LBE9247:
 11377              	.LBE9249:
 11378              	.LBB9250:
 11379              	.LBI9250:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 11380              		.loc 23 75 7 is_stmt 1 view .LVU2561
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 11381              		.loc 23 75 7 is_stmt 0 view .LVU2562
 11382              	.LBE9250:
 11383              	.LBB9251:
 11384              	.LBI9251:
 11385              		.loc 23 79 7 is_stmt 1 view .LVU2563
 11386              		.loc 23 79 7 is_stmt 0 view .LVU2564
 11387              	.LBE9251:
 11388              	.LBB9252:
 11389              	.LBB9248:
 11390              	.LBB9246:
 11391              	.LBB9244:
 11392              	.LBB9242:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11393              		.loc 1 95 47 view .LVU2565
 11394 07b2 C0E90033 		strd	r3, r3, [r0]
 11395              	.LBE9242:
 11396              	.LBE9244:
 11397              	.LBE9246:
 11398              	.LBE9248:
 11399              	.LBE9252:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11400              		.loc 1 626 2 view .LVU2566
 11401 07b6 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeI
 11402              	.LVL528:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11403              		.loc 1 626 2 view .LVU2567
 11404              	.LBE9233:
 11405              	.LBE9232:
 11406              	.LBB9253:
 11407              	.LBI9253:
 11408              		.loc 6 153 7 is_stmt 1 view .LVU2568
 11409              	.LBB9254:
 11410              	.LBI9254:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11411              		.loc 5 89 7 view .LVU2569
 11412              	.L285:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11413              		.loc 5 89 7 is_stmt 0 view .LVU2570
 11414              	.LBE9254:
 11415              	.LBE9253:
 11416              	.LBB9255:
 11417              	.LBI9255:
ARM GAS  /tmp/ccfXobHU.s 			page 609


 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 11418              		.loc 3 657 7 is_stmt 1 view .LVU2571
 11419              	.LBB9256:
 11420              	.LBI9256:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 11421              		.loc 3 229 7 view .LVU2572
 11422              	.LBB9257:
 11423              	.LBB9258:
 11424              	.LBI9258:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11425              		.loc 3 221 7 view .LVU2573
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11426              		.loc 3 221 7 is_stmt 0 view .LVU2574
 11427              	.LBE9258:
 11428              	.LBB9260:
 11429              	.LBI9260:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11430              		.loc 3 236 7 is_stmt 1 view .LVU2575
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11431              		.loc 3 236 7 is_stmt 0 view .LVU2576
 11432              	.LBE9260:
 11433              	.LBB9268:
 11434              	.LBB9259:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 11435              		.loc 3 222 26 view .LVU2577
 11436 07ba 54F8080C 		ldr	r0, [r4, #-8]
 11437              	.LVL529:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 11438              		.loc 3 222 26 view .LVU2578
 11439              	.LBE9259:
 11440              	.LBE9268:
 11441              	.LBB9269:
 11442              	.LBB9261:
 11443              	.LBB9262:
 11444              	.LBI9262:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11445              		.loc 4 469 7 is_stmt 1 view .LVU2579
 11446              	.LBB9263:
 11447              	.LBI9263:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11448              		.loc 5 119 7 view .LVU2580
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11449              		.loc 5 119 7 is_stmt 0 view .LVU2581
 11450              	.LBE9263:
 11451              	.LBE9262:
 11452              	.LBE9261:
 11453              	.LBE9269:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11454              		.loc 3 231 2 view .LVU2582
 11455 07be A042     		cmp	r0, r4
 11456 07c0 A4F11804 		sub	r4, r4, #24
 11457              	.LVL530:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11458              		.loc 3 231 2 view .LVU2583
 11459 07c4 01D0     		beq	.L284
 11460              	.LBB9270:
 11461              	.LBB9267:
ARM GAS  /tmp/ccfXobHU.s 			page 610


 11462              	.LBB9266:
 11463              	.LBB9265:
 11464              	.LBB9264:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11465              		.loc 5 128 19 view .LVU2584
 11466 07c6 FFF7FEFF 		bl	_ZdlPv
 11467              	.LVL531:
 11468              	.L284:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11469              		.loc 5 128 19 view .LVU2585
 11470              	.LBE9264:
 11471              	.LBE9265:
 11472              	.LBE9266:
 11473              	.LBE9267:
 11474              	.LBE9270:
 11475              	.LBE9257:
 11476              	.LBE9256:
 11477              	.LBB9271:
 11478              	.LBI9271:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 11479              		.loc 3 150 14 is_stmt 1 view .LVU2586
 11480              	.LBB9272:
 11481              	.LBI9272:
 11482              		.loc 6 153 7 view .LVU2587
 11483              	.LBB9273:
 11484              	.LBI9273:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11485              		.loc 5 89 7 view .LVU2588
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11486              		.loc 5 89 7 is_stmt 0 view .LVU2589
 11487              	.LBE9273:
 11488              	.LBE9272:
 11489              	.LBE9271:
 11490              	.LBE9255:
 11491              		.loc 25 148 5 view .LVU2590
 11492 07ca B442     		cmp	r4, r6
 11493 07cc F5D1     		bne	.L285
 11494              	.LBB9274:
 11495              	.LBI9274:
 11496              		.loc 6 153 7 is_stmt 1 view .LVU2591
 11497              	.LBB9275:
 11498              	.LBI9275:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11499              		.loc 5 89 7 view .LVU2592
 11500              	.LBE9275:
 11501              	.LBE9274:
 11502              	.LBB9276:
 11503              	.LBI9276:
 11504              		.loc 6 153 7 view .LVU2593
 11505              	.LBB9277:
 11506              	.LBI9277:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11507              		.loc 5 89 7 view .LVU2594
 11508              	.LBE9277:
 11509              	.LBE9276:
 11510              	.LBB9278:
 11511              	.LBI9278:
ARM GAS  /tmp/ccfXobHU.s 			page 611


 11512              		.loc 6 153 7 view .LVU2595
 11513              	.LBB9279:
 11514              	.LBI9279:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11515              		.loc 5 89 7 view .LVU2596
 11516              	.LBE9279:
 11517              	.LBE9278:
 11518              	.LBB9280:
 11519              	.LBI9280:
 11520              		.loc 6 153 7 view .LVU2597
 11521              	.LBB9281:
 11522              	.LBI9281:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11523              		.loc 5 89 7 view .LVU2598
 11524              	.LBE9281:
 11525              	.LBE9280:
 143:Mu/music/theory.h ****         "None",
 11526              		.loc 25 143 36 is_stmt 0 view .LVU2599
 11527 07ce 1C4A     		ldr	r2, .L326+4
 11528 07d0 6AAC     		add	r4, sp, #424
 11529              	.LVL532:
 143:Mu/music/theory.h ****         "None",
 11530              		.loc 25 143 36 view .LVU2600
 11531 07d2 2249     		ldr	r1, .L326+32
 11532 07d4 2048     		ldr	r0, .L326+28
 11533 07d6 FFF7FEFF 		bl	__aeabi_atexit
 11534              	.LVL533:
 11535              	.LBB9282:
 11536              	.LBI9282:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11537              		.loc 6 138 7 is_stmt 1 view .LVU2601
 11538              	.LBB9283:
 11539              	.LBI9283:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11540              		.loc 5 80 7 view .LVU2602
 11541              	.LBE9283:
 11542              	.LBE9282:
 149:Mu/music/theory.h **** 
 150:Mu/music/theory.h ****     const std::vector<std::string> allClockInDivs {
 151:Mu/music/theory.h ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 152:Mu/music/theory.h ****         // "1/4",
 153:Mu/music/theory.h ****         // "1/8",
 154:Mu/music/theory.h ****         // "1/16",
 155:Mu/music/theory.h ****         // "1/32",
 156:Mu/music/theory.h ****         // "1/64",
 157:Mu/music/theory.h ****         "1",
 158:Mu/music/theory.h ****         "2",
 159:Mu/music/theory.h ****         "4",
 160:Mu/music/theory.h ****         "8",
 161:Mu/music/theory.h ****         "16"
 162:Mu/music/theory.h ****     };
 11543              		.loc 25 162 5 is_stmt 0 view .LVU2603
 11544 07da 2149     		ldr	r1, .L326+36
 11545 07dc 50A8     		add	r0, sp, #320
 11546 07de FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11547              	.LVL534:
 11548              	.LBB9284:
ARM GAS  /tmp/ccfXobHU.s 			page 612


 11549              	.LBI9284:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11550              		.loc 6 138 7 is_stmt 1 view .LVU2604
 11551              	.LBB9285:
 11552              	.LBI9285:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11553              		.loc 5 80 7 view .LVU2605
 11554              	.LBE9285:
 11555              	.LBE9284:
 11556              		.loc 25 162 5 is_stmt 0 view .LVU2606
 11557 07e2 2049     		ldr	r1, .L326+40
 11558 07e4 56A8     		add	r0, sp, #344
 11559 07e6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11560              	.LVL535:
 11561              	.LBB9286:
 11562              	.LBI9286:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11563              		.loc 6 138 7 is_stmt 1 view .LVU2607
 11564              	.LBB9287:
 11565              	.LBI9287:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11566              		.loc 5 80 7 view .LVU2608
 11567              	.LBE9287:
 11568              	.LBE9286:
 11569              		.loc 25 162 5 is_stmt 0 view .LVU2609
 11570 07ea 1F49     		ldr	r1, .L326+44
 11571 07ec 5CA8     		add	r0, sp, #368
 11572 07ee FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11573              	.LVL536:
 11574              	.LBB9288:
 11575              	.LBI9288:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11576              		.loc 6 138 7 is_stmt 1 view .LVU2610
 11577              	.LBB9289:
 11578              	.LBI9289:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11579              		.loc 5 80 7 view .LVU2611
 11580              	.LBE9289:
 11581              	.LBE9288:
 11582              		.loc 25 162 5 is_stmt 0 view .LVU2612
 11583 07f2 1E49     		ldr	r1, .L326+48
 11584 07f4 62A8     		add	r0, sp, #392
 11585 07f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11586              	.LVL537:
 11587              	.LBB9290:
 11588              	.LBI9290:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11589              		.loc 6 138 7 is_stmt 1 view .LVU2613
 11590              	.LBB9291:
 11591              	.LBI9291:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11592              		.loc 5 80 7 view .LVU2614
 11593              	.LBE9291:
 11594              	.LBE9290:
 11595              		.loc 25 162 5 is_stmt 0 view .LVU2615
 11596 07fa 1D49     		ldr	r1, .L326+52
 11597 07fc 68A8     		add	r0, sp, #416
ARM GAS  /tmp/ccfXobHU.s 			page 613


 11598 07fe FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
 11599              	.LVL538:
 11600              	.LBB9292:
 11601              	.LBI9292:
 138:/usr/include/newlib/c++/9.2.1/bits/allocator.h **** 
 11602              		.loc 6 138 7 is_stmt 1 view .LVU2616
 11603              	.LBB9293:
 11604              	.LBI9293:
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11605              		.loc 5 80 7 view .LVU2617
  80:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11606              		.loc 5 80 7 is_stmt 0 view .LVU2618
 11607              	.LBE9293:
 11608              	.LBE9292:
 11609              	.LBB9294:
 11610              	.LBI9294:
 622:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 11611              		.loc 1 622 7 is_stmt 1 view .LVU2619
 11612              	.LBB9295:
 11613              	.LBB9296:
 11614              	.LBI9296:
 290:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 11615              		.loc 1 290 7 view .LVU2620
 11616              	.LBB9297:
 11617              	.LBI9297:
 133:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 11618              		.loc 1 133 2 view .LVU2621
 11619              	.LBB9298:
 11620              	.LBI9298:
 141:/usr/include/newlib/c++/9.2.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11621              		.loc 6 141 7 view .LVU2622
 11622              	.LBB9299:
 11623              	.LBI9299:
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11624              		.loc 5 83 7 view .LVU2623
  83:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11625              		.loc 5 83 7 is_stmt 0 view .LVU2624
 11626              	.LBE9299:
 11627              	.LBE9298:
 11628              	.LBB9300:
 11629              	.LBI9300:
  94:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11630              		.loc 1 94 2 is_stmt 1 view .LVU2625
 11631              	.LBB9301:
 11632              	.LBB9302:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11633              		.loc 1 95 47 is_stmt 0 view .LVU2626
 11634 0802 1C48     		ldr	r0, .L326+56
 11635 0804 0023     		movs	r3, #0
 11636              	.LBE9302:
 11637              	.LBE9301:
 11638              	.LBE9300:
 11639              	.LBE9297:
 11640              	.LBE9296:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11641              		.loc 1 626 2 view .LVU2627
 11642 0806 6EAA     		add	r2, sp, #440
ARM GAS  /tmp/ccfXobHU.s 			page 614


 11643 0808 50A9     		add	r1, sp, #320
 11644              	.LBB9311:
 11645              	.LBB9309:
 11646              	.LBB9307:
 11647              	.LBB9305:
 11648              	.LBB9303:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11649              		.loc 1 95 47 view .LVU2628
 11650 080a 8360     		str	r3, [r0, #8]
 11651              	.LVL539:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11652              		.loc 1 95 47 view .LVU2629
 11653              	.LBE9303:
 11654              	.LBE9305:
 11655              	.LBE9307:
 11656              	.LBE9309:
 11657              	.LBE9311:
 11658              	.LBB9312:
 11659              	.LBI9312:
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 11660              		.loc 23 75 7 is_stmt 1 view .LVU2630
  75:/usr/include/newlib/c++/9.2.1/initializer_list **** 
 11661              		.loc 23 75 7 is_stmt 0 view .LVU2631
 11662              	.LBE9312:
 11663              	.LBB9313:
 11664              	.LBI9313:
 11665              		.loc 23 79 7 is_stmt 1 view .LVU2632
 11666              		.loc 23 79 7 is_stmt 0 view .LVU2633
 11667              	.LBE9313:
 11668              	.LBB9314:
 11669              	.LBB9310:
 11670              	.LBB9308:
 11671              	.LBB9306:
 11672              	.LBB9304:
  95:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 	{ }
 11673              		.loc 1 95 47 view .LVU2634
 11674 080c C0E90033 		strd	r3, r3, [r0]
 11675              	.LBE9304:
 11676              	.LBE9306:
 11677              	.LBE9308:
 11678              	.LBE9310:
 11679              	.LBE9314:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11680              		.loc 1 626 2 view .LVU2635
 11681 0810 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeI
 11682              	.LVL540:
 626:/usr/include/newlib/c++/9.2.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 11683              		.loc 1 626 2 view .LVU2636
 11684              	.LBE9295:
 11685              	.LBE9294:
 11686              	.LBB9315:
 11687              	.LBI9315:
 11688              		.loc 6 153 7 is_stmt 1 view .LVU2637
 11689              	.LBB9316:
 11690              	.LBI9316:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11691              		.loc 5 89 7 view .LVU2638
ARM GAS  /tmp/ccfXobHU.s 			page 615


 11692              	.L287:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11693              		.loc 5 89 7 is_stmt 0 view .LVU2639
 11694              	.LBE9316:
 11695              	.LBE9315:
 11696              	.LBB9317:
 11697              	.LBI9317:
 657:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _M_dispose(); }
 11698              		.loc 3 657 7 is_stmt 1 view .LVU2640
 11699              	.LBB9318:
 11700              	.LBI9318:
 229:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 11701              		.loc 3 229 7 view .LVU2641
 11702              	.LBB9319:
 11703              	.LBB9320:
 11704              	.LBI9320:
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11705              		.loc 3 221 7 view .LVU2642
 221:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11706              		.loc 3 221 7 is_stmt 0 view .LVU2643
 11707              	.LBE9320:
 11708              	.LBB9322:
 11709              	.LBI9322:
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11710              		.loc 3 236 7 is_stmt 1 view .LVU2644
 236:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11711              		.loc 3 236 7 is_stmt 0 view .LVU2645
 11712              	.LBE9322:
 11713              	.LBB9330:
 11714              	.LBB9321:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 11715              		.loc 3 222 26 view .LVU2646
 11716 0814 54F8080C 		ldr	r0, [r4, #-8]
 11717              	.LVL541:
 222:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 
 11718              		.loc 3 222 26 view .LVU2647
 11719              	.LBE9321:
 11720              	.LBE9330:
 11721              	.LBB9331:
 11722              	.LBB9323:
 11723              	.LBB9324:
 11724              	.LBI9324:
 469:/usr/include/newlib/c++/9.2.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11725              		.loc 4 469 7 is_stmt 1 view .LVU2648
 11726              	.LBB9325:
 11727              	.LBI9325:
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11728              		.loc 5 119 7 view .LVU2649
 119:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       {
 11729              		.loc 5 119 7 is_stmt 0 view .LVU2650
 11730              	.LBE9325:
 11731              	.LBE9324:
 11732              	.LBE9323:
 11733              	.LBE9331:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11734              		.loc 3 231 2 view .LVU2651
 11735 0818 A042     		cmp	r0, r4
ARM GAS  /tmp/ccfXobHU.s 			page 616


 11736 081a A4F11804 		sub	r4, r4, #24
 11737              	.LVL542:
 231:/usr/include/newlib/c++/9.2.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11738              		.loc 3 231 2 view .LVU2652
 11739 081e 01D0     		beq	.L286
 11740              	.LBB9332:
 11741              	.LBB9329:
 11742              	.LBB9328:
 11743              	.LBB9327:
 11744              	.LBB9326:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11745              		.loc 5 128 19 view .LVU2653
 11746 0820 FFF7FEFF 		bl	_ZdlPv
 11747              	.LVL543:
 11748              	.L286:
 128:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h ****       }
 11749              		.loc 5 128 19 view .LVU2654
 11750              	.LBE9326:
 11751              	.LBE9327:
 11752              	.LBE9328:
 11753              	.LBE9329:
 11754              	.LBE9332:
 11755              	.LBE9319:
 11756              	.LBE9318:
 11757              	.LBB9333:
 11758              	.LBI9333:
 150:/usr/include/newlib/c++/9.2.1/bits/basic_string.h ****       {
 11759              		.loc 3 150 14 is_stmt 1 view .LVU2655
 11760              	.LBB9334:
 11761              	.LBI9334:
 11762              		.loc 6 153 7 view .LVU2656
 11763              	.LBB9335:
 11764              	.LBI9335:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11765              		.loc 5 89 7 view .LVU2657
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11766              		.loc 5 89 7 is_stmt 0 view .LVU2658
 11767              	.LBE9335:
 11768              	.LBE9334:
 11769              	.LBE9333:
 11770              	.LBE9317:
 11771              		.loc 25 162 5 view .LVU2659
 11772 0824 B442     		cmp	r4, r6
 11773 0826 F5D1     		bne	.L287
 11774              	.LBB9336:
 11775              	.LBI9336:
 11776              		.loc 6 153 7 is_stmt 1 view .LVU2660
 11777              	.LBB9337:
 11778              	.LBI9337:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11779              		.loc 5 89 7 view .LVU2661
 11780              	.LBE9337:
 11781              	.LBE9336:
 11782              	.LBB9338:
 11783              	.LBI9338:
 11784              		.loc 6 153 7 view .LVU2662
 11785              	.LBB9339:
ARM GAS  /tmp/ccfXobHU.s 			page 617


 11786              	.LBI9339:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11787              		.loc 5 89 7 view .LVU2663
 11788              	.LBE9339:
 11789              	.LBE9338:
 11790              	.LBB9340:
 11791              	.LBI9340:
 11792              		.loc 6 153 7 view .LVU2664
 11793              	.LBB9341:
 11794              	.LBI9341:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11795              		.loc 5 89 7 view .LVU2665
 11796              	.LBE9341:
 11797              	.LBE9340:
 11798              	.LBB9342:
 11799              	.LBI9342:
 11800              		.loc 6 153 7 view .LVU2666
 11801              	.LBB9343:
 11802              	.LBI9343:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11803              		.loc 5 89 7 view .LVU2667
 11804              	.LBE9343:
 11805              	.LBE9342:
 11806              	.LBB9344:
 11807              	.LBI9344:
 11808              		.loc 6 153 7 view .LVU2668
 11809              	.LBB9345:
 11810              	.LBI9345:
  89:/usr/include/newlib/c++/9.2.1/ext/new_allocator.h **** 
 11811              		.loc 5 89 7 view .LVU2669
 11812              	.LBE9345:
 11813              	.LBE9344:
 150:Mu/music/theory.h ****         // "1/2", // TODO figure out how to interpolate for fractional clock values
 11814              		.loc 25 150 36 is_stmt 0 view .LVU2670
 11815 0828 054A     		ldr	r2, .L326+4
 11816 082a 0C49     		ldr	r1, .L326+32
 11817 082c 1148     		ldr	r0, .L326+56
 11818 082e FFF7FEFF 		bl	__aeabi_atexit
 11819              	.LVL544:
 11820              		.loc 12 21 2 view .LVU2671
 11821 0832 0DF2E46D 		addw	sp, sp, #1764
 11822              		.cfi_def_cfa_offset 28
 11823              		@ sp needed
 11824 0836 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 11825              	.LVL545:
 11826              	.L327:
 11827              		.loc 12 21 2 view .LVU2672
 11828 083a 00BF     		.align	2
 11829              	.L326:
 11830 083c 00000000 		.word	.LANCHOR0
 11831 0840 00000000 		.word	__dso_handle
 11832 0844 00000000 		.word	_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ES
 11833 0848 6C010000 		.word	.LC94
 11834 084c 74010000 		.word	.LC95
 11835 0850 7C010000 		.word	.LC96
 11836 0854 84010000 		.word	.LC97
 11837 0858 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/ccfXobHU.s 			page 618


 11838 085c 00000000 		.word	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
 11839 0860 00000000 		.word	.LC10
 11840 0864 04000000 		.word	.LC11
 11841 0868 08000000 		.word	.LC12
 11842 086c 0C000000 		.word	.LC13
 11843 0870 10000000 		.word	.LC14
 11844 0874 00000000 		.word	.LANCHOR7
 11845              		.cfi_endproc
 11846              	.LFE4033:
 11848              		.section	.text.startup._GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcE
 11849              		.align	1
 11850              		.p2align 2,,3
 11851              		.syntax unified
 11852              		.thumb
 11853              		.thumb_func
 11854              		.fpu fpv5-d16
 11856              	_GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 11857              	.LFB3902:
 11858              		.loc 12 21 2 is_stmt 1 view -0
 11859              		.cfi_startproc
 11860              		@ args = 0, pretend = 0, frame = 0
 11861              		@ frame_needed = 0, uses_anonymous_args = 0
 11862              		@ link register save eliminated.
 11863              		.loc 12 21 2 is_stmt 0 view .LVU2674
 11864 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 11865              	.LVL546:
 11866              		.cfi_endproc
 11867              	.LFE3902:
 11869              		.section	.init_array,"aw",%init_array
 11870              		.align	2
 11871 0000 00000000 		.word	_GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(target1)
 11872              		.section	.rodata
 11873              		.align	2
 11874              		.set	.LANCHOR5,. + 0
 11875              	.LC0:
 11876 0000 00000000 		.word	0
 11877 0004 02000000 		.word	2
 11878 0008 04000000 		.word	4
 11879 000c 05000000 		.word	5
 11880 0010 07000000 		.word	7
 11881 0014 09000000 		.word	9
 11882 0018 0B000000 		.word	11
 11883              	.LC1:
 11884 001c 00000000 		.word	0
 11885 0020 02000000 		.word	2
 11886 0024 03000000 		.word	3
 11887 0028 05000000 		.word	5
 11888 002c 07000000 		.word	7
 11889 0030 08000000 		.word	8
 11890 0034 0A000000 		.word	10
 11891              	.LC2:
 11892 0038 00000000 		.word	0
 11893 003c 02000000 		.word	2
 11894 0040 03000000 		.word	3
 11895 0044 05000000 		.word	5
 11896 0048 07000000 		.word	7
 11897 004c 09000000 		.word	9
ARM GAS  /tmp/ccfXobHU.s 			page 619


 11898 0050 0A000000 		.word	10
 11899              	.LC3:
 11900 0054 00000000 		.word	0
 11901 0058 01000000 		.word	1
 11902 005c 03000000 		.word	3
 11903 0060 05000000 		.word	5
 11904 0064 07000000 		.word	7
 11905 0068 09000000 		.word	9
 11906 006c 0A000000 		.word	10
 11907              	.LC4:
 11908 0070 00000000 		.word	0
 11909 0074 02000000 		.word	2
 11910 0078 04000000 		.word	4
 11911 007c 06000000 		.word	6
 11912 0080 07000000 		.word	7
 11913 0084 09000000 		.word	9
 11914 0088 0B000000 		.word	11
 11915              	.LC5:
 11916 008c 00000000 		.word	0
 11917 0090 02000000 		.word	2
 11918 0094 04000000 		.word	4
 11919 0098 05000000 		.word	5
 11920 009c 07000000 		.word	7
 11921 00a0 09000000 		.word	9
 11922 00a4 0A000000 		.word	10
 11923              	.LC6:
 11924 00a8 00000000 		.word	0
 11925 00ac 01000000 		.word	1
 11926 00b0 03000000 		.word	3
 11927 00b4 05000000 		.word	5
 11928 00b8 06000000 		.word	6
 11929 00bc 08000000 		.word	8
 11930 00c0 0A000000 		.word	10
 11931              		.section	.bss._ZN2muL12allNotes5OctE,"aw",%nobits
 11932              		.align	2
 11933              		.set	.LANCHOR3,. + 0
 11936              	_ZN2muL12allNotes5OctE:
 11937 0000 00000000 		.space	12
 11937      00000000 
 11937      00000000 
 11938              		.section	.bss._ZN2muL13allInversionsE,"aw",%nobits
 11939              		.align	2
 11940              		.set	.LANCHOR6,. + 0
 11943              	_ZN2muL13allInversionsE:
 11944 0000 00000000 		.space	12
 11944      00000000 
 11944      00000000 
 11945              		.section	.bss._ZN2muL14allClockInDivsE,"aw",%nobits
 11946              		.align	2
 11947              		.set	.LANCHOR7,. + 0
 11950              	_ZN2muL14allClockInDivsE:
 11951 0000 00000000 		.space	12
 11951      00000000 
 11951      00000000 
 11952              		.section	.bss._ZN2muL15clockInDivToIntE,"aw",%nobits
 11953              		.align	2
 11954              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccfXobHU.s 			page 620


 11957              	_ZN2muL15clockInDivToIntE:
 11958 0000 00000000 		.space	24
 11958      00000000 
 11958      00000000 
 11958      00000000 
 11958      00000000 
 11959              		.section	.bss._ZN2muL15modeToSemitonesE,"aw",%nobits
 11960              		.align	2
 11961              		.set	.LANCHOR0,. + 0
 11964              	_ZN2muL15modeToSemitonesE:
 11965 0000 00000000 		.space	24
 11965      00000000 
 11965      00000000 
 11965      00000000 
 11965      00000000 
 11966              		.section	.bss._ZN2muL5modesE,"aw",%nobits
 11967              		.align	2
 11968              		.set	.LANCHOR4,. + 0
 11971              	_ZN2muL5modesE:
 11972 0000 00000000 		.space	12
 11972      00000000 
 11972      00000000 
 11973              		.section	.bss._ZN2muL8allNotesE,"aw",%nobits
 11974              		.align	2
 11975              		.set	.LANCHOR2,. + 0
 11978              	_ZN2muL8allNotesE:
 11979 0000 00000000 		.space	12
 11979      00000000 
 11979      00000000 
 11980              		.text
 11981              	.Letext0:
 11982              		.file 26 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 11983              		.file 27 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 11984              		.file 28 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 11985              		.file 29 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 11986              		.file 30 "/usr/include/newlib/c++/9.2.1/cmath"
 11987              		.file 31 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 11988              		.file 32 "/usr/include/newlib/c++/9.2.1/type_traits"
 11989              		.file 33 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 11990              		.file 34 "/usr/include/newlib/c++/9.2.1/bits/cpp_type_traits.h"
 11991              		.file 35 "/usr/include/newlib/c++/9.2.1/bits/stl_iterator_base_types.h"
 11992              		.file 36 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 11993              		.file 37 "/usr/include/newlib/c++/9.2.1/cstdlib"
 11994              		.file 38 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 11995              		.file 39 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 11996              		.file 40 "/usr/include/newlib/c++/9.2.1/cwchar"
 11997              		.file 41 "/usr/include/newlib/c++/9.2.1/cstdint"
 11998              		.file 42 "/usr/include/newlib/c++/9.2.1/clocale"
 11999              		.file 43 "/usr/include/newlib/c++/9.2.1/cstdio"
 12000              		.file 44 "/usr/include/newlib/c++/9.2.1/bits/stringfwd.h"
 12001              		.file 45 "/usr/include/newlib/c++/9.2.1/bits/uses_allocator.h"
 12002              		.file 46 "/usr/include/newlib/c++/9.2.1/tuple"
 12003              		.file 47 "/usr/include/newlib/c++/9.2.1/bits/vector.tcc"
 12004              		.file 48 "/usr/include/newlib/c++/9.2.1/bits/ptr_traits.h"
 12005              		.file 49 "/usr/include/newlib/c++/9.2.1/bits/functexcept.h"
 12006              		.file 50 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 12007              		.file 51 "/usr/include/newlib/c++/9.2.1/ext/type_traits.h"
ARM GAS  /tmp/ccfXobHU.s 			page 621


 12008              		.file 52 "/usr/include/newlib/sys/_types.h"
 12009              		.file 53 "/usr/include/newlib/sys/reent.h"
 12010              		.file 54 "/usr/include/newlib/sys/lock.h"
 12011              		.file 55 "/usr/include/newlib/math.h"
 12012              		.file 56 "/usr/include/newlib/stdlib.h"
 12013              		.file 57 "/usr/include/newlib/c++/9.2.1/math.h"
 12014              		.file 58 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 12015              		.file 59 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 12016              		.file 60 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 12017              		.file 61 "/usr/include/newlib/wchar.h"
 12018              		.file 62 "/usr/include/newlib/locale.h"
 12019              		.file 63 "/usr/include/newlib/ctype.h"
 12020              		.file 64 "/usr/include/newlib/stdio.h"
 12021              		.file 65 "/usr/include/newlib/sys/errno.h"
 12022              		.file 66 "<built-in>"
ARM GAS  /tmp/ccfXobHU.s 			page 622


DEFINED SYMBOLS
                            *ABS*:0000000000000000 theory.cpp
     /tmp/ccfXobHU.s:17     .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:0000000000000000 $t
     /tmp/ccfXobHU.s:26     .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
     /tmp/ccfXobHU.s:26     .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
     /tmp/ccfXobHU.s:230    .text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0:0000000000000000 $t
     /tmp/ccfXobHU.s:237    .text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.isra.0
     /tmp/ccfXobHU.s:575    .rodata._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0.str1.4:0000000000000000 $d
     /tmp/ccfXobHU.s:579    .text._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0:0000000000000000 $t
     /tmp/ccfXobHU.s:586    .text._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0:0000000000000000 _ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0
     /tmp/ccfXobHU.s:775    .text._ZNSt6vectorIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag.isra.0.constprop.0:0000000000000040 $d
     /tmp/ccfXobHU.s:782    .rodata._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 $d
     /tmp/ccfXobHU.s:786    .text._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccfXobHU.s:794    .text._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccfXobHU.s:1844   .text._Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000168 $d
     /tmp/ccfXobHU.s:1855   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:0000000000000000 $t
     /tmp/ccfXobHU.s:1863   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:0000000000000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
     /tmp/ccfXobHU.s:2056   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED2Ev:0000000000000000 $t
     /tmp/ccfXobHU.s:2064   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED2Ev:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED2Ev
     /tmp/ccfXobHU.s:2064   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED2Ev:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED1Ev
     /tmp/ccfXobHU.s:2119   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:0000000000000000 $t
     /tmp/ccfXobHU.s:2127   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:0000000000000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E
     /tmp/ccfXobHU.s:2389   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:0000000000000000 $t
     /tmp/ccfXobHU.s:2397   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev
     /tmp/ccfXobHU.s:2397   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED2Ev:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED1Ev
     /tmp/ccfXobHU.s:2452   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.str1.4:0000000000000000 $d
     /tmp/ccfXobHU.s:2456   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 $t
     /tmp/ccfXobHU.s:2464   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
     /tmp/ccfXobHU.s:2790   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000064 $d
     /tmp/ccfXobHU.s:2795   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag.isra.0.constprop.0:0000000000000000 $t
     /tmp/ccfXobHU.s:2802   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag.isra.0.constprop.0:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag.isra.0.constprop.0
     /tmp/ccfXobHU.s:3154   .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag.isra.0.constprop.0:0000000000000088 $d
     /tmp/ccfXobHU.s:3164   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:0000000000000000 $t
     /tmp/ccfXobHU.s:3172   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:0000000000000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_iESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_
     /tmp/ccfXobHU.s:3556   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC2ESt16initializer_listISA_ERKS7_RKSB_:0000000000000000 $t
     /tmp/ccfXobHU.s:3564   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC2ESt16initializer_listISA_ERKS7_RKSB_:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC2ESt16initializer_listISA_ERKS7_RKSB_
     /tmp/ccfXobHU.s:3564   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC2ESt16initializer_listISA_ERKS7_RKSB_:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC1ESt16initializer_listISA_ERKS7_RKSB_
     /tmp/ccfXobHU.s:4328   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:0000000000000000 $t
     /tmp/ccfXobHU.s:4336   .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:0000000000000000 _ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIiSaIiEEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_
     /tmp/ccfXobHU.s:4720   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC2ESt16initializer_listISD_ERKSA_RKSE_:0000000000000000 $t
     /tmp/ccfXobHU.s:4728   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC2ESt16initializer_listISD_ERKSA_RKSE_:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC2ESt16initializer_listISD_ERKSA_RKSE_
     /tmp/ccfXobHU.s:4728   .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC2ESt16initializer_listISD_ERKSA_RKSE_:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC1ESt16initializer_listISD_ERKSA_RKSE_
     /tmp/ccfXobHU.s:5831   .rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.4:0000000000000000 $d
     /tmp/ccfXobHU.s:6096   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000000 $t
     /tmp/ccfXobHU.s:6103   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
     /tmp/ccfXobHU.s:7645   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000000002e4 $d
     /tmp/ccfXobHU.s:7728   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000408 $t
     /tmp/ccfXobHU.s:10524  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000000006c0 $d
     /tmp/ccfXobHU.s:10556  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000714 $t
     /tmp/ccfXobHU.s:11830  .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:000000000000083c $d
     /tmp/ccfXobHU.s:11849  .text.startup._GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccfXobHU.s:11856  .text.startup._GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _GLOBAL__sub_I__Z10isDiatoniciNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccfXobHU.s:11870  .init_array:0000000000000000 $d
     /tmp/ccfXobHU.s:11873  .rodata:0000000000000000 $d
     /tmp/ccfXobHU.s:11932  .bss._ZN2muL12allNotes5OctE:0000000000000000 $d
     /tmp/ccfXobHU.s:11936  .bss._ZN2muL12allNotes5OctE:0000000000000000 _ZN2muL12allNotes5OctE
     /tmp/ccfXobHU.s:11939  .bss._ZN2muL13allInversionsE:0000000000000000 $d
ARM GAS  /tmp/ccfXobHU.s 			page 623


     /tmp/ccfXobHU.s:11943  .bss._ZN2muL13allInversionsE:0000000000000000 _ZN2muL13allInversionsE
     /tmp/ccfXobHU.s:11946  .bss._ZN2muL14allClockInDivsE:0000000000000000 $d
     /tmp/ccfXobHU.s:11950  .bss._ZN2muL14allClockInDivsE:0000000000000000 _ZN2muL14allClockInDivsE
     /tmp/ccfXobHU.s:11953  .bss._ZN2muL15clockInDivToIntE:0000000000000000 $d
     /tmp/ccfXobHU.s:11957  .bss._ZN2muL15clockInDivToIntE:0000000000000000 _ZN2muL15clockInDivToIntE
     /tmp/ccfXobHU.s:11960  .bss._ZN2muL15modeToSemitonesE:0000000000000000 $d
     /tmp/ccfXobHU.s:11964  .bss._ZN2muL15modeToSemitonesE:0000000000000000 _ZN2muL15modeToSemitonesE
     /tmp/ccfXobHU.s:11967  .bss._ZN2muL5modesE:0000000000000000 $d
     /tmp/ccfXobHU.s:11971  .bss._ZN2muL5modesE:0000000000000000 _ZN2muL5modesE
     /tmp/ccfXobHU.s:11974  .bss._ZN2muL8allNotesE:0000000000000000 $d
     /tmp/ccfXobHU.s:11978  .bss._ZN2muL8allNotesE:0000000000000000 _ZN2muL8allNotesE
                           .group:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED5Ev
                           .group:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEED5Ev
                           .group:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEED5Ev
                           .group:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEEC5ESt16initializer_listISA_ERKS7_RKSB_
                           .group:0000000000000000 _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIiSaIiEESt4lessIS5_ESaISt4pairIKS5_S8_EEEC5ESt16initializer_listISD_ERKSA_RKSE_

UNDEFINED SYMBOLS
_ZdlPv
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_Znwj
_ZSt20__throw_length_errorPKc
memcmp
memmove
_ZSt20__throw_out_of_rangePKc
_ZSt17__throw_bad_allocv
_ZSt19__throw_logic_errorPKc
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
__aeabi_atexit
__dso_handle
