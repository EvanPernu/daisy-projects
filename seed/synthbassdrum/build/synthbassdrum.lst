ARM GAS  /tmp/cceMrBhU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"synthbassdrum.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2037:
  29              		.file 1 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB95:
  36              	.LBI95:
ARM GAS  /tmp/cceMrBhU.s 			page 2


  37              		.file 2 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
ARM GAS  /tmp/cceMrBhU.s 			page 3


  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 59 5 view .LVU1
  39              		.loc 2 59 5 is_stmt 0 view .LVU2
  40              	.LBE95:
  41              	.LBB96:
  42              	.LBI96:
  43              		.file 3 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE96:
  47              	.LBB97:
  48              	.LBI97:
  49              		.file 4 "../../libdaisy/src/per/adc.h"
ARM GAS  /tmp/cceMrBhU.s 			page 4


   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
ARM GAS  /tmp/cceMrBhU.s 			page 5


  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 85 5 is_stmt 1 view .LVU5
  51              		.loc 4 85 5 is_stmt 0 view .LVU6
  52              	.LBE97:
  53              	.LBB98:
  54              	.LBI98:
  55              		.file 5 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
ARM GAS  /tmp/cceMrBhU.s 			page 6


  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 63 5 is_stmt 1 view .LVU7
  57              		.loc 5 63 5 is_stmt 0 view .LVU8
  58              	.LBE98:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2037:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp17SyntheticBassDrumD2Ev,"axG",%progbits,_ZN7daisysp17SyntheticBassDrumD5
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp17SyntheticBassDrumD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
ARM GAS  /tmp/cceMrBhU.s 			page 7


  75              	_ZN7daisysp17SyntheticBassDrumD2Ev:
  76              	.LVL1:
  77              	.LFB3751:
  78              		.file 6 "../../DaisySP/Source/Drums/synthbassdrum.h"
   1:../../DaisySP/Source/Drums/synthbassdrum.h **** #pragma once
   2:../../DaisySP/Source/Drums/synthbassdrum.h **** #ifndef DSY_SYNTHBD_H
   3:../../DaisySP/Source/Drums/synthbassdrum.h **** #define DSY_SYNTHBD_H
   4:../../DaisySP/Source/Drums/synthbassdrum.h **** 
   5:../../DaisySP/Source/Drums/synthbassdrum.h **** #include "Filters/svf.h"
   6:../../DaisySP/Source/Drums/synthbassdrum.h **** #include "Utility/dsp.h"
   7:../../DaisySP/Source/Drums/synthbassdrum.h **** 
   8:../../DaisySP/Source/Drums/synthbassdrum.h **** #include <stdint.h>
   9:../../DaisySP/Source/Drums/synthbassdrum.h **** #ifdef __cplusplus
  10:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  11:../../DaisySP/Source/Drums/synthbassdrum.h **** /** @file synthbassdrum.h */
  12:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  13:../../DaisySP/Source/Drums/synthbassdrum.h **** namespace daisysp
  14:../../DaisySP/Source/Drums/synthbassdrum.h **** {
  15:../../DaisySP/Source/Drums/synthbassdrum.h **** /**  
  16:../../DaisySP/Source/Drums/synthbassdrum.h ****        @brief Click noise for SyntheticBassDrum
  17:../../DaisySP/Source/Drums/synthbassdrum.h ****        @author Ben Sergentanis
  18:../../DaisySP/Source/Drums/synthbassdrum.h ****        @date Jan 2021
  19:../../DaisySP/Source/Drums/synthbassdrum.h ****        Ported from pichenettes/eurorack/plaits/dsp/drums/synthetic_bass_drum.h \n
  20:../../DaisySP/Source/Drums/synthbassdrum.h ****        to an independent module. \n
  21:../../DaisySP/Source/Drums/synthbassdrum.h ****        Original code written by Emilie Gillet in 2016. \n
  22:../../DaisySP/Source/Drums/synthbassdrum.h **** */
  23:../../DaisySP/Source/Drums/synthbassdrum.h **** class SyntheticBassDrumClick
  24:../../DaisySP/Source/Drums/synthbassdrum.h **** {
  25:../../DaisySP/Source/Drums/synthbassdrum.h ****   public:
  26:../../DaisySP/Source/Drums/synthbassdrum.h ****     SyntheticBassDrumClick() {}
  27:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrumClick() {}
  28:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  29:../../DaisySP/Source/Drums/synthbassdrum.h ****     /** Init the module
  30:../../DaisySP/Source/Drums/synthbassdrum.h ****         \param sample_rate Audio engine sample rate.
  31:../../DaisySP/Source/Drums/synthbassdrum.h ****     */
  32:../../DaisySP/Source/Drums/synthbassdrum.h ****     void Init(float sample_rate);
  33:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  34:../../DaisySP/Source/Drums/synthbassdrum.h ****     /** Get the next sample.
  35:../../DaisySP/Source/Drums/synthbassdrum.h ****         \param in Trigger the click.
  36:../../DaisySP/Source/Drums/synthbassdrum.h ****     */
  37:../../DaisySP/Source/Drums/synthbassdrum.h ****     float Process(float in);
  38:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  39:../../DaisySP/Source/Drums/synthbassdrum.h ****   private:
  40:../../DaisySP/Source/Drums/synthbassdrum.h ****     float lp_;
  41:../../DaisySP/Source/Drums/synthbassdrum.h ****     float hp_;
  42:../../DaisySP/Source/Drums/synthbassdrum.h ****     Svf   filter_;
  43:../../DaisySP/Source/Drums/synthbassdrum.h **** };
  44:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  45:../../DaisySP/Source/Drums/synthbassdrum.h **** /**  
  46:../../DaisySP/Source/Drums/synthbassdrum.h ****        @brief Attack Noise generator for SyntheticBassDrum. 
  47:../../DaisySP/Source/Drums/synthbassdrum.h ****        @author Ben Sergentanis
  48:../../DaisySP/Source/Drums/synthbassdrum.h ****        @date Jan 2021
  49:../../DaisySP/Source/Drums/synthbassdrum.h ****        Ported from pichenettes/eurorack/plaits/dsp/drums/synthetic_bass_drum.h \n
  50:../../DaisySP/Source/Drums/synthbassdrum.h ****        to an independent module. \n
  51:../../DaisySP/Source/Drums/synthbassdrum.h ****        Original code written by Emilie Gillet in 2016. \n
  52:../../DaisySP/Source/Drums/synthbassdrum.h **** */
  53:../../DaisySP/Source/Drums/synthbassdrum.h **** class SyntheticBassDrumAttackNoise
ARM GAS  /tmp/cceMrBhU.s 			page 8


  54:../../DaisySP/Source/Drums/synthbassdrum.h **** {
  55:../../DaisySP/Source/Drums/synthbassdrum.h ****   public:
  56:../../DaisySP/Source/Drums/synthbassdrum.h ****     SyntheticBassDrumAttackNoise() {}
  57:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrumAttackNoise() {}
  58:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  59:../../DaisySP/Source/Drums/synthbassdrum.h ****     /** Init the module */
  60:../../DaisySP/Source/Drums/synthbassdrum.h ****     void Init();
  61:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  62:../../DaisySP/Source/Drums/synthbassdrum.h ****     /** Get the next sample. */
  63:../../DaisySP/Source/Drums/synthbassdrum.h ****     float Process();
  64:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  65:../../DaisySP/Source/Drums/synthbassdrum.h ****   private:
  66:../../DaisySP/Source/Drums/synthbassdrum.h ****     float lp_;
  67:../../DaisySP/Source/Drums/synthbassdrum.h ****     float hp_;
  68:../../DaisySP/Source/Drums/synthbassdrum.h **** };
  69:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  70:../../DaisySP/Source/Drums/synthbassdrum.h **** /**  
  71:../../DaisySP/Source/Drums/synthbassdrum.h ****        @brief Naive bass drum model (modulated oscillator with FM + envelope).
  72:../../DaisySP/Source/Drums/synthbassdrum.h ****        @author Ben Sergentanis
  73:../../DaisySP/Source/Drums/synthbassdrum.h ****        @date Jan 2021
  74:../../DaisySP/Source/Drums/synthbassdrum.h ****        Inadvertently 909-ish. \n \n 
  75:../../DaisySP/Source/Drums/synthbassdrum.h ****        Ported from pichenettes/eurorack/plaits/dsp/drums/synthetic_bass_drum.h \n
  76:../../DaisySP/Source/Drums/synthbassdrum.h ****        to an independent module. \n
  77:../../DaisySP/Source/Drums/synthbassdrum.h ****        Original code written by Emilie Gillet in 2016. \n
  78:../../DaisySP/Source/Drums/synthbassdrum.h **** */
  79:../../DaisySP/Source/Drums/synthbassdrum.h **** class SyntheticBassDrum
  80:../../DaisySP/Source/Drums/synthbassdrum.h **** {
  81:../../DaisySP/Source/Drums/synthbassdrum.h ****   public:
  82:../../DaisySP/Source/Drums/synthbassdrum.h ****     SyntheticBassDrum() {}
  83:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrum() {}
  79              		.loc 6 83 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LBB99:
  85              	.LBI99:
  57:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  86              		.loc 6 57 5 view .LVU11
  57:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  87              		.loc 6 57 5 is_stmt 0 view .LVU12
  88              	.LBE99:
  89              	.LBB100:
  90              	.LBI100:
  27:../../DaisySP/Source/Drums/synthbassdrum.h **** 
  91              		.loc 6 27 5 is_stmt 1 view .LVU13
  92              	.LBB101:
  93              	.LBI101:
  94              		.file 7 "../../DaisySP/Source/Filters/svf.h"
   1:../../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../../DaisySP/Source/Filters/svf.h **** 
   5:../../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../../DaisySP/Source/Filters/svf.h **** {
   7:../../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../../DaisySP/Source/Filters/svf.h **** 
ARM GAS  /tmp/cceMrBhU.s 			page 9


   9:../../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../../DaisySP/Source/Filters/svf.h **** 
  11:../../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../../DaisySP/Source/Filters/svf.h **** 
  13:../../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../../DaisySP/Source/Filters/svf.h **** 
  16:../../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../../DaisySP/Source/Filters/svf.h **** */
  18:../../DaisySP/Source/Filters/svf.h **** class Svf
  19:../../DaisySP/Source/Filters/svf.h **** {
  20:../../DaisySP/Source/Filters/svf.h ****   public:
  21:../../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
  95              		.loc 7 22 5 view .LVU14
  96              		.loc 7 22 5 is_stmt 0 view .LVU15
  97              	.LBE101:
  98              	.LBE100:
  99              		.loc 6 83 27 view .LVU16
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE3751:
 104              		.weak	_ZN7daisysp17SyntheticBassDrumD1Ev
 105              		.thumb_set _ZN7daisysp17SyntheticBassDrumD1Ev,_ZN7daisysp17SyntheticBassDrumD2Ev
 106 0002 00BF     		.section	.text._ZN7daisysp5MetroD2Ev,"axG",%progbits,_ZN7daisysp5MetroD5Ev,comdat
 107              		.align	1
 108              		.p2align 2,,3
 109              		.weak	_ZN7daisysp5MetroD2Ev
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-d16
 115              	_ZN7daisysp5MetroD2Ev:
 116              	.LVL2:
 117              	.LFB4183:
 118              		.file 8 "../../DaisySP/Source/Utility/metro.h"
   1:../../DaisySP/Source/Utility/metro.h **** #pragma once
   2:../../DaisySP/Source/Utility/metro.h **** #ifndef DSY_METRO_H
   3:../../DaisySP/Source/Utility/metro.h **** #define DSY_METRO_H
   4:../../DaisySP/Source/Utility/metro.h **** #include <stdint.h>
   5:../../DaisySP/Source/Utility/metro.h **** #ifdef __cplusplus
   6:../../DaisySP/Source/Utility/metro.h **** 
   7:../../DaisySP/Source/Utility/metro.h **** namespace daisysp
   8:../../DaisySP/Source/Utility/metro.h **** {
   9:../../DaisySP/Source/Utility/metro.h **** /** Creates a clock signal at a specific frequency.
  10:../../DaisySP/Source/Utility/metro.h **** */
  11:../../DaisySP/Source/Utility/metro.h **** class Metro
  12:../../DaisySP/Source/Utility/metro.h **** {
  13:../../DaisySP/Source/Utility/metro.h ****   public:
  14:../../DaisySP/Source/Utility/metro.h ****     Metro() {}
  15:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 119              		.loc 8 15 5 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              		.loc 8 15 15 is_stmt 0 view .LVU18
ARM GAS  /tmp/cceMrBhU.s 			page 10


 125 0000 7047     		bx	lr
 126              		.cfi_endproc
 127              	.LFE4183:
 129              		.weak	_ZN7daisysp5MetroD1Ev
 130              		.thumb_set _ZN7daisysp5MetroD1Ev,_ZN7daisysp5MetroD2Ev
 131 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 132              		.align	1
 133              		.p2align 2,,3
 134              		.global	_Z13AudioCallbackPKPKfPPfj
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv5-d16
 140              	_Z13AudioCallbackPKPKfPPfj:
 141              	.LVL3:
 142              	.LFB4212:
 143              		.file 9 "synthbassdrum.cpp"
   1:synthbassdrum.cpp **** #include "daisy_seed.h"
   2:synthbassdrum.cpp **** #include "daisysp.h"
   3:synthbassdrum.cpp **** 
   4:synthbassdrum.cpp **** using namespace daisy;
   5:synthbassdrum.cpp **** using namespace daisysp;
   6:synthbassdrum.cpp **** 
   7:synthbassdrum.cpp **** DaisySeed         hw;
   8:synthbassdrum.cpp **** SyntheticBassDrum bd;
   9:synthbassdrum.cpp **** Metro             tick;
  10:synthbassdrum.cpp **** 
  11:synthbassdrum.cpp **** void AudioCallback(AudioHandle::InputBuffer  in,
  12:synthbassdrum.cpp ****                    AudioHandle::OutputBuffer out,
  13:synthbassdrum.cpp ****                    size_t                    size)
  14:synthbassdrum.cpp **** {
 144              		.loc 9 14 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
  15:synthbassdrum.cpp ****     for(size_t i = 0; i < size; i++)
 148              		.loc 9 15 5 view .LVU20
 149              	.LBB102:
 150              		.loc 9 15 25 view .LVU21
 151 0000 002A     		cmp	r2, #0
 152 0002 49D0     		beq	.L17
 153              	.LBE102:
  14:synthbassdrum.cpp ****     for(size_t i = 0; i < size; i++)
 154              		.loc 9 14 1 is_stmt 0 view .LVU22
 155 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 156              		.cfi_def_cfa_offset 24
 157              		.cfi_offset 4, -24
 158              		.cfi_offset 5, -20
 159              		.cfi_offset 6, -16
 160              		.cfi_offset 7, -12
 161              		.cfi_offset 8, -8
 162              		.cfi_offset 14, -4
 163 0008 0E46     		mov	r6, r1
 164 000a 1746     		mov	r7, r2
 165              	.LBB107:
 166              		.loc 9 15 16 view .LVU23
 167 000c 0024     		movs	r4, #0
ARM GAS  /tmp/cceMrBhU.s 			page 11


 168              	.LBE107:
  14:synthbassdrum.cpp ****     for(size_t i = 0; i < size; i++)
 169              		.loc 9 14 1 view .LVU24
 170 000e 2DED028B 		vpush.64	{d8}
 171              		.cfi_def_cfa_offset 32
 172              		.cfi_offset 80, -32
 173              		.cfi_offset 81, -28
 174 0012 11E0     		b	.L8
 175              	.LVL4:
 176              	.L7:
 177              	.LBB108:
 178              	.LBB103:
  16:synthbassdrum.cpp ****     {
  17:synthbassdrum.cpp ****         float t = tick.Process();
  18:synthbassdrum.cpp ****         if(t)
  19:synthbassdrum.cpp ****         {
  20:synthbassdrum.cpp ****             bd.SetAccent(random() / (float)RAND_MAX);
  21:synthbassdrum.cpp ****             bd.SetDirtiness(random() / (float)RAND_MAX);
  22:synthbassdrum.cpp ****             bd.SetDecay(random() / (float)RAND_MAX);
  23:synthbassdrum.cpp ****         }
  24:synthbassdrum.cpp ****         out[0][i] = out[1][i] = bd.Process(t);
 179              		.loc 9 24 9 is_stmt 1 discriminator 2 view .LVU25
 180              		.loc 9 24 43 is_stmt 0 discriminator 2 view .LVU26
 181 0014 291E     		subs	r1, r5, #0
 182              		.loc 9 24 29 discriminator 2 view .LVU27
 183 0016 7368     		ldr	r3, [r6, #4]
 184              		.loc 9 24 43 discriminator 2 view .LVU28
 185 0018 2048     		ldr	r0, .L21
 186 001a 18BF     		it	ne
 187 001c 0121     		movne	r1, #1
 188              		.loc 9 24 29 discriminator 2 view .LVU29
 189 001e 03EB8405 		add	r5, r3, r4, lsl #2
 190              		.loc 9 24 43 discriminator 2 view .LVU30
 191 0022 FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum7ProcessEb
 192              	.LVL5:
 193              	.LBE103:
  15:synthbassdrum.cpp ****     {
 194              		.loc 9 15 5 discriminator 2 view .LVU31
 195 0026 0134     		adds	r4, r4, #1
 196              	.LVL6:
 197              	.LBB104:
 198              		.loc 9 24 19 discriminator 2 view .LVU32
 199 0028 3368     		ldr	r3, [r6]
 200              	.LBE104:
  15:synthbassdrum.cpp ****     {
 201              		.loc 9 15 25 discriminator 2 view .LVU33
 202 002a A742     		cmp	r7, r4
 203              	.LBB105:
 204              		.loc 9 24 31 discriminator 2 view .LVU34
 205 002c 85ED000A 		vstr.32	s0, [r5]
 206              		.loc 9 24 19 discriminator 2 view .LVU35
 207 0030 4344     		add	r3, r3, r8
 208 0032 83ED000A 		vstr.32	s0, [r3]
 209              	.LBE105:
  15:synthbassdrum.cpp ****     {
 210              		.loc 9 15 5 is_stmt 1 discriminator 2 view .LVU36
 211              	.LVL7:
ARM GAS  /tmp/cceMrBhU.s 			page 12


  15:synthbassdrum.cpp ****     {
 212              		.loc 9 15 25 discriminator 2 view .LVU37
 213 0036 2BD0     		beq	.L20
 214              	.LVL8:
 215              	.L8:
 216              	.LBB106:
  17:synthbassdrum.cpp ****         if(t)
 217              		.loc 9 17 9 view .LVU38
  17:synthbassdrum.cpp ****         if(t)
 218              		.loc 9 17 31 is_stmt 0 view .LVU39
 219 0038 1948     		ldr	r0, .L21+4
 220 003a 4FEA8408 		lsl	r8, r4, #2
 221 003e FFF7FEFF 		bl	_ZN7daisysp5Metro7ProcessEv
 222              	.LVL9:
  18:synthbassdrum.cpp ****         {
 223              		.loc 9 18 9 is_stmt 1 view .LVU40
 224 0042 0546     		mov	r5, r0
 225 0044 0028     		cmp	r0, #0
 226 0046 E5D0     		beq	.L7
  20:synthbassdrum.cpp ****             bd.SetDirtiness(random() / (float)RAND_MAX);
 227              		.loc 9 20 13 view .LVU41
  20:synthbassdrum.cpp ****             bd.SetDirtiness(random() / (float)RAND_MAX);
 228              		.loc 9 20 32 is_stmt 0 view .LVU42
 229 0048 FFF7FEFF 		bl	random
 230              	.LVL10:
  20:synthbassdrum.cpp ****             bd.SetDirtiness(random() / (float)RAND_MAX);
 231              		.loc 9 20 25 view .LVU43
 232 004c 07EE900A 		vmov	s15, r0	@ int
 233 0050 9FED148A 		vldr.32	s16, .L21+8
 234 0054 B8EEE70A 		vcvt.f32.s32	s0, s15
 235 0058 1048     		ldr	r0, .L21
 236 005a 20EE080A 		vmul.f32	s0, s0, s16
 237 005e FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum9SetAccentEf
 238              	.LVL11:
  21:synthbassdrum.cpp ****             bd.SetDecay(random() / (float)RAND_MAX);
 239              		.loc 9 21 13 is_stmt 1 view .LVU44
  21:synthbassdrum.cpp ****             bd.SetDecay(random() / (float)RAND_MAX);
 240              		.loc 9 21 35 is_stmt 0 view .LVU45
 241 0062 FFF7FEFF 		bl	random
 242              	.LVL12:
 243 0066 00EE100A 		vmov	s0, r0	@ int
  21:synthbassdrum.cpp ****             bd.SetDecay(random() / (float)RAND_MAX);
 244              		.loc 9 21 28 view .LVU46
 245 006a 0C48     		ldr	r0, .L21
 246 006c B8EEC00A 		vcvt.f32.s32	s0, s0
 247 0070 20EE080A 		vmul.f32	s0, s0, s16
 248 0074 FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum12SetDirtinessEf
 249              	.LVL13:
  22:synthbassdrum.cpp ****         }
 250              		.loc 9 22 13 is_stmt 1 view .LVU47
  22:synthbassdrum.cpp ****         }
 251              		.loc 9 22 31 is_stmt 0 view .LVU48
 252 0078 FFF7FEFF 		bl	random
 253              	.LVL14:
 254 007c 00EE100A 		vmov	s0, r0	@ int
  22:synthbassdrum.cpp ****         }
 255              		.loc 9 22 24 view .LVU49
ARM GAS  /tmp/cceMrBhU.s 			page 13


 256 0080 0648     		ldr	r0, .L21
 257 0082 B8EEC00A 		vcvt.f32.s32	s0, s0
 258 0086 20EE080A 		vmul.f32	s0, s0, s16
 259 008a FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum8SetDecayEf
 260              	.LVL15:
 261 008e C1E7     		b	.L7
 262              	.L20:
  22:synthbassdrum.cpp ****         }
 263              		.loc 9 22 24 view .LVU50
 264              	.LBE106:
 265              	.LBE108:
  25:synthbassdrum.cpp ****     }
  26:synthbassdrum.cpp **** }
 266              		.loc 9 26 1 view .LVU51
 267 0090 BDEC028B 		vldm	sp!, {d8}
 268              		.cfi_restore 80
 269              		.cfi_restore 81
 270              		.cfi_def_cfa_offset 24
 271 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 272              	.LVL16:
 273              	.L17:
 274              		.cfi_def_cfa_offset 0
 275              		.cfi_restore 4
 276              		.cfi_restore 5
 277              		.cfi_restore 6
 278              		.cfi_restore 7
 279              		.cfi_restore 8
 280              		.cfi_restore 14
 281              		.loc 9 26 1 view .LVU52
 282 0098 7047     		bx	lr
 283              	.L22:
 284 009a 00BF     		.align	2
 285              	.L21:
 286 009c 00000000 		.word	.LANCHOR1
 287 00a0 00000000 		.word	.LANCHOR0
 288 00a4 00000030 		.word	805306368
 289              		.cfi_endproc
 290              	.LFE4212:
 292              		.section	.text.startup.main,"ax",%progbits
 293              		.align	1
 294              		.p2align 2,,3
 295              		.global	main
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv5-d16
 301              	main:
 302              	.LFB4213:
  27:synthbassdrum.cpp **** 
  28:synthbassdrum.cpp **** int main(void)
  29:synthbassdrum.cpp **** {
 303              		.loc 9 29 1 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 0, uses_anonymous_args = 0
  30:synthbassdrum.cpp ****     hw.Configure();
 307              		.loc 9 30 5 view .LVU54
ARM GAS  /tmp/cceMrBhU.s 			page 14


  29:synthbassdrum.cpp ****     hw.Configure();
 308              		.loc 9 29 1 is_stmt 0 view .LVU55
 309 0000 00B5     		push	{lr}
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 14, -4
 312              		.loc 9 30 17 view .LVU56
 313 0002 1548     		ldr	r0, .L26
  29:synthbassdrum.cpp ****     hw.Configure();
 314              		.loc 9 29 1 view .LVU57
 315 0004 83B0     		sub	sp, sp, #12
 316              		.cfi_def_cfa_offset 16
 317              		.loc 9 30 17 view .LVU58
 318 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 319              	.LVL17:
  31:synthbassdrum.cpp ****     hw.Init();
 320              		.loc 9 31 5 is_stmt 1 view .LVU59
 321              		.loc 9 31 12 is_stmt 0 view .LVU60
 322 000a 0021     		movs	r1, #0
 323 000c 1248     		ldr	r0, .L26
 324 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 325              	.LVL18:
  32:synthbassdrum.cpp ****     float sample_rate = hw.AudioSampleRate();
 326              		.loc 9 32 5 is_stmt 1 view .LVU61
 327              		.loc 9 32 43 is_stmt 0 view .LVU62
 328 0012 1148     		ldr	r0, .L26
 329 0014 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 330              	.LVL19:
  33:synthbassdrum.cpp **** 
  34:synthbassdrum.cpp ****     bd.Init(sample_rate);
 331              		.loc 9 34 12 view .LVU63
 332 0018 1048     		ldr	r0, .L26+4
  32:synthbassdrum.cpp ****     float sample_rate = hw.AudioSampleRate();
 333              		.loc 9 32 43 view .LVU64
 334 001a 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 335              	.LVL20:
 336              		.loc 9 34 5 is_stmt 1 view .LVU65
 337              		.loc 9 34 12 is_stmt 0 view .LVU66
 338 001e FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum4InitEf
 339              	.LVL21:
  35:synthbassdrum.cpp ****     bd.SetFreq(50.f);
 340              		.loc 9 35 5 is_stmt 1 view .LVU67
 341              		.loc 9 35 15 is_stmt 0 view .LVU68
 342 0022 9FED0F0A 		vldr.32	s0, .L26+8
 343 0026 0D48     		ldr	r0, .L26+4
 344 0028 FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum7SetFreqEf
 345              	.LVL22:
  36:synthbassdrum.cpp ****     bd.SetDirtiness(.5f);
 346              		.loc 9 36 5 is_stmt 1 view .LVU69
 347              		.loc 9 36 20 is_stmt 0 view .LVU70
 348 002c B6EE000A 		vmov.f32	s0, #5.0e-1
 349 0030 0A48     		ldr	r0, .L26+4
 350 0032 FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum12SetDirtinessEf
 351              	.LVL23:
  37:synthbassdrum.cpp ****     bd.SetFmEnvelopeAmount(.6f);
 352              		.loc 9 37 5 is_stmt 1 view .LVU71
 353              		.loc 9 37 27 is_stmt 0 view .LVU72
 354 0036 9FED0B0A 		vldr.32	s0, .L26+12
ARM GAS  /tmp/cceMrBhU.s 			page 15


 355 003a 0848     		ldr	r0, .L26+4
 356 003c FFF7FEFF 		bl	_ZN7daisysp17SyntheticBassDrum19SetFmEnvelopeAmountEf
 357              	.LVL24:
  38:synthbassdrum.cpp **** 
  39:synthbassdrum.cpp ****     tick.Init(2.f, sample_rate);
 358              		.loc 9 39 5 is_stmt 1 view .LVU73
 359              		.loc 9 39 14 is_stmt 0 view .LVU74
 360 0040 0948     		ldr	r0, .L26+16
 361 0042 B0EE000A 		vmov.f32	s0, #2.0e+0
 362 0046 DDED010A 		vldr.32	s1, [sp, #4]	@ int
 363 004a FFF7FEFF 		bl	_ZN7daisysp5Metro4InitEff
 364              	.LVL25:
  40:synthbassdrum.cpp **** 
  41:synthbassdrum.cpp ****     hw.StartAudio(AudioCallback);
 365              		.loc 9 41 5 is_stmt 1 view .LVU75
 366              		.loc 9 41 18 is_stmt 0 view .LVU76
 367 004e 0749     		ldr	r1, .L26+20
 368 0050 0148     		ldr	r0, .L26
 369 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 370              	.LVL26:
 371              	.L24:
  42:synthbassdrum.cpp ****     while(1) {}
 372              		.loc 9 42 5 is_stmt 1 discriminator 1 view .LVU77
 373              		.loc 9 42 5 discriminator 1 view .LVU78
 374              		.loc 9 42 5 discriminator 1 view .LVU79
 375              		.loc 9 42 5 discriminator 1 view .LVU80
 376 0056 FEE7     		b	.L24
 377              	.L27:
 378              		.align	2
 379              	.L26:
 380 0058 00000000 		.word	.LANCHOR2
 381 005c 00000000 		.word	.LANCHOR1
 382 0060 00004842 		.word	1112014848
 383 0064 9A99193F 		.word	1058642330
 384 0068 00000000 		.word	.LANCHOR0
 385 006c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 386              		.cfi_endproc
 387              	.LFE4213:
 389              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 390              		.align	1
 391              		.p2align 2,,3
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv5-d16
 397              	_GLOBAL__sub_I_hw:
 398              	.LFB4759:
  43:synthbassdrum.cpp **** }
 399              		.loc 9 43 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              	.LBB134:
 404              	.LBI134:
 405              		.loc 9 43 1 view .LVU82
 406              	.LVL27:
 407              	.LBB135:
ARM GAS  /tmp/cceMrBhU.s 			page 16


 408              	.LBB136:
 409              	.LBI136:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 410              		.loc 1 21 5 view .LVU83
 411              	.LBB137:
 412              	.LBB138:
 413              	.LBI138:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 414              		.loc 5 62 5 view .LVU84
 415              	.LBE138:
 416              	.LBE137:
 417              	.LBE136:
 418              	.LBE135:
 419              	.LBE134:
 420              		.loc 9 43 1 is_stmt 0 view .LVU85
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 425              	.LBB164:
 426              	.LBB162:
 427              	.LBB153:
 428              	.LBB151:
 429              	.LBB143:
 430              	.LBB139:
 431              	.LBB140:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 432              		.loc 5 62 35 view .LVU86
 433 0002 0A48     		ldr	r0, .L30
 434 0004 0023     		movs	r3, #0
 435              	.LBE140:
 436              	.LBE139:
 437              	.LBE143:
 438              	.LBE151:
 439              	.LBE153:
   7:synthbassdrum.cpp **** SyntheticBassDrum bd;
 440              		.loc 9 7 19 view .LVU87
 441 0006 0A4A     		ldr	r2, .L30+4
 442              	.LBB154:
 443              	.LBB152:
 444              	.LBB144:
 445              	.LBB142:
 446              	.LBB141:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 447              		.loc 5 62 35 view .LVU88
 448 0008 4361     		str	r3, [r0, #20]
 449              	.LVL28:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 450              		.loc 5 62 35 view .LVU89
 451              	.LBE141:
 452              	.LBE142:
 453              	.LBE144:
 454              	.LBB145:
 455              	.LBI145:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 456              		.loc 4 84 5 is_stmt 1 view .LVU90
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
ARM GAS  /tmp/cceMrBhU.s 			page 17


 457              		.loc 4 84 5 is_stmt 0 view .LVU91
 458              	.LBE145:
 459              	.LBB146:
 460              	.LBI146:
 461              		.file 10 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
ARM GAS  /tmp/cceMrBhU.s 			page 18


  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 462              		.loc 10 83 5 is_stmt 1 view .LVU92
 463              	.LBB147:
 464              	.LBB148:
 465              		.loc 10 83 33 is_stmt 0 view .LVU93
 466 000a 0362     		str	r3, [r0, #32]
 467              	.LVL29:
 468              		.loc 10 83 33 view .LVU94
 469              	.LBE148:
 470              	.LBE147:
 471              	.LBE146:
 472              	.LBB149:
 473              	.LBI149:
  40:../../libdaisy/src/hid/usb.h **** 
 474              		.loc 3 40 5 is_stmt 1 view .LVU95
  40:../../libdaisy/src/hid/usb.h **** 
 475              		.loc 3 40 5 is_stmt 0 view .LVU96
 476              	.LBE149:
 477              	.LBB150:
 478              	.LBI150:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 479              		.loc 2 58 5 is_stmt 1 view .LVU97
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 480              		.loc 2 58 5 is_stmt 0 view .LVU98
 481              	.LBE150:
 482              	.LBE152:
 483              	.LBE154:
ARM GAS  /tmp/cceMrBhU.s 			page 19


   7:synthbassdrum.cpp **** SyntheticBassDrum bd;
 484              		.loc 9 7 19 view .LVU99
 485 000c 0949     		ldr	r1, .L30+8
 486 000e FFF7FEFF 		bl	__aeabi_atexit
 487              	.LVL30:
 488              	.LBB155:
 489              	.LBI155:
  82:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrum() {}
 490              		.loc 6 82 5 is_stmt 1 view .LVU100
 491              	.LBB156:
 492              	.LBB157:
 493              	.LBI157:
  26:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrumClick() {}
 494              		.loc 6 26 5 view .LVU101
 495              	.LBB158:
 496              	.LBB159:
 497              	.LBI159:
  21:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 498              		.loc 7 21 5 view .LVU102
  21:../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 499              		.loc 7 21 5 is_stmt 0 view .LVU103
 500              	.LBE159:
 501              	.LBE158:
 502              	.LBE157:
 503              	.LBB160:
 504              	.LBI160:
  56:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrumAttackNoise() {}
 505              		.loc 6 56 5 is_stmt 1 view .LVU104
  56:../../DaisySP/Source/Drums/synthbassdrum.h ****     ~SyntheticBassDrumAttackNoise() {}
 506              		.loc 6 56 5 is_stmt 0 view .LVU105
 507              	.LBE160:
 508              	.LBE156:
 509              	.LBE155:
   8:synthbassdrum.cpp **** Metro             tick;
 510              		.loc 9 8 19 view .LVU106
 511 0012 074A     		ldr	r2, .L30+4
 512 0014 0849     		ldr	r1, .L30+12
 513 0016 0948     		ldr	r0, .L30+16
 514 0018 FFF7FEFF 		bl	__aeabi_atexit
 515              	.LVL31:
 516              	.LBB161:
 517              	.LBI161:
  14:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 518              		.loc 8 14 5 is_stmt 1 view .LVU107
  14:../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 519              		.loc 8 14 5 is_stmt 0 view .LVU108
 520              	.LBE161:
   9:synthbassdrum.cpp **** 
 521              		.loc 9 9 19 view .LVU109
 522 001c 044A     		ldr	r2, .L30+4
 523 001e 0849     		ldr	r1, .L30+20
 524 0020 0848     		ldr	r0, .L30+24
 525              	.LBE162:
 526              	.LBE164:
 527              		.loc 9 43 1 view .LVU110
 528 0022 BDE80840 		pop	{r3, lr}
 529              		.cfi_restore 14
ARM GAS  /tmp/cceMrBhU.s 			page 20


 530              		.cfi_restore 3
 531              		.cfi_def_cfa_offset 0
 532              	.LBB165:
 533              	.LBB163:
   9:synthbassdrum.cpp **** 
 534              		.loc 9 9 19 view .LVU111
 535 0026 FFF7FEBF 		b	__aeabi_atexit
 536              	.LVL32:
 537              	.L31:
 538 002a 00BF     		.align	2
 539              	.L30:
 540 002c 00000000 		.word	.LANCHOR2
 541 0030 00000000 		.word	__dso_handle
 542 0034 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 543 0038 00000000 		.word	_ZN7daisysp17SyntheticBassDrumD1Ev
 544 003c 00000000 		.word	.LANCHOR1
 545 0040 00000000 		.word	_ZN7daisysp5MetroD1Ev
 546 0044 00000000 		.word	.LANCHOR0
 547              	.LBE163:
 548              	.LBE165:
 549              		.cfi_endproc
 550              	.LFE4759:
 552              		.section	.init_array,"aw",%init_array
 553              		.align	2
 554 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 555              		.global	tick
 556              		.global	bd
 557              		.global	hw
 558              		.section	.bss.bd,"aw",%nobits
 559              		.align	2
 560              		.set	.LANCHOR1,. + 0
 563              	bd:
 564 0000 00000000 		.space	180
 564      00000000 
 564      00000000 
 564      00000000 
 564      00000000 
 565              		.section	.bss.hw,"aw",%nobits
 566              		.align	2
 567              		.set	.LANCHOR2,. + 0
 570              	hw:
 571 0000 00000000 		.space	60
 571      00000000 
 571      00000000 
 571      00000000 
 571      00000000 
 572              		.section	.bss.tick,"aw",%nobits
 573              		.align	2
 574              		.set	.LANCHOR0,. + 0
 577              	tick:
 578 0000 00000000 		.space	16
 578      00000000 
 578      00000000 
 578      00000000 
 579              		.text
 580              	.Letext0:
 581              		.file 11 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
ARM GAS  /tmp/cceMrBhU.s 			page 21


 582              		.file 12 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 583              		.file 13 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 584              		.file 14 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 585              		.file 15 "/usr/include/newlib/c++/9.2.1/cmath"
 586              		.file 16 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 587              		.file 17 "/usr/include/newlib/c++/9.2.1/cstdlib"
 588              		.file 18 "/usr/include/newlib/c++/9.2.1/cstdint"
 589              		.file 19 "/usr/include/newlib/c++/9.2.1/type_traits"
 590              		.file 20 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 591              		.file 21 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 592              		.file 22 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 593              		.file 23 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 594              		.file 24 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 595              		.file 25 "/usr/include/newlib/c++/9.2.1/new"
 596              		.file 26 "/usr/include/newlib/c++/9.2.1/cstdarg"
 597              		.file 27 "/usr/include/newlib/c++/9.2.1/cstdio"
 598              		.file 28 "/usr/include/newlib/c++/9.2.1/cwchar"
 599              		.file 29 "/usr/include/newlib/c++/9.2.1/clocale"
 600              		.file 30 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 601              		.file 31 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 602              		.file 32 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 603              		.file 33 "/usr/include/newlib/c++/9.2.1/cstring"
 604              		.file 34 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 605              		.file 35 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 606              		.file 36 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 607              		.file 37 "/usr/include/newlib/sys/_types.h"
 608              		.file 38 "<built-in>"
 609              		.file 39 "/usr/include/newlib/sys/reent.h"
 610              		.file 40 "/usr/include/newlib/sys/lock.h"
 611              		.file 41 "/usr/include/newlib/math.h"
 612              		.file 42 "/usr/include/newlib/stdlib.h"
 613              		.file 43 "/usr/include/newlib/c++/9.2.1/math.h"
 614              		.file 44 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 615              		.file 45 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 616              		.file 46 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 617              		.file 47 "../../libdaisy/src/daisy_core.h"
 618              		.file 48 "../../libdaisy/src/per/tim.h"
 619              		.file 49 "../../libdaisy/src/per/sai.h"
 620              		.file 50 "../../libdaisy/src/util/wav_format.h"
 621              		.file 51 "../../libdaisy/src/per/qspi.h"
 622              		.file 52 "../../libdaisy/src/per/gpio.h"
 623              		.file 53 "../../libdaisy/src/dev/sdram.h"
 624              		.file 54 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 625              		.file 55 "/usr/include/newlib/stdio.h"
 626              		.file 56 "/usr/include/newlib/sys/unistd.h"
 627              		.file 57 "../../libdaisy/src/util/oled_fonts.h"
 628              		.file 58 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 629              		.file 59 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 630              		.file 60 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 631              		.file 61 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 632              		.file 62 "../../libdaisy/src/util/sd_diskio.h"
 633              		.file 63 "../../libdaisy/src/sys/fatfs.h"
 634              		.file 64 "../../DaisySP/Source/Control/adenv.h"
 635              		.file 65 "../../DaisySP/Source/Utility/dsp.h"
 636              		.file 66 "/usr/include/newlib/wchar.h"
 637              		.file 67 "/usr/include/newlib/locale.h"
 638              		.file 68 "/usr/include/newlib/ctype.h"
ARM GAS  /tmp/cceMrBhU.s 			page 22


 639              		.file 69 "/usr/include/newlib/sys/errno.h"
 640              		.file 70 "/usr/include/newlib/string.h"
 641              		.file 71 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/cceMrBhU.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 synthbassdrum.cpp
     /tmp/cceMrBhU.s:17     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
     /tmp/cceMrBhU.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
     /tmp/cceMrBhU.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
     /tmp/cceMrBhU.s:67     .text._ZN7daisysp17SyntheticBassDrumD2Ev:0000000000000000 $t
     /tmp/cceMrBhU.s:75     .text._ZN7daisysp17SyntheticBassDrumD2Ev:0000000000000000 _ZN7daisysp17SyntheticBassDrumD2Ev
     /tmp/cceMrBhU.s:75     .text._ZN7daisysp17SyntheticBassDrumD2Ev:0000000000000000 _ZN7daisysp17SyntheticBassDrumD1Ev
     /tmp/cceMrBhU.s:107    .text._ZN7daisysp5MetroD2Ev:0000000000000000 $t
     /tmp/cceMrBhU.s:115    .text._ZN7daisysp5MetroD2Ev:0000000000000000 _ZN7daisysp5MetroD2Ev
     /tmp/cceMrBhU.s:115    .text._ZN7daisysp5MetroD2Ev:0000000000000000 _ZN7daisysp5MetroD1Ev
     /tmp/cceMrBhU.s:132    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/cceMrBhU.s:140    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/cceMrBhU.s:286    .text._Z13AudioCallbackPKPKfPPfj:000000000000009c $d
     /tmp/cceMrBhU.s:293    .text.startup.main:0000000000000000 $t
     /tmp/cceMrBhU.s:301    .text.startup.main:0000000000000000 main
     /tmp/cceMrBhU.s:380    .text.startup.main:0000000000000058 $d
     /tmp/cceMrBhU.s:390    .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
     /tmp/cceMrBhU.s:397    .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
     /tmp/cceMrBhU.s:540    .text.startup._GLOBAL__sub_I_hw:000000000000002c $d
     /tmp/cceMrBhU.s:553    .init_array:0000000000000000 $d
     /tmp/cceMrBhU.s:577    .bss.tick:0000000000000000 tick
     /tmp/cceMrBhU.s:563    .bss.bd:0000000000000000 bd
     /tmp/cceMrBhU.s:570    .bss.hw:0000000000000000 hw
     /tmp/cceMrBhU.s:559    .bss.bd:0000000000000000 $d
     /tmp/cceMrBhU.s:566    .bss.hw:0000000000000000 $d
     /tmp/cceMrBhU.s:573    .bss.tick:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp17SyntheticBassDrumD5Ev
                           .group:0000000000000000 _ZN7daisysp5MetroD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp17SyntheticBassDrum7ProcessEb
_ZN7daisysp5Metro7ProcessEv
random
_ZN7daisysp17SyntheticBassDrum9SetAccentEf
_ZN7daisysp17SyntheticBassDrum12SetDirtinessEf
_ZN7daisysp17SyntheticBassDrum8SetDecayEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp17SyntheticBassDrum4InitEf
_ZN7daisysp17SyntheticBassDrum7SetFreqEf
_ZN7daisysp17SyntheticBassDrum19SetFmEnvelopeAmountEf
_ZN7daisysp5Metro4InitEff
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
