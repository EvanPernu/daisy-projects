ARM GAS  /tmp/ccUsbZWH.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Nimbus.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy10DaisyFieldD2Ev,"axG",%progbits,_ZN5daisy10DaisyFieldD5Ev,comdat
  17              		.align	1
  18              		.weak	_ZN5daisy10DaisyFieldD2Ev
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	_ZN5daisy10DaisyFieldD2Ev:
  26              	.LVL0:
  27              	.LFB2063:
  28              		.file 1 "../../libdaisy/src/daisy_field.h"
   1:../../libdaisy/src/daisy_field.h **** #pragma once
   2:../../libdaisy/src/daisy_field.h **** #ifndef DSY_FIELD_BSP_H
   3:../../libdaisy/src/daisy_field.h **** #define DSY_FIELD_BSP_H /**< & */
   4:../../libdaisy/src/daisy_field.h **** #include "daisy_seed.h"
   5:../../libdaisy/src/daisy_field.h **** #include "dev/oled_ssd130x.h"
   6:../../libdaisy/src/daisy_field.h **** 
   7:../../libdaisy/src/daisy_field.h **** /**
   8:../../libdaisy/src/daisy_field.h ****    @brief Hardware defines and helpers for daisy field platform.
   9:../../libdaisy/src/daisy_field.h **** */
  10:../../libdaisy/src/daisy_field.h **** namespace daisy
  11:../../libdaisy/src/daisy_field.h **** {
  12:../../libdaisy/src/daisy_field.h **** /** @addtogroup boards
  13:../../libdaisy/src/daisy_field.h ****     @{
  14:../../libdaisy/src/daisy_field.h **** */
  15:../../libdaisy/src/daisy_field.h **** class DaisyField
  16:../../libdaisy/src/daisy_field.h **** {
  17:../../libdaisy/src/daisy_field.h ****   public:
  18:../../libdaisy/src/daisy_field.h ****     /** enums for controls, etc.
  19:../../libdaisy/src/daisy_field.h **** */
  20:../../libdaisy/src/daisy_field.h ****     enum
  21:../../libdaisy/src/daisy_field.h ****     {
  22:../../libdaisy/src/daisy_field.h ****         SW_1,    /**< tactile switch */
  23:../../libdaisy/src/daisy_field.h ****         SW_2,    /**< tactile switch */
  24:../../libdaisy/src/daisy_field.h ****         SW_LAST, /**< & */
  25:../../libdaisy/src/daisy_field.h ****     };
  26:../../libdaisy/src/daisy_field.h **** 
  27:../../libdaisy/src/daisy_field.h ****     /** All knobs connect to Daisy Seed's ADC1 pin via CD4051 mux
  28:../../libdaisy/src/daisy_field.h ****         Knobs are in order that they are laid out on hardware.
  29:../../libdaisy/src/daisy_field.h ****     */
  30:../../libdaisy/src/daisy_field.h ****     enum
ARM GAS  /tmp/ccUsbZWH.s 			page 2


  31:../../libdaisy/src/daisy_field.h ****     {
  32:../../libdaisy/src/daisy_field.h ****         KNOB_1,    /**< & */
  33:../../libdaisy/src/daisy_field.h ****         KNOB_2,    /**< & */
  34:../../libdaisy/src/daisy_field.h ****         KNOB_3,    /**< & */
  35:../../libdaisy/src/daisy_field.h ****         KNOB_4,    /**< & */
  36:../../libdaisy/src/daisy_field.h ****         KNOB_5,    /**< & */
  37:../../libdaisy/src/daisy_field.h ****         KNOB_6,    /**< & */
  38:../../libdaisy/src/daisy_field.h ****         KNOB_7,    /**< & */
  39:../../libdaisy/src/daisy_field.h ****         KNOB_8,    /**< & */
  40:../../libdaisy/src/daisy_field.h ****         KNOB_LAST, /**< & */
  41:../../libdaisy/src/daisy_field.h ****     };
  42:../../libdaisy/src/daisy_field.h **** 
  43:../../libdaisy/src/daisy_field.h ****     enum
  44:../../libdaisy/src/daisy_field.h ****     {
  45:../../libdaisy/src/daisy_field.h ****         CV_1,    /** Connected to ADC1_INP17 */
  46:../../libdaisy/src/daisy_field.h ****         CV_2,    /** Connected  to ADC1_INP15 */
  47:../../libdaisy/src/daisy_field.h ****         CV_3,    /** Connected to ADC1_INP4 */
  48:../../libdaisy/src/daisy_field.h ****         CV_4,    /** Connected to ADC1_INP11 */
  49:../../libdaisy/src/daisy_field.h ****         CV_LAST, /**< & */
  50:../../libdaisy/src/daisy_field.h ****     };
  51:../../libdaisy/src/daisy_field.h **** 
  52:../../libdaisy/src/daisy_field.h ****     enum
  53:../../libdaisy/src/daisy_field.h ****     {
  54:../../libdaisy/src/daisy_field.h ****         LED_KEY_B1, /**< & */
  55:../../libdaisy/src/daisy_field.h ****         LED_KEY_B2, /**< & */
  56:../../libdaisy/src/daisy_field.h ****         LED_KEY_B3, /**< & */
  57:../../libdaisy/src/daisy_field.h ****         LED_KEY_B4, /**< & */
  58:../../libdaisy/src/daisy_field.h ****         LED_KEY_B5, /**< & */
  59:../../libdaisy/src/daisy_field.h ****         LED_KEY_B6, /**< & */
  60:../../libdaisy/src/daisy_field.h ****         LED_KEY_B7, /**< & */
  61:../../libdaisy/src/daisy_field.h ****         LED_KEY_B8, /**< & */
  62:../../libdaisy/src/daisy_field.h ****         LED_KEY_A8, /**< & */
  63:../../libdaisy/src/daisy_field.h ****         LED_KEY_A7, /**< & */
  64:../../libdaisy/src/daisy_field.h ****         LED_KEY_A6, /**< & */
  65:../../libdaisy/src/daisy_field.h ****         LED_KEY_A5, /**< & */
  66:../../libdaisy/src/daisy_field.h ****         LED_KEY_A4, /**< & */
  67:../../libdaisy/src/daisy_field.h ****         LED_KEY_A3, /**< & */
  68:../../libdaisy/src/daisy_field.h ****         LED_KEY_A2, /**< & */
  69:../../libdaisy/src/daisy_field.h ****         LED_KEY_A1, /**< & */
  70:../../libdaisy/src/daisy_field.h ****         LED_KNOB_1, /**< & */
  71:../../libdaisy/src/daisy_field.h ****         LED_KNOB_2, /**< & */
  72:../../libdaisy/src/daisy_field.h ****         LED_KNOB_3, /**< & */
  73:../../libdaisy/src/daisy_field.h ****         LED_KNOB_4, /**< & */
  74:../../libdaisy/src/daisy_field.h ****         LED_KNOB_5, /**< & */
  75:../../libdaisy/src/daisy_field.h ****         LED_KNOB_6, /**< & */
  76:../../libdaisy/src/daisy_field.h ****         LED_KNOB_7, /**< & */
  77:../../libdaisy/src/daisy_field.h ****         LED_KNOB_8, /**< & */
  78:../../libdaisy/src/daisy_field.h ****         LED_SW_1,   /**< & */
  79:../../libdaisy/src/daisy_field.h ****         LED_SW_2,   /**< & */
  80:../../libdaisy/src/daisy_field.h ****         LED_LAST    /**< & */
  81:../../libdaisy/src/daisy_field.h ****     };
  82:../../libdaisy/src/daisy_field.h **** 
  83:../../libdaisy/src/daisy_field.h ****     DaisyField() {}
  84:../../libdaisy/src/daisy_field.h ****     ~DaisyField() {}
  29              		.loc 1 84 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUsbZWH.s 			page 3


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LBB658:
  35              	.LBI658:
  36              		.file 2 "../../libdaisy/src/dev/sr_4021.h"
   1:../../libdaisy/src/dev/sr_4021.h **** #pragma once
   2:../../libdaisy/src/dev/sr_4021.h **** #ifndef DEV_SR_4021_H
   3:../../libdaisy/src/dev/sr_4021.h **** #define DEV_SR_4021_H
   4:../../libdaisy/src/dev/sr_4021.h **** #include "per/gpio.h"
   5:../../libdaisy/src/dev/sr_4021.h **** #include "sys/system.h"
   6:../../libdaisy/src/dev/sr_4021.h **** 
   7:../../libdaisy/src/dev/sr_4021.h **** namespace daisy
   8:../../libdaisy/src/dev/sr_4021.h **** {
   9:../../libdaisy/src/dev/sr_4021.h **** /** @brief Device Driver for CD4021 shift register
  10:../../libdaisy/src/dev/sr_4021.h ****  ** @author shensley
  11:../../libdaisy/src/dev/sr_4021.h ****  ** @addtogroup shiftregister
  12:../../libdaisy/src/dev/sr_4021.h ****  **
  13:../../libdaisy/src/dev/sr_4021.h ****  ** CD4021B-Q1: CMOS 8-STAGE STATIC SHIFT REGISTER
  14:../../libdaisy/src/dev/sr_4021.h ****  ** 
  15:../../libdaisy/src/dev/sr_4021.h ****  ** Supply Voltage: 3V to 18V
  16:../../libdaisy/src/dev/sr_4021.h ****  ** Clock Freq: 3MHz at 5V (less at 3v3) -> 8.5MHz at 15V
  17:../../libdaisy/src/dev/sr_4021.h ****  ** Pin Descriptions:
  18:../../libdaisy/src/dev/sr_4021.h ****  ** - Parallel Data[1-8] - 7, 6, 5, 4, 13, 14, 115, 1
  19:../../libdaisy/src/dev/sr_4021.h ****  ** - Serial Data        - 11
  20:../../libdaisy/src/dev/sr_4021.h ****  ** - Clock              - 10
  21:../../libdaisy/src/dev/sr_4021.h ****  ** - P/!S               - 9
  22:../../libdaisy/src/dev/sr_4021.h ****  ** - Q[6-8]             - 2, 12, 3
  23:../../libdaisy/src/dev/sr_4021.h ****  **
  24:../../libdaisy/src/dev/sr_4021.h ****  ** Driver has support for daisy chaining and running up to 2 same-sized 
  25:../../libdaisy/src/dev/sr_4021.h ****  ** chains in parallel from a single set of clk/latch pins to reduce 
  26:../../libdaisy/src/dev/sr_4021.h ****  ** pin/code overhead when using multiple devices.
  27:../../libdaisy/src/dev/sr_4021.h ****  **
  28:../../libdaisy/src/dev/sr_4021.h ****  ** When dealing with multiple parallel/daisy-chained devices the 
  29:../../libdaisy/src/dev/sr_4021.h ****  ** states of all inputs will be filled in the following order (example uses two chained and two pa
  30:../../libdaisy/src/dev/sr_4021.h ****  ** data[chain0,parallel0], data[chain1,parallel0], data[chain0,parallel1], data[chain1,parallel1];
  31:../../libdaisy/src/dev/sr_4021.h ****  ** 
  32:../../libdaisy/src/dev/sr_4021.h ****  ** When combining multiple daisy chained and parallel devices the number of devices chained should
  33:../../libdaisy/src/dev/sr_4021.h ****  ** for each parallel device chain.
  34:../../libdaisy/src/dev/sr_4021.h ****  **
  35:../../libdaisy/src/dev/sr_4021.h ****  ***/
  36:../../libdaisy/src/dev/sr_4021.h **** template <size_t num_daisychained = 1, size_t num_parallel = 1>
  37:../../libdaisy/src/dev/sr_4021.h **** class ShiftRegister4021
  38:../../libdaisy/src/dev/sr_4021.h **** {
  39:../../libdaisy/src/dev/sr_4021.h ****   public:
  40:../../libdaisy/src/dev/sr_4021.h ****     /** Configuration Structure for handling the pin setting of the device */
  41:../../libdaisy/src/dev/sr_4021.h ****     struct Config
  42:../../libdaisy/src/dev/sr_4021.h ****     {
  43:../../libdaisy/src/dev/sr_4021.h ****         dsy_gpio_pin clk;   /**< Clock pin to attach to pin 10 of device(s) */
  44:../../libdaisy/src/dev/sr_4021.h ****         dsy_gpio_pin latch; /**< Latch pin to attach to pin 9 of device(s) */
  45:../../libdaisy/src/dev/sr_4021.h ****         dsy_gpio_pin data[num_parallel]; /**< Data Pin(s) */
  46:../../libdaisy/src/dev/sr_4021.h ****     };
  47:../../libdaisy/src/dev/sr_4021.h **** 
  48:../../libdaisy/src/dev/sr_4021.h ****     ShiftRegister4021() {}
  49:../../libdaisy/src/dev/sr_4021.h ****     ~ShiftRegister4021() {}
  37              		.loc 2 49 5 view .LVU1
  38              		.loc 2 49 5 is_stmt 0 view .LVU2
  39              	.LBE658:
ARM GAS  /tmp/ccUsbZWH.s 			page 4


  40              	.LBB659:
  41              	.LBI659:
  42              		.file 3 "../../libdaisy/src/hid/midi.h"
   1:../../libdaisy/src/hid/midi.h **** #pragma once
   2:../../libdaisy/src/hid/midi.h **** #ifndef DSY_MIDI_H
   3:../../libdaisy/src/hid/midi.h **** #define DSY_MIDI_H
   4:../../libdaisy/src/hid/midi.h **** 
   5:../../libdaisy/src/hid/midi.h **** // TODO: make this adjustable
   6:../../libdaisy/src/hid/midi.h **** #define SYSEX_BUFFER_LEN 128
   7:../../libdaisy/src/hid/midi.h **** 
   8:../../libdaisy/src/hid/midi.h **** #include <stdint.h>
   9:../../libdaisy/src/hid/midi.h **** #include <stdlib.h>
  10:../../libdaisy/src/hid/midi.h **** #include "per/uart.h"
  11:../../libdaisy/src/hid/midi.h **** #include "util/ringbuffer.h"
  12:../../libdaisy/src/hid/midi.h **** #include "hid/MidiEvent.h"
  13:../../libdaisy/src/hid/midi.h **** #include "sys/system.h"
  14:../../libdaisy/src/hid/midi.h **** 
  15:../../libdaisy/src/hid/midi.h **** namespace daisy
  16:../../libdaisy/src/hid/midi.h **** {
  17:../../libdaisy/src/hid/midi.h **** /** @addtogroup external 
  18:../../libdaisy/src/hid/midi.h ****     @{ 
  19:../../libdaisy/src/hid/midi.h **** */
  20:../../libdaisy/src/hid/midi.h **** 
  21:../../libdaisy/src/hid/midi.h **** class MidiUartTransport
  22:../../libdaisy/src/hid/midi.h **** {
  23:../../libdaisy/src/hid/midi.h ****   public:
  24:../../libdaisy/src/hid/midi.h ****     MidiUartTransport() {}
  25:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
  26:../../libdaisy/src/hid/midi.h **** 
  27:../../libdaisy/src/hid/midi.h ****     struct Config
  28:../../libdaisy/src/hid/midi.h ****     {
  29:../../libdaisy/src/hid/midi.h ****         UartHandler::Config::Peripheral periph;
  30:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    rx;
  31:../../libdaisy/src/hid/midi.h ****         dsy_gpio_pin                    tx;
  32:../../libdaisy/src/hid/midi.h **** 
  33:../../libdaisy/src/hid/midi.h ****         Config()
  34:../../libdaisy/src/hid/midi.h ****         {
  35:../../libdaisy/src/hid/midi.h ****             periph = UartHandler::Config::Peripheral::USART_1;
  36:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
  37:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
  38:../../libdaisy/src/hid/midi.h ****         }
  39:../../libdaisy/src/hid/midi.h ****     };
  40:../../libdaisy/src/hid/midi.h **** 
  41:../../libdaisy/src/hid/midi.h ****     inline void Init(Config config)
  42:../../libdaisy/src/hid/midi.h ****     {
  43:../../libdaisy/src/hid/midi.h ****         UartHandler::Config uart_config;
  44:../../libdaisy/src/hid/midi.h **** 
  45:../../libdaisy/src/hid/midi.h ****         //defaults
  46:../../libdaisy/src/hid/midi.h ****         uart_config.baudrate   = 31250;
  47:../../libdaisy/src/hid/midi.h ****         uart_config.stopbits   = UartHandler::Config::StopBits::BITS_1;
  48:../../libdaisy/src/hid/midi.h ****         uart_config.parity     = UartHandler::Config::Parity::NONE;
  49:../../libdaisy/src/hid/midi.h ****         uart_config.mode       = UartHandler::Config::Mode::TX_RX;
  50:../../libdaisy/src/hid/midi.h ****         uart_config.wordlength = UartHandler::Config::WordLength::BITS_8;
  51:../../libdaisy/src/hid/midi.h **** 
  52:../../libdaisy/src/hid/midi.h ****         //user settings
  53:../../libdaisy/src/hid/midi.h ****         uart_config.periph        = config.periph;
  54:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.rx = config.rx;
ARM GAS  /tmp/ccUsbZWH.s 			page 5


  55:../../libdaisy/src/hid/midi.h ****         uart_config.pin_config.tx = config.tx;
  56:../../libdaisy/src/hid/midi.h **** 
  57:../../libdaisy/src/hid/midi.h ****         uart_.Init(uart_config);
  58:../../libdaisy/src/hid/midi.h ****     }
  59:../../libdaisy/src/hid/midi.h **** 
  60:../../libdaisy/src/hid/midi.h ****     inline void    StartRx() { uart_.StartRx(); }
  61:../../libdaisy/src/hid/midi.h ****     inline size_t  Readable() { return uart_.Readable(); }
  62:../../libdaisy/src/hid/midi.h ****     inline uint8_t Rx() { return uart_.PopRx(); }
  63:../../libdaisy/src/hid/midi.h ****     inline bool    RxActive() { return uart_.RxActive(); }
  64:../../libdaisy/src/hid/midi.h ****     inline void    FlushRx() { uart_.FlushRx(); }
  65:../../libdaisy/src/hid/midi.h ****     inline void    Tx(uint8_t* buff, size_t size) { uart_.PollTx(buff, size); }
  66:../../libdaisy/src/hid/midi.h **** 
  67:../../libdaisy/src/hid/midi.h ****   private:
  68:../../libdaisy/src/hid/midi.h ****     UartHandler uart_;
  69:../../libdaisy/src/hid/midi.h **** };
  70:../../libdaisy/src/hid/midi.h **** 
  71:../../libdaisy/src/hid/midi.h **** /** 
  72:../../libdaisy/src/hid/midi.h ****     @brief Simple MIDI Handler \n 
  73:../../libdaisy/src/hid/midi.h ****     Parses bytes from an input into valid MidiEvents. \n 
  74:../../libdaisy/src/hid/midi.h ****     The MidiEvents fill a FIFO queue that the user can pop messages from.
  75:../../libdaisy/src/hid/midi.h ****     @author shensley
  76:../../libdaisy/src/hid/midi.h ****     @date March 2020
  77:../../libdaisy/src/hid/midi.h **** */
  78:../../libdaisy/src/hid/midi.h **** template <typename Transport>
  79:../../libdaisy/src/hid/midi.h **** class MidiHandler
  80:../../libdaisy/src/hid/midi.h **** {
  81:../../libdaisy/src/hid/midi.h ****   public:
  82:../../libdaisy/src/hid/midi.h ****     MidiHandler() {}
  83:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
  43              		.loc 3 83 5 is_stmt 1 view .LVU3
  44              	.LBB660:
  45              	.LBI660:
  25:../../libdaisy/src/hid/midi.h **** 
  46              		.loc 3 25 5 view .LVU4
  25:../../libdaisy/src/hid/midi.h **** 
  47              		.loc 3 25 5 is_stmt 0 view .LVU5
  48              	.LBE660:
  49              	.LBE659:
  50              	.LBB661:
  51              	.LBI661:
  52              		.file 4 "../../libdaisy/src/hid/gatein.h"
   1:../../libdaisy/src/hid/gatein.h **** #pragma once
   2:../../libdaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../../libdaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../../libdaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../../libdaisy/src/hid/gatein.h **** 
   6:../../libdaisy/src/hid/gatein.h **** namespace daisy
   7:../../libdaisy/src/hid/gatein.h **** {
   8:../../libdaisy/src/hid/gatein.h **** /** @file hid_gatein.h */
   9:../../libdaisy/src/hid/gatein.h **** /**
  10:../../libdaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  11:../../libdaisy/src/hid/gatein.h ****    @author Stephen Hensley
  12:../../libdaisy/src/hid/gatein.h ****    @date    March 2020
  13:../../libdaisy/src/hid/gatein.h ****    @ingroup controls
  14:../../libdaisy/src/hid/gatein.h **** */
  15:../../libdaisy/src/hid/gatein.h **** class GateIn
  16:../../libdaisy/src/hid/gatein.h **** {
ARM GAS  /tmp/ccUsbZWH.s 			page 6


  17:../../libdaisy/src/hid/gatein.h ****   public:
  18:../../libdaisy/src/hid/gatein.h ****     /** GateIn 
  19:../../libdaisy/src/hid/gatein.h ****     Constructor 
  20:../../libdaisy/src/hid/gatein.h ****     */
  21:../../libdaisy/src/hid/gatein.h ****     GateIn() {}
  22:../../libdaisy/src/hid/gatein.h ****     /** GateIn~
  23:../../libdaisy/src/hid/gatein.h ****     Destructor 
  24:../../libdaisy/src/hid/gatein.h ****     */
  25:../../libdaisy/src/hid/gatein.h ****     ~GateIn() {}
  53              		.loc 4 25 5 is_stmt 1 view .LVU6
  54              		.loc 4 25 5 is_stmt 0 view .LVU7
  55              	.LBE661:
  56              	.LBB662:
  57              	.LBI662:
  58              		.file 5 "../../libdaisy/src/hid/disp/oled_display.h"
   1:../../libdaisy/src/hid/disp/oled_display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/oled_display.h **** #ifndef DSY_OLED_DISPLAY_H
   3:../../libdaisy/src/hid/disp/oled_display.h **** #define DSY_OLED_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/oled_display.h **** 
   5:../../libdaisy/src/hid/disp/oled_display.h **** #include "display.h"
   6:../../libdaisy/src/hid/disp/oled_display.h **** 
   7:../../libdaisy/src/hid/disp/oled_display.h **** namespace daisy
   8:../../libdaisy/src/hid/disp/oled_display.h **** {
   9:../../libdaisy/src/hid/disp/oled_display.h **** /** 
  10:../../libdaisy/src/hid/disp/oled_display.h ****  * This class is for drawing to a monochrome OLED display. 
  11:../../libdaisy/src/hid/disp/oled_display.h **** */
  12:../../libdaisy/src/hid/disp/oled_display.h **** template <typename DisplayDriver>
  13:../../libdaisy/src/hid/disp/oled_display.h **** class OledDisplay : public OneBitGraphicsDisplayImpl<OledDisplay<DisplayDriver>>
  14:../../libdaisy/src/hid/disp/oled_display.h **** {
  15:../../libdaisy/src/hid/disp/oled_display.h ****   public:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     OledDisplay() {}
  17:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
  59              		.loc 5 17 13 is_stmt 1 view .LVU8
  60              	.LBB663:
  61              	.LBI663:
  62              		.file 6 "../../libdaisy/src/hid/disp/display.h"
   1:../../libdaisy/src/hid/disp/display.h **** #pragma once
   2:../../libdaisy/src/hid/disp/display.h **** #ifndef DSY_DISPLAY_H
   3:../../libdaisy/src/hid/disp/display.h **** #define DSY_DISPLAY_H /**< Macro */
   4:../../libdaisy/src/hid/disp/display.h **** #include <cmath>
   5:../../libdaisy/src/hid/disp/display.h **** #include "util/oled_fonts.h"
   6:../../libdaisy/src/hid/disp/display.h **** #include "daisy_core.h"
   7:../../libdaisy/src/hid/disp/display.h **** #include "graphics_common.h"
   8:../../libdaisy/src/hid/disp/display.h **** 
   9:../../libdaisy/src/hid/disp/display.h **** #ifndef deg2rad
  10:../../libdaisy/src/hid/disp/display.h **** #define deg2rad(deg) ((deg)*3.141592 / 180.0)
  11:../../libdaisy/src/hid/disp/display.h **** #endif
  12:../../libdaisy/src/hid/disp/display.h **** 
  13:../../libdaisy/src/hid/disp/display.h **** namespace daisy
  14:../../libdaisy/src/hid/disp/display.h **** {
  15:../../libdaisy/src/hid/disp/display.h **** /** 
  16:../../libdaisy/src/hid/disp/display.h ****  * This interface is used as a base class for all types of 1bit-per-pixel
  17:../../libdaisy/src/hid/disp/display.h ****  * graphics displays.
  18:../../libdaisy/src/hid/disp/display.h **** */
  19:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplay
  20:../../libdaisy/src/hid/disp/display.h **** {
  21:../../libdaisy/src/hid/disp/display.h ****   public:
ARM GAS  /tmp/ccUsbZWH.s 			page 7


  22:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplay() {}
  23:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
  24:../../libdaisy/src/hid/disp/display.h **** 
  25:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Height() const = 0;
  26:../../libdaisy/src/hid/disp/display.h ****     virtual uint16_t Width() const  = 0;
  27:../../libdaisy/src/hid/disp/display.h **** 
  28:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetBounds() const
  29:../../libdaisy/src/hid/disp/display.h ****     {
  30:../../libdaisy/src/hid/disp/display.h ****         return Rectangle(int16_t(Width()), int16_t(Height()));
  31:../../libdaisy/src/hid/disp/display.h ****     }
  32:../../libdaisy/src/hid/disp/display.h **** 
  33:../../libdaisy/src/hid/disp/display.h **** 
  34:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentX() { return currentX_; };
  35:../../libdaisy/src/hid/disp/display.h ****     size_t CurrentY() { return currentY_; };
  36:../../libdaisy/src/hid/disp/display.h **** 
  37:../../libdaisy/src/hid/disp/display.h ****     /** 
  38:../../libdaisy/src/hid/disp/display.h ****     Fills the entire display with either on/off.
  39:../../libdaisy/src/hid/disp/display.h ****     \param on Sets on or off.
  40:../../libdaisy/src/hid/disp/display.h ****     */
  41:../../libdaisy/src/hid/disp/display.h ****     virtual void Fill(bool on) = 0;
  42:../../libdaisy/src/hid/disp/display.h **** 
  43:../../libdaisy/src/hid/disp/display.h ****     /**
  44:../../libdaisy/src/hid/disp/display.h ****     Sets the pixel at the specified coordinate to be on/off.
  45:../../libdaisy/src/hid/disp/display.h ****     \param x   x Coordinate
  46:../../libdaisy/src/hid/disp/display.h ****     \param y   y coordinate
  47:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  48:../../libdaisy/src/hid/disp/display.h ****     */
  49:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) = 0;
  50:../../libdaisy/src/hid/disp/display.h **** 
  51:../../libdaisy/src/hid/disp/display.h ****     /**
  52:../../libdaisy/src/hid/disp/display.h ****     Draws a line from (x1, y1) to (y1, y2)
  53:../../libdaisy/src/hid/disp/display.h ****     \param x1  x Coordinate of the starting point
  54:../../libdaisy/src/hid/disp/display.h ****     \param y1  y Coordinate of the starting point
  55:../../libdaisy/src/hid/disp/display.h ****     \param x2  x Coordinate of the ending point
  56:../../libdaisy/src/hid/disp/display.h ****     \param y2  y Coordinate of the ending point
  57:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
  58:../../libdaisy/src/hid/disp/display.h ****     */
  59:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawLine(uint_fast8_t x1,
  60:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  61:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  62:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
  63:../../libdaisy/src/hid/disp/display.h ****                           bool         on)
  64:../../libdaisy/src/hid/disp/display.h ****         = 0;
  65:../../libdaisy/src/hid/disp/display.h **** 
  66:../../libdaisy/src/hid/disp/display.h ****     /**
  67:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle based on two coordinates.
  68:../../libdaisy/src/hid/disp/display.h ****     \param x1 x Coordinate of the first point
  69:../../libdaisy/src/hid/disp/display.h ****     \param y1 y Coordinate of the first point
  70:../../libdaisy/src/hid/disp/display.h ****     \param x2 x Coordinate of the second point
  71:../../libdaisy/src/hid/disp/display.h ****     \param y2 y Coordinate of the second point
  72:../../libdaisy/src/hid/disp/display.h ****     \param on on or off
  73:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  74:../../libdaisy/src/hid/disp/display.h ****     */
  75:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawRect(uint_fast8_t x1,
  76:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y1,
  77:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t x2,
  78:../../libdaisy/src/hid/disp/display.h ****                           uint_fast8_t y2,
ARM GAS  /tmp/ccUsbZWH.s 			page 8


  79:../../libdaisy/src/hid/disp/display.h ****                           bool         on,
  80:../../libdaisy/src/hid/disp/display.h ****                           bool         fill = false)
  81:../../libdaisy/src/hid/disp/display.h ****         = 0;
  82:../../libdaisy/src/hid/disp/display.h **** 
  83:../../libdaisy/src/hid/disp/display.h ****     /**
  84:../../libdaisy/src/hid/disp/display.h ****     Draws a rectangle.
  85:../../libdaisy/src/hid/disp/display.h ****     \param rect the rectangle
  86:../../libdaisy/src/hid/disp/display.h ****     \param on   on or off
  87:../../libdaisy/src/hid/disp/display.h ****     \param fill fill the rectangle or draw only the outline
  88:../../libdaisy/src/hid/disp/display.h ****     */
  89:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(const Rectangle& rect, bool on, bool fill = false)
  90:../../libdaisy/src/hid/disp/display.h ****     {
  91:../../libdaisy/src/hid/disp/display.h ****         DrawRect(rect.GetX(),
  92:../../libdaisy/src/hid/disp/display.h ****                  rect.GetY(),
  93:../../libdaisy/src/hid/disp/display.h ****                  rect.GetRight(),
  94:../../libdaisy/src/hid/disp/display.h ****                  rect.GetBottom(),
  95:../../libdaisy/src/hid/disp/display.h ****                  on,
  96:../../libdaisy/src/hid/disp/display.h ****                  fill);
  97:../../libdaisy/src/hid/disp/display.h ****     }
  98:../../libdaisy/src/hid/disp/display.h **** 
  99:../../libdaisy/src/hid/disp/display.h ****     /**
 100:../../libdaisy/src/hid/disp/display.h ****     Draws an arc around the specified coordinate
 101:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the arc
 102:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the arc
 103:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the arc
 104:../../libdaisy/src/hid/disp/display.h ****     \param start_angle angle where to start the arc
 105:../../libdaisy/src/hid/disp/display.h ****     \param sweep       total angle of the arc
 106:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 107:../../libdaisy/src/hid/disp/display.h ****     */
 108:../../libdaisy/src/hid/disp/display.h ****     virtual void DrawArc(uint_fast8_t x,
 109:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t y,
 110:../../libdaisy/src/hid/disp/display.h ****                          uint_fast8_t radius,
 111:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t start_angle,
 112:../../libdaisy/src/hid/disp/display.h ****                          int_fast16_t sweep,
 113:../../libdaisy/src/hid/disp/display.h ****                          bool         on)
 114:../../libdaisy/src/hid/disp/display.h ****         = 0;
 115:../../libdaisy/src/hid/disp/display.h **** 
 116:../../libdaisy/src/hid/disp/display.h ****     /**
 117:../../libdaisy/src/hid/disp/display.h ****     Draws a circle around the specified coordinate
 118:../../libdaisy/src/hid/disp/display.h ****     \param x           x Coordinate of the center of the circle
 119:../../libdaisy/src/hid/disp/display.h ****     \param y           y Coordinate of the center of the circle
 120:../../libdaisy/src/hid/disp/display.h ****     \param radius      radius of the circle
 121:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 122:../../libdaisy/src/hid/disp/display.h ****     */
 123:../../libdaisy/src/hid/disp/display.h ****     void
 124:../../libdaisy/src/hid/disp/display.h ****     DrawCircle(uint_fast8_t x, uint_fast8_t y, uint_fast8_t radius, bool on)
 125:../../libdaisy/src/hid/disp/display.h ****     {
 126:../../libdaisy/src/hid/disp/display.h ****         DrawArc(x, y, radius, 0, 360, on);
 127:../../libdaisy/src/hid/disp/display.h ****     };
 128:../../libdaisy/src/hid/disp/display.h **** 
 129:../../libdaisy/src/hid/disp/display.h ****     /** 
 130:../../libdaisy/src/hid/disp/display.h ****     Writes the character with the specific FontDef
 131:../../libdaisy/src/hid/disp/display.h ****     to the display buffer at the current Cursor position.
 132:../../libdaisy/src/hid/disp/display.h ****     \param ch character to be written
 133:../../libdaisy/src/hid/disp/display.h ****     \param font font to be written in
 134:../../libdaisy/src/hid/disp/display.h ****     \param on    on or off
 135:../../libdaisy/src/hid/disp/display.h ****     \return &
ARM GAS  /tmp/ccUsbZWH.s 			page 9


 136:../../libdaisy/src/hid/disp/display.h ****     */
 137:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteChar(char ch, FontDef font, bool on) = 0;
 138:../../libdaisy/src/hid/disp/display.h **** 
 139:../../libdaisy/src/hid/disp/display.h ****     /** 
 140:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteChar, except it will handle an entire String.
 141:../../libdaisy/src/hid/disp/display.h ****     Wrapping does not happen automatically, so the width
 142:../../libdaisy/src/hid/disp/display.h ****     of the string must be kept within the dimensions of the screen.
 143:../../libdaisy/src/hid/disp/display.h ****     \param str string to be written
 144:../../libdaisy/src/hid/disp/display.h ****     \param font font to use
 145:../../libdaisy/src/hid/disp/display.h ****     \param on  on or off
 146:../../libdaisy/src/hid/disp/display.h ****     \return &
 147:../../libdaisy/src/hid/disp/display.h ****     */
 148:../../libdaisy/src/hid/disp/display.h ****     virtual char WriteString(const char* str, FontDef font, bool on) = 0;
 149:../../libdaisy/src/hid/disp/display.h **** 
 150:../../libdaisy/src/hid/disp/display.h ****     /** 
 151:../../libdaisy/src/hid/disp/display.h ****     Similar to WriteString but justified within a bounding box.
 152:../../libdaisy/src/hid/disp/display.h ****     \param str          string to be written
 153:../../libdaisy/src/hid/disp/display.h ****     \param font         font to use
 154:../../libdaisy/src/hid/disp/display.h ****     \param boundingBox  the bounding box to draw the text in
 155:../../libdaisy/src/hid/disp/display.h ****     \param alignment    the alignment to use
 156:../../libdaisy/src/hid/disp/display.h ****     \param on           on or off
 157:../../libdaisy/src/hid/disp/display.h ****     \return The rectangle that was drawn to
 158:../../libdaisy/src/hid/disp/display.h ****     */
 159:../../libdaisy/src/hid/disp/display.h ****     virtual Rectangle WriteStringAligned(const char*    str,
 160:../../libdaisy/src/hid/disp/display.h ****                                          const FontDef& font,
 161:../../libdaisy/src/hid/disp/display.h ****                                          Rectangle      boundingBox,
 162:../../libdaisy/src/hid/disp/display.h ****                                          Alignment      alignment,
 163:../../libdaisy/src/hid/disp/display.h ****                                          bool           on)
 164:../../libdaisy/src/hid/disp/display.h ****         = 0;
 165:../../libdaisy/src/hid/disp/display.h **** 
 166:../../libdaisy/src/hid/disp/display.h ****     /** 
 167:../../libdaisy/src/hid/disp/display.h ****     Moves the 'Cursor' position used for WriteChar, and WriteStr to the specified coordinate.
 168:../../libdaisy/src/hid/disp/display.h ****     \param x x pos
 169:../../libdaisy/src/hid/disp/display.h ****     \param y y pos
 170:../../libdaisy/src/hid/disp/display.h ****     */
 171:../../libdaisy/src/hid/disp/display.h ****     void SetCursor(uint16_t x, uint16_t y)
 172:../../libdaisy/src/hid/disp/display.h ****     {
 173:../../libdaisy/src/hid/disp/display.h ****         currentX_ = (x >= Width()) ? Width() - 1 : x;
 174:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 175:../../libdaisy/src/hid/disp/display.h ****     }
 176:../../libdaisy/src/hid/disp/display.h **** 
 177:../../libdaisy/src/hid/disp/display.h ****     /** 
 178:../../libdaisy/src/hid/disp/display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
 179:../../libdaisy/src/hid/disp/display.h ****     how the object was initialized.
 180:../../libdaisy/src/hid/disp/display.h ****     */
 181:../../libdaisy/src/hid/disp/display.h ****     virtual void Update() = 0;
 182:../../libdaisy/src/hid/disp/display.h **** 
 183:../../libdaisy/src/hid/disp/display.h ****   protected:
 184:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentX_;
 185:../../libdaisy/src/hid/disp/display.h ****     uint16_t currentY_;
 186:../../libdaisy/src/hid/disp/display.h **** };
 187:../../libdaisy/src/hid/disp/display.h **** 
 188:../../libdaisy/src/hid/disp/display.h **** /** This class is intended as a intermediary class for your actual implementation of the OneBitGrap
 189:../../libdaisy/src/hid/disp/display.h ****  *  interface. It uses the CRTP design pattern where the template argument is the child class. It p
 190:../../libdaisy/src/hid/disp/display.h ****  *  implementations for most of the functions, except DrawPixel(), Update() and Fill(), which you'l
 191:../../libdaisy/src/hid/disp/display.h ****  *  to provide in your child class.
 192:../../libdaisy/src/hid/disp/display.h ****  *  The main goal of this class is to provide common drawing functions without relying on massive a
ARM GAS  /tmp/ccUsbZWH.s 			page 10


 193:../../libdaisy/src/hid/disp/display.h ****  *  virtual function calls that would result in a performance loss. To achieve this, any drawing fu
 194:../../libdaisy/src/hid/disp/display.h ****  *  is implemented here and internally calls other drawing functions (e.g. DrawRect() which interna
 195:../../libdaisy/src/hid/disp/display.h ****  *  DrawPixel() and DrawLine()) makes these calls via the qualified name of these functions to expl
 196:../../libdaisy/src/hid/disp/display.h ****  *  suppress the virtual dispatch mechanism like this:
 197:../../libdaisy/src/hid/disp/display.h ****  * 
 198:../../libdaisy/src/hid/disp/display.h ****  *      ChildType::DrawPixel(...); // no virtual function call; direct call into the child class fu
 199:../../libdaisy/src/hid/disp/display.h ****  *  
 200:../../libdaisy/src/hid/disp/display.h ****  *  To create a custom OneBitGraphicsDisplay implementation, you can 
 201:../../libdaisy/src/hid/disp/display.h ****  *  A) inherit from OneBitGraphicsDisplay directly and provide all the drawing functions yourself
 202:../../libdaisy/src/hid/disp/display.h ****  *  B) Inherit from OneBitGraphicsDisplayImpl and only provide DrawPixel(), Fill() and Update()
 203:../../libdaisy/src/hid/disp/display.h ****  *     like this:
 204:../../libdaisy/src/hid/disp/display.h ****  *  
 205:../../libdaisy/src/hid/disp/display.h ****  *      class MyDisplayClass : public OneBitGraphicsDisplayImpl<MyDisplayClass> 
 206:../../libdaisy/src/hid/disp/display.h ****  *      {
 207:../../libdaisy/src/hid/disp/display.h ****  *      public:
 208:../../libdaisy/src/hid/disp/display.h ****  *          void Fill() override { ... };
 209:../../libdaisy/src/hid/disp/display.h ****  *          void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override { ... };
 210:../../libdaisy/src/hid/disp/display.h ****  *          void Update() override { ... }
 211:../../libdaisy/src/hid/disp/display.h ****  *      };
 212:../../libdaisy/src/hid/disp/display.h ****  *  
 213:../../libdaisy/src/hid/disp/display.h ****  */
 214:../../libdaisy/src/hid/disp/display.h **** template <class ChildType>
 215:../../libdaisy/src/hid/disp/display.h **** class OneBitGraphicsDisplayImpl : public OneBitGraphicsDisplay
 216:../../libdaisy/src/hid/disp/display.h **** {
 217:../../libdaisy/src/hid/disp/display.h ****   public:
 218:../../libdaisy/src/hid/disp/display.h ****     OneBitGraphicsDisplayImpl() {}
 219:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
  63              		.loc 6 219 13 view .LVU9
  64              	.LBB664:
  65              	.LBI664:
  23:../../libdaisy/src/hid/disp/display.h **** 
  66              		.loc 6 23 13 view .LVU10
  23:../../libdaisy/src/hid/disp/display.h **** 
  67              		.loc 6 23 13 is_stmt 0 view .LVU11
  68              	.LBE664:
  69              	.LBE663:
  70              	.LBE662:
  71              	.LBB665:
  72              	.LBI665:
  73              		.file 7 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
ARM GAS  /tmp/ccUsbZWH.s 			page 11


  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  74              		.loc 7 22 5 is_stmt 1 view .LVU12
  75              	.LBB666:
  76              	.LBI666:
  77              		.file 8 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
ARM GAS  /tmp/ccUsbZWH.s 			page 12


  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
  78              		.loc 8 59 5 view .LVU13
  79              		.loc 8 59 5 is_stmt 0 view .LVU14
  80              	.LBE666:
  81              	.LBB667:
  82              	.LBI667:
  83              		.file 9 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
ARM GAS  /tmp/ccUsbZWH.s 			page 13


  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  84              		.loc 9 42 5 is_stmt 1 view .LVU15
  85              		.loc 9 42 5 is_stmt 0 view .LVU16
  86              	.LBE667:
  87              	.LBB668:
  88              	.LBI668:
  89              		.file 10 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
ARM GAS  /tmp/ccUsbZWH.s 			page 14


  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  90              		.loc 10 85 5 is_stmt 1 view .LVU17
  91              		.loc 10 85 5 is_stmt 0 view .LVU18
  92              	.LBE668:
  93              	.LBB669:
  94              	.LBI669:
  95              		.file 11 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
ARM GAS  /tmp/ccUsbZWH.s 			page 15


  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  96              		.loc 11 63 5 is_stmt 1 view .LVU19
  97              		.loc 11 63 5 is_stmt 0 view .LVU20
  98              	.LBE669:
  99              	.LBE665:
 100              		.loc 1 84 20 view .LVU21
 101 0000 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE2063:
 105              		.weak	_ZN5daisy10DaisyFieldD1Ev
ARM GAS  /tmp/ccUsbZWH.s 			page 16


 106              		.thumb_set _ZN5daisy10DaisyFieldD1Ev,_ZN5daisy10DaisyFieldD2Ev
 107              		.section	.text._ZN23GranularProcessorCloudsD2Ev,"axG",%progbits,_ZN23GranularProcessorCloudsD5Ev,c
 108              		.align	1
 109              		.weak	_ZN23GranularProcessorCloudsD2Ev
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-d16
 115              	_ZN23GranularProcessorCloudsD2Ev:
 116              	.LVL1:
 117              	.LFB4494:
 118              		.file 12 "dsp/granular_processor.h"
   1:dsp/granular_processor.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/granular_processor.h **** //
   3:dsp/granular_processor.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/granular_processor.h **** //
   5:dsp/granular_processor.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/granular_processor.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/granular_processor.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/granular_processor.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/granular_processor.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/granular_processor.h **** // furnished to do so, subject to the following conditions:
  11:dsp/granular_processor.h **** //
  12:dsp/granular_processor.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/granular_processor.h **** // all copies or substantial portions of the Software.
  14:dsp/granular_processor.h **** //
  15:dsp/granular_processor.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/granular_processor.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/granular_processor.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/granular_processor.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/granular_processor.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/granular_processor.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/granular_processor.h **** // THE SOFTWARE.
  22:dsp/granular_processor.h **** //
  23:dsp/granular_processor.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/granular_processor.h **** //
  25:dsp/granular_processor.h **** // -----------------------------------------------------------------------------
  26:dsp/granular_processor.h **** //
  27:dsp/granular_processor.h **** // Main processing class.
  28:dsp/granular_processor.h **** 
  29:dsp/granular_processor.h **** #ifndef CLOUDS_DSP_GRANULAR_PROCESSOR_H_
  30:dsp/granular_processor.h **** #define CLOUDS_DSP_GRANULAR_PROCESSOR_H_
  31:dsp/granular_processor.h **** 
  32:dsp/granular_processor.h **** #include "correlator.h"
  33:dsp/granular_processor.h **** #include "frame.h"
  34:dsp/granular_processor.h **** #include "diffuser.h"
  35:dsp/granular_processor.h **** #include "pitch_shifter.h"
  36:dsp/granular_processor.h **** #include "reverb.h"
  37:dsp/granular_processor.h **** #include "granular_processor.h"
  38:dsp/granular_processor.h **** #include "granular_sample_player.h"
  39:dsp/granular_processor.h **** #include "looping_sample_player.h"
  40:dsp/granular_processor.h **** #include "phase_vocoder.h"
  41:dsp/granular_processor.h **** #include "sample_rate_converter.h"
  42:dsp/granular_processor.h **** #include "wsola_sample_player.h"
  43:dsp/granular_processor.h **** #include "parameter_interpolator.h"
  44:dsp/granular_processor.h **** 
  45:dsp/granular_processor.h **** using namespace daisysp;
ARM GAS  /tmp/ccUsbZWH.s 			page 17


  46:dsp/granular_processor.h **** 
  47:dsp/granular_processor.h **** const int32_t kDownsamplingFactor = 2;
  48:dsp/granular_processor.h **** 
  49:dsp/granular_processor.h **** enum PlaybackMode
  50:dsp/granular_processor.h **** {
  51:dsp/granular_processor.h ****     PLAYBACK_MODE_GRANULAR,
  52:dsp/granular_processor.h ****     PLAYBACK_MODE_STRETCH,
  53:dsp/granular_processor.h ****     PLAYBACK_MODE_LOOPING_DELAY,
  54:dsp/granular_processor.h ****     PLAYBACK_MODE_SPECTRAL,
  55:dsp/granular_processor.h ****     PLAYBACK_MODE_LAST
  56:dsp/granular_processor.h **** };
  57:dsp/granular_processor.h **** 
  58:dsp/granular_processor.h **** // State of the recording buffer as saved in one of the 4 sample memories.
  59:dsp/granular_processor.h **** struct PersistentState
  60:dsp/granular_processor.h **** {
  61:dsp/granular_processor.h ****     int32_t write_head[2];
  62:dsp/granular_processor.h ****     uint8_t quality;
  63:dsp/granular_processor.h ****     uint8_t spectral;
  64:dsp/granular_processor.h **** };
  65:dsp/granular_processor.h **** 
  66:dsp/granular_processor.h **** // Data block as saved in one of the 4 sample memories.
  67:dsp/granular_processor.h **** struct PersistentBlock
  68:dsp/granular_processor.h **** {
  69:dsp/granular_processor.h ****     uint32_t tag;
  70:dsp/granular_processor.h ****     uint32_t size;
  71:dsp/granular_processor.h ****     void*    data;
  72:dsp/granular_processor.h **** };
  73:dsp/granular_processor.h **** 
  74:dsp/granular_processor.h **** class GranularProcessorClouds
  75:dsp/granular_processor.h **** {
  76:dsp/granular_processor.h ****   public:
  77:dsp/granular_processor.h ****     GranularProcessorClouds() {}
  78:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 119              		.loc 12 78 5 is_stmt 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.LBB670:
 125              	.LBI670:
 126              		.file 13 "dsp/sample_rate_converter.h"
   1:dsp/sample_rate_converter.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/sample_rate_converter.h **** //
   3:dsp/sample_rate_converter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/sample_rate_converter.h **** //
   5:dsp/sample_rate_converter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/sample_rate_converter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/sample_rate_converter.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/sample_rate_converter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/sample_rate_converter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/sample_rate_converter.h **** // furnished to do so, subject to the following conditions:
  11:dsp/sample_rate_converter.h **** //
  12:dsp/sample_rate_converter.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/sample_rate_converter.h **** // all copies or substantial portions of the Software.
  14:dsp/sample_rate_converter.h **** //
  15:dsp/sample_rate_converter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/sample_rate_converter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  /tmp/ccUsbZWH.s 			page 18


  17:dsp/sample_rate_converter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/sample_rate_converter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/sample_rate_converter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/sample_rate_converter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/sample_rate_converter.h **** // THE SOFTWARE.
  22:dsp/sample_rate_converter.h **** //
  23:dsp/sample_rate_converter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/sample_rate_converter.h **** //
  25:dsp/sample_rate_converter.h **** // -----------------------------------------------------------------------------
  26:dsp/sample_rate_converter.h **** //
  27:dsp/sample_rate_converter.h **** // Sample rate converter
  28:dsp/sample_rate_converter.h **** 
  29:dsp/sample_rate_converter.h **** #ifndef CLOUDS_DSP_SAMPLE_RATE_CONVERTER_H_
  30:dsp/sample_rate_converter.h **** #define CLOUDS_DSP_SAMPLE_RATE_CONVERTER_H_
  31:dsp/sample_rate_converter.h **** 
  32:dsp/sample_rate_converter.h **** #include "frame.h"
  33:dsp/sample_rate_converter.h **** 
  34:dsp/sample_rate_converter.h **** using namespace daisysp;
  35:dsp/sample_rate_converter.h **** 
  36:dsp/sample_rate_converter.h **** template <int32_t ratio, int32_t filter_size, const float* coefficients>
  37:dsp/sample_rate_converter.h **** class SampleRateConverter
  38:dsp/sample_rate_converter.h **** {
  39:dsp/sample_rate_converter.h ****   public:
  40:dsp/sample_rate_converter.h ****     SampleRateConverter() {}
  41:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 127              		.loc 13 41 5 view .LVU23
 128              		.loc 13 41 5 is_stmt 0 view .LVU24
 129              	.LBE670:
 130              	.LBB671:
 131              	.LBI671:
 132              		.loc 13 41 5 is_stmt 1 view .LVU25
 133              		.loc 13 41 5 is_stmt 0 view .LVU26
 134              	.LBE671:
 135              	.LBB672:
 136              	.LBI672:
 137              		.file 14 "dsp/fx/pitch_shifter.h"
   1:dsp/fx/pitch_shifter.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/pitch_shifter.h **** //
   3:dsp/fx/pitch_shifter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/pitch_shifter.h **** //
   5:dsp/fx/pitch_shifter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/pitch_shifter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/pitch_shifter.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/pitch_shifter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/pitch_shifter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/pitch_shifter.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/pitch_shifter.h **** //
  12:dsp/fx/pitch_shifter.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/pitch_shifter.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/pitch_shifter.h **** //
  15:dsp/fx/pitch_shifter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/pitch_shifter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/pitch_shifter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/pitch_shifter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/pitch_shifter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/pitch_shifter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/pitch_shifter.h **** // THE SOFTWARE.
ARM GAS  /tmp/ccUsbZWH.s 			page 19


  22:dsp/fx/pitch_shifter.h **** //
  23:dsp/fx/pitch_shifter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/pitch_shifter.h **** //
  25:dsp/fx/pitch_shifter.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/pitch_shifter.h **** //
  27:dsp/fx/pitch_shifter.h **** // Pitch shifter.
  28:dsp/fx/pitch_shifter.h **** 
  29:dsp/fx/pitch_shifter.h **** #ifndef CLOUDS_DSP_FX_PITCH_SHIFTER_H_
  30:dsp/fx/pitch_shifter.h **** #define CLOUDS_DSP_FX_PITCH_SHIFTER_H_
  31:dsp/fx/pitch_shifter.h **** 
  32:dsp/fx/pitch_shifter.h **** 
  33:dsp/fx/pitch_shifter.h **** #include "frame.h"
  34:dsp/fx/pitch_shifter.h **** #include "fx_engine.h"
  35:dsp/fx/pitch_shifter.h **** 
  36:dsp/fx/pitch_shifter.h **** using namespace daisysp;
  37:dsp/fx/pitch_shifter.h **** 
  38:dsp/fx/pitch_shifter.h **** class PitchShifterClouds
  39:dsp/fx/pitch_shifter.h **** {
  40:dsp/fx/pitch_shifter.h ****   public:
  41:dsp/fx/pitch_shifter.h ****     PitchShifterClouds() {}
  42:dsp/fx/pitch_shifter.h ****     ~PitchShifterClouds() {}
 138              		.loc 14 42 5 is_stmt 1 view .LVU27
 139              	.LBB673:
 140              	.LBI673:
 141              		.file 15 "dsp/fx/fx_engine.h"
   1:dsp/fx/fx_engine.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/fx_engine.h **** //
   3:dsp/fx/fx_engine.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/fx_engine.h **** //
   5:dsp/fx/fx_engine.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/fx_engine.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/fx_engine.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/fx_engine.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/fx_engine.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/fx_engine.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/fx_engine.h **** //
  12:dsp/fx/fx_engine.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/fx_engine.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/fx_engine.h **** //
  15:dsp/fx/fx_engine.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/fx_engine.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/fx_engine.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/fx_engine.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/fx_engine.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/fx_engine.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/fx_engine.h **** // THE SOFTWARE.
  22:dsp/fx/fx_engine.h **** //
  23:dsp/fx/fx_engine.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/fx_engine.h **** //
  25:dsp/fx/fx_engine.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/fx_engine.h **** //
  27:dsp/fx/fx_engine.h **** // Base class for building reverbs.
  28:dsp/fx/fx_engine.h **** 
  29:dsp/fx/fx_engine.h **** #ifndef CLOUDS_DSP_FX_FX_ENGINE_H_
  30:dsp/fx/fx_engine.h **** #define CLOUDS_DSP_FX_FX_ENGINE_H_
  31:dsp/fx/fx_engine.h **** 
  32:dsp/fx/fx_engine.h **** #include <algorithm>
ARM GAS  /tmp/ccUsbZWH.s 			page 20


  33:dsp/fx/fx_engine.h **** #include "stmtemp.h"
  34:dsp/fx/fx_engine.h **** 
  35:dsp/fx/fx_engine.h **** using namespace daisysp;
  36:dsp/fx/fx_engine.h **** 
  37:dsp/fx/fx_engine.h **** #define TAIL , -1
  38:dsp/fx/fx_engine.h **** 
  39:dsp/fx/fx_engine.h **** enum Format
  40:dsp/fx/fx_engine.h **** {
  41:dsp/fx/fx_engine.h ****     FORMAT_12_BIT,
  42:dsp/fx/fx_engine.h ****     FORMAT_16_BIT,
  43:dsp/fx/fx_engine.h ****     FORMAT_32_BIT
  44:dsp/fx/fx_engine.h **** };
  45:dsp/fx/fx_engine.h **** 
  46:dsp/fx/fx_engine.h **** enum LFOIndex
  47:dsp/fx/fx_engine.h **** {
  48:dsp/fx/fx_engine.h ****     LFO_1,
  49:dsp/fx/fx_engine.h ****     LFO_2
  50:dsp/fx/fx_engine.h **** };
  51:dsp/fx/fx_engine.h **** 
  52:dsp/fx/fx_engine.h **** template <Format format>
  53:dsp/fx/fx_engine.h **** struct DataType
  54:dsp/fx/fx_engine.h **** {
  55:dsp/fx/fx_engine.h **** };
  56:dsp/fx/fx_engine.h **** 
  57:dsp/fx/fx_engine.h **** template <>
  58:dsp/fx/fx_engine.h **** struct DataType<FORMAT_12_BIT>
  59:dsp/fx/fx_engine.h **** {
  60:dsp/fx/fx_engine.h ****     typedef uint16_t T;
  61:dsp/fx/fx_engine.h **** 
  62:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  63:dsp/fx/fx_engine.h ****     {
  64:dsp/fx/fx_engine.h ****         return static_cast<float>(static_cast<int16_t>(value)) / 4096.0f;
  65:dsp/fx/fx_engine.h ****     }
  66:dsp/fx/fx_engine.h **** 
  67:dsp/fx/fx_engine.h ****     static inline T Compress(float value)
  68:dsp/fx/fx_engine.h ****     {
  69:dsp/fx/fx_engine.h ****         return static_cast<uint16_t>(
  70:dsp/fx/fx_engine.h ****             Clip16(static_cast<int32_t>(value * 4096.0f)));
  71:dsp/fx/fx_engine.h ****     }
  72:dsp/fx/fx_engine.h **** };
  73:dsp/fx/fx_engine.h **** 
  74:dsp/fx/fx_engine.h **** template <>
  75:dsp/fx/fx_engine.h **** struct DataType<FORMAT_16_BIT>
  76:dsp/fx/fx_engine.h **** {
  77:dsp/fx/fx_engine.h ****     typedef uint16_t T;
  78:dsp/fx/fx_engine.h **** 
  79:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  80:dsp/fx/fx_engine.h ****     {
  81:dsp/fx/fx_engine.h ****         return static_cast<float>(static_cast<int16_t>(value)) / 32768.0f;
  82:dsp/fx/fx_engine.h ****     }
  83:dsp/fx/fx_engine.h **** 
  84:dsp/fx/fx_engine.h ****     static inline T Compress(float value)
  85:dsp/fx/fx_engine.h ****     {
  86:dsp/fx/fx_engine.h ****         return static_cast<uint16_t>(
  87:dsp/fx/fx_engine.h ****             Clip16(static_cast<int32_t>(value * 32768.0f)));
  88:dsp/fx/fx_engine.h ****     }
  89:dsp/fx/fx_engine.h **** };
ARM GAS  /tmp/ccUsbZWH.s 			page 21


  90:dsp/fx/fx_engine.h **** 
  91:dsp/fx/fx_engine.h **** template <>
  92:dsp/fx/fx_engine.h **** struct DataType<FORMAT_32_BIT>
  93:dsp/fx/fx_engine.h **** {
  94:dsp/fx/fx_engine.h ****     typedef float T;
  95:dsp/fx/fx_engine.h **** 
  96:dsp/fx/fx_engine.h ****     static inline float Decompress(T value)
  97:dsp/fx/fx_engine.h ****     {
  98:dsp/fx/fx_engine.h ****         return value;
  99:dsp/fx/fx_engine.h ****         ;
 100:dsp/fx/fx_engine.h ****     }
 101:dsp/fx/fx_engine.h **** 
 102:dsp/fx/fx_engine.h ****     static inline T Compress(float value) { return value; }
 103:dsp/fx/fx_engine.h **** };
 104:dsp/fx/fx_engine.h **** 
 105:dsp/fx/fx_engine.h **** template <size_t size, Format format = FORMAT_12_BIT>
 106:dsp/fx/fx_engine.h **** class FxEngine
 107:dsp/fx/fx_engine.h **** {
 108:dsp/fx/fx_engine.h ****   public:
 109:dsp/fx/fx_engine.h ****     typedef typename DataType<format>::T T;
 110:dsp/fx/fx_engine.h ****     FxEngine() {}
 111:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 142              		.loc 15 111 5 view .LVU28
 143              		.loc 15 111 5 is_stmt 0 view .LVU29
 144              	.LBE673:
 145              	.LBE672:
 146              	.LBB674:
 147              	.LBI674:
 148              		.file 16 "dsp/fx/reverb.h"
   1:dsp/fx/reverb.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/reverb.h **** //
   3:dsp/fx/reverb.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/reverb.h **** //
   5:dsp/fx/reverb.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/reverb.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/reverb.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/reverb.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/reverb.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/reverb.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/reverb.h **** //
  12:dsp/fx/reverb.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/reverb.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/reverb.h **** //
  15:dsp/fx/reverb.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/reverb.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/reverb.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/reverb.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/reverb.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/reverb.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/reverb.h **** // THE SOFTWARE.
  22:dsp/fx/reverb.h **** //
  23:dsp/fx/reverb.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/reverb.h **** //
  25:dsp/fx/reverb.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/reverb.h **** //
  27:dsp/fx/reverb.h **** // Reverb.
  28:dsp/fx/reverb.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 22


  29:dsp/fx/reverb.h **** #ifndef CLOUDS_DSP_FX_REVERB_H_
  30:dsp/fx/reverb.h **** #define CLOUDS_DSP_FX_REVERB_H_
  31:dsp/fx/reverb.h **** 
  32:dsp/fx/reverb.h **** 
  33:dsp/fx/reverb.h **** #include "fx_engine.h"
  34:dsp/fx/reverb.h **** 
  35:dsp/fx/reverb.h **** using namespace daisysp;
  36:dsp/fx/reverb.h **** 
  37:dsp/fx/reverb.h **** class Reverb
  38:dsp/fx/reverb.h **** {
  39:dsp/fx/reverb.h ****   public:
  40:dsp/fx/reverb.h ****     Reverb() {}
  41:dsp/fx/reverb.h ****     ~Reverb() {}
 149              		.loc 16 41 5 is_stmt 1 view .LVU30
 150              	.LBB675:
 151              	.LBI675:
 152              		.loc 15 111 5 view .LVU31
 153              		.loc 15 111 5 is_stmt 0 view .LVU32
 154              	.LBE675:
 155              	.LBE674:
 156              	.LBB676:
 157              	.LBI676:
 158              		.file 17 "dsp/fx/diffuser.h"
   1:dsp/fx/diffuser.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/fx/diffuser.h **** //
   3:dsp/fx/diffuser.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/fx/diffuser.h **** //
   5:dsp/fx/diffuser.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/fx/diffuser.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/fx/diffuser.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/fx/diffuser.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/fx/diffuser.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/fx/diffuser.h **** // furnished to do so, subject to the following conditions:
  11:dsp/fx/diffuser.h **** //
  12:dsp/fx/diffuser.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/fx/diffuser.h **** // all copies or substantial portions of the Software.
  14:dsp/fx/diffuser.h **** //
  15:dsp/fx/diffuser.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/fx/diffuser.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/fx/diffuser.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/fx/diffuser.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/fx/diffuser.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/fx/diffuser.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/fx/diffuser.h **** // THE SOFTWARE.
  22:dsp/fx/diffuser.h **** //
  23:dsp/fx/diffuser.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/fx/diffuser.h **** //
  25:dsp/fx/diffuser.h **** // -----------------------------------------------------------------------------
  26:dsp/fx/diffuser.h **** //
  27:dsp/fx/diffuser.h **** // AP diffusion network.
  28:dsp/fx/diffuser.h **** 
  29:dsp/fx/diffuser.h **** #ifndef CLOUDS_DSP_FX_DIFFUSER_H_
  30:dsp/fx/diffuser.h **** #define CLOUDS_DSP_FX_DIFFUSER_H_
  31:dsp/fx/diffuser.h **** 
  32:dsp/fx/diffuser.h **** #include "fx_engine.h"
  33:dsp/fx/diffuser.h **** 
  34:dsp/fx/diffuser.h **** using namespace daisysp;
ARM GAS  /tmp/ccUsbZWH.s 			page 23


  35:dsp/fx/diffuser.h **** 
  36:dsp/fx/diffuser.h **** class Diffuser
  37:dsp/fx/diffuser.h **** {
  38:dsp/fx/diffuser.h ****   public:
  39:dsp/fx/diffuser.h ****     Diffuser() {}
  40:dsp/fx/diffuser.h ****     ~Diffuser() {}
 159              		.loc 17 40 5 is_stmt 1 view .LVU33
 160              	.LBB677:
 161              	.LBI677:
 162              		.loc 15 111 5 view .LVU34
 163              		.loc 15 111 5 is_stmt 0 view .LVU35
 164              	.LBE677:
 165              	.LBE676:
 166              	.LBB678:
 167              	.LBI678:
 168              		.file 18 "dsp/pvoc/phase_vocoder.h"
   1:dsp/pvoc/phase_vocoder.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/pvoc/phase_vocoder.h **** //
   3:dsp/pvoc/phase_vocoder.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/pvoc/phase_vocoder.h **** //
   5:dsp/pvoc/phase_vocoder.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/pvoc/phase_vocoder.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/pvoc/phase_vocoder.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/pvoc/phase_vocoder.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/pvoc/phase_vocoder.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/pvoc/phase_vocoder.h **** // furnished to do so, subject to the following conditions:
  11:dsp/pvoc/phase_vocoder.h **** //
  12:dsp/pvoc/phase_vocoder.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/pvoc/phase_vocoder.h **** // all copies or substantial portions of the Software.
  14:dsp/pvoc/phase_vocoder.h **** //
  15:dsp/pvoc/phase_vocoder.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/pvoc/phase_vocoder.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/pvoc/phase_vocoder.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/pvoc/phase_vocoder.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/pvoc/phase_vocoder.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/pvoc/phase_vocoder.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/pvoc/phase_vocoder.h **** // THE SOFTWARE.
  22:dsp/pvoc/phase_vocoder.h **** //
  23:dsp/pvoc/phase_vocoder.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/pvoc/phase_vocoder.h **** //
  25:dsp/pvoc/phase_vocoder.h **** // -----------------------------------------------------------------------------
  26:dsp/pvoc/phase_vocoder.h **** //
  27:dsp/pvoc/phase_vocoder.h **** // Naive phase vocoder.
  28:dsp/pvoc/phase_vocoder.h **** 
  29:dsp/pvoc/phase_vocoder.h **** #ifndef CLOUDS_DSP_PVOC_PHASE_VOCODER_H_
  30:dsp/pvoc/phase_vocoder.h **** #define CLOUDS_DSP_PVOC_PHASE_VOCODER_H_
  31:dsp/pvoc/phase_vocoder.h **** 
  32:dsp/pvoc/phase_vocoder.h **** #include "frame.h"
  33:dsp/pvoc/phase_vocoder.h **** #include "stft.h"
  34:dsp/pvoc/phase_vocoder.h **** #include "frame_transformation.h"
  35:dsp/pvoc/phase_vocoder.h **** 
  36:dsp/pvoc/phase_vocoder.h **** using namespace daisysp;
  37:dsp/pvoc/phase_vocoder.h **** 
  38:dsp/pvoc/phase_vocoder.h **** struct Parameters;
  39:dsp/pvoc/phase_vocoder.h **** 
  40:dsp/pvoc/phase_vocoder.h **** class PhaseVocoder
  41:dsp/pvoc/phase_vocoder.h **** {
ARM GAS  /tmp/ccUsbZWH.s 			page 24


  42:dsp/pvoc/phase_vocoder.h ****   public:
  43:dsp/pvoc/phase_vocoder.h ****     PhaseVocoder() {}
  44:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 169              		.loc 18 44 5 is_stmt 1 view .LVU36
 170              	.LBB679:
 171              	.LBI679:
 172              		.file 19 "./shy_fft.h"
   1:./shy_fft.h   **** // Copyright 2014 Emilie Gillet.
   2:./shy_fft.h   **** //
   3:./shy_fft.h   **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:./shy_fft.h   **** //
   5:./shy_fft.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:./shy_fft.h   **** // of this software and associated documentation files (the "Software"), to deal
   7:./shy_fft.h   **** // in the Software without restriction, including without limitation the rights
   8:./shy_fft.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:./shy_fft.h   **** // copies of the Software, and to permit persons to whom the Software is
  10:./shy_fft.h   **** // furnished to do so, subject to the following conditions:
  11:./shy_fft.h   **** //
  12:./shy_fft.h   **** // The above copyright notice and this permission notice shall be included in
  13:./shy_fft.h   **** // all copies or substantial portions of the Software.
  14:./shy_fft.h   **** //
  15:./shy_fft.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:./shy_fft.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:./shy_fft.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:./shy_fft.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:./shy_fft.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:./shy_fft.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:./shy_fft.h   **** // THE SOFTWARE.
  22:./shy_fft.h   **** //
  23:./shy_fft.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:./shy_fft.h   **** //
  25:./shy_fft.h   **** // -----------------------------------------------------------------------------
  26:./shy_fft.h   **** //
  27:./shy_fft.h   **** // A modest implementation of real FFT for embedded audio applications,
  28:./shy_fft.h   **** // largely based on Laurent de Soras' FFTReal.
  29:./shy_fft.h   **** //
  30:./shy_fft.h   **** // Improvements:
  31:./shy_fft.h   **** // * No dynamic allocations.
  32:./shy_fft.h   **** // * No additional buffering (can use the input buffer as a workspace).
  33:./shy_fft.h   **** // * No big bitrev lookup table.
  34:./shy_fft.h   **** // * Keep the fixed size template signature, but also provide method for
  35:./shy_fft.h   **** //   variable size (up to the fixed size).
  36:./shy_fft.h   **** 
  37:./shy_fft.h   **** #ifndef STMLIB_FFT_SHY_FFT_H_
  38:./shy_fft.h   **** #define STMLIB_FFT_SHY_FFT_H_
  39:./shy_fft.h   **** 
  40:./shy_fft.h   **** #include <algorithm>
  41:./shy_fft.h   **** #include <cmath>
  42:./shy_fft.h   **** 
  43:./shy_fft.h   **** // Compile-time log 2
  44:./shy_fft.h   **** template <size_t x>
  45:./shy_fft.h   **** struct Log2
  46:./shy_fft.h   **** {
  47:./shy_fft.h   ****     enum
  48:./shy_fft.h   ****     {
  49:./shy_fft.h   ****         value = Log2<x / 2>::value + 1
  50:./shy_fft.h   ****     };
ARM GAS  /tmp/ccUsbZWH.s 			page 25


  51:./shy_fft.h   ****     typedef char CheckPowerOf2[((x & (x - 1)) == 0 ? 1 : -1)];
  52:./shy_fft.h   **** };
  53:./shy_fft.h   **** 
  54:./shy_fft.h   **** template <>
  55:./shy_fft.h   **** struct Log2<1>
  56:./shy_fft.h   **** {
  57:./shy_fft.h   ****     enum
  58:./shy_fft.h   ****     {
  59:./shy_fft.h   ****         value = 0
  60:./shy_fft.h   ****     };
  61:./shy_fft.h   **** };
  62:./shy_fft.h   **** 
  63:./shy_fft.h   **** 
  64:./shy_fft.h   **** // Bit reversal LUT size.
  65:./shy_fft.h   **** template <size_t>
  66:./shy_fft.h   **** struct BitReversalLut
  67:./shy_fft.h   **** {
  68:./shy_fft.h   ****     enum
  69:./shy_fft.h   ****     {
  70:./shy_fft.h   ****         size = 1
  71:./shy_fft.h   ****     };
  72:./shy_fft.h   **** };
  73:./shy_fft.h   **** template <>
  74:./shy_fft.h   **** struct BitReversalLut<3>
  75:./shy_fft.h   **** {
  76:./shy_fft.h   ****     enum
  77:./shy_fft.h   ****     {
  78:./shy_fft.h   ****         size = 2
  79:./shy_fft.h   ****     };
  80:./shy_fft.h   **** };
  81:./shy_fft.h   **** template <>
  82:./shy_fft.h   **** struct BitReversalLut<4>
  83:./shy_fft.h   **** {
  84:./shy_fft.h   ****     enum
  85:./shy_fft.h   ****     {
  86:./shy_fft.h   ****         size = 4
  87:./shy_fft.h   ****     };
  88:./shy_fft.h   **** };
  89:./shy_fft.h   **** template <>
  90:./shy_fft.h   **** struct BitReversalLut<5>
  91:./shy_fft.h   **** {
  92:./shy_fft.h   ****     enum
  93:./shy_fft.h   ****     {
  94:./shy_fft.h   ****         size = 8
  95:./shy_fft.h   ****     };
  96:./shy_fft.h   **** };
  97:./shy_fft.h   **** template <>
  98:./shy_fft.h   **** struct BitReversalLut<6>
  99:./shy_fft.h   **** {
 100:./shy_fft.h   ****     enum
 101:./shy_fft.h   ****     {
 102:./shy_fft.h   ****         size = 16
 103:./shy_fft.h   ****     };
 104:./shy_fft.h   **** };
 105:./shy_fft.h   **** template <>
 106:./shy_fft.h   **** struct BitReversalLut<7>
 107:./shy_fft.h   **** {
ARM GAS  /tmp/ccUsbZWH.s 			page 26


 108:./shy_fft.h   ****     enum
 109:./shy_fft.h   ****     {
 110:./shy_fft.h   ****         size = 32
 111:./shy_fft.h   ****     };
 112:./shy_fft.h   **** };
 113:./shy_fft.h   **** template <>
 114:./shy_fft.h   **** struct BitReversalLut<8>
 115:./shy_fft.h   **** {
 116:./shy_fft.h   ****     enum
 117:./shy_fft.h   ****     {
 118:./shy_fft.h   ****         size = 64
 119:./shy_fft.h   ****     };
 120:./shy_fft.h   **** };
 121:./shy_fft.h   **** 
 122:./shy_fft.h   **** 
 123:./shy_fft.h   **** // Typed math functions and constants.
 124:./shy_fft.h   **** template <typename T>
 125:./shy_fft.h   **** struct Math
 126:./shy_fft.h   **** {
 127:./shy_fft.h   ****     inline T pi() const;
 128:./shy_fft.h   ****     inline T sqrt_2_div_2() const;
 129:./shy_fft.h   ****     inline T cos(T x);
 130:./shy_fft.h   ****     inline T sin(T x);
 131:./shy_fft.h   **** };
 132:./shy_fft.h   **** 
 133:./shy_fft.h   **** template <>
 134:./shy_fft.h   **** struct Math<float>
 135:./shy_fft.h   **** {
 136:./shy_fft.h   ****     inline float pi() const { return 3.141592653589793f; }
 137:./shy_fft.h   ****     inline float sqrt_2_div_2() const { return 0.7071067811865476f; }
 138:./shy_fft.h   ****     inline float cos(float x) { return cosf(x); }
 139:./shy_fft.h   ****     inline float sin(float x) { return sinf(x); }
 140:./shy_fft.h   **** };
 141:./shy_fft.h   **** 
 142:./shy_fft.h   **** template <>
 143:./shy_fft.h   **** struct Math<double>
 144:./shy_fft.h   **** {
 145:./shy_fft.h   ****     inline double pi() const { return 3.141592653589793; }
 146:./shy_fft.h   ****     inline float  sqrt_2_div_2() const { return 0.7071067811865476; }
 147:./shy_fft.h   ****     inline double cos(double x) { return cos(x); }
 148:./shy_fft.h   ****     inline double sin(double x) { return sin(x); }
 149:./shy_fft.h   **** };
 150:./shy_fft.h   **** 
 151:./shy_fft.h   **** 
 152:./shy_fft.h   **** // Look-up table for trigonometric data.
 153:./shy_fft.h   **** template <typename T, size_t num_passes>
 154:./shy_fft.h   **** class LutPhasor
 155:./shy_fft.h   **** {
 156:./shy_fft.h   ****   public:
 157:./shy_fft.h   ****     LutPhasor() {}
 158:./shy_fft.h   ****     ~LutPhasor() {}
 159:./shy_fft.h   **** 
 160:./shy_fft.h   ****     void Init()
 161:./shy_fft.h   ****     {
 162:./shy_fft.h   ****         Math<T> math;
 163:./shy_fft.h   **** 
 164:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
ARM GAS  /tmp/ccUsbZWH.s 			page 27


 165:./shy_fft.h   ****         {
 166:./shy_fft.h   ****             size_t pass_size = 1L << (pass - 1);
 167:./shy_fft.h   ****             T*     pass_ptr  = &trig_lut_[(1L << (pass - 1)) - 4];
 168:./shy_fft.h   ****             T      increment = math.pi() / (pass_size << 1);
 169:./shy_fft.h   ****             T      phase     = 0.0;
 170:./shy_fft.h   ****             for(size_t i = 0; i < pass_size; ++i)
 171:./shy_fft.h   ****             {
 172:./shy_fft.h   ****                 pass_ptr[i] = math.cos(phase);
 173:./shy_fft.h   ****                 phase += increment;
 174:./shy_fft.h   ****             }
 175:./shy_fft.h   ****         }
 176:./shy_fft.h   ****     }
 177:./shy_fft.h   **** 
 178:./shy_fft.h   ****     inline void Start(size_t pass)
 179:./shy_fft.h   ****     {
 180:./shy_fft.h   ****         size_t pass_size = 1 << (pass - 1);
 181:./shy_fft.h   ****         cos_ptr_         = &trig_lut_[pass_size - 4 + 1];
 182:./shy_fft.h   ****         sin_ptr_         = &trig_lut_[pass_size + pass_size - 4 - 1];
 183:./shy_fft.h   ****     }
 184:./shy_fft.h   **** 
 185:./shy_fft.h   ****     inline void Rotate()
 186:./shy_fft.h   ****     {
 187:./shy_fft.h   ****         ++cos_ptr_;
 188:./shy_fft.h   ****         --sin_ptr_;
 189:./shy_fft.h   ****     }
 190:./shy_fft.h   **** 
 191:./shy_fft.h   ****     inline T cos() const { return *cos_ptr_; }
 192:./shy_fft.h   ****     inline T sin() const { return *sin_ptr_; }
 193:./shy_fft.h   **** 
 194:./shy_fft.h   ****   private:
 195:./shy_fft.h   ****     T  trig_lut_[(1 << (num_passes - 1)) - 4];
 196:./shy_fft.h   ****     T* cos_ptr_;
 197:./shy_fft.h   ****     T* sin_ptr_;
 198:./shy_fft.h   **** };
 199:./shy_fft.h   **** 
 200:./shy_fft.h   **** template <typename T>
 201:./shy_fft.h   **** struct LutPhasor<T, 0>
 202:./shy_fft.h   **** {
 203:./shy_fft.h   ****     void Init(){};
 204:./shy_fft.h   **** };
 205:./shy_fft.h   **** template <typename T>
 206:./shy_fft.h   **** struct LutPhasor<T, 1>
 207:./shy_fft.h   **** {
 208:./shy_fft.h   ****     void Init(){};
 209:./shy_fft.h   **** };
 210:./shy_fft.h   **** template <typename T>
 211:./shy_fft.h   **** struct LutPhasor<T, 2>
 212:./shy_fft.h   **** {
 213:./shy_fft.h   ****     void Init(){};
 214:./shy_fft.h   **** };
 215:./shy_fft.h   **** 
 216:./shy_fft.h   **** template <typename T>
 217:./shy_fft.h   **** struct LutPhasor<T, 3>
 218:./shy_fft.h   **** {
 219:./shy_fft.h   ****     void     Init(){};
 220:./shy_fft.h   ****     void     Start(size_t){};
 221:./shy_fft.h   ****     void     Rotate(){};
ARM GAS  /tmp/ccUsbZWH.s 			page 28


 222:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 223:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 224:./shy_fft.h   **** };
 225:./shy_fft.h   **** 
 226:./shy_fft.h   **** 
 227:./shy_fft.h   **** // Another way of generating roots of unity.
 228:./shy_fft.h   **** template <typename T, size_t num_passes>
 229:./shy_fft.h   **** class RotationPhasor
 230:./shy_fft.h   **** {
 231:./shy_fft.h   ****   public:
 232:./shy_fft.h   ****     RotationPhasor() {}
 233:./shy_fft.h   ****     ~RotationPhasor() {}
 234:./shy_fft.h   **** 
 235:./shy_fft.h   ****     void Init()
 236:./shy_fft.h   ****     {
 237:./shy_fft.h   ****         Math<T> math;
 238:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 239:./shy_fft.h   ****         {
 240:./shy_fft.h   ****             size_t index            = (pass - 3) << 1;
 241:./shy_fft.h   ****             T      angle            = math.pi() / (1 << pass);
 242:./shy_fft.h   ****             sin_cos_lut_[index]     = math.cos(angle);
 243:./shy_fft.h   ****             sin_cos_lut_[index + 1] = math.sin(angle);
 244:./shy_fft.h   ****         }
 245:./shy_fft.h   ****     }
 246:./shy_fft.h   **** 
 247:./shy_fft.h   ****     inline void Start(size_t pass)
 248:./shy_fft.h   ****     {
 249:./shy_fft.h   ****         size_t index = (pass - 3) << 1;
 250:./shy_fft.h   ****         cos_ = real_ = sin_cos_lut_[index];
 251:./shy_fft.h   ****         sin_ = imag_ = sin_cos_lut_[index + 1];
 252:./shy_fft.h   ****     }
 253:./shy_fft.h   **** 
 254:./shy_fft.h   ****     inline void Rotate()
 255:./shy_fft.h   ****     {
 256:./shy_fft.h   ****         T temp = cos_ * real_ - sin_ * imag_;
 257:./shy_fft.h   ****         sin_   = cos_ * imag_ + sin_ * real_;
 258:./shy_fft.h   ****         cos_   = temp;
 259:./shy_fft.h   ****     }
 260:./shy_fft.h   **** 
 261:./shy_fft.h   ****     inline T cos() const { return cos_; }
 262:./shy_fft.h   ****     inline T sin() const { return sin_; }
 263:./shy_fft.h   **** 
 264:./shy_fft.h   ****   private:
 265:./shy_fft.h   ****     T sin_cos_lut_[(num_passes - 3) << 1];
 266:./shy_fft.h   ****     T cos_;
 267:./shy_fft.h   ****     T sin_;
 268:./shy_fft.h   ****     T real_;
 269:./shy_fft.h   ****     T imag_;
 270:./shy_fft.h   **** };
 271:./shy_fft.h   **** 
 272:./shy_fft.h   **** template <typename T>
 273:./shy_fft.h   **** struct RotationPhasor<T, 0>
 274:./shy_fft.h   **** {
 275:./shy_fft.h   ****     void Init(){};
 276:./shy_fft.h   **** };
 277:./shy_fft.h   **** template <typename T>
 278:./shy_fft.h   **** struct RotationPhasor<T, 1>
ARM GAS  /tmp/ccUsbZWH.s 			page 29


 279:./shy_fft.h   **** {
 280:./shy_fft.h   ****     void Init(){};
 281:./shy_fft.h   **** };
 282:./shy_fft.h   **** template <typename T>
 283:./shy_fft.h   **** struct RotationPhasor<T, 2>
 284:./shy_fft.h   **** {
 285:./shy_fft.h   ****     void Init(){};
 286:./shy_fft.h   **** };
 287:./shy_fft.h   **** 
 288:./shy_fft.h   **** template <typename T>
 289:./shy_fft.h   **** struct RotationPhasor<T, 3>
 290:./shy_fft.h   **** {
 291:./shy_fft.h   ****     void     Init(){};
 292:./shy_fft.h   ****     void     Start(size_t){};
 293:./shy_fft.h   ****     void     Rotate(){};
 294:./shy_fft.h   ****     inline T cos() const { return 1.0; }
 295:./shy_fft.h   ****     inline T sin() const { return 0.0; }
 296:./shy_fft.h   **** };
 297:./shy_fft.h   **** 
 298:./shy_fft.h   **** // Direct transform
 299:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 300:./shy_fft.h   **** struct DirectTransform
 301:./shy_fft.h   **** {
 302:./shy_fft.h   ****   private:
 303:./shy_fft.h   ****     enum
 304:./shy_fft.h   ****     {
 305:./shy_fft.h   ****         size = 1 << num_passes
 306:./shy_fft.h   ****     };
 307:./shy_fft.h   **** 
 308:./shy_fft.h   ****   public:
 309:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 310:./shy_fft.h   ****     {
 311:./shy_fft.h   ****         T*      s;
 312:./shy_fft.h   ****         T*      d;
 313:./shy_fft.h   ****         Math<T> math;
 314:./shy_fft.h   **** 
 315:./shy_fft.h   ****         // First and second pass.
 316:./shy_fft.h   ****         d = output;
 317:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 318:./shy_fft.h   ****         {
 319:./shy_fft.h   ****             const T* s  = input;
 320:./shy_fft.h   ****             size_t   r0 = num_passes <= 8
 321:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 322:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 323:./shy_fft.h   ****                                   >> (16 - num_passes);
 324:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 325:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 326:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 327:./shy_fft.h   **** 
 328:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 329:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 330:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 331:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 332:./shy_fft.h   ****             d[0] = a + b;
 333:./shy_fft.h   ****             d[2] = a - b;
 334:./shy_fft.h   ****             d += 4;
 335:./shy_fft.h   ****         }
ARM GAS  /tmp/ccUsbZWH.s 			page 30


 336:./shy_fft.h   **** 
 337:./shy_fft.h   ****         // Third pass.
 338:./shy_fft.h   ****         s = output;
 339:./shy_fft.h   ****         d = input;
 340:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 341:./shy_fft.h   ****         {
 342:./shy_fft.h   ****             T v;
 343:./shy_fft.h   **** 
 344:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 345:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 346:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 347:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 348:./shy_fft.h   **** 
 349:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 350:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 351:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 352:./shy_fft.h   **** 
 353:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 354:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 355:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 356:./shy_fft.h   ****         }
 357:./shy_fft.h   **** 
 358:./shy_fft.h   ****         // Remaining passes.
 359:./shy_fft.h   ****         for(size_t pass = 3; pass < num_passes; ++pass)
 360:./shy_fft.h   ****         {
 361:./shy_fft.h   ****             // Flip source and destination pointers
 362:./shy_fft.h   ****             {
 363:./shy_fft.h   ****                 T* tmp = s;
 364:./shy_fft.h   ****                 s      = d;
 365:./shy_fft.h   ****                 d      = tmp;
 366:./shy_fft.h   ****             }
 367:./shy_fft.h   **** 
 368:./shy_fft.h   ****             size_t n   = 1 << pass;
 369:./shy_fft.h   ****             size_t n_2 = n >> 1;
 370:./shy_fft.h   **** 
 371:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 372:./shy_fft.h   ****             {
 373:./shy_fft.h   ****                 T* s1r = s + i;
 374:./shy_fft.h   ****                 T* s2r = s1r + n;
 375:./shy_fft.h   ****                 T* dr  = d + i;
 376:./shy_fft.h   ****                 T* di  = dr + n;
 377:./shy_fft.h   **** 
 378:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 379:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 380:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 381:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 382:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 383:./shy_fft.h   ****                 T* s2i  = s1i + n;
 384:./shy_fft.h   ****                 phasor->Start(pass);
 385:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 386:./shy_fft.h   ****                 {
 387:./shy_fft.h   ****                     T c = phasor->cos();
 388:./shy_fft.h   ****                     T s = phasor->sin();
 389:./shy_fft.h   ****                     T v;
 390:./shy_fft.h   **** 
 391:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 392:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
ARM GAS  /tmp/ccUsbZWH.s 			page 31


 393:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 394:./shy_fft.h   **** 
 395:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 396:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 397:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 398:./shy_fft.h   ****                     phasor->Rotate();
 399:./shy_fft.h   ****                 }
 400:./shy_fft.h   ****             }
 401:./shy_fft.h   ****         }
 402:./shy_fft.h   **** 
 403:./shy_fft.h   ****         // Annoying additional data copy step.
 404:./shy_fft.h   ****         if(d != output)
 405:./shy_fft.h   ****         {
 406:./shy_fft.h   ****             std::copy(&d[0], &d[size], &output[0]);
 407:./shy_fft.h   ****         }
 408:./shy_fft.h   ****     }
 409:./shy_fft.h   **** 
 410:./shy_fft.h   ****     // The exact same thing but with "num_passes" as a run-time argument.
 411:./shy_fft.h   ****     void operator()(T*             input,
 412:./shy_fft.h   ****                     T*             output,
 413:./shy_fft.h   ****                     const uint8_t* bit_rev,
 414:./shy_fft.h   ****                     Phasor*        phasor,
 415:./shy_fft.h   ****                     size_t         rt_num_passes)
 416:./shy_fft.h   ****     {
 417:./shy_fft.h   ****         T*      s;
 418:./shy_fft.h   ****         T*      d;
 419:./shy_fft.h   ****         Math<T> math;
 420:./shy_fft.h   ****         size_t  rt_size = 1 << rt_num_passes;
 421:./shy_fft.h   ****         // First and second pass.
 422:./shy_fft.h   ****         d = output;
 423:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 424:./shy_fft.h   ****         {
 425:./shy_fft.h   ****             const T* s  = input;
 426:./shy_fft.h   ****             size_t   r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 427:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 428:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 429:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 430:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 431:./shy_fft.h   **** 
 432:./shy_fft.h   ****             d[1] = s[r0] - s[r1];
 433:./shy_fft.h   ****             d[3] = s[r2] - s[r3];
 434:./shy_fft.h   ****             T a  = s[r0] + s[r1];
 435:./shy_fft.h   ****             T b  = s[r2] + s[r3];
 436:./shy_fft.h   ****             d[0] = a + b;
 437:./shy_fft.h   ****             d[2] = a - b;
 438:./shy_fft.h   ****             d += 4;
 439:./shy_fft.h   ****         }
 440:./shy_fft.h   **** 
 441:./shy_fft.h   ****         // Third pass.
 442:./shy_fft.h   ****         s = output;
 443:./shy_fft.h   ****         d = input;
 444:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 445:./shy_fft.h   ****         {
 446:./shy_fft.h   ****             T v;
 447:./shy_fft.h   **** 
 448:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 449:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
ARM GAS  /tmp/ccUsbZWH.s 			page 32


 450:./shy_fft.h   ****             d[i + 2] = s[i + 2];
 451:./shy_fft.h   ****             d[i + 6] = s[i + 6];
 452:./shy_fft.h   **** 
 453:./shy_fft.h   ****             v        = (s[i + 5] - s[i + 7]) * math.sqrt_2_div_2();
 454:./shy_fft.h   ****             d[i + 1] = s[i + 1] + v;
 455:./shy_fft.h   ****             d[i + 3] = s[i + 1] - v;
 456:./shy_fft.h   **** 
 457:./shy_fft.h   ****             v        = (s[i + 5] + s[i + 7]) * math.sqrt_2_div_2();
 458:./shy_fft.h   ****             d[i + 5] = v + s[i + 3];
 459:./shy_fft.h   ****             d[i + 7] = v - s[i + 3];
 460:./shy_fft.h   ****         }
 461:./shy_fft.h   **** 
 462:./shy_fft.h   ****         // Remaining passes.
 463:./shy_fft.h   ****         for(size_t pass = 3; pass < rt_num_passes; ++pass)
 464:./shy_fft.h   ****         {
 465:./shy_fft.h   ****             // Flip source and destination pointers
 466:./shy_fft.h   ****             {
 467:./shy_fft.h   ****                 T* tmp = s;
 468:./shy_fft.h   ****                 s      = d;
 469:./shy_fft.h   ****                 d      = tmp;
 470:./shy_fft.h   ****             }
 471:./shy_fft.h   **** 
 472:./shy_fft.h   ****             size_t n   = 1 << pass;
 473:./shy_fft.h   ****             size_t n_2 = n >> 1;
 474:./shy_fft.h   **** 
 475:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 476:./shy_fft.h   ****             {
 477:./shy_fft.h   ****                 T* s1r = s + i;
 478:./shy_fft.h   ****                 T* s2r = s1r + n;
 479:./shy_fft.h   ****                 T* dr  = d + i;
 480:./shy_fft.h   ****                 T* di  = dr + n;
 481:./shy_fft.h   **** 
 482:./shy_fft.h   ****                 dr[0]   = s1r[0] + s2r[0];
 483:./shy_fft.h   ****                 di[0]   = s1r[0] - s2r[0];
 484:./shy_fft.h   ****                 dr[n_2] = s1r[n_2];
 485:./shy_fft.h   ****                 di[n_2] = s2r[n_2];
 486:./shy_fft.h   ****                 T* s1i  = s1r + n_2;
 487:./shy_fft.h   ****                 T* s2i  = s1i + n;
 488:./shy_fft.h   ****                 phasor->Start(pass);
 489:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 490:./shy_fft.h   ****                 {
 491:./shy_fft.h   ****                     T c = phasor->cos();
 492:./shy_fft.h   ****                     T s = phasor->sin();
 493:./shy_fft.h   ****                     T v;
 494:./shy_fft.h   **** 
 495:./shy_fft.h   ****                     v      = s2r[j] * c - s2i[j] * s;
 496:./shy_fft.h   ****                     dr[j]  = s1r[j] + v;
 497:./shy_fft.h   ****                     di[-j] = s1r[j] - v;
 498:./shy_fft.h   **** 
 499:./shy_fft.h   ****                     v         = s2r[j] * s + s2i[j] * c;
 500:./shy_fft.h   ****                     di[j]     = v + s1i[j];
 501:./shy_fft.h   ****                     di[n - j] = v - s1i[j];
 502:./shy_fft.h   ****                     phasor->Rotate();
 503:./shy_fft.h   ****                 }
 504:./shy_fft.h   ****             }
 505:./shy_fft.h   ****         }
 506:./shy_fft.h   **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 33


 507:./shy_fft.h   ****         // Annoying additional data copy step.
 508:./shy_fft.h   ****         if(d != output)
 509:./shy_fft.h   ****         {
 510:./shy_fft.h   ****             std::copy(&d[0], &d[rt_size], &output[0]);
 511:./shy_fft.h   ****         }
 512:./shy_fft.h   ****     }
 513:./shy_fft.h   **** };
 514:./shy_fft.h   **** 
 515:./shy_fft.h   **** template <typename T, typename Phasor>
 516:./shy_fft.h   **** struct DirectTransform<T, 0, Phasor>
 517:./shy_fft.h   **** {
 518:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 519:./shy_fft.h   ****     {
 520:./shy_fft.h   ****         o[0] = i[0];
 521:./shy_fft.h   ****     }
 522:./shy_fft.h   **** };
 523:./shy_fft.h   **** 
 524:./shy_fft.h   **** template <typename T, typename Phasor>
 525:./shy_fft.h   **** struct DirectTransform<T, 1, Phasor>
 526:./shy_fft.h   **** {
 527:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 528:./shy_fft.h   ****     {
 529:./shy_fft.h   ****         o[0] = i[0] + i[1];
 530:./shy_fft.h   ****         o[1] = i[0] - i[1];
 531:./shy_fft.h   ****     }
 532:./shy_fft.h   **** };
 533:./shy_fft.h   **** 
 534:./shy_fft.h   **** template <typename T, typename Phasor>
 535:./shy_fft.h   **** struct DirectTransform<T, 2, Phasor>
 536:./shy_fft.h   **** {
 537:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 538:./shy_fft.h   ****     {
 539:./shy_fft.h   ****         o[1] = i[0] - i[2];
 540:./shy_fft.h   ****         o[3] = i[1] - i[3];
 541:./shy_fft.h   ****         T a  = i[0] + i[2];
 542:./shy_fft.h   ****         T b  = i[1] + i[3];
 543:./shy_fft.h   ****         o[0] = a + b;
 544:./shy_fft.h   ****         o[2] = a - b;
 545:./shy_fft.h   ****     }
 546:./shy_fft.h   **** };
 547:./shy_fft.h   **** 
 548:./shy_fft.h   **** 
 549:./shy_fft.h   **** // Inverse transform
 550:./shy_fft.h   **** template <typename T, size_t num_passes, typename Phasor>
 551:./shy_fft.h   **** struct InverseTransform
 552:./shy_fft.h   **** {
 553:./shy_fft.h   ****   private:
 554:./shy_fft.h   ****     enum
 555:./shy_fft.h   ****     {
 556:./shy_fft.h   ****         size = 1 << num_passes
 557:./shy_fft.h   ****     };
 558:./shy_fft.h   **** 
 559:./shy_fft.h   ****   public:
 560:./shy_fft.h   ****     void operator()(T* input, T* output, const uint8_t* bit_rev, Phasor* phasor)
 561:./shy_fft.h   ****     {
 562:./shy_fft.h   ****         T*      s = (T*)(input);
 563:./shy_fft.h   ****         T*      d = output;
ARM GAS  /tmp/ccUsbZWH.s 			page 34


 564:./shy_fft.h   ****         Math<T> math;
 565:./shy_fft.h   **** 
 566:./shy_fft.h   ****         // Remaining passes.
 567:./shy_fft.h   ****         for(size_t pass = num_passes - 1; pass >= 3; --pass)
 568:./shy_fft.h   ****         {
 569:./shy_fft.h   ****             size_t n   = 1 << pass;
 570:./shy_fft.h   ****             size_t n_2 = n >> 1;
 571:./shy_fft.h   **** 
 572:./shy_fft.h   ****             for(size_t i = 0; i < size; i += (n << 1))
 573:./shy_fft.h   ****             {
 574:./shy_fft.h   ****                 T* sr  = s + i;
 575:./shy_fft.h   ****                 T* si  = sr + n;
 576:./shy_fft.h   ****                 T* d1r = d + i;
 577:./shy_fft.h   ****                 T* d2r = d1r + n;
 578:./shy_fft.h   **** 
 579:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 580:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 581:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 582:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 583:./shy_fft.h   **** 
 584:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 585:./shy_fft.h   ****                 T* d2i = d1i + n;
 586:./shy_fft.h   ****                 phasor->Start(pass);
 587:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 588:./shy_fft.h   ****                 {
 589:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 590:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 591:./shy_fft.h   **** 
 592:./shy_fft.h   ****                     T c  = phasor->cos();
 593:./shy_fft.h   ****                     T s  = phasor->sin();
 594:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 595:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 596:./shy_fft.h   **** 
 597:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 598:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 599:./shy_fft.h   ****                     phasor->Rotate();
 600:./shy_fft.h   ****                 }
 601:./shy_fft.h   ****             }
 602:./shy_fft.h   **** 
 603:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 604:./shy_fft.h   ****             if(d == output)
 605:./shy_fft.h   ****             {
 606:./shy_fft.h   ****                 s = output;
 607:./shy_fft.h   ****                 d = input;
 608:./shy_fft.h   ****             }
 609:./shy_fft.h   ****             else
 610:./shy_fft.h   ****             {
 611:./shy_fft.h   ****                 s = input;
 612:./shy_fft.h   ****                 d = output;
 613:./shy_fft.h   ****             }
 614:./shy_fft.h   ****         }
 615:./shy_fft.h   **** 
 616:./shy_fft.h   ****         // Copy data if necessary.
 617:./shy_fft.h   ****         if(d == output)
 618:./shy_fft.h   ****         {
 619:./shy_fft.h   ****             std::copy(&s[0], &s[size], &output[0]);
 620:./shy_fft.h   ****         }
ARM GAS  /tmp/ccUsbZWH.s 			page 35


 621:./shy_fft.h   **** 
 622:./shy_fft.h   ****         s = output;
 623:./shy_fft.h   ****         d = input;
 624:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 8)
 625:./shy_fft.h   ****         {
 626:./shy_fft.h   ****             T vr, vi;
 627:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 628:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 629:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 630:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 631:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 632:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 633:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 634:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 635:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 636:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 637:./shy_fft.h   ****         }
 638:./shy_fft.h   **** 
 639:./shy_fft.h   ****         // First and second pass.
 640:./shy_fft.h   ****         s = input;
 641:./shy_fft.h   ****         d = output;
 642:./shy_fft.h   ****         for(size_t i = 0; i < size; i += 4)
 643:./shy_fft.h   ****         {
 644:./shy_fft.h   ****             size_t r0 = num_passes <= 8
 645:./shy_fft.h   ****                             ? bit_rev[i >> 2]
 646:./shy_fft.h   ****                             : ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 647:./shy_fft.h   ****                                   >> (16 - num_passes);
 648:./shy_fft.h   ****             size_t r1 = r0 + 2 * (size >> 2);
 649:./shy_fft.h   ****             size_t r2 = r0 + 1 * (size >> 2);
 650:./shy_fft.h   ****             size_t r3 = r0 + 3 * (size >> 2);
 651:./shy_fft.h   **** 
 652:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 653:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 654:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 655:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 656:./shy_fft.h   **** 
 657:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 658:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 659:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 660:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 661:./shy_fft.h   ****             s += 4;
 662:./shy_fft.h   ****         }
 663:./shy_fft.h   ****     }
 664:./shy_fft.h   **** 
 665:./shy_fft.h   ****     void operator()(T*             input,
 666:./shy_fft.h   ****                     T*             output,
 667:./shy_fft.h   ****                     const uint8_t* bit_rev,
 668:./shy_fft.h   ****                     Phasor*        phasor,
 669:./shy_fft.h   ****                     size_t         rt_num_passes)
 670:./shy_fft.h   ****     {
 671:./shy_fft.h   ****         T*      s = (T*)(input);
 672:./shy_fft.h   ****         T*      d = output;
 673:./shy_fft.h   ****         Math<T> math;
 674:./shy_fft.h   **** 
 675:./shy_fft.h   ****         size_t rt_size = 1 << rt_num_passes;
 676:./shy_fft.h   **** 
 677:./shy_fft.h   ****         // Remaining passes.
ARM GAS  /tmp/ccUsbZWH.s 			page 36


 678:./shy_fft.h   ****         for(size_t pass = rt_num_passes - 1; pass >= 3; --pass)
 679:./shy_fft.h   ****         {
 680:./shy_fft.h   ****             size_t n   = 1 << pass;
 681:./shy_fft.h   ****             size_t n_2 = n >> 1;
 682:./shy_fft.h   **** 
 683:./shy_fft.h   ****             for(size_t i = 0; i < rt_size; i += (n << 1))
 684:./shy_fft.h   ****             {
 685:./shy_fft.h   ****                 T* sr  = s + i;
 686:./shy_fft.h   ****                 T* si  = sr + n;
 687:./shy_fft.h   ****                 T* d1r = d + i;
 688:./shy_fft.h   ****                 T* d2r = d1r + n;
 689:./shy_fft.h   **** 
 690:./shy_fft.h   ****                 d1r[0]   = sr[0] + si[0];
 691:./shy_fft.h   ****                 d2r[0]   = sr[0] - si[0];
 692:./shy_fft.h   ****                 d1r[n_2] = sr[n_2] * T(2);
 693:./shy_fft.h   ****                 d2r[n_2] = si[n_2] * T(2);
 694:./shy_fft.h   **** 
 695:./shy_fft.h   ****                 T* d1i = d1r + n_2;
 696:./shy_fft.h   ****                 T* d2i = d1i + n;
 697:./shy_fft.h   ****                 phasor->Start(pass);
 698:./shy_fft.h   ****                 for(size_t j = 1; j < n_2; ++j)
 699:./shy_fft.h   ****                 {
 700:./shy_fft.h   ****                     d1r[j] = sr[j] + si[-j];
 701:./shy_fft.h   ****                     d1i[j] = si[j] - si[n - j];
 702:./shy_fft.h   **** 
 703:./shy_fft.h   ****                     T c  = phasor->cos();
 704:./shy_fft.h   ****                     T s  = phasor->sin();
 705:./shy_fft.h   ****                     T vr = sr[j] - si[-j];
 706:./shy_fft.h   ****                     T vi = si[j] + si[n - j];
 707:./shy_fft.h   **** 
 708:./shy_fft.h   ****                     d2r[j] = vr * c + vi * s;
 709:./shy_fft.h   ****                     d2i[j] = vi * c - vr * s;
 710:./shy_fft.h   ****                     phasor->Rotate();
 711:./shy_fft.h   ****                 }
 712:./shy_fft.h   ****             }
 713:./shy_fft.h   **** 
 714:./shy_fft.h   ****             // Flip source and destination pointers for the next pass.
 715:./shy_fft.h   ****             if(d == output)
 716:./shy_fft.h   ****             {
 717:./shy_fft.h   ****                 s = output;
 718:./shy_fft.h   ****                 d = input;
 719:./shy_fft.h   ****             }
 720:./shy_fft.h   ****             else
 721:./shy_fft.h   ****             {
 722:./shy_fft.h   ****                 s = input;
 723:./shy_fft.h   ****                 d = output;
 724:./shy_fft.h   ****             }
 725:./shy_fft.h   ****         }
 726:./shy_fft.h   **** 
 727:./shy_fft.h   ****         // Copy data if necessary.
 728:./shy_fft.h   ****         if(d == output)
 729:./shy_fft.h   ****         {
 730:./shy_fft.h   ****             std::copy(&s[0], &s[rt_size], &output[0]);
 731:./shy_fft.h   ****         }
 732:./shy_fft.h   **** 
 733:./shy_fft.h   ****         s = output;
 734:./shy_fft.h   ****         d = input;
ARM GAS  /tmp/ccUsbZWH.s 			page 37


 735:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 8)
 736:./shy_fft.h   ****         {
 737:./shy_fft.h   ****             T vr, vi;
 738:./shy_fft.h   ****             d[i]     = s[i] + s[i + 4];
 739:./shy_fft.h   ****             d[i + 4] = s[i] - s[i + 4];
 740:./shy_fft.h   ****             d[i + 2] = s[i + 2] * T(2);
 741:./shy_fft.h   ****             d[i + 6] = s[i + 6] * T(2);
 742:./shy_fft.h   ****             d[i + 1] = s[i + 1] + s[i + 3];
 743:./shy_fft.h   ****             d[i + 3] = s[i + 5] - s[i + 7];
 744:./shy_fft.h   ****             vr       = s[i + 1] - s[i + 3];
 745:./shy_fft.h   ****             vi       = s[i + 5] + s[i + 7];
 746:./shy_fft.h   ****             d[i + 5] = (vr + vi) * math.sqrt_2_div_2();
 747:./shy_fft.h   ****             d[i + 7] = (vi - vr) * math.sqrt_2_div_2();
 748:./shy_fft.h   ****         }
 749:./shy_fft.h   **** 
 750:./shy_fft.h   ****         // First and second pass.
 751:./shy_fft.h   ****         s = input;
 752:./shy_fft.h   ****         d = output;
 753:./shy_fft.h   ****         for(size_t i = 0; i < rt_size; i += 4)
 754:./shy_fft.h   ****         {
 755:./shy_fft.h   ****             size_t r0 = ((bit_rev[i & 0xff] << 8) | bit_rev[i >> 8])
 756:./shy_fft.h   ****                         >> (16 - rt_num_passes);
 757:./shy_fft.h   ****             size_t r1 = r0 + 2 * (rt_size >> 2);
 758:./shy_fft.h   ****             size_t r2 = r0 + 1 * (rt_size >> 2);
 759:./shy_fft.h   ****             size_t r3 = r0 + 3 * (rt_size >> 2);
 760:./shy_fft.h   **** 
 761:./shy_fft.h   ****             T b_0 = s[0] + s[2];
 762:./shy_fft.h   ****             T b_2 = s[0] - s[2];
 763:./shy_fft.h   ****             T b_1 = s[1] * T(2);
 764:./shy_fft.h   ****             T b_3 = s[3] * T(2);
 765:./shy_fft.h   **** 
 766:./shy_fft.h   ****             d[r0] = b_0 + b_1;
 767:./shy_fft.h   ****             d[r1] = b_0 - b_1;
 768:./shy_fft.h   ****             d[r2] = b_2 + b_3;
 769:./shy_fft.h   ****             d[r3] = b_2 - b_3;
 770:./shy_fft.h   ****             s += 4;
 771:./shy_fft.h   ****         }
 772:./shy_fft.h   ****     }
 773:./shy_fft.h   **** };
 774:./shy_fft.h   **** 
 775:./shy_fft.h   **** template <typename T, typename Phasor>
 776:./shy_fft.h   **** struct InverseTransform<T, 0, Phasor>
 777:./shy_fft.h   **** {
 778:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 779:./shy_fft.h   ****     {
 780:./shy_fft.h   ****         o[0] = i[0];
 781:./shy_fft.h   ****     }
 782:./shy_fft.h   **** };
 783:./shy_fft.h   **** 
 784:./shy_fft.h   **** template <typename T, typename Phasor>
 785:./shy_fft.h   **** struct InverseTransform<T, 1, Phasor>
 786:./shy_fft.h   **** {
 787:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 788:./shy_fft.h   ****     {
 789:./shy_fft.h   ****         o[0] = i[0] + i[1];
 790:./shy_fft.h   ****         o[1] = i[0] - i[1];
 791:./shy_fft.h   ****     }
ARM GAS  /tmp/ccUsbZWH.s 			page 38


 792:./shy_fft.h   **** };
 793:./shy_fft.h   **** 
 794:./shy_fft.h   **** template <typename T, typename Phasor>
 795:./shy_fft.h   **** struct InverseTransform<T, 2, Phasor>
 796:./shy_fft.h   **** {
 797:./shy_fft.h   ****     void operator()(const T* i, T* o, T*, const uint8_t*, Phasor*)
 798:./shy_fft.h   ****     {
 799:./shy_fft.h   ****         T a = i[0] + i[2];
 800:./shy_fft.h   ****         T b = i[0] - i[2];
 801:./shy_fft.h   **** 
 802:./shy_fft.h   ****         o[0] = a + i[1] * T(2);
 803:./shy_fft.h   ****         o[2] = a - i[1] * T(2);
 804:./shy_fft.h   ****         o[1] = b + i[3] * T(2);
 805:./shy_fft.h   ****         o[3] = b - i[3] * T(2);
 806:./shy_fft.h   ****     }
 807:./shy_fft.h   **** };
 808:./shy_fft.h   **** 
 809:./shy_fft.h   **** 
 810:./shy_fft.h   **** template <typename T                               = float,
 811:./shy_fft.h   ****           size_t size                              = 16,
 812:./shy_fft.h   ****           template <typename, size_t> class Phasor = LutPhasor>
 813:./shy_fft.h   **** class ShyFFT
 814:./shy_fft.h   **** {
 815:./shy_fft.h   ****   public:
 816:./shy_fft.h   ****     enum
 817:./shy_fft.h   ****     {
 818:./shy_fft.h   ****         num_passes = Log2<size>::value,
 819:./shy_fft.h   ****         max_size   = size
 820:./shy_fft.h   ****     };
 821:./shy_fft.h   **** 
 822:./shy_fft.h   ****   private:
 823:./shy_fft.h   ****     typedef Phasor<T, num_passes> PhasorType;
 824:./shy_fft.h   **** 
 825:./shy_fft.h   ****   public:
 826:./shy_fft.h   ****     ShyFFT() {}
 827:./shy_fft.h   ****     ~ShyFFT() {}
 173              		.loc 19 827 5 view .LVU37
 174              	.LBB680:
 175              	.LBI680:
 233:./shy_fft.h   **** 
 176              		.loc 19 233 5 view .LVU38
 233:./shy_fft.h   **** 
 177              		.loc 19 233 5 is_stmt 0 view .LVU39
 178              	.LBE680:
 179              	.LBE679:
 180              	.LBE678:
 181              	.LBB681:
 182              	.LBI681:
 183              		.file 20 "dsp/looping_sample_player.h"
   1:dsp/looping_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/looping_sample_player.h **** //
   3:dsp/looping_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/looping_sample_player.h **** //
   5:dsp/looping_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/looping_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/looping_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/looping_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /tmp/ccUsbZWH.s 			page 39


   9:dsp/looping_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/looping_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/looping_sample_player.h **** //
  12:dsp/looping_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/looping_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/looping_sample_player.h **** //
  15:dsp/looping_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/looping_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/looping_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/looping_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/looping_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/looping_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/looping_sample_player.h **** // THE SOFTWARE.
  22:dsp/looping_sample_player.h **** //
  23:dsp/looping_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/looping_sample_player.h **** //
  25:dsp/looping_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/looping_sample_player.h **** //
  27:dsp/looping_sample_player.h **** // Naive playback of audio stored in a buffer.
  28:dsp/looping_sample_player.h **** 
  29:dsp/looping_sample_player.h **** #ifndef CLOUDS_DSP_LOOPING_SAMPLE_PLAYER_H_
  30:dsp/looping_sample_player.h **** #define CLOUDS_DSP_LOOPING_SAMPLE_PLAYER_H_
  31:dsp/looping_sample_player.h **** 
  32:dsp/looping_sample_player.h **** #include <algorithm>
  33:dsp/looping_sample_player.h **** 
  34:dsp/looping_sample_player.h **** #include "audio_buffer.h"
  35:dsp/looping_sample_player.h **** #include "frame.h"
  36:dsp/looping_sample_player.h **** #include "parameters.h"
  37:dsp/looping_sample_player.h **** 
  38:dsp/looping_sample_player.h **** using namespace daisysp;
  39:dsp/looping_sample_player.h **** 
  40:dsp/looping_sample_player.h **** const float kCrossfadeDuration = 64.0f;
  41:dsp/looping_sample_player.h **** 
  42:dsp/looping_sample_player.h **** using namespace daisy;
  43:dsp/looping_sample_player.h **** 
  44:dsp/looping_sample_player.h **** class LoopingSamplePlayer
  45:dsp/looping_sample_player.h **** {
  46:dsp/looping_sample_player.h ****   public:
  47:dsp/looping_sample_player.h ****     LoopingSamplePlayer() {}
  48:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 184              		.loc 20 48 5 is_stmt 1 view .LVU40
 185              		.loc 20 48 5 is_stmt 0 view .LVU41
 186              	.LBE681:
 187              	.LBB682:
 188              	.LBI682:
 189              		.file 21 "dsp/wsola_sample_player.h"
   1:dsp/wsola_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/wsola_sample_player.h **** //
   3:dsp/wsola_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/wsola_sample_player.h **** //
   5:dsp/wsola_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/wsola_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/wsola_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/wsola_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/wsola_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/wsola_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/wsola_sample_player.h **** //
ARM GAS  /tmp/ccUsbZWH.s 			page 40


  12:dsp/wsola_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/wsola_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/wsola_sample_player.h **** //
  15:dsp/wsola_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/wsola_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/wsola_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/wsola_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/wsola_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/wsola_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/wsola_sample_player.h **** // THE SOFTWARE.
  22:dsp/wsola_sample_player.h **** //
  23:dsp/wsola_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/wsola_sample_player.h **** //
  25:dsp/wsola_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/wsola_sample_player.h **** //
  27:dsp/wsola_sample_player.h **** // WSOLA playback.
  28:dsp/wsola_sample_player.h **** 
  29:dsp/wsola_sample_player.h **** #ifndef CLOUDS_DSP_WSOLA_SAMPLE_PLAYER_H_
  30:dsp/wsola_sample_player.h **** #define CLOUDS_DSP_WSOLA_SAMPLE_PLAYER_H_
  31:dsp/wsola_sample_player.h **** 
  32:dsp/wsola_sample_player.h **** #include <algorithm>
  33:dsp/wsola_sample_player.h **** 
  34:dsp/wsola_sample_player.h **** #include <cmath>
  35:dsp/wsola_sample_player.h **** #include <cstdio>
  36:dsp/wsola_sample_player.h **** #include <cstdlib>
  37:dsp/wsola_sample_player.h **** 
  38:dsp/wsola_sample_player.h **** #include "audio_buffer.h"
  39:dsp/wsola_sample_player.h **** #include "correlator.h"
  40:dsp/wsola_sample_player.h **** #include "frame.h"
  41:dsp/wsola_sample_player.h **** #include "window.h"
  42:dsp/wsola_sample_player.h **** #include "parameters.h"
  43:dsp/wsola_sample_player.h **** 
  44:dsp/wsola_sample_player.h **** using namespace daisysp;
  45:dsp/wsola_sample_player.h **** 
  46:dsp/wsola_sample_player.h **** const int32_t kMaxWSOLASize = 4096;
  47:dsp/wsola_sample_player.h **** 
  48:dsp/wsola_sample_player.h **** using namespace daisy;
  49:dsp/wsola_sample_player.h **** 
  50:dsp/wsola_sample_player.h **** class WSOLASamplePlayer
  51:dsp/wsola_sample_player.h **** {
  52:dsp/wsola_sample_player.h ****   public:
  53:dsp/wsola_sample_player.h ****     WSOLASamplePlayer() {}
  54:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 190              		.loc 21 54 5 is_stmt 1 view .LVU42
 191              		.loc 21 54 5 is_stmt 0 view .LVU43
 192              	.LBE682:
 193              	.LBB683:
 194              	.LBI683:
 195              		.file 22 "dsp/granular_sample_player.h"
   1:dsp/granular_sample_player.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/granular_sample_player.h **** //
   3:dsp/granular_sample_player.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/granular_sample_player.h **** //
   5:dsp/granular_sample_player.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/granular_sample_player.h **** // of this software and associated documentation files (the "Software"), to deal
   7:dsp/granular_sample_player.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/granular_sample_player.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
ARM GAS  /tmp/ccUsbZWH.s 			page 41


   9:dsp/granular_sample_player.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/granular_sample_player.h **** // furnished to do so, subject to the following conditions:
  11:dsp/granular_sample_player.h **** //
  12:dsp/granular_sample_player.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/granular_sample_player.h **** // all copies or substantial portions of the Software.
  14:dsp/granular_sample_player.h **** //
  15:dsp/granular_sample_player.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/granular_sample_player.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/granular_sample_player.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/granular_sample_player.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/granular_sample_player.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/granular_sample_player.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/granular_sample_player.h **** // THE SOFTWARE.
  22:dsp/granular_sample_player.h **** //
  23:dsp/granular_sample_player.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/granular_sample_player.h **** //
  25:dsp/granular_sample_player.h **** // -----------------------------------------------------------------------------
  26:dsp/granular_sample_player.h **** //
  27:dsp/granular_sample_player.h **** // Granular playback of audio stored in a buffer.
  28:dsp/granular_sample_player.h **** 
  29:dsp/granular_sample_player.h **** #ifndef CLOUDS_DSP_GRANULAR_SAMPLE_PLAYER_H_
  30:dsp/granular_sample_player.h **** #define CLOUDS_DSP_GRANULAR_SAMPLE_PLAYER_H_
  31:dsp/granular_sample_player.h **** 
  32:dsp/granular_sample_player.h **** #include "daisy.h"
  33:dsp/granular_sample_player.h **** 
  34:dsp/granular_sample_player.h **** #include <algorithm>
  35:dsp/granular_sample_player.h **** 
  36:dsp/granular_sample_player.h **** #include "audio_buffer.h"
  37:dsp/granular_sample_player.h **** #include "frame.h"
  38:dsp/granular_sample_player.h **** #include "grain.h"
  39:dsp/granular_sample_player.h **** #include "parameters.h"
  40:dsp/granular_sample_player.h **** 
  41:dsp/granular_sample_player.h **** #include <random>
  42:dsp/granular_sample_player.h **** 
  43:dsp/granular_sample_player.h **** using namespace daisysp;
  44:dsp/granular_sample_player.h **** 
  45:dsp/granular_sample_player.h **** const int32_t kMaxNumGrains = 64;
  46:dsp/granular_sample_player.h **** 
  47:dsp/granular_sample_player.h **** using namespace daisy;
  48:dsp/granular_sample_player.h **** 
  49:dsp/granular_sample_player.h **** class GranularSamplePlayer
  50:dsp/granular_sample_player.h **** {
  51:dsp/granular_sample_player.h ****   public:
  52:dsp/granular_sample_player.h ****     GranularSamplePlayer() {}
  53:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 196              		.loc 22 53 5 is_stmt 1 view .LVU44
 197              		.loc 22 53 5 is_stmt 0 view .LVU45
 198              	.LBE683:
 199              	.LBB684:
 200              	.LBI684:
 201              		.file 23 "dsp/correlator.h"
   1:dsp/correlator.h **** // Copyright 2014 Emilie Gillet.
   2:dsp/correlator.h **** //
   3:dsp/correlator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:dsp/correlator.h **** //
   5:dsp/correlator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:dsp/correlator.h **** // of this software and associated documentation files (the "Software"), to deal
ARM GAS  /tmp/ccUsbZWH.s 			page 42


   7:dsp/correlator.h **** // in the Software without restriction, including without limitation the rights
   8:dsp/correlator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:dsp/correlator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:dsp/correlator.h **** // furnished to do so, subject to the following conditions:
  11:dsp/correlator.h **** //
  12:dsp/correlator.h **** // The above copyright notice and this permission notice shall be included in
  13:dsp/correlator.h **** // all copies or substantial portions of the Software.
  14:dsp/correlator.h **** //
  15:dsp/correlator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:dsp/correlator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:dsp/correlator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:dsp/correlator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:dsp/correlator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:dsp/correlator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:dsp/correlator.h **** // THE SOFTWARE.
  22:dsp/correlator.h **** //
  23:dsp/correlator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:dsp/correlator.h **** //
  25:dsp/correlator.h **** // -----------------------------------------------------------------------------
  26:dsp/correlator.h **** //
  27:dsp/correlator.h **** // Search for stretch/shift splicing points by maximizing correlation.
  28:dsp/correlator.h **** // Correlation is computed by XOR-ing the bit sign of samples - this allows
  29:dsp/correlator.h **** // 32 samples to be matched in one single XOR operation.
  30:dsp/correlator.h **** 
  31:dsp/correlator.h **** #ifndef CLOUDS_DSP_CORRELATOR_H_
  32:dsp/correlator.h **** #define CLOUDS_DSP_CORRELATOR_H_
  33:dsp/correlator.h **** 
  34:dsp/correlator.h **** #include "daisysp.h"
  35:dsp/correlator.h **** 
  36:dsp/correlator.h **** using namespace daisysp;
  37:dsp/correlator.h **** 
  38:dsp/correlator.h **** class Correlator
  39:dsp/correlator.h **** {
  40:dsp/correlator.h ****   public:
  41:dsp/correlator.h ****     Correlator() {}
  42:dsp/correlator.h ****     ~Correlator() {}
 202              		.loc 23 42 5 is_stmt 1 view .LVU46
 203              		.loc 23 42 5 is_stmt 0 view .LVU47
 204              	.LBE684:
 205              		.loc 12 78 33 view .LVU48
 206 0000 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE4494:
 210              		.weak	_ZN23GranularProcessorCloudsD1Ev
 211              		.thumb_set _ZN23GranularProcessorCloudsD1Ev,_ZN23GranularProcessorCloudsD2Ev
 212              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 213              		.align	1
 214              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:
 221              	.LVL2:
 222              	.LFB4570:
 223              		.loc 5 17 13 is_stmt 1 view -0
 224              		.cfi_startproc
ARM GAS  /tmp/ccUsbZWH.s 			page 43


 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LBB685:
 229              	.LBI685:
 230              		.loc 6 219 13 view .LVU50
 231              	.LBB686:
 232              	.LBI686:
  23:../../libdaisy/src/hid/disp/display.h **** 
 233              		.loc 6 23 13 view .LVU51
  23:../../libdaisy/src/hid/disp/display.h **** 
 234              		.loc 6 23 13 is_stmt 0 view .LVU52
 235              	.LBE686:
 236              	.LBE685:
 237              		.loc 5 17 29 view .LVU53
 238 0000 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE4570:
 242              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 243              		.thumb_set _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED
 244              		.section	.text.__tcf_0,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-d16
 251              	__tcf_0:
 252              	.LFB5332:
 253              		.file 24 "Nimbus.cpp"
   1:Nimbus.cpp    **** #include "daisy_field.h"
   2:Nimbus.cpp    **** #include "daisysp.h"
   3:Nimbus.cpp    **** #include "granular_processor.h"
   4:Nimbus.cpp    **** 
   5:Nimbus.cpp    **** //#define SHOW_KNOB_VALUES
   6:Nimbus.cpp    **** #define TOGGLE_FREEZE_ON_HIGH //as opposed to Freezing only while the gate is open
   7:Nimbus.cpp    **** 
   8:Nimbus.cpp    **** #define AUDIO_BLOCK_SIZE 32 //DO NOT CHANGE!
   9:Nimbus.cpp    **** 
  10:Nimbus.cpp    **** #define MAIN_LOOP_DELAY 6                      //milliseconds
  11:Nimbus.cpp    **** #define OLED_LED_UPDATE_DELAY 5                //in Frames not milliseconds
  12:Nimbus.cpp    **** #define CV_FREEZE_UPDATE_DEBOUNCE_INTERVAL 500 //milliseconds
  13:Nimbus.cpp    **** #define CV_FREEZE_TRIGGER_THRESHOLD 0.65f //TODO: make these last 2 parameters
  14:Nimbus.cpp    **** 
  15:Nimbus.cpp    **** #define NUM_KNOBS 8
  16:Nimbus.cpp    **** #define NUM_PARAMS 9
  17:Nimbus.cpp    **** #define NUM_PAGES 10
  18:Nimbus.cpp    **** 
  19:Nimbus.cpp    **** #define KNOB_TOLERANCE .001f
  20:Nimbus.cpp    **** 
  21:Nimbus.cpp    **** #define DISPLAY_WIDTH 128
  22:Nimbus.cpp    **** #define DISPLAY_HEIGHT 60
  23:Nimbus.cpp    **** #define HEADER_HEIGHT 10
  24:Nimbus.cpp    **** #define LEFT_BORDER_WIDTH 2
  25:Nimbus.cpp    **** #define PARAM_NAME_COL_WIDTH 70
  26:Nimbus.cpp    **** #define ROW_HEIGHT 14
  27:Nimbus.cpp    **** #define SKINNY_ROW_HEIGHT 13
  28:Nimbus.cpp    **** #define DEFAULT_FONT Font_7x10
ARM GAS  /tmp/ccUsbZWH.s 			page 44


  29:Nimbus.cpp    **** #define SMALL_FONT Font_6x8
  30:Nimbus.cpp    **** #define CHECKBOX_SIZE 8
  31:Nimbus.cpp    **** #define CHECKBOX_MARGIN 3
  32:Nimbus.cpp    **** #define VALUE_BAR_HEIGHT 10
  33:Nimbus.cpp    **** #define VALUE_BAR_WIDTH 55
  34:Nimbus.cpp    **** #define VALUE_BAR_MARGIN 3
  35:Nimbus.cpp    **** #define MAPPED_PARAM_CONTAINER_WIDTH 18
  36:Nimbus.cpp    **** #define MAX_SCOPE_HEIGHT 60
  37:Nimbus.cpp    **** 
  38:Nimbus.cpp    **** #define PARAM_BUFFER_SIZE 8
  39:Nimbus.cpp    **** 
  40:Nimbus.cpp    **** using namespace daisysp;
  41:Nimbus.cpp    **** using namespace daisy;
  42:Nimbus.cpp    **** 
  43:Nimbus.cpp    **** enum DEVICE_STATE
  44:Nimbus.cpp    **** {
  45:Nimbus.cpp    ****     RUNNING,
  46:Nimbus.cpp    ****     CV_MAPPING,
  47:Nimbus.cpp    **** };
  48:Nimbus.cpp    **** 
  49:Nimbus.cpp    **** enum DISPLAY_PAGE
  50:Nimbus.cpp    **** {
  51:Nimbus.cpp    ****     SPLASH,
  52:Nimbus.cpp    ****     PARAMETERS1TO3,
  53:Nimbus.cpp    ****     PARAMETERS4TO6,
  54:Nimbus.cpp    ****     PARAMETERS7TO9,
  55:Nimbus.cpp    ****     BUTTONS1,
  56:Nimbus.cpp    ****     BUTTONS2,
  57:Nimbus.cpp    ****     CVMAPPINGS2,
  58:Nimbus.cpp    ****     CVMAPPINGS3,
  59:Nimbus.cpp    ****     CVMAPPINGS4,
  60:Nimbus.cpp    ****     SCOPE,
  61:Nimbus.cpp    **** };
  62:Nimbus.cpp    **** 
  63:Nimbus.cpp    **** enum DISPLAY_ROW
  64:Nimbus.cpp    **** {
  65:Nimbus.cpp    ****     ROW_1 = 1,
  66:Nimbus.cpp    ****     ROW_2,
  67:Nimbus.cpp    ****     ROW_3,
  68:Nimbus.cpp    ****     ROW_4,
  69:Nimbus.cpp    **** };
  70:Nimbus.cpp    **** 
  71:Nimbus.cpp    **** enum
  72:Nimbus.cpp    **** {
  73:Nimbus.cpp    ****     PLAYBACK_QUAL_16B_ST = 0,
  74:Nimbus.cpp    ****     PLAYBACK_QUAL_16B_MO = 1,
  75:Nimbus.cpp    ****     PLAYBACK_QUAL_8B_ST  = 2,
  76:Nimbus.cpp    ****     PLAYBACK_QUAL_8B_MO  = 3,
  77:Nimbus.cpp    **** };
  78:Nimbus.cpp    **** 
  79:Nimbus.cpp    **** enum
  80:Nimbus.cpp    **** {
  81:Nimbus.cpp    ****     LED_PLAYBACK_QUAL_16B_ST        = 0,
  82:Nimbus.cpp    ****     LED_PLAYBACK_QUAL_16B_MO        = 1,
  83:Nimbus.cpp    ****     LED_PLAYBACK_QUAL_8B_ST         = 2,
  84:Nimbus.cpp    ****     LED_PLAYBACK_QUAL_8B_MO         = 3,
  85:Nimbus.cpp    ****     LED_MAP_CV_2                    = 4,
ARM GAS  /tmp/ccUsbZWH.s 			page 45


  86:Nimbus.cpp    ****     LED_MAP_CV_3                    = 5,
  87:Nimbus.cpp    ****     LED_MAP_CV_4                    = 6,
  88:Nimbus.cpp    ****     LED_SHIFT                       = 7,
  89:Nimbus.cpp    ****     LED_BYPASS                      = 8,
  90:Nimbus.cpp    ****     LED_SILENCE                     = 9,
  91:Nimbus.cpp    ****     LED_FREEZE                      = 10,
  92:Nimbus.cpp    ****     LED_PLAYBACK_MODE_SPECTRAL      = 12,
  93:Nimbus.cpp    ****     LED_PLAYBACK_MODE_LOOPING_DELAY = 13,
  94:Nimbus.cpp    ****     LED_PLAYBACK_MODE_STRETCH       = 14,
  95:Nimbus.cpp    ****     LED_PLAYBACK_MODE_GRANULAR      = 15,
  96:Nimbus.cpp    **** };
  97:Nimbus.cpp    **** 
  98:Nimbus.cpp    **** enum
  99:Nimbus.cpp    **** {
 100:Nimbus.cpp    ****     BUTTON_PLAYBACK_MODE_GRANULAR      = 0,
 101:Nimbus.cpp    ****     BUTTON_PLAYBACK_MODE_STRETCH       = 1,
 102:Nimbus.cpp    ****     BUTTON_PLAYBACK_MODE_LOOPING_DELAY = 2,
 103:Nimbus.cpp    ****     BUTTON_PLAYBACK_MODE_SPECTRAL      = 3,
 104:Nimbus.cpp    ****     BUTTON_FREEZE                      = 5,
 105:Nimbus.cpp    ****     BUTTON_SILENCE                     = 6,
 106:Nimbus.cpp    ****     BUTTON_BYPASS                      = 7,
 107:Nimbus.cpp    ****     BUTTON_PLAYBACK_QUAL_16B_ST        = 8,
 108:Nimbus.cpp    ****     BUTTON_PLAYBACK_QUAL_16B_MO        = 9,
 109:Nimbus.cpp    ****     BUTTON_PLAYBACK_QUAL_8B_ST         = 10,
 110:Nimbus.cpp    ****     BUTTON_PLAYBACK_QUAL_8B_MO         = 11,
 111:Nimbus.cpp    ****     BUTTON_MAP_CV_2                    = 12,
 112:Nimbus.cpp    ****     BUTTON_MAP_CV_3                    = 13,
 113:Nimbus.cpp    ****     BUTTON_MAP_CV_4                    = 14,
 114:Nimbus.cpp    ****     BUTTON_SHIFT                       = 15,
 115:Nimbus.cpp    **** };
 116:Nimbus.cpp    **** 
 117:Nimbus.cpp    **** enum MAPPABLE_CVS
 118:Nimbus.cpp    **** {
 119:Nimbus.cpp    ****     NONE,
 120:Nimbus.cpp    ****     CV2,
 121:Nimbus.cpp    ****     CV3,
 122:Nimbus.cpp    ****     CV4,
 123:Nimbus.cpp    **** };
 124:Nimbus.cpp    **** 
 125:Nimbus.cpp    **** class ParamControl
 126:Nimbus.cpp    **** {
 127:Nimbus.cpp    ****   public:
 128:Nimbus.cpp    ****     ParamControl() {}
 129:Nimbus.cpp    ****     ~ParamControl() {}
 130:Nimbus.cpp    **** 
 131:Nimbus.cpp    ****     void Init(const char*    name,
 132:Nimbus.cpp    ****               const char*    abbreviated_name,
 133:Nimbus.cpp    ****               AnalogControl* knob,
 134:Nimbus.cpp    ****               int            led,
 135:Nimbus.cpp    ****               bool           shifted,
 136:Nimbus.cpp    ****               Parameters*    params,
 137:Nimbus.cpp    ****               int            param_num,
 138:Nimbus.cpp    ****               DISPLAY_PAGE   display_page,
 139:Nimbus.cpp    ****               MAPPABLE_CVS   mapped_cv = NONE)
 140:Nimbus.cpp    ****     {
 141:Nimbus.cpp    ****         display_name_     = name;
 142:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
ARM GAS  /tmp/ccUsbZWH.s 			page 46


 143:Nimbus.cpp    ****         knob_             = knob;
 144:Nimbus.cpp    ****         led_              = led;
 145:Nimbus.cpp    ****         shifted_          = shifted;
 146:Nimbus.cpp    ****         params_           = params;
 147:Nimbus.cpp    ****         param_num_        = param_num;
 148:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 149:Nimbus.cpp    ****         display_page_     = display_page;
 150:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 151:Nimbus.cpp    ****         knob_val_         = 0.f;
 152:Nimbus.cpp    ****         knob_val_changed_ = false;
 153:Nimbus.cpp    ****     }
 154:Nimbus.cpp    **** 
 155:Nimbus.cpp    ****     bool HasParamChanged() { return param_val_changed_; }
 156:Nimbus.cpp    ****     bool HasKnobChanged() { return knob_val_changed_; }
 157:Nimbus.cpp    **** 
 158:Nimbus.cpp    ****     bool ControlChange(float newval)
 159:Nimbus.cpp    ****     {
 160:Nimbus.cpp    ****         bool ret   = fabsf(newval - param_val_) > KNOB_TOLERANCE;
 161:Nimbus.cpp    ****         param_val_ = newval;
 162:Nimbus.cpp    ****         if(ret)
 163:Nimbus.cpp    ****         {
 164:Nimbus.cpp    ****             param_val_changed_ = true;
 165:Nimbus.cpp    **** 
 166:Nimbus.cpp    **** #ifdef SHOW_KNOB_VALUES
 167:Nimbus.cpp    ****             snprintf(val_str, PARAM_BUFFER_SIZE, "%d", int(param_val_ * 100));
 168:Nimbus.cpp    **** #endif
 169:Nimbus.cpp    ****         }
 170:Nimbus.cpp    ****         else
 171:Nimbus.cpp    ****         {
 172:Nimbus.cpp    ****             param_val_changed_ = false;
 173:Nimbus.cpp    ****         };
 174:Nimbus.cpp    ****         return ret;
 175:Nimbus.cpp    ****     }
 176:Nimbus.cpp    **** 
 177:Nimbus.cpp    ****     const char* GetDisplayName() { return display_name_; }
 178:Nimbus.cpp    ****     const char* GetAbbreviatedName() { return abbreviated_name_; }
 179:Nimbus.cpp    ****     int         GetLed() const { return led_; }
 180:Nimbus.cpp    ****     float       GetValue() { return param_val_; }
 181:Nimbus.cpp    ****     char*       GetValueAsString() { return val_str; }
 182:Nimbus.cpp    ****     int         GetParamNum() { return param_num_; }
 183:Nimbus.cpp    ****     bool        IsShifted() { return shifted_; }
 184:Nimbus.cpp    **** 
 185:Nimbus.cpp    ****     DISPLAY_PAGE GetDisplayPage() { return display_page_; }
 186:Nimbus.cpp    **** 
 187:Nimbus.cpp    ****     MAPPABLE_CVS GetMappedCV() { return mapped_cv_; }
 188:Nimbus.cpp    ****     void         SetMappedCV(MAPPABLE_CVS mapped_cv) { mapped_cv_ = mapped_cv; }
 189:Nimbus.cpp    **** 
 190:Nimbus.cpp    ****     void Process()
 191:Nimbus.cpp    ****     {
 192:Nimbus.cpp    ****         float val;
 193:Nimbus.cpp    **** 
 194:Nimbus.cpp    ****         float new_knob_val = knob_->Process();
 195:Nimbus.cpp    ****         knob_val_changed_  = fabsf(new_knob_val - knob_val_) > KNOB_TOLERANCE;
 196:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 197:Nimbus.cpp    **** 
 198:Nimbus.cpp    ****         if(mapped_cv_ == NONE)
 199:Nimbus.cpp    ****         {
ARM GAS  /tmp/ccUsbZWH.s 			page 47


 200:Nimbus.cpp    ****             val = new_knob_val;
 201:Nimbus.cpp    **** 
 202:Nimbus.cpp    ****             if(!ControlChange(val))
 203:Nimbus.cpp    ****             {
 204:Nimbus.cpp    ****                 return;
 205:Nimbus.cpp    ****             }
 206:Nimbus.cpp    ****         }
 207:Nimbus.cpp    ****         else
 208:Nimbus.cpp    ****         {
 209:Nimbus.cpp    ****             //Ignore the knob setting if parameter is mapped to a CV since param_val will be set by
 210:Nimbus.cpp    ****             val = param_val_;
 211:Nimbus.cpp    ****         }
 212:Nimbus.cpp    **** 
 213:Nimbus.cpp    ****         switch(param_num_)
 214:Nimbus.cpp    ****         {
 215:Nimbus.cpp    ****             case 0: params_->position = val; break;
 216:Nimbus.cpp    ****             case 1: params_->size = val; break;
 217:Nimbus.cpp    ****             case 2:
 218:Nimbus.cpp    ****                 params_->pitch = powf(9.798f * (val - .5f), 2.f);
 219:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 220:Nimbus.cpp    ****                 break;
 221:Nimbus.cpp    ****             case 3: params_->density = val; break;
 222:Nimbus.cpp    ****             case 4: params_->texture = val; break;
 223:Nimbus.cpp    ****             case 5: params_->dry_wet = val; break;
 224:Nimbus.cpp    ****             case 6: params_->stereo_spread = val; break;
 225:Nimbus.cpp    ****             case 7: params_->feedback = val; break;
 226:Nimbus.cpp    ****             case 8: params_->reverb = val; break;
 227:Nimbus.cpp    ****         }
 228:Nimbus.cpp    ****     }
 229:Nimbus.cpp    **** 
 230:Nimbus.cpp    ****   private:
 231:Nimbus.cpp    ****     const char*    display_name_;
 232:Nimbus.cpp    ****     const char*    abbreviated_name_;
 233:Nimbus.cpp    ****     AnalogControl* knob_;
 234:Nimbus.cpp    ****     int            led_;
 235:Nimbus.cpp    ****     bool           shifted_;
 236:Nimbus.cpp    ****     Parameters*    params_;
 237:Nimbus.cpp    ****     int            param_num_;
 238:Nimbus.cpp    ****     float          param_val_;
 239:Nimbus.cpp    ****     bool           param_val_changed_;
 240:Nimbus.cpp    ****     float          knob_val_;
 241:Nimbus.cpp    ****     bool           knob_val_changed_;
 242:Nimbus.cpp    ****     char           val_str[PARAM_BUFFER_SIZE];
 243:Nimbus.cpp    **** 
 244:Nimbus.cpp    ****     DISPLAY_PAGE display_page_;
 245:Nimbus.cpp    ****     MAPPABLE_CVS mapped_cv_;
 246:Nimbus.cpp    **** };
 247:Nimbus.cpp    **** 
 248:Nimbus.cpp    **** GranularProcessorClouds processor;
 249:Nimbus.cpp    **** DaisyField              field;
 250:Nimbus.cpp    **** 
 251:Nimbus.cpp    **** // Pre-allocate big blocks in main memory and CCM. No malloc here.
 252:Nimbus.cpp    **** uint8_t block_mem[118784];
 253:Nimbus.cpp    **** uint8_t block_ccm[65536 - 128];
 254:Nimbus.cpp    **** 
 255:Nimbus.cpp    **** float        cpu_usage                        = 0.f;
 256:Nimbus.cpp    **** char         cpu_usage_str[PARAM_BUFFER_SIZE] = "";
ARM GAS  /tmp/ccUsbZWH.s 			page 48


 257:Nimbus.cpp    **** bool         param_val_changed_;
 258:Nimbus.cpp    **** ParamControl param_controls[NUM_PARAMS];
 254              		.loc 24 258 14 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 24 258 14 is_stmt 0 view .LVU55
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE5332:
 264              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 265              		.align	1
 266              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv5-d16
 272              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:
 273              	.LVL3:
 274              	.LFB5333:
  18:../../libdaisy/src/hid/disp/oled_display.h **** 
  19:../../libdaisy/src/hid/disp/oled_display.h ****     struct Config
  20:../../libdaisy/src/hid/disp/oled_display.h ****     {
  21:../../libdaisy/src/hid/disp/oled_display.h ****         typename DisplayDriver::Config driver_config;
  22:../../libdaisy/src/hid/disp/oled_display.h ****     };
  23:../../libdaisy/src/hid/disp/oled_display.h **** 
  24:../../libdaisy/src/hid/disp/oled_display.h ****     void Init(Config config) { driver_.Init(config.driver_config); }
  25:../../libdaisy/src/hid/disp/oled_display.h **** 
  26:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Height() const override { return driver_.Height(); }
 275              		.loc 5 26 14 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280              		.loc 5 26 65 is_stmt 0 view .LVU57
 281 0000 4020     		movs	r0, #64
 282              	.LVL4:
 283              		.loc 5 26 65 view .LVU58
 284 0002 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE5333:
 288              		.section	.text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransport
 289              		.align	1
 290              		.weak	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv5-d16
 296              	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:
 297              	.LVL5:
 298              	.LFB5334:
  27:../../libdaisy/src/hid/disp/oled_display.h ****     uint16_t Width() const override { return driver_.Width(); }
 299              		.loc 5 27 14 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUsbZWH.s 			page 49


 303              		@ link register save eliminated.
 304              		.loc 5 27 63 is_stmt 0 view .LVU60
 305 0000 8020     		movs	r0, #128
 306              	.LVL6:
 307              		.loc 5 27 63 view .LVU61
 308 0002 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE5334:
 312              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 313              		.align	1
 314              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv5-d16
 320              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:
 321              	.LVL7:
 322              	.LFB4572:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 323              		.loc 5 17 13 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 327              		.loc 5 17 13 is_stmt 0 view .LVU63
 328 0000 10B5     		push	{r4, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 4, -8
 331              		.cfi_offset 14, -4
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 332              		.loc 5 17 13 view .LVU64
 333 0002 0446     		mov	r4, r0
 334              	.LVL8:
 335              	.LBB687:
 336              	.LBI687:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 337              		.loc 5 17 13 is_stmt 1 view .LVU65
 338              	.LBB688:
 339              	.LBI688:
 340              		.loc 6 219 13 view .LVU66
 341              	.LBB689:
 342              	.LBI689:
  23:../../libdaisy/src/hid/disp/display.h **** 
 343              		.loc 6 23 13 view .LVU67
  23:../../libdaisy/src/hid/disp/display.h **** 
 344              		.loc 6 23 13 is_stmt 0 view .LVU68
 345              	.LBE689:
 346              	.LBE688:
 347              	.LBE687:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 348              		.loc 5 17 29 view .LVU69
 349 0004 40F21441 		movw	r1, #1044
 350 0008 FFF7FEFF 		bl	_ZdlPvj
 351              	.LVL9:
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 352              		.loc 5 17 29 view .LVU70
 353 000c 2046     		mov	r0, r4
ARM GAS  /tmp/ccUsbZWH.s 			page 50


 354 000e 10BD     		pop	{r4, pc}
  17:../../libdaisy/src/hid/disp/oled_display.h **** 
 355              		.loc 5 17 29 view .LVU71
 356              		.cfi_endproc
 357              	.LFE4572:
 359              		.section	.text._ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv5-d16
 366              	_ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0:
 367              	.LVL10:
 368              	.LFB5364:
 369              		.file 25 "../../libdaisy/src/dev/leddriver.h"
   1:../../libdaisy/src/dev/leddriver.h **** #pragma once
   2:../../libdaisy/src/dev/leddriver.h **** #ifndef SA_LED_DRIVER_H
   3:../../libdaisy/src/dev/leddriver.h **** #define SA_LED_DRIVER_H /**< & */
   4:../../libdaisy/src/dev/leddriver.h **** 
   5:../../libdaisy/src/dev/leddriver.h **** #ifdef __cplusplus
   6:../../libdaisy/src/dev/leddriver.h **** 
   7:../../libdaisy/src/dev/leddriver.h **** #include <stdint.h>
   8:../../libdaisy/src/dev/leddriver.h **** #include "per/i2c.h"
   9:../../libdaisy/src/dev/leddriver.h **** #include "per/gpio.h"
  10:../../libdaisy/src/dev/leddriver.h **** 
  11:../../libdaisy/src/dev/leddriver.h **** namespace daisy
  12:../../libdaisy/src/dev/leddriver.h **** {
  13:../../libdaisy/src/dev/leddriver.h **** /** LED driver for one or multiple PCA9685 12bit PWM chips connected to
  14:../../libdaisy/src/dev/leddriver.h ****  * a single I2C peripheral.
  15:../../libdaisy/src/dev/leddriver.h ****  * It includes gamma correction from 8bit brightness values but it 
  16:../../libdaisy/src/dev/leddriver.h ****  * can also be supplied with raw 12bit values.
  17:../../libdaisy/src/dev/leddriver.h ****  * This driver uses two buffers - one for drawing, one for transmitting.
  18:../../libdaisy/src/dev/leddriver.h ****  * Multiple LedDriverPca9685 instances can be used at the same time.
  19:../../libdaisy/src/dev/leddriver.h ****  * \param numDrivers    The number of PCA9685 driver attached to the I2C
  20:../../libdaisy/src/dev/leddriver.h ****  *                      peripheral.
  21:../../libdaisy/src/dev/leddriver.h ****  * \param persistentBufferContents If set to true, the current draw buffer 
  22:../../libdaisy/src/dev/leddriver.h ****  *                      contents will be copied to the next draw buffer 
  23:../../libdaisy/src/dev/leddriver.h ****  *                      during SwapBuffersAndTransmit(). Use this, if you plan
  24:../../libdaisy/src/dev/leddriver.h ****  *                      to write single leds at a time. 
  25:../../libdaisy/src/dev/leddriver.h ****  *                      If you will alway update all leds before calling 
  26:../../libdaisy/src/dev/leddriver.h ****  *                      SwapBuffersAndTransmit(), you can set this to false
  27:../../libdaisy/src/dev/leddriver.h ****  *                      and safe some cycles.
  28:../../libdaisy/src/dev/leddriver.h ****  */
  29:../../libdaisy/src/dev/leddriver.h **** template <int numDrivers, bool persistentBufferContents = true>
  30:../../libdaisy/src/dev/leddriver.h **** class LedDriverPca9685
  31:../../libdaisy/src/dev/leddriver.h **** {
  32:../../libdaisy/src/dev/leddriver.h ****   public:
  33:../../libdaisy/src/dev/leddriver.h ****     /** Buffer Type for a single PCA9685 driver chip. */
  34:../../libdaisy/src/dev/leddriver.h ****     struct __attribute__((packed)) PCA9685TransmitBuffer
  35:../../libdaisy/src/dev/leddriver.h ****     {
  36:../../libdaisy/src/dev/leddriver.h ****         /** register address */
  37:../../libdaisy/src/dev/leddriver.h ****         uint8_t registerAddr = PCA9685_LED0;
  38:../../libdaisy/src/dev/leddriver.h ****         struct __attribute__((packed))
  39:../../libdaisy/src/dev/leddriver.h ****         {
  40:../../libdaisy/src/dev/leddriver.h ****             /** cycle at which to switch on the led */
  41:../../libdaisy/src/dev/leddriver.h ****             uint16_t on;
  42:../../libdaisy/src/dev/leddriver.h ****             /** cycle at which to switch off the led */
ARM GAS  /tmp/ccUsbZWH.s 			page 51


  43:../../libdaisy/src/dev/leddriver.h ****             uint16_t off;
  44:../../libdaisy/src/dev/leddriver.h ****         } leds[16];
  45:../../libdaisy/src/dev/leddriver.h ****         /** full size in bytes */
  46:../../libdaisy/src/dev/leddriver.h ****         static constexpr uint16_t size = 16 * 4 + 1;
  47:../../libdaisy/src/dev/leddriver.h ****     };
  48:../../libdaisy/src/dev/leddriver.h ****     /** Buffer type for the entire DMA buffer. */
  49:../../libdaisy/src/dev/leddriver.h ****     using DmaBuffer = PCA9685TransmitBuffer[numDrivers];
  50:../../libdaisy/src/dev/leddriver.h **** 
  51:../../libdaisy/src/dev/leddriver.h ****     /** Initialises the driver. 
  52:../../libdaisy/src/dev/leddriver.h ****      * \param i2c           The I2C peripheral to use.
  53:../../libdaisy/src/dev/leddriver.h ****      * \param addresses     An array of addresses for each of the driver chips.
  54:../../libdaisy/src/dev/leddriver.h ****      * \param dma_buffer_a  The first buffer for the DMA. This must be placed in 
  55:../../libdaisy/src/dev/leddriver.h ****      *                      D2 memory by adding the DMA_BUFFER_MEM_SECTION attribute
  56:../../libdaisy/src/dev/leddriver.h ****      *                      like this: `LedDriverPca9685<2>::DmaBuffer DMA_BUFFER_MEM_SECTION buffe
  57:../../libdaisy/src/dev/leddriver.h ****      * \param dma_buffer_b  The second buffer for the DMA. This must be placed in 
  58:../../libdaisy/src/dev/leddriver.h ****      *                      D2 memory by adding the DMA_BUFFER_MEM_SECTION attribute
  59:../../libdaisy/src/dev/leddriver.h ****      *                      like this: `LedDriverPca9685<2>::DmaBuffer DMA_BUFFER_MEM_SECTION buffe
  60:../../libdaisy/src/dev/leddriver.h ****      * \param oe_pin        If the output enable pin is used, supply its configuration here.
  61:../../libdaisy/src/dev/leddriver.h ****      *                      It will automatically be pulled low by the driver.
  62:../../libdaisy/src/dev/leddriver.h ****     */
  63:../../libdaisy/src/dev/leddriver.h ****     void Init(I2CHandle i2c,
  64:../../libdaisy/src/dev/leddriver.h ****               const uint8_t (&addresses)[numDrivers],
  65:../../libdaisy/src/dev/leddriver.h ****               DmaBuffer    dma_buffer_a,
  66:../../libdaisy/src/dev/leddriver.h ****               DmaBuffer    dma_buffer_b,
  67:../../libdaisy/src/dev/leddriver.h ****               dsy_gpio_pin oe_pin = {DSY_GPIOX, 0})
  68:../../libdaisy/src/dev/leddriver.h ****     {
  69:../../libdaisy/src/dev/leddriver.h ****         i2c_             = i2c;
  70:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_     = dma_buffer_a;
  71:../../libdaisy/src/dev/leddriver.h ****         transmit_buffer_ = dma_buffer_b;
  72:../../libdaisy/src/dev/leddriver.h ****         oe_pin_          = oe_pin;
  73:../../libdaisy/src/dev/leddriver.h ****         for(int d = 0; d < numDrivers; d++)
  74:../../libdaisy/src/dev/leddriver.h ****             addresses_[d] = addresses[d];
  75:../../libdaisy/src/dev/leddriver.h ****         current_driver_idx_ = -1;
  76:../../libdaisy/src/dev/leddriver.h **** 
  77:../../libdaisy/src/dev/leddriver.h ****         InitializeBuffers();
  78:../../libdaisy/src/dev/leddriver.h ****         InitializeDrivers();
  79:../../libdaisy/src/dev/leddriver.h ****     }
  80:../../libdaisy/src/dev/leddriver.h **** 
  81:../../libdaisy/src/dev/leddriver.h ****     /** Returns the number of leds available from this driver. */
  82:../../libdaisy/src/dev/leddriver.h ****     constexpr int GetNumLeds() const { return numDrivers * 16; }
  83:../../libdaisy/src/dev/leddriver.h **** 
  84:../../libdaisy/src/dev/leddriver.h ****     /** Sets all leds to a gamma corrected brightness between 0.0f and 1.0f. */
  85:../../libdaisy/src/dev/leddriver.h ****     void SetAllTo(float brightness)
  86:../../libdaisy/src/dev/leddriver.h ****     {
  87:../../libdaisy/src/dev/leddriver.h ****         const uint8_t intBrightness
  88:../../libdaisy/src/dev/leddriver.h ****             = (uint8_t)(clamp(brightness * 255.0f, 0.0f, 255.0f));
  89:../../libdaisy/src/dev/leddriver.h ****         SetAllTo(intBrightness);
  90:../../libdaisy/src/dev/leddriver.h ****     }
  91:../../libdaisy/src/dev/leddriver.h **** 
  92:../../libdaisy/src/dev/leddriver.h ****     /** Sets all leds to a gamma corrected brightness between 0 and 255. */
  93:../../libdaisy/src/dev/leddriver.h ****     void SetAllTo(uint8_t brightness)
  94:../../libdaisy/src/dev/leddriver.h ****     {
  95:../../libdaisy/src/dev/leddriver.h ****         const uint16_t cycles = gamma_table_[brightness];
  96:../../libdaisy/src/dev/leddriver.h ****         SetAllToRaw(cycles);
  97:../../libdaisy/src/dev/leddriver.h ****     }
  98:../../libdaisy/src/dev/leddriver.h **** 
  99:../../libdaisy/src/dev/leddriver.h ****     /** Sets all leds to a raw 12bit brightness between 0 and 4095. */
ARM GAS  /tmp/ccUsbZWH.s 			page 52


 100:../../libdaisy/src/dev/leddriver.h ****     void SetAllToRaw(uint16_t rawBrightness)
 101:../../libdaisy/src/dev/leddriver.h ****     {
 102:../../libdaisy/src/dev/leddriver.h ****         for(int led = 0; led < GetNumLeds(); led++)
 103:../../libdaisy/src/dev/leddriver.h ****             SetLedRaw(led, rawBrightness);
 104:../../libdaisy/src/dev/leddriver.h ****     }
 105:../../libdaisy/src/dev/leddriver.h **** 
 106:../../libdaisy/src/dev/leddriver.h ****     /** Sets a single led to a gamma corrected brightness between 0.0f and 1.0f. */
 107:../../libdaisy/src/dev/leddriver.h ****     void SetLed(int ledIndex, float brightness)
 108:../../libdaisy/src/dev/leddriver.h ****     {
 109:../../libdaisy/src/dev/leddriver.h ****         const uint8_t intBrightness
 110:../../libdaisy/src/dev/leddriver.h ****             = (uint8_t)(clamp(brightness * 255.0f, 0.0f, 255.0f));
 111:../../libdaisy/src/dev/leddriver.h ****         SetLed(ledIndex, intBrightness);
 112:../../libdaisy/src/dev/leddriver.h ****     }
 113:../../libdaisy/src/dev/leddriver.h **** 
 114:../../libdaisy/src/dev/leddriver.h ****     /** Sets a single led to a gamma corrected brightness between 0 and 255. */
 115:../../libdaisy/src/dev/leddriver.h ****     void SetLed(int ledIndex, uint8_t brightness)
 116:../../libdaisy/src/dev/leddriver.h ****     {
 117:../../libdaisy/src/dev/leddriver.h ****         const uint16_t cycles = gamma_table_[brightness];
 118:../../libdaisy/src/dev/leddriver.h ****         SetLedRaw(ledIndex, cycles);
 119:../../libdaisy/src/dev/leddriver.h ****     }
 120:../../libdaisy/src/dev/leddriver.h **** 
 121:../../libdaisy/src/dev/leddriver.h ****     /** Sets a single led to a raw 12bit brightness between 0 and 4095. */
 122:../../libdaisy/src/dev/leddriver.h ****     void SetLedRaw(int ledIndex, uint16_t rawBrightness)
 123:../../libdaisy/src/dev/leddriver.h ****     {
 124:../../libdaisy/src/dev/leddriver.h ****         const auto d  = GetDriverForLed(ledIndex);
 125:../../libdaisy/src/dev/leddriver.h ****         const auto ch = GetDriverChannelForLed(ledIndex);
 126:../../libdaisy/src/dev/leddriver.h ****         // mask away the "full on" bit
 127:../../libdaisy/src/dev/leddriver.h ****         const auto on                = draw_buffer_[d].leds[ch].on & (0x0FFF);
 128:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_[d].leds[ch].off = (on + rawBrightness) & (0x0FFF);
 129:../../libdaisy/src/dev/leddriver.h ****         // full on condition
 130:../../libdaisy/src/dev/leddriver.h ****         if(rawBrightness >= 0x0FFF)
 131:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].leds[ch].on = 0x1000 | on; // set "full on" bit
 132:../../libdaisy/src/dev/leddriver.h ****         else
 133:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].leds[ch].on = on; // clear "full on" bit
 134:../../libdaisy/src/dev/leddriver.h ****     }
 135:../../libdaisy/src/dev/leddriver.h **** 
 136:../../libdaisy/src/dev/leddriver.h ****     /** Swaps the current draw buffer and the current transmit buffer and
 137:../../libdaisy/src/dev/leddriver.h ****      *  starts transmitting the values to all chips.
 138:../../libdaisy/src/dev/leddriver.h ****      */
 139:../../libdaisy/src/dev/leddriver.h ****     void SwapBuffersAndTransmit()
 140:../../libdaisy/src/dev/leddriver.h ****     {
 141:../../libdaisy/src/dev/leddriver.h ****         // wait for current transmission to complete
 142:../../libdaisy/src/dev/leddriver.h ****         while(current_driver_idx_ >= 0) {};
 143:../../libdaisy/src/dev/leddriver.h **** 
 144:../../libdaisy/src/dev/leddriver.h ****         // swap buffers
 145:../../libdaisy/src/dev/leddriver.h ****         auto tmp         = transmit_buffer_;
 146:../../libdaisy/src/dev/leddriver.h ****         transmit_buffer_ = draw_buffer_;
 147:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_     = tmp;
 148:../../libdaisy/src/dev/leddriver.h **** 
 149:../../libdaisy/src/dev/leddriver.h ****         // copy current transmit buffer contents to the new draw buffer
 150:../../libdaisy/src/dev/leddriver.h ****         // to keep the led settings (if required)
 151:../../libdaisy/src/dev/leddriver.h ****         if(persistentBufferContents)
 152:../../libdaisy/src/dev/leddriver.h ****         {
 153:../../libdaisy/src/dev/leddriver.h ****             for(int d = 0; d < numDrivers; d++)
 154:../../libdaisy/src/dev/leddriver.h ****                 for(int ch = 0; ch < 16; ch++)
 155:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 156:../../libdaisy/src/dev/leddriver.h ****                         = transmit_buffer_[d].leds[ch].off;
ARM GAS  /tmp/ccUsbZWH.s 			page 53


 157:../../libdaisy/src/dev/leddriver.h ****         }
 158:../../libdaisy/src/dev/leddriver.h **** 
 159:../../libdaisy/src/dev/leddriver.h ****         // start transmission
 160:../../libdaisy/src/dev/leddriver.h ****         current_driver_idx_ = -1;
 161:../../libdaisy/src/dev/leddriver.h ****         ContinueTransmission();
 162:../../libdaisy/src/dev/leddriver.h ****     }
 163:../../libdaisy/src/dev/leddriver.h **** 
 164:../../libdaisy/src/dev/leddriver.h ****   private:
 165:../../libdaisy/src/dev/leddriver.h ****     void ContinueTransmission()
 370              		.loc 25 165 10 is_stmt 1 view -0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		.loc 25 165 10 is_stmt 0 view .LVU73
 375 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 4, -12
 378              		.cfi_offset 5, -8
 379              		.cfi_offset 14, -4
 166:../../libdaisy/src/dev/leddriver.h ****     {
 167:../../libdaisy/src/dev/leddriver.h ****         current_driver_idx_++;
 168:../../libdaisy/src/dev/leddriver.h ****         if(current_driver_idx_ >= numDrivers)
 169:../../libdaisy/src/dev/leddriver.h ****         {
 170:../../libdaisy/src/dev/leddriver.h ****             current_driver_idx_ = -1;
 171:../../libdaisy/src/dev/leddriver.h ****             return;
 172:../../libdaisy/src/dev/leddriver.h ****         }
 173:../../libdaisy/src/dev/leddriver.h **** 
 174:../../libdaisy/src/dev/leddriver.h ****         const auto    d       = current_driver_idx_;
 380              		.loc 25 174 23 view .LVU74
 381 0002 037D     		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 382              	.LVL11:
 165:../../libdaisy/src/dev/leddriver.h ****     {
 383              		.loc 25 165 10 view .LVU75
 384 0004 0446     		mov	r4, r0
 175:../../libdaisy/src/dev/leddriver.h ****         const uint8_t address = PCA9685_I2C_BASE_ADDRESS | addresses_[d];
 176:../../libdaisy/src/dev/leddriver.h ****         const auto    status  = i2c_.TransmitDma(address,
 177:../../libdaisy/src/dev/leddriver.h ****                                              (uint8_t*)&transmit_buffer_[d],
 385              		.loc 25 177 73 view .LVU76
 386 0006 8568     		ldr	r5, [r0, #8]
 387 0008 5AB2     		sxtb	r2, r3
 388              	.LVL12:
 175:../../libdaisy/src/dev/leddriver.h ****         const uint8_t address = PCA9685_I2C_BASE_ADDRESS | addresses_[d];
 389              		.loc 25 175 70 view .LVU77
 390 000a 40FA83F3 		sxtab	r3, r0, r3
 391              	.LVL13:
 392              		.loc 25 177 73 view .LVU78
 393 000e 02EB8212 		add	r2, r2, r2, lsl #6
 394              	.LVL14:
 175:../../libdaisy/src/dev/leddriver.h ****         const uint8_t address = PCA9685_I2C_BASE_ADDRESS | addresses_[d];
 395              		.loc 25 175 23 view .LVU79
 396 0012 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 176:../../libdaisy/src/dev/leddriver.h ****                                              (uint8_t*)&transmit_buffer_[d],
 397              		.loc 25 176 23 view .LVU80
 398 0014 0A4B     		ldr	r3, .L10
 399 0016 2A44     		add	r2, r2, r5
 400 0018 41F04001 		orr	r1, r1, #64
 401 001c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccUsbZWH.s 			page 54


 176:../../libdaisy/src/dev/leddriver.h ****                                              (uint8_t*)&transmit_buffer_[d],
 402              		.loc 25 176 23 view .LVU81
 403 001e 4123     		movs	r3, #65
 404 0020 0190     		str	r0, [sp, #4]
 405 0022 FFF7FEFF 		bl	_ZN5daisy9I2CHandle11TransmitDmaEtPhtPFvPvNS0_6ResultEES2_
 406              	.LVL15:
 178:../../libdaisy/src/dev/leddriver.h ****                                              PCA9685TransmitBuffer::size,
 179:../../libdaisy/src/dev/leddriver.h ****                                              &TxCpltCallback,
 180:../../libdaisy/src/dev/leddriver.h ****                                              this);
 181:../../libdaisy/src/dev/leddriver.h ****         if(status != I2CHandle::Result::OK)
 407              		.loc 25 181 9 view .LVU82
 408 0026 48B1     		cbz	r0, .L8
 182:../../libdaisy/src/dev/leddriver.h ****         {
 183:../../libdaisy/src/dev/leddriver.h ****             // TODO: fix this :-)
 184:../../libdaisy/src/dev/leddriver.h ****             // Reinit I2C (probably a flag to kill, but hey this works fairly well for now.)
 185:../../libdaisy/src/dev/leddriver.h ****             i2c_.Init(i2c_.GetConfig());
 409              		.loc 25 185 22 view .LVU83
 410 0028 2046     		mov	r0, r4
 411              	.LVL16:
 412              		.loc 25 185 22 view .LVU84
 413 002a FFF7FEFF 		bl	_ZNK5daisy9I2CHandle9GetConfigEv
 414              	.LVL17:
 415 002e 0146     		mov	r1, r0
 416 0030 2046     		mov	r0, r4
 186:../../libdaisy/src/dev/leddriver.h ****         }
 187:../../libdaisy/src/dev/leddriver.h ****     }
 417              		.loc 25 187 5 view .LVU85
 418 0032 03B0     		add	sp, sp, #12
 419              		.cfi_remember_state
 420              		.cfi_def_cfa_offset 12
 421              		@ sp needed
 422 0034 BDE83040 		pop	{r4, r5, lr}
 423              		.cfi_restore 14
 424              		.cfi_restore 5
 425              		.cfi_restore 4
 426              		.cfi_def_cfa_offset 0
 427              	.LVL18:
 185:../../libdaisy/src/dev/leddriver.h ****         }
 428              		.loc 25 185 22 view .LVU86
 429 0038 FFF7FEBF 		b	_ZN5daisy9I2CHandle4InitERKNS0_6ConfigE
 430              	.LVL19:
 431              	.L8:
 432              		.cfi_restore_state
 433              		.loc 25 187 5 view .LVU87
 434 003c 03B0     		add	sp, sp, #12
 435              		.cfi_def_cfa_offset 12
 436              		@ sp needed
 437 003e 30BD     		pop	{r4, r5, pc}
 438              	.LVL20:
 439              	.L11:
 440              		.loc 25 187 5 view .LVU88
 441              		.align	2
 442              	.L10:
 443 0040 00000000 		.word	_ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE
 444              		.cfi_endproc
 445              	.LFE5364:
 447              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
ARM GAS  /tmp/ccUsbZWH.s 			page 55


 448              		.align	1
 449              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv5-d16
 455              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:
 456              	.LVL21:
 457              	.LFB5007:
  28:../../libdaisy/src/hid/disp/oled_display.h **** 
  29:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  30:../../libdaisy/src/hid/disp/oled_display.h ****     Fills the entire display with either on/off.
  31:../../libdaisy/src/hid/disp/oled_display.h ****     \param on Sets on or off.
  32:../../libdaisy/src/hid/disp/oled_display.h ****     */
  33:../../libdaisy/src/hid/disp/oled_display.h ****     void Fill(bool on) override { driver_.Fill(on); }
 458              		.loc 5 33 10 is_stmt 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LBB693:
 464              	.LBI693:
 465              		.file 26 "../../libdaisy/src/dev/oled_ssd130x.h"
   1:../../libdaisy/src/dev/oled_ssd130x.h **** #pragma once
   2:../../libdaisy/src/dev/oled_ssd130x.h **** #ifndef SA_OLED_SSD130X_H
   3:../../libdaisy/src/dev/oled_ssd130x.h **** #define SA_OLED_SSD130X_H /**< & */
   4:../../libdaisy/src/dev/oled_ssd130x.h **** 
   5:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/i2c.h"
   6:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/spi.h"
   7:../../libdaisy/src/dev/oled_ssd130x.h **** #include "per/gpio.h"
   8:../../libdaisy/src/dev/oled_ssd130x.h **** #include "sys/system.h"
   9:../../libdaisy/src/dev/oled_ssd130x.h **** 
  10:../../libdaisy/src/dev/oled_ssd130x.h **** namespace daisy
  11:../../libdaisy/src/dev/oled_ssd130x.h **** {
  12:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  13:../../libdaisy/src/dev/oled_ssd130x.h ****  * I2C Transport for SSD1306 / SSD1309 OLED display devices
  14:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  15:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xI2CTransport
  16:../../libdaisy/src/dev/oled_ssd130x.h **** {
  17:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  18:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  19:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  20:../../libdaisy/src/dev/oled_ssd130x.h ****         I2CHandle::Config i2c_config;
  21:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t           i2c_address;
  22:../../libdaisy/src/dev/oled_ssd130x.h ****         void              Defaults()
  23:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  24:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.periph         = I2CHandle::Config::Peripheral::I2C_1;
  25:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.speed          = I2CHandle::Config::Speed::I2C_1MHZ;
  26:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.mode           = I2CHandle::Config::Mode::I2C_MASTER;
  27:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.scl = {DSY_GPIOB, 8};
  28:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_config.pin_config.sda = {DSY_GPIOB, 9};
  29:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_address               = 0x3C;
  30:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  31:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  32:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  33:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  34:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_address_ = config.i2c_address;
ARM GAS  /tmp/ccUsbZWH.s 			page 56


  35:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.Init(config.i2c_config);
  36:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  37:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
  38:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  39:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t buf[2] = {0X00, cmd};
  40:../../libdaisy/src/dev/oled_ssd130x.h ****         i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  41:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  42:../../libdaisy/src/dev/oled_ssd130x.h **** 
  43:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
  44:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  45:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < size; i++)
  46:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  47:../../libdaisy/src/dev/oled_ssd130x.h ****             uint8_t buf[2] = {0X40, buff[i]};
  48:../../libdaisy/src/dev/oled_ssd130x.h ****             i2c_.TransmitBlocking(i2c_address_, buf, 2, 1000);
  49:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  50:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  51:../../libdaisy/src/dev/oled_ssd130x.h **** 
  52:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
  53:../../libdaisy/src/dev/oled_ssd130x.h ****     daisy::I2CHandle i2c_;
  54:../../libdaisy/src/dev/oled_ssd130x.h ****     uint8_t          i2c_address_;
  55:../../libdaisy/src/dev/oled_ssd130x.h **** };
  56:../../libdaisy/src/dev/oled_ssd130x.h **** 
  57:../../libdaisy/src/dev/oled_ssd130x.h **** /**
  58:../../libdaisy/src/dev/oled_ssd130x.h ****  * 4 Wire SPI Transport for SSD1306 / SSD1309 OLED display devices
  59:../../libdaisy/src/dev/oled_ssd130x.h ****  */
  60:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130x4WireSpiTransport
  61:../../libdaisy/src/dev/oled_ssd130x.h **** {
  62:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
  63:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
  64:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  65:../../libdaisy/src/dev/oled_ssd130x.h ****         struct
  66:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  67:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin dc;    /**< & */
  68:../../libdaisy/src/dev/oled_ssd130x.h ****             dsy_gpio_pin reset; /**< & */
  69:../../libdaisy/src/dev/oled_ssd130x.h ****         } pin_config;
  70:../../libdaisy/src/dev/oled_ssd130x.h ****         void Defaults()
  71:../../libdaisy/src/dev/oled_ssd130x.h ****         {
  72:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.dc    = {DSY_GPIOB, 4};
  73:../../libdaisy/src/dev/oled_ssd130x.h ****             pin_config.reset = {DSY_GPIOB, 15};
  74:../../libdaisy/src/dev/oled_ssd130x.h ****         }
  75:../../libdaisy/src/dev/oled_ssd130x.h ****     };
  76:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(const Config& config)
  77:../../libdaisy/src/dev/oled_ssd130x.h ****     {
  78:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize both GPIO
  79:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  80:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_dc_.pin  = config.pin_config.dc;
  81:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_dc_);
  82:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.mode = DSY_GPIO_MODE_OUTPUT_PP;
  83:../../libdaisy/src/dev/oled_ssd130x.h ****         pin_reset_.pin  = config.pin_config.reset;
  84:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_init(&pin_reset_);
  85:../../libdaisy/src/dev/oled_ssd130x.h ****         // Initialize SPI
  86:../../libdaisy/src/dev/oled_ssd130x.h ****         SpiHandle::Config spi_config;
  87:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.periph    = SpiHandle::Config::Peripheral::SPI_1;
  88:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.mode      = SpiHandle::Config::Mode::MASTER;
  89:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.direction = SpiHandle::Config::Direction::TWO_LINES_TX_ONLY;
  90:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.datasize  = 8;
  91:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_polarity = SpiHandle::Config::ClockPolarity::LOW;
ARM GAS  /tmp/ccUsbZWH.s 			page 57


  92:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.clock_phase    = SpiHandle::Config::ClockPhase::ONE_EDGE;
  93:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.nss            = SpiHandle::Config::NSS::HARD_OUTPUT;
  94:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.baud_prescaler = SpiHandle::Config::BaudPrescaler::PS_8;
  95:../../libdaisy/src/dev/oled_ssd130x.h **** 
  96:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.sclk = {DSY_GPIOG, 11};
  97:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.miso = {DSY_GPIOX, 0};
  98:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.mosi = {DSY_GPIOB, 5};
  99:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_config.pin_config.nss  = {DSY_GPIOG, 10};
 100:../../libdaisy/src/dev/oled_ssd130x.h **** 
 101:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.Init(spi_config);
 102:../../libdaisy/src/dev/oled_ssd130x.h **** 
 103:../../libdaisy/src/dev/oled_ssd130x.h ****         // Reset and Configure OLED.
 104:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 0);
 105:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 106:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_reset_, 1);
 107:../../libdaisy/src/dev/oled_ssd130x.h ****         System::Delay(10);
 108:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendCommand(uint8_t cmd)
 110:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 0);
 112:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 113:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 114:../../libdaisy/src/dev/oled_ssd130x.h **** 
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     void SendData(uint8_t* buff, size_t size)
 116:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         dsy_gpio_write(&pin_dc_, 1);
 118:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 119:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 120:../../libdaisy/src/dev/oled_ssd130x.h **** 
 121:../../libdaisy/src/dev/oled_ssd130x.h ****   private:
 122:../../libdaisy/src/dev/oled_ssd130x.h ****     SpiHandle spi_;
 123:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_reset_;
 124:../../libdaisy/src/dev/oled_ssd130x.h ****     dsy_gpio  pin_dc_;
 125:../../libdaisy/src/dev/oled_ssd130x.h **** };
 126:../../libdaisy/src/dev/oled_ssd130x.h **** 
 127:../../libdaisy/src/dev/oled_ssd130x.h **** 
 128:../../libdaisy/src/dev/oled_ssd130x.h **** /**
 129:../../libdaisy/src/dev/oled_ssd130x.h ****  * A driver implementation for the SSD1306/SSD1309
 130:../../libdaisy/src/dev/oled_ssd130x.h ****  */
 131:../../libdaisy/src/dev/oled_ssd130x.h **** template <size_t width, size_t height, typename Transport>
 132:../../libdaisy/src/dev/oled_ssd130x.h **** class SSD130xDriver
 133:../../libdaisy/src/dev/oled_ssd130x.h **** {
 134:../../libdaisy/src/dev/oled_ssd130x.h ****   public:
 135:../../libdaisy/src/dev/oled_ssd130x.h ****     struct Config
 136:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 137:../../libdaisy/src/dev/oled_ssd130x.h ****         typename Transport::Config transport_config;
 138:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 139:../../libdaisy/src/dev/oled_ssd130x.h **** 
 140:../../libdaisy/src/dev/oled_ssd130x.h ****     void Init(Config config)
 141:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 142:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.Init(config.transport_config);
 143:../../libdaisy/src/dev/oled_ssd130x.h **** 
 144:../../libdaisy/src/dev/oled_ssd130x.h ****         // Init routine...
 145:../../libdaisy/src/dev/oled_ssd130x.h **** 
 146:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Off
 147:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xaE);
 148:../../libdaisy/src/dev/oled_ssd130x.h ****         // Dimension dependent commands...
ARM GAS  /tmp/ccUsbZWH.s 			page 58


 149:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 150:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 151:../../libdaisy/src/dev/oled_ssd130x.h ****             case 16:
 152:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 153:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 154:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x60);
 155:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 156:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 157:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x0F);
 158:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 159:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 160:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x02);
 161:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 162:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32:
 163:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 164:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 165:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 166:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 167:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 168:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x1F);
 169:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 170:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 171:../../libdaisy/src/dev/oled_ssd130x.h ****                 if(width == 64)
 172:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 173:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x12);
 174:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 175:../../libdaisy/src/dev/oled_ssd130x.h ****                 else
 176:../../libdaisy/src/dev/oled_ssd130x.h ****                 {
 177:../../libdaisy/src/dev/oled_ssd130x.h ****                     transport_.SendCommand(0x02);
 178:../../libdaisy/src/dev/oled_ssd130x.h ****                 }
 179:../../libdaisy/src/dev/oled_ssd130x.h **** 
 180:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 181:../../libdaisy/src/dev/oled_ssd130x.h ****             case 48:
 182:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 183:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 184:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 185:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 186:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 187:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x2F);
 188:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 189:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 190:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 191:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 192:../../libdaisy/src/dev/oled_ssd130x.h ****             default: // 128
 193:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Display Clock Divide Ratio
 194:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xD5);
 195:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x80);
 196:../../libdaisy/src/dev/oled_ssd130x.h ****                 // Multiplex Ratio
 197:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xA8);
 198:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x3F);
 199:../../libdaisy/src/dev/oled_ssd130x.h ****                 // COM Pins
 200:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0xDA);
 201:../../libdaisy/src/dev/oled_ssd130x.h ****                 transport_.SendCommand(0x12);
 202:../../libdaisy/src/dev/oled_ssd130x.h ****                 break;
 203:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 204:../../libdaisy/src/dev/oled_ssd130x.h **** 
 205:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display Offset
ARM GAS  /tmp/ccUsbZWH.s 			page 59


 206:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD3);
 207:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x00);
 208:../../libdaisy/src/dev/oled_ssd130x.h ****         // Start Line Address
 209:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x40);
 210:../../libdaisy/src/dev/oled_ssd130x.h ****         // Normal Display
 211:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA6);
 212:../../libdaisy/src/dev/oled_ssd130x.h ****         // All On Resume
 213:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA4);
 214:../../libdaisy/src/dev/oled_ssd130x.h ****         // Charge Pump
 215:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8D);
 216:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x14);
 217:../../libdaisy/src/dev/oled_ssd130x.h ****         // Set Segment Remap
 218:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xA1);
 219:../../libdaisy/src/dev/oled_ssd130x.h ****         // COM Output Scan Direction
 220:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xC8);
 221:../../libdaisy/src/dev/oled_ssd130x.h ****         // Contrast Control
 222:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x81);
 223:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x8F);
 224:../../libdaisy/src/dev/oled_ssd130x.h ****         // Pre Charge
 225:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xD9);
 226:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x25);
 227:../../libdaisy/src/dev/oled_ssd130x.h ****         // VCOM Detect
 228:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xDB);
 229:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0x34);
 230:../../libdaisy/src/dev/oled_ssd130x.h **** 
 231:../../libdaisy/src/dev/oled_ssd130x.h **** 
 232:../../libdaisy/src/dev/oled_ssd130x.h ****         // Display On
 233:../../libdaisy/src/dev/oled_ssd130x.h ****         transport_.SendCommand(0xAF); //--turn on oled panel
 234:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 235:../../libdaisy/src/dev/oled_ssd130x.h **** 
 236:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Width() const { return width; };
 237:../../libdaisy/src/dev/oled_ssd130x.h ****     size_t Height() const { return height; };
 238:../../libdaisy/src/dev/oled_ssd130x.h **** 
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on)
 240:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 241:../../libdaisy/src/dev/oled_ssd130x.h ****         if(x >= width || y >= height)
 242:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 243:../../libdaisy/src/dev/oled_ssd130x.h ****         if(on)
 244:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 245:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 246:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] &= ~(1 << (y % 8));
 247:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 248:../../libdaisy/src/dev/oled_ssd130x.h **** 
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     void Fill(bool on)
 466              		.loc 26 249 10 view .LVU90
 467              	.LBB694:
 250:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         for(size_t i = 0; i < sizeof(buffer_); i++)
 468              		.loc 26 251 29 view .LVU91
 469 0000 00F11403 		add	r3, r0, #20
 470 0004 00F21440 		addw	r0, r0, #1044
 471              	.LVL22:
 472              	.L13:
 252:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 253:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[i] = on ? 0xff : 0x00;
 473              		.loc 26 253 13 is_stmt 0 view .LVU92
 474 0008 4A42     		rsbs	r2, r1, #0
ARM GAS  /tmp/ccUsbZWH.s 			page 60


 475 000a 03F8012B 		strb	r2, [r3], #1
 476              	.LVL23:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 477              		.loc 26 251 9 is_stmt 1 view .LVU93
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 478              		.loc 26 251 29 view .LVU94
 479 000e 8342     		cmp	r3, r0
 480 0010 FAD1     		bne	.L13
 481              	.LBE694:
 482              	.LBE693:
 483              		.loc 5 33 53 is_stmt 0 view .LVU95
 484 0012 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE5007:
 488              		.section	.text._ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE,"axG"
 489              		.align	1
 490              		.weak	_ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv5-d16
 496              	_ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE:
 497              	.LVL24:
 498              	.LFB5228:
 188:../../libdaisy/src/dev/leddriver.h ****     uint16_t GetStartCycleForLed(int ledIndex) const
 189:../../libdaisy/src/dev/leddriver.h ****     {
 190:../../libdaisy/src/dev/leddriver.h ****         return (ledIndex << 2) & 0x0FFF; // shift each led by 4 cycles
 191:../../libdaisy/src/dev/leddriver.h ****     }
 192:../../libdaisy/src/dev/leddriver.h **** 
 193:../../libdaisy/src/dev/leddriver.h ****     uint8_t GetDriverForLed(int ledIndex) const { return ledIndex >> 4; }
 194:../../libdaisy/src/dev/leddriver.h **** 
 195:../../libdaisy/src/dev/leddriver.h ****     uint8_t GetDriverChannelForLed(int ledIndex) const
 196:../../libdaisy/src/dev/leddriver.h ****     {
 197:../../libdaisy/src/dev/leddriver.h ****         return ledIndex & 0x0F;
 198:../../libdaisy/src/dev/leddriver.h ****     }
 199:../../libdaisy/src/dev/leddriver.h **** 
 200:../../libdaisy/src/dev/leddriver.h ****     void InitializeBuffers()
 201:../../libdaisy/src/dev/leddriver.h ****     {
 202:../../libdaisy/src/dev/leddriver.h ****         for(int led = 0; led < GetNumLeds(); led++)
 203:../../libdaisy/src/dev/leddriver.h ****         {
 204:../../libdaisy/src/dev/leddriver.h ****             const auto d                     = GetDriverForLed(led);
 205:../../libdaisy/src/dev/leddriver.h ****             const auto ch                    = GetDriverChannelForLed(led);
 206:../../libdaisy/src/dev/leddriver.h ****             const auto startCycle            = GetStartCycleForLed(led);
 207:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].registerAddr     = PCA9685_LED0;
 208:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].leds[ch].on      = startCycle;
 209:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].leds[ch].off     = startCycle;
 210:../../libdaisy/src/dev/leddriver.h ****             transmit_buffer_[d].registerAddr = PCA9685_LED0;
 211:../../libdaisy/src/dev/leddriver.h ****             transmit_buffer_[d].leds[ch].on  = startCycle;
 212:../../libdaisy/src/dev/leddriver.h ****             transmit_buffer_[d].leds[ch].off = startCycle;
 213:../../libdaisy/src/dev/leddriver.h ****         }
 214:../../libdaisy/src/dev/leddriver.h ****     }
 215:../../libdaisy/src/dev/leddriver.h **** 
 216:../../libdaisy/src/dev/leddriver.h ****     void InitializeDrivers()
 217:../../libdaisy/src/dev/leddriver.h ****     {
 218:../../libdaisy/src/dev/leddriver.h ****         // init OE pin and pull low to enable outputs
 219:../../libdaisy/src/dev/leddriver.h ****         if(oe_pin_.port != DSY_GPIOX)
 220:../../libdaisy/src/dev/leddriver.h ****         {
ARM GAS  /tmp/ccUsbZWH.s 			page 61


 221:../../libdaisy/src/dev/leddriver.h ****             oe_pin_gpio_.pin  = oe_pin_;
 222:../../libdaisy/src/dev/leddriver.h ****             oe_pin_gpio_.mode = DSY_GPIO_MODE_OUTPUT_PP;
 223:../../libdaisy/src/dev/leddriver.h ****             oe_pin_gpio_.pull = DSY_GPIO_NOPULL;
 224:../../libdaisy/src/dev/leddriver.h ****             dsy_gpio_init(&oe_pin_gpio_);
 225:../../libdaisy/src/dev/leddriver.h ****             dsy_gpio_write(&oe_pin_gpio_, 0);
 226:../../libdaisy/src/dev/leddriver.h ****         }
 227:../../libdaisy/src/dev/leddriver.h **** 
 228:../../libdaisy/src/dev/leddriver.h ****         // init the individual drivers
 229:../../libdaisy/src/dev/leddriver.h ****         for(int d = 0; d < numDrivers; d++)
 230:../../libdaisy/src/dev/leddriver.h ****         {
 231:../../libdaisy/src/dev/leddriver.h ****             const uint8_t address = PCA9685_I2C_BASE_ADDRESS | addresses_[d];
 232:../../libdaisy/src/dev/leddriver.h ****             uint8_t       buffer[2];
 233:../../libdaisy/src/dev/leddriver.h ****             buffer[0] = PCA9685_MODE1;
 234:../../libdaisy/src/dev/leddriver.h ****             buffer[1] = 0x00;
 235:../../libdaisy/src/dev/leddriver.h ****             i2c_.TransmitBlocking(address, buffer, 2, 1);
 236:../../libdaisy/src/dev/leddriver.h ****             System::Delay(20);
 237:../../libdaisy/src/dev/leddriver.h ****             buffer[0] = PCA9685_MODE1;
 238:../../libdaisy/src/dev/leddriver.h ****             buffer[1] = 0x00;
 239:../../libdaisy/src/dev/leddriver.h ****             i2c_.TransmitBlocking(address, buffer, 2, 1);
 240:../../libdaisy/src/dev/leddriver.h ****             System::Delay(20);
 241:../../libdaisy/src/dev/leddriver.h ****             buffer[0] = PCA9685_MODE1;
 242:../../libdaisy/src/dev/leddriver.h ****             // auto increment on
 243:../../libdaisy/src/dev/leddriver.h ****             buffer[1] = 0b00100000;
 244:../../libdaisy/src/dev/leddriver.h ****             i2c_.TransmitBlocking(address, buffer, 2, 1);
 245:../../libdaisy/src/dev/leddriver.h ****             System::Delay(20);
 246:../../libdaisy/src/dev/leddriver.h ****             buffer[0] = PCA9685_MODE2;
 247:../../libdaisy/src/dev/leddriver.h ****             // OE-high = high Impedance
 248:../../libdaisy/src/dev/leddriver.h ****             // Push-Pull outputs
 249:../../libdaisy/src/dev/leddriver.h ****             // outputs change on STOP
 250:../../libdaisy/src/dev/leddriver.h ****             // outputs inverted
 251:../../libdaisy/src/dev/leddriver.h ****             buffer[1] = 0b000110110;
 252:../../libdaisy/src/dev/leddriver.h ****             i2c_.TransmitBlocking(address, buffer, 2, 5);
 253:../../libdaisy/src/dev/leddriver.h ****         }
 254:../../libdaisy/src/dev/leddriver.h ****     }
 255:../../libdaisy/src/dev/leddriver.h **** 
 256:../../libdaisy/src/dev/leddriver.h ****     // no std::clamp available in C++14.... remove this when C++17 is available
 257:../../libdaisy/src/dev/leddriver.h ****     template <typename T>
 258:../../libdaisy/src/dev/leddriver.h ****     T clamp(T in, T low, T high)
 259:../../libdaisy/src/dev/leddriver.h ****     {
 260:../../libdaisy/src/dev/leddriver.h ****         return (in < low) ? low : (high < in) ? high : in;
 261:../../libdaisy/src/dev/leddriver.h ****     }
 262:../../libdaisy/src/dev/leddriver.h **** 
 263:../../libdaisy/src/dev/leddriver.h ****     // an internal function to handle i2c callbacks
 264:../../libdaisy/src/dev/leddriver.h ****     // called when an I2C transmission completes and the next driver must be updated
 265:../../libdaisy/src/dev/leddriver.h ****     static void TxCpltCallback(void* context, I2CHandle::Result result)
 499              		.loc 25 265 17 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504              	.LBB697:
 505              	.LBI697:
 165:../../libdaisy/src/dev/leddriver.h ****     {
 506              		.loc 25 165 10 view .LVU97
 507              	.LBB698:
 167:../../libdaisy/src/dev/leddriver.h ****         if(current_driver_idx_ >= numDrivers)
 508              		.loc 25 167 9 is_stmt 0 view .LVU98
ARM GAS  /tmp/ccUsbZWH.s 			page 62


 509 0000 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 510 0002 0132     		adds	r2, r2, #1
 511 0004 52B2     		sxtb	r2, r2
 512 0006 0275     		strb	r2, [r0, #20]
 168:../../libdaisy/src/dev/leddriver.h ****         {
 513              		.loc 25 168 12 view .LVU99
 514 0008 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
 515 000a 52B2     		sxtb	r2, r2
 168:../../libdaisy/src/dev/leddriver.h ****         {
 516              		.loc 25 168 9 view .LVU100
 517 000c 012A     		cmp	r2, #1
 518 000e 02DD     		ble	.L16
 170:../../libdaisy/src/dev/leddriver.h ****             return;
 519              		.loc 25 170 13 view .LVU101
 520 0010 FF22     		movs	r2, #255
 521 0012 0275     		strb	r2, [r0, #20]
 522              	.LBE698:
 523              	.LBE697:
 266:../../libdaisy/src/dev/leddriver.h ****     {
 267:../../libdaisy/src/dev/leddriver.h ****         auto drv_ptr = reinterpret_cast<
 268:../../libdaisy/src/dev/leddriver.h ****             LedDriverPca9685<numDrivers, persistentBufferContents>*>(context);
 269:../../libdaisy/src/dev/leddriver.h ****         drv_ptr->ContinueTransmission();
 270:../../libdaisy/src/dev/leddriver.h ****     }
 524              		.loc 25 270 5 view .LVU102
 525 0014 7047     		bx	lr
 526              	.L16:
 527              	.LBB700:
 528              	.LBB699:
 529 0016 FFF7FEBF 		b	_ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0
 530              	.LVL25:
 531              		.loc 25 270 5 view .LVU103
 532              	.LBE699:
 533              	.LBE700:
 534              		.cfi_endproc
 535              	.LFE5228:
 537              		.section	.text._ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt,"axG",%progbits,_ZN5daisy21OneBitGrap
 538              		.align	1
 539              		.weak	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu fpv5-d16
 545              	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt:
 546              	.LVL26:
 547              	.LFB1711:
 171:../../libdaisy/src/hid/disp/display.h ****     {
 548              		.loc 6 171 10 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 552              		.loc 6 173 9 view .LVU105
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 553              		.loc 6 173 33 is_stmt 0 view .LVU106
 554 0000 0368     		ldr	r3, [r0]
 171:../../libdaisy/src/hid/disp/display.h ****     {
 555              		.loc 6 171 10 view .LVU107
ARM GAS  /tmp/ccUsbZWH.s 			page 63


 556 0002 70B5     		push	{r4, r5, r6, lr}
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 4, -16
 559              		.cfi_offset 5, -12
 560              		.cfi_offset 6, -8
 561              		.cfi_offset 14, -4
 171:../../libdaisy/src/hid/disp/display.h ****     {
 562              		.loc 6 171 10 view .LVU108
 563 0004 0E46     		mov	r6, r1
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 564              		.loc 6 173 32 view .LVU109
 565 0006 DB68     		ldr	r3, [r3, #12]
 171:../../libdaisy/src/hid/disp/display.h ****     {
 566              		.loc 6 171 10 view .LVU110
 567 0008 0446     		mov	r4, r0
 568 000a 1546     		mov	r5, r2
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 569              		.loc 6 173 32 view .LVU111
 570 000c 9847     		blx	r3
 571              	.LVL27:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 572              		.loc 6 173 19 view .LVU112
 573 000e B042     		cmp	r0, r6
 574 0010 05D8     		bhi	.L20
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 575              		.loc 6 173 44 discriminator 1 view .LVU113
 576 0012 2368     		ldr	r3, [r4]
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 577              		.loc 6 173 43 discriminator 1 view .LVU114
 578 0014 2046     		mov	r0, r4
 579 0016 DB68     		ldr	r3, [r3, #12]
 580 0018 9847     		blx	r3
 581              	.LVL28:
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 582              		.loc 6 173 19 discriminator 1 view .LVU115
 583 001a 0138     		subs	r0, r0, #1
 584 001c 86B2     		uxth	r6, r0
 585              	.L20:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 586              		.loc 6 174 34 discriminator 4 view .LVU116
 587 001e 2368     		ldr	r3, [r4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 588              		.loc 6 174 33 discriminator 4 view .LVU117
 589 0020 2046     		mov	r0, r4
 173:../../libdaisy/src/hid/disp/display.h ****         currentY_ = (y >= Height()) ? Height() - 1 : y;
 590              		.loc 6 173 19 discriminator 4 view .LVU118
 591 0022 A680     		strh	r6, [r4, #4]	@ movhi
 174:../../libdaisy/src/hid/disp/display.h ****     }
 592              		.loc 6 174 9 is_stmt 1 discriminator 4 view .LVU119
 174:../../libdaisy/src/hid/disp/display.h ****     }
 593              		.loc 6 174 33 is_stmt 0 discriminator 4 view .LVU120
 594 0024 9B68     		ldr	r3, [r3, #8]
 595 0026 9847     		blx	r3
 596              	.LVL29:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 597              		.loc 6 174 19 discriminator 4 view .LVU121
 598 0028 A842     		cmp	r0, r5
ARM GAS  /tmp/ccUsbZWH.s 			page 64


 599 002a 05D8     		bhi	.L21
 174:../../libdaisy/src/hid/disp/display.h ****     }
 600              		.loc 6 174 46 discriminator 1 view .LVU122
 601 002c 2368     		ldr	r3, [r4]
 174:../../libdaisy/src/hid/disp/display.h ****     }
 602              		.loc 6 174 45 discriminator 1 view .LVU123
 603 002e 2046     		mov	r0, r4
 604 0030 9B68     		ldr	r3, [r3, #8]
 605 0032 9847     		blx	r3
 606              	.LVL30:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 607              		.loc 6 174 19 discriminator 1 view .LVU124
 608 0034 0138     		subs	r0, r0, #1
 609 0036 85B2     		uxth	r5, r0
 610              	.L21:
 174:../../libdaisy/src/hid/disp/display.h ****     }
 611              		.loc 6 174 19 discriminator 4 view .LVU125
 612 0038 E580     		strh	r5, [r4, #6]	@ movhi
 175:../../libdaisy/src/hid/disp/display.h **** 
 613              		.loc 6 175 5 discriminator 4 view .LVU126
 614 003a 70BD     		pop	{r4, r5, r6, pc}
 175:../../libdaisy/src/hid/disp/display.h **** 
 615              		.loc 6 175 5 discriminator 4 view .LVU127
 616              		.cfi_endproc
 617              	.LFE1711:
 619              		.section	.text._ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh,"axG",%progbits,_ZN5daisy24SSD13
 620              		.align	1
 621              		.weak	_ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh
 622              		.syntax unified
 623              		.thumb
 624              		.thumb_func
 625              		.fpu fpv5-d16
 627              	_ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh:
 628              	.LVL31:
 629              	.LFB2048:
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 630              		.loc 26 109 10 is_stmt 1 view -0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 8
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 634              		.loc 26 111 9 view .LVU129
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 635              		.loc 26 109 10 is_stmt 0 view .LVU130
 636 0000 13B5     		push	{r0, r1, r4, lr}
 637              		.cfi_def_cfa_offset 16
 638              		.cfi_offset 4, -8
 639              		.cfi_offset 14, -4
 109:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 640              		.loc 26 109 10 view .LVU131
 641 0002 0446     		mov	r4, r0
 642 0004 8DF80710 		strb	r1, [sp, #7]
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 643              		.loc 26 111 23 view .LVU132
 644 0008 0830     		adds	r0, r0, #8
 645              	.LVL32:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
ARM GAS  /tmp/ccUsbZWH.s 			page 65


 646              		.loc 26 111 23 view .LVU133
 647 000a 0021     		movs	r1, #0
 648              	.LVL33:
 111:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(&cmd, 1);
 649              		.loc 26 111 23 view .LVU134
 650 000c FFF7FEFF 		bl	dsy_gpio_write
 651              	.LVL34:
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 652              		.loc 26 112 9 is_stmt 1 view .LVU135
 112:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 653              		.loc 26 112 30 is_stmt 0 view .LVU136
 654 0010 6423     		movs	r3, #100
 655 0012 0122     		movs	r2, #1
 656 0014 0DF10701 		add	r1, sp, #7
 657 0018 2046     		mov	r0, r4
 658 001a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 659              	.LVL35:
 113:../../libdaisy/src/dev/oled_ssd130x.h **** 
 660              		.loc 26 113 5 view .LVU137
 661 001e 02B0     		add	sp, sp, #8
 662              		.cfi_def_cfa_offset 8
 663              		@ sp needed
 664 0020 10BD     		pop	{r4, pc}
 113:../../libdaisy/src/dev/oled_ssd130x.h **** 
 665              		.loc 26 113 5 view .LVU138
 666              		.cfi_endproc
 667              	.LFE2048:
 669              		.section	.text._ZN23GranularProcessorClouds11set_qualityEl,"axG",%progbits,_ZN23GranularProcessorC
 670              		.align	1
 671              		.weak	_ZN23GranularProcessorClouds11set_qualityEl
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 675              		.fpu fpv5-d16
 677              	_ZN23GranularProcessorClouds11set_qualityEl:
 678              	.LVL36:
 679              	.LFB4506:
  79:dsp/granular_processor.h **** 
  80:dsp/granular_processor.h ****     void Init(float  sample_rate,
  81:dsp/granular_processor.h ****               void*  large_buffer,
  82:dsp/granular_processor.h ****               size_t large_buffer_size,
  83:dsp/granular_processor.h ****               void*  small_buffer,
  84:dsp/granular_processor.h ****               size_t small_buffer_size);
  85:dsp/granular_processor.h **** 
  86:dsp/granular_processor.h ****     void Process(FloatFrame* input, FloatFrame* output, size_t size);
  87:dsp/granular_processor.h ****     void Prepare();
  88:dsp/granular_processor.h **** 
  89:dsp/granular_processor.h ****     inline Parameters* mutable_parameters() { return &parameters_; }
  90:dsp/granular_processor.h **** 
  91:dsp/granular_processor.h ****     inline const Parameters& parameters() const { return parameters_; }
  92:dsp/granular_processor.h **** 
  93:dsp/granular_processor.h ****     inline void ToggleFreeze() { parameters_.freeze = !parameters_.freeze; }
  94:dsp/granular_processor.h **** 
  95:dsp/granular_processor.h ****     inline void set_freeze(bool freeze) { parameters_.freeze = freeze; }
  96:dsp/granular_processor.h **** 
  97:dsp/granular_processor.h ****     inline bool frozen() const { return parameters_.freeze; }
  98:dsp/granular_processor.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 66


  99:dsp/granular_processor.h ****     inline void set_silence(bool silence) { silence_ = silence; }
 100:dsp/granular_processor.h **** 
 101:dsp/granular_processor.h ****     inline void set_bypass(bool bypass) { bypass_ = bypass; }
 102:dsp/granular_processor.h **** 
 103:dsp/granular_processor.h ****     inline bool bypass() const { return bypass_; }
 104:dsp/granular_processor.h **** 
 105:dsp/granular_processor.h ****     inline void set_playback_mode(PlaybackMode playback_mode)
 106:dsp/granular_processor.h ****     {
 107:dsp/granular_processor.h ****         playback_mode_ = playback_mode;
 108:dsp/granular_processor.h ****     }
 109:dsp/granular_processor.h **** 
 110:dsp/granular_processor.h ****     inline PlaybackMode playback_mode() const { return playback_mode_; }
 111:dsp/granular_processor.h **** 
 112:dsp/granular_processor.h ****     inline void set_quality(int32_t quality)
 680              		.loc 12 112 17 is_stmt 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 113:dsp/granular_processor.h ****     {
 114:dsp/granular_processor.h ****         set_num_channels(quality & 1 ? 1 : 2);
 685              		.loc 12 114 9 view .LVU140
 686              		.loc 12 114 34 is_stmt 0 view .LVU141
 687 0000 01F00102 		and	r2, r1, #1
 688              	.LBB705:
 689              	.LBB706:
 115:dsp/granular_processor.h ****         set_low_fidelity(quality >> 1 ? true : false);
 116:dsp/granular_processor.h ****     }
 117:dsp/granular_processor.h **** 
 118:dsp/granular_processor.h ****     inline void set_num_channels(int32_t num_channels)
 119:dsp/granular_processor.h ****     {
 120:dsp/granular_processor.h ****         reset_buffers_ = reset_buffers_ || num_channels_ != num_channels;
 690              		.loc 12 120 26 view .LVU142
 691 0004 837C     		ldrb	r3, [r0, #18]	@ zero_extendqisi2
 692              	.LBE706:
 693              	.LBE705:
 114:dsp/granular_processor.h ****         set_low_fidelity(quality >> 1 ? true : false);
 694              		.loc 12 114 25 view .LVU143
 695 0006 C2F10202 		rsb	r2, r2, #2
 696              	.LVL37:
 697              	.LBB708:
 698              	.LBI705:
 118:dsp/granular_processor.h ****     {
 699              		.loc 12 118 17 is_stmt 1 view .LVU144
 700              	.LBB707:
 701              		.loc 12 120 9 view .LVU145
 702              		.loc 12 120 41 is_stmt 0 view .LVU146
 703 000a 1BB9     		cbnz	r3, .L24
 704 000c 4368     		ldr	r3, [r0, #4]
 705 000e 9B1A     		subs	r3, r3, r2
 706 0010 18BF     		it	ne
 707 0012 0123     		movne	r3, #1
 708              	.L24:
 121:dsp/granular_processor.h ****         num_channels_  = num_channels;
 709              		.loc 12 121 9 is_stmt 1 view .LVU147
 710              		.loc 12 121 24 is_stmt 0 view .LVU148
 711 0014 4260     		str	r2, [r0, #4]
ARM GAS  /tmp/ccUsbZWH.s 			page 67


 712              	.LVL38:
 713              		.loc 12 121 24 view .LVU149
 714              	.LBE707:
 715              	.LBE708:
 115:dsp/granular_processor.h ****     }
 716              		.loc 12 115 9 is_stmt 1 view .LVU150
 115:dsp/granular_processor.h ****     }
 717              		.loc 12 115 25 is_stmt 0 view .LVU151
 718 0016 4A08     		lsrs	r2, r1, #1
 719 0018 14BF     		ite	ne
 720 001a 0122     		movne	r2, #1
 721 001c 0022     		moveq	r2, #0
 722              	.LVL39:
 723              	.LBB709:
 724              	.LBI709:
 122:dsp/granular_processor.h ****     }
 123:dsp/granular_processor.h **** 
 124:dsp/granular_processor.h ****     inline void set_low_fidelity(bool low_fidelity)
 725              		.loc 12 124 17 is_stmt 1 view .LVU152
 726              	.LBB710:
 125:dsp/granular_processor.h ****     {
 126:dsp/granular_processor.h ****         reset_buffers_ = reset_buffers_ || low_fidelity != low_fidelity_;
 727              		.loc 12 126 9 view .LVU153
 728              		.loc 12 126 41 is_stmt 0 view .LVU154
 729 001e 0BB9     		cbnz	r3, .L25
 730              		.loc 12 126 41 view .LVU155
 731 0020 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 732 0022 5340     		eors	r3, r3, r2
 733              	.L25:
 734              		.loc 12 126 24 view .LVU156
 735 0024 8374     		strb	r3, [r0, #18]
 127:dsp/granular_processor.h ****         low_fidelity_  = low_fidelity;
 736              		.loc 12 127 9 is_stmt 1 view .LVU157
 737              		.loc 12 127 24 is_stmt 0 view .LVU158
 738 0026 0272     		strb	r2, [r0, #8]
 739              	.LVL40:
 740              		.loc 12 127 24 view .LVU159
 741              	.LBE710:
 742              	.LBE709:
 116:dsp/granular_processor.h **** 
 743              		.loc 12 116 5 view .LVU160
 744 0028 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE4506:
 748              		.section	.text._ZN12ParamControl13ControlChangeEf,"axG",%progbits,_ZN12ParamControl13ControlChange
 749              		.align	1
 750              		.weak	_ZN12ParamControl13ControlChangeEf
 751              		.syntax unified
 752              		.thumb
 753              		.thumb_func
 754              		.fpu fpv5-d16
 756              	_ZN12ParamControl13ControlChangeEf:
 757              	.LVL41:
 758              	.LFB4521:
 158:Nimbus.cpp    ****     {
 759              		.loc 24 158 10 is_stmt 1 view -0
 760              		.cfi_startproc
ARM GAS  /tmp/ccUsbZWH.s 			page 68


 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
 160:Nimbus.cpp    ****         param_val_ = newval;
 764              		.loc 24 160 9 view .LVU162
 160:Nimbus.cpp    ****         param_val_ = newval;
 765              		.loc 24 160 35 is_stmt 0 view .LVU163
 766 0000 D0ED077A 		vldr.32	s15, [r0, #28]
 160:Nimbus.cpp    ****         param_val_ = newval;
 767              		.loc 24 160 14 view .LVU164
 768 0004 9FED097A 		vldr.32	s14, .L27
 160:Nimbus.cpp    ****         param_val_ = newval;
 769              		.loc 24 160 35 view .LVU165
 770 0008 70EE677A 		vsub.f32	s15, s0, s15
 161:Nimbus.cpp    ****         if(ret)
 771              		.loc 24 161 20 view .LVU166
 772 000c 80ED070A 		vstr.32	s0, [r0, #28]
 160:Nimbus.cpp    ****         param_val_ = newval;
 773              		.loc 24 160 27 view .LVU167
 774 0010 F0EEE77A 		vabs.f32	s15, s15
 160:Nimbus.cpp    ****         param_val_ = newval;
 775              		.loc 24 160 14 view .LVU168
 776 0014 F4EEC77A 		vcmpe.f32	s15, s14
 777 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 778 001c CCBF     		ite	gt
 779 001e 0123     		movgt	r3, #1
 780 0020 0023     		movle	r3, #0
 781              	.LVL42:
 161:Nimbus.cpp    ****         if(ret)
 782              		.loc 24 161 9 is_stmt 1 view .LVU169
 162:Nimbus.cpp    ****         {
 783              		.loc 24 162 9 view .LVU170
 784 0022 80F82030 		strb	r3, [r0, #32]
 173:Nimbus.cpp    ****         return ret;
 785              		.loc 24 173 10 view .LVU171
 174:Nimbus.cpp    ****     }
 786              		.loc 24 174 9 view .LVU172
 175:Nimbus.cpp    **** 
 787              		.loc 24 175 5 is_stmt 0 view .LVU173
 788 0026 1846     		mov	r0, r3
 789              	.LVL43:
 175:Nimbus.cpp    **** 
 790              		.loc 24 175 5 view .LVU174
 791 0028 7047     		bx	lr
 792              	.L28:
 793 002a 00BF     		.align	2
 794              	.L27:
 795 002c 6F12833A 		.word	981668463
 796              		.cfi_endproc
 797              	.LFE4521:
 799              		.section	.text._ZN12ParamControl7ProcessEv,"axG",%progbits,_ZN12ParamControl7ProcessEv,comdat
 800              		.align	1
 801              		.weak	_ZN12ParamControl7ProcessEv
 802              		.syntax unified
 803              		.thumb
 804              		.thumb_func
 805              		.fpu fpv5-d16
ARM GAS  /tmp/ccUsbZWH.s 			page 69


 807              	_ZN12ParamControl7ProcessEv:
 808              	.LVL44:
 809              	.LFB4532:
 190:Nimbus.cpp    ****     {
 810              		.loc 24 190 10 is_stmt 1 view -0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Nimbus.cpp    **** 
 814              		.loc 24 192 9 view .LVU176
 194:Nimbus.cpp    ****         knob_val_changed_  = fabsf(new_knob_val - knob_val_) > KNOB_TOLERANCE;
 815              		.loc 24 194 9 view .LVU177
 190:Nimbus.cpp    ****     {
 816              		.loc 24 190 10 is_stmt 0 view .LVU178
 817 0000 10B5     		push	{r4, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 4, -8
 820              		.cfi_offset 14, -4
 821 0002 0446     		mov	r4, r0
 194:Nimbus.cpp    ****         knob_val_changed_  = fabsf(new_knob_val - knob_val_) > KNOB_TOLERANCE;
 822              		.loc 24 194 44 view .LVU179
 823 0004 8068     		ldr	r0, [r0, #8]
 824              	.LVL45:
 190:Nimbus.cpp    ****     {
 825              		.loc 24 190 10 view .LVU180
 826 0006 2DED028B 		vpush.64	{d8}
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 80, -16
 829              		.cfi_offset 81, -12
 194:Nimbus.cpp    ****         knob_val_changed_  = fabsf(new_knob_val - knob_val_) > KNOB_TOLERANCE;
 830              		.loc 24 194 44 view .LVU181
 831 000a FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 832              	.LVL46:
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 833              		.loc 24 195 49 view .LVU182
 834 000e D4ED097A 		vldr.32	s15, [r4, #36]
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 835              		.loc 24 195 62 view .LVU183
 836 0012 9FED327A 		vldr.32	s14, .L45
 194:Nimbus.cpp    ****         knob_val_changed_  = fabsf(new_knob_val - knob_val_) > KNOB_TOLERANCE;
 837              		.loc 24 194 44 view .LVU184
 838 0016 B0EE408A 		vmov.f32	s16, s0
 839              	.LVL47:
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 840              		.loc 24 195 9 is_stmt 1 view .LVU185
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 841              		.loc 24 195 49 is_stmt 0 view .LVU186
 842 001a 70EE677A 		vsub.f32	s15, s0, s15
 196:Nimbus.cpp    **** 
 843              		.loc 24 196 28 view .LVU187
 844 001e 84ED090A 		vstr.32	s0, [r4, #36]
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 845              		.loc 24 195 35 view .LVU188
 846 0022 F0EEE77A 		vabs.f32	s15, s15
 195:Nimbus.cpp    ****         knob_val_          = new_knob_val;
 847              		.loc 24 195 62 view .LVU189
 848 0026 F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /tmp/ccUsbZWH.s 			page 70


 849 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 850 002e CCBF     		ite	gt
 851 0030 0123     		movgt	r3, #1
 852 0032 0023     		movle	r3, #0
 853 0034 84F82830 		strb	r3, [r4, #40]
 196:Nimbus.cpp    **** 
 854              		.loc 24 196 9 is_stmt 1 view .LVU190
 198:Nimbus.cpp    ****         {
 855              		.loc 24 198 9 view .LVU191
 856 0038 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 857 003c 33B9     		cbnz	r3, .L30
 200:Nimbus.cpp    **** 
 858              		.loc 24 200 13 view .LVU192
 859              	.LVL48:
 202:Nimbus.cpp    ****             {
 860              		.loc 24 202 13 view .LVU193
 202:Nimbus.cpp    ****             {
 861              		.loc 24 202 30 is_stmt 0 view .LVU194
 862 003e 2046     		mov	r0, r4
 863 0040 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 864              	.LVL49:
 202:Nimbus.cpp    ****             {
 865              		.loc 24 202 13 view .LVU195
 866 0044 20B9     		cbnz	r0, .L31
 867              	.LVL50:
 868              	.L29:
 228:Nimbus.cpp    **** 
 869              		.loc 24 228 5 view .LVU196
 870 0046 BDEC028B 		vldm	sp!, {d8}
 871              		.cfi_remember_state
 872              		.cfi_restore 80
 873              		.cfi_restore 81
 874              		.cfi_def_cfa_offset 8
 875              	.LVL51:
 228:Nimbus.cpp    **** 
 876              		.loc 24 228 5 view .LVU197
 877 004a 10BD     		pop	{r4, pc}
 878              	.LVL52:
 879              	.L30:
 880              		.cfi_restore_state
 210:Nimbus.cpp    ****         }
 881              		.loc 24 210 13 is_stmt 1 view .LVU198
 210:Nimbus.cpp    ****         }
 882              		.loc 24 210 17 is_stmt 0 view .LVU199
 883 004c 94ED078A 		vldr.32	s16, [r4, #28]
 884              	.LVL53:
 885              	.L31:
 213:Nimbus.cpp    ****         {
 886              		.loc 24 213 9 is_stmt 1 view .LVU200
 887 0050 A369     		ldr	r3, [r4, #24]
 888 0052 082B     		cmp	r3, #8
 889 0054 F7D8     		bhi	.L29
 890 0056 DFE803F0 		tbb	[pc, r3]
 891              	.L34:
 892 005a 05       		.byte	(.L42-.L34)/2
 893 005b 09       		.byte	(.L41-.L34)/2
 894 005c 0D       		.byte	(.L40-.L34)/2
ARM GAS  /tmp/ccUsbZWH.s 			page 71


 895 005d 28       		.byte	(.L39-.L34)/2
 896 005e 2C       		.byte	(.L38-.L34)/2
 897 005f 30       		.byte	(.L37-.L34)/2
 898 0060 34       		.byte	(.L36-.L34)/2
 899 0061 38       		.byte	(.L35-.L34)/2
 900 0062 3C       		.byte	(.L33-.L34)/2
 901 0063 00       		.p2align 1
 902              	.L42:
 215:Nimbus.cpp    ****             case 1: params_->size = val; break;
 903              		.loc 24 215 13 view .LVU201
 215:Nimbus.cpp    ****             case 1: params_->size = val; break;
 904              		.loc 24 215 21 view .LVU202
 215:Nimbus.cpp    ****             case 1: params_->size = val; break;
 905              		.loc 24 215 39 is_stmt 0 view .LVU203
 906 0064 6369     		ldr	r3, [r4, #20]
 907 0066 83ED008A 		vstr.32	s16, [r3]
 215:Nimbus.cpp    ****             case 1: params_->size = val; break;
 908              		.loc 24 215 46 is_stmt 1 view .LVU204
 909 006a ECE7     		b	.L29
 910              	.L41:
 216:Nimbus.cpp    ****             case 2:
 911              		.loc 24 216 13 view .LVU205
 216:Nimbus.cpp    ****             case 2:
 912              		.loc 24 216 21 view .LVU206
 216:Nimbus.cpp    ****             case 2:
 913              		.loc 24 216 35 is_stmt 0 view .LVU207
 914 006c 6369     		ldr	r3, [r4, #20]
 915 006e 83ED018A 		vstr.32	s16, [r3, #4]
 216:Nimbus.cpp    ****             case 2:
 916              		.loc 24 216 42 is_stmt 1 view .LVU208
 917 0072 E8E7     		b	.L29
 918              	.L40:
 217:Nimbus.cpp    ****                 params_->pitch = powf(9.798f * (val - .5f), 2.f);
 919              		.loc 24 217 13 view .LVU209
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 920              		.loc 24 218 17 view .LVU210
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 921              		.loc 24 218 53 is_stmt 0 view .LVU211
 922 0074 B6EE007A 		vmov.f32	s14, #5.0e-1
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 923              		.loc 24 218 38 view .LVU212
 924 0078 DFED196A 		vldr.32	s13, .L45+4
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 925              		.loc 24 218 17 view .LVU213
 926 007c 6369     		ldr	r3, [r4, #20]
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 927              		.loc 24 218 53 view .LVU214
 928 007e 78EE477A 		vsub.f32	s15, s16, s14
 219:Nimbus.cpp    ****                 break;
 929              		.loc 24 219 45 view .LVU215
 930 0082 B4EEC78A 		vcmpe.f32	s16, s14
 931 0086 BFEE007A 		vmov.f32	s14, #-1.0e+0
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 932              		.loc 24 218 38 view .LVU216
 933 008a 67EEA67A 		vmul.f32	s15, s15, s13
 219:Nimbus.cpp    ****                 break;
 934              		.loc 24 219 45 view .LVU217
ARM GAS  /tmp/ccUsbZWH.s 			page 72


 935 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 936 0092 F7EE006A 		vmov.f32	s13, #1.0e+0
 218:Nimbus.cpp    ****                 params_->pitch *= val < .5f ? -1.f : 1.f;
 937              		.loc 24 218 38 view .LVU218
 938 0096 67EEA77A 		vmul.f32	s15, s15, s15
 219:Nimbus.cpp    ****                 break;
 939              		.loc 24 219 17 is_stmt 1 view .LVU219
 219:Nimbus.cpp    ****                 break;
 940              		.loc 24 219 45 is_stmt 0 view .LVU220
 941 009a 58BF     		it	pl
 942 009c B0EE667A 		vmovpl.f32	s14, s13
 219:Nimbus.cpp    ****                 break;
 943              		.loc 24 219 32 view .LVU221
 944 00a0 67EE277A 		vmul.f32	s15, s14, s15
 945 00a4 C3ED027A 		vstr.32	s15, [r3, #8]
 220:Nimbus.cpp    ****             case 3: params_->density = val; break;
 946              		.loc 24 220 17 is_stmt 1 view .LVU222
 947 00a8 CDE7     		b	.L29
 948              	.L39:
 221:Nimbus.cpp    ****             case 4: params_->texture = val; break;
 949              		.loc 24 221 13 view .LVU223
 221:Nimbus.cpp    ****             case 4: params_->texture = val; break;
 950              		.loc 24 221 21 view .LVU224
 221:Nimbus.cpp    ****             case 4: params_->texture = val; break;
 951              		.loc 24 221 38 is_stmt 0 view .LVU225
 952 00aa 6369     		ldr	r3, [r4, #20]
 953 00ac 83ED038A 		vstr.32	s16, [r3, #12]
 221:Nimbus.cpp    ****             case 4: params_->texture = val; break;
 954              		.loc 24 221 45 is_stmt 1 view .LVU226
 955 00b0 C9E7     		b	.L29
 956              	.L38:
 222:Nimbus.cpp    ****             case 5: params_->dry_wet = val; break;
 957              		.loc 24 222 13 view .LVU227
 222:Nimbus.cpp    ****             case 5: params_->dry_wet = val; break;
 958              		.loc 24 222 21 view .LVU228
 222:Nimbus.cpp    ****             case 5: params_->dry_wet = val; break;
 959              		.loc 24 222 38 is_stmt 0 view .LVU229
 960 00b2 6369     		ldr	r3, [r4, #20]
 961 00b4 83ED048A 		vstr.32	s16, [r3, #16]
 222:Nimbus.cpp    ****             case 5: params_->dry_wet = val; break;
 962              		.loc 24 222 45 is_stmt 1 view .LVU230
 963 00b8 C5E7     		b	.L29
 964              	.L37:
 223:Nimbus.cpp    ****             case 6: params_->stereo_spread = val; break;
 965              		.loc 24 223 13 view .LVU231
 223:Nimbus.cpp    ****             case 6: params_->stereo_spread = val; break;
 966              		.loc 24 223 21 view .LVU232
 223:Nimbus.cpp    ****             case 6: params_->stereo_spread = val; break;
 967              		.loc 24 223 38 is_stmt 0 view .LVU233
 968 00ba 6369     		ldr	r3, [r4, #20]
 969 00bc 83ED058A 		vstr.32	s16, [r3, #20]
 223:Nimbus.cpp    ****             case 6: params_->stereo_spread = val; break;
 970              		.loc 24 223 45 is_stmt 1 view .LVU234
 971 00c0 C1E7     		b	.L29
 972              	.L36:
 224:Nimbus.cpp    ****             case 7: params_->feedback = val; break;
 973              		.loc 24 224 13 view .LVU235
ARM GAS  /tmp/ccUsbZWH.s 			page 73


 224:Nimbus.cpp    ****             case 7: params_->feedback = val; break;
 974              		.loc 24 224 21 view .LVU236
 224:Nimbus.cpp    ****             case 7: params_->feedback = val; break;
 975              		.loc 24 224 44 is_stmt 0 view .LVU237
 976 00c2 6369     		ldr	r3, [r4, #20]
 977 00c4 83ED068A 		vstr.32	s16, [r3, #24]
 224:Nimbus.cpp    ****             case 7: params_->feedback = val; break;
 978              		.loc 24 224 51 is_stmt 1 view .LVU238
 979 00c8 BDE7     		b	.L29
 980              	.L35:
 225:Nimbus.cpp    ****             case 8: params_->reverb = val; break;
 981              		.loc 24 225 13 view .LVU239
 225:Nimbus.cpp    ****             case 8: params_->reverb = val; break;
 982              		.loc 24 225 21 view .LVU240
 225:Nimbus.cpp    ****             case 8: params_->reverb = val; break;
 983              		.loc 24 225 39 is_stmt 0 view .LVU241
 984 00ca 6369     		ldr	r3, [r4, #20]
 985 00cc 83ED078A 		vstr.32	s16, [r3, #28]
 225:Nimbus.cpp    ****             case 8: params_->reverb = val; break;
 986              		.loc 24 225 46 is_stmt 1 view .LVU242
 987 00d0 B9E7     		b	.L29
 988              	.L33:
 226:Nimbus.cpp    ****         }
 989              		.loc 24 226 13 view .LVU243
 226:Nimbus.cpp    ****         }
 990              		.loc 24 226 21 view .LVU244
 226:Nimbus.cpp    ****         }
 991              		.loc 24 226 37 is_stmt 0 view .LVU245
 992 00d2 6369     		ldr	r3, [r4, #20]
 993 00d4 83ED088A 		vstr.32	s16, [r3, #32]
 226:Nimbus.cpp    ****         }
 994              		.loc 24 226 44 is_stmt 1 view .LVU246
 995 00d8 B5E7     		b	.L29
 996              	.L46:
 997 00da 00BF     		.align	2
 998              	.L45:
 999 00dc 6F12833A 		.word	981668463
 1000 00e0 9CC41C41 		.word	1092404380
 1001              		.cfi_endproc
 1002              	.LFE4532:
 1004              		.section	.text._Z3Modii,"ax",%progbits
 1005              		.align	1
 1006              		.global	_Z3Modii
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1010              		.fpu fpv5-d16
 1012              	_Z3Modii:
 1013              	.LVL54:
 1014              	.LFB4533:
 259:Nimbus.cpp    **** Parameters*  parameters;
 260:Nimbus.cpp    **** DEVICE_STATE current_device_state = RUNNING;
 261:Nimbus.cpp    **** MAPPABLE_CVS currently_mapping_cv = NONE;
 262:Nimbus.cpp    **** bool         can_map[4]           = {true};
 263:Nimbus.cpp    **** int          oled_led_update_gate = 0;
 264:Nimbus.cpp    **** DISPLAY_PAGE current_display_page;
 265:Nimbus.cpp    **** bool is_silenced, is_bypassed, is_shifted, is_frozen_by_button, is_frozen_by_cv;
ARM GAS  /tmp/ccUsbZWH.s 			page 74


 266:Nimbus.cpp    **** float scope_buffer[AUDIO_BLOCK_SIZE] = {0.f};
 267:Nimbus.cpp    **** 
 268:Nimbus.cpp    **** uint32_t last_freeze_cv_update;
 269:Nimbus.cpp    **** 
 270:Nimbus.cpp    **** void Controls();
 271:Nimbus.cpp    **** void UpdateLeds();
 272:Nimbus.cpp    **** void UpdateOled();
 273:Nimbus.cpp    **** void ProcessButtons();
 274:Nimbus.cpp    **** 
 275:Nimbus.cpp    **** int Mod(int n, int m)
 276:Nimbus.cpp    **** {
 1015              		.loc 24 276 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
 1019              		@ link register save eliminated.
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 1020              		.loc 24 277 5 view .LVU248
 1021              		.loc 24 277 16 is_stmt 0 view .LVU249
 1022 0000 90FBF1F3 		sdiv	r3, r0, r1
 1023 0004 03FB1100 		mls	r0, r3, r1, r0
 1024              	.LVL55:
 1025              		.loc 24 277 21 view .LVU250
 1026 0008 0844     		add	r0, r0, r1
 1027              		.loc 24 277 28 view .LVU251
 1028 000a 90FBF1F3 		sdiv	r3, r0, r1
 278:Nimbus.cpp    **** }
 1029              		.loc 24 278 1 view .LVU252
 1030 000e 01FB1300 		mls	r0, r1, r3, r0
 1031 0012 7047     		bx	lr
 1032              		.cfi_endproc
 1033              	.LFE4533:
 1035              		.section	.rodata._Z10InitParamsv.str1.1,"aMS",%progbits,1
 1036              	.LC3:
 1037 0000 506F7369 		.ascii	"Position:\000"
 1037      74696F6E 
 1037      3A00
 1038              	.LC4:
 1039 000a 506F00   		.ascii	"Po\000"
 1040              	.LC5:
 1041 000d 53697A65 		.ascii	"Size:\000"
 1041      3A00
 1042              	.LC6:
 1043 0013 537A00   		.ascii	"Sz\000"
 1044              	.LC7:
 1045 0016 50697463 		.ascii	"Pitch:\000"
 1045      683A00
 1046              	.LC8:
 1047 001d 506900   		.ascii	"Pi\000"
 1048              	.LC9:
 1049 0020 44656E73 		.ascii	"Density:\000"
 1049      6974793A 
 1049      00
 1050              	.LC10:
 1051 0029 446E00   		.ascii	"Dn\000"
 1052              	.LC11:
 1053 002c 54657874 		.ascii	"Texture:\000"
ARM GAS  /tmp/ccUsbZWH.s 			page 75


 1053      7572653A 
 1053      00
 1054              	.LC12:
 1055 0035 547800   		.ascii	"Tx\000"
 1056              	.LC13:
 1057 0038 4472792F 		.ascii	"Dry/Wet:\000"
 1057      5765743A 
 1057      00
 1058              	.LC14:
 1059 0041 445700   		.ascii	"DW\000"
 1060              	.LC15:
 1061 0044 53707265 		.ascii	"Spread:\000"
 1061      61643A00 
 1062              	.LC16:
 1063 004c 537000   		.ascii	"Sp\000"
 1064              	.LC17:
 1065 004f 46656564 		.ascii	"Feedback:\000"
 1065      6261636B 
 1065      3A00
 1066              	.LC18:
 1067 0059 466200   		.ascii	"Fb\000"
 1068              	.LC19:
 1069 005c 52657665 		.ascii	"Reverb:\000"
 1069      72623A00 
 1070              	.LC20:
 1071 0064 527600   		.ascii	"Rv\000"
 1072              		.section	.text._Z10InitParamsv,"ax",%progbits
 1073              		.align	1
 1074              		.global	_Z10InitParamsv
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv5-d16
 1080              	_Z10InitParamsv:
 1081              	.LFB4535:
 279:Nimbus.cpp    **** 
 280:Nimbus.cpp    **** void AudioCallback(AudioHandle::InputBuffer  in,
 281:Nimbus.cpp    ****                    AudioHandle::OutputBuffer out,
 282:Nimbus.cpp    ****                    size_t                    size)
 283:Nimbus.cpp    **** {
 284:Nimbus.cpp    ****     uint32_t start = System::GetTick();
 285:Nimbus.cpp    **** 
 286:Nimbus.cpp    ****     Controls();
 287:Nimbus.cpp    **** 
 288:Nimbus.cpp    ****     FloatFrame input[size];
 289:Nimbus.cpp    ****     FloatFrame output[size];
 290:Nimbus.cpp    **** 
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 292:Nimbus.cpp    ****     {
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 295:Nimbus.cpp    ****         output[i].l = output[i].r = 0.f;
 296:Nimbus.cpp    ****     }
 297:Nimbus.cpp    **** 
 298:Nimbus.cpp    ****     processor.Process(input, output, size);
 299:Nimbus.cpp    **** 
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
ARM GAS  /tmp/ccUsbZWH.s 			page 76


 301:Nimbus.cpp    ****     {
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 304:Nimbus.cpp    ****         scope_buffer[i] = (out[0][i] + out[1][i]) * .5f;
 305:Nimbus.cpp    ****     }
 306:Nimbus.cpp    **** 
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 308:Nimbus.cpp    **** }
 309:Nimbus.cpp    **** 
 310:Nimbus.cpp    **** void InitParams()
 311:Nimbus.cpp    **** {
 1082              		.loc 24 311 1 is_stmt 1 view -0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 312:Nimbus.cpp    ****     param_controls[0].Init("Position:",
 1086              		.loc 24 312 5 view .LVU254
 311:Nimbus.cpp    ****     param_controls[0].Init("Position:",
 1087              		.loc 24 311 1 is_stmt 0 view .LVU255
 1088 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1089              		.cfi_def_cfa_offset 32
 1090              		.cfi_offset 4, -32
 1091              		.cfi_offset 5, -28
 1092              		.cfi_offset 6, -24
 1093              		.cfi_offset 7, -20
 1094              		.cfi_offset 8, -16
 1095              		.cfi_offset 9, -12
 1096              		.cfi_offset 10, -8
 1097              		.cfi_offset 14, -4
 1098              	.LBB711:
 1099              	.LBB712:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1100              		.loc 24 141 27 view .LVU256
 1101 0004 B24A     		ldr	r2, .L49
 145:Nimbus.cpp    ****         params_           = params;
 1102              		.loc 24 145 27 view .LVU257
 1103 0006 0025     		movs	r5, #0
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1104              		.loc 24 141 27 view .LVU258
 1105 0008 B24C     		ldr	r4, .L49+4
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1106              		.loc 24 149 27 view .LVU259
 1107 000a 4FF00108 		mov	r8, #1
 1108              	.LBE712:
 1109              	.LBE711:
 1110              		.loc 24 312 27 view .LVU260
 1111 000e B24E     		ldr	r6, .L49+8
 1112              	.LBB723:
 1113              	.LBB724:
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1114              		.loc 24 147 27 view .LVU261
 1115 0010 4FF0020A 		mov	r10, #2
 1116              	.LBE724:
 1117              	.LBE723:
 1118              	.LBB736:
 1119              	.LBB713:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
ARM GAS  /tmp/ccUsbZWH.s 			page 77


 1120              		.loc 24 141 27 view .LVU262
 1121 0014 2260     		str	r2, [r4]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1122              		.loc 24 148 42 view .LVU263
 1123 0016 2046     		mov	r0, r4
 142:Nimbus.cpp    ****         knob_             = knob;
 1124              		.loc 24 142 27 view .LVU264
 1125 0018 B04A     		ldr	r2, .L49+12
 1126              	.LBE713:
 1127              	.LBE736:
 1128              	.LBB737:
 1129              	.LBB738:
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1130              		.loc 24 147 27 view .LVU265
 1131 001a 4FF00309 		mov	r9, #3
 1132              	.LBE738:
 1133              	.LBE737:
 1134              	.LBB750:
 1135              	.LBB714:
 143:Nimbus.cpp    ****         led_              = led;
 1136              		.loc 24 143 27 view .LVU266
 1137 001e B04F     		ldr	r7, .L49+16
 1138              	.LBE714:
 1139              	.LBE750:
 1140              		.loc 24 312 27 view .LVU267
 1141 0020 3368     		ldr	r3, [r6]
 1142              	.LVL56:
 1143              	.LBB751:
 1144              	.LBI711:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1145              		.loc 24 131 10 is_stmt 1 view .LVU268
 1146              	.LBB715:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1147              		.loc 24 141 9 view .LVU269
 142:Nimbus.cpp    ****         knob_             = knob;
 1148              		.loc 24 142 9 view .LVU270
 142:Nimbus.cpp    ****         knob_             = knob;
 1149              		.loc 24 142 27 is_stmt 0 view .LVU271
 1150 0022 6260     		str	r2, [r4, #4]
 143:Nimbus.cpp    ****         led_              = led;
 1151              		.loc 24 143 9 is_stmt 1 view .LVU272
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1152              		.loc 24 144 27 is_stmt 0 view .LVU273
 1153 0024 1022     		movs	r2, #16
 143:Nimbus.cpp    ****         led_              = led;
 1154              		.loc 24 143 27 view .LVU274
 1155 0026 A760     		str	r7, [r4, #8]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1156              		.loc 24 144 9 is_stmt 1 view .LVU275
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1157              		.loc 24 144 27 is_stmt 0 view .LVU276
 1158 0028 E260     		str	r2, [r4, #12]
 145:Nimbus.cpp    ****         params_           = params;
 1159              		.loc 24 145 9 is_stmt 1 view .LVU277
 145:Nimbus.cpp    ****         params_           = params;
 1160              		.loc 24 145 27 is_stmt 0 view .LVU278
 1161 002a 2574     		strb	r5, [r4, #16]
ARM GAS  /tmp/ccUsbZWH.s 			page 78


 146:Nimbus.cpp    ****         param_num_        = param_num;
 1162              		.loc 24 146 9 is_stmt 1 view .LVU279
 1163              	.LBE715:
 1164              	.LBE751:
 311:Nimbus.cpp    ****     param_controls[0].Init("Position:",
 1165              		.loc 24 311 1 is_stmt 0 view .LVU280
 1166 002c 2DED028B 		vpush.64	{d8}
 1167              		.cfi_def_cfa_offset 40
 1168              		.cfi_offset 80, -40
 1169              		.cfi_offset 81, -36
 1170              	.LBB752:
 1171              	.LBB716:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1172              		.loc 24 148 42 view .LVU281
 1173 0030 9FEDAC8A 		vldr.32	s16, .L49+20
 1174 0034 B0EE480A 		vmov.f32	s0, s16
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1175              		.loc 24 147 27 view .LVU282
 1176 0038 C4E90535 		strd	r3, r5, [r4, #20]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1177              		.loc 24 148 9 is_stmt 1 view .LVU283
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1178              		.loc 24 148 42 is_stmt 0 view .LVU284
 1179 003c FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1180              	.LVL57:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1181              		.loc 24 148 42 view .LVU285
 1182              	.LBE716:
 1183              	.LBE752:
 1184              	.LBB753:
 1185              	.LBB754:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1186              		.loc 24 141 27 view .LVU286
 1187 0040 A94A     		ldr	r2, .L49+24
 1188              	.LBE754:
 1189              	.LBE753:
 1190              	.LBB766:
 1191              	.LBB717:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1192              		.loc 24 148 27 view .LVU287
 1193 0042 07EE900A 		vmov	s15, r0	@ int
 1194              	.LBE717:
 1195              	.LBE766:
 313:Nimbus.cpp    ****                            "Po",
 314:Nimbus.cpp    ****                            &field.knob[0],
 315:Nimbus.cpp    ****                            DaisyField::LED_KNOB_1,
 316:Nimbus.cpp    ****                            false,
 317:Nimbus.cpp    ****                            parameters,
 318:Nimbus.cpp    ****                            0,
 319:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS1TO3);
 320:Nimbus.cpp    **** 
 321:Nimbus.cpp    ****     param_controls[1].Init("Size:",
 1196              		.loc 24 321 27 view .LVU288
 1197 0046 3368     		ldr	r3, [r6]
 1198              	.LBB767:
 1199              	.LBB755:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
ARM GAS  /tmp/ccUsbZWH.s 			page 79


 1200              		.loc 24 141 27 view .LVU289
 1201 0048 6263     		str	r2, [r4, #52]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1202              		.loc 24 148 42 view .LVU290
 1203 004a B0EE480A 		vmov.f32	s0, s16
 142:Nimbus.cpp    ****         knob_             = knob;
 1204              		.loc 24 142 27 view .LVU291
 1205 004e A74A     		ldr	r2, .L49+28
 1206              	.LBE755:
 1207              	.LBE767:
 1208              	.LBB768:
 1209              	.LBB718:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1210              		.loc 24 148 27 view .LVU292
 1211 0050 F8EE677A 		vcvt.f32.u32	s15, s15
 1212              	.LBE718:
 1213              	.LBE768:
 1214              	.LBB769:
 1215              	.LBB756:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1216              		.loc 24 148 42 view .LVU293
 1217 0054 04F13400 		add	r0, r4, #52
 1218              	.LBE756:
 1219              	.LBE769:
 1220              	.LBB770:
 1221              	.LBB719:
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1222              		.loc 24 151 27 view .LVU294
 1223 0058 84ED098A 		vstr.32	s16, [r4, #36]
 1224              	.LBE719:
 1225              	.LBE770:
 1226              	.LBB771:
 1227              	.LBB757:
 142:Nimbus.cpp    ****         knob_             = knob;
 1228              		.loc 24 142 27 view .LVU295
 1229 005c A263     		str	r2, [r4, #56]
 143:Nimbus.cpp    ****         led_              = led;
 1230              		.loc 24 143 27 view .LVU296
 1231 005e 07F12002 		add	r2, r7, #32
 1232              	.LBE757:
 1233              	.LBE771:
 1234              	.LBB772:
 1235              	.LBB720:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1236              		.loc 24 148 27 view .LVU297
 1237 0062 C4ED077A 		vstr.32	s15, [r4, #28]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1238              		.loc 24 149 9 is_stmt 1 view .LVU298
 1239              	.LBE720:
 1240              	.LBE772:
 1241              	.LBB773:
 1242              	.LBB758:
 143:Nimbus.cpp    ****         led_              = led;
 1243              		.loc 24 143 27 is_stmt 0 view .LVU299
 1244 0066 E263     		str	r2, [r4, #60]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1245              		.loc 24 144 27 view .LVU300
ARM GAS  /tmp/ccUsbZWH.s 			page 80


 1246 0068 1122     		movs	r2, #17
 1247              	.LBE758:
 1248              	.LBE773:
 1249              	.LBB774:
 1250              	.LBB721:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1251              		.loc 24 149 27 view .LVU301
 1252 006a 84F83180 		strb	r8, [r4, #49]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1253              		.loc 24 150 9 is_stmt 1 view .LVU302
 1254              	.LBE721:
 1255              	.LBE774:
 1256              	.LBB775:
 1257              	.LBB759:
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1258              		.loc 24 144 27 is_stmt 0 view .LVU303
 1259 006e 2264     		str	r2, [r4, #64]
 1260              	.LBE759:
 1261              	.LBE775:
 1262              	.LBB776:
 1263              	.LBB722:
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1264              		.loc 24 150 27 view .LVU304
 1265 0070 84F83250 		strb	r5, [r4, #50]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1266              		.loc 24 151 9 is_stmt 1 view .LVU305
 152:Nimbus.cpp    ****     }
 1267              		.loc 24 152 9 view .LVU306
 152:Nimbus.cpp    ****     }
 1268              		.loc 24 152 27 is_stmt 0 view .LVU307
 1269 0074 84F82850 		strb	r5, [r4, #40]
 1270              	.LVL58:
 152:Nimbus.cpp    ****     }
 1271              		.loc 24 152 27 view .LVU308
 1272              	.LBE722:
 1273              	.LBE776:
 1274              		.loc 24 321 5 is_stmt 1 view .LVU309
 1275              	.LBB777:
 1276              	.LBI753:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1277              		.loc 24 131 10 view .LVU310
 1278              	.LBB760:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1279              		.loc 24 141 9 view .LVU311
 142:Nimbus.cpp    ****         knob_             = knob;
 1280              		.loc 24 142 9 view .LVU312
 143:Nimbus.cpp    ****         led_              = led;
 1281              		.loc 24 143 9 view .LVU313
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1282              		.loc 24 144 9 view .LVU314
 145:Nimbus.cpp    ****         params_           = params;
 1283              		.loc 24 145 9 view .LVU315
 145:Nimbus.cpp    ****         params_           = params;
 1284              		.loc 24 145 27 is_stmt 0 view .LVU316
 1285 0078 84F84450 		strb	r5, [r4, #68]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1286              		.loc 24 146 9 is_stmt 1 view .LVU317
ARM GAS  /tmp/ccUsbZWH.s 			page 81


 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1287              		.loc 24 147 27 is_stmt 0 view .LVU318
 1288 007c C4E91238 		strd	r3, r8, [r4, #72]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1289              		.loc 24 148 9 is_stmt 1 view .LVU319
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1290              		.loc 24 148 42 is_stmt 0 view .LVU320
 1291 0080 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1292              	.LVL59:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1293              		.loc 24 148 42 view .LVU321
 1294              	.LBE760:
 1295              	.LBE777:
 1296              	.LBB778:
 1297              	.LBB725:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1298              		.loc 24 141 27 view .LVU322
 1299 0084 9A4A     		ldr	r2, .L49+32
 1300              	.LBE725:
 1301              	.LBE778:
 1302              	.LBB779:
 1303              	.LBB761:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1304              		.loc 24 148 27 view .LVU323
 1305 0086 07EE900A 		vmov	s15, r0	@ int
 1306              	.LBE761:
 1307              	.LBE779:
 322:Nimbus.cpp    ****                            "Sz",
 323:Nimbus.cpp    ****                            &field.knob[1],
 324:Nimbus.cpp    ****                            DaisyField::LED_KNOB_2,
 325:Nimbus.cpp    ****                            false,
 326:Nimbus.cpp    ****                            parameters,
 327:Nimbus.cpp    ****                            1,
 328:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS1TO3);
 329:Nimbus.cpp    **** 
 330:Nimbus.cpp    ****     param_controls[2].Init("Pitch:",
 1308              		.loc 24 330 27 view .LVU324
 1309 008a 3368     		ldr	r3, [r6]
 1310              	.LBB780:
 1311              	.LBB726:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1312              		.loc 24 141 27 view .LVU325
 1313 008c A266     		str	r2, [r4, #104]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1314              		.loc 24 148 42 view .LVU326
 1315 008e B0EE480A 		vmov.f32	s0, s16
 142:Nimbus.cpp    ****         knob_             = knob;
 1316              		.loc 24 142 27 view .LVU327
 1317 0092 984A     		ldr	r2, .L49+36
 1318              	.LBE726:
 1319              	.LBE780:
 1320              	.LBB781:
 1321              	.LBB762:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1322              		.loc 24 148 27 view .LVU328
 1323 0094 F8EE677A 		vcvt.f32.u32	s15, s15
 1324              	.LBE762:
ARM GAS  /tmp/ccUsbZWH.s 			page 82


 1325              	.LBE781:
 1326              	.LBB782:
 1327              	.LBB727:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1328              		.loc 24 148 42 view .LVU329
 1329 0098 04F16800 		add	r0, r4, #104
 1330              	.LBE727:
 1331              	.LBE782:
 1332              	.LBB783:
 1333              	.LBB763:
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1334              		.loc 24 151 27 view .LVU330
 1335 009c 84ED168A 		vstr.32	s16, [r4, #88]
 1336              	.LBE763:
 1337              	.LBE783:
 1338              	.LBB784:
 1339              	.LBB728:
 142:Nimbus.cpp    ****         knob_             = knob;
 1340              		.loc 24 142 27 view .LVU331
 1341 00a0 E266     		str	r2, [r4, #108]
 143:Nimbus.cpp    ****         led_              = led;
 1342              		.loc 24 143 27 view .LVU332
 1343 00a2 07F14002 		add	r2, r7, #64
 1344              	.LBE728:
 1345              	.LBE784:
 1346              	.LBB785:
 1347              	.LBB764:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1348              		.loc 24 148 27 view .LVU333
 1349 00a6 C4ED147A 		vstr.32	s15, [r4, #80]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1350              		.loc 24 149 9 is_stmt 1 view .LVU334
 1351              	.LBE764:
 1352              	.LBE785:
 1353              	.LBB786:
 1354              	.LBB729:
 143:Nimbus.cpp    ****         led_              = led;
 1355              		.loc 24 143 27 is_stmt 0 view .LVU335
 1356 00aa 2267     		str	r2, [r4, #112]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1357              		.loc 24 144 27 view .LVU336
 1358 00ac 1222     		movs	r2, #18
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1359              		.loc 24 146 27 view .LVU337
 1360 00ae E367     		str	r3, [r4, #124]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1361              		.loc 24 144 27 view .LVU338
 1362 00b0 6267     		str	r2, [r4, #116]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1363              		.loc 24 147 27 view .LVU339
 1364 00b2 C4F880A0 		str	r10, [r4, #128]
 1365              	.LBE729:
 1366              	.LBE786:
 1367              	.LBB787:
 1368              	.LBB765:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1369              		.loc 24 149 27 view .LVU340
ARM GAS  /tmp/ccUsbZWH.s 			page 83


 1370 00b6 84F86580 		strb	r8, [r4, #101]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1371              		.loc 24 150 9 is_stmt 1 view .LVU341
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1372              		.loc 24 150 27 is_stmt 0 view .LVU342
 1373 00ba 84F86650 		strb	r5, [r4, #102]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1374              		.loc 24 151 9 is_stmt 1 view .LVU343
 152:Nimbus.cpp    ****     }
 1375              		.loc 24 152 9 view .LVU344
 152:Nimbus.cpp    ****     }
 1376              		.loc 24 152 27 is_stmt 0 view .LVU345
 1377 00be 84F85C50 		strb	r5, [r4, #92]
 1378              	.LVL60:
 152:Nimbus.cpp    ****     }
 1379              		.loc 24 152 27 view .LVU346
 1380              	.LBE765:
 1381              	.LBE787:
 1382              		.loc 24 330 5 is_stmt 1 view .LVU347
 1383              	.LBB788:
 1384              	.LBI723:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1385              		.loc 24 131 10 view .LVU348
 1386              	.LBB730:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1387              		.loc 24 141 9 view .LVU349
 142:Nimbus.cpp    ****         knob_             = knob;
 1388              		.loc 24 142 9 view .LVU350
 143:Nimbus.cpp    ****         led_              = led;
 1389              		.loc 24 143 9 view .LVU351
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1390              		.loc 24 144 9 view .LVU352
 145:Nimbus.cpp    ****         params_           = params;
 1391              		.loc 24 145 9 view .LVU353
 145:Nimbus.cpp    ****         params_           = params;
 1392              		.loc 24 145 27 is_stmt 0 view .LVU354
 1393 00c2 84F87850 		strb	r5, [r4, #120]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1394              		.loc 24 146 9 is_stmt 1 view .LVU355
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1395              		.loc 24 147 9 view .LVU356
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1396              		.loc 24 148 9 view .LVU357
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1397              		.loc 24 148 42 is_stmt 0 view .LVU358
 1398 00c6 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1399              	.LVL61:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1400              		.loc 24 148 42 view .LVU359
 1401              	.LBE730:
 1402              	.LBE788:
 1403              	.LBB789:
 1404              	.LBB739:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1405              		.loc 24 141 27 view .LVU360
 1406 00ca 8B4A     		ldr	r2, .L49+40
 1407              	.LBE739:
ARM GAS  /tmp/ccUsbZWH.s 			page 84


 1408              	.LBE789:
 1409              	.LBB790:
 1410              	.LBB731:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1411              		.loc 24 148 27 view .LVU361
 1412 00cc 07EE900A 		vmov	s15, r0	@ int
 1413              	.LBE731:
 1414              	.LBE790:
 331:Nimbus.cpp    ****                            "Pi",
 332:Nimbus.cpp    ****                            &field.knob[2],
 333:Nimbus.cpp    ****                            DaisyField::LED_KNOB_3,
 334:Nimbus.cpp    ****                            false,
 335:Nimbus.cpp    ****                            parameters,
 336:Nimbus.cpp    ****                            2,
 337:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS1TO3);
 338:Nimbus.cpp    **** 
 339:Nimbus.cpp    ****     param_controls[3].Init("Density:",
 1415              		.loc 24 339 27 view .LVU362
 1416 00d0 3368     		ldr	r3, [r6]
 1417              	.LBB791:
 1418              	.LBB740:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1419              		.loc 24 148 42 view .LVU363
 1420 00d2 B0EE480A 		vmov.f32	s0, s16
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1421              		.loc 24 141 27 view .LVU364
 1422 00d6 C4F89C20 		str	r2, [r4, #156]
 1423              	.LBE740:
 1424              	.LBE791:
 1425              	.LBB792:
 1426              	.LBB732:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1427              		.loc 24 148 27 view .LVU365
 1428 00da F8EE677A 		vcvt.f32.u32	s15, s15
 1429              	.LBE732:
 1430              	.LBE792:
 1431              	.LBB793:
 1432              	.LBB741:
 142:Nimbus.cpp    ****         knob_             = knob;
 1433              		.loc 24 142 27 view .LVU366
 1434 00de 874A     		ldr	r2, .L49+44
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1435              		.loc 24 148 42 view .LVU367
 1436 00e0 04F19C00 		add	r0, r4, #156
 1437              	.LBE741:
 1438              	.LBE793:
 1439              	.LBB794:
 1440              	.LBB733:
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1441              		.loc 24 151 27 view .LVU368
 1442 00e4 84ED238A 		vstr.32	s16, [r4, #140]
 1443              	.LBE733:
 1444              	.LBE794:
 1445              	.LBB795:
 1446              	.LBB742:
 142:Nimbus.cpp    ****         knob_             = knob;
 1447              		.loc 24 142 27 view .LVU369
ARM GAS  /tmp/ccUsbZWH.s 			page 85


 1448 00e8 C4F8A020 		str	r2, [r4, #160]
 143:Nimbus.cpp    ****         led_              = led;
 1449              		.loc 24 143 27 view .LVU370
 1450 00ec 07F16002 		add	r2, r7, #96
 1451              	.LBE742:
 1452              	.LBE795:
 1453              	.LBB796:
 1454              	.LBB734:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1455              		.loc 24 148 27 view .LVU371
 1456 00f0 C4ED217A 		vstr.32	s15, [r4, #132]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1457              		.loc 24 149 9 is_stmt 1 view .LVU372
 1458              	.LBE734:
 1459              	.LBE796:
 1460              	.LBB797:
 1461              	.LBB743:
 143:Nimbus.cpp    ****         led_              = led;
 1462              		.loc 24 143 27 is_stmt 0 view .LVU373
 1463 00f4 C4F8A420 		str	r2, [r4, #164]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1464              		.loc 24 144 27 view .LVU374
 1465 00f8 1322     		movs	r2, #19
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1466              		.loc 24 146 27 view .LVU375
 1467 00fa C4F8B030 		str	r3, [r4, #176]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1468              		.loc 24 144 27 view .LVU376
 1469 00fe C4F8A820 		str	r2, [r4, #168]
 1470              	.LBE743:
 1471              	.LBE797:
 1472              	.LBB798:
 1473              	.LBB735:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1474              		.loc 24 149 27 view .LVU377
 1475 0102 84F89980 		strb	r8, [r4, #153]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1476              		.loc 24 150 9 is_stmt 1 view .LVU378
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1477              		.loc 24 150 27 is_stmt 0 view .LVU379
 1478 0106 84F89A50 		strb	r5, [r4, #154]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1479              		.loc 24 151 9 is_stmt 1 view .LVU380
 152:Nimbus.cpp    ****     }
 1480              		.loc 24 152 9 view .LVU381
 152:Nimbus.cpp    ****     }
 1481              		.loc 24 152 27 is_stmt 0 view .LVU382
 1482 010a 84F89050 		strb	r5, [r4, #144]
 1483              	.LVL62:
 152:Nimbus.cpp    ****     }
 1484              		.loc 24 152 27 view .LVU383
 1485              	.LBE735:
 1486              	.LBE798:
 1487              		.loc 24 339 5 is_stmt 1 view .LVU384
 1488              	.LBB799:
 1489              	.LBI737:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
ARM GAS  /tmp/ccUsbZWH.s 			page 86


 1490              		.loc 24 131 10 view .LVU385
 1491              	.LBB744:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1492              		.loc 24 141 9 view .LVU386
 142:Nimbus.cpp    ****         knob_             = knob;
 1493              		.loc 24 142 9 view .LVU387
 143:Nimbus.cpp    ****         led_              = led;
 1494              		.loc 24 143 9 view .LVU388
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1495              		.loc 24 144 9 view .LVU389
 145:Nimbus.cpp    ****         params_           = params;
 1496              		.loc 24 145 9 view .LVU390
 145:Nimbus.cpp    ****         params_           = params;
 1497              		.loc 24 145 27 is_stmt 0 view .LVU391
 1498 010e 84F8AC50 		strb	r5, [r4, #172]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1499              		.loc 24 146 9 is_stmt 1 view .LVU392
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1500              		.loc 24 147 9 view .LVU393
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1501              		.loc 24 147 27 is_stmt 0 view .LVU394
 1502 0112 C4F8B490 		str	r9, [r4, #180]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1503              		.loc 24 148 9 is_stmt 1 view .LVU395
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1504              		.loc 24 148 42 is_stmt 0 view .LVU396
 1505 0116 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1506              	.LVL63:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1507              		.loc 24 148 42 view .LVU397
 1508              	.LBE744:
 1509              	.LBE799:
 1510              	.LBB800:
 1511              	.LBB801:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1512              		.loc 24 141 27 view .LVU398
 1513 011a 794A     		ldr	r2, .L49+48
 1514              	.LBE801:
 1515              	.LBE800:
 1516              	.LBB812:
 1517              	.LBB745:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1518              		.loc 24 148 27 view .LVU399
 1519 011c 07EE900A 		vmov	s15, r0	@ int
 1520              	.LBE745:
 1521              	.LBE812:
 340:Nimbus.cpp    ****                            "Dn",
 341:Nimbus.cpp    ****                            &field.knob[3],
 342:Nimbus.cpp    ****                            DaisyField::LED_KNOB_4,
 343:Nimbus.cpp    ****                            false,
 344:Nimbus.cpp    ****                            parameters,
 345:Nimbus.cpp    ****                            3,
 346:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS4TO6);
 347:Nimbus.cpp    **** 
 348:Nimbus.cpp    ****     param_controls[4].Init("Texture:",
 1522              		.loc 24 348 27 view .LVU400
 1523 0120 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccUsbZWH.s 			page 87


 1524              	.LBB813:
 1525              	.LBB802:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1526              		.loc 24 148 42 view .LVU401
 1527 0122 B0EE480A 		vmov.f32	s0, s16
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1528              		.loc 24 141 27 view .LVU402
 1529 0126 C4F8D020 		str	r2, [r4, #208]
 1530              	.LBE802:
 1531              	.LBE813:
 1532              	.LBB814:
 1533              	.LBB746:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1534              		.loc 24 148 27 view .LVU403
 1535 012a F8EE677A 		vcvt.f32.u32	s15, s15
 1536              	.LBE746:
 1537              	.LBE814:
 1538              	.LBB815:
 1539              	.LBB803:
 142:Nimbus.cpp    ****         knob_             = knob;
 1540              		.loc 24 142 27 view .LVU404
 1541 012e 754A     		ldr	r2, .L49+52
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1542              		.loc 24 148 42 view .LVU405
 1543 0130 04F1D000 		add	r0, r4, #208
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1544              		.loc 24 146 27 view .LVU406
 1545 0134 C4F8E430 		str	r3, [r4, #228]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1546              		.loc 24 147 27 view .LVU407
 1547 0138 0423     		movs	r3, #4
 142:Nimbus.cpp    ****         knob_             = knob;
 1548              		.loc 24 142 27 view .LVU408
 1549 013a C4F8D420 		str	r2, [r4, #212]
 143:Nimbus.cpp    ****         led_              = led;
 1550              		.loc 24 143 27 view .LVU409
 1551 013e 07F18002 		add	r2, r7, #128
 1552              	.LBE803:
 1553              	.LBE815:
 1554              	.LBB816:
 1555              	.LBB747:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1556              		.loc 24 148 27 view .LVU410
 1557 0142 C4ED2E7A 		vstr.32	s15, [r4, #184]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1558              		.loc 24 149 9 is_stmt 1 view .LVU411
 1559              	.LBE747:
 1560              	.LBE816:
 1561              	.LBB817:
 1562              	.LBB804:
 143:Nimbus.cpp    ****         led_              = led;
 1563              		.loc 24 143 27 is_stmt 0 view .LVU412
 1564 0146 C4F8D820 		str	r2, [r4, #216]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1565              		.loc 24 144 27 view .LVU413
 1566 014a 1422     		movs	r2, #20
 1567              	.LBE804:
ARM GAS  /tmp/ccUsbZWH.s 			page 88


 1568              	.LBE817:
 1569              	.LBB818:
 1570              	.LBB748:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1571              		.loc 24 149 27 view .LVU414
 1572 014c 84F8CDA0 		strb	r10, [r4, #205]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1573              		.loc 24 150 9 is_stmt 1 view .LVU415
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1574              		.loc 24 151 27 is_stmt 0 view .LVU416
 1575 0150 84ED308A 		vstr.32	s16, [r4, #192]
 1576              	.LBE748:
 1577              	.LBE818:
 1578              	.LBB819:
 1579              	.LBB805:
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1580              		.loc 24 144 27 view .LVU417
 1581 0154 C4F8DC20 		str	r2, [r4, #220]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1582              		.loc 24 147 27 view .LVU418
 1583 0158 C4F8E830 		str	r3, [r4, #232]
 1584              	.LBE805:
 1585              	.LBE819:
 1586              	.LBB820:
 1587              	.LBB749:
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1588              		.loc 24 150 27 view .LVU419
 1589 015c 84F8CE50 		strb	r5, [r4, #206]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1590              		.loc 24 151 9 is_stmt 1 view .LVU420
 152:Nimbus.cpp    ****     }
 1591              		.loc 24 152 9 view .LVU421
 152:Nimbus.cpp    ****     }
 1592              		.loc 24 152 27 is_stmt 0 view .LVU422
 1593 0160 84F8C450 		strb	r5, [r4, #196]
 1594              	.LVL64:
 152:Nimbus.cpp    ****     }
 1595              		.loc 24 152 27 view .LVU423
 1596              	.LBE749:
 1597              	.LBE820:
 1598              		.loc 24 348 5 is_stmt 1 view .LVU424
 1599              	.LBB821:
 1600              	.LBI800:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1601              		.loc 24 131 10 view .LVU425
 1602              	.LBB806:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1603              		.loc 24 141 9 view .LVU426
 142:Nimbus.cpp    ****         knob_             = knob;
 1604              		.loc 24 142 9 view .LVU427
 143:Nimbus.cpp    ****         led_              = led;
 1605              		.loc 24 143 9 view .LVU428
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1606              		.loc 24 144 9 view .LVU429
 145:Nimbus.cpp    ****         params_           = params;
 1607              		.loc 24 145 9 view .LVU430
 145:Nimbus.cpp    ****         params_           = params;
ARM GAS  /tmp/ccUsbZWH.s 			page 89


 1608              		.loc 24 145 27 is_stmt 0 view .LVU431
 1609 0164 84F8E050 		strb	r5, [r4, #224]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1610              		.loc 24 146 9 is_stmt 1 view .LVU432
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1611              		.loc 24 147 9 view .LVU433
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1612              		.loc 24 148 9 view .LVU434
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1613              		.loc 24 148 42 is_stmt 0 view .LVU435
 1614 0168 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1615              	.LVL65:
 1616              	.LBE806:
 1617              	.LBE821:
 1618              	.LBB822:
 1619              	.LBB823:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1620              		.loc 24 141 27 view .LVU436
 1621 016c 664A     		ldr	r2, .L49+56
 1622              	.LBE823:
 1623              	.LBE822:
 1624              	.LBB835:
 1625              	.LBB807:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1626              		.loc 24 148 27 view .LVU437
 1627 016e 07EE900A 		vmov	s15, r0	@ int
 1628              	.LBE807:
 1629              	.LBE835:
 349:Nimbus.cpp    ****                            "Tx",
 350:Nimbus.cpp    ****                            &field.knob[4],
 351:Nimbus.cpp    ****                            DaisyField::LED_KNOB_5,
 352:Nimbus.cpp    ****                            false,
 353:Nimbus.cpp    ****                            parameters,
 354:Nimbus.cpp    ****                            4,
 355:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS4TO6);
 356:Nimbus.cpp    **** 
 357:Nimbus.cpp    ****     param_controls[5].Init("Dry/Wet:",
 1630              		.loc 24 357 27 view .LVU438
 1631 0172 3368     		ldr	r3, [r6]
 1632              	.LBB836:
 1633              	.LBB824:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1634              		.loc 24 148 42 view .LVU439
 1635 0174 B0EE480A 		vmov.f32	s0, s16
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1636              		.loc 24 141 27 view .LVU440
 1637 0178 C4F80421 		str	r2, [r4, #260]
 1638              	.LBE824:
 1639              	.LBE836:
 1640              	.LBB837:
 1641              	.LBB808:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1642              		.loc 24 148 27 view .LVU441
 1643 017c F8EE677A 		vcvt.f32.u32	s15, s15
 1644              	.LBE808:
 1645              	.LBE837:
 1646              	.LBB838:
ARM GAS  /tmp/ccUsbZWH.s 			page 90


 1647              	.LBB825:
 142:Nimbus.cpp    ****         knob_             = knob;
 1648              		.loc 24 142 27 view .LVU442
 1649 0180 624A     		ldr	r2, .L49+60
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1650              		.loc 24 148 42 view .LVU443
 1651 0182 04F58270 		add	r0, r4, #260
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1652              		.loc 24 146 27 view .LVU444
 1653 0186 C4F81831 		str	r3, [r4, #280]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1654              		.loc 24 147 27 view .LVU445
 1655 018a 0523     		movs	r3, #5
 142:Nimbus.cpp    ****         knob_             = knob;
 1656              		.loc 24 142 27 view .LVU446
 1657 018c C4F80821 		str	r2, [r4, #264]
 143:Nimbus.cpp    ****         led_              = led;
 1658              		.loc 24 143 27 view .LVU447
 1659 0190 07F1A002 		add	r2, r7, #160
 1660              	.LBE825:
 1661              	.LBE838:
 1662              	.LBB839:
 1663              	.LBB809:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1664              		.loc 24 148 27 view .LVU448
 1665 0194 C4ED3B7A 		vstr.32	s15, [r4, #236]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1666              		.loc 24 149 9 is_stmt 1 view .LVU449
 1667              	.LBE809:
 1668              	.LBE839:
 1669              	.LBB840:
 1670              	.LBB826:
 143:Nimbus.cpp    ****         led_              = led;
 1671              		.loc 24 143 27 is_stmt 0 view .LVU450
 1672 0198 C4F80C21 		str	r2, [r4, #268]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1673              		.loc 24 144 27 view .LVU451
 1674 019c 1522     		movs	r2, #21
 1675              	.LBE826:
 1676              	.LBE840:
 1677              	.LBB841:
 1678              	.LBB810:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1679              		.loc 24 149 27 view .LVU452
 1680 019e 84F801A1 		strb	r10, [r4, #257]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1681              		.loc 24 150 9 is_stmt 1 view .LVU453
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1682              		.loc 24 151 27 is_stmt 0 view .LVU454
 1683 01a2 84ED3D8A 		vstr.32	s16, [r4, #244]
 1684              	.LBE810:
 1685              	.LBE841:
 1686              	.LBB842:
 1687              	.LBB827:
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1688              		.loc 24 144 27 view .LVU455
 1689 01a6 C4F81021 		str	r2, [r4, #272]
ARM GAS  /tmp/ccUsbZWH.s 			page 91


 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1690              		.loc 24 147 27 view .LVU456
 1691 01aa C4F81C31 		str	r3, [r4, #284]
 1692              	.LBE827:
 1693              	.LBE842:
 1694              	.LBB843:
 1695              	.LBB811:
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1696              		.loc 24 150 27 view .LVU457
 1697 01ae 84F80251 		strb	r5, [r4, #258]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1698              		.loc 24 151 9 is_stmt 1 view .LVU458
 152:Nimbus.cpp    ****     }
 1699              		.loc 24 152 9 view .LVU459
 152:Nimbus.cpp    ****     }
 1700              		.loc 24 152 27 is_stmt 0 view .LVU460
 1701 01b2 84F8F850 		strb	r5, [r4, #248]
 1702              	.LVL66:
 152:Nimbus.cpp    ****     }
 1703              		.loc 24 152 27 view .LVU461
 1704              	.LBE811:
 1705              	.LBE843:
 1706              		.loc 24 357 5 is_stmt 1 view .LVU462
 1707              	.LBB844:
 1708              	.LBI822:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1709              		.loc 24 131 10 view .LVU463
 1710              	.LBB828:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1711              		.loc 24 141 9 view .LVU464
 142:Nimbus.cpp    ****         knob_             = knob;
 1712              		.loc 24 142 9 view .LVU465
 143:Nimbus.cpp    ****         led_              = led;
 1713              		.loc 24 143 9 view .LVU466
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1714              		.loc 24 144 9 view .LVU467
 145:Nimbus.cpp    ****         params_           = params;
 1715              		.loc 24 145 9 view .LVU468
 145:Nimbus.cpp    ****         params_           = params;
 1716              		.loc 24 145 27 is_stmt 0 view .LVU469
 1717 01b6 84F81451 		strb	r5, [r4, #276]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1718              		.loc 24 146 9 is_stmt 1 view .LVU470
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1719              		.loc 24 147 9 view .LVU471
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1720              		.loc 24 148 9 view .LVU472
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1721              		.loc 24 148 42 is_stmt 0 view .LVU473
 1722 01ba FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1723              	.LVL67:
 1724              	.LBE828:
 1725              	.LBE844:
 1726              	.LBB845:
 1727              	.LBB846:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1728              		.loc 24 141 27 view .LVU474
ARM GAS  /tmp/ccUsbZWH.s 			page 92


 1729 01be 544A     		ldr	r2, .L49+64
 1730              	.LBE846:
 1731              	.LBE845:
 1732              	.LBB855:
 1733              	.LBB829:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1734              		.loc 24 148 27 view .LVU475
 1735 01c0 07EE900A 		vmov	s15, r0	@ int
 1736              	.LBE829:
 1737              	.LBE855:
 358:Nimbus.cpp    ****                            "DW",
 359:Nimbus.cpp    ****                            &field.knob[5],
 360:Nimbus.cpp    ****                            DaisyField::LED_KNOB_6,
 361:Nimbus.cpp    ****                            false,
 362:Nimbus.cpp    ****                            parameters,
 363:Nimbus.cpp    ****                            5,
 364:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS4TO6);
 365:Nimbus.cpp    **** 
 366:Nimbus.cpp    ****     param_controls[6].Init("Spread:",
 1738              		.loc 24 366 27 view .LVU476
 1739 01c4 3368     		ldr	r3, [r6]
 1740              	.LBB856:
 1741              	.LBB847:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1742              		.loc 24 148 42 view .LVU477
 1743 01c6 B0EE480A 		vmov.f32	s0, s16
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1744              		.loc 24 141 27 view .LVU478
 1745 01ca C4F83821 		str	r2, [r4, #312]
 1746              	.LBE847:
 1747              	.LBE856:
 1748              	.LBB857:
 1749              	.LBB830:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1750              		.loc 24 148 27 view .LVU479
 1751 01ce F8EE677A 		vcvt.f32.u32	s15, s15
 1752              	.LBE830:
 1753              	.LBE857:
 1754              	.LBB858:
 1755              	.LBB848:
 142:Nimbus.cpp    ****         knob_             = knob;
 1756              		.loc 24 142 27 view .LVU480
 1757 01d2 504A     		ldr	r2, .L49+68
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1758              		.loc 24 148 42 view .LVU481
 1759 01d4 04F59C70 		add	r0, r4, #312
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1760              		.loc 24 146 27 view .LVU482
 1761 01d8 C4F84C31 		str	r3, [r4, #332]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1762              		.loc 24 147 27 view .LVU483
 1763 01dc 0623     		movs	r3, #6
 142:Nimbus.cpp    ****         knob_             = knob;
 1764              		.loc 24 142 27 view .LVU484
 1765 01de C4F83C21 		str	r2, [r4, #316]
 143:Nimbus.cpp    ****         led_              = led;
 1766              		.loc 24 143 27 view .LVU485
ARM GAS  /tmp/ccUsbZWH.s 			page 93


 1767 01e2 07F1C002 		add	r2, r7, #192
 1768              	.LBE848:
 1769              	.LBE858:
 1770              	.LBB859:
 1771              	.LBB831:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1772              		.loc 24 148 27 view .LVU486
 1773 01e6 C4ED487A 		vstr.32	s15, [r4, #288]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1774              		.loc 24 149 9 is_stmt 1 view .LVU487
 1775              	.LBE831:
 1776              	.LBE859:
 1777              	.LBB860:
 1778              	.LBB861:
 143:Nimbus.cpp    ****         led_              = led;
 1779              		.loc 24 143 27 is_stmt 0 view .LVU488
 1780 01ea E037     		adds	r7, r7, #224
 1781              	.LBE861:
 1782              	.LBE860:
 1783              	.LBB869:
 1784              	.LBB849:
 1785 01ec C4F84021 		str	r2, [r4, #320]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1786              		.loc 24 144 27 view .LVU489
 1787 01f0 1622     		movs	r2, #22
 1788              	.LBE849:
 1789              	.LBE869:
 1790              	.LBB870:
 1791              	.LBB832:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1792              		.loc 24 149 27 view .LVU490
 1793 01f2 84F835A1 		strb	r10, [r4, #309]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1794              		.loc 24 150 9 is_stmt 1 view .LVU491
 1795              	.LBE832:
 1796              	.LBE870:
 1797              	.LBB871:
 1798              	.LBB862:
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1799              		.loc 24 144 27 is_stmt 0 view .LVU492
 1800 01f6 4FF0170A 		mov	r10, #23
 1801              	.LBE862:
 1802              	.LBE871:
 1803              	.LBB872:
 1804              	.LBB833:
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1805              		.loc 24 151 27 view .LVU493
 1806 01fa 84ED4A8A 		vstr.32	s16, [r4, #296]
 1807              	.LBE833:
 1808              	.LBE872:
 1809              	.LBB873:
 1810              	.LBB850:
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1811              		.loc 24 144 27 view .LVU494
 1812 01fe C4F84421 		str	r2, [r4, #324]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1813              		.loc 24 147 27 view .LVU495
ARM GAS  /tmp/ccUsbZWH.s 			page 94


 1814 0202 C4F85031 		str	r3, [r4, #336]
 1815              	.LBE850:
 1816              	.LBE873:
 1817              	.LBB874:
 1818              	.LBB834:
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1819              		.loc 24 150 27 view .LVU496
 1820 0206 84F83651 		strb	r5, [r4, #310]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1821              		.loc 24 151 9 is_stmt 1 view .LVU497
 152:Nimbus.cpp    ****     }
 1822              		.loc 24 152 9 view .LVU498
 152:Nimbus.cpp    ****     }
 1823              		.loc 24 152 27 is_stmt 0 view .LVU499
 1824 020a 84F82C51 		strb	r5, [r4, #300]
 1825              	.LVL68:
 152:Nimbus.cpp    ****     }
 1826              		.loc 24 152 27 view .LVU500
 1827              	.LBE834:
 1828              	.LBE874:
 1829              		.loc 24 366 5 is_stmt 1 view .LVU501
 1830              	.LBB875:
 1831              	.LBI845:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1832              		.loc 24 131 10 view .LVU502
 1833              	.LBB851:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1834              		.loc 24 141 9 view .LVU503
 142:Nimbus.cpp    ****         knob_             = knob;
 1835              		.loc 24 142 9 view .LVU504
 143:Nimbus.cpp    ****         led_              = led;
 1836              		.loc 24 143 9 view .LVU505
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1837              		.loc 24 144 9 view .LVU506
 145:Nimbus.cpp    ****         params_           = params;
 1838              		.loc 24 145 9 view .LVU507
 145:Nimbus.cpp    ****         params_           = params;
 1839              		.loc 24 145 27 is_stmt 0 view .LVU508
 1840 020e 84F84851 		strb	r5, [r4, #328]
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1841              		.loc 24 146 9 is_stmt 1 view .LVU509
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1842              		.loc 24 147 9 view .LVU510
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1843              		.loc 24 148 9 view .LVU511
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1844              		.loc 24 148 42 is_stmt 0 view .LVU512
 1845 0212 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1846              	.LVL69:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1847              		.loc 24 148 27 view .LVU513
 1848 0216 07EE900A 		vmov	s15, r0	@ int
 1849              	.LBE851:
 1850              	.LBE875:
 367:Nimbus.cpp    ****                            "Sp",
 368:Nimbus.cpp    ****                            &field.knob[6],
 369:Nimbus.cpp    ****                            DaisyField::LED_KNOB_7,
ARM GAS  /tmp/ccUsbZWH.s 			page 95


 370:Nimbus.cpp    ****                            false,
 371:Nimbus.cpp    ****                            parameters,
 372:Nimbus.cpp    ****                            6,
 373:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS7TO9);
 374:Nimbus.cpp    **** 
 375:Nimbus.cpp    ****     param_controls[7].Init("Feedback:",
 1851              		.loc 24 375 27 view .LVU514
 1852 021a 3368     		ldr	r3, [r6]
 1853              	.LBB876:
 1854              	.LBB863:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1855              		.loc 24 141 27 view .LVU515
 1856 021c 3E4A     		ldr	r2, .L49+72
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1857              		.loc 24 148 42 view .LVU516
 1858 021e B0EE480A 		vmov.f32	s0, s16
 1859              	.LBE863:
 1860              	.LBE876:
 1861              	.LBB877:
 1862              	.LBB852:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1863              		.loc 24 148 27 view .LVU517
 1864 0222 F8EE677A 		vcvt.f32.u32	s15, s15
 1865              	.LBE852:
 1866              	.LBE877:
 1867              	.LBB878:
 1868              	.LBB864:
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1869              		.loc 24 146 27 view .LVU518
 1870 0226 C4F88031 		str	r3, [r4, #384]
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1871              		.loc 24 141 27 view .LVU519
 1872 022a C4F86C21 		str	r2, [r4, #364]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1873              		.loc 24 147 27 view .LVU520
 1874 022e 0723     		movs	r3, #7
 142:Nimbus.cpp    ****         knob_             = knob;
 1875              		.loc 24 142 27 view .LVU521
 1876 0230 3A4A     		ldr	r2, .L49+76
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1877              		.loc 24 148 42 view .LVU522
 1878 0232 04F5B670 		add	r0, r4, #364
 1879              	.LBE864:
 1880              	.LBE878:
 1881              	.LBB879:
 1882              	.LBB853:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1883              		.loc 24 148 27 view .LVU523
 1884 0236 C4ED557A 		vstr.32	s15, [r4, #340]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1885              		.loc 24 149 9 is_stmt 1 view .LVU524
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1886              		.loc 24 151 27 is_stmt 0 view .LVU525
 1887 023a 84ED578A 		vstr.32	s16, [r4, #348]
 1888              	.LBE853:
 1889              	.LBE879:
 1890              	.LBB880:
ARM GAS  /tmp/ccUsbZWH.s 			page 96


 1891              	.LBB865:
 142:Nimbus.cpp    ****         knob_             = knob;
 1892              		.loc 24 142 27 view .LVU526
 1893 023e C4F87021 		str	r2, [r4, #368]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1894              		.loc 24 147 27 view .LVU527
 1895 0242 C4F88431 		str	r3, [r4, #388]
 1896              	.LBE865:
 1897              	.LBE880:
 1898              	.LBB881:
 1899              	.LBB854:
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1900              		.loc 24 149 27 view .LVU528
 1901 0246 84F86991 		strb	r9, [r4, #361]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1902              		.loc 24 150 9 is_stmt 1 view .LVU529
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1903              		.loc 24 150 27 is_stmt 0 view .LVU530
 1904 024a 84F86A51 		strb	r5, [r4, #362]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1905              		.loc 24 151 9 is_stmt 1 view .LVU531
 152:Nimbus.cpp    ****     }
 1906              		.loc 24 152 9 view .LVU532
 152:Nimbus.cpp    ****     }
 1907              		.loc 24 152 27 is_stmt 0 view .LVU533
 1908 024e 84F86051 		strb	r5, [r4, #352]
 1909              	.LVL70:
 152:Nimbus.cpp    ****     }
 1910              		.loc 24 152 27 view .LVU534
 1911              	.LBE854:
 1912              	.LBE881:
 1913              		.loc 24 375 5 is_stmt 1 view .LVU535
 1914              	.LBB882:
 1915              	.LBI860:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1916              		.loc 24 131 10 view .LVU536
 1917              	.LBB866:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1918              		.loc 24 141 9 view .LVU537
 142:Nimbus.cpp    ****         knob_             = knob;
 1919              		.loc 24 142 9 view .LVU538
 143:Nimbus.cpp    ****         led_              = led;
 1920              		.loc 24 143 9 view .LVU539
 143:Nimbus.cpp    ****         led_              = led;
 1921              		.loc 24 143 27 is_stmt 0 view .LVU540
 1922 0252 C4F87471 		str	r7, [r4, #372]
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1923              		.loc 24 144 9 is_stmt 1 view .LVU541
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1924              		.loc 24 144 27 is_stmt 0 view .LVU542
 1925 0256 C4F878A1 		str	r10, [r4, #376]
 145:Nimbus.cpp    ****         params_           = params;
 1926              		.loc 24 145 9 is_stmt 1 view .LVU543
 145:Nimbus.cpp    ****         params_           = params;
 1927              		.loc 24 145 27 is_stmt 0 view .LVU544
 1928 025a 84F87C51 		strb	r5, [r4, #380]
 146:Nimbus.cpp    ****         param_num_        = param_num;
ARM GAS  /tmp/ccUsbZWH.s 			page 97


 1929              		.loc 24 146 9 is_stmt 1 view .LVU545
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1930              		.loc 24 147 9 view .LVU546
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1931              		.loc 24 148 9 view .LVU547
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1932              		.loc 24 148 42 is_stmt 0 view .LVU548
 1933 025e FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 1934              	.LVL71:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1935              		.loc 24 148 27 view .LVU549
 1936 0262 07EE900A 		vmov	s15, r0	@ int
 1937              	.LBE866:
 1938              	.LBE882:
 376:Nimbus.cpp    ****                            "Fb",
 377:Nimbus.cpp    ****                            &field.knob[7],
 378:Nimbus.cpp    ****                            DaisyField::LED_KNOB_8,
 379:Nimbus.cpp    ****                            false,
 380:Nimbus.cpp    ****                            parameters,
 381:Nimbus.cpp    ****                            7,
 382:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS7TO9);
 383:Nimbus.cpp    **** 
 384:Nimbus.cpp    ****     param_controls[8].Init("Reverb:",
 1939              		.loc 24 384 27 view .LVU550
 1940 0266 3368     		ldr	r3, [r6]
 1941              	.LBB883:
 1942              	.LBB884:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1943              		.loc 24 141 27 view .LVU551
 1944 0268 2D4A     		ldr	r2, .L49+80
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1945              		.loc 24 148 42 view .LVU552
 1946 026a B0EE480A 		vmov.f32	s0, s16
 1947              	.LBE884:
 1948              	.LBE883:
 1949              	.LBB887:
 1950              	.LBB867:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1951              		.loc 24 148 27 view .LVU553
 1952 026e F8EE677A 		vcvt.f32.u32	s15, s15
 1953              	.LBE867:
 1954              	.LBE887:
 1955              	.LBB888:
 1956              	.LBB885:
 146:Nimbus.cpp    ****         param_num_        = param_num;
 1957              		.loc 24 146 27 view .LVU554
 1958 0272 C4F8B431 		str	r3, [r4, #436]
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1959              		.loc 24 141 27 view .LVU555
 1960 0276 C4F8A021 		str	r2, [r4, #416]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 1961              		.loc 24 147 27 view .LVU556
 1962 027a 0823     		movs	r3, #8
 142:Nimbus.cpp    ****         knob_             = knob;
 1963              		.loc 24 142 27 view .LVU557
 1964 027c 294A     		ldr	r2, .L49+84
 148:Nimbus.cpp    ****         display_page_     = display_page;
ARM GAS  /tmp/ccUsbZWH.s 			page 98


 1965              		.loc 24 148 42 view .LVU558
 1966 027e 04F5D070 		add	r0, r4, #416
 1967              	.LBE885:
 1968              	.LBE888:
 1969              	.LBB889:
 1970              	.LBB868:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 1971              		.loc 24 148 27 view .LVU559
 1972 0282 C4ED627A 		vstr.32	s15, [r4, #392]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1973              		.loc 24 149 9 is_stmt 1 view .LVU560
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1974              		.loc 24 151 27 is_stmt 0 view .LVU561
 1975 0286 84ED648A 		vstr.32	s16, [r4, #400]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 1976              		.loc 24 149 27 view .LVU562
 1977 028a 84F89D91 		strb	r9, [r4, #413]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1978              		.loc 24 150 9 is_stmt 1 view .LVU563
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 1979              		.loc 24 150 27 is_stmt 0 view .LVU564
 1980 028e 84F89E51 		strb	r5, [r4, #414]
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 1981              		.loc 24 151 9 is_stmt 1 view .LVU565
 152:Nimbus.cpp    ****     }
 1982              		.loc 24 152 9 view .LVU566
 152:Nimbus.cpp    ****     }
 1983              		.loc 24 152 27 is_stmt 0 view .LVU567
 1984 0292 84F89451 		strb	r5, [r4, #404]
 1985              	.LVL72:
 152:Nimbus.cpp    ****     }
 1986              		.loc 24 152 27 view .LVU568
 1987              	.LBE868:
 1988              	.LBE889:
 1989              		.loc 24 384 5 is_stmt 1 view .LVU569
 1990              	.LBB890:
 1991              	.LBI883:
 131:Nimbus.cpp    ****               const char*    abbreviated_name,
 1992              		.loc 24 131 10 view .LVU570
 1993              	.LBB886:
 141:Nimbus.cpp    ****         abbreviated_name_ = abbreviated_name;
 1994              		.loc 24 141 9 view .LVU571
 142:Nimbus.cpp    ****         knob_             = knob;
 1995              		.loc 24 142 9 view .LVU572
 144:Nimbus.cpp    ****         shifted_          = shifted;
 1996              		.loc 24 144 27 is_stmt 0 view .LVU573
 1997 0296 C4F8ACA1 		str	r10, [r4, #428]
 145:Nimbus.cpp    ****         params_           = params;
 1998              		.loc 24 145 27 view .LVU574
 1999 029a 84F8B081 		strb	r8, [r4, #432]
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 2000              		.loc 24 147 27 view .LVU575
 2001 029e C4F8B831 		str	r3, [r4, #440]
 143:Nimbus.cpp    ****         led_              = led;
 2002              		.loc 24 143 27 view .LVU576
 2003 02a2 C4E96927 		strd	r2, r7, [r4, #420]
 144:Nimbus.cpp    ****         shifted_          = shifted;
ARM GAS  /tmp/ccUsbZWH.s 			page 99


 2004              		.loc 24 144 9 is_stmt 1 view .LVU577
 145:Nimbus.cpp    ****         params_           = params;
 2005              		.loc 24 145 9 view .LVU578
 146:Nimbus.cpp    ****         param_num_        = param_num;
 2006              		.loc 24 146 9 view .LVU579
 147:Nimbus.cpp    ****         param_val_        = ControlChange(0.f);
 2007              		.loc 24 147 9 view .LVU580
 148:Nimbus.cpp    ****         display_page_     = display_page;
 2008              		.loc 24 148 9 view .LVU581
 148:Nimbus.cpp    ****         display_page_     = display_page;
 2009              		.loc 24 148 42 is_stmt 0 view .LVU582
 2010 02a6 FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 2011              	.LVL73:
 148:Nimbus.cpp    ****         display_page_     = display_page;
 2012              		.loc 24 148 27 view .LVU583
 2013 02aa 07EE900A 		vmov	s15, r0	@ int
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 2014              		.loc 24 151 27 view .LVU584
 2015 02ae 84ED718A 		vstr.32	s16, [r4, #452]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 2016              		.loc 24 148 27 view .LVU585
 2017 02b2 F8EE677A 		vcvt.f32.u32	s15, s15
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 2018              		.loc 24 149 27 view .LVU586
 2019 02b6 84F8D191 		strb	r9, [r4, #465]
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 2020              		.loc 24 150 27 view .LVU587
 2021 02ba 84F8D251 		strb	r5, [r4, #466]
 152:Nimbus.cpp    ****     }
 2022              		.loc 24 152 27 view .LVU588
 2023 02be 84F8C851 		strb	r5, [r4, #456]
 148:Nimbus.cpp    ****         display_page_     = display_page;
 2024              		.loc 24 148 27 view .LVU589
 2025 02c2 C4ED6F7A 		vstr.32	s15, [r4, #444]
 149:Nimbus.cpp    ****         mapped_cv_        = mapped_cv;
 2026              		.loc 24 149 9 is_stmt 1 view .LVU590
 150:Nimbus.cpp    ****         knob_val_         = 0.f;
 2027              		.loc 24 150 9 view .LVU591
 151:Nimbus.cpp    ****         knob_val_changed_ = false;
 2028              		.loc 24 151 9 view .LVU592
 152:Nimbus.cpp    ****     }
 2029              		.loc 24 152 9 view .LVU593
 2030              	.LVL74:
 152:Nimbus.cpp    ****     }
 2031              		.loc 24 152 9 is_stmt 0 view .LVU594
 2032              	.LBE886:
 2033              	.LBE890:
 385:Nimbus.cpp    ****                            "Rv",
 386:Nimbus.cpp    ****                            &field.knob[7],
 387:Nimbus.cpp    ****                            DaisyField::LED_KNOB_8,
 388:Nimbus.cpp    ****                            true,
 389:Nimbus.cpp    ****                            parameters,
 390:Nimbus.cpp    ****                            8,
 391:Nimbus.cpp    ****                            DISPLAY_PAGE::PARAMETERS7TO9);
 392:Nimbus.cpp    **** }
 2034              		.loc 24 392 1 view .LVU595
 2035 02c6 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /tmp/ccUsbZWH.s 			page 100


 2036              		.cfi_restore 80
 2037              		.cfi_restore 81
 2038              		.cfi_def_cfa_offset 32
 2039 02ca BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2040              	.L50:
 2041 02ce 00BF     		.align	2
 2042              	.L49:
 2043 02d0 00000000 		.word	.LC3
 2044 02d4 00000000 		.word	.LANCHOR1
 2045 02d8 00000000 		.word	.LANCHOR0
 2046 02dc 0A000000 		.word	.LC4
 2047 02e0 94060000 		.word	field+1684
 2048 02e4 00000000 		.word	0
 2049 02e8 0D000000 		.word	.LC5
 2050 02ec 13000000 		.word	.LC6
 2051 02f0 16000000 		.word	.LC7
 2052 02f4 1D000000 		.word	.LC8
 2053 02f8 20000000 		.word	.LC9
 2054 02fc 29000000 		.word	.LC10
 2055 0300 2C000000 		.word	.LC11
 2056 0304 35000000 		.word	.LC12
 2057 0308 38000000 		.word	.LC13
 2058 030c 41000000 		.word	.LC14
 2059 0310 44000000 		.word	.LC15
 2060 0314 4C000000 		.word	.LC16
 2061 0318 4F000000 		.word	.LC17
 2062 031c 59000000 		.word	.LC18
 2063 0320 5C000000 		.word	.LC19
 2064 0324 64000000 		.word	.LC20
 2065              		.cfi_endproc
 2066              	.LFE4535:
 2068              		.section	.text._Z12ProcessParamR12ParamControlb,"ax",%progbits
 2069              		.align	1
 2070              		.global	_Z12ProcessParamR12ParamControlb
 2071              		.syntax unified
 2072              		.thumb
 2073              		.thumb_func
 2074              		.fpu fpv5-d16
 2076              	_Z12ProcessParamR12ParamControlb:
 2077              	.LVL75:
 2078              	.LFB4546:
 393:Nimbus.cpp    **** 
 394:Nimbus.cpp    **** int main(void)
 395:Nimbus.cpp    **** {
 396:Nimbus.cpp    ****     field.Init();
 397:Nimbus.cpp    ****     field.SetAudioBlockSize(AUDIO_BLOCK_SIZE);
 398:Nimbus.cpp    ****     float sample_rate = field.AudioSampleRate();
 399:Nimbus.cpp    **** 
 400:Nimbus.cpp    ****     //init the luts
 401:Nimbus.cpp    ****     InitResources(sample_rate);
 402:Nimbus.cpp    **** 
 403:Nimbus.cpp    ****     processor.Init(sample_rate,
 404:Nimbus.cpp    ****                    block_mem,
 405:Nimbus.cpp    ****                    sizeof(block_mem),
 406:Nimbus.cpp    ****                    block_ccm,
 407:Nimbus.cpp    ****                    sizeof(block_ccm));
 408:Nimbus.cpp    **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 101


 409:Nimbus.cpp    ****     parameters = processor.mutable_parameters();
 410:Nimbus.cpp    **** 
 411:Nimbus.cpp    ****     processor.set_playback_mode(PLAYBACK_MODE_GRANULAR);
 412:Nimbus.cpp    ****     processor.set_quality(0);
 413:Nimbus.cpp    **** 
 414:Nimbus.cpp    ****     InitParams();
 415:Nimbus.cpp    **** 
 416:Nimbus.cpp    ****     //Process all params once to set inital state
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 418:Nimbus.cpp    ****     {
 419:Nimbus.cpp    ****         param_controls[i].Process();
 420:Nimbus.cpp    ****     }
 421:Nimbus.cpp    **** 
 422:Nimbus.cpp    ****     current_display_page = SPLASH;
 423:Nimbus.cpp    ****     UpdateOled();
 424:Nimbus.cpp    **** 
 425:Nimbus.cpp    ****     //Delay for a second to show the splash screen
 426:Nimbus.cpp    ****     System::Delay(1000);
 427:Nimbus.cpp    **** 
 428:Nimbus.cpp    ****     field.StartAdc();
 429:Nimbus.cpp    ****     field.StartAudio(AudioCallback);
 430:Nimbus.cpp    **** 
 431:Nimbus.cpp    ****     while(1)
 432:Nimbus.cpp    ****     {
 433:Nimbus.cpp    ****         processor.Prepare();
 434:Nimbus.cpp    **** 
 435:Nimbus.cpp    ****         //Since we dont need to update the UI on every execution of the loop only update every nth 
 436:Nimbus.cpp    ****         oled_led_update_gate
 437:Nimbus.cpp    ****             = Mod(oled_led_update_gate + 1, OLED_LED_UPDATE_DELAY);
 438:Nimbus.cpp    ****         if(oled_led_update_gate == OLED_LED_UPDATE_DELAY - 1)
 439:Nimbus.cpp    ****         {
 440:Nimbus.cpp    ****             UpdateLeds();
 441:Nimbus.cpp    ****             UpdateOled();
 442:Nimbus.cpp    ****         }
 443:Nimbus.cpp    **** 
 444:Nimbus.cpp    ****         //And we probably dont need to call Prepare so often so we can sleep a bit
 445:Nimbus.cpp    ****         System::Delay(MAIN_LOOP_DELAY);
 446:Nimbus.cpp    ****     }
 447:Nimbus.cpp    **** }
 448:Nimbus.cpp    **** 
 449:Nimbus.cpp    **** void RenderParams(DISPLAY_PAGE page)
 450:Nimbus.cpp    **** {
 451:Nimbus.cpp    ****     int offset = 0;
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 453:Nimbus.cpp    ****     {
 454:Nimbus.cpp    ****         if(param_controls[i].GetDisplayPage() == page)
 455:Nimbus.cpp    ****         {
 456:Nimbus.cpp    ****             field.display.SetCursor(LEFT_BORDER_WIDTH,
 457:Nimbus.cpp    ****                                     (offset + 1) * ROW_HEIGHT);
 458:Nimbus.cpp    ****             field.display.WriteString(
 459:Nimbus.cpp    ****                 param_controls[i].GetDisplayName(), DEFAULT_FONT, true);
 460:Nimbus.cpp    **** 
 461:Nimbus.cpp    ****             field.display.DrawRect(PARAM_NAME_COL_WIDTH,
 462:Nimbus.cpp    ****                                    (offset + 1) * ROW_HEIGHT,
 463:Nimbus.cpp    ****                                    PARAM_NAME_COL_WIDTH + VALUE_BAR_WIDTH,
 464:Nimbus.cpp    ****                                    ((offset + 1) * ROW_HEIGHT)
 465:Nimbus.cpp    ****                                        + VALUE_BAR_HEIGHT,
ARM GAS  /tmp/ccUsbZWH.s 			page 102


 466:Nimbus.cpp    ****                                    true);
 467:Nimbus.cpp    **** 
 468:Nimbus.cpp    ****             field.display.DrawRect(
 469:Nimbus.cpp    ****                 PARAM_NAME_COL_WIDTH,
 470:Nimbus.cpp    ****                 (offset + 1) * ROW_HEIGHT,
 471:Nimbus.cpp    ****                 PARAM_NAME_COL_WIDTH
 472:Nimbus.cpp    ****                     + int(param_controls[i].GetValue() * VALUE_BAR_WIDTH),
 473:Nimbus.cpp    ****                 ((offset + 1) * ROW_HEIGHT) + VALUE_BAR_HEIGHT,
 474:Nimbus.cpp    ****                 true,
 475:Nimbus.cpp    ****                 true);
 476:Nimbus.cpp    **** 
 477:Nimbus.cpp    **** #ifdef SHOW_KNOB_VALUES
 478:Nimbus.cpp    ****             // Show the knob vaules overlayed on the value bars
 479:Nimbus.cpp    ****             field.display.SetCursor(PARAM_NAME_COL_WIDTH + 20,
 480:Nimbus.cpp    ****                                     ((offset + 1) * ROW_HEIGHT) + 2);
 481:Nimbus.cpp    ****             field.display.WriteString(
 482:Nimbus.cpp    ****                 param_controls[i].GetValueAsString(), Font_6x8, true);
 483:Nimbus.cpp    **** #endif
 484:Nimbus.cpp    ****             ++offset;
 485:Nimbus.cpp    ****         }
 486:Nimbus.cpp    ****     }
 487:Nimbus.cpp    **** }
 488:Nimbus.cpp    **** 
 489:Nimbus.cpp    **** inline void RenderSplash()
 490:Nimbus.cpp    **** {
 491:Nimbus.cpp    ****     field.display.SetCursor(17, 2);
 492:Nimbus.cpp    ****     field.display.WriteString("NIMBUS", Font_16x26, true);
 493:Nimbus.cpp    ****     field.display.SetCursor(20, 28);
 494:Nimbus.cpp    ****     field.display.WriteString("based on Clouds", SMALL_FONT, true);
 495:Nimbus.cpp    ****     field.display.SetCursor(32, 38);
 496:Nimbus.cpp    ****     field.display.WriteString("by Mutable", SMALL_FONT, true);
 497:Nimbus.cpp    ****     field.display.SetCursor(29, 48);
 498:Nimbus.cpp    ****     field.display.WriteString("Instruments", SMALL_FONT, true);
 499:Nimbus.cpp    **** }
 500:Nimbus.cpp    **** 
 501:Nimbus.cpp    **** inline void RenderCpuUsage()
 502:Nimbus.cpp    **** {
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 504:Nimbus.cpp    ****              cpu_usage,
 505:Nimbus.cpp    ****              "%02d%%",
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 507:Nimbus.cpp    ****                  / field.seed.AudioBlockSize()));
 508:Nimbus.cpp    ****     field.display.SetCursor(80, 0);
 509:Nimbus.cpp    ****     field.display.WriteString("CPU:", SMALL_FONT, true);
 510:Nimbus.cpp    ****     field.display.SetCursor(105, 0);
 511:Nimbus.cpp    ****     field.display.WriteString(cpu_usage_str, SMALL_FONT, true);
 512:Nimbus.cpp    **** }
 513:Nimbus.cpp    **** 
 514:Nimbus.cpp    **** inline void RenderCVMappings(MAPPABLE_CVS cv)
 515:Nimbus.cpp    **** {
 516:Nimbus.cpp    ****     if(cv == NONE)
 517:Nimbus.cpp    ****     {
 518:Nimbus.cpp    ****         return;
 519:Nimbus.cpp    ****     }
 520:Nimbus.cpp    **** 
 521:Nimbus.cpp    ****     int x_offset = 0;
 522:Nimbus.cpp    ****     int y_offset = 1;
ARM GAS  /tmp/ccUsbZWH.s 			page 103


 523:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 525:Nimbus.cpp    ****     {
 526:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == cv)
 527:Nimbus.cpp    ****         {
 528:Nimbus.cpp    ****             field.display.SetCursor(
 529:Nimbus.cpp    ****                 LEFT_BORDER_WIDTH + (x_offset * MAPPED_PARAM_CONTAINER_WIDTH)
 530:Nimbus.cpp    ****                     + 3,
 531:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 3);
 532:Nimbus.cpp    ****             field.display.WriteString(
 533:Nimbus.cpp    ****                 param_controls[i].GetAbbreviatedName(), SMALL_FONT, true);
 534:Nimbus.cpp    ****             field.display.DrawRect(
 535:Nimbus.cpp    ****                 LEFT_BORDER_WIDTH + (x_offset * MAPPED_PARAM_CONTAINER_WIDTH),
 536:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT),
 537:Nimbus.cpp    ****                 LEFT_BORDER_WIDTH + (x_offset * MAPPED_PARAM_CONTAINER_WIDTH)
 538:Nimbus.cpp    ****                     + 16,
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 540:Nimbus.cpp    ****                 true);
 541:Nimbus.cpp    ****             x_offset++;
 542:Nimbus.cpp    ****             if(x_offset * MAPPED_PARAM_CONTAINER_WIDTH > DISPLAY_WIDTH / 2)
 543:Nimbus.cpp    ****             {
 544:Nimbus.cpp    ****                 x_offset = 0;
 545:Nimbus.cpp    ****                 y_offset++;
 546:Nimbus.cpp    ****             }
 547:Nimbus.cpp    ****         }
 548:Nimbus.cpp    ****     }
 549:Nimbus.cpp    **** }
 550:Nimbus.cpp    **** 
 551:Nimbus.cpp    **** inline void RenderButtons1()
 552:Nimbus.cpp    **** {
 553:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 554:Nimbus.cpp    ****     field.display.WriteString("Quality:", SMALL_FONT, true);
 555:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_2 * SKINNY_ROW_HEIGHT);
 556:Nimbus.cpp    ****     field.display.DrawRect(0,
 557:Nimbus.cpp    ****                            (ROW_2 * SKINNY_ROW_HEIGHT) - VALUE_BAR_MARGIN,
 558:Nimbus.cpp    ****                            DISPLAY_WIDTH,
 559:Nimbus.cpp    ****                            (ROW_2 * SKINNY_ROW_HEIGHT) + VALUE_BAR_HEIGHT,
 560:Nimbus.cpp    ****                            true,
 561:Nimbus.cpp    ****                            true);
 562:Nimbus.cpp    **** 
 563:Nimbus.cpp    ****     auto currentPlaybackQuality = processor.quality();
 564:Nimbus.cpp    **** 
 565:Nimbus.cpp    ****     switch(currentPlaybackQuality)
 566:Nimbus.cpp    ****     {
 567:Nimbus.cpp    ****         case PLAYBACK_QUAL_16B_ST:
 568:Nimbus.cpp    ****             field.display.WriteString("16 bit Stereo", SMALL_FONT, false);
 569:Nimbus.cpp    ****             break;
 570:Nimbus.cpp    ****         case PLAYBACK_QUAL_16B_MO:
 571:Nimbus.cpp    ****             field.display.WriteString("16 bit Mono", SMALL_FONT, false);
 572:Nimbus.cpp    ****             break;
 573:Nimbus.cpp    ****         case PLAYBACK_QUAL_8B_ST:
 574:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Stereo", SMALL_FONT, false);
 575:Nimbus.cpp    ****             break;
 576:Nimbus.cpp    ****         case PLAYBACK_QUAL_8B_MO:
 577:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Mono", SMALL_FONT, false);
 578:Nimbus.cpp    ****             break;
 579:Nimbus.cpp    ****         default: break;
ARM GAS  /tmp/ccUsbZWH.s 			page 104


 580:Nimbus.cpp    ****     }
 581:Nimbus.cpp    **** 
 582:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 583:Nimbus.cpp    ****     field.display.WriteString("Playback Mode:", SMALL_FONT, true);
 584:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 585:Nimbus.cpp    ****     field.display.DrawRect(0,
 586:Nimbus.cpp    ****                            (ROW_4 * SKINNY_ROW_HEIGHT) - VALUE_BAR_MARGIN,
 587:Nimbus.cpp    ****                            DISPLAY_WIDTH,
 588:Nimbus.cpp    ****                            (ROW_4 * SKINNY_ROW_HEIGHT) + VALUE_BAR_HEIGHT,
 589:Nimbus.cpp    ****                            true,
 590:Nimbus.cpp    ****                            true);
 591:Nimbus.cpp    **** 
 592:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 593:Nimbus.cpp    ****     switch(currentPlaybackMode)
 594:Nimbus.cpp    ****     {
 595:Nimbus.cpp    ****         case PLAYBACK_MODE_GRANULAR:
 596:Nimbus.cpp    ****             field.display.WriteString("Granular", SMALL_FONT, false);
 597:Nimbus.cpp    ****             break;
 598:Nimbus.cpp    ****         case PLAYBACK_MODE_STRETCH:
 599:Nimbus.cpp    ****             field.display.WriteString("Shift and Stretch", SMALL_FONT, false);
 600:Nimbus.cpp    ****             break;
 601:Nimbus.cpp    ****         case PLAYBACK_MODE_LOOPING_DELAY:
 602:Nimbus.cpp    ****             field.display.WriteString("Looping Delay", SMALL_FONT, false);
 603:Nimbus.cpp    ****             break;
 604:Nimbus.cpp    ****         case PLAYBACK_MODE_SPECTRAL:
 605:Nimbus.cpp    ****             field.display.WriteString("Spectral Processor", SMALL_FONT, false);
 606:Nimbus.cpp    ****             break;
 607:Nimbus.cpp    ****         default: break;
 608:Nimbus.cpp    ****     }
 609:Nimbus.cpp    **** }
 610:Nimbus.cpp    **** 
 611:Nimbus.cpp    **** inline void RenderButtons2()
 612:Nimbus.cpp    **** {
 613:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 614:Nimbus.cpp    **** 
 615:Nimbus.cpp    ****     field.display.WriteString("Shift:", SMALL_FONT, true);
 616:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 617:Nimbus.cpp    ****                            (ROW_1 * SKINNY_ROW_HEIGHT) - 1,
 618:Nimbus.cpp    ****                            DISPLAY_WIDTH - CHECKBOX_MARGIN,
 619:Nimbus.cpp    ****                            (ROW_1 * SKINNY_ROW_HEIGHT) + CHECKBOX_SIZE,
 620:Nimbus.cpp    ****                            true,
 621:Nimbus.cpp    ****                            is_shifted);
 622:Nimbus.cpp    **** 
 623:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, 2 * SKINNY_ROW_HEIGHT);
 624:Nimbus.cpp    **** 
 625:Nimbus.cpp    ****     field.display.WriteString("Freeze:", SMALL_FONT, true);
 626:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 627:Nimbus.cpp    ****                            (ROW_2 * SKINNY_ROW_HEIGHT) - 1,
 628:Nimbus.cpp    ****                            DISPLAY_WIDTH - CHECKBOX_MARGIN,
 629:Nimbus.cpp    ****                            (ROW_2 * SKINNY_ROW_HEIGHT) + CHECKBOX_SIZE,
 630:Nimbus.cpp    ****                            true,
 631:Nimbus.cpp    ****                            processor.frozen());
 632:Nimbus.cpp    **** 
 633:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 634:Nimbus.cpp    **** 
 635:Nimbus.cpp    ****     field.display.WriteString("Silent:", SMALL_FONT, true);
 636:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
ARM GAS  /tmp/ccUsbZWH.s 			page 105


 637:Nimbus.cpp    ****                            (ROW_3 * SKINNY_ROW_HEIGHT) - 1,
 638:Nimbus.cpp    ****                            DISPLAY_WIDTH - CHECKBOX_MARGIN,
 639:Nimbus.cpp    ****                            (ROW_3 * SKINNY_ROW_HEIGHT) + CHECKBOX_SIZE,
 640:Nimbus.cpp    ****                            true,
 641:Nimbus.cpp    ****                            is_silenced);
 642:Nimbus.cpp    **** 
 643:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 644:Nimbus.cpp    ****     field.display.WriteString("Bypass:", SMALL_FONT, true);
 645:Nimbus.cpp    **** 
 646:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 647:Nimbus.cpp    ****                            (ROW_4 * SKINNY_ROW_HEIGHT) - 1,
 648:Nimbus.cpp    ****                            DISPLAY_WIDTH - CHECKBOX_MARGIN,
 649:Nimbus.cpp    ****                            (ROW_4 * SKINNY_ROW_HEIGHT) + CHECKBOX_SIZE,
 650:Nimbus.cpp    ****                            true,
 651:Nimbus.cpp    ****                            is_bypassed);
 652:Nimbus.cpp    **** }
 653:Nimbus.cpp    **** 
 654:Nimbus.cpp    **** inline void RenderScope()
 655:Nimbus.cpp    **** {
 656:Nimbus.cpp    ****     int prev_x = 0;
 657:Nimbus.cpp    ****     int prev_y = (DISPLAY_HEIGHT + HEADER_HEIGHT) / 2;
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
 659:Nimbus.cpp    ****     {
 660:Nimbus.cpp    ****         int y = std::min(std::max((DISPLAY_HEIGHT + HEADER_HEIGHT) / 2
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 662:Nimbus.cpp    ****                                   0),
 663:Nimbus.cpp    ****                          DISPLAY_HEIGHT);
 664:Nimbus.cpp    ****         int x = i * DISPLAY_WIDTH / AUDIO_BLOCK_SIZE;
 665:Nimbus.cpp    ****         if(i != 0)
 666:Nimbus.cpp    ****         {
 667:Nimbus.cpp    ****             field.display.DrawLine(prev_x, prev_y, x, y, true);
 668:Nimbus.cpp    ****         }
 669:Nimbus.cpp    ****         prev_x = x;
 670:Nimbus.cpp    ****         prev_y = y;
 671:Nimbus.cpp    ****     }
 672:Nimbus.cpp    **** }
 673:Nimbus.cpp    **** 
 674:Nimbus.cpp    **** void UpdateOled()
 675:Nimbus.cpp    **** {
 676:Nimbus.cpp    ****     field.display.Fill(false);
 677:Nimbus.cpp    **** 
 678:Nimbus.cpp    ****     if(current_display_page != SPLASH)
 679:Nimbus.cpp    ****     {
 680:Nimbus.cpp    ****         field.display.DrawLine(
 681:Nimbus.cpp    ****             0, HEADER_HEIGHT, DISPLAY_WIDTH, HEADER_HEIGHT, true);
 682:Nimbus.cpp    ****         field.display.SetCursor(0, 0);
 683:Nimbus.cpp    ****     }
 684:Nimbus.cpp    **** 
 685:Nimbus.cpp    ****     switch(current_display_page)
 686:Nimbus.cpp    ****     {
 687:Nimbus.cpp    ****         case SPLASH: RenderSplash(); break;
 688:Nimbus.cpp    **** 
 689:Nimbus.cpp    ****         case PARAMETERS1TO3:
 690:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 1", DEFAULT_FONT, true);
 691:Nimbus.cpp    ****             RenderParams(PARAMETERS1TO3);
 692:Nimbus.cpp    ****             break;
 693:Nimbus.cpp    **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 106


 694:Nimbus.cpp    ****         case PARAMETERS4TO6:
 695:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 2", DEFAULT_FONT, true);
 696:Nimbus.cpp    ****             RenderParams(PARAMETERS4TO6);
 697:Nimbus.cpp    ****             break;
 698:Nimbus.cpp    **** 
 699:Nimbus.cpp    ****         case PARAMETERS7TO9:
 700:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 3", DEFAULT_FONT, true);
 701:Nimbus.cpp    ****             RenderParams(PARAMETERS7TO9);
 702:Nimbus.cpp    ****             break;
 703:Nimbus.cpp    **** 
 704:Nimbus.cpp    ****         case BUTTONS1:
 705:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 1", DEFAULT_FONT, true);
 706:Nimbus.cpp    ****             RenderButtons1();
 707:Nimbus.cpp    ****             break;
 708:Nimbus.cpp    **** 
 709:Nimbus.cpp    ****         case BUTTONS2:
 710:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 2", DEFAULT_FONT, true);
 711:Nimbus.cpp    ****             RenderButtons2();
 712:Nimbus.cpp    ****             break;
 713:Nimbus.cpp    **** 
 714:Nimbus.cpp    ****         case CVMAPPINGS2:
 715:Nimbus.cpp    ****             field.display.WriteString("CV2 Mappings", DEFAULT_FONT, true);
 716:Nimbus.cpp    ****             RenderCVMappings(CV2);
 717:Nimbus.cpp    ****             break;
 718:Nimbus.cpp    **** 
 719:Nimbus.cpp    ****         case CVMAPPINGS3:
 720:Nimbus.cpp    ****             field.display.WriteString("CV3 Mappings", DEFAULT_FONT, true);
 721:Nimbus.cpp    ****             RenderCVMappings(CV3);
 722:Nimbus.cpp    ****             break;
 723:Nimbus.cpp    **** 
 724:Nimbus.cpp    ****         case CVMAPPINGS4:
 725:Nimbus.cpp    ****             field.display.WriteString("CV4 Mappings", DEFAULT_FONT, true);
 726:Nimbus.cpp    ****             RenderCVMappings(CV4);
 727:Nimbus.cpp    ****             break;
 728:Nimbus.cpp    **** 
 729:Nimbus.cpp    ****         case SCOPE:
 730:Nimbus.cpp    ****             field.display.WriteString("Scope", DEFAULT_FONT, true);
 731:Nimbus.cpp    ****             RenderCpuUsage();
 732:Nimbus.cpp    ****             RenderScope();
 733:Nimbus.cpp    ****             break;
 734:Nimbus.cpp    **** 
 735:Nimbus.cpp    ****         default: break;
 736:Nimbus.cpp    ****     }
 737:Nimbus.cpp    **** 
 738:Nimbus.cpp    ****     field.display.Update();
 739:Nimbus.cpp    **** }
 740:Nimbus.cpp    **** 
 741:Nimbus.cpp    **** void UpdateLeds()
 742:Nimbus.cpp    **** {
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 744:Nimbus.cpp    ****     {
 745:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == NONE)
 746:Nimbus.cpp    ****         {
 747:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(),
 748:Nimbus.cpp    ****                                     param_controls[i].GetValue());
 749:Nimbus.cpp    ****         }
 750:Nimbus.cpp    ****         else
ARM GAS  /tmp/ccUsbZWH.s 			page 107


 751:Nimbus.cpp    ****         {
 752:Nimbus.cpp    ****             //LED is dark if the parameter is mapped to CV
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 754:Nimbus.cpp    ****         }
 755:Nimbus.cpp    ****     }
 756:Nimbus.cpp    **** 
 757:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 758:Nimbus.cpp    **** 
 759:Nimbus.cpp    ****     field.led_driver.SetLed(
 760:Nimbus.cpp    ****         LED_PLAYBACK_MODE_GRANULAR,
 761:Nimbus.cpp    ****         currentPlaybackMode == PLAYBACK_MODE_GRANULAR ? 1.f : 0.5f);
 762:Nimbus.cpp    ****     field.led_driver.SetLed(
 763:Nimbus.cpp    ****         LED_PLAYBACK_MODE_STRETCH,
 764:Nimbus.cpp    ****         currentPlaybackMode == PLAYBACK_MODE_STRETCH ? 1.f : 0.5f);
 765:Nimbus.cpp    ****     field.led_driver.SetLed(
 766:Nimbus.cpp    ****         LED_PLAYBACK_MODE_LOOPING_DELAY,
 767:Nimbus.cpp    ****         currentPlaybackMode == PLAYBACK_MODE_LOOPING_DELAY ? 1.f : 0.5f);
 768:Nimbus.cpp    ****     field.led_driver.SetLed(
 769:Nimbus.cpp    ****         LED_PLAYBACK_MODE_SPECTRAL,
 770:Nimbus.cpp    ****         currentPlaybackMode == PLAYBACK_MODE_SPECTRAL ? 1.f : 0.5f);
 771:Nimbus.cpp    **** 
 772:Nimbus.cpp    ****     auto currentPlaybackQuality = processor.quality();
 773:Nimbus.cpp    **** 
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 775:Nimbus.cpp    ****         LED_PLAYBACK_QUAL_16B_ST,
 776:Nimbus.cpp    ****         currentPlaybackQuality == PLAYBACK_QUAL_16B_ST ? 1.f : 0.5f);
 777:Nimbus.cpp    ****     field.led_driver.SetLed(
 778:Nimbus.cpp    ****         LED_PLAYBACK_QUAL_16B_MO,
 779:Nimbus.cpp    ****         currentPlaybackQuality == PLAYBACK_QUAL_16B_MO ? 1.f : 0.5f);
 780:Nimbus.cpp    ****     field.led_driver.SetLed(
 781:Nimbus.cpp    ****         LED_PLAYBACK_QUAL_8B_ST,
 782:Nimbus.cpp    ****         currentPlaybackQuality == PLAYBACK_QUAL_8B_ST ? 1.f : 0.5f);
 783:Nimbus.cpp    ****     field.led_driver.SetLed(
 784:Nimbus.cpp    ****         LED_PLAYBACK_QUAL_8B_MO,
 785:Nimbus.cpp    ****         currentPlaybackQuality == PLAYBACK_QUAL_8B_MO ? 1.f : 0.5f);
 786:Nimbus.cpp    **** 
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 788:Nimbus.cpp    ****                             current_device_state == CV_MAPPING
 789:Nimbus.cpp    ****                                     && currently_mapping_cv == CV2
 790:Nimbus.cpp    ****                                 ? 1.f
 791:Nimbus.cpp    ****                                 : 0.f);
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 793:Nimbus.cpp    ****                             current_device_state == CV_MAPPING
 794:Nimbus.cpp    ****                                     && currently_mapping_cv == CV3
 795:Nimbus.cpp    ****                                 ? 1.f
 796:Nimbus.cpp    ****                                 : 0.f);
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 798:Nimbus.cpp    ****                             current_device_state == CV_MAPPING
 799:Nimbus.cpp    ****                                     && currently_mapping_cv == CV4
 800:Nimbus.cpp    ****                                 ? 1.f
 801:Nimbus.cpp    ****                                 : 0.f);
 802:Nimbus.cpp    **** 
 803:Nimbus.cpp    ****     field.led_driver.SetLed(LED_FREEZE, processor.frozen() ? 1.f : 0.5f);
 804:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SILENCE, is_silenced ? 1.f : 0.5f);
 805:Nimbus.cpp    ****     field.led_driver.SetLed(LED_BYPASS, is_bypassed ? 1.f : 0.5f);
 806:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SHIFT, is_shifted ? 1.f : 0.5f);
 807:Nimbus.cpp    **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 108


 808:Nimbus.cpp    ****     field.led_driver.SwapBuffersAndTransmit();
 809:Nimbus.cpp    **** }
 810:Nimbus.cpp    **** 
 811:Nimbus.cpp    **** void ProcessParam(ParamControl& pc, bool auto_page_change)
 812:Nimbus.cpp    **** {
 2079              		.loc 24 812 1 is_stmt 1 view -0
 2080              		.cfi_startproc
 2081              		@ args = 0, pretend = 0, frame = 0
 2082              		@ frame_needed = 0, uses_anonymous_args = 0
 813:Nimbus.cpp    ****     pc.Process();
 2083              		.loc 24 813 5 view .LVU597
 812:Nimbus.cpp    ****     pc.Process();
 2084              		.loc 24 812 1 is_stmt 0 view .LVU598
 2085 0000 38B5     		push	{r3, r4, r5, lr}
 2086              		.cfi_def_cfa_offset 16
 2087              		.cfi_offset 3, -16
 2088              		.cfi_offset 4, -12
 2089              		.cfi_offset 5, -8
 2090              		.cfi_offset 14, -4
 812:Nimbus.cpp    ****     pc.Process();
 2091              		.loc 24 812 1 view .LVU599
 2092 0002 0446     		mov	r4, r0
 2093 0004 0D46     		mov	r5, r1
 2094              		.loc 24 813 15 view .LVU600
 2095 0006 FFF7FEFF 		bl	_ZN12ParamControl7ProcessEv
 2096              	.LVL76:
 814:Nimbus.cpp    **** 
 815:Nimbus.cpp    ****     switch(current_device_state)
 2097              		.loc 24 815 5 is_stmt 1 view .LVU601
 2098              		.loc 24 815 12 is_stmt 0 view .LVU602
 2099 000a 154B     		ldr	r3, .L68
 2100 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2101              		.loc 24 815 5 view .LVU603
 2102 000e 13B1     		cbz	r3, .L52
 2103 0010 012B     		cmp	r3, #1
 2104 0012 0FD0     		beq	.L53
 2105              	.L51:
 816:Nimbus.cpp    ****     {
 817:Nimbus.cpp    ****         case RUNNING:
 818:Nimbus.cpp    ****             if(pc.HasParamChanged())
 819:Nimbus.cpp    ****             {
 820:Nimbus.cpp    ****                 //If control is mapped to CV then don't change the page when its value is changed
 821:Nimbus.cpp    ****                 if(pc.GetMappedCV() == NONE && auto_page_change)
 822:Nimbus.cpp    ****                 {
 823:Nimbus.cpp    ****                     current_display_page = pc.GetDisplayPage();
 824:Nimbus.cpp    ****                 }
 825:Nimbus.cpp    ****             }
 826:Nimbus.cpp    ****             break;
 827:Nimbus.cpp    **** 
 828:Nimbus.cpp    ****         case CV_MAPPING:
 829:Nimbus.cpp    ****             if(can_map[currently_mapping_cv] == true)
 830:Nimbus.cpp    ****             {
 831:Nimbus.cpp    ****                 //The knob has changed from the last iteration so we are mapping
 832:Nimbus.cpp    ****                 if(pc.HasKnobChanged())
 833:Nimbus.cpp    ****                 {
 834:Nimbus.cpp    ****                     //If control has not been mapped yet or mapped to another CV then map it to the
 835:Nimbus.cpp    ****                     if(pc.GetMappedCV() != currently_mapping_cv)
ARM GAS  /tmp/ccUsbZWH.s 			page 109


 836:Nimbus.cpp    ****                     {
 837:Nimbus.cpp    ****                         pc.SetMappedCV(currently_mapping_cv);
 838:Nimbus.cpp    ****                         //Only allow one mapping action per key press
 839:Nimbus.cpp    ****                         can_map[currently_mapping_cv] = false;
 840:Nimbus.cpp    ****                     }
 841:Nimbus.cpp    ****                     else
 842:Nimbus.cpp    ****                     {
 843:Nimbus.cpp    ****                         //If the control is already mapped and the knob has been moved then unmap i
 844:Nimbus.cpp    ****                         pc.SetMappedCV(NONE);
 845:Nimbus.cpp    ****                         //Only allow one mapping action per key press
 846:Nimbus.cpp    ****                         can_map[currently_mapping_cv] = false;
 847:Nimbus.cpp    ****                     }
 848:Nimbus.cpp    ****                 }
 849:Nimbus.cpp    ****             }
 850:Nimbus.cpp    ****             break;
 851:Nimbus.cpp    **** 
 852:Nimbus.cpp    ****         default: break;
 853:Nimbus.cpp    ****     }
 854:Nimbus.cpp    **** }
 2106              		.loc 24 854 1 view .LVU604
 2107 0014 38BD     		pop	{r3, r4, r5, pc}
 2108              	.LVL77:
 2109              	.L52:
 817:Nimbus.cpp    ****             if(pc.HasParamChanged())
 2110              		.loc 24 817 9 is_stmt 1 view .LVU605
 818:Nimbus.cpp    ****             {
 2111              		.loc 24 818 13 view .LVU606
 155:Nimbus.cpp    ****     bool HasKnobChanged() { return knob_val_changed_; }
 2112              		.loc 24 155 30 view .LVU607
 818:Nimbus.cpp    ****             {
 2113              		.loc 24 818 13 is_stmt 0 view .LVU608
 2114 0016 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 2115 001a 002B     		cmp	r3, #0
 2116 001c FAD0     		beq	.L51
 2117              	.LVL78:
 2118              	.LBB911:
 2119              	.LBI911:
 811:Nimbus.cpp    **** {
 2120              		.loc 24 811 6 is_stmt 1 view .LVU609
 2121              	.LBB912:
 821:Nimbus.cpp    ****                 {
 2122              		.loc 24 821 17 view .LVU610
 821:Nimbus.cpp    ****                 {
 2123              		.loc 24 821 17 is_stmt 0 view .LVU611
 2124              	.LBE912:
 2125              	.LBE911:
 187:Nimbus.cpp    ****     void         SetMappedCV(MAPPABLE_CVS mapped_cv) { mapped_cv_ = mapped_cv; }
 2126              		.loc 24 187 34 is_stmt 1 view .LVU612
 2127              	.LBB915:
 2128              	.LBB913:
 821:Nimbus.cpp    ****                 {
 2129              		.loc 24 821 45 is_stmt 0 view .LVU613
 2130 001e 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 2131 0022 002B     		cmp	r3, #0
 2132 0024 F6D1     		bne	.L51
 2133 0026 002D     		cmp	r5, #0
 2134 0028 F4D0     		beq	.L51
ARM GAS  /tmp/ccUsbZWH.s 			page 110


 823:Nimbus.cpp    ****                 }
 2135              		.loc 24 823 21 is_stmt 1 view .LVU614
 2136              	.LVL79:
 823:Nimbus.cpp    ****                 }
 2137              		.loc 24 823 21 is_stmt 0 view .LVU615
 2138              	.LBE913:
 2139              	.LBE915:
 185:Nimbus.cpp    **** 
 2140              		.loc 24 185 37 is_stmt 1 view .LVU616
 2141              	.LBB916:
 2142              	.LBB914:
 823:Nimbus.cpp    ****                 }
 2143              		.loc 24 823 42 is_stmt 0 view .LVU617
 2144 002a 94F83120 		ldrb	r2, [r4, #49]	@ zero_extendqisi2
 2145 002e 0D4B     		ldr	r3, .L68+4
 2146 0030 1A70     		strb	r2, [r3]
 2147 0032 EFE7     		b	.L51
 2148              	.LVL80:
 2149              	.L53:
 823:Nimbus.cpp    ****                 }
 2150              		.loc 24 823 42 view .LVU618
 2151              	.LBE914:
 2152              	.LBE916:
 828:Nimbus.cpp    ****             if(can_map[currently_mapping_cv] == true)
 2153              		.loc 24 828 9 is_stmt 1 view .LVU619
 829:Nimbus.cpp    ****             {
 2154              		.loc 24 829 13 view .LVU620
 829:Nimbus.cpp    ****             {
 2155              		.loc 24 829 24 is_stmt 0 view .LVU621
 2156 0034 0C4B     		ldr	r3, .L68+8
 829:Nimbus.cpp    ****             {
 2157              		.loc 24 829 44 view .LVU622
 2158 0036 0D4A     		ldr	r2, .L68+12
 829:Nimbus.cpp    ****             {
 2159              		.loc 24 829 24 view .LVU623
 2160 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 829:Nimbus.cpp    ****             {
 2161              		.loc 24 829 13 view .LVU624
 2162 003a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 2163 003c 0029     		cmp	r1, #0
 2164 003e E9D0     		beq	.L51
 832:Nimbus.cpp    ****                 {
 2165              		.loc 24 832 17 is_stmt 1 view .LVU625
 2166              	.LVL81:
 156:Nimbus.cpp    **** 
 2167              		.loc 24 156 29 view .LVU626
 832:Nimbus.cpp    ****                 {
 2168              		.loc 24 832 17 is_stmt 0 view .LVU627
 2169 0040 94F82810 		ldrb	r1, [r4, #40]	@ zero_extendqisi2
 2170 0044 0029     		cmp	r1, #0
 2171 0046 E5D0     		beq	.L51
 835:Nimbus.cpp    ****                     {
 2172              		.loc 24 835 21 is_stmt 1 view .LVU628
 2173              	.LVL82:
 187:Nimbus.cpp    ****     void         SetMappedCV(MAPPABLE_CVS mapped_cv) { mapped_cv_ = mapped_cv; }
 2174              		.loc 24 187 34 view .LVU629
 835:Nimbus.cpp    ****                     {
ARM GAS  /tmp/ccUsbZWH.s 			page 111


 2175              		.loc 24 835 21 is_stmt 0 view .LVU630
 2176 0048 94F83200 		ldrb	r0, [r4, #50]	@ zero_extendqisi2
 2177 004c 0021     		movs	r1, #0
 837:Nimbus.cpp    ****                         //Only allow one mapping action per key press
 2178              		.loc 24 837 25 is_stmt 1 view .LVU631
 2179              	.LVL83:
 2180              	.LBB917:
 2181              	.LBI917:
 188:Nimbus.cpp    **** 
 2182              		.loc 24 188 18 view .LVU632
 2183              	.LBB918:
 188:Nimbus.cpp    **** 
 2184              		.loc 24 188 56 view .LVU633
 2185              	.LBE918:
 2186              	.LBE917:
 835:Nimbus.cpp    ****                     {
 2187              		.loc 24 835 21 is_stmt 0 view .LVU634
 2188 004e 9842     		cmp	r0, r3
 2189              	.LBB920:
 2190              	.LBB919:
 188:Nimbus.cpp    **** 
 2191              		.loc 24 188 67 view .LVU635
 2192 0050 19BF     		ittee	ne
 2193 0052 84F83230 		strbne	r3, [r4, #50]
 2194              	.LVL84:
 188:Nimbus.cpp    **** 
 2195              		.loc 24 188 67 view .LVU636
 2196              	.LBE919:
 2197              	.LBE920:
 839:Nimbus.cpp    ****                     }
 2198              		.loc 24 839 25 is_stmt 1 view .LVU637
 839:Nimbus.cpp    ****                     }
 2199              		.loc 24 839 55 is_stmt 0 view .LVU638
 2200 0056 D154     		strbne	r1, [r2, r3]
 844:Nimbus.cpp    ****                         //Only allow one mapping action per key press
 2201              		.loc 24 844 25 is_stmt 1 view .LVU639
 2202              	.LVL85:
 2203              	.LBB921:
 2204              	.LBI921:
 188:Nimbus.cpp    **** 
 2205              		.loc 24 188 18 view .LVU640
 2206              	.LBB922:
 188:Nimbus.cpp    **** 
 2207              		.loc 24 188 56 view .LVU641
 188:Nimbus.cpp    **** 
 2208              		.loc 24 188 67 is_stmt 0 view .LVU642
 2209 0058 84F83210 		strbeq	r1, [r4, #50]
 2210              	.LVL86:
 188:Nimbus.cpp    **** 
 2211              		.loc 24 188 67 view .LVU643
 2212              	.LBE922:
 2213              	.LBE921:
 846:Nimbus.cpp    ****                     }
 2214              		.loc 24 846 25 is_stmt 1 view .LVU644
 846:Nimbus.cpp    ****                     }
 2215              		.loc 24 846 55 is_stmt 0 view .LVU645
 2216 005c 1154     		strbeq	r1, [r2, r0]
ARM GAS  /tmp/ccUsbZWH.s 			page 112


 2217              		.loc 24 854 1 view .LVU646
 2218 005e D9E7     		b	.L51
 2219              	.L69:
 2220              		.align	2
 2221              	.L68:
 2222 0060 00000000 		.word	.LANCHOR2
 2223 0064 00000000 		.word	.LANCHOR3
 2224 0068 00000000 		.word	.LANCHOR4
 2225 006c 00000000 		.word	.LANCHOR5
 2226              		.cfi_endproc
 2227              	.LFE4546:
 2229              		.section	.text._Z13ProcessParamsb,"ax",%progbits
 2230              		.align	1
 2231              		.global	_Z13ProcessParamsb
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z13ProcessParamsb:
 2238              	.LVL87:
 2239              	.LFB4547:
 855:Nimbus.cpp    **** 
 856:Nimbus.cpp    **** void ProcessParams(bool auto_page_change = true)
 857:Nimbus.cpp    **** {
 2240              		.loc 24 857 1 is_stmt 1 view -0
 2241              		.cfi_startproc
 2242              		@ args = 0, pretend = 0, frame = 0
 2243              		@ frame_needed = 0, uses_anonymous_args = 0
 858:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 2244              		.loc 24 858 5 view .LVU648
 2245              	.LBB923:
 2246              		.loc 24 858 35 view .LVU649
 2247              	.LBE923:
 857:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 2248              		.loc 24 857 1 is_stmt 0 view .LVU650
 2249 0000 70B5     		push	{r4, r5, r6, lr}
 2250              		.cfi_def_cfa_offset 16
 2251              		.cfi_offset 4, -16
 2252              		.cfi_offset 5, -12
 2253              		.cfi_offset 6, -8
 2254              		.cfi_offset 14, -4
 857:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 2255              		.loc 24 857 1 view .LVU651
 2256 0002 0646     		mov	r6, r0
 2257 0004 0A4C     		ldr	r4, .L76
 2258              	.LBB924:
 2259              		.loc 24 858 13 view .LVU652
 2260 0006 0825     		movs	r5, #8
 2261              	.LVL88:
 2262              	.L74:
 859:Nimbus.cpp    ****     {
 860:Nimbus.cpp    ****         if((is_shifted && param_controls[i].IsShifted())
 2263              		.loc 24 860 9 is_stmt 1 view .LVU653
 861:Nimbus.cpp    ****            || (!is_shifted && !param_controls[i].IsShifted()))
 2264              		.loc 24 861 12 is_stmt 0 view .LVU654
 2265 0008 0A4A     		ldr	r2, .L76+4
 2266 000a 04F5D070 		add	r0, r4, #416
ARM GAS  /tmp/ccUsbZWH.s 			page 113


 2267 000e 94F8B031 		ldrb	r3, [r4, #432]	@ zero_extendqisi2
 2268 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2269 0014 2AB1     		cbz	r2, .L71
 2270              	.LVL89:
 2271              		.loc 24 861 12 view .LVU655
 2272              	.LBE924:
 183:Nimbus.cpp    **** 
 2273              		.loc 24 183 31 is_stmt 1 view .LVU656
 2274              	.LBB925:
 860:Nimbus.cpp    ****            || (!is_shifted && !param_controls[i].IsShifted()))
 2275              		.loc 24 860 24 is_stmt 0 view .LVU657
 2276 0016 33B9     		cbnz	r3, .L72
 2277              	.LVL90:
 2278              	.L73:
 858:Nimbus.cpp    ****     {
 2279              		.loc 24 858 5 is_stmt 1 discriminator 2 view .LVU658
 2280 0018 013D     		subs	r5, r5, #1
 2281              	.LVL91:
 858:Nimbus.cpp    ****     {
 2282              		.loc 24 858 35 discriminator 2 view .LVU659
 2283 001a 343C     		subs	r4, r4, #52
 2284 001c 6B1C     		adds	r3, r5, #1
 2285 001e F3D1     		bne	.L74
 2286              	.LBE925:
 862:Nimbus.cpp    ****         {
 863:Nimbus.cpp    ****             ProcessParam(param_controls[i], auto_page_change);
 864:Nimbus.cpp    ****         }
 865:Nimbus.cpp    ****     }
 866:Nimbus.cpp    **** }
 2287              		.loc 24 866 1 is_stmt 0 view .LVU660
 2288 0020 70BD     		pop	{r4, r5, r6, pc}
 2289              	.LVL92:
 2290              	.L71:
 183:Nimbus.cpp    **** 
 2291              		.loc 24 183 31 is_stmt 1 discriminator 2 view .LVU661
 2292              	.LBB926:
 861:Nimbus.cpp    ****         {
 2293              		.loc 24 861 28 is_stmt 0 discriminator 2 view .LVU662
 2294 0022 002B     		cmp	r3, #0
 2295 0024 F8D1     		bne	.L73
 2296              	.LVL93:
 2297              	.L72:
 863:Nimbus.cpp    ****         }
 2298              		.loc 24 863 13 is_stmt 1 discriminator 4 view .LVU663
 863:Nimbus.cpp    ****         }
 2299              		.loc 24 863 25 is_stmt 0 discriminator 4 view .LVU664
 2300 0026 3146     		mov	r1, r6
 2301 0028 FFF7FEFF 		bl	_Z12ProcessParamR12ParamControlb
 2302              	.LVL94:
 2303 002c F4E7     		b	.L73
 2304              	.L77:
 2305 002e 00BF     		.align	2
 2306              	.L76:
 2307 0030 00000000 		.word	.LANCHOR1
 2308 0034 00000000 		.word	.LANCHOR6
 2309              	.LBE926:
 2310              		.cfi_endproc
ARM GAS  /tmp/ccUsbZWH.s 			page 114


 2311              	.LFE4547:
 2313              		.section	.text._Z14ProcessButtonsv,"ax",%progbits
 2314              		.align	1
 2315              		.global	_Z14ProcessButtonsv
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2319              		.fpu fpv5-d16
 2321              	_Z14ProcessButtonsv:
 2322              	.LFB4548:
 867:Nimbus.cpp    **** 
 868:Nimbus.cpp    **** void ProcessButtons()
 869:Nimbus.cpp    **** {
 2323              		.loc 24 869 1 is_stmt 1 view -0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 0
 2326              		@ frame_needed = 0, uses_anonymous_args = 0
 870:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_QUAL_16B_ST))
 2327              		.loc 24 870 5 view .LVU666
 869:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_QUAL_16B_ST))
 2328              		.loc 24 869 1 is_stmt 0 view .LVU667
 2329 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2330              		.cfi_def_cfa_offset 24
 2331              		.cfi_offset 3, -24
 2332              		.cfi_offset 4, -20
 2333              		.cfi_offset 5, -16
 2334              		.cfi_offset 6, -12
 2335              		.cfi_offset 7, -8
 2336              		.cfi_offset 14, -4
 2337              		.loc 24 870 32 view .LVU668
 2338 0002 0821     		movs	r1, #8
 2339 0004 8548     		ldr	r0, .L153
 2340 0006 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2341              	.LVL95:
 2342              		.loc 24 870 5 view .LVU669
 2343 000a 30B1     		cbz	r0, .L79
 871:Nimbus.cpp    ****     {
 872:Nimbus.cpp    ****         processor.set_quality(PLAYBACK_QUAL_16B_ST);
 2344              		.loc 24 872 9 is_stmt 1 view .LVU670
 2345              		.loc 24 872 30 is_stmt 0 view .LVU671
 2346 000c 0021     		movs	r1, #0
 2347 000e 8448     		ldr	r0, .L153+4
 2348 0010 FFF7FEFF 		bl	_ZN23GranularProcessorClouds11set_qualityEl
 2349              	.LVL96:
 873:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2350              		.loc 24 873 9 is_stmt 1 view .LVU672
 2351              		.loc 24 873 30 is_stmt 0 view .LVU673
 2352 0014 834B     		ldr	r3, .L153+8
 2353 0016 0422     		movs	r2, #4
 2354 0018 1A70     		strb	r2, [r3]
 2355              	.L79:
 874:Nimbus.cpp    ****     }
 875:Nimbus.cpp    **** 
 876:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_QUAL_16B_MO))
 2356              		.loc 24 876 5 is_stmt 1 view .LVU674
 2357              		.loc 24 876 32 is_stmt 0 view .LVU675
 2358 001a 0921     		movs	r1, #9
ARM GAS  /tmp/ccUsbZWH.s 			page 115


 2359 001c 7F48     		ldr	r0, .L153
 2360 001e FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2361              	.LVL97:
 2362              		.loc 24 876 5 view .LVU676
 2363 0022 30B1     		cbz	r0, .L80
 877:Nimbus.cpp    ****     {
 878:Nimbus.cpp    ****         processor.set_quality(PLAYBACK_QUAL_16B_MO);
 2364              		.loc 24 878 9 is_stmt 1 view .LVU677
 2365              		.loc 24 878 30 is_stmt 0 view .LVU678
 2366 0024 0121     		movs	r1, #1
 2367 0026 7E48     		ldr	r0, .L153+4
 2368 0028 FFF7FEFF 		bl	_ZN23GranularProcessorClouds11set_qualityEl
 2369              	.LVL98:
 879:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2370              		.loc 24 879 9 is_stmt 1 view .LVU679
 2371              		.loc 24 879 30 is_stmt 0 view .LVU680
 2372 002c 7D4B     		ldr	r3, .L153+8
 2373 002e 0422     		movs	r2, #4
 2374 0030 1A70     		strb	r2, [r3]
 2375              	.L80:
 880:Nimbus.cpp    ****     }
 881:Nimbus.cpp    **** 
 882:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_QUAL_8B_ST))
 2376              		.loc 24 882 5 is_stmt 1 view .LVU681
 2377              		.loc 24 882 32 is_stmt 0 view .LVU682
 2378 0032 0A21     		movs	r1, #10
 2379 0034 7948     		ldr	r0, .L153
 2380 0036 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2381              	.LVL99:
 2382              		.loc 24 882 5 view .LVU683
 2383 003a 30B1     		cbz	r0, .L81
 883:Nimbus.cpp    ****     {
 884:Nimbus.cpp    ****         processor.set_quality(PLAYBACK_QUAL_8B_ST);
 2384              		.loc 24 884 9 is_stmt 1 view .LVU684
 2385              		.loc 24 884 30 is_stmt 0 view .LVU685
 2386 003c 0221     		movs	r1, #2
 2387 003e 7848     		ldr	r0, .L153+4
 2388 0040 FFF7FEFF 		bl	_ZN23GranularProcessorClouds11set_qualityEl
 2389              	.LVL100:
 885:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2390              		.loc 24 885 9 is_stmt 1 view .LVU686
 2391              		.loc 24 885 30 is_stmt 0 view .LVU687
 2392 0044 774B     		ldr	r3, .L153+8
 2393 0046 0422     		movs	r2, #4
 2394 0048 1A70     		strb	r2, [r3]
 2395              	.L81:
 886:Nimbus.cpp    ****     }
 887:Nimbus.cpp    **** 
 888:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_QUAL_8B_MO))
 2396              		.loc 24 888 5 is_stmt 1 view .LVU688
 2397              		.loc 24 888 32 is_stmt 0 view .LVU689
 2398 004a 0B21     		movs	r1, #11
 2399 004c 7348     		ldr	r0, .L153
 2400 004e FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2401              	.LVL101:
 2402              		.loc 24 888 5 view .LVU690
 2403 0052 30B1     		cbz	r0, .L82
ARM GAS  /tmp/ccUsbZWH.s 			page 116


 889:Nimbus.cpp    ****     {
 890:Nimbus.cpp    ****         processor.set_quality(PLAYBACK_QUAL_8B_MO);
 2404              		.loc 24 890 9 is_stmt 1 view .LVU691
 2405              		.loc 24 890 30 is_stmt 0 view .LVU692
 2406 0054 0321     		movs	r1, #3
 2407 0056 7248     		ldr	r0, .L153+4
 2408 0058 FFF7FEFF 		bl	_ZN23GranularProcessorClouds11set_qualityEl
 2409              	.LVL102:
 891:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2410              		.loc 24 891 9 is_stmt 1 view .LVU693
 2411              		.loc 24 891 30 is_stmt 0 view .LVU694
 2412 005c 714B     		ldr	r3, .L153+8
 2413 005e 0422     		movs	r2, #4
 2414 0060 1A70     		strb	r2, [r3]
 2415              	.L82:
 892:Nimbus.cpp    ****     }
 893:Nimbus.cpp    **** 
 894:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_MODE_GRANULAR))
 2416              		.loc 24 894 5 is_stmt 1 view .LVU695
 2417              		.loc 24 894 32 is_stmt 0 view .LVU696
 2418 0062 0021     		movs	r1, #0
 2419 0064 6D48     		ldr	r0, .L153
 2420 0066 6E4C     		ldr	r4, .L153+4
 2421 0068 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2422              	.LVL103:
 2423              		.loc 24 894 5 view .LVU697
 2424 006c 20B1     		cbz	r0, .L83
 895:Nimbus.cpp    ****     {
 896:Nimbus.cpp    ****         processor.set_playback_mode(PLAYBACK_MODE_GRANULAR);
 2425              		.loc 24 896 9 is_stmt 1 view .LVU698
 2426              	.LVL104:
 2427              	.LBB927:
 2428              	.LBI927:
 105:dsp/granular_processor.h ****     {
 2429              		.loc 12 105 17 view .LVU699
 2430              	.LBB928:
 107:dsp/granular_processor.h ****     }
 2431              		.loc 12 107 9 view .LVU700
 107:dsp/granular_processor.h ****     }
 2432              		.loc 12 107 24 is_stmt 0 view .LVU701
 2433 006e 0023     		movs	r3, #0
 2434              	.LBE928:
 2435              	.LBE927:
 897:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2436              		.loc 24 897 30 view .LVU702
 2437 0070 0422     		movs	r2, #4
 2438              	.LBB930:
 2439              	.LBB929:
 107:dsp/granular_processor.h ****     }
 2440              		.loc 12 107 24 view .LVU703
 2441 0072 2370     		strb	r3, [r4]
 2442              	.LVL105:
 107:dsp/granular_processor.h ****     }
 2443              		.loc 12 107 24 view .LVU704
 2444              	.LBE929:
 2445              	.LBE930:
 2446              		.loc 24 897 9 is_stmt 1 view .LVU705
ARM GAS  /tmp/ccUsbZWH.s 			page 117


 2447              		.loc 24 897 30 is_stmt 0 view .LVU706
 2448 0074 6B4B     		ldr	r3, .L153+8
 2449 0076 1A70     		strb	r2, [r3]
 2450              	.LVL106:
 2451              	.L83:
 898:Nimbus.cpp    ****     }
 899:Nimbus.cpp    **** 
 900:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_MODE_STRETCH))
 2452              		.loc 24 900 5 is_stmt 1 view .LVU707
 2453              		.loc 24 900 32 is_stmt 0 view .LVU708
 2454 0078 0121     		movs	r1, #1
 2455 007a 6848     		ldr	r0, .L153
 2456 007c FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2457              	.LVL107:
 2458              		.loc 24 900 5 view .LVU709
 2459 0080 20B1     		cbz	r0, .L84
 901:Nimbus.cpp    ****     {
 902:Nimbus.cpp    ****         processor.set_playback_mode(PLAYBACK_MODE_STRETCH);
 2460              		.loc 24 902 9 is_stmt 1 view .LVU710
 2461              	.LVL108:
 2462              	.LBB931:
 2463              	.LBI931:
 105:dsp/granular_processor.h ****     {
 2464              		.loc 12 105 17 view .LVU711
 2465              	.LBB932:
 107:dsp/granular_processor.h ****     }
 2466              		.loc 12 107 9 view .LVU712
 107:dsp/granular_processor.h ****     }
 2467              		.loc 12 107 24 is_stmt 0 view .LVU713
 2468 0082 0123     		movs	r3, #1
 2469              	.LBE932:
 2470              	.LBE931:
 903:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2471              		.loc 24 903 30 view .LVU714
 2472 0084 0422     		movs	r2, #4
 2473              	.LBB934:
 2474              	.LBB933:
 107:dsp/granular_processor.h ****     }
 2475              		.loc 12 107 24 view .LVU715
 2476 0086 2370     		strb	r3, [r4]
 2477              	.LVL109:
 107:dsp/granular_processor.h ****     }
 2478              		.loc 12 107 24 view .LVU716
 2479              	.LBE933:
 2480              	.LBE934:
 2481              		.loc 24 903 9 is_stmt 1 view .LVU717
 2482              		.loc 24 903 30 is_stmt 0 view .LVU718
 2483 0088 664B     		ldr	r3, .L153+8
 2484 008a 1A70     		strb	r2, [r3]
 2485              	.LVL110:
 2486              	.L84:
 904:Nimbus.cpp    ****     }
 905:Nimbus.cpp    **** 
 906:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_MODE_LOOPING_DELAY))
 2487              		.loc 24 906 5 is_stmt 1 view .LVU719
 2488              		.loc 24 906 32 is_stmt 0 view .LVU720
 2489 008c 0221     		movs	r1, #2
ARM GAS  /tmp/ccUsbZWH.s 			page 118


 2490 008e 6348     		ldr	r0, .L153
 2491 0090 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2492              	.LVL111:
 2493              		.loc 24 906 5 view .LVU721
 2494 0094 20B1     		cbz	r0, .L85
 907:Nimbus.cpp    ****     {
 908:Nimbus.cpp    ****         processor.set_playback_mode(PLAYBACK_MODE_LOOPING_DELAY);
 2495              		.loc 24 908 9 is_stmt 1 view .LVU722
 2496              	.LVL112:
 2497              	.LBB935:
 2498              	.LBI935:
 105:dsp/granular_processor.h ****     {
 2499              		.loc 12 105 17 view .LVU723
 2500              	.LBB936:
 107:dsp/granular_processor.h ****     }
 2501              		.loc 12 107 9 view .LVU724
 107:dsp/granular_processor.h ****     }
 2502              		.loc 12 107 24 is_stmt 0 view .LVU725
 2503 0096 0223     		movs	r3, #2
 2504              	.LBE936:
 2505              	.LBE935:
 909:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2506              		.loc 24 909 30 view .LVU726
 2507 0098 0422     		movs	r2, #4
 2508              	.LBB938:
 2509              	.LBB937:
 107:dsp/granular_processor.h ****     }
 2510              		.loc 12 107 24 view .LVU727
 2511 009a 2370     		strb	r3, [r4]
 2512              	.LVL113:
 107:dsp/granular_processor.h ****     }
 2513              		.loc 12 107 24 view .LVU728
 2514              	.LBE937:
 2515              	.LBE938:
 2516              		.loc 24 909 9 is_stmt 1 view .LVU729
 2517              		.loc 24 909 30 is_stmt 0 view .LVU730
 2518 009c 614B     		ldr	r3, .L153+8
 2519 009e 1A70     		strb	r2, [r3]
 2520              	.LVL114:
 2521              	.L85:
 910:Nimbus.cpp    ****     }
 911:Nimbus.cpp    **** 
 912:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_PLAYBACK_MODE_SPECTRAL))
 2522              		.loc 24 912 5 is_stmt 1 view .LVU731
 2523              		.loc 24 912 32 is_stmt 0 view .LVU732
 2524 00a0 0321     		movs	r1, #3
 2525 00a2 5E48     		ldr	r0, .L153
 2526 00a4 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2527              	.LVL115:
 2528              		.loc 24 912 5 view .LVU733
 2529 00a8 20B1     		cbz	r0, .L86
 913:Nimbus.cpp    ****     {
 914:Nimbus.cpp    ****         processor.set_playback_mode(PLAYBACK_MODE_SPECTRAL);
 2530              		.loc 24 914 9 is_stmt 1 view .LVU734
 2531              	.LVL116:
 2532              	.LBB939:
 2533              	.LBI939:
ARM GAS  /tmp/ccUsbZWH.s 			page 119


 105:dsp/granular_processor.h ****     {
 2534              		.loc 12 105 17 view .LVU735
 2535              	.LBB940:
 107:dsp/granular_processor.h ****     }
 2536              		.loc 12 107 9 view .LVU736
 107:dsp/granular_processor.h ****     }
 2537              		.loc 12 107 24 is_stmt 0 view .LVU737
 2538 00aa 0323     		movs	r3, #3
 2539              	.LBE940:
 2540              	.LBE939:
 915:Nimbus.cpp    ****         current_display_page = BUTTONS1;
 2541              		.loc 24 915 30 view .LVU738
 2542 00ac 0422     		movs	r2, #4
 2543              	.LBB942:
 2544              	.LBB941:
 107:dsp/granular_processor.h ****     }
 2545              		.loc 12 107 24 view .LVU739
 2546 00ae 2370     		strb	r3, [r4]
 2547              	.LVL117:
 107:dsp/granular_processor.h ****     }
 2548              		.loc 12 107 24 view .LVU740
 2549              	.LBE941:
 2550              	.LBE942:
 2551              		.loc 24 915 9 is_stmt 1 view .LVU741
 2552              		.loc 24 915 30 is_stmt 0 view .LVU742
 2553 00b0 5C4B     		ldr	r3, .L153+8
 2554 00b2 1A70     		strb	r2, [r3]
 2555              	.LVL118:
 2556              	.L86:
 916:Nimbus.cpp    ****     }
 917:Nimbus.cpp    **** 
 918:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_FREEZE))
 2557              		.loc 24 918 5 is_stmt 1 view .LVU743
 2558              		.loc 24 918 32 is_stmt 0 view .LVU744
 2559 00b4 0521     		movs	r1, #5
 2560 00b6 5948     		ldr	r0, .L153
 2561 00b8 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2562              	.LVL119:
 2563              		.loc 24 918 5 view .LVU745
 2564 00bc 60B1     		cbz	r0, .L87
 919:Nimbus.cpp    ****     {
 920:Nimbus.cpp    ****         is_frozen_by_button = !is_frozen_by_button;
 2565              		.loc 24 920 9 is_stmt 1 view .LVU746
 2566              		.loc 24 920 29 is_stmt 0 view .LVU747
 2567 00be 5A4A     		ldr	r2, .L153+12
 2568              		.loc 24 920 31 view .LVU748
 2569 00c0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2570 00c2 83F00103 		eor	r3, r3, #1
 2571              		.loc 24 920 29 view .LVU749
 2572 00c6 1370     		strb	r3, [r2]
 921:Nimbus.cpp    ****         processor.ToggleFreeze();
 2573              		.loc 24 921 9 is_stmt 1 view .LVU750
 2574              	.LBB943:
 2575              	.LBI943:
  93:dsp/granular_processor.h **** 
 2576              		.loc 12 93 17 view .LVU751
 2577              	.LVL120:
ARM GAS  /tmp/ccUsbZWH.s 			page 120


 2578              	.LBB944:
  93:dsp/granular_processor.h **** 
 2579              		.loc 12 93 34 view .LVU752
  93:dsp/granular_processor.h **** 
 2580              		.loc 12 93 53 is_stmt 0 view .LVU753
 2581 00c8 584A     		ldr	r2, .L153+16
  93:dsp/granular_processor.h **** 
 2582              		.loc 12 93 55 view .LVU754
 2583 00ca 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2584 00cc 83F00103 		eor	r3, r3, #1
  93:dsp/granular_processor.h **** 
 2585              		.loc 12 93 53 view .LVU755
 2586 00d0 1370     		strb	r3, [r2]
 2587              	.LBE944:
 2588              	.LBE943:
 922:Nimbus.cpp    ****         current_display_page = BUTTONS2;
 2589              		.loc 24 922 9 is_stmt 1 view .LVU756
 2590              		.loc 24 922 30 is_stmt 0 view .LVU757
 2591 00d2 0522     		movs	r2, #5
 2592 00d4 534B     		ldr	r3, .L153+8
 2593 00d6 1A70     		strb	r2, [r3]
 2594              	.LVL121:
 2595              	.L87:
 923:Nimbus.cpp    ****     }
 924:Nimbus.cpp    **** 
 925:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_SILENCE))
 2596              		.loc 24 925 5 is_stmt 1 view .LVU758
 2597              		.loc 24 925 32 is_stmt 0 view .LVU759
 2598 00d8 0621     		movs	r1, #6
 2599 00da 5048     		ldr	r0, .L153
 2600 00dc 544E     		ldr	r6, .L153+20
 2601 00de FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2602              	.LVL122:
 2603              		.loc 24 925 5 view .LVU760
 2604 00e2 38B1     		cbz	r0, .L88
 926:Nimbus.cpp    ****     {
 927:Nimbus.cpp    ****         is_silenced = !is_silenced;
 2605              		.loc 24 927 9 is_stmt 1 view .LVU761
 2606              		.loc 24 927 23 is_stmt 0 view .LVU762
 2607 00e4 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 928:Nimbus.cpp    ****         processor.set_silence(is_silenced);
 929:Nimbus.cpp    ****         current_display_page = BUTTONS2;
 2608              		.loc 24 929 30 view .LVU763
 2609 00e6 0522     		movs	r2, #5
 927:Nimbus.cpp    ****         processor.set_silence(is_silenced);
 2610              		.loc 24 927 23 view .LVU764
 2611 00e8 83F00103 		eor	r3, r3, #1
 927:Nimbus.cpp    ****         processor.set_silence(is_silenced);
 2612              		.loc 24 927 21 view .LVU765
 2613 00ec 3370     		strb	r3, [r6]
 928:Nimbus.cpp    ****         processor.set_silence(is_silenced);
 2614              		.loc 24 928 9 is_stmt 1 view .LVU766
 2615              	.LVL123:
 2616              	.LBB945:
 2617              	.LBI945:
  99:dsp/granular_processor.h **** 
 2618              		.loc 12 99 17 view .LVU767
ARM GAS  /tmp/ccUsbZWH.s 			page 121


 2619              	.LBB946:
  99:dsp/granular_processor.h **** 
 2620              		.loc 12 99 45 view .LVU768
  99:dsp/granular_processor.h **** 
 2621              		.loc 12 99 54 is_stmt 0 view .LVU769
 2622 00ee 2374     		strb	r3, [r4, #16]
 2623              	.LVL124:
  99:dsp/granular_processor.h **** 
 2624              		.loc 12 99 54 view .LVU770
 2625              	.LBE946:
 2626              	.LBE945:
 2627              		.loc 24 929 9 is_stmt 1 view .LVU771
 2628              		.loc 24 929 30 is_stmt 0 view .LVU772
 2629 00f0 4C4B     		ldr	r3, .L153+8
 2630 00f2 1A70     		strb	r2, [r3]
 2631              	.LVL125:
 2632              	.L88:
 930:Nimbus.cpp    ****     }
 931:Nimbus.cpp    **** 
 932:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_BYPASS))
 2633              		.loc 24 932 5 is_stmt 1 view .LVU773
 2634              		.loc 24 932 32 is_stmt 0 view .LVU774
 2635 00f4 0721     		movs	r1, #7
 2636 00f6 4948     		ldr	r0, .L153
 2637 00f8 4E4D     		ldr	r5, .L153+24
 2638 00fa FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2639              	.LVL126:
 2640              		.loc 24 932 5 view .LVU775
 2641 00fe 38B1     		cbz	r0, .L89
 933:Nimbus.cpp    ****     {
 934:Nimbus.cpp    ****         is_bypassed = !is_bypassed;
 2642              		.loc 24 934 9 is_stmt 1 view .LVU776
 2643              		.loc 24 934 23 is_stmt 0 view .LVU777
 2644 0100 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 935:Nimbus.cpp    ****         processor.set_bypass(is_bypassed);
 936:Nimbus.cpp    ****         current_display_page = BUTTONS2;
 2645              		.loc 24 936 30 view .LVU778
 2646 0102 0522     		movs	r2, #5
 934:Nimbus.cpp    ****         processor.set_bypass(is_bypassed);
 2647              		.loc 24 934 23 view .LVU779
 2648 0104 83F00103 		eor	r3, r3, #1
 934:Nimbus.cpp    ****         processor.set_bypass(is_bypassed);
 2649              		.loc 24 934 21 view .LVU780
 2650 0108 2B70     		strb	r3, [r5]
 935:Nimbus.cpp    ****         processor.set_bypass(is_bypassed);
 2651              		.loc 24 935 9 is_stmt 1 view .LVU781
 2652              	.LVL127:
 2653              	.LBB947:
 2654              	.LBI947:
 101:dsp/granular_processor.h **** 
 2655              		.loc 12 101 17 view .LVU782
 2656              	.LBB948:
 101:dsp/granular_processor.h **** 
 2657              		.loc 12 101 43 view .LVU783
 101:dsp/granular_processor.h **** 
 2658              		.loc 12 101 51 is_stmt 0 view .LVU784
 2659 010a 6374     		strb	r3, [r4, #17]
ARM GAS  /tmp/ccUsbZWH.s 			page 122


 2660              	.LVL128:
 101:dsp/granular_processor.h **** 
 2661              		.loc 12 101 51 view .LVU785
 2662              	.LBE948:
 2663              	.LBE947:
 2664              		.loc 24 936 9 is_stmt 1 view .LVU786
 2665              		.loc 24 936 30 is_stmt 0 view .LVU787
 2666 010c 454B     		ldr	r3, .L153+8
 2667 010e 1A70     		strb	r2, [r3]
 2668              	.LVL129:
 2669              	.L89:
 937:Nimbus.cpp    ****     }
 938:Nimbus.cpp    **** 
 939:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_SHIFT))
 2670              		.loc 24 939 5 is_stmt 1 view .LVU788
 2671              		.loc 24 939 32 is_stmt 0 view .LVU789
 2672 0110 0F21     		movs	r1, #15
 2673 0112 4248     		ldr	r0, .L153
 2674 0114 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2675              	.LVL130:
 2676              		.loc 24 939 5 view .LVU790
 2677 0118 38B1     		cbz	r0, .L90
 940:Nimbus.cpp    ****     {
 941:Nimbus.cpp    ****         is_shifted           = !is_shifted;
 2678              		.loc 24 941 9 is_stmt 1 view .LVU791
 2679              		.loc 24 941 30 is_stmt 0 view .LVU792
 2680 011a 474A     		ldr	r2, .L153+28
 2681              		.loc 24 941 32 view .LVU793
 2682 011c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2683 011e 83F00103 		eor	r3, r3, #1
 2684              		.loc 24 941 30 view .LVU794
 2685 0122 1370     		strb	r3, [r2]
 942:Nimbus.cpp    ****         current_display_page = BUTTONS2;
 2686              		.loc 24 942 9 is_stmt 1 view .LVU795
 2687              		.loc 24 942 30 is_stmt 0 view .LVU796
 2688 0124 0522     		movs	r2, #5
 2689 0126 3F4B     		ldr	r3, .L153+8
 2690 0128 1A70     		strb	r2, [r3]
 2691              	.L90:
 943:Nimbus.cpp    ****     }
 944:Nimbus.cpp    **** 
 945:Nimbus.cpp    ****     if(field.sw[0].RisingEdge())
 2692              		.loc 24 945 5 is_stmt 1 view .LVU797
 2693              	.LVL131:
 2694              		.file 27 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
ARM GAS  /tmp/ccUsbZWH.s 			page 123


  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
ARM GAS  /tmp/ccUsbZWH.s 			page 124


 2695              		.loc 27 69 38 view .LVU798
 2696              		.loc 24 945 30 is_stmt 0 view .LVU799
 2697 012a 3C4B     		ldr	r3, .L153
 2698              		.loc 24 945 5 view .LVU800
 2699 012c 93F87926 		ldrb	r2, [r3, #1657]	@ zero_extendqisi2
 2700 0130 7F2A     		cmp	r2, #127
 2701 0132 1A46     		mov	r2, r3
 2702 0134 0DD1     		bne	.L91
 946:Nimbus.cpp    ****     {
 947:Nimbus.cpp    ****         current_display_page
 2703              		.loc 24 947 9 is_stmt 1 view .LVU801
 2704              	.LVL132:
 2705              	.LBB949:
 2706              	.LBI949:
 275:Nimbus.cpp    **** {
 2707              		.loc 24 275 5 view .LVU802
 2708              	.LBB950:
 277:Nimbus.cpp    **** }
 2709              		.loc 24 277 5 view .LVU803
 277:Nimbus.cpp    **** }
 2710              		.loc 24 277 5 is_stmt 0 view .LVU804
 2711              	.LBE950:
 2712              	.LBE949:
 948:Nimbus.cpp    ****             = DISPLAY_PAGE(Mod(current_display_page - 1, NUM_PAGES));
 2713              		.loc 24 948 13 view .LVU805
 2714 0136 3B4F     		ldr	r7, .L153+8
 2715              	.LBB953:
 2716              	.LBB951:
 277:Nimbus.cpp    **** }
 2717              		.loc 24 277 16 view .LVU806
 2718 0138 0A21     		movs	r1, #10
 2719              	.LBE951:
 2720              	.LBE953:
 2721              		.loc 24 948 32 view .LVU807
 2722 013a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2723              		.loc 24 948 31 view .LVU808
 2724 013c 581E     		subs	r0, r3, #1
 2725              	.LBB954:
 2726              	.LBB952:
 277:Nimbus.cpp    **** }
 2727              		.loc 24 277 16 view .LVU809
 2728 013e 90FBF1F3 		sdiv	r3, r0, r1
 2729 0142 01FB1303 		mls	r3, r1, r3, r0
 277:Nimbus.cpp    **** }
 2730              		.loc 24 277 21 view .LVU810
 2731 0146 0B44     		add	r3, r3, r1
 277:Nimbus.cpp    **** }
 2732              		.loc 24 277 28 view .LVU811
 2733 0148 B3FBF1F0 		udiv	r0, r3, r1
 2734 014c 01FB1033 		mls	r3, r1, r0, r3
 2735              	.LBE952:
 2736              	.LBE954:
 2737              		.loc 24 948 15 view .LVU812
 2738 0150 3B70     		strb	r3, [r7]
 2739              	.L91:
 949:Nimbus.cpp    ****     }
 950:Nimbus.cpp    **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 125


 951:Nimbus.cpp    ****     if(field.sw[1].RisingEdge())
 2740              		.loc 24 951 5 is_stmt 1 view .LVU813
 2741              	.LVL133:
 2742              		.loc 27 69 38 view .LVU814
 2743              		.loc 24 951 5 is_stmt 0 view .LVU815
 2744 0152 92F88936 		ldrb	r3, [r2, #1673]	@ zero_extendqisi2
 2745 0156 7F2B     		cmp	r3, #127
 2746 0158 0DD1     		bne	.L92
 952:Nimbus.cpp    ****     {
 953:Nimbus.cpp    ****         current_display_page
 2747              		.loc 24 953 9 is_stmt 1 view .LVU816
 2748              	.LVL134:
 2749              	.LBB955:
 2750              	.LBI955:
 275:Nimbus.cpp    **** {
 2751              		.loc 24 275 5 view .LVU817
 2752              	.LBB956:
 277:Nimbus.cpp    **** }
 2753              		.loc 24 277 5 view .LVU818
 277:Nimbus.cpp    **** }
 2754              		.loc 24 277 5 is_stmt 0 view .LVU819
 2755              	.LBE956:
 2756              	.LBE955:
 954:Nimbus.cpp    ****             = DISPLAY_PAGE(Mod(current_display_page + 1, NUM_PAGES));
 2757              		.loc 24 954 13 view .LVU820
 2758 015a 3248     		ldr	r0, .L153+8
 2759              	.LBB959:
 2760              	.LBB957:
 277:Nimbus.cpp    **** }
 2761              		.loc 24 277 16 view .LVU821
 2762 015c 0A22     		movs	r2, #10
 2763              	.LBE957:
 2764              	.LBE959:
 2765              		.loc 24 954 32 view .LVU822
 2766 015e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2767              		.loc 24 954 31 view .LVU823
 2768 0160 591C     		adds	r1, r3, #1
 2769              	.LBB960:
 2770              	.LBB958:
 277:Nimbus.cpp    **** }
 2771              		.loc 24 277 16 view .LVU824
 2772 0162 B1FBF2F3 		udiv	r3, r1, r2
 2773 0166 02FB1313 		mls	r3, r2, r3, r1
 277:Nimbus.cpp    **** }
 2774              		.loc 24 277 21 view .LVU825
 2775 016a 1344     		add	r3, r3, r2
 277:Nimbus.cpp    **** }
 2776              		.loc 24 277 28 view .LVU826
 2777 016c B3FBF2F1 		udiv	r1, r3, r2
 2778 0170 02FB1133 		mls	r3, r2, r1, r3
 2779              	.LBE958:
 2780              	.LBE960:
 2781              		.loc 24 954 15 view .LVU827
 2782 0174 0370     		strb	r3, [r0]
 2783              	.L92:
 955:Nimbus.cpp    ****     }
 956:Nimbus.cpp    **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 126


 957:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_MAP_CV_2))
 2784              		.loc 24 957 5 is_stmt 1 view .LVU828
 2785              		.loc 24 957 32 is_stmt 0 view .LVU829
 2786 0176 0C21     		movs	r1, #12
 2787 0178 2848     		ldr	r0, .L153
 2788 017a FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2789              	.LVL135:
 2790              		.loc 24 957 5 view .LVU830
 2791 017e 48B1     		cbz	r0, .L93
 958:Nimbus.cpp    ****     {
 959:Nimbus.cpp    ****         current_device_state = CV_MAPPING;
 2792              		.loc 24 959 9 is_stmt 1 view .LVU831
 2793              		.loc 24 959 30 is_stmt 0 view .LVU832
 2794 0180 0123     		movs	r3, #1
 2795 0182 2E4A     		ldr	r2, .L153+32
 2796 0184 1370     		strb	r3, [r2]
 960:Nimbus.cpp    ****         currently_mapping_cv = CV2;
 2797              		.loc 24 960 9 is_stmt 1 view .LVU833
 2798              		.loc 24 960 30 is_stmt 0 view .LVU834
 2799 0186 2E4A     		ldr	r2, .L153+36
 2800 0188 1370     		strb	r3, [r2]
 961:Nimbus.cpp    ****         can_map[CV2]         = true;
 2801              		.loc 24 961 9 is_stmt 1 view .LVU835
 2802              		.loc 24 961 30 is_stmt 0 view .LVU836
 2803 018a 2E4A     		ldr	r2, .L153+40
 2804 018c 5370     		strb	r3, [r2, #1]
 962:Nimbus.cpp    ****         current_display_page = CVMAPPINGS2;
 2805              		.loc 24 962 9 is_stmt 1 view .LVU837
 2806              		.loc 24 962 30 is_stmt 0 view .LVU838
 2807 018e 0622     		movs	r2, #6
 2808 0190 244B     		ldr	r3, .L153+8
 2809 0192 1A70     		strb	r2, [r3]
 2810              	.L93:
 963:Nimbus.cpp    ****     }
 964:Nimbus.cpp    **** 
 965:Nimbus.cpp    ****     if(field.KeyboardFallingEdge(BUTTON_MAP_CV_2))
 2811              		.loc 24 965 5 is_stmt 1 view .LVU839
 2812              		.loc 24 965 33 is_stmt 0 view .LVU840
 2813 0194 0C21     		movs	r1, #12
 2814 0196 2148     		ldr	r0, .L153
 2815 0198 FFF7FEFF 		bl	_ZNK5daisy10DaisyField19KeyboardFallingEdgeEj
 2816              	.LVL136:
 2817              		.loc 24 965 5 view .LVU841
 2818 019c 20B1     		cbz	r0, .L94
 966:Nimbus.cpp    ****     {
 967:Nimbus.cpp    ****         current_device_state = RUNNING;
 2819              		.loc 24 967 9 is_stmt 1 view .LVU842
 2820              		.loc 24 967 30 is_stmt 0 view .LVU843
 2821 019e 0023     		movs	r3, #0
 2822 01a0 264A     		ldr	r2, .L153+32
 2823 01a2 1370     		strb	r3, [r2]
 968:Nimbus.cpp    ****         currently_mapping_cv = NONE;
 2824              		.loc 24 968 9 is_stmt 1 view .LVU844
 2825              		.loc 24 968 30 is_stmt 0 view .LVU845
 2826 01a4 264A     		ldr	r2, .L153+36
 2827 01a6 1370     		strb	r3, [r2]
 2828              	.L94:
ARM GAS  /tmp/ccUsbZWH.s 			page 127


 969:Nimbus.cpp    ****     }
 970:Nimbus.cpp    **** 
 971:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_MAP_CV_3))
 2829              		.loc 24 971 5 is_stmt 1 view .LVU846
 2830              		.loc 24 971 32 is_stmt 0 view .LVU847
 2831 01a8 0D21     		movs	r1, #13
 2832 01aa 1C48     		ldr	r0, .L153
 2833 01ac FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2834              	.LVL137:
 2835              		.loc 24 971 5 view .LVU848
 2836 01b0 50B1     		cbz	r0, .L95
 972:Nimbus.cpp    ****     {
 973:Nimbus.cpp    ****         current_device_state = CV_MAPPING;
 2837              		.loc 24 973 9 is_stmt 1 view .LVU849
 2838              		.loc 24 973 30 is_stmt 0 view .LVU850
 2839 01b2 0123     		movs	r3, #1
 2840 01b4 214A     		ldr	r2, .L153+32
 974:Nimbus.cpp    ****         currently_mapping_cv = CV3;
 2841              		.loc 24 974 30 view .LVU851
 2842 01b6 0221     		movs	r1, #2
 973:Nimbus.cpp    ****         currently_mapping_cv = CV3;
 2843              		.loc 24 973 30 view .LVU852
 2844 01b8 1370     		strb	r3, [r2]
 2845              		.loc 24 974 9 is_stmt 1 view .LVU853
 2846              		.loc 24 974 30 is_stmt 0 view .LVU854
 2847 01ba 214A     		ldr	r2, .L153+36
 2848 01bc 1170     		strb	r1, [r2]
 975:Nimbus.cpp    ****         can_map[CV3]         = true;
 2849              		.loc 24 975 9 is_stmt 1 view .LVU855
 2850              		.loc 24 975 30 is_stmt 0 view .LVU856
 2851 01be 214A     		ldr	r2, .L153+40
 2852 01c0 9370     		strb	r3, [r2, #2]
 976:Nimbus.cpp    ****         current_display_page = CVMAPPINGS3;
 2853              		.loc 24 976 9 is_stmt 1 view .LVU857
 2854              		.loc 24 976 30 is_stmt 0 view .LVU858
 2855 01c2 0722     		movs	r2, #7
 2856 01c4 174B     		ldr	r3, .L153+8
 2857 01c6 1A70     		strb	r2, [r3]
 2858              	.L95:
 977:Nimbus.cpp    ****     }
 978:Nimbus.cpp    **** 
 979:Nimbus.cpp    ****     if(field.KeyboardFallingEdge(BUTTON_MAP_CV_3))
 2859              		.loc 24 979 5 is_stmt 1 view .LVU859
 2860              		.loc 24 979 33 is_stmt 0 view .LVU860
 2861 01c8 0D21     		movs	r1, #13
 2862 01ca 1448     		ldr	r0, .L153
 2863 01cc FFF7FEFF 		bl	_ZNK5daisy10DaisyField19KeyboardFallingEdgeEj
 2864              	.LVL138:
 2865              		.loc 24 979 5 view .LVU861
 2866 01d0 20B1     		cbz	r0, .L96
 980:Nimbus.cpp    ****     {
 981:Nimbus.cpp    ****         current_device_state = RUNNING;
 2867              		.loc 24 981 9 is_stmt 1 view .LVU862
 2868              		.loc 24 981 30 is_stmt 0 view .LVU863
 2869 01d2 0023     		movs	r3, #0
 2870 01d4 194A     		ldr	r2, .L153+32
 2871 01d6 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccUsbZWH.s 			page 128


 982:Nimbus.cpp    ****         currently_mapping_cv = NONE;
 2872              		.loc 24 982 9 is_stmt 1 view .LVU864
 2873              		.loc 24 982 30 is_stmt 0 view .LVU865
 2874 01d8 194A     		ldr	r2, .L153+36
 2875 01da 1370     		strb	r3, [r2]
 2876              	.L96:
 983:Nimbus.cpp    ****     }
 984:Nimbus.cpp    **** 
 985:Nimbus.cpp    ****     if(field.KeyboardRisingEdge(BUTTON_MAP_CV_4))
 2877              		.loc 24 985 5 is_stmt 1 view .LVU866
 2878              		.loc 24 985 32 is_stmt 0 view .LVU867
 2879 01dc 0E21     		movs	r1, #14
 2880 01de 0F48     		ldr	r0, .L153
 2881 01e0 FFF7FEFF 		bl	_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
 2882              	.LVL139:
 2883              		.loc 24 985 5 view .LVU868
 2884 01e4 50B1     		cbz	r0, .L97
 986:Nimbus.cpp    ****     {
 987:Nimbus.cpp    ****         current_device_state = CV_MAPPING;
 2885              		.loc 24 987 9 is_stmt 1 view .LVU869
 2886              		.loc 24 987 30 is_stmt 0 view .LVU870
 2887 01e6 0123     		movs	r3, #1
 2888 01e8 144A     		ldr	r2, .L153+32
 988:Nimbus.cpp    ****         currently_mapping_cv = CV4;
 2889              		.loc 24 988 30 view .LVU871
 2890 01ea 0321     		movs	r1, #3
 987:Nimbus.cpp    ****         currently_mapping_cv = CV4;
 2891              		.loc 24 987 30 view .LVU872
 2892 01ec 1370     		strb	r3, [r2]
 2893              		.loc 24 988 9 is_stmt 1 view .LVU873
 2894              		.loc 24 988 30 is_stmt 0 view .LVU874
 2895 01ee 144A     		ldr	r2, .L153+36
 2896 01f0 1170     		strb	r1, [r2]
 989:Nimbus.cpp    ****         can_map[CV4]         = true;
 2897              		.loc 24 989 9 is_stmt 1 view .LVU875
 2898              		.loc 24 989 30 is_stmt 0 view .LVU876
 2899 01f2 144A     		ldr	r2, .L153+40
 2900 01f4 D370     		strb	r3, [r2, #3]
 990:Nimbus.cpp    ****         current_display_page = CVMAPPINGS4;
 2901              		.loc 24 990 9 is_stmt 1 view .LVU877
 2902              		.loc 24 990 30 is_stmt 0 view .LVU878
 2903 01f6 0822     		movs	r2, #8
 2904 01f8 0A4B     		ldr	r3, .L153+8
 2905 01fa 1A70     		strb	r2, [r3]
 2906              	.L97:
 991:Nimbus.cpp    ****     }
 992:Nimbus.cpp    **** 
 993:Nimbus.cpp    ****     if(field.KeyboardFallingEdge(BUTTON_MAP_CV_4))
 2907              		.loc 24 993 5 is_stmt 1 view .LVU879
 2908              		.loc 24 993 33 is_stmt 0 view .LVU880
 2909 01fc 0E21     		movs	r1, #14
 2910 01fe 0748     		ldr	r0, .L153
 2911 0200 FFF7FEFF 		bl	_ZNK5daisy10DaisyField19KeyboardFallingEdgeEj
 2912              	.LVL140:
 2913              		.loc 24 993 5 view .LVU881
 2914 0204 20B1     		cbz	r0, .L98
 994:Nimbus.cpp    ****     {
ARM GAS  /tmp/ccUsbZWH.s 			page 129


 995:Nimbus.cpp    ****         current_device_state = RUNNING;
 2915              		.loc 24 995 9 is_stmt 1 view .LVU882
 2916              		.loc 24 995 30 is_stmt 0 view .LVU883
 2917 0206 0023     		movs	r3, #0
 2918 0208 0C4A     		ldr	r2, .L153+32
 2919 020a 1370     		strb	r3, [r2]
 996:Nimbus.cpp    ****         currently_mapping_cv = NONE;
 2920              		.loc 24 996 9 is_stmt 1 view .LVU884
 2921              		.loc 24 996 30 is_stmt 0 view .LVU885
 2922 020c 0C4A     		ldr	r2, .L153+36
 2923 020e 1370     		strb	r3, [r2]
 2924              	.L98:
 997:Nimbus.cpp    ****     }
 998:Nimbus.cpp    **** 
 999:Nimbus.cpp    ****     processor.set_silence(is_silenced);
 2925              		.loc 24 999 5 is_stmt 1 view .LVU886
 2926              	.LVL141:
 2927              	.LBB961:
 2928              	.LBI961:
  99:dsp/granular_processor.h **** 
 2929              		.loc 12 99 17 view .LVU887
 2930              	.LBB962:
  99:dsp/granular_processor.h **** 
 2931              		.loc 12 99 45 view .LVU888
  99:dsp/granular_processor.h **** 
 2932              		.loc 12 99 54 is_stmt 0 view .LVU889
 2933 0210 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2934 0212 2374     		strb	r3, [r4, #16]
 2935              	.LVL142:
  99:dsp/granular_processor.h **** 
 2936              		.loc 12 99 54 view .LVU890
 2937              	.LBE962:
 2938              	.LBE961:
1000:Nimbus.cpp    ****     processor.set_bypass(is_bypassed);
 2939              		.loc 24 1000 5 is_stmt 1 view .LVU891
 2940              	.LBB963:
 2941              	.LBI963:
 101:dsp/granular_processor.h **** 
 2942              		.loc 12 101 17 view .LVU892
 2943              	.LBB964:
 101:dsp/granular_processor.h **** 
 2944              		.loc 12 101 43 view .LVU893
 101:dsp/granular_processor.h **** 
 2945              		.loc 12 101 51 is_stmt 0 view .LVU894
 2946 0214 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2947 0216 6374     		strb	r3, [r4, #17]
 2948              	.LVL143:
 101:dsp/granular_processor.h **** 
 2949              		.loc 12 101 51 view .LVU895
 2950              	.LBE964:
 2951              	.LBE963:
1001:Nimbus.cpp    **** }
 2952              		.loc 24 1001 1 view .LVU896
 2953 0218 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2954              	.L154:
 2955 021a 00BF     		.align	2
 2956              	.L153:
ARM GAS  /tmp/ccUsbZWH.s 			page 130


 2957 021c 00000000 		.word	field
 2958 0220 00000000 		.word	processor
 2959 0224 00000000 		.word	.LANCHOR3
 2960 0228 00000000 		.word	.LANCHOR7
 2961 022c 001B0000 		.word	processor+6912
 2962 0230 00000000 		.word	.LANCHOR8
 2963 0234 00000000 		.word	.LANCHOR9
 2964 0238 00000000 		.word	.LANCHOR6
 2965 023c 00000000 		.word	.LANCHOR2
 2966 0240 00000000 		.word	.LANCHOR4
 2967 0244 00000000 		.word	.LANCHOR5
 2968              		.cfi_endproc
 2969              	.LFE4548:
 2971              		.section	.text._Z22ProcessGatesTriggersCvv,"ax",%progbits
 2972              		.align	1
 2973              		.global	_Z22ProcessGatesTriggersCvv
 2974              		.syntax unified
 2975              		.thumb
 2976              		.thumb_func
 2977              		.fpu fpv5-d16
 2979              	_Z22ProcessGatesTriggersCvv:
 2980              	.LFB4549:
1002:Nimbus.cpp    **** 
1003:Nimbus.cpp    **** void ProcessGatesTriggersCv()
1004:Nimbus.cpp    **** {
 2981              		.loc 24 1004 1 is_stmt 1 view -0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 0
 2984              		@ frame_needed = 0, uses_anonymous_args = 0
1005:Nimbus.cpp    ****     //Using CV1 in as a gate to freeze and unfreeze the processor
1006:Nimbus.cpp    ****     //0.7f should map to 3.5 volts for HIGH state
1007:Nimbus.cpp    ****     //Debounced
1008:Nimbus.cpp    ****     if(!is_frozen_by_button)
 2985              		.loc 24 1008 5 view .LVU898
 2986              	.LBB973:
 2987              		.loc 24 1008 8 is_stmt 0 view .LVU899
 2988 0000 254B     		ldr	r3, .L167
 2989              	.LBE973:
1004:Nimbus.cpp    ****     //Using CV1 in as a gate to freeze and unfreeze the processor
 2990              		.loc 24 1004 1 view .LVU900
 2991 0002 70B5     		push	{r4, r5, r6, lr}
 2992              		.cfi_def_cfa_offset 16
 2993              		.cfi_offset 4, -16
 2994              		.cfi_offset 5, -12
 2995              		.cfi_offset 6, -8
 2996              		.cfi_offset 14, -4
 2997              	.LBB976:
 2998              		.loc 24 1008 5 view .LVU901
 2999 0004 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 3000 0006 254D     		ldr	r5, .L167+4
 3001 0008 002E     		cmp	r6, #0
 3002 000a 41D1     		bne	.L156
 3003              	.LBE976:
1009:Nimbus.cpp    ****     {
1010:Nimbus.cpp    **** #ifdef TOGGLE_FREEZE_ON_HIGH
1011:Nimbus.cpp    ****         //Has the debounce interval elapsed? If not then we just disregard this value
1012:Nimbus.cpp    ****         if(System::GetNow()
ARM GAS  /tmp/ccUsbZWH.s 			page 131


 3004              		.loc 24 1012 9 is_stmt 1 view .LVU902
 3005              	.LBB977:
 3006              	.LBB974:
1013:Nimbus.cpp    ****            > last_freeze_cv_update + CV_FREEZE_UPDATE_DEBOUNCE_INTERVAL)
 3007              		.loc 24 1013 36 is_stmt 0 view .LVU903
 3008 000c 244C     		ldr	r4, .L167+8
1012:Nimbus.cpp    ****            > last_freeze_cv_update + CV_FREEZE_UPDATE_DEBOUNCE_INTERVAL)
 3009              		.loc 24 1012 26 view .LVU904
 3010 000e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3011              	.LVL144:
 3012              		.loc 24 1013 36 view .LVU905
 3013 0012 2268     		ldr	r2, [r4]
 3014 0014 02F5FA72 		add	r2, r2, #500
1012:Nimbus.cpp    ****            > last_freeze_cv_update + CV_FREEZE_UPDATE_DEBOUNCE_INTERVAL)
 3015              		.loc 24 1012 9 view .LVU906
 3016 0018 9042     		cmp	r0, r2
 3017 001a 17D9     		bls	.L157
 3018              	.LBB975:
1014:Nimbus.cpp    ****         {
1015:Nimbus.cpp    ****             auto  cv1               = field.GetCv(field.CV_1);
 3019              		.loc 24 1015 13 is_stmt 1 view .LVU907
 3020              		.loc 24 1015 50 is_stmt 0 view .LVU908
 3021 001c 3146     		mov	r1, r6
 3022 001e 2148     		ldr	r0, .L167+12
 3023 0020 FFF7FEFF 		bl	_ZN5daisy10DaisyField5GetCvEj
 3024              	.LVL145:
1016:Nimbus.cpp    ****             float new_freeze_cv_val = cv1->Process();
 3025              		.loc 24 1016 13 is_stmt 1 view .LVU909
 3026              		.loc 24 1016 51 is_stmt 0 view .LVU910
 3027 0024 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 3028              	.LVL146:
1017:Nimbus.cpp    ****             if(new_freeze_cv_val > CV_FREEZE_TRIGGER_THRESHOLD)
 3029              		.loc 24 1017 13 is_stmt 1 view .LVU911
 3030 0028 DFED1F7A 		vldr.32	s15, .L167+16
 3031 002c B4EEE70A 		vcmpe.f32	s0, s15
 3032 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3033 0034 07DD     		ble	.L158
1018:Nimbus.cpp    ****             {
1019:Nimbus.cpp    ****                 //Toggle freeze for the processor if the gate is held high
1020:Nimbus.cpp    ****                 is_frozen_by_cv    = !is_frozen_by_cv;
 3034              		.loc 24 1020 17 view .LVU912
 3035              		.loc 24 1020 38 is_stmt 0 view .LVU913
 3036 0036 1D4A     		ldr	r2, .L167+20
 3037 0038 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3038 003a 83F00103 		eor	r3, r3, #1
 3039              		.loc 24 1020 36 view .LVU914
 3040 003e 1370     		strb	r3, [r2]
1021:Nimbus.cpp    ****                 parameters->freeze = is_frozen_by_cv;
 3041              		.loc 24 1021 17 is_stmt 1 view .LVU915
 3042              		.loc 24 1021 36 is_stmt 0 view .LVU916
 3043 0040 2A68     		ldr	r2, [r5]
 3044 0042 82F82430 		strb	r3, [r2, #36]
 3045              	.L158:
1022:Nimbus.cpp    ****             }
1023:Nimbus.cpp    ****             last_freeze_cv_update = System::GetNow();
 3046              		.loc 24 1023 13 is_stmt 1 view .LVU917
 3047              		.loc 24 1023 51 is_stmt 0 view .LVU918
ARM GAS  /tmp/ccUsbZWH.s 			page 132


 3048 0046 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 3049              	.LVL147:
 3050              		.loc 24 1023 35 view .LVU919
 3051 004a 2060     		str	r0, [r4]
 3052              	.L157:
 3053              		.loc 24 1023 35 view .LVU920
 3054              	.LBE975:
 3055              	.LBE974:
 3056              	.LBE977:
1024:Nimbus.cpp    ****         }
1025:Nimbus.cpp    **** #else
1026:Nimbus.cpp    ****         auto  cv1               = field.GetCv(field.CV_1);
1027:Nimbus.cpp    ****         float new_freeze_cv_val = cv1->Process();
1028:Nimbus.cpp    ****         //Only freeze the processor while the gate is held high
1029:Nimbus.cpp    ****         parameters->freeze = is_frozen_by_cv
1030:Nimbus.cpp    ****             = (new_freeze_cv_val > GATE_TRIGGER_THRESHOLD);
1031:Nimbus.cpp    **** #endif
1032:Nimbus.cpp    ****     }
1033:Nimbus.cpp    ****     else
1034:Nimbus.cpp    ****     {
1035:Nimbus.cpp    ****         is_frozen_by_cv = false;
1036:Nimbus.cpp    ****     }
1037:Nimbus.cpp    **** 
1038:Nimbus.cpp    ****     parameters->trigger = field.gate_in.Trig();
 3057              		.loc 24 1038 5 is_stmt 1 view .LVU921
 3058              		.loc 24 1038 17 is_stmt 0 view .LVU922
 3059 004c 2C68     		ldr	r4, [r5]
 3060              		.loc 24 1038 45 view .LVU923
 3061 004e 1848     		ldr	r0, .L167+24
 3062 0050 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 3063              	.LVL148:
 3064              		.loc 24 1038 25 view .LVU924
 3065 0054 84F82500 		strb	r0, [r4, #37]
1039:Nimbus.cpp    ****     parameters->gate    = field.gate_in.State();
 3066              		.loc 24 1039 5 is_stmt 1 view .LVU925
 3067              	.LBB978:
 3068              	.LBB979:
  26:../../libdaisy/src/hid/gatein.h **** 
  27:../../libdaisy/src/hid/gatein.h ****     /** Init
  28:../../libdaisy/src/hid/gatein.h ****     Initializes the gate input with specified hardware pin
  29:../../libdaisy/src/hid/gatein.h ****     */
  30:../../libdaisy/src/hid/gatein.h ****     void Init(dsy_gpio_pin *pin_cfg);
  31:../../libdaisy/src/hid/gatein.h ****     // ~~~~
  32:../../libdaisy/src/hid/gatein.h **** 
  33:../../libdaisy/src/hid/gatein.h ****     /** Trig
  34:../../libdaisy/src/hid/gatein.h ****     Checks current state of gate input.
  35:../../libdaisy/src/hid/gatein.h **** 
  36:../../libdaisy/src/hid/gatein.h ****     @return True if the GPIO just transitioned.
  37:../../libdaisy/src/hid/gatein.h ****     */
  38:../../libdaisy/src/hid/gatein.h ****     bool Trig();
  39:../../libdaisy/src/hid/gatein.h **** 
  40:../../libdaisy/src/hid/gatein.h ****     /** State
  41:../../libdaisy/src/hid/gatein.h ****     Checks current state of gate input (no state required)
  42:../../libdaisy/src/hid/gatein.h **** 
  43:../../libdaisy/src/hid/gatein.h ****     read function is inverted because of suggested BJT input circuit
  44:../../libdaisy/src/hid/gatein.h ****     */
  45:../../libdaisy/src/hid/gatein.h ****     inline bool State() { return !dsy_gpio_read(&pin_); }
ARM GAS  /tmp/ccUsbZWH.s 			page 133


 3069              		.loc 4 45 48 is_stmt 0 view .LVU926
 3070 0058 1548     		ldr	r0, .L167+24
 3071              	.LBE979:
 3072              	.LBE978:
 3073              		.loc 24 1039 17 view .LVU927
 3074 005a 2C68     		ldr	r4, [r5]
 3075              	.LVL149:
 3076              	.LBB982:
 3077              	.LBI978:
 3078              		.loc 4 45 17 is_stmt 1 view .LVU928
 3079              	.LBB980:
 3080              		.loc 4 45 27 view .LVU929
 3081              		.loc 4 45 48 is_stmt 0 view .LVU930
 3082 005c FFF7FEFF 		bl	dsy_gpio_read
 3083              	.LVL150:
 3084              		.loc 4 45 54 view .LVU931
 3085 0060 B0FA80F0 		clz	r0, r0
 3086              	.LBE980:
 3087              	.LBE982:
 3088              	.LBB983:
1040:Nimbus.cpp    **** 
1041:Nimbus.cpp    ****     //Send CV to all the mapped parameters
1042:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 3089              		.loc 24 1042 13 view .LVU932
 3090 0064 0025     		movs	r5, #0
 3091              	.LBE983:
 3092              	.LBB989:
 3093              	.LBB981:
 3094              		.loc 4 45 54 view .LVU933
 3095 0066 4009     		lsrs	r0, r0, #5
 3096 0068 84F82600 		strb	r0, [r4, #38]
 3097              	.LBE981:
 3098              	.LBE989:
 3099              		.loc 24 1042 5 is_stmt 1 view .LVU934
 3100              	.LVL151:
 3101              	.LBB990:
 3102              		.loc 24 1042 22 view .LVU935
 3103 006c 114C     		ldr	r4, .L167+28
 3104              	.LVL152:
 3105              	.L161:
 3106              		.loc 24 1042 22 is_stmt 0 view .LVU936
 3107              	.LBE990:
1043:Nimbus.cpp    ****     {
1044:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() != NONE)
 3108              		.loc 24 1044 9 is_stmt 1 view .LVU937
 3109              	.LBB991:
 3110              	.LBB984:
 3111              		.loc 24 1044 41 is_stmt 0 view .LVU938
 3112 006e 94F83210 		ldrb	r1, [r4, #50]	@ zero_extendqisi2
 3113              	.LVL153:
 3114              		.loc 24 1044 41 view .LVU939
 3115              	.LBE984:
 3116              	.LBE991:
 187:Nimbus.cpp    ****     void         SetMappedCV(MAPPABLE_CVS mapped_cv) { mapped_cv_ = mapped_cv; }
 3117              		.loc 24 187 34 is_stmt 1 view .LVU940
 3118              	.LBB992:
 3119              	.LBB987:
ARM GAS  /tmp/ccUsbZWH.s 			page 134


 3120              		.loc 24 1044 9 is_stmt 0 view .LVU941
 3121 0072 41B1     		cbz	r1, .L160
 3122              	.LBB985:
1045:Nimbus.cpp    ****         {
1046:Nimbus.cpp    ****             float cv_value = field.GetCvValue(param_controls[i].GetMappedCV());
 3123              		.loc 24 1046 13 is_stmt 1 view .LVU942
 3124              	.LVL154:
 3125              		.loc 24 1046 13 is_stmt 0 view .LVU943
 3126              	.LBE985:
 3127              	.LBE987:
 3128              	.LBE992:
 187:Nimbus.cpp    ****     void         SetMappedCV(MAPPABLE_CVS mapped_cv) { mapped_cv_ = mapped_cv; }
 3129              		.loc 24 187 34 is_stmt 1 view .LVU944
 3130              	.LBB993:
 3131              	.LBB988:
 3132              	.LBB986:
 3133              		.loc 24 1046 46 is_stmt 0 view .LVU945
 3134 0074 0B48     		ldr	r0, .L167+12
 3135 0076 FFF7FEFF 		bl	_ZNK5daisy10DaisyField10GetCvValueEj
 3136              	.LVL155:
1047:Nimbus.cpp    ****             param_controls[i].ControlChange(cv_value);
 3137              		.loc 24 1047 13 is_stmt 1 view .LVU946
 3138              		.loc 24 1047 44 is_stmt 0 view .LVU947
 3139 007a 2046     		mov	r0, r4
 3140 007c FFF7FEFF 		bl	_ZN12ParamControl13ControlChangeEf
 3141              	.LVL156:
1048:Nimbus.cpp    ****             param_controls[i].Process();
 3142              		.loc 24 1048 13 is_stmt 1 view .LVU948
 3143              		.loc 24 1048 38 is_stmt 0 view .LVU949
 3144 0080 2046     		mov	r0, r4
 3145 0082 FFF7FEFF 		bl	_ZN12ParamControl7ProcessEv
 3146              	.LVL157:
 3147              	.L160:
 3148              		.loc 24 1048 38 view .LVU950
 3149              	.LBE986:
 3150              	.LBE988:
1042:Nimbus.cpp    ****     {
 3151              		.loc 24 1042 5 is_stmt 1 discriminator 2 view .LVU951
 3152 0086 0135     		adds	r5, r5, #1
 3153              	.LVL158:
1042:Nimbus.cpp    ****     {
 3154              		.loc 24 1042 22 discriminator 2 view .LVU952
 3155 0088 3434     		adds	r4, r4, #52
 3156              	.LVL159:
1042:Nimbus.cpp    ****     {
 3157              		.loc 24 1042 22 is_stmt 0 discriminator 2 view .LVU953
 3158 008a 092D     		cmp	r5, #9
 3159 008c EFD1     		bne	.L161
 3160              	.LBE993:
1049:Nimbus.cpp    ****         }
1050:Nimbus.cpp    ****     }
1051:Nimbus.cpp    **** }
 3161              		.loc 24 1051 1 view .LVU954
 3162 008e 70BD     		pop	{r4, r5, r6, pc}
 3163              	.LVL160:
 3164              	.L156:
 3165              	.LBB994:
ARM GAS  /tmp/ccUsbZWH.s 			page 135


1035:Nimbus.cpp    ****     }
 3166              		.loc 24 1035 9 is_stmt 1 view .LVU955
1035:Nimbus.cpp    ****     }
 3167              		.loc 24 1035 25 is_stmt 0 view .LVU956
 3168 0090 064B     		ldr	r3, .L167+20
 3169 0092 0022     		movs	r2, #0
 3170 0094 1A70     		strb	r2, [r3]
 3171 0096 D9E7     		b	.L157
 3172              	.L168:
 3173              		.align	2
 3174              	.L167:
 3175 0098 00000000 		.word	.LANCHOR7
 3176 009c 00000000 		.word	.LANCHOR0
 3177 00a0 00000000 		.word	.LANCHOR10
 3178 00a4 00000000 		.word	field
 3179 00a8 6666263F 		.word	1059481190
 3180 00ac 00000000 		.word	.LANCHOR11
 3181 00b0 54040000 		.word	field+1108
 3182 00b4 00000000 		.word	.LANCHOR1
 3183              	.LBE994:
 3184              		.cfi_endproc
 3185              	.LFE4549:
 3187              		.section	.text._Z8Controlsv,"ax",%progbits
 3188              		.align	1
 3189              		.global	_Z8Controlsv
 3190              		.syntax unified
 3191              		.thumb
 3192              		.thumb_func
 3193              		.fpu fpv5-d16
 3195              	_Z8Controlsv:
 3196              	.LFB4550:
1052:Nimbus.cpp    **** 
1053:Nimbus.cpp    **** void Controls()
1054:Nimbus.cpp    **** {
 3197              		.loc 24 1054 1 is_stmt 1 view -0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 0
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
1055:Nimbus.cpp    ****     field.ProcessAllControls();
 3201              		.loc 24 1055 5 view .LVU958
 3202              	.LVL161:
 3203              	.LBB997:
 3204              	.LBI997:
  85:../../libdaisy/src/daisy_field.h **** 
  86:../../libdaisy/src/daisy_field.h ****     /**Initializes the Daisy Field, and all of its hardware.*/
  87:../../libdaisy/src/daisy_field.h ****     void Init(bool boost = false);
  88:../../libdaisy/src/daisy_field.h **** 
  89:../../libdaisy/src/daisy_field.h ****     /** 
  90:../../libdaisy/src/daisy_field.h ****     Wait some ms before going on.
  91:../../libdaisy/src/daisy_field.h ****     \param del Delay time in ms.
  92:../../libdaisy/src/daisy_field.h ****     */
  93:../../libdaisy/src/daisy_field.h ****     void DelayMs(size_t del);
  94:../../libdaisy/src/daisy_field.h **** 
  95:../../libdaisy/src/daisy_field.h ****     /** Starts the callback
  96:../../libdaisy/src/daisy_field.h ****     \cb Interleaved callback function
  97:../../libdaisy/src/daisy_field.h ****     */
  98:../../libdaisy/src/daisy_field.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
ARM GAS  /tmp/ccUsbZWH.s 			page 136


  99:../../libdaisy/src/daisy_field.h **** 
 100:../../libdaisy/src/daisy_field.h ****     /** Starts the callback
 101:../../libdaisy/src/daisy_field.h ****     \cb multichannel callback function
 102:../../libdaisy/src/daisy_field.h ****     */
 103:../../libdaisy/src/daisy_field.h ****     void StartAudio(AudioHandle::AudioCallback cb);
 104:../../libdaisy/src/daisy_field.h **** 
 105:../../libdaisy/src/daisy_field.h ****     /** Stops the audio if it is running. */
 106:../../libdaisy/src/daisy_field.h ****     void StopAudio();
 107:../../libdaisy/src/daisy_field.h **** 
 108:../../libdaisy/src/daisy_field.h ****     /**
 109:../../libdaisy/src/daisy_field.h ****        Switch callback functions
 110:../../libdaisy/src/daisy_field.h ****        \param cb New interleaved callback function.
 111:../../libdaisy/src/daisy_field.h ****     */
 112:../../libdaisy/src/daisy_field.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
 113:../../libdaisy/src/daisy_field.h **** 
 114:../../libdaisy/src/daisy_field.h ****     /**
 115:../../libdaisy/src/daisy_field.h ****        Switch callback functions
 116:../../libdaisy/src/daisy_field.h ****        \param cb New multichannel callback function.
 117:../../libdaisy/src/daisy_field.h ****     */
 118:../../libdaisy/src/daisy_field.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
 119:../../libdaisy/src/daisy_field.h **** 
 120:../../libdaisy/src/daisy_field.h ****     /** Updates the Audio Sample Rate, and reinitializes.
 121:../../libdaisy/src/daisy_field.h ****      ** Audio must be stopped for this to work.
 122:../../libdaisy/src/daisy_field.h ****      */
 123:../../libdaisy/src/daisy_field.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
 124:../../libdaisy/src/daisy_field.h **** 
 125:../../libdaisy/src/daisy_field.h ****     /** Returns the audio sample rate in Hz as a floating point number.
 126:../../libdaisy/src/daisy_field.h ****      */
 127:../../libdaisy/src/daisy_field.h ****     float AudioSampleRate();
 128:../../libdaisy/src/daisy_field.h **** 
 129:../../libdaisy/src/daisy_field.h ****     /** Sets the number of samples processed per channel by the audio callback.
 130:../../libdaisy/src/daisy_field.h ****      */
 131:../../libdaisy/src/daisy_field.h ****     void SetAudioBlockSize(size_t blocksize);
 132:../../libdaisy/src/daisy_field.h **** 
 133:../../libdaisy/src/daisy_field.h ****     /** Returns the number of samples per channel in a block of audio. */
 134:../../libdaisy/src/daisy_field.h ****     size_t AudioBlockSize();
 135:../../libdaisy/src/daisy_field.h **** 
 136:../../libdaisy/src/daisy_field.h ****     /** Returns the rate in Hz that the Audio callback is called */
 137:../../libdaisy/src/daisy_field.h ****     float AudioCallbackRate();
 138:../../libdaisy/src/daisy_field.h **** 
 139:../../libdaisy/src/daisy_field.h ****     /** Starts Transfering data from the ADC */
 140:../../libdaisy/src/daisy_field.h ****     void StartAdc();
 141:../../libdaisy/src/daisy_field.h **** 
 142:../../libdaisy/src/daisy_field.h ****     /** Stops Transfering data from the ADC */
 143:../../libdaisy/src/daisy_field.h ****     void StopAdc();
 144:../../libdaisy/src/daisy_field.h **** 
 145:../../libdaisy/src/daisy_field.h ****     /** Turns on the built-in 12-bit DAC on the Daisy Seed */
 146:../../libdaisy/src/daisy_field.h ****     /** **This is now deprecated and does nothing.** 
 147:../../libdaisy/src/daisy_field.h ****      ** The polling use of the DACs now handles starting the tranmission.  */
 148:../../libdaisy/src/daisy_field.h ****     void StartDac();
 149:../../libdaisy/src/daisy_field.h **** 
 150:../../libdaisy/src/daisy_field.h ****     /** Processes the ADC inputs, updating their values */
 151:../../libdaisy/src/daisy_field.h ****     void ProcessAnalogControls();
 152:../../libdaisy/src/daisy_field.h **** 
 153:../../libdaisy/src/daisy_field.h ****     /** Process tactile switches and keyboard states */
 154:../../libdaisy/src/daisy_field.h ****     void ProcessDigitalControls();
 155:../../libdaisy/src/daisy_field.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 137


 156:../../libdaisy/src/daisy_field.h ****     /** Process Analog and Digital Controls */
 157:../../libdaisy/src/daisy_field.h ****     inline void ProcessAllControls()
 3205              		.loc 1 157 17 view .LVU959
 3206              	.LBB998:
 158:../../libdaisy/src/daisy_field.h ****     {
 159:../../libdaisy/src/daisy_field.h ****         ProcessAnalogControls();
 3207              		.loc 1 159 9 view .LVU960
 3208              	.LBE998:
 3209              	.LBE997:
1054:Nimbus.cpp    ****     field.ProcessAllControls();
 3210              		.loc 24 1054 1 is_stmt 0 view .LVU961
 3211 0000 08B5     		push	{r3, lr}
 3212              		.cfi_def_cfa_offset 8
 3213              		.cfi_offset 3, -8
 3214              		.cfi_offset 14, -4
 3215              	.LBB1000:
 3216              	.LBB999:
 3217              		.loc 1 159 30 view .LVU962
 3218 0002 0748     		ldr	r0, .L170
 3219 0004 FFF7FEFF 		bl	_ZN5daisy10DaisyField21ProcessAnalogControlsEv
 3220              	.LVL162:
 160:../../libdaisy/src/daisy_field.h ****         ProcessDigitalControls();
 3221              		.loc 1 160 9 is_stmt 1 view .LVU963
 3222              		.loc 1 160 31 is_stmt 0 view .LVU964
 3223 0008 0548     		ldr	r0, .L170
 3224 000a FFF7FEFF 		bl	_ZN5daisy10DaisyField22ProcessDigitalControlsEv
 3225              	.LVL163:
 3226              		.loc 1 160 31 view .LVU965
 3227              	.LBE999:
 3228              	.LBE1000:
1056:Nimbus.cpp    ****     ProcessParams();
 3229              		.loc 24 1056 5 is_stmt 1 view .LVU966
 3230              		.loc 24 1056 18 is_stmt 0 view .LVU967
 3231 000e 0120     		movs	r0, #1
 3232 0010 FFF7FEFF 		bl	_Z13ProcessParamsb
 3233              	.LVL164:
1057:Nimbus.cpp    ****     ProcessGatesTriggersCv();
 3234              		.loc 24 1057 5 is_stmt 1 view .LVU968
 3235              		.loc 24 1057 27 is_stmt 0 view .LVU969
 3236 0014 FFF7FEFF 		bl	_Z22ProcessGatesTriggersCvv
 3237              	.LVL165:
1058:Nimbus.cpp    ****     ProcessButtons();
 3238              		.loc 24 1058 5 is_stmt 1 view .LVU970
1059:Nimbus.cpp    **** }...
 3239              		.loc 24 1059 1 is_stmt 0 view .LVU971
 3240 0018 BDE80840 		pop	{r3, lr}
 3241              		.cfi_restore 14
 3242              		.cfi_restore 3
 3243              		.cfi_def_cfa_offset 0
1058:Nimbus.cpp    ****     ProcessButtons();
 3244              		.loc 24 1058 19 view .LVU972
 3245 001c FFF7FEBF 		b	_Z14ProcessButtonsv
 3246              	.LVL166:
 3247              	.L171:
 3248              		.align	2
 3249              	.L170:
 3250 0020 00000000 		.word	field
ARM GAS  /tmp/ccUsbZWH.s 			page 138


 3251              		.cfi_endproc
 3252              	.LFE4550:
 3254              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 3255              		.align	1
 3256              		.global	_Z13AudioCallbackPKPKfPPfj
 3257              		.syntax unified
 3258              		.thumb
 3259              		.thumb_func
 3260              		.fpu fpv5-d16
 3262              	_Z13AudioCallbackPKPKfPPfj:
 3263              	.LVL167:
 3264              	.LFB4534:
 283:Nimbus.cpp    **** {
 3265              		.loc 24 283 1 is_stmt 1 view -0
 3266              		.cfi_startproc
 3267              		@ args = 0, pretend = 0, frame = 0
 3268              		@ frame_needed = 1, uses_anonymous_args = 0
 284:Nimbus.cpp    ****     uint32_t start = System::GetTick();
 3269              		.loc 24 284 5 view .LVU974
 283:Nimbus.cpp    **** {
 3270              		.loc 24 283 1 is_stmt 0 view .LVU975
 3271 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3272              		.cfi_def_cfa_offset 32
 3273              		.cfi_offset 3, -32
 3274              		.cfi_offset 4, -28
 3275              		.cfi_offset 5, -24
 3276              		.cfi_offset 6, -20
 3277              		.cfi_offset 7, -16
 3278              		.cfi_offset 8, -12
 3279              		.cfi_offset 9, -8
 3280              		.cfi_offset 14, -4
 3281 0004 00AF     		add	r7, sp, #0
 3282              		.cfi_def_cfa_register 7
 283:Nimbus.cpp    **** {
 3283              		.loc 24 283 1 view .LVU976
 3284 0006 1446     		mov	r4, r2
 3285 0008 0D46     		mov	r5, r1
 3286 000a 8146     		mov	r9, r0
 284:Nimbus.cpp    ****     uint32_t start = System::GetTick();
 3287              		.loc 24 284 37 view .LVU977
 3288 000c FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 3289              	.LVL168:
 284:Nimbus.cpp    ****     uint32_t start = System::GetTick();
 3290              		.loc 24 284 37 view .LVU978
 3291 0010 0646     		mov	r6, r0
 3292              	.LVL169:
 286:Nimbus.cpp    ****     Controls();
 3293              		.loc 24 286 5 is_stmt 1 view .LVU979
 286:Nimbus.cpp    ****     Controls();
 3294              		.loc 24 286 13 is_stmt 0 view .LVU980
 3295 0012 FFF7FEFF 		bl	_Z8Controlsv
 3296              	.LVL170:
 288:Nimbus.cpp    ****     FloatFrame input[size];
 3297              		.loc 24 288 5 is_stmt 1 view .LVU981
 288:Nimbus.cpp    ****     FloatFrame input[size];
 3298              		.loc 24 288 16 is_stmt 0 view .LVU982
 3299 0016 6B46     		mov	r3, sp
ARM GAS  /tmp/ccUsbZWH.s 			page 139


 3300 0018 A3EBC403 		sub	r3, r3, r4, lsl #3
 3301 001c 9D46     		mov	sp, r3
 289:Nimbus.cpp    ****     FloatFrame output[size];
 3302              		.loc 24 289 16 view .LVU983
 3303 001e A3EBC403 		sub	r3, r3, r4, lsl #3
 288:Nimbus.cpp    ****     FloatFrame input[size];
 3304              		.loc 24 288 16 view .LVU984
 3305 0022 6946     		mov	r1, sp
 3306              	.LVL171:
 289:Nimbus.cpp    ****     FloatFrame output[size];
 3307              		.loc 24 289 5 is_stmt 1 view .LVU985
 289:Nimbus.cpp    ****     FloatFrame output[size];
 3308              		.loc 24 289 16 is_stmt 0 view .LVU986
 3309 0024 9D46     		mov	sp, r3
 3310              	.LBB1001:
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3311              		.loc 24 291 16 view .LVU987
 3312 0026 0023     		movs	r3, #0
 3313              	.LBE1001:
 289:Nimbus.cpp    ****     FloatFrame output[size];
 3314              		.loc 24 289 16 view .LVU988
 3315 0028 6A46     		mov	r2, sp
 3316              	.LVL172:
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3317              		.loc 24 291 5 is_stmt 1 view .LVU989
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3318              		.loc 24 291 5 is_stmt 0 view .LVU990
 3319 002a 8E46     		mov	lr, r1
 3320 002c 9046     		mov	r8, r2
 289:Nimbus.cpp    ****     FloatFrame output[size];
 3321              		.loc 24 289 16 view .LVU991
 3322 002e 9446     		mov	ip, r2
 3323              	.LVL173:
 3324              	.L174:
 3325              	.LBB1002:
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3326              		.loc 24 291 25 is_stmt 1 discriminator 3 view .LVU992
 3327 0030 A342     		cmp	r3, r4
 3328 0032 0EF1080E 		add	lr, lr, #8
 3329 0036 0CF1080C 		add	ip, ip, #8
 3330 003a 1CD0     		beq	.L173
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3331              		.loc 24 293 9 discriminator 2 view .LVU993
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3332              		.loc 24 293 30 is_stmt 0 discriminator 2 view .LVU994
 3333 003c D9F80000 		ldr	r0, [r9]
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3334              		.loc 24 293 32 discriminator 2 view .LVU995
 3335 0040 F6EE006A 		vmov.f32	s13, #5.0e-1
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3336              		.loc 24 293 30 discriminator 2 view .LVU996
 3337 0044 00EB8300 		add	r0, r0, r3, lsl #2
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3338              		.loc 24 293 32 discriminator 2 view .LVU997
 3339 0048 90ED007A 		vldr.32	s14, [r0]
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3340              		.loc 24 294 30 discriminator 2 view .LVU998
ARM GAS  /tmp/ccUsbZWH.s 			page 140


 3341 004c D9F80400 		ldr	r0, [r9, #4]
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3342              		.loc 24 293 32 discriminator 2 view .LVU999
 3343 0050 27EE267A 		vmul.f32	s14, s14, s13
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3344              		.loc 24 294 30 discriminator 2 view .LVU1000
 3345 0054 00EB8300 		add	r0, r0, r3, lsl #2
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3346              		.loc 24 291 5 discriminator 2 view .LVU1001
 3347 0058 0133     		adds	r3, r3, #1
 3348              	.LVL174:
 293:Nimbus.cpp    ****         input[i].l  = in[0][i] * .5f;
 3349              		.loc 24 293 21 discriminator 2 view .LVU1002
 3350 005a 0EED027A 		vstr.32	s14, [lr, #-8]
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3351              		.loc 24 294 9 is_stmt 1 discriminator 2 view .LVU1003
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3352              		.loc 24 294 32 is_stmt 0 discriminator 2 view .LVU1004
 3353 005e D0ED007A 		vldr.32	s15, [r0]
 295:Nimbus.cpp    ****         output[i].l = output[i].r = 0.f;
 3354              		.loc 24 295 35 discriminator 2 view .LVU1005
 3355 0062 0020     		movs	r0, #0
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3356              		.loc 24 294 32 discriminator 2 view .LVU1006
 3357 0064 67EEA67A 		vmul.f32	s15, s15, s13
 295:Nimbus.cpp    ****         output[i].l = output[i].r = 0.f;
 3358              		.loc 24 295 35 discriminator 2 view .LVU1007
 3359 0068 4CF8040C 		str	r0, [ip, #-4]	@ float
 295:Nimbus.cpp    ****         output[i].l = output[i].r = 0.f;
 3360              		.loc 24 295 21 discriminator 2 view .LVU1008
 3361 006c 4CF8080C 		str	r0, [ip, #-8]	@ float
 294:Nimbus.cpp    ****         input[i].r  = in[1][i] * .5f;
 3362              		.loc 24 294 21 discriminator 2 view .LVU1009
 3363 0070 4EED017A 		vstr.32	s15, [lr, #-4]
 295:Nimbus.cpp    ****         output[i].l = output[i].r = 0.f;
 3364              		.loc 24 295 9 is_stmt 1 discriminator 2 view .LVU1010
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3365              		.loc 24 291 5 discriminator 2 view .LVU1011
 3366              	.LVL175:
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3367              		.loc 24 291 5 is_stmt 0 discriminator 2 view .LVU1012
 3368 0074 DCE7     		b	.L174
 3369              	.L173:
 291:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3370              		.loc 24 291 5 discriminator 2 view .LVU1013
 3371              	.LBE1002:
 298:Nimbus.cpp    ****     processor.Process(input, output, size);
 3372              		.loc 24 298 5 is_stmt 1 view .LVU1014
 298:Nimbus.cpp    ****     processor.Process(input, output, size);
 3373              		.loc 24 298 22 is_stmt 0 view .LVU1015
 3374 0076 2346     		mov	r3, r4
 3375              	.LVL176:
 298:Nimbus.cpp    ****     processor.Process(input, output, size);
 3376              		.loc 24 298 22 view .LVU1016
 3377 0078 1D48     		ldr	r0, .L179
 3378 007a FFF7FEFF 		bl	_ZN23GranularProcessorClouds7ProcessEP10FloatFrameS1_j
 3379              	.LVL177:
ARM GAS  /tmp/ccUsbZWH.s 			page 141


 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3380              		.loc 24 300 5 is_stmt 1 view .LVU1017
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3381              		.loc 24 300 5 is_stmt 0 view .LVU1018
 3382 007e 1D48     		ldr	r0, .L179+4
 3383              	.LBB1003:
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3384              		.loc 24 300 16 view .LVU1019
 3385 0080 0023     		movs	r3, #0
 3386              	.LVL178:
 3387              	.L176:
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3388              		.loc 24 300 25 is_stmt 1 discriminator 3 view .LVU1020
 3389 0082 A342     		cmp	r3, r4
 3390 0084 08F10808 		add	r8, r8, #8
 3391 0088 18D0     		beq	.L175
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 3392              		.loc 24 302 9 discriminator 2 view .LVU1021
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 3393              		.loc 24 302 17 is_stmt 0 discriminator 2 view .LVU1022
 3394 008a 2A68     		ldr	r2, [r5]
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 3395              		.loc 24 302 37 discriminator 2 view .LVU1023
 3396 008c 58F8081C 		ldr	r1, [r8, #-8]	@ float
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 3397              		.loc 24 302 17 discriminator 2 view .LVU1024
 3398 0090 02EB8302 		add	r2, r2, r3, lsl #2
 302:Nimbus.cpp    ****         out[0][i]       = output[i].l;
 3399              		.loc 24 302 25 discriminator 2 view .LVU1025
 3400 0094 1160     		str	r1, [r2]	@ float
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 3401              		.loc 24 303 9 is_stmt 1 discriminator 2 view .LVU1026
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 3402              		.loc 24 303 25 is_stmt 0 discriminator 2 view .LVU1027
 3403 0096 6968     		ldr	r1, [r5, #4]
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 3404              		.loc 24 303 37 discriminator 2 view .LVU1028
 3405 0098 58ED017A 		vldr.32	s15, [r8, #-4]
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 3406              		.loc 24 303 25 discriminator 2 view .LVU1029
 3407 009c 01EB8301 		add	r1, r1, r3, lsl #2
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3408              		.loc 24 300 5 discriminator 2 view .LVU1030
 3409 00a0 0133     		adds	r3, r3, #1
 3410              	.LVL179:
 303:Nimbus.cpp    ****         out[1][i]       = output[i].r;
 3411              		.loc 24 303 25 discriminator 2 view .LVU1031
 3412 00a2 C1ED007A 		vstr.32	s15, [r1]
 304:Nimbus.cpp    ****         scope_buffer[i] = (out[0][i] + out[1][i]) * .5f;
 3413              		.loc 24 304 9 is_stmt 1 discriminator 2 view .LVU1032
 304:Nimbus.cpp    ****         scope_buffer[i] = (out[0][i] + out[1][i]) * .5f;
 3414              		.loc 24 304 38 is_stmt 0 discriminator 2 view .LVU1033
 3415 00a6 92ED007A 		vldr.32	s14, [r2]
 3416 00aa 77EE877A 		vadd.f32	s15, s15, s14
 304:Nimbus.cpp    ****         scope_buffer[i] = (out[0][i] + out[1][i]) * .5f;
 3417              		.loc 24 304 51 discriminator 2 view .LVU1034
 3418 00ae B6EE007A 		vmov.f32	s14, #5.0e-1
ARM GAS  /tmp/ccUsbZWH.s 			page 142


 3419 00b2 67EE877A 		vmul.f32	s15, s15, s14
 304:Nimbus.cpp    ****         scope_buffer[i] = (out[0][i] + out[1][i]) * .5f;
 3420              		.loc 24 304 25 discriminator 2 view .LVU1035
 3421 00b6 E0EC017A 		vstmia.32	r0!, {s15}
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3422              		.loc 24 300 5 is_stmt 1 discriminator 2 view .LVU1036
 3423              	.LVL180:
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3424              		.loc 24 300 5 is_stmt 0 discriminator 2 view .LVU1037
 3425 00ba E2E7     		b	.L176
 3426              	.L175:
 300:Nimbus.cpp    ****     for(size_t i = 0; i < size; i++)
 3427              		.loc 24 300 5 discriminator 2 view .LVU1038
 3428              	.LBE1003:
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3429              		.loc 24 307 5 is_stmt 1 view .LVU1039
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3430              		.loc 24 307 44 is_stmt 0 view .LVU1040
 3431 00bc FFF7FEFF 		bl	_ZN5daisy6System7GetTickEv
 3432              	.LVL181:
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3433              		.loc 24 307 47 view .LVU1041
 3434 00c0 801B     		subs	r0, r0, r6
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3435              		.loc 24 307 56 view .LVU1042
 3436 00c2 9FED0D6A 		vldr.32	s12, .L179+8
 3437 00c6 07EE900A 		vmov	s15, r0	@ int
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3438              		.loc 24 307 65 view .LVU1043
 3439 00ca 0C4B     		ldr	r3, .L179+12
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3440              		.loc 24 307 56 view .LVU1044
 3441 00cc F8EE677A 		vcvt.f32.u32	s15, s15
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3442              		.loc 24 307 65 view .LVU1045
 3443 00d0 93ED007A 		vldr.32	s14, [r3]
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3444              		.loc 24 307 56 view .LVU1046
 3445 00d4 C7EE866A 		vdiv.f32	s13, s15, s12
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3446              		.loc 24 307 65 view .LVU1047
 3447 00d8 76EEC77A 		vsub.f32	s15, s13, s14
 307:Nimbus.cpp    ****     cpu_usage += 0.03f * (((System::GetTick() - start) / 200.f) - cpu_usage);
 3448              		.loc 24 307 15 view .LVU1048
 3449 00dc DFED086A 		vldr.32	s13, .L179+16
 3450 00e0 A7EEA67A 		vfma.f32	s14, s15, s13
 3451 00e4 83ED007A 		vstr.32	s14, [r3]
 308:Nimbus.cpp    **** }
 3452              		.loc 24 308 1 view .LVU1049
 3453 00e8 BD46     		mov	sp, r7
 3454              		.cfi_def_cfa_register 13
 3455              	.LVL182:
 308:Nimbus.cpp    **** }
 3456              		.loc 24 308 1 view .LVU1050
 3457              		@ sp needed
 3458 00ea BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3459              	.LVL183:
ARM GAS  /tmp/ccUsbZWH.s 			page 143


 3460              	.L180:
 308:Nimbus.cpp    **** }
 3461              		.loc 24 308 1 view .LVU1051
 3462 00ee 00BF     		.align	2
 3463              	.L179:
 3464 00f0 00000000 		.word	processor
 3465 00f4 00000000 		.word	.LANCHOR12
 3466 00f8 00004843 		.word	1128792064
 3467 00fc 00000000 		.word	.LANCHOR13
 3468 0100 8FC2F53C 		.word	1022739087
 3469              		.cfi_endproc
 3470              	.LFE4534:
 3472              		.section	.text._ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif,"axG",%progbits,_ZN5daisy16LedDrive
 3473              		.align	1
 3474              		.weak	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3475              		.syntax unified
 3476              		.thumb
 3477              		.thumb_func
 3478              		.fpu fpv5-d16
 3480              	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif:
 3481              	.LVL184:
 3482              	.LFB5009:
 107:../../libdaisy/src/dev/leddriver.h ****     {
 3483              		.loc 25 107 10 is_stmt 1 view -0
 3484              		.cfi_startproc
 3485              		@ args = 0, pretend = 0, frame = 8
 3486              		@ frame_needed = 0, uses_anonymous_args = 0
 110:../../libdaisy/src/dev/leddriver.h ****         SetLed(ledIndex, intBrightness);
 3487              		.loc 25 110 15 is_stmt 0 view .LVU1053
 3488 0000 DFED1C7A 		vldr.32	s15, .L186
 3489 0004 20EE270A 		vmul.f32	s0, s0, s15
 3490              	.LVL185:
 3491              	.LBB1014:
 3492              	.LBI1014:
 258:../../libdaisy/src/dev/leddriver.h ****     {
 3493              		.loc 25 258 7 is_stmt 1 view .LVU1054
 258:../../libdaisy/src/dev/leddriver.h ****     {
 3494              		.loc 25 258 7 is_stmt 0 view .LVU1055
 3495              	.LBE1014:
 107:../../libdaisy/src/dev/leddriver.h ****     {
 3496              		.loc 25 107 10 view .LVU1056
 3497 0008 13B5     		push	{r0, r1, r4, lr}
 3498              		.cfi_def_cfa_offset 16
 3499              		.cfi_offset 4, -8
 3500              		.cfi_offset 14, -4
 3501              	.LBB1017:
 3502              	.LBB1015:
 260:../../libdaisy/src/dev/leddriver.h ****     }
 3503              		.loc 25 260 27 view .LVU1057
 3504 000a B5EEC00A 		vcmpe.f32	s0, #0
 3505 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3506 0012 2BD4     		bmi	.L184
 260:../../libdaisy/src/dev/leddriver.h ****     }
 3507              		.loc 25 260 47 view .LVU1058
 3508 0014 B4EE670A 		vcmp.f32	s0, s15
 3509 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3510 001c 37FE800A 		vselgt.f32	s0, s15, s0
ARM GAS  /tmp/ccUsbZWH.s 			page 144


 3511              	.LVL186:
 3512              	.L182:
 260:../../libdaisy/src/dev/leddriver.h ****     }
 3513              		.loc 25 260 47 view .LVU1059
 3514              	.LBE1015:
 3515              	.LBE1017:
 3516              	.LBB1018:
 3517              	.LBI1018:
 115:../../libdaisy/src/dev/leddriver.h ****     {
 3518              		.loc 25 115 10 is_stmt 1 view .LVU1060
 3519              	.LBE1018:
 109:../../libdaisy/src/dev/leddriver.h ****             = (uint8_t)(clamp(brightness * 255.0f, 0.0f, 255.0f));
 3520              		.loc 25 109 23 is_stmt 0 view .LVU1061
 3521 0020 FCEEC07A 		vcvt.u32.f32	s15, s0
 3522 0024 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 3523              	.LBB1024:
 3524              	.LBB1019:
 117:../../libdaisy/src/dev/leddriver.h ****         SetLedRaw(ledIndex, cycles);
 3525              		.loc 25 117 46 view .LVU1062
 3526 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 117:../../libdaisy/src/dev/leddriver.h ****         SetLedRaw(ledIndex, cycles);
 3527              		.loc 25 117 24 view .LVU1063
 3528 002c 00EB4303 		add	r3, r0, r3, lsl #1
 3529 0030 DC8A     		ldrh	r4, [r3, #22]
 3530              	.LVL187:
 3531              	.LBB1020:
 3532              	.LBI1020:
 122:../../libdaisy/src/dev/leddriver.h ****     {
 3533              		.loc 25 122 10 is_stmt 1 view .LVU1064
 3534              	.LBB1021:
 3535              	.LBB1022:
 3536              	.LBI1022:
 193:../../libdaisy/src/dev/leddriver.h **** 
 3537              		.loc 25 193 13 view .LVU1065
 193:../../libdaisy/src/dev/leddriver.h **** 
 3538              		.loc 25 193 13 is_stmt 0 view .LVU1066
 3539              	.LBE1022:
 3540              	.LBB1023:
 3541              	.LBI1023:
 195:../../libdaisy/src/dev/leddriver.h ****     {
 3542              		.loc 25 195 13 is_stmt 1 view .LVU1067
 195:../../libdaisy/src/dev/leddriver.h ****     {
 3543              		.loc 25 195 13 is_stmt 0 view .LVU1068
 3544              	.LBE1023:
 127:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_[d].leds[ch].off = (on + rawBrightness) & (0x0FFF);
 3545              		.loc 25 127 53 view .LVU1069
 3546 0032 C1F30713 		ubfx	r3, r1, #4, #8
 3547 0036 01F00F01 		and	r1, r1, #15
 3548              	.LVL188:
 127:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_[d].leds[ch].off = (on + rawBrightness) & (0x0FFF);
 3549              		.loc 25 127 52 view .LVU1070
 3550 003a 03EB8313 		add	r3, r3, r3, lsl #6
 3551 003e 03EB8103 		add	r3, r3, r1, lsl #2
 3552 0042 4168     		ldr	r1, [r0, #4]
 3553 0044 1944     		add	r1, r1, r3
 127:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_[d].leds[ch].off = (on + rawBrightness) & (0x0FFF);
 3554              		.loc 25 127 65 view .LVU1071
ARM GAS  /tmp/ccUsbZWH.s 			page 145


 3555 0046 B1F80130 		ldrh	r3, [r1, #1]	@ unaligned
 3556 004a C3F30B03 		ubfx	r3, r3, #0, #12
 3557              	.LVL189:
 128:../../libdaisy/src/dev/leddriver.h ****         // full on condition
 3558              		.loc 25 128 44 view .LVU1072
 3559 004e E218     		adds	r2, r4, r3
 128:../../libdaisy/src/dev/leddriver.h ****         // full on condition
 3560              		.loc 25 128 61 view .LVU1073
 3561 0050 C2F30B02 		ubfx	r2, r2, #0, #12
 128:../../libdaisy/src/dev/leddriver.h ****         // full on condition
 3562              		.loc 25 128 9 view .LVU1074
 3563 0054 A1F80320 		strh	r2, [r1, #3]	@ unaligned
 130:../../libdaisy/src/dev/leddriver.h ****             draw_buffer_[d].leds[ch].on = 0x1000 | on; // set "full on" bit
 3564              		.loc 25 130 9 view .LVU1075
 3565 0058 40F6FE72 		movw	r2, #4094
 3566 005c 9442     		cmp	r4, r2
 131:../../libdaisy/src/dev/leddriver.h ****         else
 3567              		.loc 25 131 50 view .LVU1076
 3568 005e 88BF     		it	hi
 3569 0060 43F48053 		orrhi	r3, r3, #4096
 3570              	.LVL190:
 131:../../libdaisy/src/dev/leddriver.h ****         else
 3571              		.loc 25 131 50 view .LVU1077
 3572 0064 A1F80130 		strh	r3, [r1, #1]	@ unaligned
 3573              	.LVL191:
 131:../../libdaisy/src/dev/leddriver.h ****         else
 3574              		.loc 25 131 50 view .LVU1078
 3575              	.LBE1021:
 3576              	.LBE1020:
 3577              	.LBE1019:
 3578              	.LBE1024:
 112:../../libdaisy/src/dev/leddriver.h **** 
 3579              		.loc 25 112 5 view .LVU1079
 3580 0068 02B0     		add	sp, sp, #8
 3581              		.cfi_remember_state
 3582              		.cfi_def_cfa_offset 8
 3583              		@ sp needed
 3584 006a 10BD     		pop	{r4, pc}
 3585              	.LVL192:
 3586              	.L184:
 3587              		.cfi_restore_state
 3588              	.LBB1025:
 3589              	.LBB1016:
 260:../../libdaisy/src/dev/leddriver.h ****     }
 3590              		.loc 25 260 27 view .LVU1080
 3591 006c 9FED020A 		vldr.32	s0, .L186+4
 3592              	.LVL193:
 260:../../libdaisy/src/dev/leddriver.h ****     }
 3593              		.loc 25 260 27 view .LVU1081
 3594 0070 D6E7     		b	.L182
 3595              	.L187:
 3596 0072 00BF     		.align	2
 3597              	.L186:
 3598 0074 00007F43 		.word	1132396544
 3599 0078 00000000 		.word	0
 3600              	.LBE1016:
 3601              	.LBE1025:
ARM GAS  /tmp/ccUsbZWH.s 			page 146


 3602              		.cfi_endproc
 3603              	.LFE5009:
 3605              		.section	.text._Z10UpdateLedsv,"ax",%progbits
 3606              		.align	1
 3607              		.global	_Z10UpdateLedsv
 3608              		.syntax unified
 3609              		.thumb
 3610              		.thumb_func
 3611              		.fpu fpv5-d16
 3613              	_Z10UpdateLedsv:
 3614              	.LFB4545:
 742:Nimbus.cpp    **** {
 3615              		.loc 24 742 1 is_stmt 1 view -0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 0
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3619              		.loc 24 743 5 view .LVU1083
 3620              	.LVL194:
 3621              	.LBB1035:
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3622              		.loc 24 743 22 view .LVU1084
 3623              	.LBE1035:
 742:Nimbus.cpp    **** {
 3624              		.loc 24 742 1 is_stmt 0 view .LVU1085
 3625 0000 38B5     		push	{r3, r4, r5, lr}
 3626              		.cfi_def_cfa_offset 16
 3627              		.cfi_offset 3, -16
 3628              		.cfi_offset 4, -12
 3629              		.cfi_offset 5, -8
 3630              		.cfi_offset 14, -4
 3631 0002 874C     		ldr	r4, .L238
 3632              	.LBB1036:
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3633              		.loc 24 743 13 view .LVU1086
 3634 0004 0025     		movs	r5, #0
 3635              	.LBE1036:
 742:Nimbus.cpp    **** {
 3636              		.loc 24 742 1 view .LVU1087
 3637 0006 2DED028B 		vpush.64	{d8}
 3638              		.cfi_def_cfa_offset 24
 3639              		.cfi_offset 80, -24
 3640              		.cfi_offset 81, -20
 3641              	.LVL195:
 3642              	.L191:
 3643              	.LBB1037:
 745:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == NONE)
 3644              		.loc 24 745 9 is_stmt 1 view .LVU1088
 745:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == NONE)
 3645              		.loc 24 745 9 is_stmt 0 view .LVU1089
 3646              	.LBE1037:
 187:Nimbus.cpp    ****     MAPPABLE_CVS GetMappedCV() { return mapped_cv_; }
 3647              		.loc 24 187 34 is_stmt 1 view .LVU1090
 3648              	.LBB1038:
 745:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == NONE)
 3649              		.loc 24 745 9 is_stmt 0 view .LVU1091
 3650 000a 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
ARM GAS  /tmp/ccUsbZWH.s 			page 147


 3651 000e E168     		ldr	r1, [r4, #12]
 3652 0010 002B     		cmp	r3, #0
 3653 0012 40F0EB80 		bne	.L189
 747:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(),
 3654              		.loc 24 747 13 is_stmt 1 view .LVU1092
 3655              	.LVL196:
 747:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(),
 3656              		.loc 24 747 13 is_stmt 0 view .LVU1093
 3657              	.LBE1038:
 179:Nimbus.cpp    ****     int         GetLed() const { return led_; }
 3658              		.loc 24 179 34 is_stmt 1 view .LVU1094
 180:Nimbus.cpp    ****     float       GetValue() { return param_val_; }
 3659              		.loc 24 180 30 view .LVU1095
 3660              	.LBB1039:
 747:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(),
 3661              		.loc 24 747 36 is_stmt 0 view .LVU1096
 3662 0016 94ED070A 		vldr.32	s0, [r4, #28]
 3663              	.LVL197:
 3664              	.L236:
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3665              		.loc 24 743 5 view .LVU1097
 3666 001a 0135     		adds	r5, r5, #1
 3667              	.LVL198:
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 3668              		.loc 24 753 36 view .LVU1098
 3669 001c 8148     		ldr	r0, .L238+4
 3670 001e FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3671              	.LVL199:
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3672              		.loc 24 743 5 is_stmt 1 view .LVU1099
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3673              		.loc 24 743 22 view .LVU1100
 3674 0022 3434     		adds	r4, r4, #52
 3675              	.LVL200:
 743:Nimbus.cpp    ****     for(int i = 0; i < 8; i++)
 3676              		.loc 24 743 22 is_stmt 0 view .LVU1101
 3677 0024 082D     		cmp	r5, #8
 3678 0026 F0D1     		bne	.L191
 3679              	.LBE1039:
 757:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 3680              		.loc 24 757 5 is_stmt 1 view .LVU1102
 757:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 3681              		.loc 24 757 55 is_stmt 0 view .LVU1103
 3682 0028 7F4D     		ldr	r5, .L238+8
 3683              	.LVL201:
 759:Nimbus.cpp    ****     field.led_driver.SetLed(
 3684              		.loc 24 759 28 view .LVU1104
 3685 002a B7EE008A 		vmov.f32	s16, #1.0e+0
 3686 002e F6EE008A 		vmov.f32	s17, #5.0e-1
 3687 0032 0F21     		movs	r1, #15
 757:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 3688              		.loc 24 757 55 view .LVU1105
 3689 0034 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 3690              	.LVL202:
 110:dsp/granular_processor.h **** 
 3691              		.loc 12 110 49 is_stmt 1 view .LVU1106
 759:Nimbus.cpp    ****     field.led_driver.SetLed(
ARM GAS  /tmp/ccUsbZWH.s 			page 148


 3692              		.loc 24 759 5 view .LVU1107
 759:Nimbus.cpp    ****     field.led_driver.SetLed(
 3693              		.loc 24 759 28 is_stmt 0 view .LVU1108
 3694 0036 7B48     		ldr	r0, .L238+4
 3695 0038 002C     		cmp	r4, #0
 3696 003a 08FE280A 		vseleq.f32	s0, s16, s17
 3697 003e FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3698              	.LVL203:
 762:Nimbus.cpp    ****     field.led_driver.SetLed(
 3699              		.loc 24 762 5 is_stmt 1 view .LVU1109
 762:Nimbus.cpp    ****     field.led_driver.SetLed(
 3700              		.loc 24 762 28 is_stmt 0 view .LVU1110
 3701 0042 012C     		cmp	r4, #1
 3702 0044 4FF00E01 		mov	r1, #14
 3703 0048 7648     		ldr	r0, .L238+4
 3704 004a 08FE280A 		vseleq.f32	s0, s16, s17
 3705 004e FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3706              	.LVL204:
 765:Nimbus.cpp    ****     field.led_driver.SetLed(
 3707              		.loc 24 765 5 is_stmt 1 view .LVU1111
 765:Nimbus.cpp    ****     field.led_driver.SetLed(
 3708              		.loc 24 765 28 is_stmt 0 view .LVU1112
 3709 0052 022C     		cmp	r4, #2
 3710 0054 4FF00D01 		mov	r1, #13
 3711 0058 7248     		ldr	r0, .L238+4
 3712 005a 08FE280A 		vseleq.f32	s0, s16, s17
 3713 005e FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3714              	.LVL205:
 768:Nimbus.cpp    ****     field.led_driver.SetLed(
 3715              		.loc 24 768 5 is_stmt 1 view .LVU1113
 768:Nimbus.cpp    ****     field.led_driver.SetLed(
 3716              		.loc 24 768 28 is_stmt 0 view .LVU1114
 3717 0062 032C     		cmp	r4, #3
 3718 0064 4FF00C01 		mov	r1, #12
 3719 0068 6E48     		ldr	r0, .L238+4
 3720 006a 08FE280A 		vseleq.f32	s0, s16, s17
 3721 006e FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3722              	.LVL206:
 772:Nimbus.cpp    ****     auto currentPlaybackQuality = processor.quality();
 3723              		.loc 24 772 5 is_stmt 1 view .LVU1115
 3724              	.LBB1040:
 3725              	.LBI1040:
 128:dsp/granular_processor.h ****     }
 129:dsp/granular_processor.h **** 
 130:dsp/granular_processor.h ****     inline int32_t quality() const
 3726              		.loc 12 130 20 view .LVU1116
 3727              	.LBB1041:
 131:dsp/granular_processor.h ****     {
 132:dsp/granular_processor.h ****         int32_t quality = 0;
 3728              		.loc 12 132 9 view .LVU1117
 133:dsp/granular_processor.h ****         if(num_channels_ == 1)
 3729              		.loc 12 133 9 view .LVU1118
 134:dsp/granular_processor.h ****             quality |= 1;
 135:dsp/granular_processor.h ****         if(low_fidelity_)
 3730              		.loc 12 135 9 is_stmt 0 view .LVU1119
 3731 0072 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 133:dsp/granular_processor.h ****         if(num_channels_ == 1)
ARM GAS  /tmp/ccUsbZWH.s 			page 149


 3732              		.loc 12 133 12 view .LVU1120
 3733 0074 6C68     		ldr	r4, [r5, #4]
 3734              	.LVL207:
 3735              		.loc 12 135 9 is_stmt 1 view .LVU1121
 3736 0076 002B     		cmp	r3, #0
 3737 0078 00F0BB80 		beq	.L196
 136:dsp/granular_processor.h ****             quality |= 2;
 3738              		.loc 12 136 13 view .LVU1122
 133:dsp/granular_processor.h ****         if(num_channels_ == 1)
 3739              		.loc 12 133 9 is_stmt 0 view .LVU1123
 3740 007c 611E     		subs	r1, r4, #1
 3741 007e 4C42     		rsbs	r4, r1, #0
 3742              	.LVL208:
 133:dsp/granular_processor.h ****         if(num_channels_ == 1)
 3743              		.loc 12 133 9 view .LVU1124
 3744 0080 4C41     		adcs	r4, r4, r1
 3745              		.loc 12 136 21 view .LVU1125
 3746 0082 44F00204 		orr	r4, r4, #2
 3747              	.LVL209:
 137:dsp/granular_processor.h ****         return quality;
 3748              		.loc 12 137 9 is_stmt 1 view .LVU1126
 3749              		.loc 12 137 9 is_stmt 0 view .LVU1127
 3750              	.LBE1041:
 3751              	.LBE1040:
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 3752              		.loc 24 774 5 is_stmt 1 view .LVU1128
 3753              	.L237:
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 3754              		.loc 24 774 28 is_stmt 0 view .LVU1129
 3755 0086 B0EE680A 		vmov.f32	s0, s17
 3756              	.L197:
 777:Nimbus.cpp    ****     field.led_driver.SetLed(
 3757              		.loc 24 777 28 discriminator 4 view .LVU1130
 3758 008a B7EE008A 		vmov.f32	s16, #1.0e+0
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 3759              		.loc 24 774 28 discriminator 4 view .LVU1131
 3760 008e 0021     		movs	r1, #0
 777:Nimbus.cpp    ****     field.led_driver.SetLed(
 3761              		.loc 24 777 28 discriminator 4 view .LVU1132
 3762 0090 F6EE008A 		vmov.f32	s17, #5.0e-1
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 3763              		.loc 24 774 28 discriminator 4 view .LVU1133
 3764 0094 6348     		ldr	r0, .L238+4
 3765 0096 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3766              	.LVL210:
 777:Nimbus.cpp    ****     field.led_driver.SetLed(
 3767              		.loc 24 777 5 is_stmt 1 discriminator 4 view .LVU1134
 777:Nimbus.cpp    ****     field.led_driver.SetLed(
 3768              		.loc 24 777 28 is_stmt 0 discriminator 4 view .LVU1135
 3769 009a 012C     		cmp	r4, #1
 3770 009c 4FF00101 		mov	r1, #1
 3771 00a0 6048     		ldr	r0, .L238+4
 3772 00a2 08FE280A 		vseleq.f32	s0, s16, s17
 3773 00a6 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3774              	.LVL211:
 780:Nimbus.cpp    ****     field.led_driver.SetLed(
 3775              		.loc 24 780 5 is_stmt 1 discriminator 4 view .LVU1136
ARM GAS  /tmp/ccUsbZWH.s 			page 150


 780:Nimbus.cpp    ****     field.led_driver.SetLed(
 3776              		.loc 24 780 28 is_stmt 0 discriminator 4 view .LVU1137
 3777 00aa 022C     		cmp	r4, #2
 3778 00ac 4FF00201 		mov	r1, #2
 3779 00b0 5C48     		ldr	r0, .L238+4
 3780 00b2 08FE280A 		vseleq.f32	s0, s16, s17
 3781 00b6 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3782              	.LVL212:
 783:Nimbus.cpp    ****     field.led_driver.SetLed(
 3783              		.loc 24 783 5 is_stmt 1 discriminator 4 view .LVU1138
 783:Nimbus.cpp    ****     field.led_driver.SetLed(
 3784              		.loc 24 783 28 is_stmt 0 discriminator 4 view .LVU1139
 3785 00ba 032C     		cmp	r4, #3
 788:Nimbus.cpp    ****                             current_device_state == CV_MAPPING
 3786              		.loc 24 788 50 discriminator 4 view .LVU1140
 3787 00bc 5B4C     		ldr	r4, .L238+12
 783:Nimbus.cpp    ****     field.led_driver.SetLed(
 3788              		.loc 24 783 28 discriminator 4 view .LVU1141
 3789 00be 4FF00301 		mov	r1, #3
 3790 00c2 08FE280A 		vseleq.f32	s0, s16, s17
 3791 00c6 5748     		ldr	r0, .L238+4
 3792 00c8 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3793              	.LVL213:
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 3794              		.loc 24 787 5 is_stmt 1 discriminator 4 view .LVU1142
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 3795              		.loc 24 787 28 is_stmt 0 discriminator 4 view .LVU1143
 3796 00cc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3797 00ce 012B     		cmp	r3, #1
 3798 00d0 40F09680 		bne	.L221
 789:Nimbus.cpp    ****                                     && currently_mapping_cv == CV2
 3799              		.loc 24 789 61 view .LVU1144
 3800 00d4 564B     		ldr	r3, .L238+16
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 3801              		.loc 24 787 28 view .LVU1145
 3802 00d6 9FED570A 		vldr.32	s0, .L238+20
 789:Nimbus.cpp    ****                                     && currently_mapping_cv == CV2
 3803              		.loc 24 789 37 view .LVU1146
 3804 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 3805              		.loc 24 787 28 view .LVU1147
 3806 00dc 012B     		cmp	r3, #1
 3807 00de 08FE000A 		vseleq.f32	s0, s16, s0
 3808              	.L201:
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 3809              		.loc 24 787 28 discriminator 3 view .LVU1148
 3810 00e2 0421     		movs	r1, #4
 3811 00e4 4F48     		ldr	r0, .L238+4
 3812 00e6 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3813              	.LVL214:
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 3814              		.loc 24 792 5 is_stmt 1 discriminator 3 view .LVU1149
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 3815              		.loc 24 792 28 is_stmt 0 discriminator 3 view .LVU1150
 3816 00ea 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3817 00ec 012B     		cmp	r3, #1
 3818 00ee 40F08A80 		bne	.L223
ARM GAS  /tmp/ccUsbZWH.s 			page 151


 794:Nimbus.cpp    ****                                     && currently_mapping_cv == CV3
 3819              		.loc 24 794 61 view .LVU1151
 3820 00f2 4F4B     		ldr	r3, .L238+16
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 3821              		.loc 24 792 28 view .LVU1152
 3822 00f4 F7EE007A 		vmov.f32	s15, #1.0e+0
 3823 00f8 9FED4E0A 		vldr.32	s0, .L238+20
 794:Nimbus.cpp    ****                                     && currently_mapping_cv == CV3
 3824              		.loc 24 794 37 view .LVU1153
 3825 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 3826              		.loc 24 792 28 view .LVU1154
 3827 00fe 022B     		cmp	r3, #2
 3828 0100 07FE800A 		vseleq.f32	s0, s15, s0
 3829              	.L202:
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 3830              		.loc 24 792 28 discriminator 3 view .LVU1155
 3831 0104 0521     		movs	r1, #5
 3832 0106 4748     		ldr	r0, .L238+4
 3833 0108 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3834              	.LVL215:
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 3835              		.loc 24 797 5 is_stmt 1 discriminator 3 view .LVU1156
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 3836              		.loc 24 797 28 is_stmt 0 discriminator 3 view .LVU1157
 3837 010c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3838 010e 012B     		cmp	r3, #1
 3839 0110 7CD1     		bne	.L225
 799:Nimbus.cpp    ****                                     && currently_mapping_cv == CV4
 3840              		.loc 24 799 61 view .LVU1158
 3841 0112 474B     		ldr	r3, .L238+16
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 3842              		.loc 24 797 28 view .LVU1159
 3843 0114 F7EE007A 		vmov.f32	s15, #1.0e+0
 3844 0118 9FED460A 		vldr.32	s0, .L238+20
 799:Nimbus.cpp    ****                                     && currently_mapping_cv == CV4
 3845              		.loc 24 799 37 view .LVU1160
 3846 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 3847              		.loc 24 797 28 view .LVU1161
 3848 011e 032B     		cmp	r3, #3
 3849 0120 07FE800A 		vseleq.f32	s0, s15, s0
 3850              	.L203:
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 3851              		.loc 24 797 28 discriminator 3 view .LVU1162
 3852 0124 0621     		movs	r1, #6
 3853 0126 3F48     		ldr	r0, .L238+4
 3854 0128 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3855              	.LVL216:
 803:Nimbus.cpp    ****     field.led_driver.SetLed(LED_FREEZE, processor.frozen() ? 1.f : 0.5f);
 3856              		.loc 24 803 5 is_stmt 1 discriminator 3 view .LVU1163
  97:dsp/granular_processor.h **** 
 3857              		.loc 12 97 34 discriminator 3 view .LVU1164
 803:Nimbus.cpp    ****     field.led_driver.SetLed(LED_FREEZE, processor.frozen() ? 1.f : 0.5f);
 3858              		.loc 24 803 57 is_stmt 0 discriminator 3 view .LVU1165
 3859 012c 424B     		ldr	r3, .L238+24
 803:Nimbus.cpp    ****     field.led_driver.SetLed(LED_FREEZE, processor.frozen() ? 1.f : 0.5f);
ARM GAS  /tmp/ccUsbZWH.s 			page 152


 3860              		.loc 24 803 28 discriminator 3 view .LVU1166
 3861 012e F7EE008A 		vmov.f32	s17, #1.0e+0
 3862 0132 0A21     		movs	r1, #10
 3863 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3864 0136 B6EE008A 		vmov.f32	s16, #5.0e-1
 3865 013a 3A48     		ldr	r0, .L238+4
 3866 013c 002B     		cmp	r3, #0
 3867 013e 08FE280A 		vseleq.f32	s0, s16, s17
 3868 0142 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3869              	.LVL217:
 804:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SILENCE, is_silenced ? 1.f : 0.5f);
 3870              		.loc 24 804 5 is_stmt 1 discriminator 3 view .LVU1167
 804:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SILENCE, is_silenced ? 1.f : 0.5f);
 3871              		.loc 24 804 28 is_stmt 0 discriminator 3 view .LVU1168
 3872 0146 3D4B     		ldr	r3, .L238+28
 3873 0148 0921     		movs	r1, #9
 3874 014a 3648     		ldr	r0, .L238+4
 3875 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3876 014e 002B     		cmp	r3, #0
 3877 0150 08FE280A 		vseleq.f32	s0, s16, s17
 3878 0154 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3879              	.LVL218:
 805:Nimbus.cpp    ****     field.led_driver.SetLed(LED_BYPASS, is_bypassed ? 1.f : 0.5f);
 3880              		.loc 24 805 5 is_stmt 1 discriminator 3 view .LVU1169
 805:Nimbus.cpp    ****     field.led_driver.SetLed(LED_BYPASS, is_bypassed ? 1.f : 0.5f);
 3881              		.loc 24 805 28 is_stmt 0 discriminator 3 view .LVU1170
 3882 0158 394B     		ldr	r3, .L238+32
 3883 015a 0821     		movs	r1, #8
 3884 015c 3148     		ldr	r0, .L238+4
 3885 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3886 0160 002B     		cmp	r3, #0
 3887 0162 08FE280A 		vseleq.f32	s0, s16, s17
 3888 0166 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3889              	.LVL219:
 806:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SHIFT, is_shifted ? 1.f : 0.5f);
 3890              		.loc 24 806 5 is_stmt 1 discriminator 3 view .LVU1171
 806:Nimbus.cpp    ****     field.led_driver.SetLed(LED_SHIFT, is_shifted ? 1.f : 0.5f);
 3891              		.loc 24 806 28 is_stmt 0 discriminator 3 view .LVU1172
 3892 016a 364B     		ldr	r3, .L238+36
 3893 016c 0721     		movs	r1, #7
 3894 016e 2D48     		ldr	r0, .L238+4
 3895 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3896 0172 002B     		cmp	r3, #0
 3897 0174 08FE280A 		vseleq.f32	s0, s16, s17
 3898 0178 FFF7FEFF 		bl	_ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
 3899              	.LVL220:
 808:Nimbus.cpp    ****     field.led_driver.SwapBuffersAndTransmit();
 3900              		.loc 24 808 5 is_stmt 1 discriminator 3 view .LVU1173
 3901              	.LBB1043:
 3902              	.LBI1043:
 139:../../libdaisy/src/dev/leddriver.h ****     {
 3903              		.loc 25 139 10 discriminator 3 view .LVU1174
 3904              	.L208:
 3905              	.LBB1044:
 142:../../libdaisy/src/dev/leddriver.h **** 
 3906              		.loc 25 142 35 view .LVU1175
 142:../../libdaisy/src/dev/leddriver.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 153


 3907              		.loc 25 142 15 is_stmt 0 view .LVU1176
 3908 017c 324B     		ldr	r3, .L238+40
 3909 017e 93F87024 		ldrb	r2, [r3, #1136]	@ zero_extendqisi2
 142:../../libdaisy/src/dev/leddriver.h **** 
 3910              		.loc 25 142 35 view .LVU1177
 3911 0182 1206     		lsls	r2, r2, #24
 3912 0184 FAD5     		bpl	.L208
 145:../../libdaisy/src/dev/leddriver.h ****         transmit_buffer_ = draw_buffer_;
 3913              		.loc 25 145 14 view .LVU1178
 3914 0186 D3F86414 		ldr	r1, [r3, #1124]
 3915              	.LVL221:
 3916              	.LBB1045:
 3917              	.LBB1046:
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3918              		.loc 25 154 25 view .LVU1179
 3919 018a 0022     		movs	r2, #0
 3920              	.LBE1046:
 3921              	.LBE1045:
 146:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_     = tmp;
 3922              		.loc 25 146 28 view .LVU1180
 3923 018c D3F86004 		ldr	r0, [r3, #1120]
 147:../../libdaisy/src/dev/leddriver.h **** 
 3924              		.loc 25 147 9 view .LVU1181
 3925 0190 C3F86014 		str	r1, [r3, #1120]
 3926              	.LVL222:
 3927              	.LBB1049:
 153:../../libdaisy/src/dev/leddriver.h ****                 for(int ch = 0; ch < 16; ch++)
 3928              		.loc 25 153 30 is_stmt 1 view .LVU1182
 3929              	.LBB1047:
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3930              		.loc 25 154 36 view .LVU1183
 3931              	.LBE1047:
 3932              	.LBE1049:
 146:../../libdaisy/src/dev/leddriver.h ****         draw_buffer_     = tmp;
 3933              		.loc 25 146 9 is_stmt 0 view .LVU1184
 3934 0194 C3F86404 		str	r0, [r3, #1124]
 3935              	.LVL223:
 3936              	.L209:
 3937              	.LBB1050:
 3938              	.LBB1048:
 156:../../libdaisy/src/dev/leddriver.h ****         }
 3939              		.loc 25 156 56 view .LVU1185
 3940 0198 00EB8204 		add	r4, r0, r2, lsl #2
 3941 019c B4F80350 		ldrh	r5, [r4, #3]	@ unaligned
 155:../../libdaisy/src/dev/leddriver.h ****                         = transmit_buffer_[d].leds[ch].off;
 3942              		.loc 25 155 21 view .LVU1186
 3943 01a0 01EB8204 		add	r4, r1, r2, lsl #2
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3944              		.loc 25 154 17 view .LVU1187
 3945 01a4 0132     		adds	r2, r2, #1
 3946              	.LVL224:
 155:../../libdaisy/src/dev/leddriver.h ****                         = transmit_buffer_[d].leds[ch].off;
 3947              		.loc 25 155 21 view .LVU1188
 3948 01a6 A4F80350 		strh	r5, [r4, #3]	@ unaligned
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3949              		.loc 25 154 17 is_stmt 1 view .LVU1189
 3950              	.LVL225:
ARM GAS  /tmp/ccUsbZWH.s 			page 154


 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3951              		.loc 25 154 36 view .LVU1190
 3952 01aa 102A     		cmp	r2, #16
 3953 01ac F4D1     		bne	.L209
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3954              		.loc 25 154 25 is_stmt 0 view .LVU1191
 3955 01ae 0022     		movs	r2, #0
 3956              	.LVL226:
 3957              	.L210:
 156:../../libdaisy/src/dev/leddriver.h ****         }
 3958              		.loc 25 156 56 view .LVU1192
 3959 01b0 00EB8204 		add	r4, r0, r2, lsl #2
 3960 01b4 B4F84450 		ldrh	r5, [r4, #68]	@ unaligned
 155:../../libdaisy/src/dev/leddriver.h ****                         = transmit_buffer_[d].leds[ch].off;
 3961              		.loc 25 155 21 view .LVU1193
 3962 01b8 01EB8204 		add	r4, r1, r2, lsl #2
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3963              		.loc 25 154 17 view .LVU1194
 3964 01bc 0132     		adds	r2, r2, #1
 3965              	.LVL227:
 155:../../libdaisy/src/dev/leddriver.h ****                         = transmit_buffer_[d].leds[ch].off;
 3966              		.loc 25 155 21 view .LVU1195
 3967 01be A4F84450 		strh	r5, [r4, #68]	@ unaligned
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3968              		.loc 25 154 17 is_stmt 1 view .LVU1196
 3969              	.LVL228:
 154:../../libdaisy/src/dev/leddriver.h ****                     draw_buffer_[d].leds[ch].off
 3970              		.loc 25 154 36 view .LVU1197
 3971 01c2 102A     		cmp	r2, #16
 3972 01c4 F4D1     		bne	.L210
 3973              	.LBE1048:
 153:../../libdaisy/src/dev/leddriver.h ****                 for(int ch = 0; ch < 16; ch++)
 3974              		.loc 25 153 13 view .LVU1198
 3975              	.LVL229:
 153:../../libdaisy/src/dev/leddriver.h ****                 for(int ch = 0; ch < 16; ch++)
 3976              		.loc 25 153 30 view .LVU1199
 3977              	.LBE1050:
 160:../../libdaisy/src/dev/leddriver.h ****         ContinueTransmission();
 3978              		.loc 25 160 9 is_stmt 0 view .LVU1200
 3979 01c6 FF21     		movs	r1, #255
 3980              	.LVL230:
 160:../../libdaisy/src/dev/leddriver.h ****         ContinueTransmission();
 3981              		.loc 25 160 9 view .LVU1201
 3982 01c8 83F87014 		strb	r1, [r3, #1136]
 3983              	.LVL231:
 3984              	.LBB1051:
 3985              	.LBI1051:
 165:../../libdaisy/src/dev/leddriver.h ****     {
 3986              		.loc 25 165 10 is_stmt 1 view .LVU1202
 3987              	.LBB1052:
 167:../../libdaisy/src/dev/leddriver.h ****         if(current_driver_idx_ >= numDrivers)
 3988              		.loc 25 167 9 is_stmt 0 view .LVU1203
 3989 01cc 93F87024 		ldrb	r2, [r3, #1136]	@ zero_extendqisi2
 3990              	.LVL232:
 167:../../libdaisy/src/dev/leddriver.h ****         if(current_driver_idx_ >= numDrivers)
 3991              		.loc 25 167 9 view .LVU1204
 3992 01d0 0132     		adds	r2, r2, #1
ARM GAS  /tmp/ccUsbZWH.s 			page 155


 3993 01d2 52B2     		sxtb	r2, r2
 3994 01d4 83F87024 		strb	r2, [r3, #1136]
 168:../../libdaisy/src/dev/leddriver.h ****         {
 3995              		.loc 25 168 12 view .LVU1205
 3996 01d8 93F87024 		ldrb	r2, [r3, #1136]	@ zero_extendqisi2
 3997 01dc 52B2     		sxtb	r2, r2
 168:../../libdaisy/src/dev/leddriver.h ****         {
 3998              		.loc 25 168 9 view .LVU1206
 3999 01de 012A     		cmp	r2, #1
 4000 01e0 17DD     		ble	.L211
 170:../../libdaisy/src/dev/leddriver.h ****             return;
 4001              		.loc 25 170 13 view .LVU1207
 4002 01e2 83F87014 		strb	r1, [r3, #1136]
 4003              	.LBE1052:
 4004              	.LBE1051:
 4005              	.LBE1044:
 4006              	.LBE1043:
 809:Nimbus.cpp    **** }
 4007              		.loc 24 809 1 view .LVU1208
 4008 01e6 BDEC028B 		vldm	sp!, {d8}
 4009              		.cfi_remember_state
 4010              		.cfi_restore 80
 4011              		.cfi_restore 81
 4012              		.cfi_def_cfa_offset 16
 4013 01ea 38BD     		pop	{r3, r4, r5, pc}
 4014              	.LVL233:
 4015              	.L189:
 4016              		.cfi_restore_state
 4017              	.LBB1059:
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 4018              		.loc 24 753 13 is_stmt 1 view .LVU1209
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 4019              		.loc 24 753 13 is_stmt 0 view .LVU1210
 4020              	.LBE1059:
 179:Nimbus.cpp    ****     int         GetLed() const { return led_; }
 4021              		.loc 24 179 34 is_stmt 1 view .LVU1211
 4022              	.LBB1060:
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 4023              		.loc 24 753 36 is_stmt 0 view .LVU1212
 4024 01ec 9FED110A 		vldr.32	s0, .L238+20
 4025 01f0 13E7     		b	.L236
 4026              	.LVL234:
 4027              	.L196:
 753:Nimbus.cpp    ****             field.led_driver.SetLed(param_controls[i].GetLed(), 0.f);
 4028              		.loc 24 753 36 view .LVU1213
 4029              	.LBE1060:
 4030              	.LBB1061:
 4031              	.LBB1042:
 4032              		.loc 12 137 9 is_stmt 1 view .LVU1214
 4033              		.loc 12 137 9 is_stmt 0 view .LVU1215
 4034              	.LBE1042:
 4035              	.LBE1061:
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 4036              		.loc 24 774 5 is_stmt 1 view .LVU1216
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 4037              		.loc 24 774 28 is_stmt 0 view .LVU1217
 4038 01f2 012C     		cmp	r4, #1
ARM GAS  /tmp/ccUsbZWH.s 			page 156


 4039 01f4 3FF447AF 		beq	.L237
 4040 01f8 B0EE480A 		vmov.f32	s0, s16
 4041 01fc 1C46     		mov	r4, r3
 4042              	.LVL235:
 774:Nimbus.cpp    ****     field.led_driver.SetLed(
 4043              		.loc 24 774 28 view .LVU1218
 4044 01fe 44E7     		b	.L197
 4045              	.LVL236:
 4046              	.L221:
 787:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_2,
 4047              		.loc 24 787 28 view .LVU1219
 4048 0200 9FED0C0A 		vldr.32	s0, .L238+20
 4049 0204 6DE7     		b	.L201
 4050              	.L223:
 792:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_3,
 4051              		.loc 24 792 28 view .LVU1220
 4052 0206 9FED0B0A 		vldr.32	s0, .L238+20
 4053 020a 7BE7     		b	.L202
 4054              	.L225:
 797:Nimbus.cpp    ****     field.led_driver.SetLed(LED_MAP_CV_4,
 4055              		.loc 24 797 28 view .LVU1221
 4056 020c 9FED090A 		vldr.32	s0, .L238+20
 4057 0210 88E7     		b	.L203
 4058              	.LVL237:
 4059              	.L211:
 809:Nimbus.cpp    **** }
 4060              		.loc 24 809 1 view .LVU1222
 4061 0212 BDEC028B 		vldm	sp!, {d8}
 4062              		.cfi_restore 80
 4063              		.cfi_restore 81
 4064              		.cfi_def_cfa_offset 16
 4065              	.LBB1062:
 4066              	.LBB1057:
 4067              	.LBB1055:
 4068              	.LBB1053:
 4069 0216 0348     		ldr	r0, .L238+4
 4070              	.LVL238:
 809:Nimbus.cpp    **** }
 4071              		.loc 24 809 1 view .LVU1223
 4072              	.LBE1053:
 4073              	.LBE1055:
 4074              	.LBE1057:
 4075              	.LBE1062:
 4076 0218 BDE83840 		pop	{r3, r4, r5, lr}
 4077              		.cfi_restore 14
 4078              		.cfi_restore 5
 4079              		.cfi_restore 4
 4080              		.cfi_restore 3
 4081              		.cfi_def_cfa_offset 0
 4082              	.LBB1063:
 4083              	.LBB1058:
 4084              	.LBB1056:
 4085              	.LBB1054:
 809:Nimbus.cpp    **** }
 4086              		.loc 24 809 1 view .LVU1224
 4087 021c FFF7FEBF 		b	_ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0
 4088              	.LVL239:
ARM GAS  /tmp/ccUsbZWH.s 			page 157


 4089              	.L239:
 809:Nimbus.cpp    **** }
 4090              		.loc 24 809 1 view .LVU1225
 4091              		.align	2
 4092              	.L238:
 4093 0220 00000000 		.word	.LANCHOR1
 4094 0224 5C040000 		.word	field+1116
 4095 0228 00000000 		.word	processor
 4096 022c 00000000 		.word	.LANCHOR2
 4097 0230 00000000 		.word	.LANCHOR4
 4098 0234 00000000 		.word	0
 4099 0238 001B0000 		.word	processor+6912
 4100 023c 00000000 		.word	.LANCHOR8
 4101 0240 00000000 		.word	.LANCHOR9
 4102 0244 00000000 		.word	.LANCHOR6
 4103 0248 00000000 		.word	field
 4104              	.LBE1054:
 4105              	.LBE1056:
 4106              	.LBE1058:
 4107              	.LBE1063:
 4108              		.cfi_endproc
 4109              	.LFE4545:
 4111              		.section	.text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv,"axG",
 4112              		.align	1
 4113              		.weak	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv
 4114              		.syntax unified
 4115              		.thumb
 4116              		.thumb_func
 4117              		.fpu fpv5-d16
 4119              	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv:
 4120              	.LVL240:
 4121              	.LFB5168:
 254:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 255:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 256:../../libdaisy/src/dev/oled_ssd130x.h **** 
 257:../../libdaisy/src/dev/oled_ssd130x.h ****     /**
 258:../../libdaisy/src/dev/oled_ssd130x.h ****      * Update the display 
 259:../../libdaisy/src/dev/oled_ssd130x.h ****     */
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     void Update()
 4122              		.loc 26 260 10 is_stmt 1 view -0
 4123              		.cfi_startproc
 4124              		@ args = 0, pretend = 0, frame = 0
 4125              		@ frame_needed = 0, uses_anonymous_args = 0
 261:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 262:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t i;
 263:../../libdaisy/src/dev/oled_ssd130x.h ****         uint8_t high_column_addr;
 264:../../libdaisy/src/dev/oled_ssd130x.h ****         switch(height)
 265:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 266:../../libdaisy/src/dev/oled_ssd130x.h ****             case 32: high_column_addr = 0x12; break;
 267:../../libdaisy/src/dev/oled_ssd130x.h **** 
 268:../../libdaisy/src/dev/oled_ssd130x.h ****             default: high_column_addr = 0x10; break;
 269:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         for(i = 0; i < (height / 8); i++)
 4126              		.loc 26 270 22 view .LVU1227
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4127              		.loc 26 260 10 is_stmt 0 view .LVU1228
 4128 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccUsbZWH.s 			page 158


 4129              		.cfi_def_cfa_offset 16
 4130              		.cfi_offset 4, -16
 4131              		.cfi_offset 5, -12
 4132              		.cfi_offset 6, -8
 4133              		.cfi_offset 14, -4
 260:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4134              		.loc 26 260 10 view .LVU1229
 4135 0002 0446     		mov	r4, r0
 4136 0004 00F10C06 		add	r6, r0, #12
 4137 0008 B025     		movs	r5, #176
 4138              	.LVL241:
 4139              	.L241:
 271:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 272:../../libdaisy/src/dev/oled_ssd130x.h ****             transport_.SendCommand(0xB0 + i);
 4140              		.loc 26 272 13 discriminator 2 view .LVU1230
 4141 000a 2946     		mov	r1, r5
 4142 000c 2046     		mov	r0, r4
 4143 000e FFF7FEFF 		bl	_ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh
 4144              	.LVL242:
 4145 0012 0135     		adds	r5, r5, #1
 4146              	.LVL243:
 273:../../libdaisy/src/dev/oled_ssd130x.h ****             transport_.SendCommand(0x00);
 4147              		.loc 26 273 13 discriminator 2 view .LVU1231
 4148 0014 0021     		movs	r1, #0
 4149 0016 2046     		mov	r0, r4
 4150 0018 FFF7FEFF 		bl	_ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh
 4151              	.LVL244:
 274:../../libdaisy/src/dev/oled_ssd130x.h ****             transport_.SendCommand(high_column_addr);
 4152              		.loc 26 274 13 discriminator 2 view .LVU1232
 4153 001c 1021     		movs	r1, #16
 4154 001e 2046     		mov	r0, r4
 4155 0020 EDB2     		uxtb	r5, r5
 4156 0022 FFF7FEFF 		bl	_ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh
 4157              	.LVL245:
 4158              	.LBB1066:
 4159              	.LBI1066:
 115:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4160              		.loc 26 115 10 is_stmt 1 discriminator 2 view .LVU1233
 4161              	.LBB1067:
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 4162              		.loc 26 117 9 discriminator 2 view .LVU1234
 117:../../libdaisy/src/dev/oled_ssd130x.h ****         spi_.BlockingTransmit(buff, size);
 4163              		.loc 26 117 23 is_stmt 0 discriminator 2 view .LVU1235
 4164 0026 0121     		movs	r1, #1
 4165 0028 04F10800 		add	r0, r4, #8
 4166 002c FFF7FEFF 		bl	dsy_gpio_write
 4167              	.LVL246:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 4168              		.loc 26 118 9 is_stmt 1 discriminator 2 view .LVU1236
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 4169              		.loc 26 118 30 is_stmt 0 discriminator 2 view .LVU1237
 4170 0030 3146     		mov	r1, r6
 4171 0032 6423     		movs	r3, #100
 4172 0034 8022     		movs	r2, #128
 4173 0036 2046     		mov	r0, r4
 4174 0038 8036     		adds	r6, r6, #128
 4175              	.LVL247:
ARM GAS  /tmp/ccUsbZWH.s 			page 159


 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 4176              		.loc 26 118 30 discriminator 2 view .LVU1238
 4177 003a FFF7FEFF 		bl	_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
 4178              	.LVL248:
 118:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 4179              		.loc 26 118 30 discriminator 2 view .LVU1239
 4180              	.LBE1067:
 4181              	.LBE1066:
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 4182              		.loc 26 270 9 is_stmt 1 discriminator 2 view .LVU1240
 270:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 4183              		.loc 26 270 22 discriminator 2 view .LVU1241
 4184 003e B82D     		cmp	r5, #184
 4185 0040 E3D1     		bne	.L241
 275:../../libdaisy/src/dev/oled_ssd130x.h ****             transport_.SendData(&buffer_[width * i], width);
 276:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 277:../../libdaisy/src/dev/oled_ssd130x.h ****     };
 4186              		.loc 26 277 5 is_stmt 0 view .LVU1242
 4187 0042 70BD     		pop	{r4, r5, r6, pc}
 4188              		.loc 26 277 5 view .LVU1243
 4189              		.cfi_endproc
 4190              	.LFE5168:
 4192              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 4193              		.align	1
 4194              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 4195              		.syntax unified
 4196              		.thumb
 4197              		.thumb_func
 4198              		.fpu fpv5-d16
 4200              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:
 4201              	.LVL249:
 4202              	.LFB5008:
  34:../../libdaisy/src/hid/disp/oled_display.h **** 
  35:../../libdaisy/src/hid/disp/oled_display.h ****     /**
  36:../../libdaisy/src/hid/disp/oled_display.h ****     Sets the pixel at the specified coordinate to be on/off.
  37:../../libdaisy/src/hid/disp/oled_display.h ****     \param x   x Coordinate
  38:../../libdaisy/src/hid/disp/oled_display.h ****     \param y   y coordinate
  39:../../libdaisy/src/hid/disp/oled_display.h ****     \param on  on or off
  40:../../libdaisy/src/hid/disp/oled_display.h ****     */
  41:../../libdaisy/src/hid/disp/oled_display.h ****     void DrawPixel(uint_fast8_t x, uint_fast8_t y, bool on) override
  42:../../libdaisy/src/hid/disp/oled_display.h ****     {
  43:../../libdaisy/src/hid/disp/oled_display.h ****         driver_.DrawPixel(x, y, on);
  44:../../libdaisy/src/hid/disp/oled_display.h ****     }
  45:../../libdaisy/src/hid/disp/oled_display.h **** 
  46:../../libdaisy/src/hid/disp/oled_display.h ****     /** 
  47:../../libdaisy/src/hid/disp/oled_display.h ****     Writes the current display buffer to the OLED device using SPI or I2C depending on 
  48:../../libdaisy/src/hid/disp/oled_display.h ****     how the object was initialized.
  49:../../libdaisy/src/hid/disp/oled_display.h ****     */
  50:../../libdaisy/src/hid/disp/oled_display.h ****     void Update() override { driver_.Update(); }
 4203              		.loc 5 50 10 is_stmt 1 view -0
 4204              		.cfi_startproc
 4205              		@ args = 0, pretend = 0, frame = 0
 4206              		@ frame_needed = 0, uses_anonymous_args = 0
 4207              		.loc 5 50 30 is_stmt 0 view .LVU1245
 4208 0000 0830     		adds	r0, r0, #8
 4209              	.LVL250:
 4210              		.loc 5 50 10 view .LVU1246
ARM GAS  /tmp/ccUsbZWH.s 			page 160


 4211 0002 08B5     		push	{r3, lr}
 4212              		.cfi_def_cfa_offset 8
 4213              		.cfi_offset 3, -8
 4214              		.cfi_offset 14, -4
 4215              		.loc 5 50 30 view .LVU1247
 4216 0004 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv
 4217              	.LVL251:
 4218              		.loc 5 50 48 view .LVU1248
 4219 0008 08BD     		pop	{r3, pc}
 4220              		.cfi_endproc
 4221              	.LFE5008:
 4223              		.section	.text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb,"
 4224              		.align	1
 4225              		.weak	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4229              		.fpu fpv5-d16
 4231              	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb:
 4232              	.LVL252:
 4233              	.LFB5226:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4234              		.loc 26 239 10 is_stmt 1 view -0
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 0
 4237              		@ frame_needed = 0, uses_anonymous_args = 0
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4238              		.loc 26 241 9 is_stmt 0 view .LVU1250
 4239 0000 7F29     		cmp	r1, #127
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4240              		.loc 26 239 10 view .LVU1251
 4241 0002 10B5     		push	{r4, lr}
 4242              		.cfi_def_cfa_offset 8
 4243              		.cfi_offset 4, -8
 4244              		.cfi_offset 14, -4
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4245              		.loc 26 241 9 view .LVU1252
 4246 0004 10D8     		bhi	.L244
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4247              		.loc 26 241 23 discriminator 1 view .LVU1253
 4248 0006 3F2A     		cmp	r2, #63
 4249 0008 0ED8     		bhi	.L244
 4250 000a D408     		lsrs	r4, r2, #3
 4251 000c 02F00702 		and	r2, r2, #7
 4252              	.LVL253:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4253              		.loc 26 241 23 discriminator 1 view .LVU1254
 4254 0010 01EBC411 		add	r1, r1, r4, lsl #7
 4255              	.LVL254:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4256              		.loc 26 241 23 discriminator 1 view .LVU1255
 4257 0014 0124     		movs	r4, #1
 4258 0016 0844     		add	r0, r0, r1
 4259              	.LVL255:
 241:../../libdaisy/src/dev/oled_ssd130x.h ****             return;
 4260              		.loc 26 241 23 discriminator 1 view .LVU1256
 4261 0018 04FA02F2 		lsl	r2, r4, r2
ARM GAS  /tmp/ccUsbZWH.s 			page 161


 4262 001c 90F90C10 		ldrsb	r1, [r0, #12]
 4263 0020 52B2     		sxtb	r2, r2
 243:../../libdaisy/src/dev/oled_ssd130x.h ****             buffer_[x + (y / 8) * width] |= (1 << (y % 8));
 4264              		.loc 26 243 9 view .LVU1257
 4265 0022 13B1     		cbz	r3, .L246
 244:../../libdaisy/src/dev/oled_ssd130x.h ****         else
 4266              		.loc 26 244 42 view .LVU1258
 4267 0024 1143     		orrs	r1, r1, r2
 4268              	.L247:
 4269              	.LBB1070:
 4270              	.LBB1071:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4271              		.loc 26 246 13 view .LVU1259
 4272 0026 0173     		strb	r1, [r0, #12]
 4273              	.L244:
 4274              	.LBE1071:
 4275              	.LBE1070:
 247:../../libdaisy/src/dev/oled_ssd130x.h **** 
 4276              		.loc 26 247 5 view .LVU1260
 4277 0028 10BD     		pop	{r4, pc}
 4278              	.L246:
 4279              	.LVL256:
 4280              	.LBB1073:
 4281              	.LBI1070:
 239:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 4282              		.loc 26 239 10 is_stmt 1 view .LVU1261
 4283              	.LBB1072:
 246:../../libdaisy/src/dev/oled_ssd130x.h ****     }
 4284              		.loc 26 246 42 is_stmt 0 view .LVU1262
 4285 002a 21EA0201 		bic	r1, r1, r2
 4286 002e FAE7     		b	.L247
 4287              	.LBE1072:
 4288              	.LBE1073:
 4289              		.cfi_endproc
 4290              	.LFE5226:
 4292              		.section	.text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportE
 4293              		.align	1
 4294              		.weak	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 4295              		.syntax unified
 4296              		.thumb
 4297              		.thumb_func
 4298              		.fpu fpv5-d16
 4300              	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjj
 4301              	.LVL257:
 4302              	.LFB5166:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4303              		.loc 5 41 10 is_stmt 1 view -0
 4304              		.cfi_startproc
 4305              		@ args = 0, pretend = 0, frame = 0
 4306              		@ frame_needed = 0, uses_anonymous_args = 0
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4307              		.loc 5 43 9 is_stmt 0 view .LVU1264
 4308 0000 0830     		adds	r0, r0, #8
 4309              	.LVL258:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4310              		.loc 5 41 10 view .LVU1265
 4311 0002 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccUsbZWH.s 			page 162


 4312              		.cfi_def_cfa_offset 8
 4313              		.cfi_offset 3, -8
 4314              		.cfi_offset 14, -4
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4315              		.loc 5 43 9 view .LVU1266
 4316 0004 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 4317              	.LVL259:
  44:../../libdaisy/src/hid/disp/oled_display.h **** 
 4318              		.loc 5 44 5 view .LVU1267
 4319 0008 08BD     		pop	{r3, pc}
 4320              		.cfi_endproc
 4321              	.LFE5166:
 4323              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4324              		.align	1
 4325              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4326              		.syntax unified
 4327              		.thumb
 4328              		.thumb_func
 4329              		.fpu fpv5-d16
 4331              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4332              	.LVL260:
 4333              	.LFB5165:
 220:../../libdaisy/src/hid/disp/display.h **** 
 221:../../libdaisy/src/hid/disp/display.h ****     void DrawLine(uint_fast8_t x1,
 222:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 223:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 224:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 225:../../libdaisy/src/hid/disp/display.h ****                   bool         on) override
 226:../../libdaisy/src/hid/disp/display.h ****     {
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaX = abs((int_fast16_t)x2 - (int_fast16_t)x1);
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 232:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 233:../../libdaisy/src/hid/disp/display.h **** 
 234:../../libdaisy/src/hid/disp/display.h ****         // If we write "ChildType::DrawPixel(x2, y2, on);", we end up with
 235:../../libdaisy/src/hid/disp/display.h ****         // all sorts of weird compiler errors when the Child class is a template
 236:../../libdaisy/src/hid/disp/display.h ****         // class. The only way around this is to use this very verbose syntax:
 237:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::DrawPixel(x2, y2, on);
 238:../../libdaisy/src/hid/disp/display.h **** 
 239:../../libdaisy/src/hid/disp/display.h ****         while((x1 != x2) || (y1 != y2))
 240:../../libdaisy/src/hid/disp/display.h ****         {
 241:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawPixel(x1, y1, on);
 242:../../libdaisy/src/hid/disp/display.h ****             error2 = error * 2;
 243:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 244:../../libdaisy/src/hid/disp/display.h ****             {
 245:../../libdaisy/src/hid/disp/display.h ****                 error -= deltaY;
 246:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 247:../../libdaisy/src/hid/disp/display.h ****             }
 248:../../libdaisy/src/hid/disp/display.h **** 
 249:../../libdaisy/src/hid/disp/display.h ****             if(error2 < deltaX)
 250:../../libdaisy/src/hid/disp/display.h ****             {
 251:../../libdaisy/src/hid/disp/display.h ****                 error += deltaX;
 252:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 253:../../libdaisy/src/hid/disp/display.h ****             }
 254:../../libdaisy/src/hid/disp/display.h ****         }
ARM GAS  /tmp/ccUsbZWH.s 			page 163


 255:../../libdaisy/src/hid/disp/display.h ****     }
 256:../../libdaisy/src/hid/disp/display.h **** 
 257:../../libdaisy/src/hid/disp/display.h ****     void DrawRect(uint_fast8_t x1,
 258:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 259:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t x2,
 260:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y2,
 261:../../libdaisy/src/hid/disp/display.h ****                   bool         on,
 262:../../libdaisy/src/hid/disp/display.h ****                   bool         fill = false) override
 263:../../libdaisy/src/hid/disp/display.h ****     {
 264:../../libdaisy/src/hid/disp/display.h ****         if(fill)
 265:../../libdaisy/src/hid/disp/display.h ****         {
 266:../../libdaisy/src/hid/disp/display.h ****             for(uint_fast8_t x = x1; x <= x2; x++)
 267:../../libdaisy/src/hid/disp/display.h ****             {
 268:../../libdaisy/src/hid/disp/display.h ****                 for(uint_fast8_t y = y1; y <= y2; y++)
 269:../../libdaisy/src/hid/disp/display.h ****                 {
 270:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))->ChildType::DrawPixel(x, y, on);
 271:../../libdaisy/src/hid/disp/display.h ****                 }
 272:../../libdaisy/src/hid/disp/display.h ****             }
 273:../../libdaisy/src/hid/disp/display.h ****         }
 274:../../libdaisy/src/hid/disp/display.h ****         else
 275:../../libdaisy/src/hid/disp/display.h ****         {
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y1, x2, y1, on);
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 279:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 280:../../libdaisy/src/hid/disp/display.h ****         }
 281:../../libdaisy/src/hid/disp/display.h ****     }
 282:../../libdaisy/src/hid/disp/display.h **** 
 283:../../libdaisy/src/hid/disp/display.h ****     void DrawArc(uint_fast8_t x,
 284:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 285:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t radius,
 286:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t start_angle,
 287:../../libdaisy/src/hid/disp/display.h ****                  int_fast16_t sweep,
 288:../../libdaisy/src/hid/disp/display.h ****                  bool         on) override
 289:../../libdaisy/src/hid/disp/display.h ****     {
 290:../../libdaisy/src/hid/disp/display.h ****         // Values to calculate the circle
 291:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t t_x, t_y, err, e2;
 292:../../libdaisy/src/hid/disp/display.h **** 
 293:../../libdaisy/src/hid/disp/display.h ****         // Temporary values to speed up comparisons
 294:../../libdaisy/src/hid/disp/display.h ****         float t_sxy, t_syx, t_sxny, t_synx;
 295:../../libdaisy/src/hid/disp/display.h ****         float t_exy, t_eyx, t_exny, t_eynx;
 296:../../libdaisy/src/hid/disp/display.h **** 
 297:../../libdaisy/src/hid/disp/display.h ****         float start_angle_rad, end_angle_rad;
 298:../../libdaisy/src/hid/disp/display.h ****         float start_x, start_y, end_x, end_y;
 299:../../libdaisy/src/hid/disp/display.h **** 
 300:../../libdaisy/src/hid/disp/display.h ****         bool d1, d2, d3, d4;
 301:../../libdaisy/src/hid/disp/display.h **** 
 302:../../libdaisy/src/hid/disp/display.h ****         d1 = d2 = d3 = d4 = true;
 303:../../libdaisy/src/hid/disp/display.h **** 
 304:../../libdaisy/src/hid/disp/display.h ****         bool circle = false;
 305:../../libdaisy/src/hid/disp/display.h **** 
 306:../../libdaisy/src/hid/disp/display.h ****         if(sweep < 0)
 307:../../libdaisy/src/hid/disp/display.h ****         {
 308:../../libdaisy/src/hid/disp/display.h ****             start_angle += sweep;
 309:../../libdaisy/src/hid/disp/display.h ****             sweep = -sweep;
 310:../../libdaisy/src/hid/disp/display.h ****         }
 311:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 164


 312:../../libdaisy/src/hid/disp/display.h ****         start_angle_rad = deg2rad(start_angle);
 313:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 314:../../libdaisy/src/hid/disp/display.h **** 
 315:../../libdaisy/src/hid/disp/display.h ****         start_x = cos(start_angle_rad) * radius;
 316:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 317:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 318:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 319:../../libdaisy/src/hid/disp/display.h **** 
 320:../../libdaisy/src/hid/disp/display.h ****         // Check if start and endpoint are very near
 321:../../libdaisy/src/hid/disp/display.h ****         if((end_x - start_x) * (end_x - start_x)
 322:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 323:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 324:../../libdaisy/src/hid/disp/display.h ****         {
 325:../../libdaisy/src/hid/disp/display.h ****             if(sweep > 180)
 326:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 327:../../libdaisy/src/hid/disp/display.h ****             else
 328:../../libdaisy/src/hid/disp/display.h ****                 // Nothing to draw
 329:../../libdaisy/src/hid/disp/display.h ****                 return;
 330:../../libdaisy/src/hid/disp/display.h ****         }
 331:../../libdaisy/src/hid/disp/display.h **** 
 332:../../libdaisy/src/hid/disp/display.h ****         t_x = -radius;
 333:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 334:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 335:../../libdaisy/src/hid/disp/display.h **** 
 336:../../libdaisy/src/hid/disp/display.h ****         do
 337:../../libdaisy/src/hid/disp/display.h ****         {
 338:../../libdaisy/src/hid/disp/display.h ****             if(!circle)
 339:../../libdaisy/src/hid/disp/display.h ****             {
 340:../../libdaisy/src/hid/disp/display.h ****                 t_sxy  = start_x * t_y;
 341:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 342:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 343:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 344:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 345:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 346:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 347:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 348:../../libdaisy/src/hid/disp/display.h **** 
 349:../../libdaisy/src/hid/disp/display.h ****                 if(sweep > 180)
 350:../../libdaisy/src/hid/disp/display.h ****                 {
 351:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 || t_exy - t_eynx > 0);
 352:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 353:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 354:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 355:../../libdaisy/src/hid/disp/display.h ****                 }
 356:../../libdaisy/src/hid/disp/display.h ****                 else
 357:../../libdaisy/src/hid/disp/display.h ****                 {
 358:../../libdaisy/src/hid/disp/display.h ****                     d1 = (t_sxy - t_synx < 0 && t_exy - t_eynx > 0);
 359:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 360:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 361:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 362:../../libdaisy/src/hid/disp/display.h ****                 }
 363:../../libdaisy/src/hid/disp/display.h ****             }
 364:../../libdaisy/src/hid/disp/display.h **** 
 365:../../libdaisy/src/hid/disp/display.h ****             if(d1)
 366:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 367:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y + t_y, on);
 368:../../libdaisy/src/hid/disp/display.h ****             if(d2)
ARM GAS  /tmp/ccUsbZWH.s 			page 165


 369:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 370:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y + t_y, on);
 371:../../libdaisy/src/hid/disp/display.h ****             if(d3)
 372:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 373:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x + t_x, y - t_y, on);
 374:../../libdaisy/src/hid/disp/display.h ****             if(d4)
 375:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 376:../../libdaisy/src/hid/disp/display.h ****                     ->ChildType::DrawPixel(x - t_x, y - t_y, on);
 377:../../libdaisy/src/hid/disp/display.h **** 
 378:../../libdaisy/src/hid/disp/display.h ****             e2 = err;
 379:../../libdaisy/src/hid/disp/display.h ****             if(e2 <= t_y)
 380:../../libdaisy/src/hid/disp/display.h ****             {
 381:../../libdaisy/src/hid/disp/display.h ****                 t_y++;
 382:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 383:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 384:../../libdaisy/src/hid/disp/display.h ****                 {
 385:../../libdaisy/src/hid/disp/display.h ****                     e2 = 0;
 386:../../libdaisy/src/hid/disp/display.h ****                 }
 387:../../libdaisy/src/hid/disp/display.h ****             }
 388:../../libdaisy/src/hid/disp/display.h ****             if(e2 > t_x)
 389:../../libdaisy/src/hid/disp/display.h ****             {
 390:../../libdaisy/src/hid/disp/display.h ****                 t_x++;
 391:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 392:../../libdaisy/src/hid/disp/display.h ****             }
 393:../../libdaisy/src/hid/disp/display.h ****         } while(t_x <= 0);
 394:../../libdaisy/src/hid/disp/display.h ****     }
 395:../../libdaisy/src/hid/disp/display.h **** 
 396:../../libdaisy/src/hid/disp/display.h ****     char WriteChar(char ch, FontDef font, bool on) override
 4334              		.loc 6 396 10 is_stmt 1 view -0
 4335              		.cfi_startproc
 4336              		@ args = 4, pretend = 0, frame = 16
 4337              		@ frame_needed = 0, uses_anonymous_args = 0
 4338              		.loc 6 396 10 is_stmt 0 view .LVU1269
 4339 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4340              		.cfi_def_cfa_offset 36
 4341              		.cfi_offset 4, -36
 4342              		.cfi_offset 5, -32
 4343              		.cfi_offset 6, -28
 4344              		.cfi_offset 7, -24
 4345              		.cfi_offset 8, -20
 4346              		.cfi_offset 9, -16
 4347              		.cfi_offset 10, -12
 4348              		.cfi_offset 11, -8
 4349              		.cfi_offset 14, -4
 4350 0004 0E46     		mov	r6, r1
 4351 0006 85B0     		sub	sp, sp, #20
 4352              		.cfi_def_cfa_offset 56
 4353              	.LVL261:
 4354              		.loc 6 396 10 view .LVU1270
 4355 0008 0446     		mov	r4, r0
 4356 000a 04A9     		add	r1, sp, #16
 4357              	.LVL262:
 397:../../libdaisy/src/hid/disp/display.h ****     {
 398:../../libdaisy/src/hid/disp/display.h ****         uint32_t i, b, j;
 399:../../libdaisy/src/hid/disp/display.h **** 
 400:../../libdaisy/src/hid/disp/display.h ****         // Check if character is valid
 401:../../libdaisy/src/hid/disp/display.h ****         if(ch < 32 || ch > 126)
ARM GAS  /tmp/ccUsbZWH.s 			page 166


 4358              		.loc 6 401 20 view .LVU1271
 4359 000c A6F12005 		sub	r5, r6, #32
 396:../../libdaisy/src/hid/disp/display.h ****     {
 4360              		.loc 6 396 10 view .LVU1272
 4361 0010 9DF838B0 		ldrb	fp, [sp, #56]	@ zero_extendqisi2
 4362 0014 01E90C00 		stmdb	r1, {r2, r3}
 4363              	.LVL263:
 4364              		.loc 6 401 9 view .LVU1273
 4365 0018 EBB2     		uxtb	r3, r5
 4366 001a 5E2B     		cmp	r3, #94
 4367 001c 04D9     		bls	.L250
 4368              	.LVL264:
 4369              	.L252:
 402:../../libdaisy/src/hid/disp/display.h ****             return 0;
 4370              		.loc 6 402 20 view .LVU1274
 4371 001e 0026     		movs	r6, #0
 4372              	.L251:
 403:../../libdaisy/src/hid/disp/display.h **** 
 404:../../libdaisy/src/hid/disp/display.h ****         // Check remaining space on current line
 405:../../libdaisy/src/hid/disp/display.h ****         if(Width() < (currentX_ + font.FontWidth)
 406:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 407:../../libdaisy/src/hid/disp/display.h ****         {
 408:../../libdaisy/src/hid/disp/display.h ****             // Not enough space on current line
 409:../../libdaisy/src/hid/disp/display.h ****             return 0;
 410:../../libdaisy/src/hid/disp/display.h ****         }
 411:../../libdaisy/src/hid/disp/display.h **** 
 412:../../libdaisy/src/hid/disp/display.h ****         // Use the font to write
 413:../../libdaisy/src/hid/disp/display.h ****         for(i = 0; i < font.FontHeight; i++)
 414:../../libdaisy/src/hid/disp/display.h ****         {
 415:../../libdaisy/src/hid/disp/display.h ****             b = font.data[(ch - 32) * font.FontHeight + i];
 416:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 417:../../libdaisy/src/hid/disp/display.h ****             {
 418:../../libdaisy/src/hid/disp/display.h ****                 if((b << j) & 0x8000)
 419:../../libdaisy/src/hid/disp/display.h ****                 {
 420:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 421:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 422:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), on);
 423:../../libdaisy/src/hid/disp/display.h ****                 }
 424:../../libdaisy/src/hid/disp/display.h ****                 else
 425:../../libdaisy/src/hid/disp/display.h ****                 {
 426:../../libdaisy/src/hid/disp/display.h ****                     ((ChildType*)(this))
 427:../../libdaisy/src/hid/disp/display.h ****                         ->ChildType::DrawPixel(
 428:../../libdaisy/src/hid/disp/display.h ****                             currentX_ + j, (currentY_ + i), !on);
 429:../../libdaisy/src/hid/disp/display.h ****                 }
 430:../../libdaisy/src/hid/disp/display.h ****             }
 431:../../libdaisy/src/hid/disp/display.h ****         }
 432:../../libdaisy/src/hid/disp/display.h **** 
 433:../../libdaisy/src/hid/disp/display.h ****         // The current space is now taken
 434:../../libdaisy/src/hid/disp/display.h ****         SetCursor(currentX_ + font.FontWidth, currentY_);
 435:../../libdaisy/src/hid/disp/display.h **** 
 436:../../libdaisy/src/hid/disp/display.h ****         // Return written char for validation
 437:../../libdaisy/src/hid/disp/display.h ****         return ch;
 438:../../libdaisy/src/hid/disp/display.h ****     }
 4373              		.loc 6 438 5 view .LVU1275
 4374 0020 3046     		mov	r0, r6
 4375 0022 05B0     		add	sp, sp, #20
 4376              		.cfi_remember_state
ARM GAS  /tmp/ccUsbZWH.s 			page 167


 4377              		.cfi_def_cfa_offset 36
 4378              		@ sp needed
 4379 0024 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4380              	.LVL265:
 4381              	.L250:
 4382              		.cfi_restore_state
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 4383              		.loc 6 405 17 view .LVU1276
 4384 0028 0368     		ldr	r3, [r0]
 4385 002a 9DF80870 		ldrb	r7, [sp, #8]	@ zero_extendqisi2
 4386 002e DB68     		ldr	r3, [r3, #12]
 4387 0030 9DF809A0 		ldrb	r10, [sp, #9]	@ zero_extendqisi2
 4388 0034 9847     		blx	r3
 4389              	.LVL266:
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 4390              		.loc 6 405 23 view .LVU1277
 4391 0036 A388     		ldrh	r3, [r4, #4]
 405:../../libdaisy/src/hid/disp/display.h ****            || Height() < (currentY_ + font.FontHeight))
 4392              		.loc 6 405 33 view .LVU1278
 4393 0038 3B44     		add	r3, r3, r7
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4394              		.loc 6 406 12 view .LVU1279
 4395 003a 9842     		cmp	r0, r3
 4396 003c EFDB     		blt	.L252
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4397              		.loc 6 406 21 discriminator 2 view .LVU1280
 4398 003e 2368     		ldr	r3, [r4]
 4399 0040 2046     		mov	r0, r4
 4400 0042 9B68     		ldr	r3, [r3, #8]
 4401 0044 9847     		blx	r3
 4402              	.LVL267:
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4403              		.loc 6 406 27 discriminator 2 view .LVU1281
 4404 0046 E388     		ldrh	r3, [r4, #6]
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4405              		.loc 6 406 37 discriminator 2 view .LVU1282
 4406 0048 5344     		add	r3, r3, r10
 406:../../libdaisy/src/hid/disp/display.h ****         {
 4407              		.loc 6 406 12 discriminator 2 view .LVU1283
 4408 004a 9842     		cmp	r0, r3
 4409 004c E7DB     		blt	.L252
 4410 004e 0AFB05F5 		mul	r5, r10, r5
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 4411              		.loc 6 415 31 view .LVU1284
 4412 0052 4FF00009 		mov	r9, #0
 4413 0056 6D00     		lsls	r5, r5, #1
 4414              	.L258:
 4415              	.LVL268:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 4416              		.loc 6 413 22 is_stmt 1 discriminator 1 view .LVU1285
 4417 0058 CA45     		cmp	r10, r9
 4418 005a 1DD9     		bls	.L253
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 4419              		.loc 6 415 15 is_stmt 0 view .LVU1286
 4420 005c 039B     		ldr	r3, [sp, #12]
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4421              		.loc 6 416 19 view .LVU1287
ARM GAS  /tmp/ccUsbZWH.s 			page 168


 4422 005e 4FF00008 		mov	r8, #0
 415:../../libdaisy/src/hid/disp/display.h ****             for(j = 0; j < font.FontWidth; j++)
 4423              		.loc 6 415 13 view .LVU1288
 4424 0062 5B5B     		ldrh	r3, [r3, r5]
 4425 0064 0193     		str	r3, [sp, #4]
 4426              	.LVL269:
 4427              	.L257:
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4428              		.loc 6 416 26 is_stmt 1 discriminator 1 view .LVU1289
 4429 0066 4745     		cmp	r7, r8
 4430 0068 A188     		ldrh	r1, [r4, #4]
 4431 006a E288     		ldrh	r2, [r4, #6]
 4432 006c 10D9     		bls	.L254
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 4433              		.loc 6 418 23 is_stmt 0 view .LVU1290
 4434 006e 019B     		ldr	r3, [sp, #4]
 4435 0070 4144     		add	r1, r1, r8
 4436 0072 4A44     		add	r2, r2, r9
 4437 0074 04F10800 		add	r0, r4, #8
 4438 0078 03FA08F3 		lsl	r3, r3, r8
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4439              		.loc 6 416 13 view .LVU1291
 4440 007c 08F10108 		add	r8, r8, #1
 4441              	.LVL270:
 418:../../libdaisy/src/hid/disp/display.h ****                 {
 4442              		.loc 6 418 17 view .LVU1292
 4443 0080 1B04     		lsls	r3, r3, #16
 4444              	.LVL271:
 4445              	.LBB1074:
 4446              	.LBI1074:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4447              		.loc 5 41 10 is_stmt 1 view .LVU1293
 4448              	.LBB1075:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4449              		.loc 5 43 9 is_stmt 0 view .LVU1294
 4450 0082 4CBF     		ite	mi
 4451 0084 5B46     		movmi	r3, fp
 4452              	.LVL272:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4453              		.loc 5 43 9 view .LVU1295
 4454              	.LBE1075:
 4455              	.LBE1074:
 4456              	.LBB1076:
 4457              	.LBI1076:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 4458              		.loc 5 41 10 is_stmt 1 view .LVU1296
 4459              	.LBB1077:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4460              		.loc 5 43 9 is_stmt 0 view .LVU1297
 4461 0086 8BF00103 		eorpl	r3, fp, #1
 4462 008a FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 4463              	.LVL273:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 4464              		.loc 5 43 9 view .LVU1298
 4465              	.LBE1077:
 4466              	.LBE1076:
 416:../../libdaisy/src/hid/disp/display.h ****             {
ARM GAS  /tmp/ccUsbZWH.s 			page 169


 4467              		.loc 6 416 13 is_stmt 1 view .LVU1299
 416:../../libdaisy/src/hid/disp/display.h ****             {
 4468              		.loc 6 416 13 is_stmt 0 view .LVU1300
 4469 008e EAE7     		b	.L257
 4470              	.L254:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 4471              		.loc 6 413 9 is_stmt 1 discriminator 2 view .LVU1301
 4472 0090 09F10109 		add	r9, r9, #1
 4473              	.LVL274:
 413:../../libdaisy/src/hid/disp/display.h ****         {
 4474              		.loc 6 413 9 is_stmt 0 discriminator 2 view .LVU1302
 4475 0094 0235     		adds	r5, r5, #2
 4476 0096 DFE7     		b	.L258
 4477              	.LVL275:
 4478              	.L253:
 434:../../libdaisy/src/hid/disp/display.h **** 
 4479              		.loc 6 434 18 view .LVU1303
 4480 0098 A188     		ldrh	r1, [r4, #4]
 4481 009a 2046     		mov	r0, r4
 4482 009c E288     		ldrh	r2, [r4, #6]
 4483 009e 3944     		add	r1, r1, r7
 4484 00a0 89B2     		uxth	r1, r1
 4485 00a2 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4486              	.LVL276:
 437:../../libdaisy/src/hid/disp/display.h ****     }
 4487              		.loc 6 437 16 view .LVU1304
 4488 00a6 BBE7     		b	.L251
 4489              		.cfi_endproc
 4490              	.LFE5165:
 4492              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4493              		.align	1
 4494              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4495              		.syntax unified
 4496              		.thumb
 4497              		.thumb_func
 4498              		.fpu fpv5-d16
 4500              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4501              	.LVL277:
 4502              	.LFB5002:
 439:../../libdaisy/src/hid/disp/display.h **** 
 440:../../libdaisy/src/hid/disp/display.h ****     char WriteString(const char* str, FontDef font, bool on) override
 4503              		.loc 6 440 10 is_stmt 1 view -0
 4504              		.cfi_startproc
 4505              		@ args = 4, pretend = 0, frame = 8
 4506              		@ frame_needed = 0, uses_anonymous_args = 0
 4507              		.loc 6 440 10 is_stmt 0 view .LVU1306
 4508 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4509              		.cfi_def_cfa_offset 20
 4510              		.cfi_offset 4, -20
 4511              		.cfi_offset 5, -16
 4512              		.cfi_offset 6, -12
 4513              		.cfi_offset 7, -8
 4514              		.cfi_offset 14, -4
 4515 0002 85B0     		sub	sp, sp, #20
 4516              		.cfi_def_cfa_offset 40
 4517              		.loc 6 440 10 view .LVU1307
 4518 0004 0646     		mov	r6, r0
ARM GAS  /tmp/ccUsbZWH.s 			page 170


 4519 0006 4C1E     		subs	r4, r1, #1
 4520 0008 02AD     		add	r5, sp, #8
 4521 000a 9DF82870 		ldrb	r7, [sp, #40]	@ zero_extendqisi2
 4522 000e 85E80C00 		stm	r5, {r2, r3}
 4523              	.LVL278:
 4524              	.L262:
 441:../../libdaisy/src/hid/disp/display.h ****     {
 442:../../libdaisy/src/hid/disp/display.h ****         // Write until null-byte
 443:../../libdaisy/src/hid/disp/display.h ****         while(*str)
 4525              		.loc 6 443 9 is_stmt 1 view .LVU1308
 4526 0012 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 4527              	.LVL279:
 4528              		.loc 6 443 9 is_stmt 0 view .LVU1309
 4529 0016 41B1     		cbz	r1, .L261
 444:../../libdaisy/src/hid/disp/display.h ****         {
 445:../../libdaisy/src/hid/disp/display.h ****             if(((ChildType*)(this))->ChildType::WriteChar(*str, font, on)
 446:../../libdaisy/src/hid/disp/display.h ****                != *str)
 4530              		.loc 6 446 16 view .LVU1310
 4531 0018 0097     		str	r7, [sp]
 4532 001a 3046     		mov	r0, r6
 4533 001c 95E80C00 		ldm	r5, {r2, r3}
 4534 0020 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4535              	.LVL280:
 4536 0024 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 445:../../libdaisy/src/hid/disp/display.h ****                != *str)
 4537              		.loc 6 445 13 view .LVU1311
 4538 0026 8842     		cmp	r0, r1
 4539 0028 F3D0     		beq	.L262
 4540              	.L261:
 447:../../libdaisy/src/hid/disp/display.h ****             {
 448:../../libdaisy/src/hid/disp/display.h ****                 // Char could not be written
 449:../../libdaisy/src/hid/disp/display.h ****                 return *str;
 450:../../libdaisy/src/hid/disp/display.h ****             }
 451:../../libdaisy/src/hid/disp/display.h **** 
 452:../../libdaisy/src/hid/disp/display.h ****             // Next char
 453:../../libdaisy/src/hid/disp/display.h ****             str++;
 454:../../libdaisy/src/hid/disp/display.h ****         }
 455:../../libdaisy/src/hid/disp/display.h **** 
 456:../../libdaisy/src/hid/disp/display.h ****         // Everything ok
 457:../../libdaisy/src/hid/disp/display.h ****         return *str;
 458:../../libdaisy/src/hid/disp/display.h ****     }
 4541              		.loc 6 458 5 view .LVU1312
 4542 002a 0846     		mov	r0, r1
 4543 002c 05B0     		add	sp, sp, #20
 4544              		.cfi_def_cfa_offset 20
 4545              		@ sp needed
 4546 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 4547              		.loc 6 458 5 view .LVU1313
 4548              		.cfi_endproc
 4549              	.LFE5002:
 4551              		.section	.rodata._Z12RenderSplashv.str1.1,"aMS",%progbits,1
 4552              	.LC21:
 4553 0000 4E494D42 		.ascii	"NIMBUS\000"
 4553      555300
 4554              	.LC22:
 4555 0007 62617365 		.ascii	"based on Clouds\000"
 4555      64206F6E 
ARM GAS  /tmp/ccUsbZWH.s 			page 171


 4555      20436C6F 
 4555      75647300 
 4556              	.LC23:
 4557 0017 6279204D 		.ascii	"by Mutable\000"
 4557      75746162 
 4557      6C6500
 4558              	.LC24:
 4559 0022 496E7374 		.ascii	"Instruments\000"
 4559      72756D65 
 4559      6E747300 
 4560              		.section	.text._Z12RenderSplashv,"axG",%progbits,_Z12RenderSplashv,comdat
 4561              		.align	1
 4562              		.weak	_Z12RenderSplashv
 4563              		.syntax unified
 4564              		.thumb
 4565              		.thumb_func
 4566              		.fpu fpv5-d16
 4568              	_Z12RenderSplashv:
 4569              	.LFB4538:
 490:Nimbus.cpp    **** {
 4570              		.loc 24 490 1 is_stmt 1 view -0
 4571              		.cfi_startproc
 4572              		@ args = 0, pretend = 0, frame = 0
 4573              		@ frame_needed = 0, uses_anonymous_args = 0
 491:Nimbus.cpp    ****     field.display.SetCursor(17, 2);
 4574              		.loc 24 491 5 view .LVU1315
 490:Nimbus.cpp    **** {
 4575              		.loc 24 490 1 is_stmt 0 view .LVU1316
 4576 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 4577              		.cfi_def_cfa_offset 24
 4578              		.cfi_offset 4, -16
 4579              		.cfi_offset 5, -12
 4580              		.cfi_offset 6, -8
 4581              		.cfi_offset 14, -4
 491:Nimbus.cpp    ****     field.display.SetCursor(17, 2);
 4582              		.loc 24 491 28 view .LVU1317
 4583 0002 1A4C     		ldr	r4, .L268
 4584 0004 0222     		movs	r2, #2
 4585 0006 1121     		movs	r1, #17
 492:Nimbus.cpp    ****     field.display.WriteString("NIMBUS", Font_16x26, true);
 4586              		.loc 24 492 30 view .LVU1318
 4587 0008 0126     		movs	r6, #1
 491:Nimbus.cpp    ****     field.display.SetCursor(17, 2);
 4588              		.loc 24 491 28 view .LVU1319
 4589 000a 2046     		mov	r0, r4
 494:Nimbus.cpp    ****     field.display.WriteString("based on Clouds", SMALL_FONT, true);
 4590              		.loc 24 494 30 view .LVU1320
 4591 000c 184D     		ldr	r5, .L268+4
 491:Nimbus.cpp    ****     field.display.SetCursor(17, 2);
 4592              		.loc 24 491 28 view .LVU1321
 4593 000e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4594              	.LVL281:
 492:Nimbus.cpp    ****     field.display.WriteString("NIMBUS", Font_16x26, true);
 4595              		.loc 24 492 5 is_stmt 1 view .LVU1322
 492:Nimbus.cpp    ****     field.display.WriteString("NIMBUS", Font_16x26, true);
 4596              		.loc 24 492 30 is_stmt 0 view .LVU1323
 4597 0012 184B     		ldr	r3, .L268+8
ARM GAS  /tmp/ccUsbZWH.s 			page 172


 4598 0014 0096     		str	r6, [sp]
 4599 0016 2046     		mov	r0, r4
 4600 0018 1749     		ldr	r1, .L268+12
 4601 001a 0CCB     		ldm	r3, {r2, r3}
 4602 001c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4603              	.LVL282:
 493:Nimbus.cpp    ****     field.display.SetCursor(20, 28);
 4604              		.loc 24 493 5 is_stmt 1 view .LVU1324
 493:Nimbus.cpp    ****     field.display.SetCursor(20, 28);
 4605              		.loc 24 493 28 is_stmt 0 view .LVU1325
 4606 0020 2046     		mov	r0, r4
 4607 0022 1C22     		movs	r2, #28
 4608 0024 1421     		movs	r1, #20
 4609 0026 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4610              	.LVL283:
 494:Nimbus.cpp    ****     field.display.WriteString("based on Clouds", SMALL_FONT, true);
 4611              		.loc 24 494 5 is_stmt 1 view .LVU1326
 494:Nimbus.cpp    ****     field.display.WriteString("based on Clouds", SMALL_FONT, true);
 4612              		.loc 24 494 30 is_stmt 0 view .LVU1327
 4613 002a 1449     		ldr	r1, .L268+16
 4614 002c 2046     		mov	r0, r4
 4615 002e 0096     		str	r6, [sp]
 4616 0030 95E80C00 		ldm	r5, {r2, r3}
 4617 0034 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4618              	.LVL284:
 495:Nimbus.cpp    ****     field.display.SetCursor(32, 38);
 4619              		.loc 24 495 5 is_stmt 1 view .LVU1328
 495:Nimbus.cpp    ****     field.display.SetCursor(32, 38);
 4620              		.loc 24 495 28 is_stmt 0 view .LVU1329
 4621 0038 2046     		mov	r0, r4
 4622 003a 2622     		movs	r2, #38
 4623 003c 2021     		movs	r1, #32
 4624 003e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4625              	.LVL285:
 496:Nimbus.cpp    ****     field.display.WriteString("by Mutable", SMALL_FONT, true);
 4626              		.loc 24 496 5 is_stmt 1 view .LVU1330
 496:Nimbus.cpp    ****     field.display.WriteString("by Mutable", SMALL_FONT, true);
 4627              		.loc 24 496 30 is_stmt 0 view .LVU1331
 4628 0042 0F49     		ldr	r1, .L268+20
 4629 0044 2046     		mov	r0, r4
 4630 0046 0096     		str	r6, [sp]
 4631 0048 95E80C00 		ldm	r5, {r2, r3}
 4632 004c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4633              	.LVL286:
 497:Nimbus.cpp    ****     field.display.SetCursor(29, 48);
 4634              		.loc 24 497 5 is_stmt 1 view .LVU1332
 497:Nimbus.cpp    ****     field.display.SetCursor(29, 48);
 4635              		.loc 24 497 28 is_stmt 0 view .LVU1333
 4636 0050 2046     		mov	r0, r4
 4637 0052 3022     		movs	r2, #48
 4638 0054 1D21     		movs	r1, #29
 4639 0056 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4640              	.LVL287:
 498:Nimbus.cpp    ****     field.display.WriteString("Instruments", SMALL_FONT, true);
 4641              		.loc 24 498 5 is_stmt 1 view .LVU1334
 498:Nimbus.cpp    ****     field.display.WriteString("Instruments", SMALL_FONT, true);
 4642              		.loc 24 498 30 is_stmt 0 view .LVU1335
ARM GAS  /tmp/ccUsbZWH.s 			page 173


 4643 005a 0A49     		ldr	r1, .L268+24
 4644 005c 2046     		mov	r0, r4
 4645 005e 0096     		str	r6, [sp]
 4646 0060 95E80C00 		ldm	r5, {r2, r3}
 4647 0064 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4648              	.LVL288:
 499:Nimbus.cpp    **** }
 4649              		.loc 24 499 1 view .LVU1336
 4650 0068 02B0     		add	sp, sp, #8
 4651              		.cfi_def_cfa_offset 16
 4652              		@ sp needed
 4653 006a 70BD     		pop	{r4, r5, r6, pc}
 4654              	.L269:
 4655              		.align	2
 4656              	.L268:
 4657 006c 3C000000 		.word	field+60
 4658 0070 00000000 		.word	Font_6x8
 4659 0074 00000000 		.word	Font_16x26
 4660 0078 00000000 		.word	.LC21
 4661 007c 07000000 		.word	.LC22
 4662 0080 17000000 		.word	.LC23
 4663 0084 22000000 		.word	.LC24
 4664              		.cfi_endproc
 4665              	.LFE4538:
 4667              		.section	.rodata._Z14RenderCpuUsagev.str1.1,"aMS",%progbits,1
 4668              	.LC25:
 4669 0000 25303264 		.ascii	"%02d%%\000"
 4669      252500
 4670              	.LC26:
 4671 0007 4350553A 		.ascii	"CPU:\000"
 4671      00
 4672              		.section	.text._Z14RenderCpuUsagev,"axG",%progbits,_Z14RenderCpuUsagev,comdat
 4673              		.align	1
 4674              		.weak	_Z14RenderCpuUsagev
 4675              		.syntax unified
 4676              		.thumb
 4677              		.thumb_func
 4678              		.fpu fpv5-d16
 4680              	_Z14RenderCpuUsagev:
 4681              	.LFB4539:
 502:Nimbus.cpp    **** {
 4682              		.loc 24 502 1 is_stmt 1 view -0
 4683              		.cfi_startproc
 4684              		@ args = 0, pretend = 0, frame = 0
 4685              		@ frame_needed = 0, uses_anonymous_args = 0
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4686              		.loc 24 503 5 view .LVU1338
 502:Nimbus.cpp    **** {
 4687              		.loc 24 502 1 is_stmt 0 view .LVU1339
 4688 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4689              		.cfi_def_cfa_offset 20
 4690              		.cfi_offset 4, -20
 4691              		.cfi_offset 5, -16
 4692              		.cfi_offset 6, -12
 4693              		.cfi_offset 7, -8
 4694              		.cfi_offset 14, -4
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
ARM GAS  /tmp/ccUsbZWH.s 			page 174


 4695              		.loc 24 506 67 view .LVU1340
 4696 0002 224C     		ldr	r4, .L271
 509:Nimbus.cpp    ****     field.display.WriteString("CPU:", SMALL_FONT, true);
 4697              		.loc 24 509 30 view .LVU1341
 4698 0004 0127     		movs	r7, #1
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4699              		.loc 24 503 13 view .LVU1342
 4700 0006 224B     		ldr	r3, .L271+4
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 4701              		.loc 24 506 67 view .LVU1343
 4702 0008 2046     		mov	r0, r4
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4703              		.loc 24 503 13 view .LVU1344
 4704 000a 224E     		ldr	r6, .L271+8
 509:Nimbus.cpp    ****     field.display.WriteString("CPU:", SMALL_FONT, true);
 4705              		.loc 24 509 30 view .LVU1345
 4706 000c 224D     		ldr	r5, .L271+12
 502:Nimbus.cpp    **** {
 4707              		.loc 24 502 1 view .LVU1346
 4708 000e 2DED028B 		vpush.64	{d8}
 4709              		.cfi_def_cfa_offset 28
 4710              		.cfi_offset 80, -28
 4711              		.cfi_offset 81, -24
 4712 0012 83B0     		sub	sp, sp, #12
 4713              		.cfi_def_cfa_offset 40
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4714              		.loc 24 503 13 view .LVU1347
 4715 0014 D3ED008A 		vldr.32	s17, [r3]
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 4716              		.loc 24 506 67 view .LVU1348
 4717 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 4718              	.LVL289:
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 4719              		.loc 24 506 26 view .LVU1349
 4720 001c DFED1F7A 		vldr.32	s15, .L271+16
 507:Nimbus.cpp    ****                  / field.seed.AudioBlockSize()));
 4721              		.loc 24 507 45 view .LVU1350
 4722 0020 2046     		mov	r0, r4
 508:Nimbus.cpp    ****     field.display.SetCursor(80, 0);
 4723              		.loc 24 508 28 view .LVU1351
 4724 0022 3C34     		adds	r4, r4, #60
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 4725              		.loc 24 506 26 view .LVU1352
 4726 0024 68EEA77A 		vmul.f32	s15, s17, s15
 506:Nimbus.cpp    ****              int(0.0001f * cpu_usage * (field.seed.AudioSampleRate())
 4727              		.loc 24 506 38 view .LVU1353
 4728 0028 27EE808A 		vmul.f32	s16, s15, s0
 507:Nimbus.cpp    ****                  / field.seed.AudioBlockSize()));
 4729              		.loc 24 507 45 view .LVU1354
 4730 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed14AudioBlockSizeEv
 4731              	.LVL290:
 507:Nimbus.cpp    ****                  / field.seed.AudioBlockSize()));
 4732              		.loc 24 507 18 view .LVU1355
 4733 0030 07EE900A 		vmov	s15, r0	@ int
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4734              		.loc 24 503 13 view .LVU1356
 4735 0034 1A4A     		ldr	r2, .L271+20
ARM GAS  /tmp/ccUsbZWH.s 			page 175


 4736 0036 3046     		mov	r0, r6
 507:Nimbus.cpp    ****                  / field.seed.AudioBlockSize()));
 4737              		.loc 24 507 18 view .LVU1357
 4738 0038 F8EE677A 		vcvt.f32.u32	s15, s15
 4739 003c 88EE277A 		vdiv.f32	s14, s16, s15
 503:Nimbus.cpp    ****     snprintf(cpu_usage_str,
 4740              		.loc 24 503 13 view .LVU1358
 4741 0040 FDEEC77A 		vcvt.s32.f32	s15, s14
 4742 0044 17EE903A 		vmov	r3, s15	@ int
 4743 0048 FCEEE87A 		vcvt.u32.f32	s15, s17
 4744 004c 17EE901A 		vmov	r1, s15	@ int
 4745 0050 FFF7FEFF 		bl	snprintf
 4746              	.LVL291:
 508:Nimbus.cpp    ****     field.display.SetCursor(80, 0);
 4747              		.loc 24 508 5 is_stmt 1 view .LVU1359
 508:Nimbus.cpp    ****     field.display.SetCursor(80, 0);
 4748              		.loc 24 508 28 is_stmt 0 view .LVU1360
 4749 0054 2046     		mov	r0, r4
 4750 0056 0022     		movs	r2, #0
 4751 0058 5021     		movs	r1, #80
 4752 005a FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4753              	.LVL292:
 509:Nimbus.cpp    ****     field.display.WriteString("CPU:", SMALL_FONT, true);
 4754              		.loc 24 509 5 is_stmt 1 view .LVU1361
 509:Nimbus.cpp    ****     field.display.WriteString("CPU:", SMALL_FONT, true);
 4755              		.loc 24 509 30 is_stmt 0 view .LVU1362
 4756 005e 1149     		ldr	r1, .L271+24
 4757 0060 2046     		mov	r0, r4
 4758 0062 0097     		str	r7, [sp]
 4759 0064 95E80C00 		ldm	r5, {r2, r3}
 4760 0068 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4761              	.LVL293:
 510:Nimbus.cpp    ****     field.display.SetCursor(105, 0);
 4762              		.loc 24 510 5 is_stmt 1 view .LVU1363
 510:Nimbus.cpp    ****     field.display.SetCursor(105, 0);
 4763              		.loc 24 510 28 is_stmt 0 view .LVU1364
 4764 006c 2046     		mov	r0, r4
 4765 006e 0022     		movs	r2, #0
 4766 0070 6921     		movs	r1, #105
 4767 0072 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 4768              	.LVL294:
 511:Nimbus.cpp    ****     field.display.WriteString(cpu_usage_str, SMALL_FONT, true);
 4769              		.loc 24 511 5 is_stmt 1 view .LVU1365
 511:Nimbus.cpp    ****     field.display.WriteString(cpu_usage_str, SMALL_FONT, true);
 4770              		.loc 24 511 30 is_stmt 0 view .LVU1366
 4771 0076 3146     		mov	r1, r6
 4772 0078 2046     		mov	r0, r4
 4773 007a 0097     		str	r7, [sp]
 4774 007c 95E80C00 		ldm	r5, {r2, r3}
 4775 0080 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 4776              	.LVL295:
 512:Nimbus.cpp    **** }
 4777              		.loc 24 512 1 view .LVU1367
 4778 0084 03B0     		add	sp, sp, #12
 4779              		.cfi_def_cfa_offset 28
 4780              		@ sp needed
 4781 0086 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /tmp/ccUsbZWH.s 			page 176


 4782              		.cfi_restore 80
 4783              		.cfi_restore 81
 4784              		.cfi_def_cfa_offset 20
 4785 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 4786              	.L272:
 4787              		.align	2
 4788              	.L271:
 4789 008c 00000000 		.word	field
 4790 0090 00000000 		.word	.LANCHOR13
 4791 0094 00000000 		.word	.LANCHOR14
 4792 0098 00000000 		.word	Font_6x8
 4793 009c 17B7D138 		.word	953267991
 4794 00a0 00000000 		.word	.LC25
 4795 00a4 07000000 		.word	.LC26
 4796              		.cfi_endproc
 4797              	.LFE4539:
 4799              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 4800              		.align	1
 4801              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 4802              		.syntax unified
 4803              		.thumb
 4804              		.thumb_func
 4805              		.fpu fpv5-d16
 4807              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 4808              	.LVL296:
 4809              	.LFB5336:
 459:../../libdaisy/src/hid/disp/display.h **** 
 460:../../libdaisy/src/hid/disp/display.h ****     Rectangle WriteStringAligned(const char*    str,
 4810              		.loc 6 460 15 is_stmt 1 view -0
 4811              		.cfi_startproc
 4812              		@ args = 12, pretend = 0, frame = 8
 4813              		@ frame_needed = 0, uses_anonymous_args = 0
 4814              		.loc 6 460 15 is_stmt 0 view .LVU1369
 4815 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4816              		.cfi_def_cfa_offset 28
 4817              		.cfi_offset 4, -28
 4818              		.cfi_offset 5, -24
 4819              		.cfi_offset 6, -20
 4820              		.cfi_offset 7, -16
 4821              		.cfi_offset 8, -12
 4822              		.cfi_offset 9, -8
 4823              		.cfi_offset 14, -4
 4824 0004 9146     		mov	r9, r2
 4825 0006 85B0     		sub	sp, sp, #20
 4826              		.cfi_def_cfa_offset 48
 4827              		.loc 6 460 15 view .LVU1370
 4828 0008 0446     		mov	r4, r0
 4829 000a 9846     		mov	r8, r3
 4830 000c 0846     		mov	r0, r1
 4831              	.LVL297:
 4832              	.LBB1172:
 4833              	.LBI1172:
 461:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 462:../../libdaisy/src/hid/disp/display.h ****                                  Rectangle      boundingBox,
 463:../../libdaisy/src/hid/disp/display.h ****                                  Alignment      alignment,
 464:../../libdaisy/src/hid/disp/display.h ****                                  bool           on) override
 465:../../libdaisy/src/hid/disp/display.h ****     {
ARM GAS  /tmp/ccUsbZWH.s 			page 177


 466:../../libdaisy/src/hid/disp/display.h ****         const auto alignedRect
 467:../../libdaisy/src/hid/disp/display.h ****             = GetTextRect(str, font).AlignedWithin(boundingBox, alignment);
 468:../../libdaisy/src/hid/disp/display.h ****         SetCursor(alignedRect.GetX(), alignedRect.GetY());
 469:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 470:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 471:../../libdaisy/src/hid/disp/display.h ****     }
 472:../../libdaisy/src/hid/disp/display.h **** 
 473:../../libdaisy/src/hid/disp/display.h ****   private:
 474:../../libdaisy/src/hid/disp/display.h ****     uint32_t strlen(const char* string)
 475:../../libdaisy/src/hid/disp/display.h ****     {
 476:../../libdaisy/src/hid/disp/display.h ****         uint32_t result = 0;
 477:../../libdaisy/src/hid/disp/display.h ****         while(*string++ != '\0')
 478:../../libdaisy/src/hid/disp/display.h ****             result++;
 479:../../libdaisy/src/hid/disp/display.h ****         return result;
 480:../../libdaisy/src/hid/disp/display.h ****     }
 481:../../libdaisy/src/hid/disp/display.h **** 
 482:../../libdaisy/src/hid/disp/display.h ****     Rectangle GetTextRect(const char* text, const FontDef& font)
 4834              		.loc 6 482 15 is_stmt 1 view .LVU1371
 4835              		.loc 6 482 15 is_stmt 0 view .LVU1372
 4836              	.LBE1172:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4837              		.loc 6 460 15 view .LVU1373
 4838 000e 4B46     		mov	r3, r9
 4839              	.LVL298:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4840              		.loc 6 460 15 view .LVU1374
 4841 0010 DDE90C52 		ldrd	r5, r2, [sp, #48]
 4842              	.LVL299:
 4843              	.L274:
 460:../../libdaisy/src/hid/disp/display.h ****                                  const FontDef& font,
 4844              		.loc 6 460 15 view .LVU1375
 4845 0014 A3EB090C 		sub	ip, r3, r9
 4846              	.LVL300:
 4847              	.LBB1181:
 4848              	.LBB1173:
 4849              	.LBB1174:
 4850              	.LBB1175:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4851              		.loc 6 477 25 is_stmt 1 view .LVU1376
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4852              		.loc 6 477 25 is_stmt 0 view .LVU1377
 4853 0018 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 4854              	.LVL301:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4855              		.loc 6 477 25 view .LVU1378
 4856 001c 0029     		cmp	r1, #0
 4857 001e F9D1     		bne	.L274
 4858              	.LVL302:
 477:../../libdaisy/src/hid/disp/display.h ****             result++;
 4859              		.loc 6 477 25 view .LVU1379
 4860              	.LBE1175:
 4861              	.LBE1174:
 483:../../libdaisy/src/hid/disp/display.h ****     {
 484:../../libdaisy/src/hid/disp/display.h ****         const auto numChars = strlen(text);
 485:../../libdaisy/src/hid/disp/display.h ****         return {int16_t(numChars * font.FontWidth), font.FontHeight};
 4862              		.loc 6 485 68 view .LVU1380
 4863 0020 98F80060 		ldrb	r6, [r8]	@ zero_extendqisi2
ARM GAS  /tmp/ccUsbZWH.s 			page 178


 4864              		.loc 6 485 58 view .LVU1381
 4865 0024 98F80110 		ldrb	r1, [r8, #1]	@ zero_extendqisi2
 4866              		.loc 6 485 68 view .LVU1382
 4867 0028 16FB0CF6 		smulbb	r6, r6, ip
 4868 002c 0F46     		mov	r7, r1
 4869              	.LVL303:
 4870              	.LBB1176:
 4871              	.LBI1176:
 4872              		.file 28 "../../libdaisy/src/hid/disp/graphics_common.h"
   1:../../libdaisy/src/hid/disp/graphics_common.h **** #pragma once
   2:../../libdaisy/src/hid/disp/graphics_common.h **** 
   3:../../libdaisy/src/hid/disp/graphics_common.h **** #include <cstdint>
   4:../../libdaisy/src/hid/disp/graphics_common.h **** 
   5:../../libdaisy/src/hid/disp/graphics_common.h **** namespace daisy
   6:../../libdaisy/src/hid/disp/graphics_common.h **** {
   7:../../libdaisy/src/hid/disp/graphics_common.h **** /** Justifications */
   8:../../libdaisy/src/hid/disp/graphics_common.h **** enum class Alignment
   9:../../libdaisy/src/hid/disp/graphics_common.h **** {
  10:../../libdaisy/src/hid/disp/graphics_common.h ****     centered,
  11:../../libdaisy/src/hid/disp/graphics_common.h ****     topLeft,
  12:../../libdaisy/src/hid/disp/graphics_common.h ****     topCentered,
  13:../../libdaisy/src/hid/disp/graphics_common.h ****     topRight,
  14:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomLeft,
  15:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomCentered,
  16:../../libdaisy/src/hid/disp/graphics_common.h ****     bottomRight,
  17:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredLeft,
  18:../../libdaisy/src/hid/disp/graphics_common.h ****     centeredRight
  19:../../libdaisy/src/hid/disp/graphics_common.h **** };
  20:../../libdaisy/src/hid/disp/graphics_common.h **** 
  21:../../libdaisy/src/hid/disp/graphics_common.h **** class Rectangle
  22:../../libdaisy/src/hid/disp/graphics_common.h **** {
  23:../../libdaisy/src/hid/disp/graphics_common.h ****   public:
  24:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle() : x_(0), y_(0), width_(0), height_(0) {}
  25:../../libdaisy/src/hid/disp/graphics_common.h **** 
  26:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t width, int16_t height)
 4873              		.loc 28 26 5 is_stmt 1 view .LVU1383
 4874              	.LBB1177:
 4875              	.LBI1177:
  27:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(0), y_(0), width_(max(0, width)), height_(max(0, height))
  28:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  29:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  30:../../libdaisy/src/hid/disp/graphics_common.h **** 
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(int16_t x, int16_t y, int16_t width, int16_t height)
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
  33:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  34:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  35:../../libdaisy/src/hid/disp/graphics_common.h **** 
  36:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle(const Rectangle& other) { *this = other; }
  37:../../libdaisy/src/hid/disp/graphics_common.h **** 
  38:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle& operator=(const Rectangle& other)
  39:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  40:../../libdaisy/src/hid/disp/graphics_common.h ****         x_      = other.x_;
  41:../../libdaisy/src/hid/disp/graphics_common.h ****         y_      = other.y_;
  42:../../libdaisy/src/hid/disp/graphics_common.h ****         width_  = other.width_;
  43:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = other.height_;
  44:../../libdaisy/src/hid/disp/graphics_common.h ****         return *this;
  45:../../libdaisy/src/hid/disp/graphics_common.h ****     }
ARM GAS  /tmp/ccUsbZWH.s 			page 179


  46:../../libdaisy/src/hid/disp/graphics_common.h **** 
  47:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator==(const Rectangle& other) const
  48:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  49:../../libdaisy/src/hid/disp/graphics_common.h ****         return (x_ == other.x_) && (y_ == other.y_) && (width_ == other.width_)
  50:../../libdaisy/src/hid/disp/graphics_common.h ****                && (height_ == other.height_);
  51:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  52:../../libdaisy/src/hid/disp/graphics_common.h ****     bool operator!=(const Rectangle& other) const { return !(*this == other); }
  53:../../libdaisy/src/hid/disp/graphics_common.h **** 
  54:../../libdaisy/src/hid/disp/graphics_common.h ****     bool IsEmpty() const { return (width_ <= 0) || (height_ <= 0); }
  55:../../libdaisy/src/hid/disp/graphics_common.h **** 
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetX() const { return x_; }
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
  58:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
  59:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetHeight() const { return height_; }
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetRight() const { return x_ + width_; }
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
  63:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
  64:../../libdaisy/src/hid/disp/graphics_common.h **** 
  65:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithX(int16_t x) const { return {x, y_, width_, height_}; }
  66:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithY(int16_t y) const { return {x_, y, width_, height_}; }
  67:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidth(int16_t width) const
  68:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  69:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height_};
  70:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  71:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeight(int16_t height) const
  72:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  73:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, height};
  74:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  75:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSize(int16_t width, int16_t height) const
  76:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  77:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width, height};
  78:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  79:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithWidthKeepingCenter(int16_t width) const
  80:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  81:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height_)
  82:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  83:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  84:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithHeightKeepingCenter(int16_t height) const
  85:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  86:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width_, height)
  87:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  88:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  89:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithSizeKeepingCenter(int16_t width, int16_t height) const
  90:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  91:../../libdaisy/src/hid/disp/graphics_common.h ****         return Rectangle(x_, y_, width, height)
  92:../../libdaisy/src/hid/disp/graphics_common.h ****             .WithCenter(GetCenterX(), GetCenterY());
  93:../../libdaisy/src/hid/disp/graphics_common.h ****     }
  94:../../libdaisy/src/hid/disp/graphics_common.h **** 
  95:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t sizeToReduce) const
  96:../../libdaisy/src/hid/disp/graphics_common.h ****     {
  97:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + sizeToReduce),
  98:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + sizeToReduce),
  99:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * sizeToReduce),
 100:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * sizeToReduce)};
 101:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 102:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Reduced(int16_t xToReduce, int16_t yToReduce) const
ARM GAS  /tmp/ccUsbZWH.s 			page 180


 103:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 104:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + xToReduce),
 105:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + yToReduce),
 106:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(width_ - 2 * xToReduce),
 107:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(height_ - 2 * yToReduce)};
 108:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 109:../../libdaisy/src/hid/disp/graphics_common.h **** 
 110:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle Translated(int16_t x, int16_t y) const
 111:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 112:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + x), int16_t(y_ + y), width_, height_};
 113:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 114:../../libdaisy/src/hid/disp/graphics_common.h **** 
 115:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithLeft(int16_t left) const
 116:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 117:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t((x_ - left) + width_);
 118:../../libdaisy/src/hid/disp/graphics_common.h ****         return {left, y_, newWidth, height_};
 119:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 120:../../libdaisy/src/hid/disp/graphics_common.h **** 
 121:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithRight(int16_t right) const
 122:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 123:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newWidth = int16_t(right - x_);
 124:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, newWidth, height_};
 125:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 126:../../libdaisy/src/hid/disp/graphics_common.h **** 
 127:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTop(int16_t top) const
 128:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 129:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t((y_ - top) + height_);
 130:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, top, width_, newHeight};
 131:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 132:../../libdaisy/src/hid/disp/graphics_common.h **** 
 133:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithBottom(int16_t bottom) const
 134:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 135:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto newHeight = int16_t(bottom - y_);
 136:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, newHeight};
 137:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 138:../../libdaisy/src/hid/disp/graphics_common.h **** 
 139:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedLeft(int16_t pxToTrim) const
 140:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 141:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 142:../../libdaisy/src/hid/disp/graphics_common.h ****             int16_t(x_ + pxToTrim), y_, int16_t(width_ - pxToTrim), height_};
 143:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 144:../../libdaisy/src/hid/disp/graphics_common.h **** 
 145:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedRight(int16_t pxToTrim) const
 146:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 147:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, int16_t(width_ - pxToTrim), height_};
 148:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 149:../../libdaisy/src/hid/disp/graphics_common.h **** 
 150:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedTop(int16_t pxToTrim) const
 151:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 152:../../libdaisy/src/hid/disp/graphics_common.h ****         return {
 153:../../libdaisy/src/hid/disp/graphics_common.h ****             x_, int16_t(y_ + pxToTrim), width_, int16_t(height_ - pxToTrim)};
 154:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 155:../../libdaisy/src/hid/disp/graphics_common.h **** 
 156:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithTrimmedBottom(int16_t pxToTrim) const
 157:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 158:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, y_, width_, int16_t(height_ - pxToTrim)};
 159:../../libdaisy/src/hid/disp/graphics_common.h ****     }
ARM GAS  /tmp/ccUsbZWH.s 			page 181


 160:../../libdaisy/src/hid/disp/graphics_common.h **** 
 161:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterX(int16_t centerX) const
 162:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 163:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()), y_, width_, height_};
 164:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 165:../../libdaisy/src/hid/disp/graphics_common.h **** 
 166:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenterY(int16_t centerY) const
 167:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 168:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + centerY - GetCenterY()), width_, height_};
 169:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 170:../../libdaisy/src/hid/disp/graphics_common.h **** 
 171:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle WithCenter(int16_t centerX, int16_t centerY) const
 172:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 173:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + centerX - GetCenterX()),
 174:../../libdaisy/src/hid/disp/graphics_common.h ****                 int16_t(y_ + centerY - GetCenterY()),
 175:../../libdaisy/src/hid/disp/graphics_common.h ****                 width_,
 176:../../libdaisy/src/hid/disp/graphics_common.h ****                 height_};
 177:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 178:../../libdaisy/src/hid/disp/graphics_common.h **** 
 179:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromLeft(int16_t pxToRemove)
 180:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 181:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithWidth(min(pxToRemove, width_));
 182:../../libdaisy/src/hid/disp/graphics_common.h ****         x_ += min(pxToRemove, width_);
 183:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ = max(int16_t(width_ - pxToRemove), 0);
 184:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 185:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 186:../../libdaisy/src/hid/disp/graphics_common.h **** 
 187:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromRight(int16_t pxToRemove)
 188:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 189:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, width_);
 190:../../libdaisy/src/hid/disp/graphics_common.h ****         width_ -= canRemove;
 191:../../libdaisy/src/hid/disp/graphics_common.h ****         return {int16_t(x_ + width_), y_, canRemove, height_};
 192:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 193:../../libdaisy/src/hid/disp/graphics_common.h **** 
 194:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromTop(int16_t pxToRemove)
 195:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 196:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto result = this->WithHeight(min(pxToRemove, height_));
 197:../../libdaisy/src/hid/disp/graphics_common.h ****         y_ += min(pxToRemove, height_);
 198:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ = max(height_ - pxToRemove, 0);
 199:../../libdaisy/src/hid/disp/graphics_common.h ****         return result;
 200:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 201:../../libdaisy/src/hid/disp/graphics_common.h **** 
 202:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle RemoveFromBottom(int16_t pxToRemove)
 203:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 204:../../libdaisy/src/hid/disp/graphics_common.h ****         const auto canRemove = min(pxToRemove, height_);
 205:../../libdaisy/src/hid/disp/graphics_common.h ****         height_ -= canRemove;
 206:../../libdaisy/src/hid/disp/graphics_common.h ****         return {x_, int16_t(y_ + height_), width_, canRemove};
 207:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 208:../../libdaisy/src/hid/disp/graphics_common.h **** 
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     Rectangle AlignedWithin(const Rectangle& other, Alignment alignment) const
 210:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         switch(alignment)
 212:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 213:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topLeft:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 215:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
ARM GAS  /tmp/ccUsbZWH.s 			page 182


 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 218:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 219:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 220:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topCentered:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 223:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 224:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 225:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomLeft:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 228:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 229:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 230:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomRight:
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 233:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 234:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 235:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::bottomCentered:
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 238:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 239:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 240:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredLeft:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 243:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 244:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 245:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centeredRight:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 248:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 249:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 250:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::centered:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 253:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 254:../../libdaisy/src/hid/disp/graphics_common.h ****                         height_};
 255:../../libdaisy/src/hid/disp/graphics_common.h ****             default: return {};
 256:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 257:../../libdaisy/src/hid/disp/graphics_common.h ****     }
 258:../../libdaisy/src/hid/disp/graphics_common.h **** 
 259:../../libdaisy/src/hid/disp/graphics_common.h ****   private:
 260:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t x_, y_, width_, height_;
 261:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t max(int16_t a, int16_t b) { return (a > b) ? a : b; }
 4876              		.loc 28 261 13 view .LVU1384
 4877              		.loc 28 261 13 is_stmt 0 view .LVU1385
 4878              	.LBE1177:
 4879              	.LBE1176:
 4880              	.LBE1173:
 4881              	.LBE1181:
 4882              		.loc 28 261 41 is_stmt 1 view .LVU1386
 4883 002e 36B2     		sxth	r6, r6
 4884 0030 26EAE676 		bic	r6, r6, r6, asr #31
 4885              	.LVL304:
 4886              	.LBB1182:
 4887              	.LBB1180:
ARM GAS  /tmp/ccUsbZWH.s 			page 183


 4888              	.LBB1179:
 4889              	.LBB1178:
 4890              	.LBI1178:
 4891              		.loc 28 261 13 view .LVU1387
 4892              		.loc 28 261 13 is_stmt 0 view .LVU1388
 4893              	.LBE1178:
 4894              	.LBE1179:
 4895              	.LBE1180:
 4896              	.LBE1182:
 4897              		.loc 28 261 41 is_stmt 1 view .LVU1389
 4898              	.LBB1183:
 4899              	.LBI1183:
 209:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4900              		.loc 28 209 15 view .LVU1390
 4901              	.LBB1184:
 211:../../libdaisy/src/hid/disp/graphics_common.h ****         {
 4902              		.loc 28 211 9 view .LVU1391
 4903 0034 082A     		cmp	r2, #8
 4904 0036 76D8     		bhi	.L275
 4905 0038 DFE802F0 		tbb	[pc, r2]
 4906              	.L277:
 4907 003c 6B       		.byte	(.L285-.L277)/2
 4908 003d 05       		.byte	(.L284-.L277)/2
 4909 003e 27       		.byte	(.L283-.L277)/2
 4910 003f 0B       		.byte	(.L282-.L277)/2
 4911 0040 35       		.byte	(.L281-.L277)/2
 4912 0041 45       		.byte	(.L280-.L277)/2
 4913 0042 3C       		.byte	(.L279-.L277)/2
 4914 0043 53       		.byte	(.L278-.L277)/2
 4915 0044 61       		.byte	(.L276-.L277)/2
 4916 0045 00       		.p2align 1
 4917              	.L284:
 213:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_, other.y_, width_, height_};
 4918              		.loc 28 213 13 view .LVU1392
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 4919              		.loc 28 214 17 view .LVU1393
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 4920              		.loc 28 214 31 is_stmt 0 view .LVU1394
 4921 0046 B5F90020 		ldrsh	r2, [r5]
 4922              	.LVL305:
 214:../../libdaisy/src/hid/disp/graphics_common.h ****             case Alignment::topRight:
 4923              		.loc 28 214 41 view .LVU1395
 4924 004a B5F90230 		ldrsh	r3, [r5, #2]
 4925              	.LVL306:
 4926              	.LBB1185:
 4927              	.LBI1185:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 4928              		.loc 28 31 5 is_stmt 1 view .LVU1396
 4929              	.L289:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 4930              		.loc 28 31 5 is_stmt 0 view .LVU1397
 4931              	.LBE1185:
 4932              	.LBB1186:
 4933              	.LBB1187:
 4934              	.LBB1188:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4935              		.loc 28 32 66 view .LVU1398
ARM GAS  /tmp/ccUsbZWH.s 			page 184


 4936 004e 2280     		strh	r2, [r4]	@ movhi
 4937 0050 53E0     		b	.L291
 4938              	.LVL307:
 4939              	.L282:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4940              		.loc 28 32 66 view .LVU1399
 4941              	.LBE1188:
 4942              	.LBE1187:
 4943              	.LBE1186:
 215:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 4944              		.loc 28 215 13 is_stmt 1 view .LVU1400
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 4945              		.loc 28 216 17 view .LVU1401
 4946              	.LBB1192:
 4947              	.LBI1192:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 4948              		.loc 28 60 13 view .LVU1402
 4949              	.LBB1193:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 4950              		.loc 28 60 32 view .LVU1403
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 4951              		.loc 28 60 42 is_stmt 0 view .LVU1404
 4952 0052 2B88     		ldrh	r3, [r5]
 4953 0054 A988     		ldrh	r1, [r5, #4]
 4954              	.LBE1193:
 4955              	.LBE1192:
 217:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 4956              		.loc 28 217 31 view .LVU1405
 4957 0056 B5F90220 		ldrsh	r2, [r5, #2]
 4958              	.LVL308:
 4959              	.LBB1195:
 4960              	.LBI1195:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 4961              		.loc 28 31 5 is_stmt 1 view .LVU1406
 4962              	.LBE1195:
 4963              	.LBB1206:
 4964              	.LBB1194:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 4965              		.loc 28 60 42 is_stmt 0 view .LVU1407
 4966 005a 0B44     		add	r3, r3, r1
 4967              	.LBE1194:
 4968              	.LBE1206:
 4969              	.LBB1207:
 4970              	.LBB1196:
 4971              	.LBB1197:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4972              		.loc 28 32 66 view .LVU1408
 4973 005c 6280     		strh	r2, [r4, #2]	@ movhi
 4974              	.LBE1197:
 4975              	.LBE1196:
 4976              	.LBE1207:
 216:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 4977              		.loc 28 216 50 view .LVU1409
 4978 005e 9B1B     		subs	r3, r3, r6
 4979              	.LBB1208:
 4980              	.LBB1203:
 4981              	.LBB1200:
ARM GAS  /tmp/ccUsbZWH.s 			page 185


  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 4982              		.loc 28 32 66 view .LVU1410
 4983 0060 2380     		strh	r3, [r4]	@ movhi
 4984              	.LVL309:
 4985              	.L288:
 4986              	.LBB1198:
 4987              	.LBI1198:
 4988              		.loc 28 261 13 is_stmt 1 view .LVU1411
 4989              		.loc 28 261 13 is_stmt 0 view .LVU1412
 4990              	.LBE1198:
 4991              	.LBE1200:
 4992              	.LBE1203:
 4993              	.LBE1208:
 4994              	.LBE1184:
 4995              	.LBE1183:
 4996              		.loc 28 261 41 is_stmt 1 view .LVU1413
 4997              	.LBB1290:
 4998              	.LBB1285:
 4999              	.LBB1209:
 5000              	.LBB1204:
 5001              	.LBB1201:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5002              		.loc 28 32 66 is_stmt 0 view .LVU1414
 5003 0062 A680     		strh	r6, [r4, #4]	@ movhi
 5004              	.LVL310:
 5005              	.LBB1199:
 5006              	.LBI1199:
 5007              		.loc 28 261 13 is_stmt 1 view .LVU1415
 5008              		.loc 28 261 13 is_stmt 0 view .LVU1416
 5009              	.LBE1199:
 5010              	.LBE1201:
 5011              	.LBE1204:
 5012              	.LBE1209:
 5013              	.LBE1285:
 5014              	.LBE1290:
 5015              		.loc 28 261 41 is_stmt 1 view .LVU1417
 5016              	.LBB1291:
 5017              	.LBB1286:
 5018              	.LBB1210:
 5019              	.LBB1205:
 5020              	.LBB1202:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5021              		.loc 28 32 66 is_stmt 0 view .LVU1418
 5022 0064 E780     		strh	r7, [r4, #6]	@ movhi
 5023              	.LVL311:
 5024              	.L286:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5025              		.loc 28 32 66 view .LVU1419
 5026              	.LBE1202:
 5027              	.LBE1205:
 5028              	.LBE1210:
 5029              	.LBE1286:
 5030              	.LBE1291:
  56:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetY() const { return y_; }
 5031              		.loc 28 56 28 is_stmt 1 view .LVU1420
  57:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetWidth() const { return width_; }
 5032              		.loc 28 57 28 view .LVU1421
ARM GAS  /tmp/ccUsbZWH.s 			page 186


 468:../../libdaisy/src/hid/disp/display.h ****         ((ChildType*)(this))->ChildType::WriteString(str, font, on);
 5033              		.loc 6 468 9 is_stmt 0 view .LVU1422
 5034 0066 6288     		ldrh	r2, [r4, #2]
 5035 0068 2188     		ldrh	r1, [r4]
 5036 006a 0390     		str	r0, [sp, #12]
 5037 006c FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 5038              	.LVL312:
 469:../../libdaisy/src/hid/disp/display.h ****         return alignedRect;
 5039              		.loc 6 469 9 view .LVU1423
 5040 0070 9DF83830 		ldrb	r3, [sp, #56]	@ zero_extendqisi2
 5041 0074 4946     		mov	r1, r9
 5042 0076 0398     		ldr	r0, [sp, #12]
 5043 0078 0093     		str	r3, [sp]
 5044 007a 98E80C00 		ldm	r8, {r2, r3}
 5045 007e FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5046              	.LVL313:
 471:../../libdaisy/src/hid/disp/display.h **** 
 5047              		.loc 6 471 5 view .LVU1424
 5048 0082 2046     		mov	r0, r4
 5049 0084 05B0     		add	sp, sp, #20
 5050              		.cfi_remember_state
 5051              		.cfi_def_cfa_offset 28
 5052              		@ sp needed
 5053 0086 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5054              	.LVL314:
 5055              	.L283:
 5056              		.cfi_restore_state
 5057              	.LBB1292:
 5058              	.LBB1287:
 220:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5059              		.loc 28 220 13 is_stmt 1 view .LVU1425
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5060              		.loc 28 221 17 view .LVU1426
 5061              	.LBB1211:
 5062              	.LBI1211:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5063              		.loc 28 62 13 view .LVU1427
 5064              	.LBB1212:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5065              		.loc 28 62 34 view .LVU1428
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5066              		.loc 28 62 34 is_stmt 0 view .LVU1429
 5067              	.LBE1212:
 5068              	.LBE1211:
 5069              	.LBB1216:
 5070              	.LBI1216:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5071              		.loc 28 62 13 is_stmt 1 view .LVU1430
 5072              	.LBB1217:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5073              		.loc 28 62 34 view .LVU1431
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5074              		.loc 28 62 34 is_stmt 0 view .LVU1432
 5075              	.LBE1217:
 5076              	.LBE1216:
 5077              	.LBB1218:
 5078              	.LBB1213:
ARM GAS  /tmp/ccUsbZWH.s 			page 187


  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5079              		.loc 28 62 53 view .LVU1433
 5080 008a B5F90430 		ldrsh	r3, [r5, #4]
 5081              	.LBE1213:
 5082              	.LBE1218:
 222:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5083              		.loc 28 222 31 view .LVU1434
 5084 008e B5F90210 		ldrsh	r1, [r5, #2]
 5085              	.LVL315:
 5086              	.LBB1219:
 5087              	.LBI1219:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5088              		.loc 28 31 5 is_stmt 1 view .LVU1435
 5089              	.LBE1219:
 5090              	.LBB1225:
 5091              	.LBB1214:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5092              		.loc 28 62 53 is_stmt 0 view .LVU1436
 5093 0092 03EBD372 		add	r2, r3, r3, lsr #31
 5094              	.LVL316:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5095              		.loc 28 62 44 view .LVU1437
 5096 0096 2B88     		ldrh	r3, [r5]
 5097              	.LBE1214:
 5098              	.LBE1225:
 5099              	.LBB1226:
 5100              	.LBB1220:
 5101              	.LBB1221:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5102              		.loc 28 32 66 view .LVU1438
 5103 0098 6180     		strh	r1, [r4, #2]	@ movhi
 5104              	.LVL317:
 5105              	.LBB1222:
 5106              	.LBI1222:
 5107              		.loc 28 261 13 is_stmt 1 view .LVU1439
 5108              		.loc 28 261 13 is_stmt 0 view .LVU1440
 5109              	.LBE1222:
 5110              	.LBE1221:
 5111              	.LBE1220:
 5112              	.LBE1226:
 5113              	.LBE1287:
 5114              	.LBE1292:
 5115              		.loc 28 261 41 is_stmt 1 view .LVU1441
 5116              	.LBB1293:
 5117              	.LBB1288:
 5118              	.LBB1227:
 5119              	.LBB1215:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5120              		.loc 28 62 44 is_stmt 0 view .LVU1442
 5121 009a 03EB6203 		add	r3, r3, r2, asr #1
 5122              	.LBE1215:
 5123              	.LBE1227:
 221:../../libdaisy/src/hid/disp/graphics_common.h ****                         other.y_,
 5124              		.loc 28 221 58 view .LVU1443
 5125 009e A3EB6603 		sub	r3, r3, r6, asr #1
 5126              	.LBB1228:
 5127              	.LBB1224:
ARM GAS  /tmp/ccUsbZWH.s 			page 188


 5128              	.LBB1223:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5129              		.loc 28 32 66 view .LVU1444
 5130 00a2 2380     		strh	r3, [r4]	@ movhi
 5131              	.LVL318:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5132              		.loc 28 32 66 view .LVU1445
 5133 00a4 DDE7     		b	.L288
 5134              	.LVL319:
 5135              	.L281:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5136              		.loc 28 32 66 view .LVU1446
 5137              	.LBE1223:
 5138              	.LBE1224:
 5139              	.LBE1228:
 225:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 5140              		.loc 28 225 13 is_stmt 1 view .LVU1447
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5141              		.loc 28 226 17 view .LVU1448
 5142              	.LBB1229:
 5143              	.LBB1230:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5144              		.loc 28 61 43 is_stmt 0 view .LVU1449
 5145 00a6 6B88     		ldrh	r3, [r5, #2]
 5146              	.LBE1230:
 5147              	.LBE1229:
 226:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5148              		.loc 28 226 31 view .LVU1450
 5149 00a8 B5F90020 		ldrsh	r2, [r5]
 5150              	.LVL320:
 5151              	.LBB1232:
 5152              	.LBI1229:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5153              		.loc 28 61 13 is_stmt 1 view .LVU1451
 5154              	.LBB1231:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5155              		.loc 28 61 33 view .LVU1452
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5156              		.loc 28 61 43 is_stmt 0 view .LVU1453
 5157 00ac ED88     		ldrh	r5, [r5, #6]
 5158              	.LVL321:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5159              		.loc 28 61 43 view .LVU1454
 5160 00ae 2B44     		add	r3, r3, r5
 5161              	.LBE1231:
 5162              	.LBE1232:
 227:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5163              		.loc 28 227 51 view .LVU1455
 5164 00b0 5B1A     		subs	r3, r3, r1
 5165 00b2 CCE7     		b	.L289
 5166              	.LVL322:
 5167              	.L279:
 230:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5168              		.loc 28 230 13 is_stmt 1 view .LVU1456
 231:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5169              		.loc 28 231 17 view .LVU1457
 5170              	.LBB1233:
ARM GAS  /tmp/ccUsbZWH.s 			page 189


 5171              	.LBI1233:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5172              		.loc 28 60 13 view .LVU1458
 5173              	.LBB1234:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5174              		.loc 28 60 32 view .LVU1459
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5175              		.loc 28 60 32 is_stmt 0 view .LVU1460
 5176              	.LBE1234:
 5177              	.LBE1233:
 5178              	.LBB1235:
 5179              	.LBI1235:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5180              		.loc 28 61 13 is_stmt 1 view .LVU1461
 5181              	.LBB1236:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5182              		.loc 28 61 33 view .LVU1462
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5183              		.loc 28 61 43 is_stmt 0 view .LVU1463
 5184 00b4 6B88     		ldrh	r3, [r5, #2]
 5185 00b6 EA88     		ldrh	r2, [r5, #6]
 5186              	.LVL323:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5187              		.loc 28 61 43 view .LVU1464
 5188 00b8 1344     		add	r3, r3, r2
 5189              	.LBE1236:
 5190              	.LBE1235:
 232:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5191              		.loc 28 232 51 view .LVU1465
 5192 00ba 5B1A     		subs	r3, r3, r1
 5193              	.L292:
 5194              	.LVL324:
 5195              	.LBB1237:
 5196              	.LBI1237:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5197              		.loc 28 31 5 is_stmt 1 view .LVU1466
 5198              	.LBE1237:
 5199              	.LBB1238:
 5200              	.LBB1239:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5201              		.loc 28 60 42 is_stmt 0 view .LVU1467
 5202 00bc 2A88     		ldrh	r2, [r5]
 5203 00be A988     		ldrh	r1, [r5, #4]
 5204 00c0 0A44     		add	r2, r2, r1
 5205              	.LBE1239:
 5206              	.LBE1238:
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5207              		.loc 28 246 50 view .LVU1468
 5208 00c2 921B     		subs	r2, r2, r6
 5209 00c4 C3E7     		b	.L289
 5210              	.LVL325:
 5211              	.L280:
 235:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5212              		.loc 28 235 13 is_stmt 1 view .LVU1469
 236:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(other.GetBottom() - height_),
 5213              		.loc 28 236 17 view .LVU1470
 5214              	.LBB1241:
ARM GAS  /tmp/ccUsbZWH.s 			page 190


 5215              	.LBI1241:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5216              		.loc 28 62 13 view .LVU1471
 5217              	.LBB1242:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5218              		.loc 28 62 34 view .LVU1472
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5219              		.loc 28 62 34 is_stmt 0 view .LVU1473
 5220              	.LBE1242:
 5221              	.LBE1241:
 5222              	.LBB1243:
 5223              	.LBI1243:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5224              		.loc 28 62 13 is_stmt 1 view .LVU1474
 5225              	.LBB1244:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5226              		.loc 28 62 34 view .LVU1475
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5227              		.loc 28 62 34 is_stmt 0 view .LVU1476
 5228              	.LBE1244:
 5229              	.LBE1243:
 5230              	.LBB1245:
 5231              	.LBI1245:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5232              		.loc 28 61 13 is_stmt 1 view .LVU1477
 5233              	.LBB1246:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5234              		.loc 28 61 33 view .LVU1478
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5235              		.loc 28 61 43 is_stmt 0 view .LVU1479
 5236 00c6 6B88     		ldrh	r3, [r5, #2]
 5237 00c8 EA88     		ldrh	r2, [r5, #6]
 5238              	.LVL326:
  61:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterX() const { return x_ + width_ / 2; }
 5239              		.loc 28 61 43 view .LVU1480
 5240 00ca 1344     		add	r3, r3, r2
 5241              	.LBE1246:
 5242              	.LBE1245:
 237:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5243              		.loc 28 237 51 view .LVU1481
 5244 00cc 5B1A     		subs	r3, r3, r1
 5245              	.L290:
 5246              	.LVL327:
 5247              	.LBB1247:
 5248              	.LBI1186:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5249              		.loc 28 31 5 is_stmt 1 view .LVU1482
 5250              	.LBE1247:
 5251              	.LBB1248:
 5252              	.LBB1249:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5253              		.loc 28 62 53 is_stmt 0 view .LVU1483
 5254 00ce B5F90420 		ldrsh	r2, [r5, #4]
 5255 00d2 02EBD271 		add	r1, r2, r2, lsr #31
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5256              		.loc 28 62 44 view .LVU1484
 5257 00d6 2A88     		ldrh	r2, [r5]
ARM GAS  /tmp/ccUsbZWH.s 			page 191


 5258 00d8 02EB6102 		add	r2, r2, r1, asr #1
 5259              	.LBE1249:
 5260              	.LBE1248:
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5261              		.loc 28 251 58 view .LVU1485
 5262 00dc A2EB6602 		sub	r2, r2, r6, asr #1
 5263 00e0 B5E7     		b	.L289
 5264              	.LVL328:
 5265              	.L278:
 240:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {other.x_,
 5266              		.loc 28 240 13 is_stmt 1 view .LVU1486
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5267              		.loc 28 241 17 view .LVU1487
 5268              	.LBB1251:
 5269              	.LBB1252:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5270              		.loc 28 63 54 is_stmt 0 view .LVU1488
 5271 00e2 B5F90630 		ldrsh	r3, [r5, #6]
 5272              	.LBE1252:
 5273              	.LBE1251:
 241:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5274              		.loc 28 241 31 view .LVU1489
 5275 00e6 B5F90010 		ldrsh	r1, [r5]
 5276              	.LVL329:
 5277              	.LBB1256:
 5278              	.LBI1251:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5279              		.loc 28 63 13 is_stmt 1 view .LVU1490
 5280              	.LBB1253:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5281              		.loc 28 63 34 view .LVU1491
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5282              		.loc 28 63 34 is_stmt 0 view .LVU1492
 5283              	.LBE1253:
 5284              	.LBE1256:
 5285              	.LBB1257:
 5286              	.LBI1257:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5287              		.loc 28 63 13 is_stmt 1 view .LVU1493
 5288              	.LBB1258:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5289              		.loc 28 63 34 view .LVU1494
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5290              		.loc 28 63 34 is_stmt 0 view .LVU1495
 5291              	.LBE1258:
 5292              	.LBE1257:
 5293              	.LBB1259:
 5294              	.LBB1254:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5295              		.loc 28 63 54 view .LVU1496
 5296 00ea 03EBD372 		add	r2, r3, r3, lsr #31
 5297              	.LVL330:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5298              		.loc 28 63 44 view .LVU1497
 5299 00ee 6B88     		ldrh	r3, [r5, #2]
 5300              	.LBE1254:
 5301              	.LBE1259:
ARM GAS  /tmp/ccUsbZWH.s 			page 192


 5302              	.LBB1260:
 5303              	.LBB1261:
 5304              	.LBB1262:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5305              		.loc 28 32 66 view .LVU1498
 5306 00f0 2180     		strh	r1, [r4]	@ movhi
 5307              	.LBE1262:
 5308              	.LBE1261:
 5309              	.LBE1260:
 5310              	.LBB1263:
 5311              	.LBB1255:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5312              		.loc 28 63 44 view .LVU1499
 5313 00f2 03EB6203 		add	r3, r3, r2, asr #1
 5314              	.LBE1255:
 5315              	.LBE1263:
 242:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5316              		.loc 28 242 58 view .LVU1500
 5317 00f6 A3EB5703 		sub	r3, r3, r7, lsr #1
 5318              	.LVL331:
 5319              	.LBB1264:
 5320              	.LBI1260:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5321              		.loc 28 31 5 is_stmt 1 view .LVU1501
 5322              	.L291:
  31:../../libdaisy/src/hid/disp/graphics_common.h ****     : x_(x), y_(y), width_(max(0, width)), height_(max(0, height))
 5323              		.loc 28 31 5 is_stmt 0 view .LVU1502
 5324              	.LBE1264:
 5325              	.LBB1265:
 5326              	.LBB1191:
 5327              	.LBB1190:
  32:../../libdaisy/src/hid/disp/graphics_common.h ****     {
 5328              		.loc 28 32 66 view .LVU1503
 5329 00fa 6380     		strh	r3, [r4, #2]	@ movhi
 5330              	.LVL332:
 5331              	.LBB1189:
 5332              	.LBI1189:
 5333              		.loc 28 261 13 is_stmt 1 view .LVU1504
 5334              		.loc 28 261 13 is_stmt 0 view .LVU1505
 5335              	.LBE1189:
 5336              	.LBE1190:
 5337              	.LBE1191:
 5338              	.LBE1265:
 5339              	.LBE1288:
 5340              	.LBE1293:
 5341              		.loc 28 261 41 is_stmt 1 view .LVU1506
 5342              		.loc 28 261 41 is_stmt 0 view .LVU1507
 5343 00fc B1E7     		b	.L288
 5344              	.LVL333:
 5345              	.L276:
 5346              	.LBB1294:
 5347              	.LBB1289:
 245:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(other.GetRight() - width_),
 5348              		.loc 28 245 13 is_stmt 1 view .LVU1508
 246:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5349              		.loc 28 246 17 view .LVU1509
 5350              	.LBB1266:
ARM GAS  /tmp/ccUsbZWH.s 			page 193


 5351              	.LBI1238:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5352              		.loc 28 60 13 view .LVU1510
 5353              	.LBB1240:
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5354              		.loc 28 60 32 view .LVU1511
  60:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetBottom() const { return y_ + height_; }
 5355              		.loc 28 60 32 is_stmt 0 view .LVU1512
 5356              	.LBE1240:
 5357              	.LBE1266:
 5358              	.LBB1267:
 5359              	.LBI1267:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5360              		.loc 28 63 13 is_stmt 1 view .LVU1513
 5361              	.LBB1268:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5362              		.loc 28 63 34 view .LVU1514
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5363              		.loc 28 63 34 is_stmt 0 view .LVU1515
 5364              	.LBE1268:
 5365              	.LBE1267:
 5366              	.LBB1270:
 5367              	.LBI1270:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5368              		.loc 28 63 13 is_stmt 1 view .LVU1516
 5369              	.LBB1271:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5370              		.loc 28 63 34 view .LVU1517
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5371              		.loc 28 63 34 is_stmt 0 view .LVU1518
 5372              	.LBE1271:
 5373              	.LBE1270:
 5374              	.LBB1272:
 5375              	.LBB1269:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5376              		.loc 28 63 54 view .LVU1519
 5377 00fe B5F90630 		ldrsh	r3, [r5, #6]
 5378 0102 03EBD372 		add	r2, r3, r3, lsr #31
 5379              	.LVL334:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5380              		.loc 28 63 44 view .LVU1520
 5381 0106 6B88     		ldrh	r3, [r5, #2]
 5382 0108 03EB6203 		add	r3, r3, r2, asr #1
 5383              	.LBE1269:
 5384              	.LBE1272:
 247:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5385              		.loc 28 247 58 view .LVU1521
 5386 010c A3EB5103 		sub	r3, r3, r1, lsr #1
 5387 0110 D4E7     		b	.L292
 5388              	.LVL335:
 5389              	.L285:
 250:../../libdaisy/src/hid/disp/graphics_common.h ****                 return {int16_t(x_ + (other.GetCenterX() - GetCenterX())),
 5390              		.loc 28 250 13 is_stmt 1 view .LVU1522
 251:../../libdaisy/src/hid/disp/graphics_common.h ****                         int16_t(y_ + (other.GetCenterY() - GetCenterY())),
 5391              		.loc 28 251 17 view .LVU1523
 5392              	.LBB1273:
 5393              	.LBI1248:
ARM GAS  /tmp/ccUsbZWH.s 			page 194


  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5394              		.loc 28 62 13 view .LVU1524
 5395              	.LBB1250:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5396              		.loc 28 62 34 view .LVU1525
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5397              		.loc 28 62 34 is_stmt 0 view .LVU1526
 5398              	.LBE1250:
 5399              	.LBE1273:
 5400              	.LBB1274:
 5401              	.LBI1274:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5402              		.loc 28 62 13 is_stmt 1 view .LVU1527
 5403              	.LBB1275:
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5404              		.loc 28 62 34 view .LVU1528
  62:../../libdaisy/src/hid/disp/graphics_common.h ****     int16_t GetCenterY() const { return y_ + height_ / 2; }
 5405              		.loc 28 62 34 is_stmt 0 view .LVU1529
 5406              	.LBE1275:
 5407              	.LBE1274:
 5408              	.LBB1276:
 5409              	.LBI1276:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5410              		.loc 28 63 13 is_stmt 1 view .LVU1530
 5411              	.LBB1277:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5412              		.loc 28 63 34 view .LVU1531
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5413              		.loc 28 63 34 is_stmt 0 view .LVU1532
 5414              	.LBE1277:
 5415              	.LBE1276:
 5416              	.LBB1279:
 5417              	.LBI1279:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5418              		.loc 28 63 13 is_stmt 1 view .LVU1533
 5419              	.LBB1280:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5420              		.loc 28 63 34 view .LVU1534
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5421              		.loc 28 63 34 is_stmt 0 view .LVU1535
 5422              	.LBE1280:
 5423              	.LBE1279:
 5424              	.LBB1281:
 5425              	.LBB1278:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5426              		.loc 28 63 54 view .LVU1536
 5427 0112 B5F90630 		ldrsh	r3, [r5, #6]
 5428 0116 03EBD372 		add	r2, r3, r3, lsr #31
 5429              	.LVL336:
  63:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5430              		.loc 28 63 44 view .LVU1537
 5431 011a 6B88     		ldrh	r3, [r5, #2]
 5432 011c 03EB6203 		add	r3, r3, r2, asr #1
 5433              	.LBE1278:
 5434              	.LBE1281:
 252:../../libdaisy/src/hid/disp/graphics_common.h ****                         width_,
 5435              		.loc 28 252 58 view .LVU1538
ARM GAS  /tmp/ccUsbZWH.s 			page 195


 5436 0120 A3EB5103 		sub	r3, r3, r1, lsr #1
 5437 0124 D3E7     		b	.L290
 5438              	.LVL337:
 5439              	.L275:
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 5440              		.loc 28 255 13 is_stmt 1 view .LVU1539
 255:../../libdaisy/src/hid/disp/graphics_common.h ****         }
 5441              		.loc 28 255 22 view .LVU1540
 5442              	.LBB1282:
 5443              	.LBI1282:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5444              		.loc 28 24 5 view .LVU1541
 5445              	.LBB1283:
 5446              	.LBB1284:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5447              		.loc 28 24 53 is_stmt 0 view .LVU1542
 5448 0126 0023     		movs	r3, #0
 5449 0128 2380     		strh	r3, [r4]	@ movhi
 5450 012a 6380     		strh	r3, [r4, #2]	@ movhi
 5451 012c A380     		strh	r3, [r4, #4]	@ movhi
 5452 012e E380     		strh	r3, [r4, #6]	@ movhi
 5453              	.LBE1284:
  24:../../libdaisy/src/hid/disp/graphics_common.h **** 
 5454              		.loc 28 24 56 view .LVU1543
 5455 0130 99E7     		b	.L286
 5456              	.LBE1283:
 5457              	.LBE1282:
 5458              	.LBE1289:
 5459              	.LBE1294:
 5460              		.cfi_endproc
 5461              	.LFE5336:
 5463              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 5464              		.align	1
 5465              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 5466              		.syntax unified
 5467              		.thumb
 5468              		.thumb_func
 5469              		.fpu fpv5-d16
 5471              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 5472              	.LVL338:
 5473              	.LFB5006:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5474              		.loc 6 221 10 is_stmt 1 view -0
 5475              		.cfi_startproc
 5476              		@ args = 8, pretend = 0, frame = 16
 5477              		@ frame_needed = 0, uses_anonymous_args = 0
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5478              		.loc 6 221 10 is_stmt 0 view .LVU1545
 5479 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5480              		.cfi_def_cfa_offset 36
 5481              		.cfi_offset 4, -36
 5482              		.cfi_offset 5, -32
 5483              		.cfi_offset 6, -28
 5484              		.cfi_offset 7, -24
 5485              		.cfi_offset 8, -20
 5486              		.cfi_offset 9, -16
 5487              		.cfi_offset 10, -12
ARM GAS  /tmp/ccUsbZWH.s 			page 196


 5488              		.cfi_offset 11, -8
 5489              		.cfi_offset 14, -4
 5490 0004 1F46     		mov	r7, r3
 5491 0006 85B0     		sub	sp, sp, #20
 5492              		.cfi_def_cfa_offset 56
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5493              		.loc 6 221 10 view .LVU1546
 5494 0008 1446     		mov	r4, r2
 5495              	.LBB1295:
 5496              	.LBB1296:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5497              		.loc 5 43 9 view .LVU1547
 5498 000a 0830     		adds	r0, r0, #8
 5499              	.LVL339:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5500              		.loc 5 43 9 view .LVU1548
 5501              	.LBE1296:
 5502              	.LBE1295:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5503              		.loc 6 221 10 view .LVU1549
 5504 000c DDF838A0 		ldr	r10, [sp, #56]
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 5505              		.loc 6 227 52 view .LVU1550
 5506 0010 A7EB0108 		sub	r8, r7, r1
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5507              		.loc 6 221 10 view .LVU1551
 5508 0014 9DF83C30 		ldrb	r3, [sp, #60]	@ zero_extendqisi2
 5509              	.LVL340:
 221:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5510              		.loc 6 221 10 view .LVU1552
 5511 0018 0D46     		mov	r5, r1
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 5512              		.loc 6 228 52 view .LVU1553
 5513 001a AAEB0209 		sub	r9, r10, r2
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 5514              		.loc 6 227 22 view .LVU1554
 5515 001e B8F1000F 		cmp	r8, #0
 5516              	.LBB1302:
 5517              	.LBB1297:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5518              		.loc 5 43 9 view .LVU1555
 5519 0022 0393     		str	r3, [sp, #12]
 5520              	.LBE1297:
 5521              	.LBE1302:
 227:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t deltaY = abs((int_fast16_t)y2 - (int_fast16_t)y1);
 5522              		.loc 6 227 22 view .LVU1556
 5523 0024 B8BF     		it	lt
 5524 0026 C8F10008 		rsblt	r8, r8, #0
 5525              	.LVL341:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 5526              		.loc 6 228 22 view .LVU1557
 5527 002a B9F1000F 		cmp	r9, #0
 5528              	.LBB1303:
 5529              	.LBB1298:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5530              		.loc 5 43 9 view .LVU1558
 5531 002e 0290     		str	r0, [sp, #8]
ARM GAS  /tmp/ccUsbZWH.s 			page 197


 5532              	.LBE1298:
 5533              	.LBE1303:
 228:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signX  = ((x1 < x2) ? 1 : -1);
 5534              		.loc 6 228 22 view .LVU1559
 5535 0030 B8BF     		it	lt
 5536 0032 C9F10009 		rsblt	r9, r9, #0
 5537              	.LVL342:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 5538              		.loc 6 230 22 view .LVU1560
 5539 0036 9245     		cmp	r10, r2
 5540 0038 8CBF     		ite	hi
 5541 003a 0122     		movhi	r2, #1
 5542 003c 4FF0FF32 		movls	r2, #-1
 5543              	.LVL343:
 229:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t signY  = ((y1 < y2) ? 1 : -1);
 5544              		.loc 6 229 22 view .LVU1561
 5545 0040 8F42     		cmp	r7, r1
 5546 0042 8CBF     		ite	hi
 5547 0044 4FF0010B 		movhi	fp, #1
 5548 0048 4FF0FF3B 		movls	fp, #-1
 5549              	.LVL344:
 5550              	.LBB1304:
 5551              	.LBB1299:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5552              		.loc 5 43 9 view .LVU1562
 5553 004c 3946     		mov	r1, r7
 5554              	.LVL345:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5555              		.loc 5 43 9 view .LVU1563
 5556              	.LBE1299:
 5557              	.LBE1304:
 230:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error  = deltaX - deltaY;
 5558              		.loc 6 230 22 view .LVU1564
 5559 004e 0192     		str	r2, [sp, #4]
 5560              	.LVL346:
 5561              	.LBB1305:
 5562              	.LBB1300:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5563              		.loc 5 43 9 view .LVU1565
 5564 0050 5246     		mov	r2, r10
 5565              	.LVL347:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5566              		.loc 5 43 9 view .LVU1566
 5567 0052 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 5568              	.LVL348:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5569              		.loc 5 43 9 view .LVU1567
 5570              	.LBE1300:
 5571              	.LBE1305:
 231:../../libdaisy/src/hid/disp/display.h ****         int_fast16_t error2;
 5572              		.loc 6 231 22 view .LVU1568
 5573 0056 A8EB0906 		sub	r6, r8, r9
 5574              	.LVL349:
 5575              	.LBB1306:
 5576              	.LBI1295:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5577              		.loc 5 41 10 is_stmt 1 view .LVU1569
ARM GAS  /tmp/ccUsbZWH.s 			page 198


 5578              	.LBB1301:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5579              		.loc 5 43 9 is_stmt 0 view .LVU1570
 5580 005a DDE90203 		ldrd	r0, r3, [sp, #8]
 5581              	.LVL350:
 5582              	.L296:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5583              		.loc 5 43 9 view .LVU1571
 5584              	.LBE1301:
 5585              	.LBE1306:
 239:../../libdaisy/src/hid/disp/display.h ****         {
 5586              		.loc 6 239 26 is_stmt 1 view .LVU1572
 5587 005e BD42     		cmp	r5, r7
 5588 0060 01D1     		bne	.L297
 239:../../libdaisy/src/hid/disp/display.h ****         {
 5589              		.loc 6 239 26 is_stmt 0 discriminator 1 view .LVU1573
 5590 0062 5445     		cmp	r4, r10
 5591 0064 16D0     		beq	.L293
 5592              	.L297:
 5593              	.LVL351:
 5594              	.LBB1307:
 5595              	.LBI1307:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 5596              		.loc 5 41 10 is_stmt 1 view .LVU1574
 5597              	.LBB1308:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5598              		.loc 5 43 9 is_stmt 0 view .LVU1575
 5599 0066 2946     		mov	r1, r5
 5600 0068 2246     		mov	r2, r4
 5601 006a 0393     		str	r3, [sp, #12]
 5602 006c 0290     		str	r0, [sp, #8]
 5603 006e FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 5604              	.LVL352:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 5605              		.loc 5 43 9 view .LVU1576
 5606              	.LBE1308:
 5607              	.LBE1307:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 5608              		.loc 6 243 23 view .LVU1577
 5609 0072 C9F10001 		rsb	r1, r9, #0
 242:../../libdaisy/src/hid/disp/display.h ****             if(error2 > -deltaY)
 5610              		.loc 6 242 13 view .LVU1578
 5611 0076 7200     		lsls	r2, r6, #1
 5612              	.LVL353:
 243:../../libdaisy/src/hid/disp/display.h ****             {
 5613              		.loc 6 243 13 view .LVU1579
 5614 0078 B1EB460F 		cmp	r1, r6, lsl #1
 245:../../libdaisy/src/hid/disp/display.h ****                 x1 += signX;
 5615              		.loc 6 245 17 view .LVU1580
 5616 007c BCBF     		itt	lt
 5617 007e A6EB0906 		sublt	r6, r6, r9
 5618              	.LVL354:
 246:../../libdaisy/src/hid/disp/display.h ****             }
 5619              		.loc 6 246 17 view .LVU1581
 5620 0082 5D44     		addlt	r5, r5, fp
 5621              	.LVL355:
 249:../../libdaisy/src/hid/disp/display.h ****             {
ARM GAS  /tmp/ccUsbZWH.s 			page 199


 5622              		.loc 6 249 13 view .LVU1582
 5623 0084 9045     		cmp	r8, r2
 243:../../libdaisy/src/hid/disp/display.h ****             {
 5624              		.loc 6 243 13 view .LVU1583
 5625 0086 DDE90203 		ldrd	r0, r3, [sp, #8]
 249:../../libdaisy/src/hid/disp/display.h ****             {
 5626              		.loc 6 249 13 view .LVU1584
 5627 008a E8DD     		ble	.L296
 252:../../libdaisy/src/hid/disp/display.h ****             }
 5628              		.loc 6 252 17 view .LVU1585
 5629 008c 019A     		ldr	r2, [sp, #4]
 5630              	.LVL356:
 251:../../libdaisy/src/hid/disp/display.h ****                 y1 += signY;
 5631              		.loc 6 251 17 view .LVU1586
 5632 008e 4644     		add	r6, r6, r8
 5633              	.LVL357:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 5634              		.loc 6 252 17 view .LVU1587
 5635 0090 1444     		add	r4, r4, r2
 5636              	.LVL358:
 252:../../libdaisy/src/hid/disp/display.h ****             }
 5637              		.loc 6 252 17 view .LVU1588
 5638 0092 E4E7     		b	.L296
 5639              	.L293:
 255:../../libdaisy/src/hid/disp/display.h **** 
 5640              		.loc 6 255 5 view .LVU1589
 5641 0094 05B0     		add	sp, sp, #20
 5642              		.cfi_def_cfa_offset 36
 5643              		@ sp needed
 5644 0096 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 255:../../libdaisy/src/hid/disp/display.h **** 
 5645              		.loc 6 255 5 view .LVU1590
 5646              		.cfi_endproc
 5647              	.LFE5006:
 5649              		.section	.text._Z11RenderScopev,"axG",%progbits,_Z11RenderScopev,comdat
 5650              		.align	1
 5651              		.weak	_Z11RenderScopev
 5652              		.syntax unified
 5653              		.thumb
 5654              		.thumb_func
 5655              		.fpu fpv5-d16
 5657              	_Z11RenderScopev:
 5658              	.LFB4543:
 655:Nimbus.cpp    **** {
 5659              		.loc 24 655 1 is_stmt 1 view -0
 5660              		.cfi_startproc
 5661              		@ args = 0, pretend = 0, frame = 16
 5662              		@ frame_needed = 0, uses_anonymous_args = 0
 656:Nimbus.cpp    ****     int prev_x = 0;
 5663              		.loc 24 656 5 view .LVU1592
 5664              	.LVL359:
 657:Nimbus.cpp    ****     int prev_y = (DISPLAY_HEIGHT + HEADER_HEIGHT) / 2;
 5665              		.loc 24 657 5 view .LVU1593
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
 5666              		.loc 24 658 5 view .LVU1594
 5667              	.LBB1309:
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
ARM GAS  /tmp/ccUsbZWH.s 			page 200


 5668              		.loc 24 658 25 view .LVU1595
 5669              	.LBE1309:
 655:Nimbus.cpp    **** {
 5670              		.loc 24 655 1 is_stmt 0 view .LVU1596
 5671 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5672              		.cfi_def_cfa_offset 20
 5673              		.cfi_offset 4, -20
 5674              		.cfi_offset 5, -16
 5675              		.cfi_offset 6, -12
 5676              		.cfi_offset 7, -8
 5677              		.cfi_offset 14, -4
 5678              	.LBB1319:
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
 5679              		.loc 24 658 16 view .LVU1597
 5680 0002 0024     		movs	r4, #0
 5681              	.LBE1319:
 655:Nimbus.cpp    **** {
 5682              		.loc 24 655 1 view .LVU1598
 5683 0004 87B0     		sub	sp, sp, #28
 5684              		.cfi_def_cfa_offset 48
 5685 0006 184F     		ldr	r7, .L313
 657:Nimbus.cpp    ****     int prev_y = (DISPLAY_HEIGHT + HEADER_HEIGHT) / 2;
 5686              		.loc 24 657 9 view .LVU1599
 5687 0008 2322     		movs	r2, #35
 656:Nimbus.cpp    ****     int prev_x = 0;
 5688              		.loc 24 656 9 view .LVU1600
 5689 000a 2146     		mov	r1, r4
 5690              	.LVL360:
 5691              	.L307:
 5692              	.LBB1320:
 5693              	.LBB1310:
 660:Nimbus.cpp    ****         int y = std::min(std::max((DISPLAY_HEIGHT + HEADER_HEIGHT) / 2
 5694              		.loc 24 660 9 is_stmt 1 view .LVU1601
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5695              		.loc 24 661 59 is_stmt 0 view .LVU1602
 5696 000c F7EC017A 		vldmia.32	r7!, {s15}
 662:Nimbus.cpp    ****                                   0),
 5697              		.loc 24 662 35 view .LVU1603
 5698 0010 0020     		movs	r0, #0
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5699              		.loc 24 661 61 view .LVU1604
 5700 0012 9FED167A 		vldr.32	s14, .L313+4
 664:Nimbus.cpp    ****         int x = i * DISPLAY_WIDTH / AUDIO_BLOCK_SIZE;
 5701              		.loc 24 664 35 view .LVU1605
 5702 0016 E501     		lsls	r5, r4, #7
 662:Nimbus.cpp    ****                                   0),
 5703              		.loc 24 662 35 view .LVU1606
 5704 0018 0490     		str	r0, [sp, #16]
 5705              	.LVL361:
 5706              	.LBB1311:
 5707              	.LBI1311:
 5708              		.file 29 "/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h"
   1:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
   3:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** //
   5:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  /tmp/ccUsbZWH.s 			page 201


   6:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  11:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  16:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  20:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  25:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /*
  26:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  27:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  30:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  38:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  39:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *
  42:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  50:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  51:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****  */
  55:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  56:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  59:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
ARM GAS  /tmp/ccUsbZWH.s 			page 202


  63:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** # include <type_traits>
  74:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
  75:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  76:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** {
  78:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  80:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
  87:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
  89:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
  91:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
  97:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
  98:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
  99:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<>
 100:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 102:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	static void
 104:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	{
 106:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	}
 108:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     };
 109:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 110:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 111:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 112:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 113:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 114:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 118:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  iterators themselves.
ARM GAS  /tmp/ccUsbZWH.s 			page 203


 120:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 121:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline void
 123:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 125:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 126:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 129:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 131:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 137:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 142:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #else
 151:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** #endif
 153:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 154:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 155:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 156:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 163:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 167:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 170:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 171:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 172:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 173:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 175:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
ARM GAS  /tmp/ccUsbZWH.s 			page 204


 177:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 179:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __first2;
 182:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 183:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 184:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 185:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 186:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 191:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 194:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 195:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 200:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 201:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 205:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 206:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     }
 207:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 
 208:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   /**
 209:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *
 215:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   */
 219:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 5709              		.loc 29 222 5 is_stmt 1 view .LVU1607
 5710              	.LBE1311:
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5711              		.loc 24 661 61 is_stmt 0 view .LVU1608
 5712 001a 67EE877A 		vmul.f32	s15, s15, s14
 664:Nimbus.cpp    ****         int x = i * DISPLAY_WIDTH / AUDIO_BLOCK_SIZE;
 5713              		.loc 24 664 35 view .LVU1609
 5714 001e 6D09     		lsrs	r5, r5, #5
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5715              		.loc 24 661 41 view .LVU1610
 5716 0020 FDEEE77A 		vcvt.s32.f32	s15, s15
ARM GAS  /tmp/ccUsbZWH.s 			page 205


 5717 0024 17EE903A 		vmov	r3, s15	@ int
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5718              		.loc 24 661 39 view .LVU1611
 5719 0028 C3F12303 		rsb	r3, r3, #35
 5720              	.LBB1314:
 5721              	.LBB1312:
 223:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 224:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       // concept requirements
 225:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 227:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       if (__a < __b)
 5722              		.loc 29 227 7 view .LVU1612
 5723 002c 8342     		cmp	r3, r0
 5724              	.LBE1312:
 5725              	.LBE1314:
 661:Nimbus.cpp    ****                                       - int(scope_buffer[i] * MAX_SCOPE_HEIGHT),
 5726              		.loc 24 661 39 view .LVU1613
 5727 002e 0393     		str	r3, [sp, #12]
 663:Nimbus.cpp    ****                          DISPLAY_HEIGHT);
 5728              		.loc 24 663 26 view .LVU1614
 5729 0030 4FF03C00 		mov	r0, #60
 5730              	.LBB1315:
 5731              	.LBB1313:
 228:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 5732              		.loc 29 228 9 view .LVU1615
 5733 0034 B4BF     		ite	lt
 5734 0036 04AB     		addlt	r3, sp, #16
 229:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 5735              		.loc 29 229 14 view .LVU1616
 5736 0038 03AB     		addge	r3, sp, #12
 5737              	.LVL362:
 5738              		.loc 29 229 14 view .LVU1617
 5739              	.LBE1313:
 5740              	.LBE1315:
 663:Nimbus.cpp    ****                          DISPLAY_HEIGHT);
 5741              		.loc 24 663 26 view .LVU1618
 5742 003a 0590     		str	r0, [sp, #20]
 5743              	.LVL363:
 5744              	.LBB1316:
 5745              	.LBI1316:
 198:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****     {
 5746              		.loc 29 198 5 is_stmt 1 view .LVU1619
 5747              	.LBB1317:
 203:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h **** 	return __b;
 5748              		.loc 29 203 7 is_stmt 0 view .LVU1620
 5749 003c 1868     		ldr	r0, [r3]
 5750 003e 3C28     		cmp	r0, #60
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 5751              		.loc 29 204 9 view .LVU1621
 5752 0040 C8BF     		it	gt
 5753 0042 05AB     		addgt	r3, sp, #20
 5754              	.LVL364:
 204:/usr/include/newlib/c++/9.2.1/bits/stl_algobase.h ****       return __a;
 5755              		.loc 29 204 9 view .LVU1622
 5756              	.LBE1317:
 5757              	.LBE1316:
 663:Nimbus.cpp    ****                          DISPLAY_HEIGHT);
ARM GAS  /tmp/ccUsbZWH.s 			page 206


 5758              		.loc 24 663 40 view .LVU1623
 5759 0044 1E68     		ldr	r6, [r3]
 5760              	.LVL365:
 664:Nimbus.cpp    ****         int x = i * DISPLAY_WIDTH / AUDIO_BLOCK_SIZE;
 5761              		.loc 24 664 9 is_stmt 1 view .LVU1624
 665:Nimbus.cpp    ****         if(i != 0)
 5762              		.loc 24 665 9 view .LVU1625
 5763 0046 34B1     		cbz	r4, .L306
 667:Nimbus.cpp    ****             field.display.DrawLine(prev_x, prev_y, x, y, true);
 5764              		.loc 24 667 13 view .LVU1626
 667:Nimbus.cpp    ****             field.display.DrawLine(prev_x, prev_y, x, y, true);
 5765              		.loc 24 667 35 is_stmt 0 view .LVU1627
 5766 0048 0123     		movs	r3, #1
 5767 004a 0948     		ldr	r0, .L313+8
 5768 004c CDE90063 		strd	r6, r3, [sp]
 5769 0050 2B46     		mov	r3, r5
 5770 0052 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5771              	.LVL366:
 5772              	.L306:
 669:Nimbus.cpp    ****         prev_x = x;
 5773              		.loc 24 669 9 is_stmt 1 discriminator 2 view .LVU1628
 670:Nimbus.cpp    ****         prev_y = y;
 5774              		.loc 24 670 9 discriminator 2 view .LVU1629
 670:Nimbus.cpp    ****         prev_y = y;
 5775              		.loc 24 670 9 is_stmt 0 discriminator 2 view .LVU1630
 5776              	.LBE1310:
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
 5777              		.loc 24 658 5 is_stmt 1 discriminator 2 view .LVU1631
 5778 0056 0134     		adds	r4, r4, #1
 5779              	.LVL367:
 658:Nimbus.cpp    ****     for(size_t i = 0; i < AUDIO_BLOCK_SIZE; i++)
 5780              		.loc 24 658 25 discriminator 2 view .LVU1632
 5781 0058 202C     		cmp	r4, #32
 5782 005a 01D1     		bne	.L309
 5783              	.LBE1320:
 672:Nimbus.cpp    **** }
 5784              		.loc 24 672 1 is_stmt 0 view .LVU1633
 5785 005c 07B0     		add	sp, sp, #28
 5786              		.cfi_remember_state
 5787              		.cfi_def_cfa_offset 20
 5788              		@ sp needed
 5789 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 5790              	.LVL368:
 5791              	.L309:
 5792              		.cfi_restore_state
 5793              	.LBB1321:
 5794              	.LBB1318:
 670:Nimbus.cpp    ****         prev_y = y;
 5795              		.loc 24 670 16 view .LVU1634
 5796 0060 3246     		mov	r2, r6
 669:Nimbus.cpp    ****         prev_x = x;
 5797              		.loc 24 669 16 view .LVU1635
 5798 0062 2946     		mov	r1, r5
 5799 0064 D2E7     		b	.L307
 5800              	.L314:
 5801 0066 00BF     		.align	2
 5802              	.L313:
ARM GAS  /tmp/ccUsbZWH.s 			page 207


 5803 0068 00000000 		.word	.LANCHOR12
 5804 006c 00007042 		.word	1114636288
 5805 0070 3C000000 		.word	field+60
 5806              	.LBE1318:
 5807              	.LBE1321:
 5808              		.cfi_endproc
 5809              	.LFE4543:
 5811              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 5812              		.align	1
 5813              		.syntax unified
 5814              		.thumb
 5815              		.thumb_func
 5816              		.fpu fpv5-d16
 5818              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 5819              	.LVL369:
 5820              	.LFB5366:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5821              		.loc 6 257 10 is_stmt 1 view -0
 5822              		.cfi_startproc
 5823              		@ args = 8, pretend = 0, frame = 0
 5824              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5825              		.loc 6 257 10 is_stmt 0 view .LVU1637
 5826 0000 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 5827              		.cfi_def_cfa_offset 40
 5828              		.cfi_offset 4, -28
 5829              		.cfi_offset 5, -24
 5830              		.cfi_offset 6, -20
 5831              		.cfi_offset 7, -16
 5832              		.cfi_offset 8, -12
 5833              		.cfi_offset 9, -8
 5834              		.cfi_offset 14, -4
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 5835              		.loc 6 257 10 view .LVU1638
 5836 0004 9DF82C90 		ldrb	r9, [sp, #44]	@ zero_extendqisi2
 5837 0008 0446     		mov	r4, r0
 5838 000a 0A9F     		ldr	r7, [sp, #40]
 5839 000c 1E46     		mov	r6, r3
 5840 000e 1546     		mov	r5, r2
 5841 0010 8846     		mov	r8, r1
 5842              	.LBB1322:
 276:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y1, x2, y2, on);
 5843              		.loc 6 276 13 view .LVU1639
 5844 0012 CDE90029 		strd	r2, r9, [sp]
 5845 0016 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5846              	.LVL370:
 277:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x2, y2, x1, y2, on);
 5847              		.loc 6 277 13 view .LVU1640
 5848 001a 3346     		mov	r3, r6
 5849 001c 2A46     		mov	r2, r5
 5850 001e 3146     		mov	r1, r6
 5851 0020 2046     		mov	r0, r4
 5852 0022 CDE90079 		strd	r7, r9, [sp]
 5853 0026 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5854              	.LVL371:
 278:../../libdaisy/src/hid/disp/display.h ****             ((ChildType*)(this))->ChildType::DrawLine(x1, y2, x1, y1, on);
 5855              		.loc 6 278 13 view .LVU1641
ARM GAS  /tmp/ccUsbZWH.s 			page 208


 5856 002a 4346     		mov	r3, r8
 5857 002c 3A46     		mov	r2, r7
 5858 002e 3146     		mov	r1, r6
 5859 0030 2046     		mov	r0, r4
 5860 0032 CDE90079 		strd	r7, r9, [sp]
 5861 0036 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5862              	.LVL372:
 279:../../libdaisy/src/hid/disp/display.h ****         }
 5863              		.loc 6 279 13 view .LVU1642
 5864 003a 4346     		mov	r3, r8
 5865 003c 3A46     		mov	r2, r7
 5866 003e 4146     		mov	r1, r8
 5867 0040 2046     		mov	r0, r4
 5868 0042 CDE90059 		strd	r5, r9, [sp]
 5869 0046 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5870              	.LVL373:
 5871              	.LBE1322:
 281:../../libdaisy/src/hid/disp/display.h **** 
 5872              		.loc 6 281 5 view .LVU1643
 5873 004a 03B0     		add	sp, sp, #12
 5874              		.cfi_def_cfa_offset 28
 5875              		@ sp needed
 5876 004c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 281:../../libdaisy/src/hid/disp/display.h **** 
 5877              		.loc 6 281 5 view .LVU1644
 5878              		.cfi_endproc
 5879              	.LFE5366:
 5881              		.section	.text._Z16RenderCVMappings12MAPPABLE_CVS,"axG",%progbits,_Z16RenderCVMappings12MAPPABLE_C
 5882              		.align	1
 5883              		.weak	_Z16RenderCVMappings12MAPPABLE_CVS
 5884              		.syntax unified
 5885              		.thumb
 5886              		.thumb_func
 5887              		.fpu fpv5-d16
 5889              	_Z16RenderCVMappings12MAPPABLE_CVS:
 5890              	.LVL374:
 5891              	.LFB4540:
 515:Nimbus.cpp    **** {
 5892              		.loc 24 515 1 is_stmt 1 view -0
 5893              		.cfi_startproc
 5894              		@ args = 0, pretend = 0, frame = 0
 5895              		@ frame_needed = 0, uses_anonymous_args = 0
 516:Nimbus.cpp    ****     if(cv == NONE)
 5896              		.loc 24 516 5 view .LVU1646
 515:Nimbus.cpp    **** {
 5897              		.loc 24 515 1 is_stmt 0 view .LVU1647
 5898 0000 2DE9F347 		push	{r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 5899              		.cfi_def_cfa_offset 40
 5900              		.cfi_offset 4, -32
 5901              		.cfi_offset 5, -28
 5902              		.cfi_offset 6, -24
 5903              		.cfi_offset 7, -20
 5904              		.cfi_offset 8, -16
 5905              		.cfi_offset 9, -12
 5906              		.cfi_offset 10, -8
 5907              		.cfi_offset 14, -4
 516:Nimbus.cpp    ****     if(cv == NONE)
ARM GAS  /tmp/ccUsbZWH.s 			page 209


 5908              		.loc 24 516 5 view .LVU1648
 5909 0004 0746     		mov	r7, r0
 5910 0006 0028     		cmp	r0, #0
 5911 0008 3DD0     		beq	.L316
 521:Nimbus.cpp    ****     int x_offset = 0;
 5912              		.loc 24 521 5 is_stmt 1 view .LVU1649
 5913              	.LVL375:
 522:Nimbus.cpp    ****     int y_offset = 1;
 5914              		.loc 24 522 5 view .LVU1650
 523:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 5915              		.loc 24 523 5 view .LVU1651
 5916 000a 204C     		ldr	r4, .L324
 5917              	.LBB1332:
 5918              	.LBB1333:
 522:Nimbus.cpp    ****     int y_offset = 1;
 5919              		.loc 24 522 9 is_stmt 0 view .LVU1652
 5920 000c 0126     		movs	r6, #1
 521:Nimbus.cpp    ****     int x_offset = 0;
 5921              		.loc 24 521 9 view .LVU1653
 5922 000e 0025     		movs	r5, #0
 5923              	.LBE1333:
 5924              	.LBE1332:
 523:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 5925              		.loc 24 523 28 view .LVU1654
 5926 0010 0E22     		movs	r2, #14
 5927 0012 04F5EA78 		add	r8, r4, #468
 5928 0016 0221     		movs	r1, #2
 5929 0018 1D48     		ldr	r0, .L324+4
 5930              	.LVL376:
 523:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 5931              		.loc 24 523 28 view .LVU1655
 5932 001a FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 5933              	.LVL377:
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 5934              		.loc 24 524 5 is_stmt 1 view .LVU1656
 5935              	.LBB1346:
 5936              	.LBI1332:
 514:Nimbus.cpp    **** inline void RenderCVMappings(MAPPABLE_CVS cv)
 5937              		.loc 24 514 13 view .LVU1657
 5938              	.LBB1343:
 5939              	.LBB1334:
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 5940              		.loc 24 524 22 view .LVU1658
 5941              	.L319:
 526:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == cv)
 5942              		.loc 24 526 9 view .LVU1659
 526:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == cv)
 5943              		.loc 24 526 9 is_stmt 0 view .LVU1660
 5944              	.LBE1334:
 5945              	.LBE1343:
 5946              	.LBE1346:
 187:Nimbus.cpp    ****     MAPPABLE_CVS GetMappedCV() { return mapped_cv_; }
 5947              		.loc 24 187 34 is_stmt 1 view .LVU1661
 5948              	.LBB1347:
 5949              	.LBB1344:
 5950              	.LBB1341:
 526:Nimbus.cpp    ****         if(param_controls[i].GetMappedCV() == cv)
ARM GAS  /tmp/ccUsbZWH.s 			page 210


 5951              		.loc 24 526 9 is_stmt 0 view .LVU1662
 5952 001e 94F83230 		ldrb	r3, [r4, #50]	@ zero_extendqisi2
 5953 0022 BB42     		cmp	r3, r7
 5954 0024 2CD1     		bne	.L318
 528:Nimbus.cpp    ****             field.display.SetCursor(
 5955              		.loc 24 528 13 is_stmt 1 view .LVU1663
 528:Nimbus.cpp    ****             field.display.SetCursor(
 5956              		.loc 24 528 36 is_stmt 0 view .LVU1664
 5957 0026 C6EBC602 		rsb	r2, r6, r6, lsl #3
 5958 002a 1948     		ldr	r0, .L324+4
 5959 002c 05EBC501 		add	r1, r5, r5, lsl #3
 532:Nimbus.cpp    ****             field.display.WriteString(
 5960              		.loc 24 532 38 view .LVU1665
 5961 0030 4FF00109 		mov	r9, #1
 528:Nimbus.cpp    ****             field.display.SetCursor(
 5962              		.loc 24 528 36 view .LVU1666
 5963 0034 5200     		lsls	r2, r2, #1
 5964 0036 4900     		lsls	r1, r1, #1
 5965 0038 0332     		adds	r2, r2, #3
 5966 003a 0531     		adds	r1, r1, #5
 5967 003c 92B2     		uxth	r2, r2
 5968 003e 89B2     		uxth	r1, r1
 5969 0040 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 5970              	.LVL378:
 532:Nimbus.cpp    ****             field.display.WriteString(
 5971              		.loc 24 532 13 is_stmt 1 view .LVU1667
 532:Nimbus.cpp    ****             field.display.WriteString(
 5972              		.loc 24 532 13 is_stmt 0 view .LVU1668
 5973              	.LBE1341:
 5974              	.LBE1344:
 5975              	.LBE1347:
 178:Nimbus.cpp    ****     const char* GetAbbreviatedName() { return abbreviated_name_; }
 5976              		.loc 24 178 40 is_stmt 1 view .LVU1669
 5977              	.LBB1348:
 5978              	.LBB1345:
 5979              	.LBB1342:
 532:Nimbus.cpp    ****             field.display.WriteString(
 5980              		.loc 24 532 38 is_stmt 0 view .LVU1670
 5981 0044 134B     		ldr	r3, .L324+8
 5982 0046 6168     		ldr	r1, [r4, #4]
 5983 0048 CDF80090 		str	r9, [sp]
 5984 004c 1048     		ldr	r0, .L324+4
 5985 004e 0CCB     		ldm	r3, {r2, r3}
 5986 0050 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 5987              	.LVL379:
 534:Nimbus.cpp    ****             field.display.DrawRect(
 5988              		.loc 24 534 13 is_stmt 1 view .LVU1671
 535:Nimbus.cpp    ****                 LEFT_BORDER_WIDTH + (x_offset * MAPPED_PARAM_CONTAINER_WIDTH),
 5989              		.loc 24 535 47 is_stmt 0 view .LVU1672
 5990 0054 1221     		movs	r1, #18
 536:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT),
 5991              		.loc 24 536 27 view .LVU1673
 5992 0056 0E22     		movs	r2, #14
 5993              	.LBB1335:
 5994              	.LBB1336:
 5995 0058 0D48     		ldr	r0, .L324+4
 5996              	.LBE1336:
ARM GAS  /tmp/ccUsbZWH.s 			page 211


 5997              	.LBE1335:
 535:Nimbus.cpp    ****                 LEFT_BORDER_WIDTH + (x_offset * MAPPED_PARAM_CONTAINER_WIDTH),
 5998              		.loc 24 535 47 view .LVU1674
 5999 005a 6943     		muls	r1, r5, r1
 538:Nimbus.cpp    ****                     + 16,
 6000              		.loc 24 538 21 view .LVU1675
 6001 005c 4D44     		add	r5, r5, r9
 6002              	.LVL380:
 536:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT),
 6003              		.loc 24 536 27 view .LVU1676
 6004 005e 7243     		muls	r2, r6, r2
 6005              	.LVL381:
 538:Nimbus.cpp    ****                     + 16,
 6006              		.loc 24 538 21 view .LVU1677
 6007 0060 01F1120A 		add	r10, r1, #18
 6008              	.LVL382:
 6009              	.LBB1339:
 6010              	.LBI1335:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6011              		.loc 6 257 10 is_stmt 1 view .LVU1678
 6012              	.LBB1337:
 6013 0064 CDF80490 		str	r9, [sp, #4]
 6014              	.LBE1337:
 6015              	.LBE1339:
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 6016              		.loc 24 539 41 is_stmt 0 view .LVU1679
 6017 0068 02F10C03 		add	r3, r2, #12
 6018              	.LVL383:
 6019              	.LBB1340:
 6020              	.LBB1338:
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 6021              		.loc 24 539 41 view .LVU1680
 6022 006c 0231     		adds	r1, r1, #2
 6023              	.LVL384:
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 6024              		.loc 24 539 41 view .LVU1681
 6025 006e 0093     		str	r3, [sp]
 6026 0070 5346     		mov	r3, r10
 6027              	.LVL385:
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 6028              		.loc 24 539 41 view .LVU1682
 6029 0072 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6030              	.LVL386:
 539:Nimbus.cpp    ****                 (y_offset * ROW_HEIGHT) + 12,
 6031              		.loc 24 539 41 view .LVU1683
 6032              	.LBE1338:
 6033              	.LBE1340:
 541:Nimbus.cpp    ****             x_offset++;
 6034              		.loc 24 541 13 is_stmt 1 view .LVU1684
 542:Nimbus.cpp    ****             if(x_offset * MAPPED_PARAM_CONTAINER_WIDTH > DISPLAY_WIDTH / 2)
 6035              		.loc 24 542 13 view .LVU1685
 6036 0076 BAF1400F 		cmp	r10, #64
 544:Nimbus.cpp    ****                 x_offset = 0;
 6037              		.loc 24 544 17 view .LVU1686
 6038              	.LVL387:
 545:Nimbus.cpp    ****                 y_offset++;
 6039              		.loc 24 545 17 view .LVU1687
ARM GAS  /tmp/ccUsbZWH.s 			page 212


 545:Nimbus.cpp    ****                 y_offset++;
 6040              		.loc 24 545 25 is_stmt 0 view .LVU1688
 6041 007a C4BF     		itt	gt
 6042 007c 4E44     		addgt	r6, r6, r9
 6043              	.LVL388:
 544:Nimbus.cpp    ****                 x_offset = 0;
 6044              		.loc 24 544 26 view .LVU1689
 6045 007e 0025     		movgt	r5, #0
 6046              	.LVL389:
 6047              	.L318:
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6048              		.loc 24 524 5 is_stmt 1 view .LVU1690
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6049              		.loc 24 524 22 view .LVU1691
 6050 0080 3434     		adds	r4, r4, #52
 6051              	.LVL390:
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6052              		.loc 24 524 22 is_stmt 0 view .LVU1692
 6053 0082 4445     		cmp	r4, r8
 6054 0084 CBD1     		bne	.L319
 6055              	.LVL391:
 6056              	.L316:
 524:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6057              		.loc 24 524 22 view .LVU1693
 6058              	.LBE1342:
 6059              	.LBE1345:
 6060              	.LBE1348:
 549:Nimbus.cpp    **** }
 6061              		.loc 24 549 1 view .LVU1694
 6062 0086 02B0     		add	sp, sp, #8
 6063              		.cfi_def_cfa_offset 32
 6064              		@ sp needed
 6065 0088 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6066              	.L325:
 6067              		.align	2
 6068              	.L324:
 6069 008c 00000000 		.word	.LANCHOR1
 6070 0090 3C000000 		.word	field+60
 6071 0094 00000000 		.word	Font_6x8
 6072              		.cfi_endproc
 6073              	.LFE4540:
 6075              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 6076              		.align	1
 6077              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 6078              		.syntax unified
 6079              		.thumb
 6080              		.thumb_func
 6081              		.fpu fpv5-d16
 6083              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 6084              	.LVL392:
 6085              	.LFB5003:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6086              		.loc 6 257 10 is_stmt 1 view -0
 6087              		.cfi_startproc
 6088              		@ args = 12, pretend = 0, frame = 0
 6089              		@ frame_needed = 0, uses_anonymous_args = 0
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
ARM GAS  /tmp/ccUsbZWH.s 			page 213


 6090              		.loc 6 257 10 is_stmt 0 view .LVU1696
 6091 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6092              		.cfi_def_cfa_offset 32
 6093              		.cfi_offset 4, -32
 6094              		.cfi_offset 5, -28
 6095              		.cfi_offset 6, -24
 6096              		.cfi_offset 7, -20
 6097              		.cfi_offset 8, -16
 6098              		.cfi_offset 9, -12
 6099              		.cfi_offset 10, -8
 6100              		.cfi_offset 14, -4
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6101              		.loc 6 257 10 view .LVU1697
 6102 0004 9DF82850 		ldrb	r5, [sp, #40]	@ zero_extendqisi2
 6103 0008 0646     		mov	r6, r0
 6104 000a 0C46     		mov	r4, r1
 6105 000c 1746     		mov	r7, r2
 6106 000e 9846     		mov	r8, r3
 6107 0010 DDF820A0 		ldr	r10, [sp, #32]
 6108 0014 9DF82490 		ldrb	r9, [sp, #36]	@ zero_extendqisi2
 6109              	.LBB1349:
 264:../../libdaisy/src/hid/disp/display.h ****         {
 6110              		.loc 6 264 9 view .LVU1698
 6111 0018 7DB1     		cbz	r5, .L327
 6112              	.LVL393:
 6113              	.L331:
 6114              	.LBB1350:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6115              		.loc 6 266 40 is_stmt 1 discriminator 1 view .LVU1699
 6116 001a 4445     		cmp	r4, r8
 6117 001c 13D8     		bhi	.L326
 6118              	.LBB1351:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6119              		.loc 6 268 34 is_stmt 0 view .LVU1700
 6120 001e 3D46     		mov	r5, r7
 6121              	.L330:
 6122              	.LVL394:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6123              		.loc 6 268 44 is_stmt 1 discriminator 3 view .LVU1701
 6124 0020 5545     		cmp	r5, r10
 6125 0022 08D8     		bhi	.L329
 6126              	.LVL395:
 6127              	.LBB1352:
 6128              	.LBI1352:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 6129              		.loc 5 41 10 view .LVU1702
 6130              	.LBB1353:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 6131              		.loc 5 43 9 is_stmt 0 view .LVU1703
 6132 0024 2A46     		mov	r2, r5
 6133 0026 4B46     		mov	r3, r9
 6134 0028 2146     		mov	r1, r4
 6135 002a 06F10800 		add	r0, r6, #8
 6136              	.LBE1353:
 6137              	.LBE1352:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6138              		.loc 6 268 17 view .LVU1704
ARM GAS  /tmp/ccUsbZWH.s 			page 214


 6139 002e 0135     		adds	r5, r5, #1
 6140              	.LVL396:
 6141              	.LBB1355:
 6142              	.LBB1354:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 6143              		.loc 5 43 9 view .LVU1705
 6144 0030 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 6145              	.LVL397:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 6146              		.loc 5 43 9 view .LVU1706
 6147              	.LBE1354:
 6148              	.LBE1355:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6149              		.loc 6 268 17 is_stmt 1 view .LVU1707
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6150              		.loc 6 268 17 is_stmt 0 view .LVU1708
 6151 0034 F4E7     		b	.L330
 6152              	.L329:
 268:../../libdaisy/src/hid/disp/display.h ****                 {
 6153              		.loc 6 268 17 view .LVU1709
 6154              	.LBE1351:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6155              		.loc 6 266 13 is_stmt 1 discriminator 2 view .LVU1710
 6156 0036 0134     		adds	r4, r4, #1
 6157              	.LVL398:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6158              		.loc 6 266 13 is_stmt 0 discriminator 2 view .LVU1711
 6159 0038 EFE7     		b	.L331
 6160              	.LVL399:
 6161              	.L327:
 266:../../libdaisy/src/hid/disp/display.h ****             {
 6162              		.loc 6 266 13 discriminator 2 view .LVU1712
 6163              	.LBE1350:
 6164              	.LBE1349:
 6165 003a CDF82490 		str	r9, [sp, #36]
 6166              	.LVL400:
 281:../../libdaisy/src/hid/disp/display.h **** 
 6167              		.loc 6 281 5 view .LVU1713
 6168 003e BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 6169              		.cfi_remember_state
 6170              		.cfi_restore 14
 6171              		.cfi_restore 10
 6172              		.cfi_restore 9
 6173              		.cfi_restore 8
 6174              		.cfi_restore 7
 6175              		.cfi_restore 6
 6176              		.cfi_restore 5
 6177              		.cfi_restore 4
 6178              		.cfi_def_cfa_offset 0
 6179              	.LVL401:
 281:../../libdaisy/src/hid/disp/display.h **** 
 6180              		.loc 6 281 5 view .LVU1714
 6181 0042 FFF7FEBF 		b	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x
 6182              	.LVL402:
 6183              	.L326:
 6184              		.cfi_restore_state
 281:../../libdaisy/src/hid/disp/display.h **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 215


 6185              		.loc 6 281 5 view .LVU1715
 6186 0046 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 281:../../libdaisy/src/hid/disp/display.h **** 
 6187              		.loc 6 281 5 view .LVU1716
 6188              		.cfi_endproc
 6189              	.LFE5003:
 6191              		.section	.text._Z12RenderParams12DISPLAY_PAGE,"ax",%progbits
 6192              		.align	1
 6193              		.global	_Z12RenderParams12DISPLAY_PAGE
 6194              		.syntax unified
 6195              		.thumb
 6196              		.thumb_func
 6197              		.fpu fpv5-d16
 6199              	_Z12RenderParams12DISPLAY_PAGE:
 6200              	.LVL403:
 6201              	.LFB4537:
 450:Nimbus.cpp    **** {
 6202              		.loc 24 450 1 is_stmt 1 view -0
 6203              		.cfi_startproc
 6204              		@ args = 0, pretend = 0, frame = 8
 6205              		@ frame_needed = 0, uses_anonymous_args = 0
 451:Nimbus.cpp    ****     int offset = 0;
 6206              		.loc 24 451 5 view .LVU1718
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6207              		.loc 24 452 5 view .LVU1719
 6208              	.LBB1356:
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6209              		.loc 24 452 22 view .LVU1720
 6210              	.LBE1356:
 450:Nimbus.cpp    **** {
 6211              		.loc 24 450 1 is_stmt 0 view .LVU1721
 6212 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6213              		.cfi_def_cfa_offset 28
 6214              		.cfi_offset 4, -28
 6215              		.cfi_offset 5, -24
 6216              		.cfi_offset 6, -20
 6217              		.cfi_offset 7, -16
 6218              		.cfi_offset 8, -12
 6219              		.cfi_offset 9, -8
 6220              		.cfi_offset 14, -4
 6221              	.LBB1363:
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6222              		.loc 24 452 13 view .LVU1722
 6223 0004 0026     		movs	r6, #0
 6224              	.LBE1363:
 450:Nimbus.cpp    **** {
 6225              		.loc 24 450 1 view .LVU1723
 6226 0006 87B0     		sub	sp, sp, #28
 6227              		.cfi_def_cfa_offset 56
 450:Nimbus.cpp    **** {
 6228              		.loc 24 450 1 view .LVU1724
 6229 0008 0746     		mov	r7, r0
 6230 000a 204C     		ldr	r4, .L336
 451:Nimbus.cpp    ****     int offset = 0;
 6231              		.loc 24 451 9 view .LVU1725
 6232 000c 3546     		mov	r5, r6
 6233              	.LVL404:
ARM GAS  /tmp/ccUsbZWH.s 			page 216


 6234              	.L334:
 6235              	.LBB1364:
 454:Nimbus.cpp    ****         if(param_controls[i].GetDisplayPage() == page)
 6236              		.loc 24 454 9 is_stmt 1 view .LVU1726
 454:Nimbus.cpp    ****         if(param_controls[i].GetDisplayPage() == page)
 6237              		.loc 24 454 9 is_stmt 0 view .LVU1727
 6238              	.LBE1364:
 185:Nimbus.cpp    ****     DISPLAY_PAGE GetDisplayPage() { return display_page_; }
 6239              		.loc 24 185 37 is_stmt 1 view .LVU1728
 6240              	.LBB1365:
 454:Nimbus.cpp    ****         if(param_controls[i].GetDisplayPage() == page)
 6241              		.loc 24 454 9 is_stmt 0 view .LVU1729
 6242 000e 94F83130 		ldrb	r3, [r4, #49]	@ zero_extendqisi2
 6243 0012 BB42     		cmp	r3, r7
 6244 0014 32D1     		bne	.L333
 456:Nimbus.cpp    ****             field.display.SetCursor(LEFT_BORDER_WIDTH,
 6245              		.loc 24 456 13 is_stmt 1 view .LVU1730
 457:Nimbus.cpp    ****                                     (offset + 1) * ROW_HEIGHT);
 6246              		.loc 24 457 45 is_stmt 0 view .LVU1731
 6247 0016 0135     		adds	r5, r5, #1
 6248              	.LVL405:
 456:Nimbus.cpp    ****             field.display.SetCursor(LEFT_BORDER_WIDTH,
 6249              		.loc 24 456 36 view .LVU1732
 6250 0018 0221     		movs	r1, #2
 6251 001a 1D48     		ldr	r0, .L336+4
 458:Nimbus.cpp    ****             field.display.WriteString(
 6252              		.loc 24 458 38 view .LVU1733
 6253 001c 4FF00108 		mov	r8, #1
 456:Nimbus.cpp    ****             field.display.SetCursor(LEFT_BORDER_WIDTH,
 6254              		.loc 24 456 36 view .LVU1734
 6255 0020 C5EBC502 		rsb	r2, r5, r5, lsl #3
 6256 0024 5200     		lsls	r2, r2, #1
 6257 0026 92B2     		uxth	r2, r2
 6258 0028 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6259              	.LVL406:
 458:Nimbus.cpp    ****             field.display.WriteString(
 6260              		.loc 24 458 13 is_stmt 1 view .LVU1735
 458:Nimbus.cpp    ****             field.display.WriteString(
 6261              		.loc 24 458 13 is_stmt 0 view .LVU1736
 6262              	.LBE1365:
 177:Nimbus.cpp    ****     const char* GetDisplayName() { return display_name_; }
 6263              		.loc 24 177 36 is_stmt 1 view .LVU1737
 6264              	.LBB1366:
 458:Nimbus.cpp    ****             field.display.WriteString(
 6265              		.loc 24 458 38 is_stmt 0 view .LVU1738
 6266 002c 194B     		ldr	r3, .L336+8
 6267 002e 2168     		ldr	r1, [r4]
 6268 0030 CDF80080 		str	r8, [sp]
 6269 0034 1648     		ldr	r0, .L336+4
 6270 0036 0CCB     		ldm	r3, {r2, r3}
 6271 0038 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6272              	.LVL407:
 461:Nimbus.cpp    ****             field.display.DrawRect(PARAM_NAME_COL_WIDTH,
 6273              		.loc 24 461 13 is_stmt 1 view .LVU1739
 462:Nimbus.cpp    ****                                    (offset + 1) * ROW_HEIGHT,
 6274              		.loc 24 462 49 is_stmt 0 view .LVU1740
 6275 003c 0E22     		movs	r2, #14
ARM GAS  /tmp/ccUsbZWH.s 			page 217


 6276              	.LBB1357:
 6277              	.LBB1358:
 6278 003e 7D23     		movs	r3, #125
 6279 0040 4621     		movs	r1, #70
 6280              	.LBE1358:
 6281              	.LBE1357:
 6282 0042 6A43     		muls	r2, r5, r2
 6283              	.LBB1361:
 6284              	.LBB1359:
 6285 0044 1248     		ldr	r0, .L336+4
 6286              	.LBE1359:
 6287              	.LBE1361:
 465:Nimbus.cpp    ****                                        + VALUE_BAR_HEIGHT,
 6288              		.loc 24 465 40 view .LVU1741
 6289 0046 02F10A09 		add	r9, r2, #10
 6290              	.LVL408:
 6291              	.LBB1362:
 6292              	.LBI1357:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6293              		.loc 6 257 10 is_stmt 1 view .LVU1742
 6294              	.LBB1360:
 6295 004a 0592     		str	r2, [sp, #20]
 6296 004c CDE90098 		strd	r9, r8, [sp]
 6297 0050 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6298              	.LVL409:
 257:../../libdaisy/src/hid/disp/display.h ****                   uint_fast8_t y1,
 6299              		.loc 6 257 10 is_stmt 0 view .LVU1743
 6300              	.LBE1360:
 6301              	.LBE1362:
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6302              		.loc 24 468 13 is_stmt 1 view .LVU1744
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6303              		.loc 24 468 13 is_stmt 0 view .LVU1745
 6304              	.LBE1366:
 180:Nimbus.cpp    ****     float       GetValue() { return param_val_; }
 6305              		.loc 24 180 30 is_stmt 1 view .LVU1746
 6306              	.LBB1367:
 472:Nimbus.cpp    ****                     + int(param_controls[i].GetValue() * VALUE_BAR_WIDTH),
 6307              		.loc 24 472 56 is_stmt 0 view .LVU1747
 6308 0054 D4ED077A 		vldr.32	s15, [r4, #28]
 6309 0058 9FED0F7A 		vldr.32	s14, .L336+12
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6310              		.loc 24 468 35 view .LVU1748
 6311 005c 4621     		movs	r1, #70
 6312 005e 059A     		ldr	r2, [sp, #20]
 472:Nimbus.cpp    ****                     + int(param_controls[i].GetValue() * VALUE_BAR_WIDTH),
 6313              		.loc 24 472 56 view .LVU1749
 6314 0060 67EE877A 		vmul.f32	s15, s15, s14
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6315              		.loc 24 468 35 view .LVU1750
 6316 0064 0A48     		ldr	r0, .L336+4
 6317 0066 CDF80090 		str	r9, [sp]
 472:Nimbus.cpp    ****                     + int(param_controls[i].GetValue() * VALUE_BAR_WIDTH),
 6318              		.loc 24 472 23 view .LVU1751
 6319 006a FDEEE77A 		vcvt.s32.f32	s15, s15
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6320              		.loc 24 468 35 view .LVU1752
ARM GAS  /tmp/ccUsbZWH.s 			page 218


 6321 006e CDE90188 		strd	r8, r8, [sp, #4]
 472:Nimbus.cpp    ****                     + int(param_controls[i].GetValue() * VALUE_BAR_WIDTH),
 6322              		.loc 24 472 23 view .LVU1753
 6323 0072 17EE903A 		vmov	r3, s15	@ int
 468:Nimbus.cpp    ****             field.display.DrawRect(
 6324              		.loc 24 468 35 view .LVU1754
 6325 0076 4633     		adds	r3, r3, #70
 6326 0078 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6327              	.LVL410:
 484:Nimbus.cpp    ****             ++offset;
 6328              		.loc 24 484 13 is_stmt 1 view .LVU1755
 6329              	.L333:
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6330              		.loc 24 452 5 discriminator 2 view .LVU1756
 6331 007c 0136     		adds	r6, r6, #1
 6332              	.LVL411:
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6333              		.loc 24 452 22 discriminator 2 view .LVU1757
 6334 007e 3434     		adds	r4, r4, #52
 6335              	.LVL412:
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6336              		.loc 24 452 22 is_stmt 0 discriminator 2 view .LVU1758
 6337 0080 092E     		cmp	r6, #9
 6338 0082 C4D1     		bne	.L334
 452:Nimbus.cpp    ****     for(int i = 0; i < NUM_PARAMS; i++)
 6339              		.loc 24 452 22 discriminator 2 view .LVU1759
 6340              	.LBE1367:
 487:Nimbus.cpp    **** }
 6341              		.loc 24 487 1 view .LVU1760
 6342 0084 07B0     		add	sp, sp, #28
 6343              		.cfi_def_cfa_offset 28
 6344              		@ sp needed
 6345 0086 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6346              	.LVL413:
 6347              	.L337:
 487:Nimbus.cpp    **** }
 6348              		.loc 24 487 1 view .LVU1761
 6349 008a 00BF     		.align	2
 6350              	.L336:
 6351 008c 00000000 		.word	.LANCHOR1
 6352 0090 3C000000 		.word	field+60
 6353 0094 00000000 		.word	Font_7x10
 6354 0098 00005C42 		.word	1113325568
 6355              		.cfi_endproc
 6356              	.LFE4537:
 6358              		.section	.rodata._Z14RenderButtons1v.str1.1,"aMS",%progbits,1
 6359              	.LC27:
 6360 0000 5175616C 		.ascii	"Quality:\000"
 6360      6974793A 
 6360      00
 6361              	.LC28:
 6362 0009 31362062 		.ascii	"16 bit Stereo\000"
 6362      69742053 
 6362      74657265 
 6362      6F00
 6363              	.LC29:
 6364 0017 31362062 		.ascii	"16 bit Mono\000"
ARM GAS  /tmp/ccUsbZWH.s 			page 219


 6364      6974204D 
 6364      6F6E6F00 
 6365              	.LC30:
 6366 0023 38626974 		.ascii	"8bit u-law Stereo\000"
 6366      20752D6C 
 6366      61772053 
 6366      74657265 
 6366      6F00
 6367              	.LC31:
 6368 0035 38626974 		.ascii	"8bit u-law Mono\000"
 6368      20752D6C 
 6368      6177204D 
 6368      6F6E6F00 
 6369              	.LC32:
 6370 0045 506C6179 		.ascii	"Playback Mode:\000"
 6370      6261636B 
 6370      204D6F64 
 6370      653A00
 6371              	.LC33:
 6372 0054 4772616E 		.ascii	"Granular\000"
 6372      756C6172 
 6372      00
 6373              	.LC34:
 6374 005d 53686966 		.ascii	"Shift and Stretch\000"
 6374      7420616E 
 6374      64205374 
 6374      72657463 
 6374      6800
 6375              	.LC35:
 6376 006f 4C6F6F70 		.ascii	"Looping Delay\000"
 6376      696E6720 
 6376      44656C61 
 6376      7900
 6377              	.LC36:
 6378 007d 53706563 		.ascii	"Spectral Processor\000"
 6378      7472616C 
 6378      2050726F 
 6378      63657373 
 6378      6F7200
 6379              		.section	.text._Z14RenderButtons1v,"axG",%progbits,_Z14RenderButtons1v,comdat
 6380              		.align	1
 6381              		.weak	_Z14RenderButtons1v
 6382              		.syntax unified
 6383              		.thumb
 6384              		.thumb_func
 6385              		.fpu fpv5-d16
 6387              	_Z14RenderButtons1v:
 6388              	.LFB4541:
 552:Nimbus.cpp    **** {
 6389              		.loc 24 552 1 is_stmt 1 view -0
 6390              		.cfi_startproc
 6391              		@ args = 0, pretend = 0, frame = 0
 6392              		@ frame_needed = 0, uses_anonymous_args = 0
 553:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 6393              		.loc 24 553 5 view .LVU1763
 552:Nimbus.cpp    **** {
 6394              		.loc 24 552 1 is_stmt 0 view .LVU1764
ARM GAS  /tmp/ccUsbZWH.s 			page 220


 6395 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 6396              		.cfi_def_cfa_offset 32
 6397              		.cfi_offset 4, -16
 6398              		.cfi_offset 5, -12
 6399              		.cfi_offset 6, -8
 6400              		.cfi_offset 14, -4
 554:Nimbus.cpp    ****     field.display.WriteString("Quality:", SMALL_FONT, true);
 6401              		.loc 24 554 30 view .LVU1765
 6402 0002 0125     		movs	r5, #1
 6403 0004 3E4C     		ldr	r4, .L355
 553:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 6404              		.loc 24 553 28 view .LVU1766
 6405 0006 0E22     		movs	r2, #14
 6406 0008 0221     		movs	r1, #2
 6407 000a 3E48     		ldr	r0, .L355+4
 6408 000c FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6409              	.LVL414:
 554:Nimbus.cpp    ****     field.display.WriteString("Quality:", SMALL_FONT, true);
 6410              		.loc 24 554 5 is_stmt 1 view .LVU1767
 554:Nimbus.cpp    ****     field.display.WriteString("Quality:", SMALL_FONT, true);
 6411              		.loc 24 554 30 is_stmt 0 view .LVU1768
 6412 0010 3D49     		ldr	r1, .L355+8
 6413 0012 0095     		str	r5, [sp]
 6414 0014 3B48     		ldr	r0, .L355+4
 6415 0016 94E80C00 		ldm	r4, {r2, r3}
 6416 001a FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6417              	.LVL415:
 555:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_2 * SKINNY_ROW_HEIGHT);
 6418              		.loc 24 555 5 is_stmt 1 view .LVU1769
 555:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_2 * SKINNY_ROW_HEIGHT);
 6419              		.loc 24 555 28 is_stmt 0 view .LVU1770
 6420 001e 1A22     		movs	r2, #26
 6421 0020 0221     		movs	r1, #2
 6422 0022 3848     		ldr	r0, .L355+4
 6423 0024 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6424              	.LVL416:
 556:Nimbus.cpp    ****     field.display.DrawRect(0,
 6425              		.loc 24 556 5 is_stmt 1 view .LVU1771
 556:Nimbus.cpp    ****     field.display.DrawRect(0,
 6426              		.loc 24 556 27 is_stmt 0 view .LVU1772
 6427 0028 2423     		movs	r3, #36
 6428 002a 1722     		movs	r2, #23
 6429 002c 0021     		movs	r1, #0
 6430 002e 3548     		ldr	r0, .L355+4
 6431 0030 0093     		str	r3, [sp]
 6432 0032 8023     		movs	r3, #128
 6433 0034 CDE90155 		strd	r5, r5, [sp, #4]
 6434              	.LBB1370:
 6435              	.LBB1371:
 133:dsp/granular_processor.h ****             quality |= 1;
 6436              		.loc 12 133 12 view .LVU1773
 6437 0038 344D     		ldr	r5, .L355+12
 6438              	.LBE1371:
 6439              	.LBE1370:
 556:Nimbus.cpp    ****     field.display.DrawRect(0,
 6440              		.loc 24 556 27 view .LVU1774
 6441 003a FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
ARM GAS  /tmp/ccUsbZWH.s 			page 221


 6442              	.LVL417:
 563:Nimbus.cpp    ****     auto currentPlaybackQuality = processor.quality();
 6443              		.loc 24 563 5 is_stmt 1 view .LVU1775
 6444              	.LBB1374:
 6445              	.LBI1370:
 130:dsp/granular_processor.h ****     {
 6446              		.loc 12 130 20 view .LVU1776
 6447              	.LBB1372:
 132:dsp/granular_processor.h ****         if(num_channels_ == 1)
 6448              		.loc 12 132 9 view .LVU1777
 133:dsp/granular_processor.h ****             quality |= 1;
 6449              		.loc 12 133 9 view .LVU1778
 133:dsp/granular_processor.h ****             quality |= 1;
 6450              		.loc 12 133 12 is_stmt 0 view .LVU1779
 6451 003e 6968     		ldr	r1, [r5, #4]
 135:dsp/granular_processor.h ****             quality |= 2;
 6452              		.loc 12 135 9 view .LVU1780
 6453 0040 2A7A     		ldrb	r2, [r5, #8]	@ zero_extendqisi2
 133:dsp/granular_processor.h ****             quality |= 1;
 6454              		.loc 12 133 9 view .LVU1781
 6455 0042 4B1E     		subs	r3, r1, #1
 6456 0044 5842     		rsbs	r0, r3, #0
 6457 0046 5841     		adcs	r0, r0, r3
 6458              	.LVL418:
 135:dsp/granular_processor.h ****             quality |= 2;
 6459              		.loc 12 135 9 is_stmt 1 view .LVU1782
 6460 0048 002A     		cmp	r2, #0
 6461 004a 52D0     		beq	.L339
 136:dsp/granular_processor.h ****         return quality;
 6462              		.loc 12 136 13 view .LVU1783
 6463              	.LVL419:
 6464              		.loc 12 137 9 view .LVU1784
 6465              		.loc 12 137 9 is_stmt 0 view .LVU1785
 6466              	.LBE1372:
 6467              	.LBE1374:
 565:Nimbus.cpp    ****     switch(currentPlaybackQuality)
 6468              		.loc 24 565 5 is_stmt 1 view .LVU1786
 6469 004c 0023     		movs	r3, #0
 6470 004e 0028     		cmp	r0, #0
 6471 0050 2ED0     		beq	.L340
 576:Nimbus.cpp    ****         case PLAYBACK_QUAL_8B_MO:
 6472              		.loc 24 576 9 view .LVU1787
 577:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Mono", SMALL_FONT, false);
 6473              		.loc 24 577 13 view .LVU1788
 577:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Mono", SMALL_FONT, false);
 6474              		.loc 24 577 38 is_stmt 0 view .LVU1789
 6475 0052 0093     		str	r3, [sp]
 6476 0054 2E49     		ldr	r1, .L355+16
 6477 0056 94E80C00 		ldm	r4, {r2, r3}
 6478 005a 03E0     		b	.L353
 6479              	.LVL420:
 6480              	.L352:
 567:Nimbus.cpp    ****         case PLAYBACK_QUAL_16B_ST:
 6481              		.loc 24 567 9 is_stmt 1 view .LVU1790
 568:Nimbus.cpp    ****             field.display.WriteString("16 bit Stereo", SMALL_FONT, false);
 6482              		.loc 24 568 13 view .LVU1791
 568:Nimbus.cpp    ****             field.display.WriteString("16 bit Stereo", SMALL_FONT, false);
ARM GAS  /tmp/ccUsbZWH.s 			page 222


 6483              		.loc 24 568 38 is_stmt 0 view .LVU1792
 6484 005c 0092     		str	r2, [sp]
 6485 005e 2D49     		ldr	r1, .L355+20
 6486 0060 94E80C00 		ldm	r4, {r2, r3}
 6487              	.LVL421:
 6488              	.L353:
 583:Nimbus.cpp    ****     field.display.WriteString("Playback Mode:", SMALL_FONT, true);
 6489              		.loc 24 583 30 view .LVU1793
 6490 0064 0126     		movs	r6, #1
 577:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Mono", SMALL_FONT, false);
 6491              		.loc 24 577 38 view .LVU1794
 6492 0066 2748     		ldr	r0, .L355+4
 6493 0068 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6494              	.LVL422:
 578:Nimbus.cpp    ****             break;
 6495              		.loc 24 578 13 is_stmt 1 view .LVU1795
 582:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 6496              		.loc 24 582 5 view .LVU1796
 582:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 6497              		.loc 24 582 28 is_stmt 0 view .LVU1797
 6498 006c 2722     		movs	r2, #39
 6499 006e 0221     		movs	r1, #2
 6500 0070 2448     		ldr	r0, .L355+4
 6501 0072 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6502              	.LVL423:
 583:Nimbus.cpp    ****     field.display.WriteString("Playback Mode:", SMALL_FONT, true);
 6503              		.loc 24 583 5 is_stmt 1 view .LVU1798
 583:Nimbus.cpp    ****     field.display.WriteString("Playback Mode:", SMALL_FONT, true);
 6504              		.loc 24 583 30 is_stmt 0 view .LVU1799
 6505 0076 2849     		ldr	r1, .L355+24
 6506 0078 2248     		ldr	r0, .L355+4
 6507 007a 0096     		str	r6, [sp]
 6508 007c 94E80C00 		ldm	r4, {r2, r3}
 6509 0080 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6510              	.LVL424:
 584:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 6511              		.loc 24 584 5 is_stmt 1 view .LVU1800
 584:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 6512              		.loc 24 584 28 is_stmt 0 view .LVU1801
 6513 0084 3422     		movs	r2, #52
 6514 0086 0221     		movs	r1, #2
 6515 0088 1E48     		ldr	r0, .L355+4
 6516 008a FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6517              	.LVL425:
 585:Nimbus.cpp    ****     field.display.DrawRect(0,
 6518              		.loc 24 585 5 is_stmt 1 view .LVU1802
 585:Nimbus.cpp    ****     field.display.DrawRect(0,
 6519              		.loc 24 585 27 is_stmt 0 view .LVU1803
 6520 008e 3E23     		movs	r3, #62
 6521 0090 3122     		movs	r2, #49
 6522 0092 0021     		movs	r1, #0
 6523 0094 0093     		str	r3, [sp]
 6524 0096 8023     		movs	r3, #128
 6525 0098 1A48     		ldr	r0, .L355+4
 6526 009a CDE90166 		strd	r6, r6, [sp, #4]
 6527 009e FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6528              	.LVL426:
ARM GAS  /tmp/ccUsbZWH.s 			page 223


 592:Nimbus.cpp    ****     auto currentPlaybackMode = processor.playback_mode();
 6529              		.loc 24 592 5 is_stmt 1 view .LVU1804
 110:dsp/granular_processor.h **** 
 6530              		.loc 12 110 49 view .LVU1805
 593:Nimbus.cpp    ****     switch(currentPlaybackMode)
 6531              		.loc 24 593 5 view .LVU1806
 6532 00a2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6533 00a4 032B     		cmp	r3, #3
 6534 00a6 10D8     		bhi	.L338
 6535 00a8 DFE803F0 		tbb	[pc, r3]
 6536              	.L345:
 6537 00ac 07       		.byte	(.L348-.L345)/2
 6538 00ad 11       		.byte	(.L347-.L345)/2
 6539 00ae 17       		.byte	(.L346-.L345)/2
 6540 00af 1D       		.byte	(.L344-.L345)/2
 6541              	.LVL427:
 6542              		.p2align 1
 6543              	.L340:
 573:Nimbus.cpp    ****         case PLAYBACK_QUAL_8B_ST:
 6544              		.loc 24 573 9 view .LVU1807
 574:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Stereo", SMALL_FONT, false);
 6545              		.loc 24 574 13 view .LVU1808
 574:Nimbus.cpp    ****             field.display.WriteString("8bit u-law Stereo", SMALL_FONT, false);
 6546              		.loc 24 574 38 is_stmt 0 view .LVU1809
 6547 00b0 0093     		str	r3, [sp]
 6548 00b2 1A49     		ldr	r1, .L355+28
 6549 00b4 94E80C00 		ldm	r4, {r2, r3}
 6550 00b8 D4E7     		b	.L353
 6551              	.LVL428:
 6552              	.L348:
 595:Nimbus.cpp    ****         case PLAYBACK_MODE_GRANULAR:
 6553              		.loc 24 595 9 is_stmt 1 view .LVU1810
 596:Nimbus.cpp    ****             field.display.WriteString("Granular", SMALL_FONT, false);
 6554              		.loc 24 596 13 view .LVU1811
 596:Nimbus.cpp    ****             field.display.WriteString("Granular", SMALL_FONT, false);
 6555              		.loc 24 596 38 is_stmt 0 view .LVU1812
 6556 00ba 0023     		movs	r3, #0
 6557 00bc 1849     		ldr	r1, .L355+32
 6558 00be 0093     		str	r3, [sp]
 6559 00c0 94E80C00 		ldm	r4, {r2, r3}
 6560              	.L354:
 605:Nimbus.cpp    ****             field.display.WriteString("Spectral Processor", SMALL_FONT, false);
 6561              		.loc 24 605 38 view .LVU1813
 6562 00c4 0F48     		ldr	r0, .L355+4
 6563 00c6 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6564              	.LVL429:
 606:Nimbus.cpp    ****             break;
 6565              		.loc 24 606 13 is_stmt 1 view .LVU1814
 6566              	.L338:
 609:Nimbus.cpp    **** }
 6567              		.loc 24 609 1 is_stmt 0 view .LVU1815
 6568 00ca 04B0     		add	sp, sp, #16
 6569              		.cfi_remember_state
 6570              		.cfi_def_cfa_offset 16
 6571              		@ sp needed
 6572 00cc 70BD     		pop	{r4, r5, r6, pc}
 6573              	.LVL430:
ARM GAS  /tmp/ccUsbZWH.s 			page 224


 6574              	.L347:
 6575              		.cfi_restore_state
 598:Nimbus.cpp    ****         case PLAYBACK_MODE_STRETCH:
 6576              		.loc 24 598 9 is_stmt 1 view .LVU1816
 599:Nimbus.cpp    ****             field.display.WriteString("Shift and Stretch", SMALL_FONT, false);
 6577              		.loc 24 599 13 view .LVU1817
 599:Nimbus.cpp    ****             field.display.WriteString("Shift and Stretch", SMALL_FONT, false);
 6578              		.loc 24 599 38 is_stmt 0 view .LVU1818
 6579 00ce 0023     		movs	r3, #0
 6580 00d0 1449     		ldr	r1, .L355+36
 6581 00d2 0093     		str	r3, [sp]
 6582 00d4 94E80C00 		ldm	r4, {r2, r3}
 6583 00d8 F4E7     		b	.L354
 6584              	.L346:
 601:Nimbus.cpp    ****         case PLAYBACK_MODE_LOOPING_DELAY:
 6585              		.loc 24 601 9 is_stmt 1 view .LVU1819
 602:Nimbus.cpp    ****             field.display.WriteString("Looping Delay", SMALL_FONT, false);
 6586              		.loc 24 602 13 view .LVU1820
 602:Nimbus.cpp    ****             field.display.WriteString("Looping Delay", SMALL_FONT, false);
 6587              		.loc 24 602 38 is_stmt 0 view .LVU1821
 6588 00da 0023     		movs	r3, #0
 6589 00dc 1249     		ldr	r1, .L355+40
 6590 00de 0093     		str	r3, [sp]
 6591 00e0 94E80C00 		ldm	r4, {r2, r3}
 6592 00e4 EEE7     		b	.L354
 6593              	.L344:
 604:Nimbus.cpp    ****         case PLAYBACK_MODE_SPECTRAL:
 6594              		.loc 24 604 9 is_stmt 1 view .LVU1822
 605:Nimbus.cpp    ****             field.display.WriteString("Spectral Processor", SMALL_FONT, false);
 6595              		.loc 24 605 13 view .LVU1823
 605:Nimbus.cpp    ****             field.display.WriteString("Spectral Processor", SMALL_FONT, false);
 6596              		.loc 24 605 38 is_stmt 0 view .LVU1824
 6597 00e6 0023     		movs	r3, #0
 6598 00e8 1049     		ldr	r1, .L355+44
 6599 00ea 0093     		str	r3, [sp]
 6600 00ec 94E80C00 		ldm	r4, {r2, r3}
 6601 00f0 E8E7     		b	.L354
 6602              	.LVL431:
 6603              	.L339:
 6604              	.LBB1375:
 6605              	.LBB1373:
 6606              		.loc 12 137 9 is_stmt 1 view .LVU1825
 6607              		.loc 12 137 9 is_stmt 0 view .LVU1826
 6608              	.LBE1373:
 6609              	.LBE1375:
 565:Nimbus.cpp    ****     switch(currentPlaybackQuality)
 6610              		.loc 24 565 5 is_stmt 1 view .LVU1827
 565:Nimbus.cpp    ****     switch(currentPlaybackQuality)
 6611              		.loc 24 565 5 is_stmt 0 view .LVU1828
 6612 00f2 0129     		cmp	r1, #1
 6613 00f4 B2D1     		bne	.L352
 6614              	.LVL432:
 570:Nimbus.cpp    ****         case PLAYBACK_QUAL_16B_MO:
 6615              		.loc 24 570 9 is_stmt 1 view .LVU1829
 571:Nimbus.cpp    ****             field.display.WriteString("16 bit Mono", SMALL_FONT, false);
 6616              		.loc 24 571 13 view .LVU1830
 571:Nimbus.cpp    ****             field.display.WriteString("16 bit Mono", SMALL_FONT, false);
ARM GAS  /tmp/ccUsbZWH.s 			page 225


 6617              		.loc 24 571 38 is_stmt 0 view .LVU1831
 6618 00f6 0092     		str	r2, [sp]
 6619 00f8 0D49     		ldr	r1, .L355+48
 6620 00fa 94E80C00 		ldm	r4, {r2, r3}
 6621 00fe B1E7     		b	.L353
 6622              	.L356:
 6623              		.align	2
 6624              	.L355:
 6625 0100 00000000 		.word	Font_6x8
 6626 0104 3C000000 		.word	field+60
 6627 0108 00000000 		.word	.LC27
 6628 010c 00000000 		.word	processor
 6629 0110 35000000 		.word	.LC31
 6630 0114 09000000 		.word	.LC28
 6631 0118 45000000 		.word	.LC32
 6632 011c 23000000 		.word	.LC30
 6633 0120 54000000 		.word	.LC33
 6634 0124 5D000000 		.word	.LC34
 6635 0128 6F000000 		.word	.LC35
 6636 012c 7D000000 		.word	.LC36
 6637 0130 17000000 		.word	.LC29
 6638              		.cfi_endproc
 6639              	.LFE4541:
 6641              		.section	.rodata._Z14RenderButtons2v.str1.1,"aMS",%progbits,1
 6642              	.LC37:
 6643 0000 53686966 		.ascii	"Shift:\000"
 6643      743A00
 6644              	.LC38:
 6645 0007 46726565 		.ascii	"Freeze:\000"
 6645      7A653A00 
 6646              	.LC39:
 6647 000f 53696C65 		.ascii	"Silent:\000"
 6647      6E743A00 
 6648              	.LC40:
 6649 0017 42797061 		.ascii	"Bypass:\000"
 6649      73733A00 
 6650              		.section	.text._Z14RenderButtons2v,"axG",%progbits,_Z14RenderButtons2v,comdat
 6651              		.align	1
 6652              		.weak	_Z14RenderButtons2v
 6653              		.syntax unified
 6654              		.thumb
 6655              		.thumb_func
 6656              		.fpu fpv5-d16
 6658              	_Z14RenderButtons2v:
 6659              	.LFB4542:
 612:Nimbus.cpp    **** {
 6660              		.loc 24 612 1 is_stmt 1 view -0
 6661              		.cfi_startproc
 6662              		@ args = 0, pretend = 0, frame = 0
 6663              		@ frame_needed = 0, uses_anonymous_args = 0
 613:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 6664              		.loc 24 613 5 view .LVU1833
 612:Nimbus.cpp    **** {
 6665              		.loc 24 612 1 is_stmt 0 view .LVU1834
 6666 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 6667              		.cfi_def_cfa_offset 32
 6668              		.cfi_offset 4, -16
ARM GAS  /tmp/ccUsbZWH.s 			page 226


 6669              		.cfi_offset 5, -12
 6670              		.cfi_offset 6, -8
 6671              		.cfi_offset 14, -4
 613:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 6672              		.loc 24 613 28 view .LVU1835
 6673 0002 324C     		ldr	r4, .L358
 615:Nimbus.cpp    ****     field.display.WriteString("Shift:", SMALL_FONT, true);
 6674              		.loc 24 615 30 view .LVU1836
 6675 0004 0125     		movs	r5, #1
 6676 0006 324E     		ldr	r6, .L358+4
 613:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_HEIGHT);
 6677              		.loc 24 613 28 view .LVU1837
 6678 0008 0E22     		movs	r2, #14
 6679 000a 2046     		mov	r0, r4
 6680 000c 0221     		movs	r1, #2
 6681 000e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6682              	.LVL433:
 615:Nimbus.cpp    ****     field.display.WriteString("Shift:", SMALL_FONT, true);
 6683              		.loc 24 615 5 is_stmt 1 view .LVU1838
 615:Nimbus.cpp    ****     field.display.WriteString("Shift:", SMALL_FONT, true);
 6684              		.loc 24 615 30 is_stmt 0 view .LVU1839
 6685 0012 3049     		ldr	r1, .L358+8
 6686 0014 2046     		mov	r0, r4
 6687 0016 0095     		str	r5, [sp]
 6688 0018 96E80C00 		ldm	r6, {r2, r3}
 6689 001c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6690              	.LVL434:
 616:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6691              		.loc 24 616 5 is_stmt 1 view .LVU1840
 616:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6692              		.loc 24 616 27 is_stmt 0 view .LVU1841
 6693 0020 2D4B     		ldr	r3, .L358+12
 6694 0022 2046     		mov	r0, r4
 6695 0024 0C22     		movs	r2, #12
 6696 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6697 0028 7521     		movs	r1, #117
 6698 002a CDE90153 		strd	r5, r3, [sp, #4]
 6699 002e 1523     		movs	r3, #21
 6700 0030 0093     		str	r3, [sp]
 6701 0032 7D23     		movs	r3, #125
 6702 0034 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6703              	.LVL435:
 623:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, 2 * SKINNY_ROW_HEIGHT);
 6704              		.loc 24 623 5 is_stmt 1 view .LVU1842
 623:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, 2 * SKINNY_ROW_HEIGHT);
 6705              		.loc 24 623 28 is_stmt 0 view .LVU1843
 6706 0038 2046     		mov	r0, r4
 6707 003a 1A22     		movs	r2, #26
 6708 003c 0221     		movs	r1, #2
 6709 003e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6710              	.LVL436:
 625:Nimbus.cpp    ****     field.display.WriteString("Freeze:", SMALL_FONT, true);
 6711              		.loc 24 625 5 is_stmt 1 view .LVU1844
 625:Nimbus.cpp    ****     field.display.WriteString("Freeze:", SMALL_FONT, true);
 6712              		.loc 24 625 30 is_stmt 0 view .LVU1845
 6713 0042 2649     		ldr	r1, .L358+16
 6714 0044 2046     		mov	r0, r4
ARM GAS  /tmp/ccUsbZWH.s 			page 227


 6715 0046 0095     		str	r5, [sp]
 6716 0048 96E80C00 		ldm	r6, {r2, r3}
 6717 004c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6718              	.LVL437:
 626:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6719              		.loc 24 626 5 is_stmt 1 view .LVU1846
  97:dsp/granular_processor.h **** 
 6720              		.loc 12 97 34 view .LVU1847
 626:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6721              		.loc 24 626 27 is_stmt 0 view .LVU1848
 6722 0050 234B     		ldr	r3, .L358+20
 6723 0052 2046     		mov	r0, r4
 6724 0054 1922     		movs	r2, #25
 6725 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6726 0058 7521     		movs	r1, #117
 6727 005a CDE90153 		strd	r5, r3, [sp, #4]
 6728 005e 2223     		movs	r3, #34
 6729 0060 0093     		str	r3, [sp]
 6730 0062 7D23     		movs	r3, #125
 6731 0064 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6732              	.LVL438:
 633:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 6733              		.loc 24 633 5 is_stmt 1 view .LVU1849
 633:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_3 * SKINNY_ROW_HEIGHT);
 6734              		.loc 24 633 28 is_stmt 0 view .LVU1850
 6735 0068 2046     		mov	r0, r4
 6736 006a 2722     		movs	r2, #39
 6737 006c 0221     		movs	r1, #2
 6738 006e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6739              	.LVL439:
 635:Nimbus.cpp    ****     field.display.WriteString("Silent:", SMALL_FONT, true);
 6740              		.loc 24 635 5 is_stmt 1 view .LVU1851
 635:Nimbus.cpp    ****     field.display.WriteString("Silent:", SMALL_FONT, true);
 6741              		.loc 24 635 30 is_stmt 0 view .LVU1852
 6742 0072 1C49     		ldr	r1, .L358+24
 6743 0074 2046     		mov	r0, r4
 6744 0076 0095     		str	r5, [sp]
 6745 0078 96E80C00 		ldm	r6, {r2, r3}
 6746 007c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6747              	.LVL440:
 636:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6748              		.loc 24 636 5 is_stmt 1 view .LVU1853
 636:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6749              		.loc 24 636 27 is_stmt 0 view .LVU1854
 6750 0080 194B     		ldr	r3, .L358+28
 6751 0082 2046     		mov	r0, r4
 6752 0084 2622     		movs	r2, #38
 6753 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6754 0088 7521     		movs	r1, #117
 6755 008a CDE90153 		strd	r5, r3, [sp, #4]
 6756 008e 2F23     		movs	r3, #47
 6757 0090 0093     		str	r3, [sp]
 6758 0092 7D23     		movs	r3, #125
 6759 0094 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6760              	.LVL441:
 643:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 6761              		.loc 24 643 5 is_stmt 1 view .LVU1855
ARM GAS  /tmp/ccUsbZWH.s 			page 228


 643:Nimbus.cpp    ****     field.display.SetCursor(LEFT_BORDER_WIDTH, ROW_4 * SKINNY_ROW_HEIGHT);
 6762              		.loc 24 643 28 is_stmt 0 view .LVU1856
 6763 0098 2046     		mov	r0, r4
 6764 009a 3422     		movs	r2, #52
 6765 009c 0221     		movs	r1, #2
 6766 009e FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6767              	.LVL442:
 644:Nimbus.cpp    ****     field.display.WriteString("Bypass:", SMALL_FONT, true);
 6768              		.loc 24 644 5 is_stmt 1 view .LVU1857
 644:Nimbus.cpp    ****     field.display.WriteString("Bypass:", SMALL_FONT, true);
 6769              		.loc 24 644 30 is_stmt 0 view .LVU1858
 6770 00a2 1249     		ldr	r1, .L358+32
 6771 00a4 2046     		mov	r0, r4
 6772 00a6 0095     		str	r5, [sp]
 6773 00a8 96E80C00 		ldm	r6, {r2, r3}
 6774 00ac FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6775              	.LVL443:
 646:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6776              		.loc 24 646 5 is_stmt 1 view .LVU1859
 646:Nimbus.cpp    ****     field.display.DrawRect(DISPLAY_WIDTH - CHECKBOX_SIZE - CHECKBOX_MARGIN,
 6777              		.loc 24 646 27 is_stmt 0 view .LVU1860
 6778 00b0 0F4B     		ldr	r3, .L358+36
 6779 00b2 3322     		movs	r2, #51
 6780 00b4 7521     		movs	r1, #117
 6781 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6782 00b8 2046     		mov	r0, r4
 6783 00ba CDE90153 		strd	r5, r3, [sp, #4]
 6784 00be 3C23     		movs	r3, #60
 6785 00c0 0093     		str	r3, [sp]
 6786 00c2 7D23     		movs	r3, #125
 6787 00c4 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6788              	.LVL444:
 652:Nimbus.cpp    **** }
 6789              		.loc 24 652 1 view .LVU1861
 6790 00c8 04B0     		add	sp, sp, #16
 6791              		.cfi_def_cfa_offset 16
 6792              		@ sp needed
 6793 00ca 70BD     		pop	{r4, r5, r6, pc}
 6794              	.L359:
 6795              		.align	2
 6796              	.L358:
 6797 00cc 3C000000 		.word	field+60
 6798 00d0 00000000 		.word	Font_6x8
 6799 00d4 00000000 		.word	.LC37
 6800 00d8 00000000 		.word	.LANCHOR6
 6801 00dc 07000000 		.word	.LC38
 6802 00e0 001B0000 		.word	processor+6912
 6803 00e4 0F000000 		.word	.LC39
 6804 00e8 00000000 		.word	.LANCHOR8
 6805 00ec 17000000 		.word	.LC40
 6806 00f0 00000000 		.word	.LANCHOR9
 6807              		.cfi_endproc
 6808              	.LFE4542:
 6810              		.section	.rodata._Z10UpdateOledv.str1.1,"aMS",%progbits,1
 6811              	.LC41:
 6812 0000 50617261 		.ascii	"Paramters Page 1\000"
 6812      6D746572 
ARM GAS  /tmp/ccUsbZWH.s 			page 229


 6812      73205061 
 6812      67652031 
 6812      00
 6813              	.LC42:
 6814 0011 50617261 		.ascii	"Paramters Page 2\000"
 6814      6D746572 
 6814      73205061 
 6814      67652032 
 6814      00
 6815              	.LC43:
 6816 0022 50617261 		.ascii	"Paramters Page 3\000"
 6816      6D746572 
 6816      73205061 
 6816      67652033 
 6816      00
 6817              	.LC44:
 6818 0033 42757474 		.ascii	"Buttons Page 1\000"
 6818      6F6E7320 
 6818      50616765 
 6818      203100
 6819              	.LC45:
 6820 0042 42757474 		.ascii	"Buttons Page 2\000"
 6820      6F6E7320 
 6820      50616765 
 6820      203200
 6821              	.LC46:
 6822 0051 43563220 		.ascii	"CV2 Mappings\000"
 6822      4D617070 
 6822      696E6773 
 6822      00
 6823              	.LC47:
 6824 005e 43563320 		.ascii	"CV3 Mappings\000"
 6824      4D617070 
 6824      696E6773 
 6824      00
 6825              	.LC48:
 6826 006b 43563420 		.ascii	"CV4 Mappings\000"
 6826      4D617070 
 6826      696E6773 
 6826      00
 6827              	.LC49:
 6828 0078 53636F70 		.ascii	"Scope\000"
 6828      6500
 6829              		.section	.text._Z10UpdateOledv,"ax",%progbits
 6830              		.align	1
 6831              		.global	_Z10UpdateOledv
 6832              		.syntax unified
 6833              		.thumb
 6834              		.thumb_func
 6835              		.fpu fpv5-d16
 6837              	_Z10UpdateOledv:
 6838              	.LFB4544:
 675:Nimbus.cpp    **** {
 6839              		.loc 24 675 1 is_stmt 1 view -0
 6840              		.cfi_startproc
 6841              		@ args = 0, pretend = 0, frame = 0
 6842              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccUsbZWH.s 			page 230


 676:Nimbus.cpp    ****     field.display.Fill(false);
 6843              		.loc 24 676 5 view .LVU1863
 6844              	.LVL445:
 6845              	.LBB1383:
 6846              	.LBI1383:
  33:../../libdaisy/src/hid/disp/oled_display.h **** 
 6847              		.loc 5 33 10 view .LVU1864
 6848              	.LBB1384:
 6849              	.LBI1384:
 249:../../libdaisy/src/dev/oled_ssd130x.h ****     {
 6850              		.loc 26 249 10 view .LVU1865
 6851              	.LBB1385:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6852              		.loc 26 251 29 view .LVU1866
 6853 0000 424A     		ldr	r2, .L380
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6854              		.loc 26 251 20 is_stmt 0 view .LVU1867
 6855 0002 0023     		movs	r3, #0
 6856              	.LBE1385:
 6857              	.LBE1384:
 6858              	.LBE1383:
 675:Nimbus.cpp    **** {
 6859              		.loc 24 675 1 view .LVU1868
 6860 0004 73B5     		push	{r0, r1, r4, r5, r6, lr}
 6861              		.cfi_def_cfa_offset 24
 6862              		.cfi_offset 4, -16
 6863              		.cfi_offset 5, -12
 6864              		.cfi_offset 6, -8
 6865              		.cfi_offset 14, -4
 6866              	.LVL446:
 6867              	.L361:
 6868              	.LBB1388:
 6869              	.LBB1387:
 6870              	.LBB1386:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6871              		.loc 26 251 9 view .LVU1869
 6872 0006 0133     		adds	r3, r3, #1
 6873              	.LVL447:
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 6874              		.loc 26 253 13 view .LVU1870
 6875 0008 0025     		movs	r5, #0
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6876              		.loc 26 251 29 view .LVU1871
 6877 000a B3F5806F 		cmp	r3, #1024
 253:../../libdaisy/src/dev/oled_ssd130x.h ****         }
 6878              		.loc 26 253 13 view .LVU1872
 6879 000e 02F8015B 		strb	r5, [r2], #1
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6880              		.loc 26 251 9 is_stmt 1 view .LVU1873
 6881              	.LVL448:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6882              		.loc 26 251 29 view .LVU1874
 6883 0012 F8D1     		bne	.L361
 6884              	.LVL449:
 251:../../libdaisy/src/dev/oled_ssd130x.h ****         {
 6885              		.loc 26 251 29 is_stmt 0 view .LVU1875
 6886              	.LBE1386:
ARM GAS  /tmp/ccUsbZWH.s 			page 231


 6887              	.LBE1387:
 6888              	.LBE1388:
 678:Nimbus.cpp    ****     if(current_display_page != SPLASH)
 6889              		.loc 24 678 5 is_stmt 1 view .LVU1876
 678:Nimbus.cpp    ****     if(current_display_page != SPLASH)
 6890              		.loc 24 678 29 is_stmt 0 view .LVU1877
 6891 0014 3E4E     		ldr	r6, .L380+4
 678:Nimbus.cpp    ****     if(current_display_page != SPLASH)
 6892              		.loc 24 678 5 view .LVU1878
 6893 0016 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 6894 0018 BBB1     		cbz	r3, .L362
 680:Nimbus.cpp    ****         field.display.DrawLine(
 6895              		.loc 24 680 9 is_stmt 1 view .LVU1879
 680:Nimbus.cpp    ****         field.display.DrawLine(
 6896              		.loc 24 680 31 is_stmt 0 view .LVU1880
 6897 001a 0A22     		movs	r2, #10
 6898 001c 0124     		movs	r4, #1
 6899 001e 8023     		movs	r3, #128
 6900 0020 2946     		mov	r1, r5
 6901 0022 3C48     		ldr	r0, .L380+8
 6902 0024 CDE90024 		strd	r2, r4, [sp]
 6903 0028 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6904              	.LVL450:
 682:Nimbus.cpp    ****         field.display.SetCursor(0, 0);
 6905              		.loc 24 682 9 is_stmt 1 view .LVU1881
 682:Nimbus.cpp    ****         field.display.SetCursor(0, 0);
 6906              		.loc 24 682 32 is_stmt 0 view .LVU1882
 6907 002c 2A46     		mov	r2, r5
 6908 002e 2946     		mov	r1, r5
 6909 0030 3848     		ldr	r0, .L380+8
 6910 0032 FFF7FEFF 		bl	_ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
 6911              	.LVL451:
 685:Nimbus.cpp    ****     switch(current_display_page)
 6912              		.loc 24 685 5 is_stmt 1 view .LVU1883
 6913 0036 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 6914 0038 092A     		cmp	r2, #9
 6915 003a 08D8     		bhi	.L363
 6916 003c DFE802F0 		tbb	[pc, r2]
 6917              	.L365:
 6918 0040 05       		.byte	(.L362-.L365)/2
 6919 0041 0C       		.byte	(.L373-.L365)/2
 6920 0042 17       		.byte	(.L372-.L365)/2
 6921 0043 20       		.byte	(.L371-.L365)/2
 6922 0044 29       		.byte	(.L370-.L365)/2
 6923 0045 33       		.byte	(.L369-.L365)/2
 6924 0046 3D       		.byte	(.L368-.L365)/2
 6925 0047 48       		.byte	(.L367-.L365)/2
 6926 0048 51       		.byte	(.L366-.L365)/2
 6927 0049 5A       		.byte	(.L364-.L365)/2
 6928              		.p2align 1
 6929              	.L362:
 687:Nimbus.cpp    ****         case SPLASH: RenderSplash(); break;
 6930              		.loc 24 687 9 view .LVU1884
 687:Nimbus.cpp    ****         case SPLASH: RenderSplash(); break;
 6931              		.loc 24 687 22 view .LVU1885
 687:Nimbus.cpp    ****         case SPLASH: RenderSplash(); break;
 6932              		.loc 24 687 34 is_stmt 0 view .LVU1886
ARM GAS  /tmp/ccUsbZWH.s 			page 232


 6933 004a FFF7FEFF 		bl	_Z12RenderSplashv
 6934              	.LVL452:
 687:Nimbus.cpp    ****         case SPLASH: RenderSplash(); break;
 6935              		.loc 24 687 38 is_stmt 1 view .LVU1887
 6936              	.L363:
 738:Nimbus.cpp    ****     field.display.Update();
 6937              		.loc 24 738 5 view .LVU1888
 6938              	.LBB1389:
 6939              	.LBI1389:
 6940              		.loc 5 50 10 view .LVU1889
 6941              	.LBB1390:
 6942              		.loc 5 50 30 is_stmt 0 view .LVU1890
 6943 004e 3248     		ldr	r0, .L380+12
 6944 0050 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv
 6945              	.LVL453:
 6946              		.loc 5 50 30 view .LVU1891
 6947              	.LBE1390:
 6948              	.LBE1389:
 739:Nimbus.cpp    **** }
 6949              		.loc 24 739 1 view .LVU1892
 6950 0054 02B0     		add	sp, sp, #8
 6951              		.cfi_remember_state
 6952              		.cfi_def_cfa_offset 16
 6953              		@ sp needed
 6954 0056 70BD     		pop	{r4, r5, r6, pc}
 6955              	.L373:
 6956              		.cfi_restore_state
 689:Nimbus.cpp    ****         case PARAMETERS1TO3:
 6957              		.loc 24 689 9 is_stmt 1 view .LVU1893
 690:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 1", DEFAULT_FONT, true);
 6958              		.loc 24 690 13 view .LVU1894
 690:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 1", DEFAULT_FONT, true);
 6959              		.loc 24 690 38 is_stmt 0 view .LVU1895
 6960 0058 304A     		ldr	r2, .L380+16
 6961 005a 0094     		str	r4, [sp]
 6962 005c 3049     		ldr	r1, .L380+20
 6963 005e 2D48     		ldr	r0, .L380+8
 6964 0060 0CCA     		ldm	r2, {r2, r3}
 6965 0062 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6966              	.LVL454:
 691:Nimbus.cpp    ****             RenderParams(PARAMETERS1TO3);
 6967              		.loc 24 691 13 is_stmt 1 view .LVU1896
 691:Nimbus.cpp    ****             RenderParams(PARAMETERS1TO3);
 6968              		.loc 24 691 25 is_stmt 0 view .LVU1897
 6969 0066 0120     		movs	r0, #1
 6970              	.L378:
 696:Nimbus.cpp    ****             RenderParams(PARAMETERS4TO6);
 6971              		.loc 24 696 25 view .LVU1898
 6972 0068 FFF7FEFF 		bl	_Z12RenderParams12DISPLAY_PAGE
 6973              	.LVL455:
 697:Nimbus.cpp    ****             break;
 6974              		.loc 24 697 13 is_stmt 1 view .LVU1899
 6975 006c EFE7     		b	.L363
 6976              	.L372:
 694:Nimbus.cpp    ****         case PARAMETERS4TO6:
 6977              		.loc 24 694 9 view .LVU1900
 695:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 2", DEFAULT_FONT, true);
ARM GAS  /tmp/ccUsbZWH.s 			page 233


 6978              		.loc 24 695 13 view .LVU1901
 695:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 2", DEFAULT_FONT, true);
 6979              		.loc 24 695 38 is_stmt 0 view .LVU1902
 6980 006e 2B4A     		ldr	r2, .L380+16
 6981 0070 0094     		str	r4, [sp]
 6982 0072 2C49     		ldr	r1, .L380+24
 6983 0074 2748     		ldr	r0, .L380+8
 6984 0076 0CCA     		ldm	r2, {r2, r3}
 6985 0078 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 6986              	.LVL456:
 696:Nimbus.cpp    ****             RenderParams(PARAMETERS4TO6);
 6987              		.loc 24 696 13 is_stmt 1 view .LVU1903
 696:Nimbus.cpp    ****             RenderParams(PARAMETERS4TO6);
 6988              		.loc 24 696 25 is_stmt 0 view .LVU1904
 6989 007c 0220     		movs	r0, #2
 6990 007e F3E7     		b	.L378
 6991              	.L371:
 699:Nimbus.cpp    ****         case PARAMETERS7TO9:
 6992              		.loc 24 699 9 is_stmt 1 view .LVU1905
 700:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 3", DEFAULT_FONT, true);
 6993              		.loc 24 700 13 view .LVU1906
 700:Nimbus.cpp    ****             field.display.WriteString("Paramters Page 3", DEFAULT_FONT, true);
 6994              		.loc 24 700 38 is_stmt 0 view .LVU1907
 6995 0080 264A     		ldr	r2, .L380+16
 6996 0082 0094     		str	r4, [sp]
 6997 0084 2849     		ldr	r1, .L380+28
 6998 0086 2348     		ldr	r0, .L380+8
 6999 0088 0CCA     		ldm	r2, {r2, r3}
 7000 008a FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7001              	.LVL457:
 701:Nimbus.cpp    ****             RenderParams(PARAMETERS7TO9);
 7002              		.loc 24 701 13 is_stmt 1 view .LVU1908
 701:Nimbus.cpp    ****             RenderParams(PARAMETERS7TO9);
 7003              		.loc 24 701 25 is_stmt 0 view .LVU1909
 7004 008e 0320     		movs	r0, #3
 7005 0090 EAE7     		b	.L378
 7006              	.L370:
 704:Nimbus.cpp    ****         case BUTTONS1:
 7007              		.loc 24 704 9 is_stmt 1 view .LVU1910
 705:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 1", DEFAULT_FONT, true);
 7008              		.loc 24 705 13 view .LVU1911
 705:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 1", DEFAULT_FONT, true);
 7009              		.loc 24 705 38 is_stmt 0 view .LVU1912
 7010 0092 224A     		ldr	r2, .L380+16
 7011 0094 2549     		ldr	r1, .L380+32
 7012 0096 0094     		str	r4, [sp]
 7013 0098 1E48     		ldr	r0, .L380+8
 7014 009a 0CCA     		ldm	r2, {r2, r3}
 7015 009c FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7016              	.LVL458:
 706:Nimbus.cpp    ****             RenderButtons1();
 7017              		.loc 24 706 13 is_stmt 1 view .LVU1913
 706:Nimbus.cpp    ****             RenderButtons1();
 7018              		.loc 24 706 27 is_stmt 0 view .LVU1914
 7019 00a0 FFF7FEFF 		bl	_Z14RenderButtons1v
 7020              	.LVL459:
 707:Nimbus.cpp    ****             break;
ARM GAS  /tmp/ccUsbZWH.s 			page 234


 7021              		.loc 24 707 13 is_stmt 1 view .LVU1915
 7022 00a4 D3E7     		b	.L363
 7023              	.L369:
 709:Nimbus.cpp    ****         case BUTTONS2:
 7024              		.loc 24 709 9 view .LVU1916
 710:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 2", DEFAULT_FONT, true);
 7025              		.loc 24 710 13 view .LVU1917
 710:Nimbus.cpp    ****             field.display.WriteString("Buttons Page 2", DEFAULT_FONT, true);
 7026              		.loc 24 710 38 is_stmt 0 view .LVU1918
 7027 00a6 1D4A     		ldr	r2, .L380+16
 7028 00a8 2149     		ldr	r1, .L380+36
 7029 00aa 0094     		str	r4, [sp]
 7030 00ac 1948     		ldr	r0, .L380+8
 7031 00ae 0CCA     		ldm	r2, {r2, r3}
 7032 00b0 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7033              	.LVL460:
 711:Nimbus.cpp    ****             RenderButtons2();
 7034              		.loc 24 711 13 is_stmt 1 view .LVU1919
 711:Nimbus.cpp    ****             RenderButtons2();
 7035              		.loc 24 711 27 is_stmt 0 view .LVU1920
 7036 00b4 FFF7FEFF 		bl	_Z14RenderButtons2v
 7037              	.LVL461:
 712:Nimbus.cpp    ****             break;
 7038              		.loc 24 712 13 is_stmt 1 view .LVU1921
 7039 00b8 C9E7     		b	.L363
 7040              	.L368:
 714:Nimbus.cpp    ****         case CVMAPPINGS2:
 7041              		.loc 24 714 9 view .LVU1922
 715:Nimbus.cpp    ****             field.display.WriteString("CV2 Mappings", DEFAULT_FONT, true);
 7042              		.loc 24 715 13 view .LVU1923
 715:Nimbus.cpp    ****             field.display.WriteString("CV2 Mappings", DEFAULT_FONT, true);
 7043              		.loc 24 715 38 is_stmt 0 view .LVU1924
 7044 00ba 184A     		ldr	r2, .L380+16
 7045 00bc 0094     		str	r4, [sp]
 7046 00be 1D49     		ldr	r1, .L380+40
 7047 00c0 1448     		ldr	r0, .L380+8
 7048 00c2 0CCA     		ldm	r2, {r2, r3}
 7049 00c4 FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7050              	.LVL462:
 716:Nimbus.cpp    ****             RenderCVMappings(CV2);
 7051              		.loc 24 716 13 is_stmt 1 view .LVU1925
 716:Nimbus.cpp    ****             RenderCVMappings(CV2);
 7052              		.loc 24 716 29 is_stmt 0 view .LVU1926
 7053 00c8 0120     		movs	r0, #1
 7054              	.L379:
 726:Nimbus.cpp    ****             RenderCVMappings(CV4);
 7055              		.loc 24 726 29 view .LVU1927
 7056 00ca FFF7FEFF 		bl	_Z16RenderCVMappings12MAPPABLE_CVS
 7057              	.LVL463:
 727:Nimbus.cpp    ****             break;
 7058              		.loc 24 727 13 is_stmt 1 view .LVU1928
 7059 00ce BEE7     		b	.L363
 7060              	.L367:
 719:Nimbus.cpp    ****         case CVMAPPINGS3:
 7061              		.loc 24 719 9 view .LVU1929
 720:Nimbus.cpp    ****             field.display.WriteString("CV3 Mappings", DEFAULT_FONT, true);
 7062              		.loc 24 720 13 view .LVU1930
ARM GAS  /tmp/ccUsbZWH.s 			page 235


 720:Nimbus.cpp    ****             field.display.WriteString("CV3 Mappings", DEFAULT_FONT, true);
 7063              		.loc 24 720 38 is_stmt 0 view .LVU1931
 7064 00d0 124A     		ldr	r2, .L380+16
 7065 00d2 0094     		str	r4, [sp]
 7066 00d4 1849     		ldr	r1, .L380+44
 7067 00d6 0F48     		ldr	r0, .L380+8
 7068 00d8 0CCA     		ldm	r2, {r2, r3}
 7069 00da FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7070              	.LVL464:
 721:Nimbus.cpp    ****             RenderCVMappings(CV3);
 7071              		.loc 24 721 13 is_stmt 1 view .LVU1932
 721:Nimbus.cpp    ****             RenderCVMappings(CV3);
 7072              		.loc 24 721 29 is_stmt 0 view .LVU1933
 7073 00de 0220     		movs	r0, #2
 7074 00e0 F3E7     		b	.L379
 7075              	.L366:
 724:Nimbus.cpp    ****         case CVMAPPINGS4:
 7076              		.loc 24 724 9 is_stmt 1 view .LVU1934
 725:Nimbus.cpp    ****             field.display.WriteString("CV4 Mappings", DEFAULT_FONT, true);
 7077              		.loc 24 725 13 view .LVU1935
 725:Nimbus.cpp    ****             field.display.WriteString("CV4 Mappings", DEFAULT_FONT, true);
 7078              		.loc 24 725 38 is_stmt 0 view .LVU1936
 7079 00e2 0E4A     		ldr	r2, .L380+16
 7080 00e4 0094     		str	r4, [sp]
 7081 00e6 1549     		ldr	r1, .L380+48
 7082 00e8 0A48     		ldr	r0, .L380+8
 7083 00ea 0CCA     		ldm	r2, {r2, r3}
 7084 00ec FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7085              	.LVL465:
 726:Nimbus.cpp    ****             RenderCVMappings(CV4);
 7086              		.loc 24 726 13 is_stmt 1 view .LVU1937
 726:Nimbus.cpp    ****             RenderCVMappings(CV4);
 7087              		.loc 24 726 29 is_stmt 0 view .LVU1938
 7088 00f0 0320     		movs	r0, #3
 7089 00f2 EAE7     		b	.L379
 7090              	.L364:
 729:Nimbus.cpp    ****         case SCOPE:
 7091              		.loc 24 729 9 is_stmt 1 view .LVU1939
 730:Nimbus.cpp    ****             field.display.WriteString("Scope", DEFAULT_FONT, true);
 7092              		.loc 24 730 13 view .LVU1940
 730:Nimbus.cpp    ****             field.display.WriteString("Scope", DEFAULT_FONT, true);
 7093              		.loc 24 730 38 is_stmt 0 view .LVU1941
 7094 00f4 094A     		ldr	r2, .L380+16
 7095 00f6 1249     		ldr	r1, .L380+52
 7096 00f8 0094     		str	r4, [sp]
 7097 00fa 0648     		ldr	r0, .L380+8
 7098 00fc 0CCA     		ldm	r2, {r2, r3}
 7099 00fe FFF7FEFF 		bl	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130
 7100              	.LVL466:
 731:Nimbus.cpp    ****             RenderCpuUsage();
 7101              		.loc 24 731 13 is_stmt 1 view .LVU1942
 731:Nimbus.cpp    ****             RenderCpuUsage();
 7102              		.loc 24 731 27 is_stmt 0 view .LVU1943
 7103 0102 FFF7FEFF 		bl	_Z14RenderCpuUsagev
 7104              	.LVL467:
 732:Nimbus.cpp    ****             RenderScope();
 7105              		.loc 24 732 13 is_stmt 1 view .LVU1944
ARM GAS  /tmp/ccUsbZWH.s 			page 236


 732:Nimbus.cpp    ****             RenderScope();
 7106              		.loc 24 732 24 is_stmt 0 view .LVU1945
 7107 0106 FFF7FEFF 		bl	_Z11RenderScopev
 7108              	.LVL468:
 733:Nimbus.cpp    ****             break;
 7109              		.loc 24 733 13 is_stmt 1 view .LVU1946
 7110 010a A0E7     		b	.L363
 7111              	.L381:
 7112              		.align	2
 7113              	.L380:
 7114 010c 50000000 		.word	field+80
 7115 0110 00000000 		.word	.LANCHOR3
 7116 0114 3C000000 		.word	field+60
 7117 0118 44000000 		.word	field+68
 7118 011c 00000000 		.word	Font_7x10
 7119 0120 00000000 		.word	.LC41
 7120 0124 11000000 		.word	.LC42
 7121 0128 22000000 		.word	.LC43
 7122 012c 33000000 		.word	.LC44
 7123 0130 42000000 		.word	.LC45
 7124 0134 51000000 		.word	.LC46
 7125 0138 5E000000 		.word	.LC47
 7126 013c 6B000000 		.word	.LC48
 7127 0140 78000000 		.word	.LC49
 7128              		.cfi_endproc
 7129              	.LFE4544:
 7131              		.section	.text.startup.main,"ax",%progbits
 7132              		.align	1
 7133              		.global	main
 7134              		.syntax unified
 7135              		.thumb
 7136              		.thumb_func
 7137              		.fpu fpv5-d16
 7139              	main:
 7140              	.LFB4536:
 395:Nimbus.cpp    **** {
 7141              		.loc 24 395 1 view -0
 7142              		.cfi_startproc
 7143              		@ args = 0, pretend = 0, frame = 0
 7144              		@ frame_needed = 0, uses_anonymous_args = 0
 396:Nimbus.cpp    ****     field.Init();
 7145              		.loc 24 396 5 view .LVU1948
 395:Nimbus.cpp    **** {
 7146              		.loc 24 395 1 is_stmt 0 view .LVU1949
 7147 0000 10B5     		push	{r4, lr}
 7148              		.cfi_def_cfa_offset 8
 7149              		.cfi_offset 4, -8
 7150              		.cfi_offset 14, -4
 396:Nimbus.cpp    ****     field.Init();
 7151              		.loc 24 396 15 view .LVU1950
 7152 0002 0021     		movs	r1, #0
 7153 0004 2E48     		ldr	r0, .L387
 7154              	.LBB1391:
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7155              		.loc 24 417 13 view .LVU1951
 7156 0006 0824     		movs	r4, #8
 7157              	.LBE1391:
ARM GAS  /tmp/ccUsbZWH.s 			page 237


 395:Nimbus.cpp    **** {
 7158              		.loc 24 395 1 view .LVU1952
 7159 0008 2DED028B 		vpush.64	{d8}
 7160              		.cfi_def_cfa_offset 16
 7161              		.cfi_offset 80, -16
 7162              		.cfi_offset 81, -12
 7163 000c 82B0     		sub	sp, sp, #8
 7164              		.cfi_def_cfa_offset 24
 396:Nimbus.cpp    ****     field.Init();
 7165              		.loc 24 396 15 view .LVU1953
 7166 000e FFF7FEFF 		bl	_ZN5daisy10DaisyField4InitEb
 7167              	.LVL469:
 397:Nimbus.cpp    ****     field.SetAudioBlockSize(AUDIO_BLOCK_SIZE);
 7168              		.loc 24 397 5 is_stmt 1 view .LVU1954
 397:Nimbus.cpp    ****     field.SetAudioBlockSize(AUDIO_BLOCK_SIZE);
 7169              		.loc 24 397 28 is_stmt 0 view .LVU1955
 7170 0012 2021     		movs	r1, #32
 7171 0014 2A48     		ldr	r0, .L387
 7172 0016 FFF7FEFF 		bl	_ZN5daisy10DaisyField17SetAudioBlockSizeEj
 7173              	.LVL470:
 398:Nimbus.cpp    ****     float sample_rate = field.AudioSampleRate();
 7174              		.loc 24 398 5 is_stmt 1 view .LVU1956
 398:Nimbus.cpp    ****     float sample_rate = field.AudioSampleRate();
 7175              		.loc 24 398 46 is_stmt 0 view .LVU1957
 7176 001a 2948     		ldr	r0, .L387
 7177 001c FFF7FEFF 		bl	_ZN5daisy10DaisyField15AudioSampleRateEv
 7178              	.LVL471:
 7179 0020 B0EE408A 		vmov.f32	s16, s0
 7180              	.LVL472:
 401:Nimbus.cpp    ****     InitResources(sample_rate);
 7181              		.loc 24 401 5 is_stmt 1 view .LVU1958
 401:Nimbus.cpp    ****     InitResources(sample_rate);
 7182              		.loc 24 401 18 is_stmt 0 view .LVU1959
 7183 0024 FFF7FEFF 		bl	_Z13InitResourcesf
 7184              	.LVL473:
 403:Nimbus.cpp    ****     processor.Init(sample_rate,
 7185              		.loc 24 403 5 is_stmt 1 view .LVU1960
 403:Nimbus.cpp    ****     processor.Init(sample_rate,
 7186              		.loc 24 403 19 is_stmt 0 view .LVU1961
 7187 0028 4FF68073 		movw	r3, #65408
 7188 002c 2548     		ldr	r0, .L387+4
 7189 002e 4FF4E832 		mov	r2, #118784
 7190 0032 B0EE480A 		vmov.f32	s0, s16
 7191 0036 2449     		ldr	r1, .L387+8
 7192 0038 0093     		str	r3, [sp]
 7193 003a 244B     		ldr	r3, .L387+12
 7194 003c FFF7FEFF 		bl	_ZN23GranularProcessorClouds4InitEfPvjS0_j
 7195              	.LVL474:
 409:Nimbus.cpp    ****     parameters = processor.mutable_parameters();
 7196              		.loc 24 409 5 is_stmt 1 view .LVU1962
 7197              	.LBB1392:
 7198              	.LBI1392:
  89:dsp/granular_processor.h **** 
 7199              		.loc 12 89 24 view .LVU1963
 7200              	.LBE1392:
  89:dsp/granular_processor.h **** 
 7201              		.loc 12 89 47 view .LVU1964
ARM GAS  /tmp/ccUsbZWH.s 			page 238


 7202              	.LBB1393:
 7203              	.LBB1394:
 107:dsp/granular_processor.h ****     }
 7204              		.loc 12 107 24 is_stmt 0 view .LVU1965
 7205 0040 0021     		movs	r1, #0
 7206 0042 2048     		ldr	r0, .L387+4
 7207              	.LBE1394:
 7208              	.LBE1393:
 409:Nimbus.cpp    ****     parameters = processor.mutable_parameters();
 7209              		.loc 24 409 16 view .LVU1966
 7210 0044 224B     		ldr	r3, .L387+16
 7211 0046 234A     		ldr	r2, .L387+20
 7212              	.LBB1397:
 7213              	.LBB1395:
 107:dsp/granular_processor.h ****     }
 7214              		.loc 12 107 24 view .LVU1967
 7215 0048 0170     		strb	r1, [r0]
 7216              	.LBE1395:
 7217              	.LBE1397:
 409:Nimbus.cpp    ****     parameters = processor.mutable_parameters();
 7218              		.loc 24 409 16 view .LVU1968
 7219 004a 1A60     		str	r2, [r3]
 411:Nimbus.cpp    ****     processor.set_playback_mode(PLAYBACK_MODE_GRANULAR);
 7220              		.loc 24 411 5 is_stmt 1 view .LVU1969
 7221              	.LVL475:
 7222              	.LBB1398:
 7223              	.LBI1393:
 105:dsp/granular_processor.h ****     {
 7224              		.loc 12 105 17 view .LVU1970
 7225              	.LBB1396:
 107:dsp/granular_processor.h ****     }
 7226              		.loc 12 107 9 view .LVU1971
 107:dsp/granular_processor.h ****     }
 7227              		.loc 12 107 9 is_stmt 0 view .LVU1972
 7228              	.LBE1396:
 7229              	.LBE1398:
 412:Nimbus.cpp    ****     processor.set_quality(0);
 7230              		.loc 24 412 5 is_stmt 1 view .LVU1973
 412:Nimbus.cpp    ****     processor.set_quality(0);
 7231              		.loc 24 412 26 is_stmt 0 view .LVU1974
 7232 004c FFF7FEFF 		bl	_ZN23GranularProcessorClouds11set_qualityEl
 7233              	.LVL476:
 414:Nimbus.cpp    ****     InitParams();
 7234              		.loc 24 414 5 is_stmt 1 view .LVU1975
 414:Nimbus.cpp    ****     InitParams();
 7235              		.loc 24 414 15 is_stmt 0 view .LVU1976
 7236 0050 FFF7FEFF 		bl	_Z10InitParamsv
 7237              	.LVL477:
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7238              		.loc 24 417 5 is_stmt 1 view .LVU1977
 7239              	.LBB1399:
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7240              		.loc 24 417 35 view .LVU1978
 7241              	.L383:
 419:Nimbus.cpp    ****         param_controls[i].Process();
 7242              		.loc 24 419 9 discriminator 2 view .LVU1979
 419:Nimbus.cpp    ****         param_controls[i].Process();
ARM GAS  /tmp/ccUsbZWH.s 			page 239


 7243              		.loc 24 419 34 is_stmt 0 discriminator 2 view .LVU1980
 7244 0054 204B     		ldr	r3, .L387+24
 7245 0056 3420     		movs	r0, #52
 7246 0058 00FB0430 		mla	r0, r0, r4, r3
 7247 005c FFF7FEFF 		bl	_ZN12ParamControl7ProcessEv
 7248              	.LVL478:
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7249              		.loc 24 417 5 is_stmt 1 discriminator 2 view .LVU1981
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7250              		.loc 24 417 35 is_stmt 0 discriminator 2 view .LVU1982
 7251 0060 013C     		subs	r4, r4, #1
 7252              	.LVL479:
 417:Nimbus.cpp    ****     for(int i = NUM_PARAMS - 1; i >= 0; i--)
 7253              		.loc 24 417 35 discriminator 2 view .LVU1983
 7254 0062 F7D2     		bcs	.L383
 7255              	.LBE1399:
 422:Nimbus.cpp    ****     current_display_page = SPLASH;
 7256              		.loc 24 422 5 is_stmt 1 view .LVU1984
 422:Nimbus.cpp    ****     current_display_page = SPLASH;
 7257              		.loc 24 422 26 is_stmt 0 view .LVU1985
 7258 0064 1D4B     		ldr	r3, .L387+28
 7259 0066 0022     		movs	r2, #0
 7260 0068 1A70     		strb	r2, [r3]
 423:Nimbus.cpp    ****     UpdateOled();
 7261              		.loc 24 423 5 is_stmt 1 view .LVU1986
 423:Nimbus.cpp    ****     UpdateOled();
 7262              		.loc 24 423 15 is_stmt 0 view .LVU1987
 7263 006a FFF7FEFF 		bl	_Z10UpdateOledv
 7264              	.LVL480:
 426:Nimbus.cpp    ****     System::Delay(1000);
 7265              		.loc 24 426 5 is_stmt 1 view .LVU1988
 426:Nimbus.cpp    ****     System::Delay(1000);
 7266              		.loc 24 426 18 is_stmt 0 view .LVU1989
 7267 006e 4FF47A70 		mov	r0, #1000
 7268 0072 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 7269              	.LVL481:
 428:Nimbus.cpp    ****     field.StartAdc();
 7270              		.loc 24 428 5 is_stmt 1 view .LVU1990
 428:Nimbus.cpp    ****     field.StartAdc();
 7271              		.loc 24 428 19 is_stmt 0 view .LVU1991
 7272 0076 1248     		ldr	r0, .L387
 7273 0078 FFF7FEFF 		bl	_ZN5daisy10DaisyField8StartAdcEv
 7274              	.LVL482:
 429:Nimbus.cpp    ****     field.StartAudio(AudioCallback);
 7275              		.loc 24 429 5 is_stmt 1 view .LVU1992
 429:Nimbus.cpp    ****     field.StartAudio(AudioCallback);
 7276              		.loc 24 429 21 is_stmt 0 view .LVU1993
 7277 007c 1849     		ldr	r1, .L387+32
 7278 007e 1048     		ldr	r0, .L387
 7279 0080 FFF7FEFF 		bl	_ZN5daisy10DaisyField10StartAudioEPFvPKPKfPPfjE
 7280              	.LVL483:
 7281              	.L385:
 431:Nimbus.cpp    ****     while(1)
 7282              		.loc 24 431 5 is_stmt 1 view .LVU1994
 433:Nimbus.cpp    ****         processor.Prepare();
 7283              		.loc 24 433 9 view .LVU1995
 433:Nimbus.cpp    ****         processor.Prepare();
ARM GAS  /tmp/ccUsbZWH.s 			page 240


 7284              		.loc 24 433 26 is_stmt 0 view .LVU1996
 7285 0084 0F48     		ldr	r0, .L387+4
 7286 0086 FFF7FEFF 		bl	_ZN23GranularProcessorClouds7PrepareEv
 7287              	.LVL484:
 436:Nimbus.cpp    ****         oled_led_update_gate
 7288              		.loc 24 436 9 is_stmt 1 view .LVU1997
 7289              	.LBB1400:
 7290              	.LBI1400:
 275:Nimbus.cpp    **** int Mod(int n, int m)
 7291              		.loc 24 275 5 view .LVU1998
 7292              	.LBB1401:
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7293              		.loc 24 277 5 view .LVU1999
 7294              	.LBE1401:
 7295              	.LBE1400:
 437:Nimbus.cpp    ****             = Mod(oled_led_update_gate + 1, OLED_LED_UPDATE_DELAY);
 7296              		.loc 24 437 18 is_stmt 0 view .LVU2000
 7297 008a 1648     		ldr	r0, .L387+36
 7298              	.LBB1404:
 7299              	.LBB1402:
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7300              		.loc 24 277 16 view .LVU2001
 7301 008c 0522     		movs	r2, #5
 7302              	.LBE1402:
 7303              	.LBE1404:
 437:Nimbus.cpp    ****             = Mod(oled_led_update_gate + 1, OLED_LED_UPDATE_DELAY);
 7304              		.loc 24 437 18 view .LVU2002
 7305 008e 0368     		ldr	r3, [r0]
 7306 0090 0133     		adds	r3, r3, #1
 7307              	.LVL485:
 7308              	.LBB1405:
 7309              	.LBB1403:
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7310              		.loc 24 277 16 view .LVU2003
 7311 0092 93FBF2F1 		sdiv	r1, r3, r2
 7312 0096 01EB8101 		add	r1, r1, r1, lsl #2
 7313 009a 5B1A     		subs	r3, r3, r1
 7314              	.LVL486:
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7315              		.loc 24 277 21 view .LVU2004
 7316 009c 1344     		add	r3, r3, r2
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7317              		.loc 24 277 28 view .LVU2005
 7318 009e B3FBF2F2 		udiv	r2, r3, r2
 7319 00a2 02EB8202 		add	r2, r2, r2, lsl #2
 7320 00a6 9B1A     		subs	r3, r3, r2
 7321              	.LVL487:
 277:Nimbus.cpp    ****     return ((n % m) + m) % m;
 7322              		.loc 24 277 28 view .LVU2006
 7323              	.LBE1403:
 7324              	.LBE1405:
 438:Nimbus.cpp    ****         if(oled_led_update_gate == OLED_LED_UPDATE_DELAY - 1)
 7325              		.loc 24 438 9 view .LVU2007
 7326 00a8 042B     		cmp	r3, #4
 437:Nimbus.cpp    ****             = Mod(oled_led_update_gate + 1, OLED_LED_UPDATE_DELAY);
 7327              		.loc 24 437 13 view .LVU2008
 7328 00aa 0360     		str	r3, [r0]
ARM GAS  /tmp/ccUsbZWH.s 			page 241


 438:Nimbus.cpp    ****         if(oled_led_update_gate == OLED_LED_UPDATE_DELAY - 1)
 7329              		.loc 24 438 9 is_stmt 1 view .LVU2009
 7330 00ac 03D1     		bne	.L384
 440:Nimbus.cpp    ****             UpdateLeds();
 7331              		.loc 24 440 13 view .LVU2010
 440:Nimbus.cpp    ****             UpdateLeds();
 7332              		.loc 24 440 23 is_stmt 0 view .LVU2011
 7333 00ae FFF7FEFF 		bl	_Z10UpdateLedsv
 7334              	.LVL488:
 441:Nimbus.cpp    ****             UpdateOled();
 7335              		.loc 24 441 13 is_stmt 1 view .LVU2012
 441:Nimbus.cpp    ****             UpdateOled();
 7336              		.loc 24 441 23 is_stmt 0 view .LVU2013
 7337 00b2 FFF7FEFF 		bl	_Z10UpdateOledv
 7338              	.LVL489:
 7339              	.L384:
 445:Nimbus.cpp    ****         System::Delay(MAIN_LOOP_DELAY);
 7340              		.loc 24 445 9 is_stmt 1 view .LVU2014
 445:Nimbus.cpp    ****         System::Delay(MAIN_LOOP_DELAY);
 7341              		.loc 24 445 22 is_stmt 0 view .LVU2015
 7342 00b6 0620     		movs	r0, #6
 7343 00b8 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 7344              	.LVL490:
 431:Nimbus.cpp    ****     while(1)
 7345              		.loc 24 431 5 is_stmt 1 view .LVU2016
 433:Nimbus.cpp    ****         processor.Prepare();
 7346              		.loc 24 433 26 is_stmt 0 view .LVU2017
 7347 00bc E2E7     		b	.L385
 7348              	.L388:
 7349 00be 00BF     		.align	2
 7350              	.L387:
 7351 00c0 00000000 		.word	field
 7352 00c4 00000000 		.word	processor
 7353 00c8 00000000 		.word	block_mem
 7354 00cc 00000000 		.word	block_ccm
 7355 00d0 00000000 		.word	.LANCHOR0
 7356 00d4 DC1A0000 		.word	processor+6876
 7357 00d8 00000000 		.word	.LANCHOR1
 7358 00dc 00000000 		.word	.LANCHOR3
 7359 00e0 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 7360 00e4 00000000 		.word	.LANCHOR15
 7361              		.cfi_endproc
 7362              	.LFE4536:
 7364              		.section	.text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64
 7365              		.align	1
 7366              		.weak	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 7367              		.syntax unified
 7368              		.thumb
 7369              		.thumb_func
 7370              		.fpu fpv5-d16
 7372              	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4Wi
 7373              	.LVL491:
 7374              	.LFB5335:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 7375              		.loc 6 283 10 is_stmt 1 view -0
 7376              		.cfi_startproc
 7377              		@ args = 12, pretend = 0, frame = 24
ARM GAS  /tmp/ccUsbZWH.s 			page 242


 7378              		@ frame_needed = 0, uses_anonymous_args = 0
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 7379              		.loc 6 283 10 is_stmt 0 view .LVU2019
 7380 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7381              		.cfi_def_cfa_offset 36
 7382              		.cfi_offset 4, -36
 7383              		.cfi_offset 5, -32
 7384              		.cfi_offset 6, -28
 7385              		.cfi_offset 7, -24
 7386              		.cfi_offset 8, -20
 7387              		.cfi_offset 9, -16
 7388              		.cfi_offset 10, -12
 7389              		.cfi_offset 11, -8
 7390              		.cfi_offset 14, -4
 7391 0004 2DED068B 		vpush.64	{d8, d9, d10}
 7392              		.cfi_def_cfa_offset 60
 7393              		.cfi_offset 80, -60
 7394              		.cfi_offset 81, -56
 7395              		.cfi_offset 82, -52
 7396              		.cfi_offset 83, -48
 7397              		.cfi_offset 84, -44
 7398              		.cfi_offset 85, -40
 7399 0008 87B0     		sub	sp, sp, #28
 7400              		.cfi_def_cfa_offset 88
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 7401              		.loc 6 283 10 view .LVU2020
 7402 000a 1C46     		mov	r4, r3
 7403 000c 0392     		str	r2, [sp, #12]
 7404 000e 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 7405              	.LVL492:
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 7406              		.loc 6 283 10 view .LVU2021
 7407 0012 DDE91628 		ldrd	r2, r8, [sp, #88]
 7408              	.LVL493:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7409              		.loc 6 312 27 view .LVU2022
 7410 0016 9FEDB64B 		vldr.64	d4, .L450
 306:../../libdaisy/src/hid/disp/display.h ****         {
 7411              		.loc 6 306 9 view .LVU2023
 7412 001a B8F1000F 		cmp	r8, #0
 7413 001e 0493     		str	r3, [sp, #16]
 7414 0020 BCBF     		itt	lt
 7415 0022 4244     		addlt	r2, r2, r8
 7416              	.LVL494:
 309:../../libdaisy/src/hid/disp/display.h ****         }
 7417              		.loc 6 309 13 view .LVU2024
 7418 0024 C8F10008 		rsblt	r8, r8, #0
 7419              	.LVL495:
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7420              		.loc 6 312 27 view .LVU2025
 7421 0028 07EE902A 		vmov	s15, r2	@ int
 313:../../libdaisy/src/hid/disp/display.h **** 
 7422              		.loc 6 313 27 view .LVU2026
 7423 002c 02EB0803 		add	r3, r2, r8
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7424              		.loc 6 312 27 view .LVU2027
 7425 0030 B8EEE76B 		vcvt.f64.s32	d6, s15
ARM GAS  /tmp/ccUsbZWH.s 			page 243


 313:../../libdaisy/src/hid/disp/display.h **** 
 7426              		.loc 6 313 27 view .LVU2028
 7427 0034 07EE103A 		vmov	s14, r3	@ int
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7428              		.loc 6 312 27 view .LVU2029
 7429 0038 9FEDAF5B 		vldr.64	d5, .L450+8
 7430 003c 26EE046B 		vmul.f64	d6, d6, d4
 313:../../libdaisy/src/hid/disp/display.h **** 
 7431              		.loc 6 313 27 view .LVU2030
 7432 0040 B8EEC77B 		vcvt.f64.s32	d7, s14
 283:../../libdaisy/src/hid/disp/display.h ****                  uint_fast8_t y,
 7433              		.loc 6 283 10 view .LVU2031
 7434 0044 CDE90101 		strd	r0, r1, [sp, #4]
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7435              		.loc 6 312 27 view .LVU2032
 7436 0048 86EE050B 		vdiv.f64	d0, d6, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 7437              		.loc 6 313 27 view .LVU2033
 7438 004c 27EE047B 		vmul.f64	d7, d7, d4
 312:../../libdaisy/src/hid/disp/display.h ****         end_angle_rad   = deg2rad(start_angle + sweep);
 7439              		.loc 6 312 9 view .LVU2034
 7440 0050 F7EEC08B 		vcvt.f32.f64	s17, d0
 7441              	.LVL496:
 313:../../libdaisy/src/hid/disp/display.h **** 
 7442              		.loc 6 313 27 view .LVU2035
 7443 0054 87EE050B 		vdiv.f64	d0, d7, d5
 313:../../libdaisy/src/hid/disp/display.h **** 
 7444              		.loc 6 313 9 view .LVU2036
 7445 0058 F7EEC09B 		vcvt.f32.f64	s19, d0
 7446              	.LVL497:
 7447              	.LBB1406:
 7448              	.LBI1406:
 7449              		.file 30 "/usr/include/newlib/c++/9.2.1/cmath"
   1:/usr/include/newlib/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/newlib/c++/9.2.1/cmath **** 
   3:/usr/include/newlib/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/newlib/c++/9.2.1/cmath **** //
   5:/usr/include/newlib/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/newlib/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/newlib/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/newlib/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/newlib/c++/9.2.1/cmath **** // any later version.
  10:/usr/include/newlib/c++/9.2.1/cmath **** 
  11:/usr/include/newlib/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/newlib/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/newlib/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/newlib/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/include/newlib/c++/9.2.1/cmath **** 
  16:/usr/include/newlib/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/newlib/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/newlib/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/newlib/c++/9.2.1/cmath **** 
  20:/usr/include/newlib/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/newlib/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/newlib/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/newlib/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/newlib/c++/9.2.1/cmath **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 244


  25:/usr/include/newlib/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/include/newlib/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/newlib/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/newlib/c++/9.2.1/cmath ****  *
  29:/usr/include/newlib/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/newlib/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/newlib/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/newlib/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/include/newlib/c++/9.2.1/cmath ****  */
  34:/usr/include/newlib/c++/9.2.1/cmath **** 
  35:/usr/include/newlib/c++/9.2.1/cmath **** //
  36:/usr/include/newlib/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/newlib/c++/9.2.1/cmath **** //
  38:/usr/include/newlib/c++/9.2.1/cmath **** 
  39:/usr/include/newlib/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/include/newlib/c++/9.2.1/cmath **** 
  41:/usr/include/newlib/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/include/newlib/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/newlib/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/include/newlib/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/newlib/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/include/newlib/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/newlib/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/include/newlib/c++/9.2.1/cmath **** 
  49:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/include/newlib/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/include/newlib/c++/9.2.1/cmath **** 
  52:/usr/include/newlib/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/include/newlib/c++/9.2.1/cmath **** #undef div
  54:/usr/include/newlib/c++/9.2.1/cmath **** #undef acos
  55:/usr/include/newlib/c++/9.2.1/cmath **** #undef asin
  56:/usr/include/newlib/c++/9.2.1/cmath **** #undef atan
  57:/usr/include/newlib/c++/9.2.1/cmath **** #undef atan2
  58:/usr/include/newlib/c++/9.2.1/cmath **** #undef ceil
  59:/usr/include/newlib/c++/9.2.1/cmath **** #undef cos
  60:/usr/include/newlib/c++/9.2.1/cmath **** #undef cosh
  61:/usr/include/newlib/c++/9.2.1/cmath **** #undef exp
  62:/usr/include/newlib/c++/9.2.1/cmath **** #undef fabs
  63:/usr/include/newlib/c++/9.2.1/cmath **** #undef floor
  64:/usr/include/newlib/c++/9.2.1/cmath **** #undef fmod
  65:/usr/include/newlib/c++/9.2.1/cmath **** #undef frexp
  66:/usr/include/newlib/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/include/newlib/c++/9.2.1/cmath **** #undef log
  68:/usr/include/newlib/c++/9.2.1/cmath **** #undef log10
  69:/usr/include/newlib/c++/9.2.1/cmath **** #undef modf
  70:/usr/include/newlib/c++/9.2.1/cmath **** #undef pow
  71:/usr/include/newlib/c++/9.2.1/cmath **** #undef sin
  72:/usr/include/newlib/c++/9.2.1/cmath **** #undef sinh
  73:/usr/include/newlib/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/include/newlib/c++/9.2.1/cmath **** #undef tan
  75:/usr/include/newlib/c++/9.2.1/cmath **** #undef tanh
  76:/usr/include/newlib/c++/9.2.1/cmath **** 
  77:/usr/include/newlib/c++/9.2.1/cmath **** extern "C++"
  78:/usr/include/newlib/c++/9.2.1/cmath **** {
  79:/usr/include/newlib/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/newlib/c++/9.2.1/cmath **** {
  81:/usr/include/newlib/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /tmp/ccUsbZWH.s 			page 245


  82:/usr/include/newlib/c++/9.2.1/cmath **** 
  83:/usr/include/newlib/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/include/newlib/c++/9.2.1/cmath **** 
  85:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/newlib/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/include/newlib/c++/9.2.1/cmath **** 
  90:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/newlib/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/include/newlib/c++/9.2.1/cmath **** #endif
  94:/usr/include/newlib/c++/9.2.1/cmath **** 
  95:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/include/newlib/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/include/newlib/c++/9.2.1/cmath **** 
 102:/usr/include/newlib/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/include/newlib/c++/9.2.1/cmath **** 
 104:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/newlib/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/include/newlib/c++/9.2.1/cmath **** 
 109:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/newlib/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 113:/usr/include/newlib/c++/9.2.1/cmath **** 
 114:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/include/newlib/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/include/newlib/c++/9.2.1/cmath **** 
 121:/usr/include/newlib/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/include/newlib/c++/9.2.1/cmath **** 
 123:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/newlib/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/include/newlib/c++/9.2.1/cmath **** 
 128:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/newlib/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 132:/usr/include/newlib/c++/9.2.1/cmath **** 
 133:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/include/newlib/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
ARM GAS  /tmp/ccUsbZWH.s 			page 246


 139:/usr/include/newlib/c++/9.2.1/cmath **** 
 140:/usr/include/newlib/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/include/newlib/c++/9.2.1/cmath **** 
 142:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/newlib/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/include/newlib/c++/9.2.1/cmath **** 
 147:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/newlib/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 151:/usr/include/newlib/c++/9.2.1/cmath **** 
 152:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/include/newlib/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/include/newlib/c++/9.2.1/cmath ****     {
 157:/usr/include/newlib/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/include/newlib/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/include/newlib/c++/9.2.1/cmath ****     }
 160:/usr/include/newlib/c++/9.2.1/cmath **** 
 161:/usr/include/newlib/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/include/newlib/c++/9.2.1/cmath **** 
 163:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/include/newlib/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/include/newlib/c++/9.2.1/cmath **** 
 168:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/include/newlib/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 172:/usr/include/newlib/c++/9.2.1/cmath **** 
 173:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/include/newlib/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/include/newlib/c++/9.2.1/cmath **** 
 180:/usr/include/newlib/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/include/newlib/c++/9.2.1/cmath **** 
 182:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/include/newlib/c++/9.2.1/cmath ****   cos(float __x)
 7450              		.loc 30 184 3 is_stmt 1 view .LVU2037
 7451              	.LBB1407:
 185:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 7452              		.loc 30 185 5 view .LVU2038
 7453              		.loc 30 185 26 is_stmt 0 view .LVU2039
 7454 005c B0EE680A 		vmov.f32	s0, s17
 7455 0060 FFF7FEFF 		bl	cosf
 7456              	.LVL498:
 7457              		.loc 30 185 26 view .LVU2040
 7458              	.LBE1407:
 7459              	.LBE1406:
ARM GAS  /tmp/ccUsbZWH.s 			page 247


 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 7460              		.loc 6 315 40 view .LVU2041
 7461 0064 07EE904A 		vmov	s15, r4	@ int
 7462 0068 B8EE67AA 		vcvt.f32.u32	s20, s15
 315:../../libdaisy/src/hid/disp/display.h ****         start_y = -sin(start_angle_rad) * radius;
 7463              		.loc 6 315 9 view .LVU2042
 7464 006c 2AEE008A 		vmul.f32	s16, s20, s0
 7465              	.LVL499:
 7466              	.LBB1408:
 7467              	.LBI1408:
 186:/usr/include/newlib/c++/9.2.1/cmath **** 
 187:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/newlib/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 191:/usr/include/newlib/c++/9.2.1/cmath **** 
 192:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/include/newlib/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/include/newlib/c++/9.2.1/cmath **** 
 199:/usr/include/newlib/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/include/newlib/c++/9.2.1/cmath **** 
 201:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/newlib/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/include/newlib/c++/9.2.1/cmath **** 
 206:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/newlib/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 210:/usr/include/newlib/c++/9.2.1/cmath **** 
 211:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/include/newlib/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/include/newlib/c++/9.2.1/cmath **** 
 218:/usr/include/newlib/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/include/newlib/c++/9.2.1/cmath **** 
 220:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/newlib/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/include/newlib/c++/9.2.1/cmath **** 
 225:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/newlib/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 229:/usr/include/newlib/c++/9.2.1/cmath **** 
 230:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /tmp/ccUsbZWH.s 			page 248


 233:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/include/newlib/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/include/newlib/c++/9.2.1/cmath **** 
 237:/usr/include/newlib/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/include/newlib/c++/9.2.1/cmath **** 
 239:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/include/newlib/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/include/newlib/c++/9.2.1/cmath **** 
 244:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/newlib/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 248:/usr/include/newlib/c++/9.2.1/cmath **** 
 249:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/include/newlib/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/include/newlib/c++/9.2.1/cmath **** 
 256:/usr/include/newlib/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/include/newlib/c++/9.2.1/cmath **** 
 258:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/newlib/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/include/newlib/c++/9.2.1/cmath **** 
 263:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/newlib/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 267:/usr/include/newlib/c++/9.2.1/cmath **** 
 268:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/include/newlib/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/include/newlib/c++/9.2.1/cmath **** 
 275:/usr/include/newlib/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/include/newlib/c++/9.2.1/cmath **** 
 277:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/newlib/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/include/newlib/c++/9.2.1/cmath **** 
 282:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/newlib/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 286:/usr/include/newlib/c++/9.2.1/cmath **** 
 287:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  /tmp/ccUsbZWH.s 			page 249


 290:/usr/include/newlib/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/include/newlib/c++/9.2.1/cmath ****     {
 292:/usr/include/newlib/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/include/newlib/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/include/newlib/c++/9.2.1/cmath ****     }
 295:/usr/include/newlib/c++/9.2.1/cmath **** 
 296:/usr/include/newlib/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/include/newlib/c++/9.2.1/cmath **** 
 298:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/include/newlib/c++/9.2.1/cmath ****   inline float
 300:/usr/include/newlib/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/include/newlib/c++/9.2.1/cmath **** 
 303:/usr/include/newlib/c++/9.2.1/cmath ****   inline long double
 304:/usr/include/newlib/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 307:/usr/include/newlib/c++/9.2.1/cmath **** 
 308:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/include/newlib/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/include/newlib/c++/9.2.1/cmath **** 
 315:/usr/include/newlib/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/include/newlib/c++/9.2.1/cmath **** 
 317:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/include/newlib/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/include/newlib/c++/9.2.1/cmath **** 
 322:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/include/newlib/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 326:/usr/include/newlib/c++/9.2.1/cmath **** 
 327:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/include/newlib/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/include/newlib/c++/9.2.1/cmath **** 
 334:/usr/include/newlib/c++/9.2.1/cmath ****   using ::log;
 335:/usr/include/newlib/c++/9.2.1/cmath **** 
 336:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/newlib/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/include/newlib/c++/9.2.1/cmath **** 
 341:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/newlib/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 345:/usr/include/newlib/c++/9.2.1/cmath **** 
 346:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /tmp/ccUsbZWH.s 			page 250


 347:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/include/newlib/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/include/newlib/c++/9.2.1/cmath **** 
 353:/usr/include/newlib/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/include/newlib/c++/9.2.1/cmath **** 
 355:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/newlib/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/include/newlib/c++/9.2.1/cmath **** 
 360:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/newlib/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 364:/usr/include/newlib/c++/9.2.1/cmath **** 
 365:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/include/newlib/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/include/newlib/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/include/newlib/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/include/newlib/c++/9.2.1/cmath **** 
 372:/usr/include/newlib/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/include/newlib/c++/9.2.1/cmath **** 
 374:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/newlib/c++/9.2.1/cmath ****   inline float
 376:/usr/include/newlib/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/include/newlib/c++/9.2.1/cmath **** 
 379:/usr/include/newlib/c++/9.2.1/cmath ****   inline long double
 380:/usr/include/newlib/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 383:/usr/include/newlib/c++/9.2.1/cmath **** 
 384:/usr/include/newlib/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/include/newlib/c++/9.2.1/cmath **** 
 386:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/include/newlib/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/include/newlib/c++/9.2.1/cmath **** 
 391:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/include/newlib/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/include/newlib/c++/9.2.1/cmath **** 
 395:/usr/include/newlib/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/include/newlib/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/include/newlib/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/include/newlib/c++/9.2.1/cmath ****   inline double
 399:/usr/include/newlib/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/include/newlib/c++/9.2.1/cmath **** 
 402:/usr/include/newlib/c++/9.2.1/cmath ****   inline float
 403:/usr/include/newlib/c++/9.2.1/cmath ****   pow(float __x, int __n)
ARM GAS  /tmp/ccUsbZWH.s 			page 251


 404:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/include/newlib/c++/9.2.1/cmath **** 
 406:/usr/include/newlib/c++/9.2.1/cmath ****   inline long double
 407:/usr/include/newlib/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 410:/usr/include/newlib/c++/9.2.1/cmath **** #endif
 411:/usr/include/newlib/c++/9.2.1/cmath **** 
 412:/usr/include/newlib/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/include/newlib/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/include/newlib/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/include/newlib/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/include/newlib/c++/9.2.1/cmath ****     {
 417:/usr/include/newlib/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/include/newlib/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/include/newlib/c++/9.2.1/cmath ****     }
 420:/usr/include/newlib/c++/9.2.1/cmath **** 
 421:/usr/include/newlib/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/include/newlib/c++/9.2.1/cmath **** 
 423:/usr/include/newlib/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/include/newlib/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/include/newlib/c++/9.2.1/cmath ****   sin(float __x)
 7468              		.loc 30 425 3 is_stmt 1 view .LVU2043
 7469              	.LBB1409:
 426:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 7470              		.loc 30 426 5 view .LVU2044
 7471              		.loc 30 426 26 is_stmt 0 view .LVU2045
 7472 0070 B0EE680A 		vmov.f32	s0, s17
 7473 0074 FFF7FEFF 		bl	sinf
 7474              	.LVL500:
 7475              		.loc 30 426 26 view .LVU2046
 7476              	.LBE1409:
 7477              	.LBE1408:
 316:../../libdaisy/src/hid/disp/display.h ****         end_x   = cos(end_angle_rad) * radius;
 7478              		.loc 6 316 9 view .LVU2047
 7479 0078 60EE4A8A 		vnmul.f32	s17, s0, s20
 7480              	.LVL501:
 7481              	.LBB1410:
 7482              	.LBI1410:
 184:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 7483              		.loc 30 184 3 is_stmt 1 view .LVU2048
 7484              	.LBB1411:
 185:/usr/include/newlib/c++/9.2.1/cmath **** 
 7485              		.loc 30 185 5 view .LVU2049
 185:/usr/include/newlib/c++/9.2.1/cmath **** 
 7486              		.loc 30 185 26 is_stmt 0 view .LVU2050
 7487 007c B0EE690A 		vmov.f32	s0, s19
 7488 0080 FFF7FEFF 		bl	cosf
 7489              	.LVL502:
 185:/usr/include/newlib/c++/9.2.1/cmath **** 
 7490              		.loc 30 185 26 view .LVU2051
 7491              	.LBE1411:
 7492              	.LBE1410:
 317:../../libdaisy/src/hid/disp/display.h ****         end_y   = -sin(end_angle_rad) * radius;
 7493              		.loc 6 317 9 view .LVU2052
 7494 0084 2AEE009A 		vmul.f32	s18, s20, s0
 7495              	.LVL503:
ARM GAS  /tmp/ccUsbZWH.s 			page 252


 7496              	.LBB1412:
 7497              	.LBI1412:
 425:/usr/include/newlib/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 7498              		.loc 30 425 3 is_stmt 1 view .LVU2053
 7499              	.LBB1413:
 7500              		.loc 30 426 5 view .LVU2054
 7501              		.loc 30 426 26 is_stmt 0 view .LVU2055
 7502 0088 B0EE690A 		vmov.f32	s0, s19
 7503 008c FFF7FEFF 		bl	sinf
 7504              	.LVL504:
 7505              		.loc 30 426 26 view .LVU2056
 7506              	.LBE1413:
 7507              	.LBE1412:
 318:../../libdaisy/src/hid/disp/display.h **** 
 7508              		.loc 6 318 9 view .LVU2057
 7509 0090 20EE4AAA 		vnmul.f32	s20, s0, s20
 7510              	.LVL505:
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 7511              		.loc 6 321 19 view .LVU2058
 7512 0094 39EE487A 		vsub.f32	s14, s18, s16
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 7513              		.loc 6 321 9 view .LVU2059
 7514 0098 049B     		ldr	r3, [sp, #16]
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 7515              		.loc 6 322 25 view .LVU2060
 7516 009a 7AEE687A 		vsub.f32	s15, s20, s17
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 7517              		.loc 6 322 36 view .LVU2061
 7518 009e 67EEA77A 		vmul.f32	s15, s15, s15
 322:../../libdaisy/src/hid/disp/display.h ****            < 2.0f)
 7519              		.loc 6 322 16 view .LVU2062
 7520 00a2 E7EE077A 		vfma.f32	s15, s14, s14
 321:../../libdaisy/src/hid/disp/display.h ****                + (end_y - start_y) * (end_y - start_y)
 7521              		.loc 6 321 9 view .LVU2063
 7522 00a6 B0EE007A 		vmov.f32	s14, #2.0e+0
 7523 00aa F4EEC77A 		vcmpe.f32	s15, s14
 7524 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7525 00b2 08D5     		bpl	.L443
 325:../../libdaisy/src/hid/disp/display.h ****                 circle = true;
 7526              		.loc 6 325 13 view .LVU2064
 7527 00b4 B8F1B40F 		cmp	r8, #180
 7528 00b8 00F3CA80 		bgt	.L415
 7529              	.LVL506:
 7530              	.L389:
 394:../../libdaisy/src/hid/disp/display.h **** 
 7531              		.loc 6 394 5 view .LVU2065
 7532 00bc 07B0     		add	sp, sp, #28
 7533              		.cfi_remember_state
 7534              		.cfi_def_cfa_offset 60
 7535              		@ sp needed
 7536 00be BDEC068B 		vldm	sp!, {d8-d10}
 7537              		.cfi_restore 84
 7538              		.cfi_restore 85
 7539              		.cfi_restore 82
 7540              		.cfi_restore 83
 7541              		.cfi_restore 80
 7542              		.cfi_restore 81
ARM GAS  /tmp/ccUsbZWH.s 			page 253


 7543              		.cfi_def_cfa_offset 36
 7544              	.LVL507:
 394:../../libdaisy/src/hid/disp/display.h **** 
 7545              		.loc 6 394 5 view .LVU2066
 7546 00c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7547              	.LVL508:
 7548              	.L443:
 7549              		.cfi_restore_state
 304:../../libdaisy/src/hid/disp/display.h **** 
 7550              		.loc 6 304 14 view .LVU2067
 7551 00c6 0022     		movs	r2, #0
 7552              	.L448:
 302:../../libdaisy/src/hid/disp/display.h **** 
 7553              		.loc 6 302 9 view .LVU2068
 7554 00c8 0127     		movs	r7, #1
 332:../../libdaisy/src/hid/disp/display.h ****         t_y = 0;
 7555              		.loc 6 332 9 view .LVU2069
 7556 00ca 6542     		rsbs	r5, r4, #0
 334:../../libdaisy/src/hid/disp/display.h **** 
 7557              		.loc 6 334 17 view .LVU2070
 7558 00cc C4F10104 		rsb	r4, r4, #1
 7559              	.LVL509:
 333:../../libdaisy/src/hid/disp/display.h ****         err = 2 - 2 * radius;
 7560              		.loc 6 333 9 view .LVU2071
 7561 00d0 0026     		movs	r6, #0
 302:../../libdaisy/src/hid/disp/display.h **** 
 7562              		.loc 6 302 9 view .LVU2072
 7563 00d2 BB46     		mov	fp, r7
 7564 00d4 BA46     		mov	r10, r7
 334:../../libdaisy/src/hid/disp/display.h **** 
 7565              		.loc 6 334 17 view .LVU2073
 7566 00d6 6400     		lsls	r4, r4, #1
 302:../../libdaisy/src/hid/disp/display.h **** 
 7567              		.loc 6 302 9 view .LVU2074
 7568 00d8 B946     		mov	r9, r7
 326:../../libdaisy/src/hid/disp/display.h ****             else
 7569              		.loc 6 326 17 view .LVU2075
 7570 00da 0492     		str	r2, [sp, #16]
 7571              	.LVL510:
 7572              	.L413:
 338:../../libdaisy/src/hid/disp/display.h ****             {
 7573              		.loc 6 338 13 view .LVU2076
 7574 00dc 049A     		ldr	r2, [sp, #16]
 7575 00de 002A     		cmp	r2, #0
 7576 00e0 6ED1     		bne	.L393
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 7577              		.loc 6 340 34 view .LVU2077
 7578 00e2 07EE906A 		vmov	s15, r6	@ int
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 7579              		.loc 6 342 34 view .LVU2078
 7580 00e6 7242     		rsbs	r2, r6, #0
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 7581              		.loc 6 349 17 view .LVU2079
 7582 00e8 B8F1B40F 		cmp	r8, #180
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 7583              		.loc 6 340 34 view .LVU2080
 7584 00ec F8EEE76A 		vcvt.f32.s32	s13, s15
ARM GAS  /tmp/ccUsbZWH.s 			page 254


 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 7585              		.loc 6 341 34 view .LVU2081
 7586 00f0 07EE905A 		vmov	s15, r5	@ int
 7587 00f4 B8EEE77A 		vcvt.f32.s32	s14, s15
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 7588              		.loc 6 342 34 view .LVU2082
 7589 00f8 07EE902A 		vmov	s15, r2	@ int
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 7590              		.loc 6 343 34 view .LVU2083
 7591 00fc C5F10002 		rsb	r2, r5, #0
 340:../../libdaisy/src/hid/disp/display.h ****                 t_syx  = start_y * t_x;
 7592              		.loc 6 340 17 view .LVU2084
 7593 0100 66EE884A 		vmul.f32	s9, s13, s16
 7594              	.LVL511:
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 7595              		.loc 6 342 34 view .LVU2085
 7596 0104 F8EEE77A 		vcvt.f32.s32	s15, s15
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 7597              		.loc 6 343 34 view .LVU2086
 7598 0108 06EE102A 		vmov	s12, r2	@ int
 341:../../libdaisy/src/hid/disp/display.h ****                 t_sxny = start_x * -t_y;
 7599              		.loc 6 341 17 view .LVU2087
 7600 010c 27EE285A 		vmul.f32	s10, s14, s17
 7601              	.LVL512:
 344:../../libdaisy/src/hid/disp/display.h ****                 t_eyx  = end_y * t_x;
 7602              		.loc 6 344 17 view .LVU2088
 7603 0110 66EE896A 		vmul.f32	s13, s13, s18
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 7604              		.loc 6 343 34 view .LVU2089
 7605 0114 B8EEC66A 		vcvt.f32.s32	s12, s12
 342:../../libdaisy/src/hid/disp/display.h ****                 t_synx = start_y * -t_x;
 7606              		.loc 6 342 17 view .LVU2090
 7607 0118 67EE885A 		vmul.f32	s11, s15, s16
 7608              	.LVL513:
 345:../../libdaisy/src/hid/disp/display.h ****                 t_exny = end_x * -t_y;
 7609              		.loc 6 345 17 view .LVU2091
 7610 011c 27EE0A7A 		vmul.f32	s14, s14, s20
 343:../../libdaisy/src/hid/disp/display.h ****                 t_exy  = end_x * t_y;
 7611              		.loc 6 343 17 view .LVU2092
 7612 0120 66EE283A 		vmul.f32	s7, s12, s17
 7613              	.LVL514:
 346:../../libdaisy/src/hid/disp/display.h ****                 t_eynx = end_y * -t_x;
 7614              		.loc 6 346 17 view .LVU2093
 7615 0124 67EE897A 		vmul.f32	s15, s15, s18
 7616              	.LVL515:
 347:../../libdaisy/src/hid/disp/display.h **** 
 7617              		.loc 6 347 17 view .LVU2094
 7618 0128 26EE0A6A 		vmul.f32	s12, s12, s20
 7619              	.LVL516:
 347:../../libdaisy/src/hid/disp/display.h **** 
 7620              		.loc 6 347 17 view .LVU2095
 7621 012c 34EEE34A 		vsub.f32	s8, s9, s7
 7622 0130 74EEC54A 		vsub.f32	s9, s9, s10
 7623              	.LVL517:
 347:../../libdaisy/src/hid/disp/display.h **** 
 7624              		.loc 6 347 17 view .LVU2096
 7625 0134 35EEC55A 		vsub.f32	s10, s11, s10
ARM GAS  /tmp/ccUsbZWH.s 			page 255


 7626              	.LVL518:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7627              		.loc 6 351 46 view .LVU2097
 7628 0138 B5EEC04A 		vcmpe.f32	s8, #0
 7629 013c 75EEE35A 		vsub.f32	s11, s11, s7
 7630              	.LVL519:
 349:../../libdaisy/src/hid/disp/display.h ****                 {
 7631              		.loc 6 349 17 view .LVU2098
 7632 0140 40F39180 		ble	.L394
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7633              		.loc 6 351 46 view .LVU2099
 7634 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7635 0148 00F18480 		bmi	.L416
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7636              		.loc 6 351 55 discriminator 2 view .LVU2100
 7637 014c 36EEC64A 		vsub.f32	s8, s13, s12
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7638              		.loc 6 351 46 discriminator 2 view .LVU2101
 7639 0150 B5EEC04A 		vcmpe.f32	s8, #0
 7640 0154 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7641 0158 CCBF     		ite	gt
 7642 015a 4FF00109 		movgt	r9, #1
 7643              	.LVL520:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7644              		.loc 6 351 46 discriminator 2 view .LVU2102
 7645 015e 4FF00009 		movle	r9, #0
 7646              	.L395:
 7647              	.LVL521:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7648              		.loc 6 352 45 discriminator 6 view .LVU2103
 7649 0162 F5EEC04A 		vcmpe.f32	s9, #0
 7650 0166 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7651 016a 76D4     		bmi	.L417
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7652              		.loc 6 352 54 discriminator 2 view .LVU2104
 7653 016c 76EEC76A 		vsub.f32	s13, s13, s14
 7654              	.LVL522:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7655              		.loc 6 352 45 discriminator 2 view .LVU2105
 7656 0170 F5EEC06A 		vcmpe.f32	s13, #0
 7657 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7658 0178 CCBF     		ite	gt
 7659 017a 4FF0010A 		movgt	r10, #1
 7660              	.LVL523:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7661              		.loc 6 352 45 discriminator 2 view .LVU2106
 7662 017e 4FF0000A 		movle	r10, #0
 7663              	.L396:
 7664              	.LVL524:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7665              		.loc 6 353 46 discriminator 6 view .LVU2107
 7666 0182 B5EEC05A 		vcmpe.f32	s10, #0
 7667 0186 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7668 018a 69D4     		bmi	.L418
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7669              		.loc 6 353 56 discriminator 2 view .LVU2108
 7670 018c 37EEC77A 		vsub.f32	s14, s15, s14
ARM GAS  /tmp/ccUsbZWH.s 			page 256


 7671              	.LVL525:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7672              		.loc 6 353 46 discriminator 2 view .LVU2109
 7673 0190 B5EEC07A 		vcmpe.f32	s14, #0
 7674 0194 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7675 0198 CCBF     		ite	gt
 7676 019a 4FF0010B 		movgt	fp, #1
 7677              	.LVL526:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7678              		.loc 6 353 46 discriminator 2 view .LVU2110
 7679 019e 4FF0000B 		movle	fp, #0
 7680              	.L397:
 7681              	.LVL527:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7682              		.loc 6 354 47 discriminator 6 view .LVU2111
 7683 01a2 F5EEC05A 		vcmpe.f32	s11, #0
 7684 01a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7685 01aa 00F19B80 		bmi	.L419
 7686              	.L449:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7687              		.loc 6 361 57 discriminator 1 view .LVU2112
 7688 01ae 77EEC67A 		vsub.f32	s15, s15, s12
 7689              	.LVL528:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7690              		.loc 6 361 47 discriminator 1 view .LVU2113
 7691 01b2 F5EEC07A 		vcmpe.f32	s15, #0
 7692 01b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7693 01ba CCBF     		ite	gt
 7694 01bc 0127     		movgt	r7, #1
 7695              	.LVL529:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7696              		.loc 6 361 47 discriminator 1 view .LVU2114
 7697 01be 0027     		movle	r7, #0
 7698              	.LVL530:
 7699              	.L393:
 365:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 7700              		.loc 6 365 13 view .LVU2115
 7701 01c0 B9F1000F 		cmp	r9, #0
 7702 01c4 09D0     		beq	.L405
 7703              	.LVL531:
 7704              	.LBB1414:
 7705              	.LBI1414:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7706              		.loc 5 41 10 is_stmt 1 view .LVU2116
 7707              	.LBB1415:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7708              		.loc 5 43 9 is_stmt 0 view .LVU2117
 7709 01c6 039A     		ldr	r2, [sp, #12]
 7710 01c8 0299     		ldr	r1, [sp, #8]
 7711 01ca 0198     		ldr	r0, [sp, #4]
 7712 01cc B218     		adds	r2, r6, r2
 7713              	.LVL532:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7714              		.loc 5 43 9 view .LVU2118
 7715 01ce 491B     		subs	r1, r1, r5
 7716              	.LVL533:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
ARM GAS  /tmp/ccUsbZWH.s 			page 257


 7717              		.loc 5 43 9 view .LVU2119
 7718 01d0 0593     		str	r3, [sp, #20]
 7719 01d2 0830     		adds	r0, r0, #8
 7720 01d4 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 7721              	.LVL534:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7722              		.loc 5 43 9 view .LVU2120
 7723 01d8 059B     		ldr	r3, [sp, #20]
 7724              	.LVL535:
 7725              	.L405:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7726              		.loc 5 43 9 view .LVU2121
 7727              	.LBE1415:
 7728              	.LBE1414:
 368:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 7729              		.loc 6 368 13 view .LVU2122
 7730 01da BAF1000F 		cmp	r10, #0
 7731 01de 09D0     		beq	.L406
 7732              	.LVL536:
 7733              	.LBB1416:
 7734              	.LBI1416:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7735              		.loc 5 41 10 is_stmt 1 view .LVU2123
 7736              	.LBB1417:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7737              		.loc 5 43 9 is_stmt 0 view .LVU2124
 7738 01e0 039A     		ldr	r2, [sp, #12]
 7739 01e2 0299     		ldr	r1, [sp, #8]
 7740 01e4 0198     		ldr	r0, [sp, #4]
 7741 01e6 B218     		adds	r2, r6, r2
 7742              	.LVL537:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7743              		.loc 5 43 9 view .LVU2125
 7744 01e8 6918     		adds	r1, r5, r1
 7745              	.LVL538:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7746              		.loc 5 43 9 view .LVU2126
 7747 01ea 0593     		str	r3, [sp, #20]
 7748 01ec 0830     		adds	r0, r0, #8
 7749 01ee FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 7750              	.LVL539:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7751              		.loc 5 43 9 view .LVU2127
 7752 01f2 059B     		ldr	r3, [sp, #20]
 7753              	.LVL540:
 7754              	.L406:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7755              		.loc 5 43 9 view .LVU2128
 7756              	.LBE1417:
 7757              	.LBE1416:
 371:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 7758              		.loc 6 371 13 view .LVU2129
 7759 01f4 BBF1000F 		cmp	fp, #0
 7760 01f8 09D0     		beq	.L407
 7761              	.LVL541:
 7762              	.LBB1418:
 7763              	.LBI1418:
ARM GAS  /tmp/ccUsbZWH.s 			page 258


  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7764              		.loc 5 41 10 is_stmt 1 view .LVU2130
 7765              	.LBB1419:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7766              		.loc 5 43 9 is_stmt 0 view .LVU2131
 7767 01fa 039A     		ldr	r2, [sp, #12]
 7768 01fc 0299     		ldr	r1, [sp, #8]
 7769 01fe 0198     		ldr	r0, [sp, #4]
 7770 0200 921B     		subs	r2, r2, r6
 7771              	.LVL542:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7772              		.loc 5 43 9 view .LVU2132
 7773 0202 6918     		adds	r1, r5, r1
 7774              	.LVL543:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7775              		.loc 5 43 9 view .LVU2133
 7776 0204 0593     		str	r3, [sp, #20]
 7777 0206 0830     		adds	r0, r0, #8
 7778 0208 FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 7779              	.LVL544:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7780              		.loc 5 43 9 view .LVU2134
 7781 020c 059B     		ldr	r3, [sp, #20]
 7782              	.LVL545:
 7783              	.L407:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7784              		.loc 5 43 9 view .LVU2135
 7785              	.LBE1419:
 7786              	.LBE1418:
 374:../../libdaisy/src/hid/disp/display.h ****                 ((ChildType*)(this))
 7787              		.loc 6 374 13 view .LVU2136
 7788 020e 4FB1     		cbz	r7, .L408
 7789              	.LVL546:
 7790              	.LBB1420:
 7791              	.LBI1420:
  41:../../libdaisy/src/hid/disp/oled_display.h ****     {
 7792              		.loc 5 41 10 is_stmt 1 view .LVU2137
 7793              	.LBB1421:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7794              		.loc 5 43 9 is_stmt 0 view .LVU2138
 7795 0210 039A     		ldr	r2, [sp, #12]
 7796 0212 0299     		ldr	r1, [sp, #8]
 7797 0214 0198     		ldr	r0, [sp, #4]
 7798 0216 921B     		subs	r2, r2, r6
 7799              	.LVL547:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7800              		.loc 5 43 9 view .LVU2139
 7801 0218 491B     		subs	r1, r1, r5
 7802              	.LVL548:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7803              		.loc 5 43 9 view .LVU2140
 7804 021a 0593     		str	r3, [sp, #20]
 7805 021c 0830     		adds	r0, r0, #8
 7806 021e FFF7FEFF 		bl	_ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
 7807              	.LVL549:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7808              		.loc 5 43 9 view .LVU2141
ARM GAS  /tmp/ccUsbZWH.s 			page 259


 7809 0222 059B     		ldr	r3, [sp, #20]
 7810              	.LVL550:
 7811              	.L408:
  43:../../libdaisy/src/hid/disp/oled_display.h ****     }
 7812              		.loc 5 43 9 view .LVU2142
 7813              	.LBE1421:
 7814              	.LBE1420:
 379:../../libdaisy/src/hid/disp/display.h ****             {
 7815              		.loc 6 379 13 view .LVU2143
 7816 0224 A642     		cmp	r6, r4
 7817 0226 5FDB     		blt	.L424
 381:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_y * 2 + 1);
 7818              		.loc 6 381 17 view .LVU2144
 7819 0228 0136     		adds	r6, r6, #1
 7820              	.LVL551:
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 7821              		.loc 6 382 38 view .LVU2145
 7822 022a 04EB4602 		add	r2, r4, r6, lsl #1
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 7823              		.loc 6 383 17 view .LVU2146
 7824 022e EE42     		cmn	r6, r5
 382:../../libdaisy/src/hid/disp/display.h ****                 if(-t_x == t_y && e2 <= t_x)
 7825              		.loc 6 382 17 view .LVU2147
 7826 0230 02F10102 		add	r2, r2, #1
 7827              	.LVL552:
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 7828              		.loc 6 383 17 view .LVU2148
 7829 0234 02D1     		bne	.L409
 383:../../libdaisy/src/hid/disp/display.h ****                 {
 7830              		.loc 6 383 32 discriminator 1 view .LVU2149
 7831 0236 A542     		cmp	r5, r4
 7832 0238 02DB     		blt	.L410
 385:../../libdaisy/src/hid/disp/display.h ****                 }
 7833              		.loc 6 385 21 view .LVU2150
 7834 023a 0024     		movs	r4, #0
 7835              	.LVL553:
 7836              	.L409:
 388:../../libdaisy/src/hid/disp/display.h ****             {
 7837              		.loc 6 388 13 view .LVU2151
 7838 023c A542     		cmp	r5, r4
 7839 023e 55DA     		bge	.L425
 7840              	.L410:
 7841              	.LVL554:
 390:../../libdaisy/src/hid/disp/display.h ****                 err = err + (t_x * 2 + 1);
 7842              		.loc 6 390 17 view .LVU2152
 7843 0240 0135     		adds	r5, r5, #1
 7844              	.LVL555:
 391:../../libdaisy/src/hid/disp/display.h ****             }
 7845              		.loc 6 391 38 view .LVU2153
 7846 0242 02EB4504 		add	r4, r2, r5, lsl #1
 391:../../libdaisy/src/hid/disp/display.h ****             }
 7847              		.loc 6 391 17 view .LVU2154
 7848 0246 0134     		adds	r4, r4, #1
 7849              	.LVL556:
 7850              	.L411:
 393:../../libdaisy/src/hid/disp/display.h ****     }
 7851              		.loc 6 393 21 is_stmt 1 view .LVU2155
ARM GAS  /tmp/ccUsbZWH.s 			page 260


 7852 0248 002D     		cmp	r5, #0
 7853 024a 7FF747AF 		ble	.L413
 393:../../libdaisy/src/hid/disp/display.h ****     }
 7854              		.loc 6 393 21 is_stmt 0 view .LVU2156
 7855 024e 35E7     		b	.L389
 7856              	.LVL557:
 7857              	.L415:
 326:../../libdaisy/src/hid/disp/display.h ****             else
 7858              		.loc 6 326 17 view .LVU2157
 7859 0250 0122     		movs	r2, #1
 7860 0252 39E7     		b	.L448
 7861              	.LVL558:
 7862              	.L416:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7863              		.loc 6 351 46 view .LVU2158
 7864 0254 4FF00109 		mov	r9, #1
 7865              	.LVL559:
 351:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 || t_exy - t_eyx > 0);
 7866              		.loc 6 351 46 view .LVU2159
 7867 0258 83E7     		b	.L395
 7868              	.LVL560:
 7869              	.L417:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7870              		.loc 6 352 45 view .LVU2160
 7871 025a 4FF0010A 		mov	r10, #1
 7872              	.LVL561:
 352:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 || t_exny - t_eyx > 0);
 7873              		.loc 6 352 45 view .LVU2161
 7874 025e 90E7     		b	.L396
 7875              	.LVL562:
 7876              	.L418:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7877              		.loc 6 353 46 view .LVU2162
 7878 0260 4FF0010B 		mov	fp, #1
 7879              	.LVL563:
 353:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 || t_exny - t_eynx > 0);
 7880              		.loc 6 353 46 view .LVU2163
 7881 0264 9DE7     		b	.L397
 7882              	.LVL564:
 7883              	.L394:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7884              		.loc 6 358 46 view .LVU2164
 7885 0266 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7886 026a 32D5     		bpl	.L444
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7887              		.loc 6 358 55 discriminator 1 view .LVU2165
 7888 026c 36EEC64A 		vsub.f32	s8, s13, s12
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7889              		.loc 6 358 46 discriminator 1 view .LVU2166
 7890 0270 B5EEC04A 		vcmpe.f32	s8, #0
 7891 0274 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7892 0278 CCBF     		ite	gt
 7893 027a 4FF00109 		movgt	r9, #1
 7894              	.LVL565:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7895              		.loc 6 358 46 discriminator 1 view .LVU2167
 7896 027e 4FF00009 		movle	r9, #0
ARM GAS  /tmp/ccUsbZWH.s 			page 261


 7897              	.L398:
 7898              	.LVL566:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7899              		.loc 6 359 45 discriminator 6 view .LVU2168
 7900 0282 F5EEC04A 		vcmpe.f32	s9, #0
 7901 0286 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7902 028a 25D5     		bpl	.L445
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7903              		.loc 6 359 54 discriminator 1 view .LVU2169
 7904 028c 76EEC76A 		vsub.f32	s13, s13, s14
 7905              	.LVL567:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7906              		.loc 6 359 45 discriminator 1 view .LVU2170
 7907 0290 F5EEC06A 		vcmpe.f32	s13, #0
 7908 0294 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7909 0298 CCBF     		ite	gt
 7910 029a 4FF0010A 		movgt	r10, #1
 7911              	.LVL568:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7912              		.loc 6 359 45 discriminator 1 view .LVU2171
 7913 029e 4FF0000A 		movle	r10, #0
 7914              	.L400:
 7915              	.LVL569:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7916              		.loc 6 360 46 discriminator 6 view .LVU2172
 7917 02a2 B5EEC05A 		vcmpe.f32	s10, #0
 7918 02a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7919 02aa 18D5     		bpl	.L446
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7920              		.loc 6 360 56 discriminator 1 view .LVU2173
 7921 02ac 37EEC77A 		vsub.f32	s14, s15, s14
 7922              	.LVL570:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7923              		.loc 6 360 46 discriminator 1 view .LVU2174
 7924 02b0 B5EEC07A 		vcmpe.f32	s14, #0
 7925 02b4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7926 02b8 CCBF     		ite	gt
 7927 02ba 4FF0010B 		movgt	fp, #1
 7928              	.LVL571:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7929              		.loc 6 360 46 discriminator 1 view .LVU2175
 7930 02be 4FF0000B 		movle	fp, #0
 7931              	.L402:
 7932              	.LVL572:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7933              		.loc 6 361 47 discriminator 6 view .LVU2176
 7934 02c2 F5EEC05A 		vcmpe.f32	s11, #0
 7935 02c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7936 02ca 3FF570AF 		bmi	.L449
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7937              		.loc 6 361 47 view .LVU2177
 7938 02ce 0027     		movs	r7, #0
 7939              	.LVL573:
 361:../../libdaisy/src/hid/disp/display.h ****                 }
 7940              		.loc 6 361 47 view .LVU2178
 7941 02d0 76E7     		b	.L393
 7942              	.LVL574:
ARM GAS  /tmp/ccUsbZWH.s 			page 262


 7943              	.L444:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7944              		.loc 6 358 46 view .LVU2179
 7945 02d2 DDF81090 		ldr	r9, [sp, #16]
 7946              	.LVL575:
 358:../../libdaisy/src/hid/disp/display.h ****                     d2 = (t_sxy - t_syx < 0 && t_exy - t_eyx > 0);
 7947              		.loc 6 358 46 view .LVU2180
 7948 02d6 D4E7     		b	.L398
 7949              	.LVL576:
 7950              	.L445:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7951              		.loc 6 359 45 view .LVU2181
 7952 02d8 4FF0000A 		mov	r10, #0
 7953              	.LVL577:
 359:../../libdaisy/src/hid/disp/display.h ****                     d3 = (t_sxny - t_syx < 0 && t_exny - t_eyx > 0);
 7954              		.loc 6 359 45 view .LVU2182
 7955 02dc E1E7     		b	.L400
 7956              	.LVL578:
 7957              	.L446:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7958              		.loc 6 360 46 view .LVU2183
 7959 02de 4FF0000B 		mov	fp, #0
 7960              	.LVL579:
 360:../../libdaisy/src/hid/disp/display.h ****                     d4 = (t_sxny - t_synx < 0 && t_exny - t_eynx > 0);
 7961              		.loc 6 360 46 view .LVU2184
 7962 02e2 EEE7     		b	.L402
 7963              	.LVL580:
 7964              	.L419:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7965              		.loc 6 354 47 view .LVU2185
 7966 02e4 0127     		movs	r7, #1
 7967              	.LVL581:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7968              		.loc 6 354 47 view .LVU2186
 7969 02e6 6BE7     		b	.L393
 7970              	.LVL582:
 7971              	.L424:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7972              		.loc 6 354 47 view .LVU2187
 7973 02e8 2246     		mov	r2, r4
 7974 02ea A7E7     		b	.L409
 7975              	.LVL583:
 7976              	.L425:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7977              		.loc 6 354 47 view .LVU2188
 7978 02ec 1446     		mov	r4, r2
 7979              	.LVL584:
 354:../../libdaisy/src/hid/disp/display.h ****                 }
 7980              		.loc 6 354 47 view .LVU2189
 7981 02ee ABE7     		b	.L411
 7982              	.L451:
 7983              		.align	3
 7984              	.L450:
 7985 02f0 7A008BFC 		.word	4236968058
 7986 02f4 FA210940 		.word	1074340346
 7987 02f8 00000000 		.word	0
 7988 02fc 00806640 		.word	1080459264
ARM GAS  /tmp/ccUsbZWH.s 			page 263


 7989              		.cfi_endproc
 7990              	.LFE5335:
 7992              		.section	.text.startup._GLOBAL__sub_I_processor,"ax",%progbits
 7993              		.align	1
 7994              		.syntax unified
 7995              		.thumb
 7996              		.thumb_func
 7997              		.fpu fpv5-d16
 7999              	_GLOBAL__sub_I_processor:
 8000              	.LFB5341:
 8001              		.loc 24 1059 1 is_stmt 1 view -0
 8002              		.cfi_startproc
 8003              		@ args = 0, pretend = 0, frame = 0
 8004              		@ frame_needed = 0, uses_anonymous_args = 0
 8005              	.LBB1538:
 8006              	.LBI1538:
 8007              		.loc 24 1059 1 view .LVU2191
 8008              	.LVL585:
 8009              	.LBB1539:
 8010              	.LBB1540:
 8011              	.LBI1540:
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8012              		.loc 12 77 5 view .LVU2192
 8013              	.LBB1541:
 8014              	.LBB1542:
 8015              	.LBI1542:
  41:dsp/correlator.h ****     ~Correlator() {}
 8016              		.loc 23 41 5 view .LVU2193
  41:dsp/correlator.h ****     ~Correlator() {}
 8017              		.loc 23 41 5 is_stmt 0 view .LVU2194
 8018              	.LBE1542:
 8019              	.LBB1543:
 8020              	.LBI1543:
  52:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 8021              		.loc 22 52 5 is_stmt 1 view .LVU2195
 8022              	.LBE1543:
 8023              	.LBE1541:
 8024              	.LBE1540:
 8025              	.LBE1539:
 8026              	.LBE1538:
  52:dsp/granular_sample_player.h ****     ~GranularSamplePlayer() {}
 8027              		.loc 22 52 28 view .LVU2196
 8028              	.LBB1766:
 8029              	.LBB1751:
 8030              	.LBB1648:
 8031              	.LBB1632:
 8032              	.LBB1544:
 8033              	.LBI1544:
  53:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 8034              		.loc 21 53 5 view .LVU2197
 8035              	.LBE1544:
 8036              	.LBE1632:
 8037              	.LBE1648:
 8038              	.LBE1751:
 8039              	.LBE1766:
  53:dsp/wsola_sample_player.h ****     ~WSOLASamplePlayer() {}
 8040              		.loc 21 53 25 view .LVU2198
ARM GAS  /tmp/ccUsbZWH.s 			page 264


 8041              	.LBB1767:
 8042              	.LBB1752:
 8043              	.LBB1649:
 8044              	.LBB1633:
 8045              	.LBB1545:
 8046              	.LBI1545:
  47:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 8047              		.loc 20 47 5 view .LVU2199
  47:dsp/looping_sample_player.h ****     ~LoopingSamplePlayer() {}
 8048              		.loc 20 47 5 is_stmt 0 view .LVU2200
 8049              	.LBE1545:
 8050              	.LBB1546:
 8051              	.LBI1546:
  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 8052              		.loc 18 43 5 is_stmt 1 view .LVU2201
 8053              	.LBB1547:
 8054              	.LBB1548:
 8055              	.LBI1548:
 826:./shy_fft.h   ****     ~ShyFFT() {}
 8056              		.loc 19 826 5 view .LVU2202
 8057              	.LBB1549:
 8058              	.LBB1550:
 8059              	.LBI1550:
 232:./shy_fft.h   ****     ~RotationPhasor() {}
 8060              		.loc 19 232 5 view .LVU2203
 232:./shy_fft.h   ****     ~RotationPhasor() {}
 8061              		.loc 19 232 5 is_stmt 0 view .LVU2204
 8062              	.LBE1550:
 8063              	.LBE1549:
 8064              	.LBE1548:
 8065              	.LBE1547:
 8066              	.LBE1546:
 8067              	.LBE1633:
 8068              	.LBE1649:
 8069              	.LBE1752:
 8070              	.LBE1767:
  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 8071              		.loc 18 43 20 is_stmt 1 view .LVU2205
  43:dsp/pvoc/phase_vocoder.h ****     ~PhaseVocoder() {}
 8072              		.loc 18 43 20 view .LVU2206
 8073              	.LBB1768:
 8074              	.LBB1753:
 8075              	.LBB1650:
 8076              	.LBB1634:
 8077              	.LBB1551:
 8078              	.LBI1551:
  39:dsp/fx/diffuser.h ****     ~Diffuser() {}
 8079              		.loc 17 39 5 view .LVU2207
 8080              	.LBB1552:
 8081              	.LBB1553:
 8082              	.LBI1553:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8083              		.loc 15 110 5 view .LVU2208
 8084              	.LBE1553:
 8085              	.LBE1552:
 8086              	.LBE1551:
 8087              	.LBE1634:
ARM GAS  /tmp/ccUsbZWH.s 			page 265


 8088              	.LBE1650:
 8089              	.LBE1753:
 8090              	.LBE1768:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8091              		.loc 15 110 16 view .LVU2209
 8092              	.LBB1769:
 8093              	.LBB1754:
 8094              	.LBB1651:
 8095              	.LBB1635:
 8096              	.LBB1590:
 8097              	.LBB1584:
 8098              	.LBB1578:
 8099              	.LBB1554:
 8100              	.LBB1555:
 8101              	.LBI1555:
 8102              		.file 31 "./stmtemp.h"
   1:./stmtemp.h   **** #include "daisy.h"
   2:./stmtemp.h   **** #include "daisysp.h"
   3:./stmtemp.h   **** #include "resources.h"
   4:./stmtemp.h   **** 
   5:./stmtemp.h   **** using namespace daisy;
   6:./stmtemp.h   **** using namespace daisysp;
   7:./stmtemp.h   **** 
   8:./stmtemp.h   **** #define MAKE_INTEGRAL_FRACTIONAL(x)                   \
   9:./stmtemp.h   ****     int32_t x##_integral   = static_cast<int32_t>(x); \
  10:./stmtemp.h   ****     float   x##_fractional = x - static_cast<float>(x##_integral);
  11:./stmtemp.h   **** 
  12:./stmtemp.h   **** #define SLOPE(out, in, positive, negative)                \
  13:./stmtemp.h   ****     {                                                     \
  14:./stmtemp.h   ****         float error = (in)-out;                           \
  15:./stmtemp.h   ****         out += (error > 0 ? positive : negative) * error; \
  16:./stmtemp.h   ****     }
  17:./stmtemp.h   **** 
  18:./stmtemp.h   **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in)-out);
  19:./stmtemp.h   **** 
  20:./stmtemp.h   **** #define CONSTRAIN(var, min, max) \
  21:./stmtemp.h   ****     if(var < (min))              \
  22:./stmtemp.h   ****     {                            \
  23:./stmtemp.h   ****         var = (min);             \
  24:./stmtemp.h   ****     }                            \
  25:./stmtemp.h   ****     else if(var > (max))         \
  26:./stmtemp.h   ****     {                            \
  27:./stmtemp.h   ****         var = (max);             \
  28:./stmtemp.h   ****     }
  29:./stmtemp.h   **** 
  30:./stmtemp.h   **** #define JOIN(lhs, rhs) JOIN_1(lhs, rhs)
  31:./stmtemp.h   **** #define JOIN_1(lhs, rhs) JOIN_2(lhs, rhs)
  32:./stmtemp.h   **** #define JOIN_2(lhs, rhs) lhs##rhs
  33:./stmtemp.h   **** 
  34:./stmtemp.h   **** #define STATIC_ASSERT(expression, message)                                  \
  35:./stmtemp.h   ****     struct JOIN(__static_assertion_at_line_, __LINE__)                      \
  36:./stmtemp.h   ****     {                                                                       \
  37:./stmtemp.h   ****         impl::StaticAssertion<static_cast<bool>((expression))>              \
  38:./stmtemp.h   ****             JOIN(JOIN(JOIN(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), \
  39:./stmtemp.h   ****                  message);                                                  \
  40:./stmtemp.h   ****     };
  41:./stmtemp.h   **** 
ARM GAS  /tmp/ccUsbZWH.s 			page 266


  42:./stmtemp.h   **** namespace impl
  43:./stmtemp.h   **** {
  44:./stmtemp.h   **** template <bool>
  45:./stmtemp.h   **** struct StaticAssertion;
  46:./stmtemp.h   **** 
  47:./stmtemp.h   **** template <>
  48:./stmtemp.h   **** struct StaticAssertion<true>
  49:./stmtemp.h   **** {
  50:./stmtemp.h   **** }; // StaticAssertion<true>
  51:./stmtemp.h   **** 
  52:./stmtemp.h   **** template <int i>
  53:./stmtemp.h   **** struct StaticAssertionTest
  54:./stmtemp.h   **** {
  55:./stmtemp.h   **** }; // StaticAssertionTest<int>
  56:./stmtemp.h   **** 
  57:./stmtemp.h   **** } // namespace impl
  58:./stmtemp.h   **** 
  59:./stmtemp.h   **** template <uint32_t a, uint32_t b, uint32_t c, uint32_t d>
  60:./stmtemp.h   **** struct FourCC
  61:./stmtemp.h   **** {
  62:./stmtemp.h   ****     static const uint32_t value = (((((d << 8) | c) << 8) | b) << 8) | a;
  63:./stmtemp.h   **** };
  64:./stmtemp.h   **** 
  65:./stmtemp.h   **** class CosineOscillator
  66:./stmtemp.h   **** {
  67:./stmtemp.h   ****   public:
  68:./stmtemp.h   ****     CosineOscillator() {}
 8103              		.loc 31 68 5 view .LVU2210
 8104              	.LBB1556:
 8105              	.LBB1557:
 8106              		.loc 31 68 24 is_stmt 0 view .LVU2211
 8107 0000 3248     		ldr	r0, .L453
 8108              	.LBE1557:
 8109              	.LBE1556:
 8110              	.LBE1555:
 8111              	.LBE1554:
 8112              	.LBE1578:
 8113              	.LBE1584:
 8114              	.LBE1590:
 8115              	.LBE1635:
 8116              	.LBE1651:
 248:Nimbus.cpp    **** GranularProcessorClouds processor;
 8117              		.loc 24 248 25 view .LVU2212
 8118 0002 3349     		ldr	r1, .L453+4
 8119              	.LBB1652:
 8120              	.LBB1636:
 8121              	.LBB1591:
 8122              	.LBB1585:
 8123              	.LBB1579:
 8124              	.LBB1573:
 8125              	.LBB1568:
 8126              	.LBB1563:
 8127              	.LBB1558:
 8128              		.loc 31 68 24 view .LVU2213
 8129 0004 00F6F872 		addw	r2, r0, #4088
 8130              	.LBE1558:
 8131              	.LBE1563:
ARM GAS  /tmp/ccUsbZWH.s 			page 267


 8132              	.LBE1568:
 8133              	.LBE1573:
 8134              	.LBE1579:
 8135              	.LBE1585:
 8136              	.LBE1591:
 8137              	.LBE1636:
 8138              	.LBE1652:
 8139              	.LBE1754:
 8140              	.LBE1769:
 8141              		.loc 24 1059 1 view .LVU2214
 8142 0008 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 8143              		.cfi_def_cfa_offset 24
 8144              		.cfi_offset 3, -24
 8145              		.cfi_offset 4, -20
 8146              		.cfi_offset 5, -16
 8147              		.cfi_offset 6, -12
 8148              		.cfi_offset 7, -8
 8149              		.cfi_offset 14, -4
 8150              	.LBB1770:
 8151              	.LBB1755:
 8152              	.LBB1653:
 8153              	.LBB1637:
 8154              	.LBB1592:
 8155              	.LBB1586:
 8156              	.LBB1580:
 8157              	.LBB1574:
 8158              	.LBB1569:
 8159              	.LBB1564:
 8160              	.LBB1559:
 8161              		.loc 31 68 24 view .LVU2215
 8162 000a 0023     		movs	r3, #0
 8163              	.LBE1559:
 8164              	.LBE1564:
 8165              	.LBE1569:
 8166              	.LBE1574:
 8167              	.LBE1580:
 8168              	.LBE1586:
 8169              	.LBE1592:
 8170              	.LBE1637:
 8171              	.LBE1653:
 248:Nimbus.cpp    **** GranularProcessorClouds processor;
 8172              		.loc 24 248 25 view .LVU2216
 8173 000c 314E     		ldr	r6, .L453+8
 8174              	.LBB1654:
 8175              	.LBB1655:
 8176              	.LBB1656:
 8177              	.LBB1657:
 8178              	.LBB1658:
 8179              	.LBB1659:
 8180              	.LBB1660:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 8181              		.loc 11 62 35 view .LVU2217
 8182 000e 324C     		ldr	r4, .L453+12
 8183 0010 0025     		movs	r5, #0
 8184              	.LBE1660:
 8185              	.LBE1659:
 8186              	.LBE1658:
ARM GAS  /tmp/ccUsbZWH.s 			page 268


 8187              	.LBE1657:
 8188              	.LBE1656:
 8189              	.LBE1655:
 8190              	.LBE1654:
 8191              	.LBB1737:
 8192              	.LBB1638:
 8193              	.LBB1593:
 8194              	.LBB1587:
 8195              	.LBB1581:
 8196              	.LBB1575:
 8197              	.LBB1570:
 8198              	.LBB1565:
 8199              	.LBB1560:
 8200              		.loc 31 68 24 view .LVU2218
 8201 0012 1360     		str	r3, [r2]	@ float
 8202 0014 00F58052 		add	r2, r0, #4096
 8203              	.LBE1560:
 8204              	.LBE1565:
 8205              	.LBE1570:
 8206              	.LBE1575:
 8207              	.LBE1581:
 8208              	.LBE1587:
 8209              	.LBE1593:
 8210              	.LBE1638:
 8211              	.LBE1737:
 8212              	.LBB1738:
 8213              	.LBB1733:
 8214              	.LBB1673:
 8215              	.LBB1674:
  30:../../libdaisy/src/dev/leddriver.h **** {
 8216              		.loc 25 30 7 view .LVU2219
 8217 0018 304F     		ldr	r7, .L453+16
 8218              	.LBE1674:
 8219              	.LBE1673:
 8220              	.LBE1733:
 8221              	.LBE1738:
 8222              	.LBB1739:
 8223              	.LBB1639:
 8224              	.LBB1594:
 8225              	.LBB1588:
 8226              	.LBB1582:
 8227              	.LBB1576:
 8228              	.LBB1571:
 8229              	.LBB1566:
 8230              	.LBB1561:
 8231              		.loc 31 68 24 view .LVU2220
 8232 001a 1360     		str	r3, [r2]	@ float
 8233              	.LVL586:
 8234              		.loc 31 68 24 view .LVU2221
 8235              	.LBE1561:
 8236              	.LBE1566:
 8237              	.LBE1571:
 8238              	.LBE1576:
 8239              	.LBE1582:
 8240              	.LBE1588:
 8241              	.LBE1594:
 8242              	.LBE1639:
ARM GAS  /tmp/ccUsbZWH.s 			page 269


 8243              	.LBE1739:
 8244              	.LBE1755:
 8245              	.LBE1770:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8246              		.loc 15 110 16 is_stmt 1 view .LVU2222
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8247              		.loc 15 110 16 view .LVU2223
 8248              	.LBB1771:
 8249              	.LBB1756:
 8250              	.LBB1740:
 8251              	.LBB1640:
 8252              	.LBB1595:
 8253              	.LBB1589:
 8254              	.LBB1583:
 8255              	.LBB1577:
 8256              	.LBB1572:
 8257              		.loc 31 68 5 view .LVU2224
 8258              	.LBB1567:
 8259              	.LBB1562:
 8260              		.loc 31 68 24 is_stmt 0 view .LVU2225
 8261 001c 9360     		str	r3, [r2, #8]	@ float
 8262 001e 00F58052 		add	r2, r0, #4096
 8263 0022 1361     		str	r3, [r2, #16]	@ float
 8264              	.LVL587:
 8265              		.loc 31 68 24 view .LVU2226
 8266              	.LBE1562:
 8267              	.LBE1567:
 8268              	.LBE1572:
 8269              	.LBE1577:
 8270              	.LBE1583:
 8271              	.LBE1589:
 8272              	.LBE1595:
 8273              	.LBE1640:
 8274              	.LBE1740:
 8275              	.LBE1756:
 8276              	.LBE1771:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8277              		.loc 15 110 16 is_stmt 1 view .LVU2227
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8278              		.loc 15 110 16 view .LVU2228
 8279              	.LBB1772:
 8280              	.LBB1757:
 8281              	.LBB1741:
 8282              	.LBB1641:
 8283              	.LBB1596:
 8284              	.LBI1596:
  40:dsp/fx/reverb.h ****     ~Reverb() {}
 8285              		.loc 16 40 5 view .LVU2229
 8286              	.LBB1597:
 8287              	.LBB1598:
 8288              	.LBI1598:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8289              		.loc 15 110 5 view .LVU2230
 8290              	.LBE1598:
 8291              	.LBE1597:
 8292              	.LBE1596:
 8293              	.LBE1641:
ARM GAS  /tmp/ccUsbZWH.s 			page 270


 8294              	.LBE1741:
 8295              	.LBE1757:
 8296              	.LBE1772:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8297              		.loc 15 110 16 view .LVU2231
 8298              	.LBB1773:
 8299              	.LBB1758:
 8300              	.LBB1742:
 8301              	.LBB1642:
 8302              	.LBB1611:
 8303              	.LBB1609:
 8304              	.LBB1607:
 8305              	.LBB1599:
 8306              	.LBB1600:
 8307              	.LBI1600:
 8308              		.loc 31 68 5 view .LVU2232
 8309              	.LBB1601:
 8310              	.LBB1602:
 8311              		.loc 31 68 24 is_stmt 0 view .LVU2233
 8312 0024 00F58152 		add	r2, r0, #4128
 8313 0028 5360     		str	r3, [r2, #4]	@ float
 8314 002a 00F58152 		add	r2, r0, #4128
 8315 002e D360     		str	r3, [r2, #12]	@ float
 8316              	.LVL588:
 8317              		.loc 31 68 24 view .LVU2234
 8318              	.LBE1602:
 8319              	.LBE1601:
 8320              	.LBE1600:
 8321              	.LBE1599:
 8322              	.LBE1607:
 8323              	.LBE1609:
 8324              	.LBE1611:
 8325              	.LBE1642:
 8326              	.LBE1742:
 8327              	.LBE1758:
 8328              	.LBE1773:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8329              		.loc 15 110 16 is_stmt 1 view .LVU2235
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8330              		.loc 15 110 16 view .LVU2236
 8331              	.LBB1774:
 8332              	.LBB1759:
 8333              	.LBB1743:
 8334              	.LBB1643:
 8335              	.LBB1612:
 8336              	.LBB1610:
 8337              	.LBB1608:
 8338              	.LBB1606:
 8339              	.LBB1605:
 8340              		.loc 31 68 5 view .LVU2237
 8341              	.LBB1604:
 8342              	.LBB1603:
 8343              		.loc 31 68 24 is_stmt 0 view .LVU2238
 8344 0030 00F58152 		add	r2, r0, #4128
 8345 0034 5361     		str	r3, [r2, #20]	@ float
 8346 0036 00F58152 		add	r2, r0, #4128
 8347 003a D361     		str	r3, [r2, #28]	@ float
ARM GAS  /tmp/ccUsbZWH.s 			page 271


 8348              	.LVL589:
 8349              		.loc 31 68 24 view .LVU2239
 8350              	.LBE1603:
 8351              	.LBE1604:
 8352              	.LBE1605:
 8353              	.LBE1606:
 8354              	.LBE1608:
 8355              	.LBE1610:
 8356              	.LBE1612:
 8357              	.LBE1643:
 8358              	.LBE1743:
 8359              	.LBE1759:
 8360              	.LBE1774:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8361              		.loc 15 110 16 is_stmt 1 view .LVU2240
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8362              		.loc 15 110 16 view .LVU2241
 8363              	.LBB1775:
 8364              	.LBB1760:
 8365              	.LBB1744:
 8366              	.LBB1644:
 8367              	.LBB1613:
 8368              	.LBI1613:
  41:dsp/fx/pitch_shifter.h ****     ~PitchShifterClouds() {}
 8369              		.loc 14 41 5 view .LVU2242
 8370              	.LBB1614:
 8371              	.LBB1615:
 8372              	.LBI1615:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8373              		.loc 15 110 5 view .LVU2243
 8374              	.LBE1615:
 8375              	.LBE1614:
 8376              	.LBE1613:
 8377              	.LBE1644:
 8378              	.LBE1744:
 8379              	.LBE1760:
 8380              	.LBE1775:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8381              		.loc 15 110 16 view .LVU2244
 8382              	.LBB1776:
 8383              	.LBB1761:
 8384              	.LBB1745:
 8385              	.LBB1645:
 8386              	.LBB1628:
 8387              	.LBB1626:
 8388              	.LBB1624:
 8389              	.LBB1616:
 8390              	.LBB1617:
 8391              	.LBI1617:
 8392              		.loc 31 68 5 view .LVU2245
 8393              	.LBB1618:
 8394              	.LBB1619:
 8395              		.loc 31 68 24 is_stmt 0 view .LVU2246
 8396 003c 00F58352 		add	r2, r0, #4192
 8397 0040 9360     		str	r3, [r2, #8]	@ float
 8398 0042 00F58352 		add	r2, r0, #4192
 8399 0046 1361     		str	r3, [r2, #16]	@ float
ARM GAS  /tmp/ccUsbZWH.s 			page 272


 8400              	.LVL590:
 8401              		.loc 31 68 24 view .LVU2247
 8402              	.LBE1619:
 8403              	.LBE1618:
 8404              	.LBE1617:
 8405              	.LBE1616:
 8406              	.LBE1624:
 8407              	.LBE1626:
 8408              	.LBE1628:
 8409              	.LBE1645:
 8410              	.LBE1745:
 8411              	.LBE1761:
 8412              	.LBE1776:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8413              		.loc 15 110 16 is_stmt 1 view .LVU2248
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8414              		.loc 15 110 16 view .LVU2249
 8415              	.LBB1777:
 8416              	.LBB1762:
 8417              	.LBB1746:
 8418              	.LBB1646:
 8419              	.LBB1629:
 8420              	.LBB1627:
 8421              	.LBB1625:
 8422              	.LBB1623:
 8423              	.LBB1622:
 8424              		.loc 31 68 5 view .LVU2250
 8425              	.LBB1621:
 8426              	.LBB1620:
 8427              		.loc 31 68 24 is_stmt 0 view .LVU2251
 8428 0048 00F58352 		add	r2, r0, #4192
 8429 004c 9361     		str	r3, [r2, #24]	@ float
 8430 004e 00F58452 		add	r2, r0, #4224
 8431 0052 1360     		str	r3, [r2]	@ float
 8432              	.LVL591:
 8433              		.loc 31 68 24 view .LVU2252
 8434              	.LBE1620:
 8435              	.LBE1621:
 8436              	.LBE1622:
 8437              	.LBE1623:
 8438              	.LBE1625:
 8439              	.LBE1627:
 8440              	.LBE1629:
 8441              	.LBE1646:
 8442              	.LBE1746:
 8443              	.LBE1762:
 8444              	.LBE1777:
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8445              		.loc 15 110 16 is_stmt 1 view .LVU2253
 110:dsp/fx/fx_engine.h ****     ~FxEngine() {}
 8446              		.loc 15 110 16 view .LVU2254
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8447              		.loc 12 77 31 view .LVU2255
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8448              		.loc 12 77 31 view .LVU2256
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8449              		.loc 12 77 31 view .LVU2257
ARM GAS  /tmp/ccUsbZWH.s 			page 273


  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8450              		.loc 12 77 31 view .LVU2258
  77:dsp/granular_processor.h ****     ~GranularProcessorClouds() {}
 8451              		.loc 12 77 31 view .LVU2259
 8452              	.LBB1778:
 8453              	.LBB1763:
 8454              	.LBB1747:
 8455              	.LBB1647:
 8456              	.LBB1630:
 8457              	.LBI1630:
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 8458              		.loc 13 40 5 view .LVU2260
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 8459              		.loc 13 40 5 is_stmt 0 view .LVU2261
 8460              	.LBE1630:
 8461              	.LBB1631:
 8462              	.LBI1631:
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 8463              		.loc 13 40 5 is_stmt 1 view .LVU2262
  40:dsp/sample_rate_converter.h ****     ~SampleRateConverter() {}
 8464              		.loc 13 40 5 is_stmt 0 view .LVU2263
 8465              	.LBE1631:
 8466              	.LBE1647:
 8467              	.LBE1747:
 248:Nimbus.cpp    **** GranularProcessorClouds processor;
 8468              		.loc 24 248 25 view .LVU2264
 8469 0054 3246     		mov	r2, r6
 8470 0056 FFF7FEFF 		bl	__aeabi_atexit
 8471              	.LVL592:
 8472              	.LBB1748:
 8473              	.LBI1654:
  83:../../libdaisy/src/daisy_field.h ****     ~DaisyField() {}
 8474              		.loc 1 83 5 is_stmt 1 view .LVU2265
 8475              	.LBB1734:
 8476              	.LBB1680:
 8477              	.LBI1656:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 8478              		.loc 7 21 5 view .LVU2266
 8479              	.LBB1671:
 8480              	.LBB1663:
 8481              	.LBI1658:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 8482              		.loc 11 62 5 view .LVU2267
 8483              	.LBE1663:
 8484              	.LBE1671:
 8485              	.LBE1680:
 8486              	.LBB1681:
 8487              	.LBB1682:
 8488              	.LBB1683:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 8489              		.loc 5 16 19 is_stmt 0 view .LVU2268
 8490 005a 214B     		ldr	r3, .L453+20
 8491              	.LBE1683:
 8492              	.LBE1682:
 8493              	.LBE1681:
 8494              	.LBB1695:
 8495              	.LBB1678:
ARM GAS  /tmp/ccUsbZWH.s 			page 274


  30:../../libdaisy/src/dev/leddriver.h **** {
 8496              		.loc 25 30 7 view .LVU2269
 8497 005c 3946     		mov	r1, r7
 8498 005e 4FF40072 		mov	r2, #512
 8499 0062 04F27240 		addw	r0, r4, #1138
 8500              	.LBE1678:
 8501              	.LBE1695:
 8502              	.LBB1696:
 8503              	.LBB1693:
 8504              	.LBB1691:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 8505              		.loc 5 16 19 view .LVU2270
 8506 0066 E363     		str	r3, [r4, #60]
 8507              	.LBE1691:
 8508              	.LBE1693:
 8509              	.LBE1696:
 8510              	.LBB1697:
 8511              	.LBB1672:
 8512              	.LBB1664:
 8513              	.LBB1662:
 8514              	.LBB1661:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 8515              		.loc 11 62 35 view .LVU2271
 8516 0068 6561     		str	r5, [r4, #20]
 8517              	.LVL593:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 8518              		.loc 11 62 35 view .LVU2272
 8519              	.LBE1661:
 8520              	.LBE1662:
 8521              	.LBE1664:
 8522              	.LBB1665:
 8523              	.LBI1665:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 8524              		.loc 10 84 5 is_stmt 1 view .LVU2273
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 8525              		.loc 10 84 5 is_stmt 0 view .LVU2274
 8526              	.LBE1665:
 8527              	.LBB1666:
 8528              	.LBI1666:
 8529              		.file 32 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
ARM GAS  /tmp/ccUsbZWH.s 			page 275


  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
ARM GAS  /tmp/ccUsbZWH.s 			page 276


  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 8530              		.loc 32 83 5 is_stmt 1 view .LVU2275
 8531              	.LBB1667:
 8532              	.LBB1668:
 8533              		.loc 32 83 33 is_stmt 0 view .LVU2276
 8534 006a 2562     		str	r5, [r4, #32]
 8535              	.LVL594:
 8536              		.loc 32 83 33 view .LVU2277
 8537              	.LBE1668:
 8538              	.LBE1667:
 8539              	.LBE1666:
 8540              	.LBB1669:
 8541              	.LBI1669:
  40:../../libdaisy/src/hid/usb.h **** 
 8542              		.loc 9 40 5 is_stmt 1 view .LVU2278
  40:../../libdaisy/src/hid/usb.h **** 
 8543              		.loc 9 40 5 is_stmt 0 view .LVU2279
 8544              	.LBE1669:
 8545              	.LBB1670:
 8546              	.LBI1670:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 8547              		.loc 8 58 5 is_stmt 1 view .LVU2280
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 8548              		.loc 8 58 5 is_stmt 0 view .LVU2281
 8549              	.LBE1670:
 8550              	.LBE1672:
 8551              	.LBE1697:
 8552              	.LBB1698:
 8553              	.LBI1681:
  16:../../libdaisy/src/hid/disp/oled_display.h ****     virtual ~OledDisplay() {}
 8554              		.loc 5 16 5 is_stmt 1 view .LVU2282
 8555              	.LBB1694:
 8556              	.LBB1692:
 8557              	.LBB1684:
 8558              	.LBI1684:
 218:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplayImpl() {}
 8559              		.loc 6 218 5 view .LVU2283
 8560              	.LBB1685:
 8561              	.LBI1685:
  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 8562              		.loc 6 22 5 view .LVU2284
  22:../../libdaisy/src/hid/disp/display.h ****     virtual ~OneBitGraphicsDisplay() {}
 8563              		.loc 6 22 5 is_stmt 0 view .LVU2285
 8564              	.LBE1685:
 8565              	.LBE1684:
 8566              	.LBB1686:
 8567              	.LBI1686:
 132:../../libdaisy/src/dev/oled_ssd130x.h **** {
 8568              		.loc 26 132 7 is_stmt 1 view .LVU2286
ARM GAS  /tmp/ccUsbZWH.s 			page 277


 8569              	.LBB1687:
 8570              	.LBI1687:
  60:../../libdaisy/src/dev/oled_ssd130x.h **** {
 8571              		.loc 26 60 7 view .LVU2287
 8572              	.LBB1688:
 8573              	.LBI1688:
 8574              		.file 33 "../../libdaisy/src/per/spi.h"
   1:../../libdaisy/src/per/spi.h **** #pragma once
   2:../../libdaisy/src/per/spi.h **** #ifndef DSY_SPI_H
   3:../../libdaisy/src/per/spi.h **** #define DSY_SPI_H
   4:../../libdaisy/src/per/spi.h **** 
   5:../../libdaisy/src/per/spi.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/spi.h **** 
   7:../../libdaisy/src/per/spi.h **** /* TODO:
   8:../../libdaisy/src/per/spi.h **** - Add documentation
   9:../../libdaisy/src/per/spi.h **** - Add reception
  10:../../libdaisy/src/per/spi.h **** - Add IT
  11:../../libdaisy/src/per/spi.h **** - Add DMA
  12:../../libdaisy/src/per/spi.h **** */
  13:../../libdaisy/src/per/spi.h **** 
  14:../../libdaisy/src/per/spi.h **** namespace daisy
  15:../../libdaisy/src/per/spi.h **** {
  16:../../libdaisy/src/per/spi.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/spi.h **** @{
  18:../../libdaisy/src/per/spi.h **** */
  19:../../libdaisy/src/per/spi.h **** 
  20:../../libdaisy/src/per/spi.h **** /**  Handler for serial peripheral interface */
  21:../../libdaisy/src/per/spi.h **** class SpiHandle
  22:../../libdaisy/src/per/spi.h **** {
  23:../../libdaisy/src/per/spi.h ****   public:
  24:../../libdaisy/src/per/spi.h ****     struct Config
  25:../../libdaisy/src/per/spi.h ****     {
  26:../../libdaisy/src/per/spi.h ****         enum class Peripheral
  27:../../libdaisy/src/per/spi.h ****         {
  28:../../libdaisy/src/per/spi.h ****             SPI_1,
  29:../../libdaisy/src/per/spi.h ****             SPI_2,
  30:../../libdaisy/src/per/spi.h ****             SPI_3,
  31:../../libdaisy/src/per/spi.h ****             SPI_4,
  32:../../libdaisy/src/per/spi.h ****             SPI_5,
  33:../../libdaisy/src/per/spi.h ****             SPI_6,
  34:../../libdaisy/src/per/spi.h ****         };
  35:../../libdaisy/src/per/spi.h **** 
  36:../../libdaisy/src/per/spi.h ****         enum class Mode
  37:../../libdaisy/src/per/spi.h ****         {
  38:../../libdaisy/src/per/spi.h ****             MASTER,
  39:../../libdaisy/src/per/spi.h ****             SLAVE,
  40:../../libdaisy/src/per/spi.h ****         };
  41:../../libdaisy/src/per/spi.h **** 
  42:../../libdaisy/src/per/spi.h ****         enum class Direction
  43:../../libdaisy/src/per/spi.h ****         {
  44:../../libdaisy/src/per/spi.h ****             TWO_LINES,
  45:../../libdaisy/src/per/spi.h ****             TWO_LINES_TX_ONLY,
  46:../../libdaisy/src/per/spi.h ****             TWO_LINES_RX_ONLY,
  47:../../libdaisy/src/per/spi.h ****             ONE_LINE,
  48:../../libdaisy/src/per/spi.h ****         };
  49:../../libdaisy/src/per/spi.h **** 
  50:../../libdaisy/src/per/spi.h ****         enum class ClockPolarity
ARM GAS  /tmp/ccUsbZWH.s 			page 278


  51:../../libdaisy/src/per/spi.h ****         {
  52:../../libdaisy/src/per/spi.h ****             LOW,
  53:../../libdaisy/src/per/spi.h ****             HIGH,
  54:../../libdaisy/src/per/spi.h ****         };
  55:../../libdaisy/src/per/spi.h **** 
  56:../../libdaisy/src/per/spi.h ****         enum class ClockPhase
  57:../../libdaisy/src/per/spi.h ****         {
  58:../../libdaisy/src/per/spi.h ****             ONE_EDGE,
  59:../../libdaisy/src/per/spi.h ****             TWO_EDGE,
  60:../../libdaisy/src/per/spi.h ****         };
  61:../../libdaisy/src/per/spi.h **** 
  62:../../libdaisy/src/per/spi.h ****         enum class NSS
  63:../../libdaisy/src/per/spi.h ****         {
  64:../../libdaisy/src/per/spi.h ****             SOFT,
  65:../../libdaisy/src/per/spi.h ****             HARD_INPUT,
  66:../../libdaisy/src/per/spi.h ****             HARD_OUTPUT,
  67:../../libdaisy/src/per/spi.h ****         };
  68:../../libdaisy/src/per/spi.h **** 
  69:../../libdaisy/src/per/spi.h ****         enum class BaudPrescaler
  70:../../libdaisy/src/per/spi.h ****         {
  71:../../libdaisy/src/per/spi.h ****             PS_2,
  72:../../libdaisy/src/per/spi.h ****             PS_4,
  73:../../libdaisy/src/per/spi.h ****             PS_8,
  74:../../libdaisy/src/per/spi.h ****             PS_16,
  75:../../libdaisy/src/per/spi.h ****             PS_32,
  76:../../libdaisy/src/per/spi.h ****             PS_64,
  77:../../libdaisy/src/per/spi.h ****             PS_128,
  78:../../libdaisy/src/per/spi.h ****             PS_256,
  79:../../libdaisy/src/per/spi.h ****         };
  80:../../libdaisy/src/per/spi.h **** 
  81:../../libdaisy/src/per/spi.h ****         struct
  82:../../libdaisy/src/per/spi.h ****         {
  83:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin sclk; /**< & */
  84:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin miso; /**< & */
  85:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin mosi; /**< & */
  86:../../libdaisy/src/per/spi.h ****             dsy_gpio_pin nss;  /**< & */
  87:../../libdaisy/src/per/spi.h ****         } pin_config;
  88:../../libdaisy/src/per/spi.h **** 
  89:../../libdaisy/src/per/spi.h ****         Peripheral    periph;
  90:../../libdaisy/src/per/spi.h ****         Mode          mode;
  91:../../libdaisy/src/per/spi.h ****         Direction     direction;
  92:../../libdaisy/src/per/spi.h ****         unsigned long datasize;
  93:../../libdaisy/src/per/spi.h ****         ClockPolarity clock_polarity;
  94:../../libdaisy/src/per/spi.h ****         ClockPhase    clock_phase;
  95:../../libdaisy/src/per/spi.h ****         NSS           nss;
  96:../../libdaisy/src/per/spi.h ****         BaudPrescaler baud_prescaler;
  97:../../libdaisy/src/per/spi.h ****     };
  98:../../libdaisy/src/per/spi.h **** 
  99:../../libdaisy/src/per/spi.h ****     SpiHandle() : pimpl_(nullptr) {}
 8575              		.loc 33 99 5 view .LVU2288
 8576              	.LBB1689:
 8577              	.LBB1690:
 8578              		.loc 33 99 33 is_stmt 0 view .LVU2289
 8579 006c 6564     		str	r5, [r4, #68]
 8580              	.LVL595:
 8581              		.loc 33 99 33 view .LVU2290
 8582              	.LBE1690:
ARM GAS  /tmp/ccUsbZWH.s 			page 279


 8583              	.LBE1689:
 8584              	.LBE1688:
 8585              	.LBE1687:
 8586              	.LBE1686:
 8587              	.LBE1692:
 8588              	.LBE1694:
 8589              	.LBE1698:
 8590              	.LBB1699:
 8591              	.LBI1699:
  21:../../libdaisy/src/hid/gatein.h ****     /** GateIn~
 8592              		.loc 4 21 5 is_stmt 1 view .LVU2291
  21:../../libdaisy/src/hid/gatein.h ****     /** GateIn~
 8593              		.loc 4 21 5 is_stmt 0 view .LVU2292
 8594              	.LBE1699:
 8595              	.LBB1700:
 8596              	.LBI1673:
  30:../../libdaisy/src/dev/leddriver.h **** {
 8597              		.loc 25 30 7 is_stmt 1 view .LVU2293
 8598              	.LBB1679:
 8599              	.LBB1675:
 8600              	.LBI1675:
 8601              		.file 34 "../../libdaisy/src/per/i2c.h"
   1:../../libdaisy/src/per/i2c.h **** #pragma once
   2:../../libdaisy/src/per/i2c.h **** #include "daisy_core.h"
   3:../../libdaisy/src/per/i2c.h **** 
   4:../../libdaisy/src/per/i2c.h **** namespace daisy
   5:../../libdaisy/src/per/i2c.h **** {
   6:../../libdaisy/src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libdaisy/src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libdaisy/src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libdaisy/src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libdaisy/src/per/i2c.h ****  *  
  11:../../libdaisy/src/per/i2c.h ****  *      // setup the configuration
  12:../../libdaisy/src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libdaisy/src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libdaisy/src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libdaisy/src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libdaisy/src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libdaisy/src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libdaisy/src/per/i2c.h ****  */
  24:../../libdaisy/src/per/i2c.h **** class I2CHandle
  25:../../libdaisy/src/per/i2c.h **** {
  26:../../libdaisy/src/per/i2c.h ****   public:
  27:../../libdaisy/src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libdaisy/src/per/i2c.h ****     struct Config
  29:../../libdaisy/src/per/i2c.h ****     {
  30:../../libdaisy/src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libdaisy/src/per/i2c.h ****         enum class Mode
  32:../../libdaisy/src/per/i2c.h ****         {
  33:../../libdaisy/src/per/i2c.h ****             I2C_MASTER,
  34:../../libdaisy/src/per/i2c.h ****             I2C_SLAVE,
  35:../../libdaisy/src/per/i2c.h ****         };
ARM GAS  /tmp/ccUsbZWH.s 			page 280


  36:../../libdaisy/src/per/i2c.h **** 
  37:../../libdaisy/src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libdaisy/src/per/i2c.h ****         enum class Peripheral
  39:../../libdaisy/src/per/i2c.h ****         {
  40:../../libdaisy/src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libdaisy/src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libdaisy/src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libdaisy/src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libdaisy/src/per/i2c.h ****         };
  45:../../libdaisy/src/per/i2c.h **** 
  46:../../libdaisy/src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libdaisy/src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libdaisy/src/per/i2c.h ****          */
  49:../../libdaisy/src/per/i2c.h ****         enum class Speed
  50:../../libdaisy/src/per/i2c.h ****         {
  51:../../libdaisy/src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libdaisy/src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libdaisy/src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libdaisy/src/per/i2c.h ****         };
  55:../../libdaisy/src/per/i2c.h **** 
  56:../../libdaisy/src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libdaisy/src/per/i2c.h ****         struct
  58:../../libdaisy/src/per/i2c.h ****         {
  59:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libdaisy/src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libdaisy/src/per/i2c.h **** 
  63:../../libdaisy/src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libdaisy/src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libdaisy/src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libdaisy/src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libdaisy/src/per/i2c.h ****     };
  68:../../libdaisy/src/per/i2c.h **** 
  69:../../libdaisy/src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libdaisy/src/per/i2c.h ****     enum class Result
  71:../../libdaisy/src/per/i2c.h ****     {
  72:../../libdaisy/src/per/i2c.h ****         OK, /**< & */
  73:../../libdaisy/src/per/i2c.h ****         ERR /**< & */
  74:../../libdaisy/src/per/i2c.h ****     };
  75:../../libdaisy/src/per/i2c.h **** 
  76:../../libdaisy/src/per/i2c.h ****     enum class Direction
  77:../../libdaisy/src/per/i2c.h ****     {
  78:../../libdaisy/src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libdaisy/src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libdaisy/src/per/i2c.h ****     };
  81:../../libdaisy/src/per/i2c.h **** 
  82:../../libdaisy/src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 8602              		.loc 34 82 5 view .LVU2294
 8603              	.LBB1676:
 8604              	.LBB1677:
 8605              		.loc 34 82 33 is_stmt 0 view .LVU2295
 8606 006e C4F85C54 		str	r5, [r4, #1116]
 8607              	.LVL596:
 8608              		.loc 34 82 33 view .LVU2296
 8609              	.LBE1677:
 8610              	.LBE1676:
 8611              	.LBE1675:
ARM GAS  /tmp/ccUsbZWH.s 			page 281


  30:../../libdaisy/src/dev/leddriver.h **** {
 8612              		.loc 25 30 7 view .LVU2297
 8613 0072 FFF7FEFF 		bl	memcpy
 8614              	.LVL597:
  30:../../libdaisy/src/dev/leddriver.h **** {
 8615              		.loc 25 30 7 view .LVU2298
 8616              	.LBE1679:
 8617              	.LBE1700:
 8618              	.LBE1734:
 8619              	.LBE1748:
 8620              	.LBE1763:
 8621              	.LBE1778:
  83:../../libdaisy/src/daisy_field.h ****     ~DaisyField() {}
 8622              		.loc 1 83 18 is_stmt 1 view .LVU2299
  83:../../libdaisy/src/daisy_field.h ****     ~DaisyField() {}
 8623              		.loc 1 83 18 view .LVU2300
  83:../../libdaisy/src/daisy_field.h ****     ~DaisyField() {}
 8624              		.loc 1 83 18 view .LVU2301
 8625              	.LBB1779:
 8626              	.LBB1764:
 8627              	.LBB1749:
 8628              	.LBB1735:
 8629              	.LBB1701:
 8630              	.LBI1701:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 8631              		.loc 3 82 5 view .LVU2302
 8632              	.LBB1702:
 8633              	.LBB1703:
 8634              	.LBB1704:
 8635              	.LBI1704:
 8636              		.file 35 "../../libdaisy/src/per/uart.h"
   1:../../libdaisy/src/per/uart.h **** /* 
   2:../../libdaisy/src/per/uart.h **** TODO
   3:../../libdaisy/src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy/src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy/src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy/src/per/uart.h **** */
   7:../../libdaisy/src/per/uart.h **** 
   8:../../libdaisy/src/per/uart.h **** #pragma once
   9:../../libdaisy/src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy/src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy/src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy/src/per/uart.h **** 
  13:../../libdaisy/src/per/uart.h **** 
  14:../../libdaisy/src/per/uart.h **** namespace daisy
  15:../../libdaisy/src/per/uart.h **** {
  16:../../libdaisy/src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy/src/per/uart.h ****     @{
  18:../../libdaisy/src/per/uart.h ****     */
  19:../../libdaisy/src/per/uart.h **** 
  20:../../libdaisy/src/per/uart.h **** /** 
  21:../../libdaisy/src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy/src/per/uart.h ****     @author shensley
  23:../../libdaisy/src/per/uart.h ****     @date March 2020
  24:../../libdaisy/src/per/uart.h ****     */
  25:../../libdaisy/src/per/uart.h **** class UartHandler
  26:../../libdaisy/src/per/uart.h **** {
ARM GAS  /tmp/ccUsbZWH.s 			page 282


  27:../../libdaisy/src/per/uart.h ****   public:
  28:../../libdaisy/src/per/uart.h ****     struct Config
  29:../../libdaisy/src/per/uart.h ****     {
  30:../../libdaisy/src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy/src/per/uart.h ****         {
  32:../../libdaisy/src/per/uart.h ****             USART_1,
  33:../../libdaisy/src/per/uart.h ****             USART_2,
  34:../../libdaisy/src/per/uart.h ****             USART_3,
  35:../../libdaisy/src/per/uart.h ****             UART_4,
  36:../../libdaisy/src/per/uart.h ****             UART_5,
  37:../../libdaisy/src/per/uart.h ****             USART_6,
  38:../../libdaisy/src/per/uart.h ****             UART_7,
  39:../../libdaisy/src/per/uart.h ****             UART_8,
  40:../../libdaisy/src/per/uart.h ****             LPUART_1,
  41:../../libdaisy/src/per/uart.h ****         };
  42:../../libdaisy/src/per/uart.h **** 
  43:../../libdaisy/src/per/uart.h ****         enum class StopBits
  44:../../libdaisy/src/per/uart.h ****         {
  45:../../libdaisy/src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy/src/per/uart.h ****             BITS_1,
  47:../../libdaisy/src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy/src/per/uart.h ****             BITS_2,
  49:../../libdaisy/src/per/uart.h ****         };
  50:../../libdaisy/src/per/uart.h **** 
  51:../../libdaisy/src/per/uart.h ****         enum class Parity
  52:../../libdaisy/src/per/uart.h ****         {
  53:../../libdaisy/src/per/uart.h ****             NONE,
  54:../../libdaisy/src/per/uart.h ****             EVEN,
  55:../../libdaisy/src/per/uart.h ****             ODD,
  56:../../libdaisy/src/per/uart.h ****         };
  57:../../libdaisy/src/per/uart.h **** 
  58:../../libdaisy/src/per/uart.h ****         enum class Mode
  59:../../libdaisy/src/per/uart.h ****         {
  60:../../libdaisy/src/per/uart.h ****             RX,
  61:../../libdaisy/src/per/uart.h ****             TX,
  62:../../libdaisy/src/per/uart.h ****             TX_RX,
  63:../../libdaisy/src/per/uart.h ****         };
  64:../../libdaisy/src/per/uart.h **** 
  65:../../libdaisy/src/per/uart.h ****         enum class WordLength
  66:../../libdaisy/src/per/uart.h ****         {
  67:../../libdaisy/src/per/uart.h ****             BITS_7,
  68:../../libdaisy/src/per/uart.h ****             BITS_8,
  69:../../libdaisy/src/per/uart.h ****             BITS_9,
  70:../../libdaisy/src/per/uart.h ****         };
  71:../../libdaisy/src/per/uart.h **** 
  72:../../libdaisy/src/per/uart.h ****         struct
  73:../../libdaisy/src/per/uart.h ****         {
  74:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy/src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy/src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy/src/per/uart.h **** 
  78:../../libdaisy/src/per/uart.h ****         Peripheral periph;
  79:../../libdaisy/src/per/uart.h ****         StopBits   stopbits;
  80:../../libdaisy/src/per/uart.h ****         Parity     parity;
  81:../../libdaisy/src/per/uart.h ****         Mode       mode;
  82:../../libdaisy/src/per/uart.h ****         WordLength wordlength;
  83:../../libdaisy/src/per/uart.h ****         uint32_t   baudrate;
ARM GAS  /tmp/ccUsbZWH.s 			page 283


  84:../../libdaisy/src/per/uart.h ****     };
  85:../../libdaisy/src/per/uart.h **** 
  86:../../libdaisy/src/per/uart.h **** 
  87:../../libdaisy/src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 8637              		.loc 35 87 5 view .LVU2303
 8638              	.LBE1704:
 8639              	.LBB1707:
 8640              	.LBB1708:
 8641              	.LBB1709:
 8642              	.LBB1710:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 8643              		.loc 3 35 20 is_stmt 0 view .LVU2304
 8644 0076 49F6BC03 		movw	r3, #39100
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 8645              		.loc 3 36 20 view .LVU2305
 8646 007a B7F80022 		ldrh	r2, [r7, #512]	@ unaligned
 8647              	.LBE1710:
 8648              	.LBE1709:
 8649              	.LBE1708:
 8650              	.LBE1707:
 8651              	.LBE1703:
 8652              	.LBE1702:
 8653              	.LBE1701:
 8654              	.LBE1735:
 8655              	.LBE1749:
 249:Nimbus.cpp    **** DaisyField              field;
 8656              		.loc 24 249 25 view .LVU2306
 8657 007e 1949     		ldr	r1, .L453+24
 8658 0080 2046     		mov	r0, r4
 8659              	.LBB1750:
 8660              	.LBB1736:
 8661              	.LBB1731:
 8662              	.LBB1730:
 8663              	.LBB1729:
 8664              	.LBB1717:
 8665              	.LBB1715:
 8666              	.LBB1713:
 8667              	.LBB1711:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 8668              		.loc 3 35 20 view .LVU2307
 8669 0082 E550     		str	r5, [r4, r3]
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 8670              		.loc 3 36 20 view .LVU2308
 8671 0084 49F6C003 		movw	r3, #39104
 8672              	.LBE1711:
 8673              	.LBE1713:
 8674              	.LBE1715:
 8675              	.LBE1717:
 8676              	.LBB1718:
 8677              	.LBB1705:
 8678              	.LBB1706:
 8679              		.loc 35 87 35 view .LVU2309
 8680 0088 C4F81458 		str	r5, [r4, #2068]
 8681              	.LVL598:
 8682              		.loc 35 87 35 view .LVU2310
 8683              	.LBE1706:
 8684              	.LBE1705:
ARM GAS  /tmp/ccUsbZWH.s 			page 284


 8685              	.LBE1718:
 8686              	.LBB1719:
 8687              	.LBI1719:
 8688              		.file 36 "../../libdaisy/src/util/ringbuffer.h"
   1:../../libdaisy/src/util/ringbuffer.h **** #pragma once
   2:../../libdaisy/src/util/ringbuffer.h **** #ifndef DSY_RINGBUFFER_H
   3:../../libdaisy/src/util/ringbuffer.h **** #define DSY_RINGBUFFER_H
   4:../../libdaisy/src/util/ringbuffer.h **** 
   5:../../libdaisy/src/util/ringbuffer.h **** #include <algorithm>
   6:../../libdaisy/src/util/ringbuffer.h **** 
   7:../../libdaisy/src/util/ringbuffer.h **** namespace daisy
   8:../../libdaisy/src/util/ringbuffer.h **** {
   9:../../libdaisy/src/util/ringbuffer.h **** /** @addtogroup utility
  10:../../libdaisy/src/util/ringbuffer.h ****     @{
  11:../../libdaisy/src/util/ringbuffer.h **** */
  12:../../libdaisy/src/util/ringbuffer.h **** 
  13:../../libdaisy/src/util/ringbuffer.h **** /**
  14:../../libdaisy/src/util/ringbuffer.h **** Utility Ring Buffer \n 
  15:../../libdaisy/src/util/ringbuffer.h **** imported from pichenettes/stmlib
  16:../../libdaisy/src/util/ringbuffer.h **** */
  17:../../libdaisy/src/util/ringbuffer.h **** template <typename T, size_t size>
  18:../../libdaisy/src/util/ringbuffer.h **** class RingBuffer
  19:../../libdaisy/src/util/ringbuffer.h **** {
  20:../../libdaisy/src/util/ringbuffer.h ****   public:
  21:../../libdaisy/src/util/ringbuffer.h ****     RingBuffer() {}
 8689              		.loc 36 21 5 is_stmt 1 view .LVU2311
 8690              		.loc 36 21 5 is_stmt 0 view .LVU2312
 8691              	.LBE1719:
 8692              	.LBB1720:
 8693              	.LBI1707:
  84:../../libdaisy/src/hid/midi.h **** 
  85:../../libdaisy/src/hid/midi.h ****     struct Config
 8694              		.loc 3 85 12 is_stmt 1 view .LVU2313
 8695              	.LBB1716:
 8696              	.LBI1708:
  33:../../libdaisy/src/hid/midi.h ****         {
 8697              		.loc 3 33 9 view .LVU2314
 8698              	.LBB1714:
 8699              	.LBB1712:
  35:../../libdaisy/src/hid/midi.h ****             rx     = {DSY_GPIOB, 7};
 8700              		.loc 3 35 13 view .LVU2315
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 8701              		.loc 3 36 13 view .LVU2316
  36:../../libdaisy/src/hid/midi.h ****             tx     = {DSY_GPIOB, 6};
 8702              		.loc 3 36 20 is_stmt 0 view .LVU2317
 8703 008c E252     		strh	r2, [r4, r3]	@ unaligned
  37:../../libdaisy/src/hid/midi.h ****         }
 8704              		.loc 3 37 13 is_stmt 1 view .LVU2318
  37:../../libdaisy/src/hid/midi.h ****         }
 8705              		.loc 3 37 20 is_stmt 0 view .LVU2319
 8706 008e 49F6C203 		movw	r3, #39106
 8707 0092 B7F80222 		ldrh	r2, [r7, #514]	@ unaligned
 8708 0096 E252     		strh	r2, [r4, r3]	@ unaligned
 8709              	.LVL599:
  37:../../libdaisy/src/hid/midi.h ****         }
 8710              		.loc 3 37 20 view .LVU2320
 8711              	.LBE1712:
ARM GAS  /tmp/ccUsbZWH.s 			page 285


 8712              	.LBE1714:
 8713              	.LBE1716:
 8714              	.LBE1720:
 8715              	.LBB1721:
 8716              	.LBI1721:
  24:../../libdaisy/src/hid/midi.h ****     ~MidiUartTransport() {}
 8717              		.loc 3 24 5 is_stmt 1 view .LVU2321
 8718              	.LBB1722:
 8719              	.LBI1722:
 8720              		.loc 35 87 5 view .LVU2322
 8721              	.LBB1723:
 8722              	.LBB1724:
 8723              		.loc 35 87 35 is_stmt 0 view .LVU2323
 8724 0098 49F6C403 		movw	r3, #39108
 8725              	.LBE1724:
 8726              	.LBE1723:
 8727              	.LBE1722:
 8728              	.LBE1721:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 8729              		.loc 3 82 19 view .LVU2324
 8730 009c 124A     		ldr	r2, .L453+28
 8731              	.LBB1728:
 8732              	.LBB1727:
 8733              	.LBB1726:
 8734              	.LBB1725:
 8735              		.loc 35 87 35 view .LVU2325
 8736 009e E550     		str	r5, [r4, r3]
 8737              	.LBE1725:
 8738              	.LBE1726:
 8739              	.LBE1727:
 8740              	.LBE1728:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 8741              		.loc 3 82 19 view .LVU2326
 8742 00a0 49F6C803 		movw	r3, #39112
 8743 00a4 E250     		str	r2, [r4, r3]
 8744 00a6 49F6CC03 		movw	r3, #39116
 8745 00aa 4FF60F02 		movw	r2, #63503
 8746 00ae E252     		strh	r2, [r4, r3]	@ movhi
 8747 00b0 49F6CE03 		movw	r3, #39118
 8748 00b4 0722     		movs	r2, #7
 8749 00b6 E254     		strb	r2, [r4, r3]
 8750              	.LVL600:
  82:../../libdaisy/src/hid/midi.h ****     ~MidiHandler() {}
 8751              		.loc 3 82 19 view .LVU2327
 8752              	.LBE1729:
 8753              	.LBE1730:
 8754              	.LBE1731:
 8755              	.LBB1732:
 8756              	.LBI1732:
  48:../../libdaisy/src/dev/sr_4021.h ****     ~ShiftRegister4021() {}
 8757              		.loc 2 48 5 is_stmt 1 view .LVU2328
  48:../../libdaisy/src/dev/sr_4021.h ****     ~ShiftRegister4021() {}
 8758              		.loc 2 48 5 is_stmt 0 view .LVU2329
 8759              	.LBE1732:
 8760              	.LBE1736:
 8761              	.LBE1750:
 249:Nimbus.cpp    **** DaisyField              field;
ARM GAS  /tmp/ccUsbZWH.s 			page 286


 8762              		.loc 24 249 25 view .LVU2330
 8763 00b8 3246     		mov	r2, r6
 8764 00ba FFF7FEFF 		bl	__aeabi_atexit
 8765              	.LVL601:
 258:Nimbus.cpp    **** ParamControl param_controls[NUM_PARAMS];
 8766              		.loc 24 258 39 is_stmt 1 view .LVU2331
 258:Nimbus.cpp    **** ParamControl param_controls[NUM_PARAMS];
 8767              		.loc 24 258 14 is_stmt 0 view .LVU2332
 8768 00be 3246     		mov	r2, r6
 8769 00c0 2846     		mov	r0, r5
 8770 00c2 0A49     		ldr	r1, .L453+32
 8771              	.LBE1764:
 8772              	.LBE1779:
 8773              		.loc 24 1059 1 view .LVU2333
 8774 00c4 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 8775              		.cfi_restore 14
 8776              		.cfi_restore 7
 8777              		.cfi_restore 6
 8778              		.cfi_restore 5
 8779              		.cfi_restore 4
 8780              		.cfi_restore 3
 8781              		.cfi_def_cfa_offset 0
 8782              	.LBB1780:
 8783              	.LBB1765:
 258:Nimbus.cpp    **** ParamControl param_controls[NUM_PARAMS];
 8784              		.loc 24 258 14 view .LVU2334
 8785 00c8 FFF7FEBF 		b	__aeabi_atexit
 8786              	.LVL602:
 8787              	.L454:
 8788              		.align	2
 8789              	.L453:
 8790 00cc 00000000 		.word	processor
 8791 00d0 00000000 		.word	_ZN23GranularProcessorCloudsD1Ev
 8792 00d4 00000000 		.word	__dso_handle
 8793 00d8 00000000 		.word	field
 8794 00dc 00000000 		.word	.LANCHOR16
 8795 00e0 08000000 		.word	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE+8
 8796 00e4 00000000 		.word	_ZN5daisy10DaisyFieldD1Ev
 8797 00e8 80707FF0 		.word	-260083584
 8798 00ec 00000000 		.word	__tcf_0
 8799              	.LBE1765:
 8800              	.LBE1780:
 8801              		.cfi_endproc
 8802              	.LFE5341:
 8804              		.section	.init_array,"aw",%init_array
 8805              		.align	2
 8806 0000 00000000 		.word	_GLOBAL__sub_I_processor(target1)
 8807              		.weak	_ZTSN5daisy21OneBitGraphicsDisplayE
 8808              		.section	.rodata._ZTSN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTSN5daisy21OneBitGraphicsDis
 8811              	_ZTSN5daisy21OneBitGraphicsDisplayE:
 8812 0000 4E356461 		.ascii	"N5daisy21OneBitGraphicsDisplayE\000"
 8812      69737932 
 8812      314F6E65 
 8812      42697447 
 8812      72617068 
 8813              		.weak	_ZTIN5daisy21OneBitGraphicsDisplayE
 8814              		.section	.rodata._ZTIN5daisy21OneBitGraphicsDisplayE,"aG",%progbits,_ZTIN5daisy21OneBitGraphicsDis
ARM GAS  /tmp/ccUsbZWH.s 			page 287


 8815              		.align	2
 8818              	_ZTIN5daisy21OneBitGraphicsDisplayE:
 8819 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 8820 0004 00000000 		.word	_ZTSN5daisy21OneBitGraphicsDisplayE
 8821              		.weak	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 8822              		.section	.rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 8825              	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 8826 0000 4E356461 		.ascii	"N5daisy25OneBitGraphicsDisplayImplINS_11OledDisplay"
 8826      69737932 
 8826      354F6E65 
 8826      42697447 
 8826      72617068 
 8827 0033 494E535F 		.ascii	"INS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpi"
 8827      31335353 
 8827      44313330 
 8827      78447269 
 8827      76657249 
 8828 0066 5472616E 		.ascii	"TransportEEEEEEE\000"
 8828      73706F72 
 8828      74454545 
 8828      45454545 
 8828      00
 8829              		.weak	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 8830              		.section	.rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128E
 8831              		.align	2
 8834              	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4
 8835 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 8836 0004 00000000 		.word	_ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 8837 0008 00000000 		.word	_ZTIN5daisy21OneBitGraphicsDisplayE
 8838              		.weak	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 8839              		.section	.rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 8842              	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 8843 0000 4E356461 		.ascii	"N5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64E"
 8843      69737931 
 8843      314F6C65 
 8843      64446973 
 8843      706C6179 
 8844 0033 4E535F32 		.ascii	"NS_24SSD130x4WireSpiTransportEEEEE\000"
 8844      34535344 
 8844      31333078 
 8844      34576972 
 8844      65537069 
 8845              		.weak	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 8846              		.section	.rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 8847              		.align	2
 8850              	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 8851 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 8852 0004 00000000 		.word	_ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 8853 0008 00000000 		.word	_ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24S
 8854              		.weak	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 8855              		.section	.rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransp
 8856              		.align	2
 8859              	_ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:
 8860 0000 00000000 		.word	0
 8861 0004 00000000 		.word	_ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
 8862 0008 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
 8863 000c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
ARM GAS  /tmp/ccUsbZWH.s 			page 288


 8864 0010 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Heig
 8865 0014 00000000 		.word	_ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5Widt
 8866 0018 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillE
 8867 001c 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawP
 8868 0020 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8869 0024 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8870 0028 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8871 002c 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8872 0030 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8873 0034 00000000 		.word	_ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD
 8874 0038 00000000 		.word	_ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6Updat
 8875              		.global	last_freeze_cv_update
 8876              		.global	scope_buffer
 8877              		.global	is_frozen_by_cv
 8878              		.global	is_frozen_by_button
 8879              		.global	is_shifted
 8880              		.global	is_bypassed
 8881              		.global	is_silenced
 8882              		.global	current_display_page
 8883              		.global	oled_led_update_gate
 8884              		.global	can_map
 8885              		.global	currently_mapping_cv
 8886              		.global	current_device_state
 8887              		.global	parameters
 8888              		.global	param_controls
 8889              		.global	param_val_changed_
 8890              		.global	cpu_usage_str
 8891              		.global	cpu_usage
 8892              		.global	block_ccm
 8893              		.global	block_mem
 8894              		.global	field
 8895              		.global	processor
 8896              		.section	.rodata
 8897              		.align	1
 8898              		.set	.LANCHOR16,. + 0
 8899              	.LC0:
 8900 0000 0000     		.short	0
 8901 0002 0100     		.short	1
 8902 0004 0100     		.short	1
 8903 0006 0100     		.short	1
 8904 0008 0100     		.short	1
 8905 000a 0100     		.short	1
 8906 000c 0100     		.short	1
 8907 000e 0100     		.short	1
 8908 0010 0100     		.short	1
 8909 0012 0100     		.short	1
 8910 0014 0100     		.short	1
 8911 0016 0100     		.short	1
 8912 0018 0200     		.short	2
 8913 001a 0200     		.short	2
 8914 001c 0200     		.short	2
 8915 001e 0200     		.short	2
 8916 0020 0200     		.short	2
 8917 0022 0200     		.short	2
 8918 0024 0200     		.short	2
 8919 0026 0300     		.short	3
 8920 0028 0300     		.short	3
ARM GAS  /tmp/ccUsbZWH.s 			page 289


 8921 002a 0400     		.short	4
 8922 002c 0400     		.short	4
 8923 002e 0500     		.short	5
 8924 0030 0500     		.short	5
 8925 0032 0600     		.short	6
 8926 0034 0700     		.short	7
 8927 0036 0800     		.short	8
 8928 0038 0800     		.short	8
 8929 003a 0900     		.short	9
 8930 003c 0A00     		.short	10
 8931 003e 0B00     		.short	11
 8932 0040 0C00     		.short	12
 8933 0042 0D00     		.short	13
 8934 0044 0F00     		.short	15
 8935 0046 1000     		.short	16
 8936 0048 1100     		.short	17
 8937 004a 1200     		.short	18
 8938 004c 1400     		.short	20
 8939 004e 1500     		.short	21
 8940 0050 1700     		.short	23
 8941 0052 1900     		.short	25
 8942 0054 1A00     		.short	26
 8943 0056 1C00     		.short	28
 8944 0058 1E00     		.short	30
 8945 005a 2000     		.short	32
 8946 005c 2200     		.short	34
 8947 005e 2400     		.short	36
 8948 0060 2600     		.short	38
 8949 0062 2800     		.short	40
 8950 0064 2B00     		.short	43
 8951 0066 2D00     		.short	45
 8952 0068 3000     		.short	48
 8953 006a 3200     		.short	50
 8954 006c 3500     		.short	53
 8955 006e 3800     		.short	56
 8956 0070 3B00     		.short	59
 8957 0072 3E00     		.short	62
 8958 0074 4100     		.short	65
 8959 0076 4400     		.short	68
 8960 0078 4700     		.short	71
 8961 007a 4B00     		.short	75
 8962 007c 4E00     		.short	78
 8963 007e 5200     		.short	82
 8964 0080 5500     		.short	85
 8965 0082 5900     		.short	89
 8966 0084 5D00     		.short	93
 8967 0086 6100     		.short	97
 8968 0088 6500     		.short	101
 8969 008a 6900     		.short	105
 8970 008c 6E00     		.short	110
 8971 008e 7200     		.short	114
 8972 0090 7700     		.short	119
 8973 0092 7B00     		.short	123
 8974 0094 8000     		.short	128
 8975 0096 8500     		.short	133
 8976 0098 8A00     		.short	138
 8977 009a 8F00     		.short	143
ARM GAS  /tmp/ccUsbZWH.s 			page 290


 8978 009c 9500     		.short	149
 8979 009e 9A00     		.short	154
 8980 00a0 9F00     		.short	159
 8981 00a2 A500     		.short	165
 8982 00a4 AB00     		.short	171
 8983 00a6 B100     		.short	177
 8984 00a8 B700     		.short	183
 8985 00aa BD00     		.short	189
 8986 00ac C300     		.short	195
 8987 00ae CA00     		.short	202
 8988 00b0 D000     		.short	208
 8989 00b2 D700     		.short	215
 8990 00b4 DE00     		.short	222
 8991 00b6 E500     		.short	229
 8992 00b8 EC00     		.short	236
 8993 00ba F300     		.short	243
 8994 00bc FA00     		.short	250
 8995 00be 0201     		.short	258
 8996 00c0 0A01     		.short	266
 8997 00c2 1101     		.short	273
 8998 00c4 1901     		.short	281
 8999 00c6 2201     		.short	290
 9000 00c8 2A01     		.short	298
 9001 00ca 3201     		.short	306
 9002 00cc 3B01     		.short	315
 9003 00ce 4401     		.short	324
 9004 00d0 4C01     		.short	332
 9005 00d2 5501     		.short	341
 9006 00d4 5F01     		.short	351
 9007 00d6 6801     		.short	360
 9008 00d8 7101     		.short	369
 9009 00da 7B01     		.short	379
 9010 00dc 8501     		.short	389
 9011 00de 8F01     		.short	399
 9012 00e0 9901     		.short	409
 9013 00e2 A301     		.short	419
 9014 00e4 AE01     		.short	430
 9015 00e6 B801     		.short	440
 9016 00e8 C301     		.short	451
 9017 00ea CE01     		.short	462
 9018 00ec D901     		.short	473
 9019 00ee E501     		.short	485
 9020 00f0 F001     		.short	496
 9021 00f2 FC01     		.short	508
 9022 00f4 0802     		.short	520
 9023 00f6 1402     		.short	532
 9024 00f8 2002     		.short	544
 9025 00fa 2C02     		.short	556
 9026 00fc 3902     		.short	569
 9027 00fe 4602     		.short	582
 9028 0100 5202     		.short	594
 9029 0102 6002     		.short	608
 9030 0104 6D02     		.short	621
 9031 0106 7A02     		.short	634
 9032 0108 8802     		.short	648
 9033 010a 9602     		.short	662
 9034 010c A402     		.short	676
ARM GAS  /tmp/ccUsbZWH.s 			page 291


 9035 010e B202     		.short	690
 9036 0110 C002     		.short	704
 9037 0112 CF02     		.short	719
 9038 0114 DE02     		.short	734
 9039 0116 ED02     		.short	749
 9040 0118 FC02     		.short	764
 9041 011a 0B03     		.short	779
 9042 011c 1B03     		.short	795
 9043 011e 2B03     		.short	811
 9044 0120 3B03     		.short	827
 9045 0122 4B03     		.short	843
 9046 0124 5B03     		.short	859
 9047 0126 6C03     		.short	876
 9048 0128 7D03     		.short	893
 9049 012a 8E03     		.short	910
 9050 012c 9F03     		.short	927
 9051 012e B003     		.short	944
 9052 0130 C203     		.short	962
 9053 0132 D403     		.short	980
 9054 0134 E603     		.short	998
 9055 0136 F803     		.short	1016
 9056 0138 0A04     		.short	1034
 9057 013a 1D04     		.short	1053
 9058 013c 3004     		.short	1072
 9059 013e 4304     		.short	1091
 9060 0140 5604     		.short	1110
 9061 0142 6A04     		.short	1130
 9062 0144 7E04     		.short	1150
 9063 0146 9204     		.short	1170
 9064 0148 A604     		.short	1190
 9065 014a BA04     		.short	1210
 9066 014c CF04     		.short	1231
 9067 014e E404     		.short	1252
 9068 0150 F904     		.short	1273
 9069 0152 0E05     		.short	1294
 9070 0154 2405     		.short	1316
 9071 0156 3A05     		.short	1338
 9072 0158 5005     		.short	1360
 9073 015a 6605     		.short	1382
 9074 015c 7C05     		.short	1404
 9075 015e 9305     		.short	1427
 9076 0160 AA05     		.short	1450
 9077 0162 C105     		.short	1473
 9078 0164 D905     		.short	1497
 9079 0166 F005     		.short	1520
 9080 0168 0806     		.short	1544
 9081 016a 2006     		.short	1568
 9082 016c 3906     		.short	1593
 9083 016e 5106     		.short	1617
 9084 0170 6A06     		.short	1642
 9085 0172 8306     		.short	1667
 9086 0174 9D06     		.short	1693
 9087 0176 B606     		.short	1718
 9088 0178 D006     		.short	1744
 9089 017a EA06     		.short	1770
 9090 017c 0507     		.short	1797
 9091 017e 1F07     		.short	1823
ARM GAS  /tmp/ccUsbZWH.s 			page 292


 9092 0180 3A07     		.short	1850
 9093 0182 5507     		.short	1877
 9094 0184 7107     		.short	1905
 9095 0186 8C07     		.short	1932
 9096 0188 A807     		.short	1960
 9097 018a C407     		.short	1988
 9098 018c E107     		.short	2017
 9099 018e FD07     		.short	2045
 9100 0190 1A08     		.short	2074
 9101 0192 3708     		.short	2103
 9102 0194 5508     		.short	2133
 9103 0196 7208     		.short	2162
 9104 0198 9008     		.short	2192
 9105 019a AF08     		.short	2223
 9106 019c CD08     		.short	2253
 9107 019e EC08     		.short	2284
 9108 01a0 0B09     		.short	2315
 9109 01a2 2A09     		.short	2346
 9110 01a4 4A09     		.short	2378
 9111 01a6 6A09     		.short	2410
 9112 01a8 8A09     		.short	2442
 9113 01aa AA09     		.short	2474
 9114 01ac CB09     		.short	2507
 9115 01ae EC09     		.short	2540
 9116 01b0 0D0A     		.short	2573
 9117 01b2 2E0A     		.short	2606
 9118 01b4 500A     		.short	2640
 9119 01b6 720A     		.short	2674
 9120 01b8 940A     		.short	2708
 9121 01ba B70A     		.short	2743
 9122 01bc DA0A     		.short	2778
 9123 01be FD0A     		.short	2813
 9124 01c0 210B     		.short	2849
 9125 01c2 440B     		.short	2884
 9126 01c4 680B     		.short	2920
 9127 01c6 8D0B     		.short	2957
 9128 01c8 B10B     		.short	2993
 9129 01ca D60B     		.short	3030
 9130 01cc FB0B     		.short	3067
 9131 01ce 210C     		.short	3105
 9132 01d0 470C     		.short	3143
 9133 01d2 6D0C     		.short	3181
 9134 01d4 930C     		.short	3219
 9135 01d6 BA0C     		.short	3258
 9136 01d8 E10C     		.short	3297
 9137 01da 080D     		.short	3336
 9138 01dc 300D     		.short	3376
 9139 01de 580D     		.short	3416
 9140 01e0 800D     		.short	3456
 9141 01e2 A80D     		.short	3496
 9142 01e4 D10D     		.short	3537
 9143 01e6 FA0D     		.short	3578
 9144 01e8 230E     		.short	3619
 9145 01ea 4D0E     		.short	3661
 9146 01ec 770E     		.short	3703
 9147 01ee A10E     		.short	3745
 9148 01f0 CC0E     		.short	3788
ARM GAS  /tmp/ccUsbZWH.s 			page 293


 9149 01f2 F70E     		.short	3831
 9150 01f4 220F     		.short	3874
 9151 01f6 4E0F     		.short	3918
 9152 01f8 7A0F     		.short	3962
 9153 01fa A60F     		.short	4006
 9154 01fc D20F     		.short	4050
 9155 01fe FF0F     		.short	4095
 9156              	.LC1:
 9157 0200 01       		.byte	1
 9158 0201 07       		.byte	7
 9159              	.LC2:
 9160 0202 01       		.byte	1
 9161 0203 06       		.byte	6
 9162              		.section	.bss.block_ccm,"aw",%nobits
 9165              	block_ccm:
 9166 0000 00000000 		.space	65408
 9166      00000000 
 9166      00000000 
 9166      00000000 
 9166      00000000 
 9167              		.section	.bss.block_mem,"aw",%nobits
 9170              	block_mem:
 9171 0000 00000000 		.space	118784
 9171      00000000 
 9171      00000000 
 9171      00000000 
 9171      00000000 
 9172              		.section	.bss.cpu_usage,"aw",%nobits
 9173              		.align	2
 9174              		.set	.LANCHOR13,. + 0
 9177              	cpu_usage:
 9178 0000 00000000 		.space	4
 9179              		.section	.bss.cpu_usage_str,"aw",%nobits
 9180              		.set	.LANCHOR14,. + 0
 9183              	cpu_usage_str:
 9184 0000 00000000 		.space	8
 9184      00000000 
 9185              		.section	.bss.current_device_state,"aw",%nobits
 9186              		.set	.LANCHOR2,. + 0
 9189              	current_device_state:
 9190 0000 00       		.space	1
 9191              		.section	.bss.current_display_page,"aw",%nobits
 9192              		.set	.LANCHOR3,. + 0
 9195              	current_display_page:
 9196 0000 00       		.space	1
 9197              		.section	.bss.currently_mapping_cv,"aw",%nobits
 9198              		.set	.LANCHOR4,. + 0
 9201              	currently_mapping_cv:
 9202 0000 00       		.space	1
 9203              		.section	.bss.field,"aw",%nobits
 9204              		.align	2
 9207              	field:
 9208 0000 00000000 		.space	39180
 9208      00000000 
 9208      00000000 
 9208      00000000 
 9208      00000000 
ARM GAS  /tmp/ccUsbZWH.s 			page 294


 9209              		.section	.bss.is_bypassed,"aw",%nobits
 9210              		.set	.LANCHOR9,. + 0
 9213              	is_bypassed:
 9214 0000 00       		.space	1
 9215              		.section	.bss.is_frozen_by_button,"aw",%nobits
 9216              		.set	.LANCHOR7,. + 0
 9219              	is_frozen_by_button:
 9220 0000 00       		.space	1
 9221              		.section	.bss.is_frozen_by_cv,"aw",%nobits
 9222              		.set	.LANCHOR11,. + 0
 9225              	is_frozen_by_cv:
 9226 0000 00       		.space	1
 9227              		.section	.bss.is_shifted,"aw",%nobits
 9228              		.set	.LANCHOR6,. + 0
 9231              	is_shifted:
 9232 0000 00       		.space	1
 9233              		.section	.bss.is_silenced,"aw",%nobits
 9234              		.set	.LANCHOR8,. + 0
 9237              	is_silenced:
 9238 0000 00       		.space	1
 9239              		.section	.bss.last_freeze_cv_update,"aw",%nobits
 9240              		.align	2
 9241              		.set	.LANCHOR10,. + 0
 9244              	last_freeze_cv_update:
 9245 0000 00000000 		.space	4
 9246              		.section	.bss.oled_led_update_gate,"aw",%nobits
 9247              		.align	2
 9248              		.set	.LANCHOR15,. + 0
 9251              	oled_led_update_gate:
 9252 0000 00000000 		.space	4
 9253              		.section	.bss.param_controls,"aw",%nobits
 9254              		.align	2
 9255              		.set	.LANCHOR1,. + 0
 9258              	param_controls:
 9259 0000 00000000 		.space	468
 9259      00000000 
 9259      00000000 
 9259      00000000 
 9259      00000000 
 9260              		.section	.bss.param_val_changed_,"aw",%nobits
 9263              	param_val_changed_:
 9264 0000 00       		.space	1
 9265              		.section	.bss.parameters,"aw",%nobits
 9266              		.align	2
 9267              		.set	.LANCHOR0,. + 0
 9270              	parameters:
 9271 0000 00000000 		.space	4
 9272              		.section	.bss.processor,"aw",%nobits
 9273              		.align	2
 9276              	processor:
 9277 0000 00000000 		.space	8768
 9277      00000000 
 9277      00000000 
 9277      00000000 
 9277      00000000 
 9278              		.section	.bss.scope_buffer,"aw",%nobits
 9279              		.align	2
ARM GAS  /tmp/ccUsbZWH.s 			page 295


 9280              		.set	.LANCHOR12,. + 0
 9283              	scope_buffer:
 9284 0000 00000000 		.space	128
 9284      00000000 
 9284      00000000 
 9284      00000000 
 9284      00000000 
 9285              		.section	.data.can_map,"aw"
 9286              		.set	.LANCHOR5,. + 0
 9289              	can_map:
 9290 0000 01       		.byte	1
 9291 0001 000000   		.space	3
 9292              		.text
 9293              	.Letext0:
 9294              		.file 37 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 9295              		.file 38 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 9296              		.file 39 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 9297              		.file 40 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 9298              		.file 41 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 9299              		.file 42 "/usr/include/newlib/c++/9.2.1/cstdlib"
 9300              		.file 43 "/usr/include/newlib/c++/9.2.1/cstdint"
 9301              		.file 44 "/usr/include/newlib/c++/9.2.1/bits/cpp_type_traits.h"
 9302              		.file 45 "/usr/include/newlib/c++/9.2.1/type_traits"
 9303              		.file 46 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 9304              		.file 47 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 9305              		.file 48 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 9306              		.file 49 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 9307              		.file 50 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 9308              		.file 51 "/usr/include/newlib/c++/9.2.1/new"
 9309              		.file 52 "/usr/include/newlib/c++/9.2.1/cstdarg"
 9310              		.file 53 "/usr/include/newlib/c++/9.2.1/cstdio"
 9311              		.file 54 "/usr/include/newlib/c++/9.2.1/cwchar"
 9312              		.file 55 "/usr/include/newlib/c++/9.2.1/clocale"
 9313              		.file 56 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 9314              		.file 57 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 9315              		.file 58 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 9316              		.file 59 "/usr/include/newlib/c++/9.2.1/cstring"
 9317              		.file 60 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 9318              		.file 61 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 9319              		.file 62 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 9320              		.file 63 "/usr/include/newlib/sys/_types.h"
 9321              		.file 64 "<built-in>"
 9322              		.file 65 "/usr/include/newlib/sys/reent.h"
 9323              		.file 66 "/usr/include/newlib/sys/lock.h"
 9324              		.file 67 "/usr/include/newlib/math.h"
 9325              		.file 68 "/usr/include/newlib/stdlib.h"
 9326              		.file 69 "/usr/include/newlib/c++/9.2.1/math.h"
 9327              		.file 70 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 9328              		.file 71 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 9329              		.file 72 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 9330              		.file 73 "../../libdaisy/src/daisy_core.h"
 9331              		.file 74 "../../libdaisy/src/per/tim.h"
 9332              		.file 75 "../../libdaisy/src/per/sai.h"
 9333              		.file 76 "../../libdaisy/src/hid/MidiEvent.h"
 9334              		.file 77 "../../libdaisy/src/hid/ctrl.h"
 9335              		.file 78 "../../libdaisy/src/hid/logger_impl.h"
 9336              		.file 79 "../../libdaisy/src/util/wav_format.h"
ARM GAS  /tmp/ccUsbZWH.s 			page 296


 9337              		.file 80 "../../libdaisy/src/per/qspi.h"
 9338              		.file 81 "../../libdaisy/src/per/gpio.h"
 9339              		.file 82 "../../libdaisy/src/dev/sdram.h"
 9340              		.file 83 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 9341              		.file 84 "/usr/include/newlib/stdio.h"
 9342              		.file 85 "/usr/include/newlib/sys/unistd.h"
 9343              		.file 86 "../../libdaisy/src/util/oled_fonts.h"
 9344              		.file 87 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 9345              		.file 88 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 9346              		.file 89 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 9347              		.file 90 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 9348              		.file 91 "../../libdaisy/src/util/sd_diskio.h"
 9349              		.file 92 "../../libdaisy/src/sys/fatfs.h"
 9350              		.file 93 "../../DaisySP/Source/Control/adenv.h"
 9351              		.file 94 "../../DaisySP/Source/Utility/dsp.h"
 9352              		.file 95 "../../DaisySP/Source/Filters/svf.h"
 9353              		.file 96 "/usr/include/newlib/wchar.h"
 9354              		.file 97 "/usr/include/newlib/locale.h"
 9355              		.file 98 "/usr/include/newlib/ctype.h"
 9356              		.file 99 "/usr/include/newlib/sys/errno.h"
 9357              		.file 100 "/usr/include/newlib/string.h"
 9358              		.file 101 "../../libdaisy/src/dev/sr_595.h"
 9359              		.file 102 "dsp/frame.h"
 9360              		.file 103 "./resources.h"
 9361              		.file 104 "dsp/mu_law.h"
 9362              		.file 105 "dsp/audio_buffer.h"
 9363              		.file 106 "dsp/grain.h"
 9364              		.file 107 "dsp/parameters.h"
 9365              		.file 108 "dsp/pvoc/frame_transformation.h"
 9366              		.file 109 "dsp/pvoc/stft.h"
 9367              		.file 110 "dsp/window.h"
ARM GAS  /tmp/ccUsbZWH.s 			page 297


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Nimbus.cpp
     /tmp/ccUsbZWH.s:17     .text._ZN5daisy10DaisyFieldD2Ev:0000000000000000 $t
     /tmp/ccUsbZWH.s:25     .text._ZN5daisy10DaisyFieldD2Ev:0000000000000000 _ZN5daisy10DaisyFieldD2Ev
     /tmp/ccUsbZWH.s:25     .text._ZN5daisy10DaisyFieldD2Ev:0000000000000000 _ZN5daisy10DaisyFieldD1Ev
     /tmp/ccUsbZWH.s:108    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 $t
     /tmp/ccUsbZWH.s:115    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 _ZN23GranularProcessorCloudsD2Ev
     /tmp/ccUsbZWH.s:115    .text._ZN23GranularProcessorCloudsD2Ev:0000000000000000 _ZN23GranularProcessorCloudsD1Ev
     /tmp/ccUsbZWH.s:213    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:0000000000000000 $t
     /tmp/ccUsbZWH.s:220    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev
     /tmp/ccUsbZWH.s:220    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED2Ev:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED1Ev
     /tmp/ccUsbZWH.s:245    .text.__tcf_0:0000000000000000 $t
     /tmp/ccUsbZWH.s:251    .text.__tcf_0:0000000000000000 __tcf_0
     /tmp/ccUsbZWH.s:265    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:0000000000000000 $t
     /tmp/ccUsbZWH.s:272    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv:0000000000000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6HeightEv
     /tmp/ccUsbZWH.s:289    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:0000000000000000 $t
     /tmp/ccUsbZWH.s:296    .text._ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv:0000000000000000 _ZNK5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE5WidthEv
     /tmp/ccUsbZWH.s:313    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:0000000000000000 $t
     /tmp/ccUsbZWH.s:320    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED0Ev
     /tmp/ccUsbZWH.s:360    .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0:0000000000000000 $t
     /tmp/ccUsbZWH.s:366    .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0:0000000000000000 _ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0
     /tmp/ccUsbZWH.s:443    .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE20ContinueTransmissionEv.part.0:0000000000000040 $d
     /tmp/ccUsbZWH.s:496    .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE:0000000000000000 _ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE
     /tmp/ccUsbZWH.s:448    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:0000000000000000 $t
     /tmp/ccUsbZWH.s:455    .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE4FillEb
     /tmp/ccUsbZWH.s:489    .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE14TxCpltCallbackEPvNS_9I2CHandle6ResultE:0000000000000000 $t
     /tmp/ccUsbZWH.s:538    .text._ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt:0000000000000000 $t
     /tmp/ccUsbZWH.s:545    .text._ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt:0000000000000000 _ZN5daisy21OneBitGraphicsDisplay9SetCursorEtt
     /tmp/ccUsbZWH.s:620    .text._ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh:0000000000000000 $t
     /tmp/ccUsbZWH.s:627    .text._ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh:0000000000000000 _ZN5daisy24SSD130x4WireSpiTransport11SendCommandEh
     /tmp/ccUsbZWH.s:670    .text._ZN23GranularProcessorClouds11set_qualityEl:0000000000000000 $t
     /tmp/ccUsbZWH.s:677    .text._ZN23GranularProcessorClouds11set_qualityEl:0000000000000000 _ZN23GranularProcessorClouds11set_qualityEl
     /tmp/ccUsbZWH.s:749    .text._ZN12ParamControl13ControlChangeEf:0000000000000000 $t
     /tmp/ccUsbZWH.s:756    .text._ZN12ParamControl13ControlChangeEf:0000000000000000 _ZN12ParamControl13ControlChangeEf
     /tmp/ccUsbZWH.s:795    .text._ZN12ParamControl13ControlChangeEf:000000000000002c $d
     /tmp/ccUsbZWH.s:800    .text._ZN12ParamControl7ProcessEv:0000000000000000 $t
     /tmp/ccUsbZWH.s:807    .text._ZN12ParamControl7ProcessEv:0000000000000000 _ZN12ParamControl7ProcessEv
     /tmp/ccUsbZWH.s:892    .text._ZN12ParamControl7ProcessEv:000000000000005a $d
     /tmp/ccUsbZWH.s:999    .text._ZN12ParamControl7ProcessEv:00000000000000dc $d
     /tmp/ccUsbZWH.s:1005   .text._Z3Modii:0000000000000000 $t
     /tmp/ccUsbZWH.s:1012   .text._Z3Modii:0000000000000000 _Z3Modii
     /tmp/ccUsbZWH.s:1073   .text._Z10InitParamsv:0000000000000000 $t
     /tmp/ccUsbZWH.s:1080   .text._Z10InitParamsv:0000000000000000 _Z10InitParamsv
     /tmp/ccUsbZWH.s:2043   .text._Z10InitParamsv:00000000000002d0 $d
     /tmp/ccUsbZWH.s:9207   .bss.field:0000000000000000 field
     /tmp/ccUsbZWH.s:2069   .text._Z12ProcessParamR12ParamControlb:0000000000000000 $t
     /tmp/ccUsbZWH.s:2076   .text._Z12ProcessParamR12ParamControlb:0000000000000000 _Z12ProcessParamR12ParamControlb
     /tmp/ccUsbZWH.s:2222   .text._Z12ProcessParamR12ParamControlb:0000000000000060 $d
     /tmp/ccUsbZWH.s:2230   .text._Z13ProcessParamsb:0000000000000000 $t
     /tmp/ccUsbZWH.s:2237   .text._Z13ProcessParamsb:0000000000000000 _Z13ProcessParamsb
     /tmp/ccUsbZWH.s:2307   .text._Z13ProcessParamsb:0000000000000030 $d
     /tmp/ccUsbZWH.s:2314   .text._Z14ProcessButtonsv:0000000000000000 $t
     /tmp/ccUsbZWH.s:2321   .text._Z14ProcessButtonsv:0000000000000000 _Z14ProcessButtonsv
     /tmp/ccUsbZWH.s:2957   .text._Z14ProcessButtonsv:000000000000021c $d
     /tmp/ccUsbZWH.s:9276   .bss.processor:0000000000000000 processor
     /tmp/ccUsbZWH.s:2972   .text._Z22ProcessGatesTriggersCvv:0000000000000000 $t
     /tmp/ccUsbZWH.s:2979   .text._Z22ProcessGatesTriggersCvv:0000000000000000 _Z22ProcessGatesTriggersCvv
ARM GAS  /tmp/ccUsbZWH.s 			page 298


     /tmp/ccUsbZWH.s:3175   .text._Z22ProcessGatesTriggersCvv:0000000000000098 $d
     /tmp/ccUsbZWH.s:3188   .text._Z8Controlsv:0000000000000000 $t
     /tmp/ccUsbZWH.s:3195   .text._Z8Controlsv:0000000000000000 _Z8Controlsv
     /tmp/ccUsbZWH.s:3250   .text._Z8Controlsv:0000000000000020 $d
     /tmp/ccUsbZWH.s:3255   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/ccUsbZWH.s:3262   .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/ccUsbZWH.s:3464   .text._Z13AudioCallbackPKPKfPPfj:00000000000000f0 $d
     /tmp/ccUsbZWH.s:3473   .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif:0000000000000000 $t
     /tmp/ccUsbZWH.s:3480   .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif:0000000000000000 _ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif
     /tmp/ccUsbZWH.s:3598   .text._ZN5daisy16LedDriverPca9685ILi2ELb1EE6SetLedEif:0000000000000074 $d
     /tmp/ccUsbZWH.s:3606   .text._Z10UpdateLedsv:0000000000000000 $t
     /tmp/ccUsbZWH.s:3613   .text._Z10UpdateLedsv:0000000000000000 _Z10UpdateLedsv
     /tmp/ccUsbZWH.s:4093   .text._Z10UpdateLedsv:0000000000000220 $d
     /tmp/ccUsbZWH.s:4112   .text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv:0000000000000000 $t
     /tmp/ccUsbZWH.s:4119   .text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv:0000000000000000 _ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE6UpdateEv
     /tmp/ccUsbZWH.s:4193   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:0000000000000000 $t
     /tmp/ccUsbZWH.s:4200   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE6UpdateEv
     /tmp/ccUsbZWH.s:4224   .text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb:0000000000000000 $t
     /tmp/ccUsbZWH.s:4231   .text._ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb:0000000000000000 _ZN5daisy13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEE9DrawPixelEjjb
     /tmp/ccUsbZWH.s:4293   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:0000000000000000 $t
     /tmp/ccUsbZWH.s:4300   .text._ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEE9DrawPixelEjjb
     /tmp/ccUsbZWH.s:4324   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:0000000000000000 $t
     /tmp/ccUsbZWH.s:4331   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE9WriteCharEc7FontDefb
     /tmp/ccUsbZWH.s:4493   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:0000000000000000 $t
     /tmp/ccUsbZWH.s:4500   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE11WriteStringEPKc7FontDefb
     /tmp/ccUsbZWH.s:4561   .text._Z12RenderSplashv:0000000000000000 $t
     /tmp/ccUsbZWH.s:4568   .text._Z12RenderSplashv:0000000000000000 _Z12RenderSplashv
     /tmp/ccUsbZWH.s:4657   .text._Z12RenderSplashv:000000000000006c $d
     /tmp/ccUsbZWH.s:4673   .text._Z14RenderCpuUsagev:0000000000000000 $t
     /tmp/ccUsbZWH.s:4680   .text._Z14RenderCpuUsagev:0000000000000000 _Z14RenderCpuUsagev
     /tmp/ccUsbZWH.s:4789   .text._Z14RenderCpuUsagev:000000000000008c $d
     /tmp/ccUsbZWH.s:4800   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:0000000000000000 $t
     /tmp/ccUsbZWH.s:4807   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb
     /tmp/ccUsbZWH.s:4907   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:000000000000003c $d
     /tmp/ccUsbZWH.s:5464   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:0000000000000000 $t
     /tmp/ccUsbZWH.s:5471   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawLineEjjjjb
     /tmp/ccUsbZWH.s:5650   .text._Z11RenderScopev:0000000000000000 $t
     /tmp/ccUsbZWH.s:5657   .text._Z11RenderScopev:0000000000000000 _Z11RenderScopev
     /tmp/ccUsbZWH.s:5803   .text._Z11RenderScopev:0000000000000068 $d
     /tmp/ccUsbZWH.s:5812   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb.part.0:0000000000000000 $t
     /tmp/ccUsbZWH.s:5818   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb.part.0:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb.part.0
     /tmp/ccUsbZWH.s:5882   .text._Z16RenderCVMappings12MAPPABLE_CVS:0000000000000000 $t
     /tmp/ccUsbZWH.s:5889   .text._Z16RenderCVMappings12MAPPABLE_CVS:0000000000000000 _Z16RenderCVMappings12MAPPABLE_CVS
     /tmp/ccUsbZWH.s:6069   .text._Z16RenderCVMappings12MAPPABLE_CVS:000000000000008c $d
     /tmp/ccUsbZWH.s:6076   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:0000000000000000 $t
     /tmp/ccUsbZWH.s:6083   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE8DrawRectEjjjjbb
     /tmp/ccUsbZWH.s:6192   .text._Z12RenderParams12DISPLAY_PAGE:0000000000000000 $t
     /tmp/ccUsbZWH.s:6199   .text._Z12RenderParams12DISPLAY_PAGE:0000000000000000 _Z12RenderParams12DISPLAY_PAGE
     /tmp/ccUsbZWH.s:6351   .text._Z12RenderParams12DISPLAY_PAGE:000000000000008c $d
     /tmp/ccUsbZWH.s:6380   .text._Z14RenderButtons1v:0000000000000000 $t
     /tmp/ccUsbZWH.s:6387   .text._Z14RenderButtons1v:0000000000000000 _Z14RenderButtons1v
     /tmp/ccUsbZWH.s:6537   .text._Z14RenderButtons1v:00000000000000ac $d
     /tmp/ccUsbZWH.s:6542   .text._Z14RenderButtons1v:00000000000000b0 $t
     /tmp/ccUsbZWH.s:6625   .text._Z14RenderButtons1v:0000000000000100 $d
     /tmp/ccUsbZWH.s:6651   .text._Z14RenderButtons2v:0000000000000000 $t
     /tmp/ccUsbZWH.s:6658   .text._Z14RenderButtons2v:0000000000000000 _Z14RenderButtons2v
     /tmp/ccUsbZWH.s:6797   .text._Z14RenderButtons2v:00000000000000cc $d
ARM GAS  /tmp/ccUsbZWH.s 			page 299


     /tmp/ccUsbZWH.s:6830   .text._Z10UpdateOledv:0000000000000000 $t
     /tmp/ccUsbZWH.s:6837   .text._Z10UpdateOledv:0000000000000000 _Z10UpdateOledv
     /tmp/ccUsbZWH.s:6918   .text._Z10UpdateOledv:0000000000000040 $d
     /tmp/ccUsbZWH.s:6928   .text._Z10UpdateOledv:000000000000004a $t
     /tmp/ccUsbZWH.s:7114   .text._Z10UpdateOledv:000000000000010c $d
     /tmp/ccUsbZWH.s:7132   .text.startup.main:0000000000000000 $t
     /tmp/ccUsbZWH.s:7139   .text.startup.main:0000000000000000 main
     /tmp/ccUsbZWH.s:7351   .text.startup.main:00000000000000c0 $d
     /tmp/ccUsbZWH.s:9170   .bss.block_mem:0000000000000000 block_mem
     /tmp/ccUsbZWH.s:9165   .bss.block_ccm:0000000000000000 block_ccm
     /tmp/ccUsbZWH.s:7365   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:0000000000000000 $t
     /tmp/ccUsbZWH.s:7372   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:0000000000000000 _ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib
     /tmp/ccUsbZWH.s:7985   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE7DrawArcEjjjiib:00000000000002f0 $d
     /tmp/ccUsbZWH.s:7993   .text.startup._GLOBAL__sub_I_processor:0000000000000000 $t
     /tmp/ccUsbZWH.s:7999   .text.startup._GLOBAL__sub_I_processor:0000000000000000 _GLOBAL__sub_I_processor
     /tmp/ccUsbZWH.s:8790   .text.startup._GLOBAL__sub_I_processor:00000000000000cc $d
     /tmp/ccUsbZWH.s:8859   .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:0000000000000000 _ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
     /tmp/ccUsbZWH.s:8805   .init_array:0000000000000000 $d
     /tmp/ccUsbZWH.s:8811   .rodata._ZTSN5daisy21OneBitGraphicsDisplayE:0000000000000000 _ZTSN5daisy21OneBitGraphicsDisplayE
     /tmp/ccUsbZWH.s:8818   .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:0000000000000000 _ZTIN5daisy21OneBitGraphicsDisplayE
     /tmp/ccUsbZWH.s:8815   .rodata._ZTIN5daisy21OneBitGraphicsDisplayE:0000000000000000 $d
     /tmp/ccUsbZWH.s:8825   .rodata._ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:0000000000000000 _ZTSN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
     /tmp/ccUsbZWH.s:8834   .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:0000000000000000 _ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE
     /tmp/ccUsbZWH.s:8831   .rodata._ZTIN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEEE:0000000000000000 $d
     /tmp/ccUsbZWH.s:8842   .rodata._ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:0000000000000000 _ZTSN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
     /tmp/ccUsbZWH.s:8850   .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:0000000000000000 _ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE
     /tmp/ccUsbZWH.s:8847   .rodata._ZTIN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:0000000000000000 $d
     /tmp/ccUsbZWH.s:8856   .rodata._ZTVN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEE:0000000000000000 $d
     /tmp/ccUsbZWH.s:9244   .bss.last_freeze_cv_update:0000000000000000 last_freeze_cv_update
     /tmp/ccUsbZWH.s:9283   .bss.scope_buffer:0000000000000000 scope_buffer
     /tmp/ccUsbZWH.s:9225   .bss.is_frozen_by_cv:0000000000000000 is_frozen_by_cv
     /tmp/ccUsbZWH.s:9219   .bss.is_frozen_by_button:0000000000000000 is_frozen_by_button
     /tmp/ccUsbZWH.s:9231   .bss.is_shifted:0000000000000000 is_shifted
     /tmp/ccUsbZWH.s:9213   .bss.is_bypassed:0000000000000000 is_bypassed
     /tmp/ccUsbZWH.s:9237   .bss.is_silenced:0000000000000000 is_silenced
     /tmp/ccUsbZWH.s:9195   .bss.current_display_page:0000000000000000 current_display_page
     /tmp/ccUsbZWH.s:9251   .bss.oled_led_update_gate:0000000000000000 oled_led_update_gate
     /tmp/ccUsbZWH.s:9289   .data.can_map:0000000000000000 can_map
     /tmp/ccUsbZWH.s:9201   .bss.currently_mapping_cv:0000000000000000 currently_mapping_cv
     /tmp/ccUsbZWH.s:9189   .bss.current_device_state:0000000000000000 current_device_state
     /tmp/ccUsbZWH.s:9270   .bss.parameters:0000000000000000 parameters
     /tmp/ccUsbZWH.s:9258   .bss.param_controls:0000000000000000 param_controls
     /tmp/ccUsbZWH.s:9263   .bss.param_val_changed_:0000000000000000 param_val_changed_
     /tmp/ccUsbZWH.s:9183   .bss.cpu_usage_str:0000000000000000 cpu_usage_str
     /tmp/ccUsbZWH.s:9177   .bss.cpu_usage:0000000000000000 cpu_usage
     /tmp/ccUsbZWH.s:8897   .rodata:0000000000000000 $d
     /tmp/ccUsbZWH.s:9166   .bss.block_ccm:0000000000000000 $d
     /tmp/ccUsbZWH.s:9171   .bss.block_mem:0000000000000000 $d
     /tmp/ccUsbZWH.s:9173   .bss.cpu_usage:0000000000000000 $d
     /tmp/ccUsbZWH.s:9184   .bss.cpu_usage_str:0000000000000000 $d
     /tmp/ccUsbZWH.s:9190   .bss.current_device_state:0000000000000000 $d
     /tmp/ccUsbZWH.s:9196   .bss.current_display_page:0000000000000000 $d
     /tmp/ccUsbZWH.s:9202   .bss.currently_mapping_cv:0000000000000000 $d
     /tmp/ccUsbZWH.s:9204   .bss.field:0000000000000000 $d
     /tmp/ccUsbZWH.s:9214   .bss.is_bypassed:0000000000000000 $d
     /tmp/ccUsbZWH.s:9220   .bss.is_frozen_by_button:0000000000000000 $d
     /tmp/ccUsbZWH.s:9226   .bss.is_frozen_by_cv:0000000000000000 $d
ARM GAS  /tmp/ccUsbZWH.s 			page 300


     /tmp/ccUsbZWH.s:9232   .bss.is_shifted:0000000000000000 $d
     /tmp/ccUsbZWH.s:9238   .bss.is_silenced:0000000000000000 $d
     /tmp/ccUsbZWH.s:9240   .bss.last_freeze_cv_update:0000000000000000 $d
     /tmp/ccUsbZWH.s:9247   .bss.oled_led_update_gate:0000000000000000 $d
     /tmp/ccUsbZWH.s:9254   .bss.param_controls:0000000000000000 $d
     /tmp/ccUsbZWH.s:9264   .bss.param_val_changed_:0000000000000000 $d
     /tmp/ccUsbZWH.s:9266   .bss.parameters:0000000000000000 $d
     /tmp/ccUsbZWH.s:9273   .bss.processor:0000000000000000 $d
     /tmp/ccUsbZWH.s:9279   .bss.scope_buffer:0000000000000000 $d
     /tmp/ccUsbZWH.s:9291   .data.can_map:0000000000000001 $d
     /tmp/ccUsbZWH.s:901    .text._ZN12ParamControl7ProcessEv:0000000000000063 $d
     /tmp/ccUsbZWH.s:901    .text._ZN12ParamControl7ProcessEv:0000000000000064 $t
     /tmp/ccUsbZWH.s:4916   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:0000000000000045 $d
     /tmp/ccUsbZWH.s:4916   .text._ZN5daisy25OneBitGraphicsDisplayImplINS_11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEEEE18WriteStringAlignedEPKcRK7FontDefNS_9RectangleENS_9AlignmentEb:0000000000000046 $t
                           .group:0000000000000000 _ZN5daisy10DaisyFieldD5Ev
                           .group:0000000000000000 _ZN23GranularProcessorCloudsD5Ev
                           .group:0000000000000000 _ZN5daisy11OledDisplayINS_13SSD130xDriverILj128ELj64ENS_24SSD130x4WireSpiTransportEEEED5Ev

UNDEFINED SYMBOLS
_ZdlPvj
_ZN5daisy9I2CHandle11TransmitDmaEtPhtPFvPvNS0_6ResultEES2_
_ZNK5daisy9I2CHandle9GetConfigEv
_ZN5daisy9I2CHandle4InitERKNS0_6ConfigE
dsy_gpio_write
_ZN5daisy9SpiHandle16BlockingTransmitEPhjm
_ZN5daisy13AnalogControl7ProcessEv
_ZNK5daisy10DaisyField18KeyboardRisingEdgeEj
_ZNK5daisy10DaisyField19KeyboardFallingEdgeEj
_ZN5daisy6System6GetNowEv
_ZN5daisy10DaisyField5GetCvEj
_ZN5daisy6GateIn4TrigEv
dsy_gpio_read
_ZNK5daisy10DaisyField10GetCvValueEj
_ZN5daisy10DaisyField21ProcessAnalogControlsEv
_ZN5daisy10DaisyField22ProcessDigitalControlsEv
_ZN5daisy6System7GetTickEv
_ZN23GranularProcessorClouds7ProcessEP10FloatFrameS1_j
Font_6x8
Font_16x26
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed14AudioBlockSizeEv
snprintf
Font_7x10
_ZN5daisy10DaisyField4InitEb
_ZN5daisy10DaisyField17SetAudioBlockSizeEj
_ZN5daisy10DaisyField15AudioSampleRateEv
_Z13InitResourcesf
_ZN23GranularProcessorClouds4InitEfPvjS0_j
_ZN5daisy6System5DelayEm
_ZN5daisy10DaisyField8StartAdcEv
_ZN5daisy10DaisyField10StartAudioEPFvPKPKfPPfjE
_ZN23GranularProcessorClouds7PrepareEv
cosf
sinf
__aeabi_atexit
memcpy
__dso_handle
ARM GAS  /tmp/ccUsbZWH.s 			page 301


_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
