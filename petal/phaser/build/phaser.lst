ARM GAS  /tmp/cckJQIQ8.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"phaser.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy10DaisyPetalD2Ev,"axG",%progbits,_ZN5daisy10DaisyPetalD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy10DaisyPetalD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy10DaisyPetalD2Ev:
  27              	.LVL0:
  28              	.LFB2049:
  29              		.file 1 "../../libdaisy/src/daisy_petal.h"
   1:../../libdaisy/src/daisy_petal.h **** #pragma once
   2:../../libdaisy/src/daisy_petal.h **** #ifndef DSY_PETAL_H
   3:../../libdaisy/src/daisy_petal.h **** #define DSY_PETAL_H /**< & */
   4:../../libdaisy/src/daisy_petal.h **** 
   5:../../libdaisy/src/daisy_petal.h **** #include "daisy_seed.h"
   6:../../libdaisy/src/daisy_petal.h **** 
   7:../../libdaisy/src/daisy_petal.h **** namespace daisy
   8:../../libdaisy/src/daisy_petal.h **** {
   9:../../libdaisy/src/daisy_petal.h **** /**
  10:../../libdaisy/src/daisy_petal.h ****    @brief Helpers and hardware definitions for daisy petal.
  11:../../libdaisy/src/daisy_petal.h ****    @ingroup boards
  12:../../libdaisy/src/daisy_petal.h **** */
  13:../../libdaisy/src/daisy_petal.h **** class DaisyPetal
  14:../../libdaisy/src/daisy_petal.h **** {
  15:../../libdaisy/src/daisy_petal.h ****   public:
  16:../../libdaisy/src/daisy_petal.h ****     /** Switches */
  17:../../libdaisy/src/daisy_petal.h ****     enum Sw
  18:../../libdaisy/src/daisy_petal.h ****     {
  19:../../libdaisy/src/daisy_petal.h ****         SW_1,    /**< Footswitch */
  20:../../libdaisy/src/daisy_petal.h ****         SW_2,    /**< Footswitch */
  21:../../libdaisy/src/daisy_petal.h ****         SW_3,    /**< Footswitch */
  22:../../libdaisy/src/daisy_petal.h ****         SW_4,    /**< Footswitch */
  23:../../libdaisy/src/daisy_petal.h ****         SW_5,    /**< Toggle */
  24:../../libdaisy/src/daisy_petal.h ****         SW_6,    /**< Toggle */
  25:../../libdaisy/src/daisy_petal.h ****         SW_7,    /**< Toggle */
  26:../../libdaisy/src/daisy_petal.h ****         SW_LAST, /**< Last enum item */
  27:../../libdaisy/src/daisy_petal.h ****     };
  28:../../libdaisy/src/daisy_petal.h **** 
  29:../../libdaisy/src/daisy_petal.h ****     /** Knobs */
ARM GAS  /tmp/cckJQIQ8.s 			page 2


  30:../../libdaisy/src/daisy_petal.h ****     enum Knob
  31:../../libdaisy/src/daisy_petal.h ****     {
  32:../../libdaisy/src/daisy_petal.h ****         KNOB_1,    /**< & */
  33:../../libdaisy/src/daisy_petal.h ****         KNOB_2,    /**< & */
  34:../../libdaisy/src/daisy_petal.h ****         KNOB_3,    /**< & */
  35:../../libdaisy/src/daisy_petal.h ****         KNOB_4,    /**< & */
  36:../../libdaisy/src/daisy_petal.h ****         KNOB_5,    /**< & */
  37:../../libdaisy/src/daisy_petal.h ****         KNOB_6,    /**< & */
  38:../../libdaisy/src/daisy_petal.h ****         KNOB_LAST, /**< & */
  39:../../libdaisy/src/daisy_petal.h ****     };
  40:../../libdaisy/src/daisy_petal.h **** 
  41:../../libdaisy/src/daisy_petal.h ****     /** Leds in ringled */
  42:../../libdaisy/src/daisy_petal.h ****     enum RingLed
  43:../../libdaisy/src/daisy_petal.h ****     {
  44:../../libdaisy/src/daisy_petal.h ****         RING_LED_1,   /**< & */
  45:../../libdaisy/src/daisy_petal.h ****         RING_LED_2,   /**< & */
  46:../../libdaisy/src/daisy_petal.h ****         RING_LED_3,   /**< & */
  47:../../libdaisy/src/daisy_petal.h ****         RING_LED_4,   /**< & */
  48:../../libdaisy/src/daisy_petal.h ****         RING_LED_5,   /**< & */
  49:../../libdaisy/src/daisy_petal.h ****         RING_LED_6,   /**< & */
  50:../../libdaisy/src/daisy_petal.h ****         RING_LED_7,   /**< & */
  51:../../libdaisy/src/daisy_petal.h ****         RING_LED_8,   /**< & */
  52:../../libdaisy/src/daisy_petal.h ****         RING_LED_LAST /**< & */
  53:../../libdaisy/src/daisy_petal.h ****     };
  54:../../libdaisy/src/daisy_petal.h **** 
  55:../../libdaisy/src/daisy_petal.h ****     /** footswitch leds */
  56:../../libdaisy/src/daisy_petal.h ****     enum FootswitchLed
  57:../../libdaisy/src/daisy_petal.h ****     {
  58:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_1,    /**< & */
  59:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_2,    /**< & */
  60:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_3,    /**< & */
  61:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_4,    /**< & */
  62:../../libdaisy/src/daisy_petal.h ****         FOOTSWITCH_LED_LAST, /**< & */
  63:../../libdaisy/src/daisy_petal.h ****     };
  64:../../libdaisy/src/daisy_petal.h **** 
  65:../../libdaisy/src/daisy_petal.h ****     /** Constructor */
  66:../../libdaisy/src/daisy_petal.h ****     DaisyPetal() {}
  67:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
  68:../../libdaisy/src/daisy_petal.h ****     ~DaisyPetal() {}
  30              		.loc 1 68 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB233:
  36              	.LBI233:
  37              		.file 2 "../../libdaisy/src/hid/ctrl.h"
   1:../../libdaisy/src/hid/ctrl.h **** #pragma once
   2:../../libdaisy/src/hid/ctrl.h **** #ifndef DSY_KNOB_H
   3:../../libdaisy/src/hid/ctrl.h **** #define DSY_KNOB_H /**< & */
   4:../../libdaisy/src/hid/ctrl.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/ctrl.h **** 
   6:../../libdaisy/src/hid/ctrl.h **** #ifdef __cplusplus
   7:../../libdaisy/src/hid/ctrl.h **** namespace daisy
   8:../../libdaisy/src/hid/ctrl.h **** {
   9:../../libdaisy/src/hid/ctrl.h **** /**
  10:../../libdaisy/src/hid/ctrl.h ****     @brief Hardware Interface for control inputs \n 
ARM GAS  /tmp/cckJQIQ8.s 			page 3


  11:../../libdaisy/src/hid/ctrl.h ****     Primarily designed for ADC input controls such as \n 
  12:../../libdaisy/src/hid/ctrl.h ****     potentiometers, and control voltage. \n 
  13:../../libdaisy/src/hid/ctrl.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/ctrl.h ****     @date November 2019
  15:../../libdaisy/src/hid/ctrl.h ****     @ingroup controls
  16:../../libdaisy/src/hid/ctrl.h **** */
  17:../../libdaisy/src/hid/ctrl.h **** class AnalogControl
  18:../../libdaisy/src/hid/ctrl.h **** {
  19:../../libdaisy/src/hid/ctrl.h ****   public:
  20:../../libdaisy/src/hid/ctrl.h ****     /** Constructor */
  21:../../libdaisy/src/hid/ctrl.h ****     AnalogControl() {}
  22:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
  23:../../libdaisy/src/hid/ctrl.h ****     ~AnalogControl() {}
  38              		.loc 2 23 5 view .LVU1
  39              		.loc 2 23 5 is_stmt 0 view .LVU2
  40              	.LBE233:
  41              	.LBB234:
  42              	.LBI234:
  43              		.file 3 "../../libdaisy/src/hid/encoder.h"
   1:../../libdaisy/src/hid/encoder.h **** #pragma once
   2:../../libdaisy/src/hid/encoder.h **** #ifndef DSY_ENCODER_H
   3:../../libdaisy/src/hid/encoder.h **** #define DSY_ENCODER_H
   4:../../libdaisy/src/hid/encoder.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/encoder.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/encoder.h **** #include "hid/switch.h"
   7:../../libdaisy/src/hid/encoder.h **** 
   8:../../libdaisy/src/hid/encoder.h **** namespace daisy
   9:../../libdaisy/src/hid/encoder.h **** {
  10:../../libdaisy/src/hid/encoder.h **** /** 
  11:../../libdaisy/src/hid/encoder.h ****     @brief Generic Class for handling Quadrature Encoders \n 
  12:../../libdaisy/src/hid/encoder.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Encoder classes
  13:../../libdaisy/src/hid/encoder.h ****     @author Stephen Hensley
  14:../../libdaisy/src/hid/encoder.h ****     @date December 2019
  15:../../libdaisy/src/hid/encoder.h ****     @ingroup controls
  16:../../libdaisy/src/hid/encoder.h **** */
  17:../../libdaisy/src/hid/encoder.h **** class Encoder
  18:../../libdaisy/src/hid/encoder.h **** {
  19:../../libdaisy/src/hid/encoder.h ****   public:
  20:../../libdaisy/src/hid/encoder.h ****     Encoder() {}
  21:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
  44              		.loc 3 21 5 is_stmt 1 view .LVU3
  45              	.LBB235:
  46              	.LBI235:
  47              		.file 4 "../../libdaisy/src/hid/switch.h"
   1:../../libdaisy/src/hid/switch.h **** #pragma once
   2:../../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../../libdaisy/src/hid/switch.h **** 
   7:../../libdaisy/src/hid/switch.h **** namespace daisy
   8:../../libdaisy/src/hid/switch.h **** {
   9:../../libdaisy/src/hid/switch.h **** /** 
  10:../../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../../libdaisy/src/hid/switch.h ****     @date December 2019
ARM GAS  /tmp/cckJQIQ8.s 			page 4


  14:../../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../../libdaisy/src/hid/switch.h **** */
  16:../../libdaisy/src/hid/switch.h **** class Switch
  17:../../libdaisy/src/hid/switch.h **** {
  18:../../libdaisy/src/hid/switch.h ****   public:
  19:../../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../../libdaisy/src/hid/switch.h ****     enum Type
  21:../../libdaisy/src/hid/switch.h ****     {
  22:../../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../../libdaisy/src/hid/switch.h ****     };
  25:../../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../../libdaisy/src/hid/switch.h ****     {
  28:../../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  30:../../libdaisy/src/hid/switch.h ****     };
  31:../../libdaisy/src/hid/switch.h **** 
  32:../../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../../libdaisy/src/hid/switch.h ****     enum Pull
  34:../../libdaisy/src/hid/switch.h ****     {
  35:../../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../../libdaisy/src/hid/switch.h ****     };
  39:../../libdaisy/src/hid/switch.h **** 
  40:../../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
  48              		.loc 4 41 5 view .LVU4
  49              		.loc 4 41 5 is_stmt 0 view .LVU5
  50              	.LBE235:
  51              	.LBE234:
  52              	.LBB236:
  53              	.LBI236:
  54              		.file 5 "../../libdaisy/src/daisy_seed.h"
   1:../../libdaisy/src/daisy_seed.h **** #pragma once
   2:../../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy/src/daisy_seed.h **** 
   5:../../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy/src/daisy_seed.h **** 
   7:../../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy/src/daisy_seed.h **** 
  10:../../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../../libdaisy/src/daisy_seed.h **** {
  12:../../libdaisy/src/daisy_seed.h **** /**
  13:../../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy/src/daisy_seed.h **** 
  16:../../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy/src/daisy_seed.h **** */
  18:../../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy/src/daisy_seed.h **** {
  20:../../libdaisy/src/daisy_seed.h ****   public:
  21:../../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /tmp/cckJQIQ8.s 			page 5


  55              		.loc 5 22 5 is_stmt 1 view .LVU6
  56              	.LBB237:
  57              	.LBI237:
  58              		.file 6 "../../libdaisy/src/sys/system.h"
   1:../../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy/src/sys/system.h **** 
   4:../../libdaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy/src/sys/system.h **** 
   6:../../libdaisy/src/sys/system.h **** #include <cstdint>
   7:../../libdaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy/src/sys/system.h **** 
   9:../../libdaisy/src/sys/system.h **** namespace daisy
  10:../../libdaisy/src/sys/system.h **** {
  11:../../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy/src/sys/system.h ****  **
  15:../../libdaisy/src/sys/system.h ****  ** @author shensley
  16:../../libdaisy/src/sys/system.h ****  ** @addtogroup system
  17:../../libdaisy/src/sys/system.h ****  */
  18:../../libdaisy/src/sys/system.h **** class System
  19:../../libdaisy/src/sys/system.h **** {
  20:../../libdaisy/src/sys/system.h ****   public:
  21:../../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy/src/sys/system.h ****     struct Config
  23:../../libdaisy/src/sys/system.h ****     {
  24:../../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy/src/sys/system.h ****         {
  27:../../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy/src/sys/system.h ****         };
  30:../../libdaisy/src/sys/system.h **** 
  31:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy/src/sys/system.h ****          ** */
  35:../../libdaisy/src/sys/system.h ****         void Defaults()
  36:../../libdaisy/src/sys/system.h ****         {
  37:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  39:../../libdaisy/src/sys/system.h ****             use_icache = true;
  40:../../libdaisy/src/sys/system.h ****         }
  41:../../libdaisy/src/sys/system.h **** 
  42:../../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  43:../../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  44:../../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  45:../../libdaisy/src/sys/system.h ****          ** */
  46:../../libdaisy/src/sys/system.h ****         void Boost()
  47:../../libdaisy/src/sys/system.h ****         {
  48:../../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  49:../../libdaisy/src/sys/system.h ****             use_dcache = true;
  50:../../libdaisy/src/sys/system.h ****             use_icache = true;
  51:../../libdaisy/src/sys/system.h ****         }
  52:../../libdaisy/src/sys/system.h **** 
  53:../../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
ARM GAS  /tmp/cckJQIQ8.s 			page 6


  54:../../libdaisy/src/sys/system.h ****         bool       use_dcache;
  55:../../libdaisy/src/sys/system.h ****         bool       use_icache;
  56:../../libdaisy/src/sys/system.h ****     };
  57:../../libdaisy/src/sys/system.h **** 
  58:../../libdaisy/src/sys/system.h ****     System() {}
  59:../../libdaisy/src/sys/system.h ****     ~System() {}
  59              		.loc 6 59 5 view .LVU7
  60              		.loc 6 59 5 is_stmt 0 view .LVU8
  61              	.LBE237:
  62              	.LBB238:
  63              	.LBI238:
  64              		.file 7 "../../libdaisy/src/hid/usb.h"
   1:../../libdaisy/src/hid/usb.h **** #pragma once
   2:../../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy/src/hid/usb.h **** 
   7:../../libdaisy/src/hid/usb.h **** namespace daisy
   8:../../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../../libdaisy/src/hid/usb.h ****     @{
  10:../../libdaisy/src/hid/usb.h **** */
  11:../../libdaisy/src/hid/usb.h **** 
  12:../../libdaisy/src/hid/usb.h **** {
  13:../../libdaisy/src/hid/usb.h **** /** 
  14:../../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../../libdaisy/src/hid/usb.h **** */
  18:../../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../../libdaisy/src/hid/usb.h **** {
  20:../../libdaisy/src/hid/usb.h ****   public:
  21:../../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy/src/hid/usb.h ****     enum class Result
  23:../../libdaisy/src/hid/usb.h ****     {
  24:../../libdaisy/src/hid/usb.h ****         OK,
  25:../../libdaisy/src/hid/usb.h ****         ERR,
  26:../../libdaisy/src/hid/usb.h ****     };
  27:../../libdaisy/src/hid/usb.h **** 
  28:../../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy/src/hid/usb.h ****     {
  31:../../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy/src/hid/usb.h ****     };
  35:../../libdaisy/src/hid/usb.h **** 
  36:../../libdaisy/src/hid/usb.h **** 
  37:../../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy/src/hid/usb.h **** 
  40:../../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy/src/hid/usb.h **** 
  42:../../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  65              		.loc 7 42 5 is_stmt 1 view .LVU9
  66              		.loc 7 42 5 is_stmt 0 view .LVU10
  67              	.LBE238:
ARM GAS  /tmp/cckJQIQ8.s 			page 7


  68              	.LBB239:
  69              	.LBI239:
  70              		.file 8 "../../libdaisy/src/per/adc.h"
   1:../../libdaisy/src/per/adc.h **** #pragma once
   2:../../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy/src/per/adc.h **** 
   9:../../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../../libdaisy/src/per/adc.h **** 
  11:../../libdaisy/src/per/adc.h **** namespace daisy
  12:../../libdaisy/src/per/adc.h **** {
  13:../../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../../libdaisy/src/per/adc.h ****     @{
  15:../../libdaisy/src/per/adc.h **** */
  16:../../libdaisy/src/per/adc.h **** 
  17:../../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy/src/per/adc.h **** */
  21:../../libdaisy/src/per/adc.h **** 
  22:../../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../../libdaisy/src/per/adc.h **** {
  25:../../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../../libdaisy/src/per/adc.h ****     {
  28:../../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../../libdaisy/src/per/adc.h ****     };
  33:../../libdaisy/src/per/adc.h **** 
  34:../../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../../libdaisy/src/per/adc.h ****      */
  37:../../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../../libdaisy/src/per/adc.h **** 
  39:../../libdaisy/src/per/adc.h ****     /** 
  40:../../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../../libdaisy/src/per/adc.h ****     */
  51:../../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
  53:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
ARM GAS  /tmp/cckJQIQ8.s 			page 8


  55:../../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../../libdaisy/src/per/adc.h **** 
  57:../../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../../libdaisy/src/per/adc.h **** };
  61:../../libdaisy/src/per/adc.h **** 
  62:../../libdaisy/src/per/adc.h **** /**
  63:../../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../../libdaisy/src/per/adc.h **** */
  65:../../libdaisy/src/per/adc.h **** class AdcHandle
  66:../../libdaisy/src/per/adc.h **** {
  67:../../libdaisy/src/per/adc.h ****   public:
  68:../../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../../libdaisy/src/per/adc.h ****     {
  71:../../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../../libdaisy/src/per/adc.h ****     };
  83:../../libdaisy/src/per/adc.h **** 
  84:../../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  71              		.loc 8 85 5 is_stmt 1 view .LVU11
  72              		.loc 8 85 5 is_stmt 0 view .LVU12
  73              	.LBE239:
  74              	.LBB240:
  75              	.LBI240:
  76              		.file 9 "../../libdaisy/src/hid/audio.h"
   1:../../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy/src/hid/audio.h **** 
   4:../../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy/src/hid/audio.h **** 
   6:../../libdaisy/src/hid/audio.h **** namespace daisy
   7:../../libdaisy/src/hid/audio.h **** {
   8:../../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../../libdaisy/src/hid/audio.h **** {
  10:../../libdaisy/src/hid/audio.h ****   public:
  11:../../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../../libdaisy/src/hid/audio.h ****     struct Config
  14:../../libdaisy/src/hid/audio.h ****     {
  15:../../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../../libdaisy/src/hid/audio.h ****     };
  19:../../libdaisy/src/hid/audio.h **** 
  20:../../libdaisy/src/hid/audio.h ****     enum class Result
ARM GAS  /tmp/cckJQIQ8.s 			page 9


  21:../../libdaisy/src/hid/audio.h ****     {
  22:../../libdaisy/src/hid/audio.h ****         OK,
  23:../../libdaisy/src/hid/audio.h ****         ERR,
  24:../../libdaisy/src/hid/audio.h ****     };
  25:../../libdaisy/src/hid/audio.h **** 
  26:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  27:../../libdaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  28:../../libdaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  29:../../libdaisy/src/hid/audio.h ****     */
  30:../../libdaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  31:../../libdaisy/src/hid/audio.h **** 
  32:../../libdaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  33:../../libdaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  34:../../libdaisy/src/hid/audio.h ****     */
  35:../../libdaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  36:../../libdaisy/src/hid/audio.h **** 
  37:../../libdaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  38:../../libdaisy/src/hid/audio.h ****    * Non-Interleaving audio callbacks in daisy will be of this type
  39:../../libdaisy/src/hid/audio.h ****   */
  40:../../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  41:../../libdaisy/src/hid/audio.h ****                                   OutputBuffer out,
  42:../../libdaisy/src/hid/audio.h ****                                   size_t       size);
  43:../../libdaisy/src/hid/audio.h **** 
  44:../../libdaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  45:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  46:../../libdaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  47:../../libdaisy/src/hid/audio.h ****     */
  48:../../libdaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  49:../../libdaisy/src/hid/audio.h **** 
  50:../../libdaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  51:../../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  52:../../libdaisy/src/hid/audio.h ****     */
  53:../../libdaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  54:../../libdaisy/src/hid/audio.h **** 
  55:../../libdaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  56:../../libdaisy/src/hid/audio.h ****    * Interleaving audio callbacks in daisy must be of this type
  57:../../libdaisy/src/hid/audio.h ****   */
  58:../../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  59:../../libdaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  60:../../libdaisy/src/hid/audio.h ****                                               size_t                   size);
  61:../../libdaisy/src/hid/audio.h **** 
  62:../../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  63:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  77              		.loc 9 63 5 is_stmt 1 view .LVU13
  78              		.loc 9 63 5 is_stmt 0 view .LVU14
  79              	.LBE240:
  80              	.LBE236:
  81              		.loc 1 68 20 view .LVU15
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE2049:
  86              		.weak	_ZN5daisy10DaisyPetalD1Ev
  87              		.thumb_set _ZN5daisy10DaisyPetalD1Ev,_ZN5daisy10DaisyPetalD2Ev
  88 0002 00BF     		.section	.text._ZN7daisysp6PhaserD2Ev,"axG",%progbits,_ZN7daisysp6PhaserD5Ev,comdat
  89              		.align	1
  90              		.p2align 2,,3
  91              		.weak	_ZN7daisysp6PhaserD2Ev
ARM GAS  /tmp/cckJQIQ8.s 			page 10


  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  95              		.fpu fpv5-d16
  97              	_ZN7daisysp6PhaserD2Ev:
  98              	.LVL1:
  99              	.LFB3902:
 100              		.file 10 "../../DaisySP/Source/Effects/phaser.h"
   1:../../DaisySP/Source/Effects/phaser.h **** #pragma once
   2:../../DaisySP/Source/Effects/phaser.h **** #ifndef DSY_PHASER_H
   3:../../DaisySP/Source/Effects/phaser.h **** #define DSY_PHASER_H
   4:../../DaisySP/Source/Effects/phaser.h **** #ifdef __cplusplus
   5:../../DaisySP/Source/Effects/phaser.h **** 
   6:../../DaisySP/Source/Effects/phaser.h **** #include <stdint.h>
   7:../../DaisySP/Source/Effects/phaser.h **** #include "Utility/delayline.h"
   8:../../DaisySP/Source/Effects/phaser.h **** 
   9:../../DaisySP/Source/Effects/phaser.h **** /** @file phaser.h */
  10:../../DaisySP/Source/Effects/phaser.h **** 
  11:../../DaisySP/Source/Effects/phaser.h **** namespace daisysp
  12:../../DaisySP/Source/Effects/phaser.h **** {
  13:../../DaisySP/Source/Effects/phaser.h **** /**  
  14:../../DaisySP/Source/Effects/phaser.h ****     @brief Single Phaser engine. Used in Phaser.
  15:../../DaisySP/Source/Effects/phaser.h ****     @author Ben Sergentanis
  16:../../DaisySP/Source/Effects/phaser.h **** */
  17:../../DaisySP/Source/Effects/phaser.h **** class PhaserEngine
  18:../../DaisySP/Source/Effects/phaser.h **** {
  19:../../DaisySP/Source/Effects/phaser.h ****   public:
  20:../../DaisySP/Source/Effects/phaser.h ****     PhaserEngine() {}
  21:../../DaisySP/Source/Effects/phaser.h ****     ~PhaserEngine() {}
  22:../../DaisySP/Source/Effects/phaser.h **** 
  23:../../DaisySP/Source/Effects/phaser.h ****     /** Initialize the module
  24:../../DaisySP/Source/Effects/phaser.h ****         \param sample_rate Audio engine sample rate.
  25:../../DaisySP/Source/Effects/phaser.h ****     */
  26:../../DaisySP/Source/Effects/phaser.h ****     void Init(float sample_rate);
  27:../../DaisySP/Source/Effects/phaser.h **** 
  28:../../DaisySP/Source/Effects/phaser.h ****     /** Get the next sample
  29:../../DaisySP/Source/Effects/phaser.h ****         \param in Sample to process
  30:../../DaisySP/Source/Effects/phaser.h ****     */
  31:../../DaisySP/Source/Effects/phaser.h ****     float Process(float in);
  32:../../DaisySP/Source/Effects/phaser.h **** 
  33:../../DaisySP/Source/Effects/phaser.h ****     /** How much to modulate the allpass filter by.
  34:../../DaisySP/Source/Effects/phaser.h ****         \param depth Works 0-1.
  35:../../DaisySP/Source/Effects/phaser.h ****     */
  36:../../DaisySP/Source/Effects/phaser.h ****     void SetLfoDepth(float depth);
  37:../../DaisySP/Source/Effects/phaser.h **** 
  38:../../DaisySP/Source/Effects/phaser.h ****     /** Set lfo frequency.
  39:../../DaisySP/Source/Effects/phaser.h ****         \param lfo_freq Frequency in Hz
  40:../../DaisySP/Source/Effects/phaser.h ****     */
  41:../../DaisySP/Source/Effects/phaser.h ****     void SetLfoFreq(float lfo_freq);
  42:../../DaisySP/Source/Effects/phaser.h **** 
  43:../../DaisySP/Source/Effects/phaser.h ****     /** Set the allpass frequency
  44:../../DaisySP/Source/Effects/phaser.h ****         \param ap_freq Frequency in Hz.
  45:../../DaisySP/Source/Effects/phaser.h ****     */
  46:../../DaisySP/Source/Effects/phaser.h ****     void SetFreq(float ap_freq);
  47:../../DaisySP/Source/Effects/phaser.h **** 
  48:../../DaisySP/Source/Effects/phaser.h ****     /** Set the feedback amount.
  49:../../DaisySP/Source/Effects/phaser.h ****         \param feedback Amount from 0-1.
ARM GAS  /tmp/cckJQIQ8.s 			page 11


  50:../../DaisySP/Source/Effects/phaser.h ****     */
  51:../../DaisySP/Source/Effects/phaser.h ****     void SetFeedback(float feedback);
  52:../../DaisySP/Source/Effects/phaser.h **** 
  53:../../DaisySP/Source/Effects/phaser.h ****   private:
  54:../../DaisySP/Source/Effects/phaser.h ****     float                    sample_rate_;
  55:../../DaisySP/Source/Effects/phaser.h ****     static constexpr int32_t kDelayLength
  56:../../DaisySP/Source/Effects/phaser.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  57:../../DaisySP/Source/Effects/phaser.h **** 
  58:../../DaisySP/Source/Effects/phaser.h ****     //triangle lfo
  59:../../DaisySP/Source/Effects/phaser.h ****     float lfo_phase_;
  60:../../DaisySP/Source/Effects/phaser.h ****     float lfo_freq_;
  61:../../DaisySP/Source/Effects/phaser.h ****     float lfo_amp_;
  62:../../DaisySP/Source/Effects/phaser.h **** 
  63:../../DaisySP/Source/Effects/phaser.h ****     float os_;
  64:../../DaisySP/Source/Effects/phaser.h **** 
  65:../../DaisySP/Source/Effects/phaser.h ****     float feedback_;
  66:../../DaisySP/Source/Effects/phaser.h ****     float ap_freq_;
  67:../../DaisySP/Source/Effects/phaser.h **** 
  68:../../DaisySP/Source/Effects/phaser.h ****     float deltime_;
  69:../../DaisySP/Source/Effects/phaser.h ****     float last_sample_;
  70:../../DaisySP/Source/Effects/phaser.h **** 
  71:../../DaisySP/Source/Effects/phaser.h ****     DelayLine<float, kDelayLength> del_;
  72:../../DaisySP/Source/Effects/phaser.h **** 
  73:../../DaisySP/Source/Effects/phaser.h ****     float ProcessLfo();
  74:../../DaisySP/Source/Effects/phaser.h **** };
  75:../../DaisySP/Source/Effects/phaser.h **** 
  76:../../DaisySP/Source/Effects/phaser.h **** //wraps up all of the phaser engines
  77:../../DaisySP/Source/Effects/phaser.h **** /**  
  78:../../DaisySP/Source/Effects/phaser.h ****     @brief Phaser Effect.
  79:../../DaisySP/Source/Effects/phaser.h ****     @author Ben Sergentanis
  80:../../DaisySP/Source/Effects/phaser.h ****     @date Jan 2021
  81:../../DaisySP/Source/Effects/phaser.h **** */
  82:../../DaisySP/Source/Effects/phaser.h **** class Phaser
  83:../../DaisySP/Source/Effects/phaser.h **** {
  84:../../DaisySP/Source/Effects/phaser.h ****   public:
  85:../../DaisySP/Source/Effects/phaser.h ****     Phaser() {}
  86:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 101              		.loc 10 86 5 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              		.loc 10 86 16 is_stmt 0 view .LVU17
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE3902:
 111              		.weak	_ZN7daisysp6PhaserD1Ev
 112              		.thumb_set _ZN7daisysp6PhaserD1Ev,_ZN7daisysp6PhaserD2Ev
 113 0002 00BF     		.section	.text._Z8Controlsv,"ax",%progbits
 114              		.align	1
 115              		.p2align 2,,3
 116              		.global	_Z8Controlsv
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu fpv5-d16
 122              	_Z8Controlsv:
ARM GAS  /tmp/cckJQIQ8.s 			page 12


 123              	.LFB4223:
 124              		.file 11 "phaser.cpp"
   1:phaser.cpp    **** #include "daisy_petal.h"
   2:phaser.cpp    **** #include "daisysp.h"
   3:phaser.cpp    **** 
   4:phaser.cpp    **** using namespace daisy;
   5:phaser.cpp    **** using namespace daisysp;
   6:phaser.cpp    **** 
   7:phaser.cpp    **** DaisyPetal hw;
   8:phaser.cpp    **** Phaser     phaser;
   9:phaser.cpp    **** 
  10:phaser.cpp    **** bool  effectOn;
  11:phaser.cpp    **** float wet;
  12:phaser.cpp    **** 
  13:phaser.cpp    **** float freqtarget, freq;
  14:phaser.cpp    **** float lfotarget, lfo;
  15:phaser.cpp    **** int   numstages;
  16:phaser.cpp    **** 
  17:phaser.cpp    **** void Controls()
  18:phaser.cpp    **** {
 125              		.loc 11 18 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
  19:phaser.cpp    ****     hw.ProcessAllControls();
 129              		.loc 11 19 5 view .LVU19
 130              	.LVL2:
 131              	.LBB241:
 132              	.LBI241:
  69:../../libdaisy/src/daisy_petal.h **** 
  70:../../libdaisy/src/daisy_petal.h ****     /** Initialize daisy petal */
  71:../../libdaisy/src/daisy_petal.h ****     void Init(bool boost = false);
  72:../../libdaisy/src/daisy_petal.h **** 
  73:../../libdaisy/src/daisy_petal.h ****     /**
  74:../../libdaisy/src/daisy_petal.h ****        Wait before moving on.
  75:../../libdaisy/src/daisy_petal.h ****        \param del Delay time in ms.
  76:../../libdaisy/src/daisy_petal.h ****      */
  77:../../libdaisy/src/daisy_petal.h ****     void DelayMs(size_t del);
  78:../../libdaisy/src/daisy_petal.h **** 
  79:../../libdaisy/src/daisy_petal.h **** 
  80:../../libdaisy/src/daisy_petal.h ****     /** Starts the callback
  81:../../libdaisy/src/daisy_petal.h ****     \cb Interleaved callback function
  82:../../libdaisy/src/daisy_petal.h ****     */
  83:../../libdaisy/src/daisy_petal.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  84:../../libdaisy/src/daisy_petal.h **** 
  85:../../libdaisy/src/daisy_petal.h ****     /** Starts the callback
  86:../../libdaisy/src/daisy_petal.h ****     \cb multichannel callback function
  87:../../libdaisy/src/daisy_petal.h ****     */
  88:../../libdaisy/src/daisy_petal.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  89:../../libdaisy/src/daisy_petal.h **** 
  90:../../libdaisy/src/daisy_petal.h ****     /**
  91:../../libdaisy/src/daisy_petal.h ****        Switch callback functions
  92:../../libdaisy/src/daisy_petal.h ****        \param cb New interleaved callback function.
  93:../../libdaisy/src/daisy_petal.h ****     */
  94:../../libdaisy/src/daisy_petal.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  95:../../libdaisy/src/daisy_petal.h **** 
  96:../../libdaisy/src/daisy_petal.h ****     /**
ARM GAS  /tmp/cckJQIQ8.s 			page 13


  97:../../libdaisy/src/daisy_petal.h ****        Switch callback functions
  98:../../libdaisy/src/daisy_petal.h ****        \param cb New multichannel callback function.
  99:../../libdaisy/src/daisy_petal.h ****     */
 100:../../libdaisy/src/daisy_petal.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
 101:../../libdaisy/src/daisy_petal.h **** 
 102:../../libdaisy/src/daisy_petal.h ****     /** Stops the audio if it is running. */
 103:../../libdaisy/src/daisy_petal.h ****     void StopAudio();
 104:../../libdaisy/src/daisy_petal.h **** 
 105:../../libdaisy/src/daisy_petal.h ****     /** Updates the Audio Sample Rate, and reinitializes.
 106:../../libdaisy/src/daisy_petal.h ****      ** Audio must be stopped for this to work.
 107:../../libdaisy/src/daisy_petal.h ****      */
 108:../../libdaisy/src/daisy_petal.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
 109:../../libdaisy/src/daisy_petal.h **** 
 110:../../libdaisy/src/daisy_petal.h ****     /** Returns the audio sample rate in Hz as a floating point number.
 111:../../libdaisy/src/daisy_petal.h ****      */
 112:../../libdaisy/src/daisy_petal.h ****     float AudioSampleRate();
 113:../../libdaisy/src/daisy_petal.h **** 
 114:../../libdaisy/src/daisy_petal.h ****     /** Sets the number of samples processed per channel by the audio callback.
 115:../../libdaisy/src/daisy_petal.h ****        \param size Audio block size
 116:../../libdaisy/src/daisy_petal.h ****      */
 117:../../libdaisy/src/daisy_petal.h ****     void SetAudioBlockSize(size_t size);
 118:../../libdaisy/src/daisy_petal.h **** 
 119:../../libdaisy/src/daisy_petal.h ****     /** Returns the number of samples per channel in a block of audio. */
 120:../../libdaisy/src/daisy_petal.h ****     size_t AudioBlockSize();
 121:../../libdaisy/src/daisy_petal.h **** 
 122:../../libdaisy/src/daisy_petal.h ****     /** Returns the rate in Hz that the Audio callback is called */
 123:../../libdaisy/src/daisy_petal.h ****     float AudioCallbackRate();
 124:../../libdaisy/src/daisy_petal.h **** 
 125:../../libdaisy/src/daisy_petal.h ****     /** Start analog to digital conversion. */
 126:../../libdaisy/src/daisy_petal.h ****     void StartAdc();
 127:../../libdaisy/src/daisy_petal.h **** 
 128:../../libdaisy/src/daisy_petal.h ****     /** Stops Transfering data from the ADC */
 129:../../libdaisy/src/daisy_petal.h ****     void StopAdc();
 130:../../libdaisy/src/daisy_petal.h **** 
 131:../../libdaisy/src/daisy_petal.h ****     /** Call at the same frequency as controls are read for stable readings.*/
 132:../../libdaisy/src/daisy_petal.h ****     void ProcessAnalogControls();
 133:../../libdaisy/src/daisy_petal.h **** 
 134:../../libdaisy/src/daisy_petal.h ****     /** Process Analog and Digital Controls */
 135:../../libdaisy/src/daisy_petal.h ****     inline void ProcessAllControls()
 133              		.loc 1 135 17 view .LVU20
 134              	.LBB242:
 136:../../libdaisy/src/daisy_petal.h ****     {
 137:../../libdaisy/src/daisy_petal.h ****         ProcessAnalogControls();
 135              		.loc 1 137 9 view .LVU21
 136              	.LBE242:
 137              	.LBE241:
  18:phaser.cpp    ****     hw.ProcessAllControls();
 138              		.loc 11 18 1 is_stmt 0 view .LVU22
 139 0000 38B5     		push	{r3, r4, r5, lr}
 140              		.cfi_def_cfa_offset 16
 141              		.cfi_offset 3, -16
 142              		.cfi_offset 4, -12
 143              		.cfi_offset 5, -8
 144              		.cfi_offset 14, -4
 145              	.LBB244:
 146              	.LBB243:
 147              		.loc 1 137 30 view .LVU23
ARM GAS  /tmp/cckJQIQ8.s 			page 14


 148 0002 2D4C     		ldr	r4, .L8
 149 0004 2046     		mov	r0, r4
 150 0006 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal21ProcessAnalogControlsEv
 151              	.LVL3:
 138:../../libdaisy/src/daisy_petal.h ****         ProcessDigitalControls();
 152              		.loc 1 138 9 is_stmt 1 view .LVU24
 153              		.loc 1 138 31 is_stmt 0 view .LVU25
 154 000a 2046     		mov	r0, r4
 155 000c FFF7FEFF 		bl	_ZN5daisy10DaisyPetal22ProcessDigitalControlsEv
 156              	.LVL4:
 157              		.loc 1 138 31 view .LVU26
 158              	.LBE243:
 159              	.LBE244:
  20:phaser.cpp    **** 
  21:phaser.cpp    ****     wet = hw.knob[0].Process();
 160              		.loc 11 21 5 is_stmt 1 view .LVU27
 161              		.loc 11 21 29 is_stmt 0 view .LVU28
 162 0010 04F15C00 		add	r0, r4, #92
 163 0014 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 164              	.LVL5:
 165              		.loc 11 21 9 view .LVU29
 166 0018 284B     		ldr	r3, .L8+4
  22:phaser.cpp    **** 
  23:phaser.cpp    ****     //knobs
  24:phaser.cpp    ****     float k = hw.knob[2].Process();
 167              		.loc 11 24 33 view .LVU30
 168 001a 04F19C00 		add	r0, r4, #156
  21:phaser.cpp    **** 
 169              		.loc 11 21 9 view .LVU31
 170 001e 83ED000A 		vstr.32	s0, [r3]
 171              		.loc 11 24 5 is_stmt 1 view .LVU32
 172              		.loc 11 24 33 is_stmt 0 view .LVU33
 173 0022 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 174              	.LVL6:
  25:phaser.cpp    ****     phaser.SetLfoFreq(k * k * 20.f);
 175              		.loc 11 25 5 is_stmt 1 view .LVU34
 176              		.loc 11 25 22 is_stmt 0 view .LVU35
 177 0026 F3EE047A 		vmov.f32	s15, #2.0e+1
 178 002a 2548     		ldr	r0, .L8+8
 179              		.loc 11 25 25 view .LVU36
 180 002c 20EE000A 		vmul.f32	s0, s0, s0
 181              	.LVL7:
 182              		.loc 11 25 22 view .LVU37
 183 0030 20EE270A 		vmul.f32	s0, s0, s15
 184 0034 FFF7FEFF 		bl	_ZN7daisysp6Phaser10SetLfoFreqEf
 185              	.LVL8:
  26:phaser.cpp    ****     lfo  = hw.knob[3].Process();
 186              		.loc 11 26 5 is_stmt 1 view .LVU38
 187              		.loc 11 26 30 is_stmt 0 view .LVU39
 188 0038 04F1BC00 		add	r0, r4, #188
 189 003c FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 190              	.LVL9:
 191              		.loc 11 26 10 view .LVU40
 192 0040 204B     		ldr	r3, .L8+12
  27:phaser.cpp    ****     k    = hw.knob[4].Process();
 193              		.loc 11 27 30 view .LVU41
 194 0042 04F1DC00 		add	r0, r4, #220
ARM GAS  /tmp/cckJQIQ8.s 			page 15


  26:phaser.cpp    ****     lfo  = hw.knob[3].Process();
 195              		.loc 11 26 10 view .LVU42
 196 0046 83ED000A 		vstr.32	s0, [r3]
 197              		.loc 11 27 5 is_stmt 1 view .LVU43
 198              		.loc 11 27 30 is_stmt 0 view .LVU44
 199 004a FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 200              	.LVL10:
  28:phaser.cpp    ****     freq = k * k * 7000; //0 - 10 kHz, square curve
 201              		.loc 11 28 5 is_stmt 1 view .LVU45
 202              		.loc 11 28 14 is_stmt 0 view .LVU46
 203 004e 20EE000A 		vmul.f32	s0, s0, s0
 204              	.LVL11:
 205              		.loc 11 28 18 view .LVU47
 206 0052 DFED1D7A 		vldr.32	s15, .L8+16
 207              		.loc 11 28 10 view .LVU48
 208 0056 1D4B     		ldr	r3, .L8+20
  29:phaser.cpp    ****     phaser.SetFeedback(hw.knob[5].Process());
 209              		.loc 11 29 23 view .LVU49
 210 0058 04F1FC00 		add	r0, r4, #252
  28:phaser.cpp    ****     freq = k * k * 7000; //0 - 10 kHz, square curve
 211              		.loc 11 28 18 view .LVU50
 212 005c 20EE270A 		vmul.f32	s0, s0, s15
  28:phaser.cpp    ****     freq = k * k * 7000; //0 - 10 kHz, square curve
 213              		.loc 11 28 10 view .LVU51
 214 0060 83ED000A 		vstr.32	s0, [r3]
 215              		.loc 11 29 5 is_stmt 1 view .LVU52
 216              		.loc 11 29 23 is_stmt 0 view .LVU53
 217 0064 FFF7FEFF 		bl	_ZN5daisy13AnalogControl7ProcessEv
 218              	.LVL12:
 219 0068 1548     		ldr	r0, .L8+8
 220 006a FFF7FEFF 		bl	_ZN7daisysp6Phaser11SetFeedbackEf
 221              	.LVL13:
  30:phaser.cpp    **** 
  31:phaser.cpp    ****     //footswitch
  32:phaser.cpp    ****     effectOn ^= hw.switches[0].RisingEdge();
 222              		.loc 11 32 5 is_stmt 1 view .LVU54
 223              	.LBB245:
 224              	.LBI245:
  42:../../libdaisy/src/hid/switch.h **** 
  43:../../libdaisy/src/hid/switch.h ****     /** 
  44:../../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../../libdaisy/src/hid/switch.h ****     */
  51:../../libdaisy/src/hid/switch.h ****     void
  52:../../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../../libdaisy/src/hid/switch.h **** 
  54:../../libdaisy/src/hid/switch.h ****     /**
  55:../../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../../libdaisy/src/hid/switch.h ****     */
  59:../../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../../libdaisy/src/hid/switch.h **** 
ARM GAS  /tmp/cckJQIQ8.s 			page 16


  61:../../libdaisy/src/hid/switch.h ****     /** 
  62:../../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../../libdaisy/src/hid/switch.h ****     */
  66:../../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../../libdaisy/src/hid/switch.h **** 
  68:../../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 225              		.loc 4 69 17 view .LVU55
 226              	.LBB246:
 227              		.loc 4 69 38 view .LVU56
 228              	.LBE246:
 229              	.LBE245:
 230              		.loc 11 32 14 is_stmt 0 view .LVU57
 231 006e 1848     		ldr	r0, .L8+24
 232              	.LBB248:
 233              	.LBB247:
 234              		.loc 4 69 55 view .LVU58
 235 0070 94F84121 		ldrb	r2, [r4, #321]	@ zero_extendqisi2
 236              	.LBE247:
 237              	.LBE248:
 238              		.loc 11 32 43 view .LVU59
 239 0074 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  33:phaser.cpp    **** 
  34:phaser.cpp    ****     //encoder
  35:phaser.cpp    ****     numstages += hw.encoder.Increment();
  36:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
  37:phaser.cpp    ****     numstages = hw.encoder.RisingEdge() ? 4 : numstages;
 240              		.loc 11 37 41 view .LVU60
 241 0076 94F84150 		ldrb	r5, [r4, #65]	@ zero_extendqisi2
  32:phaser.cpp    **** 
 242              		.loc 11 32 43 view .LVU61
 243 007a 7F2A     		cmp	r2, #127
 244 007c 08BF     		it	eq
 245 007e 83F00103 		eoreq	r3, r3, #1
  35:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
 246              		.loc 11 35 15 view .LVU62
 247 0082 144A     		ldr	r2, .L8+28
 248              		.loc 11 37 41 view .LVU63
 249 0084 7F2D     		cmp	r5, #127
  35:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
 250              		.loc 11 35 38 view .LVU64
 251 0086 A46D     		ldr	r4, [r4, #88]
  35:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
 252              		.loc 11 35 15 view .LVU65
 253 0088 1168     		ldr	r1, [r2]
  32:phaser.cpp    **** 
 254              		.loc 11 32 14 view .LVU66
 255 008a 0370     		strb	r3, [r0]
  35:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
 256              		.loc 11 35 5 is_stmt 1 view .LVU67
 257              	.LVL14:
  22:../../libdaisy/src/hid/encoder.h **** 
  23:../../libdaisy/src/hid/encoder.h ****     /** Initializes the encoder with the specified hardware pins.
  24:../../libdaisy/src/hid/encoder.h **** */
  25:../../libdaisy/src/hid/encoder.h ****     //
ARM GAS  /tmp/cckJQIQ8.s 			page 17


  26:../../libdaisy/src/hid/encoder.h ****     /** Update rate should be the rate at which Debounce() gets called
  27:../../libdaisy/src/hid/encoder.h **** in Hertz.
  28:../../libdaisy/src/hid/encoder.h **** */
  29:../../libdaisy/src/hid/encoder.h ****     //
  30:../../libdaisy/src/hid/encoder.h ****     void
  31:../../libdaisy/src/hid/encoder.h ****     Init(dsy_gpio_pin a, dsy_gpio_pin b, dsy_gpio_pin click, float update_rate);
  32:../../libdaisy/src/hid/encoder.h ****     /** Called at update_rate to debounce and handle timing for the switch.
  33:../../libdaisy/src/hid/encoder.h **** */
  34:../../libdaisy/src/hid/encoder.h ****     //
  35:../../libdaisy/src/hid/encoder.h ****     /** In order for events not to be missed, its important that the Edge/Pressed checks
  36:../../libdaisy/src/hid/encoder.h **** be made at the same rate as the debounce function is being called.
  37:../../libdaisy/src/hid/encoder.h **** */
  38:../../libdaisy/src/hid/encoder.h ****     void Debounce();
  39:../../libdaisy/src/hid/encoder.h ****     /** Returns +1 if the encoder was turned clockwise, -1 if it was turned counter-clockwise, or 0
  40:../../libdaisy/src/hid/encoder.h **** */
  41:../../libdaisy/src/hid/encoder.h ****     inline int32_t Increment() const { return inc_; }
 258              		.loc 3 41 40 view .LVU68
  36:phaser.cpp    ****     numstages = hw.encoder.RisingEdge() ? 4 : numstages;
 259              		.loc 11 36 5 view .LVU69
 260              		.loc 11 37 5 view .LVU70
 261              	.LBB249:
 262              	.LBI249:
  42:../../libdaisy/src/hid/encoder.h ****     /** Returns true if the encoder was just pressed.
  43:../../libdaisy/src/hid/encoder.h **** */
  44:../../libdaisy/src/hid/encoder.h ****     inline bool RisingEdge() const { return sw_.RisingEdge(); }
 263              		.loc 3 44 17 view .LVU71
 264              	.LBB250:
 265              		.loc 3 44 38 view .LVU72
 266              		.loc 3 44 38 is_stmt 0 view .LVU73
 267              	.LBE250:
 268              	.LBE249:
 269              		.loc 4 69 38 is_stmt 1 view .LVU74
 270              		.loc 11 37 41 is_stmt 0 view .LVU75
 271 008c 0CD0     		beq	.L6
  35:phaser.cpp    ****     numstages = DSY_CLAMP(numstages, 1, 8);
 272              		.loc 11 35 15 discriminator 2 view .LVU76
 273 008e 2144     		add	r1, r1, r4
  38:phaser.cpp    ****     phaser.SetPoles(numstages);
 274              		.loc 11 38 20 discriminator 2 view .LVU77
 275 0090 0B48     		ldr	r0, .L8+8
  36:phaser.cpp    ****     numstages = hw.encoder.RisingEdge() ? 4 : numstages;
 276              		.loc 11 36 17 discriminator 2 view .LVU78
 277 0092 0129     		cmp	r1, #1
 278 0094 B8BF     		it	lt
 279 0096 0121     		movlt	r1, #1
 280 0098 0829     		cmp	r1, #8
 281 009a A8BF     		it	ge
 282 009c 0821     		movge	r1, #8
  39:phaser.cpp    **** }
 283              		.loc 11 39 1 discriminator 2 view .LVU79
 284 009e BDE83840 		pop	{r3, r4, r5, lr}
 285              		.cfi_remember_state
 286              		.cfi_restore 14
 287              		.cfi_restore 5
 288              		.cfi_restore 4
 289              		.cfi_restore 3
 290              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cckJQIQ8.s 			page 18


  37:phaser.cpp    ****     phaser.SetPoles(numstages);
 291              		.loc 11 37 15 discriminator 2 view .LVU80
 292 00a2 1160     		str	r1, [r2]
  38:phaser.cpp    **** }
 293              		.loc 11 38 5 is_stmt 1 discriminator 2 view .LVU81
  38:phaser.cpp    **** }
 294              		.loc 11 38 20 is_stmt 0 discriminator 2 view .LVU82
 295 00a4 FFF7FEBF 		b	_ZN7daisysp6Phaser8SetPolesEi
 296              	.LVL15:
 297              	.L6:
 298              		.cfi_restore_state
  37:phaser.cpp    ****     phaser.SetPoles(numstages);
 299              		.loc 11 37 41 view .LVU83
 300 00a8 0421     		movs	r1, #4
  38:phaser.cpp    **** }
 301              		.loc 11 38 20 view .LVU84
 302 00aa 0548     		ldr	r0, .L8+8
 303              		.loc 11 39 1 view .LVU85
 304 00ac BDE83840 		pop	{r3, r4, r5, lr}
 305              		.cfi_restore 14
 306              		.cfi_restore 5
 307              		.cfi_restore 4
 308              		.cfi_restore 3
 309              		.cfi_def_cfa_offset 0
  37:phaser.cpp    ****     phaser.SetPoles(numstages);
 310              		.loc 11 37 15 view .LVU86
 311 00b0 1160     		str	r1, [r2]
  38:phaser.cpp    **** }
 312              		.loc 11 38 5 is_stmt 1 view .LVU87
  38:phaser.cpp    **** }
 313              		.loc 11 38 20 is_stmt 0 view .LVU88
 314 00b2 FFF7FEBF 		b	_ZN7daisysp6Phaser8SetPolesEi
 315              	.LVL16:
 316              	.L9:
 317 00b6 00BF     		.align	2
 318              	.L8:
 319 00b8 00000000 		.word	.LANCHOR0
 320 00bc 00000000 		.word	.LANCHOR1
 321 00c0 00000000 		.word	phaser
 322 00c4 00000000 		.word	.LANCHOR2
 323 00c8 00C0DA45 		.word	1171963904
 324 00cc 00000000 		.word	.LANCHOR3
 325 00d0 00000000 		.word	.LANCHOR4
 326 00d4 00000000 		.word	.LANCHOR5
 327              		.cfi_endproc
 328              	.LFE4223:
 330              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 331              		.align	1
 332              		.p2align 2,,3
 333              		.global	_Z13AudioCallbackPKPKfPPfj
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu fpv5-d16
 339              	_Z13AudioCallbackPKPKfPPfj:
 340              	.LVL17:
 341              	.LFB4224:
ARM GAS  /tmp/cckJQIQ8.s 			page 19


  40:phaser.cpp    **** 
  41:phaser.cpp    **** void AudioCallback(AudioHandle::InputBuffer  in,
  42:phaser.cpp    ****                    AudioHandle::OutputBuffer out,
  43:phaser.cpp    ****                    size_t                    size)
  44:phaser.cpp    **** {
 342              		.loc 11 44 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 8
 345              		@ frame_needed = 0, uses_anonymous_args = 0
  45:phaser.cpp    ****     Controls();
 346              		.loc 11 45 5 view .LVU90
  44:phaser.cpp    ****     Controls();
 347              		.loc 11 44 1 is_stmt 0 view .LVU91
 348 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 349              		.cfi_def_cfa_offset 36
 350              		.cfi_offset 4, -36
 351              		.cfi_offset 5, -32
 352              		.cfi_offset 6, -28
 353              		.cfi_offset 7, -24
 354              		.cfi_offset 8, -20
 355              		.cfi_offset 9, -16
 356              		.cfi_offset 10, -12
 357              		.cfi_offset 11, -8
 358              		.cfi_offset 14, -4
 359 0004 1446     		mov	r4, r2
 360 0006 0746     		mov	r7, r0
 361 0008 8846     		mov	r8, r1
 362 000a 2DED028B 		vpush.64	{d8}
 363              		.cfi_def_cfa_offset 44
 364              		.cfi_offset 80, -44
 365              		.cfi_offset 81, -40
 366 000e 83B0     		sub	sp, sp, #12
 367              		.cfi_def_cfa_offset 56
  44:phaser.cpp    ****     Controls();
 368              		.loc 11 44 1 view .LVU92
 369 0010 0192     		str	r2, [sp, #4]
 370              		.loc 11 45 13 view .LVU93
 371 0012 FFF7FEFF 		bl	_Z8Controlsv
 372              	.LVL18:
  46:phaser.cpp    **** 
  47:phaser.cpp    ****     for(size_t i = 0; i < size; i++)
 373              		.loc 11 47 5 is_stmt 1 view .LVU94
 374              	.LBB251:
 375              		.loc 11 47 25 view .LVU95
 376 0016 002C     		cmp	r4, #0
 377 0018 5FD0     		beq	.L10
 378              		.loc 11 47 16 is_stmt 0 view .LVU96
 379 001a 0024     		movs	r4, #0
 380              	.LVL19:
 381              		.loc 11 47 16 view .LVU97
 382 001c DFF8D890 		ldr	r9, .L22+20
 383 0020 DFF8D8B0 		ldr	fp, .L22+24
 384 0024 2F4D     		ldr	r5, .L22
 385 0026 DFF8D8A0 		ldr	r10, .L22+28
 386 002a 02E0     		b	.L13
 387              	.LVL20:
 388              	.L12:
ARM GAS  /tmp/cckJQIQ8.s 			page 20


 389              		.loc 11 47 5 is_stmt 1 discriminator 2 view .LVU98
 390              		.loc 11 47 25 discriminator 2 view .LVU99
 391 002c 019B     		ldr	r3, [sp, #4]
 392 002e A342     		cmp	r3, r4
 393 0030 53D0     		beq	.L10
 394              	.LVL21:
 395              	.L13:
  48:phaser.cpp    ****     {
  49:phaser.cpp    ****         fonepole(freq, freqtarget, .0001f); //smooth at audio rate
 396              		.loc 11 49 9 view .LVU100
 397              	.LBB252:
 398              	.LBI252:
 399              		.file 12 "../../DaisySP/Source/Utility/dsp.h"
   1:../../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../../DaisySP/Source/Utility/dsp.h **** */
   3:../../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../../DaisySP/Source/Utility/dsp.h **** 
  11:../../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../../DaisySP/Source/Utility/dsp.h **** */
  13:../../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../../DaisySP/Source/Utility/dsp.h **** 
  21:../../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../../DaisySP/Source/Utility/dsp.h **** {
  23:../../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../../DaisySP/Source/Utility/dsp.h **** 
  26:../../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../../DaisySP/Source/Utility/dsp.h **** 
  29:../../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../../DaisySP/Source/Utility/dsp.h **** */
  32:../../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../../DaisySP/Source/Utility/dsp.h **** {
  34:../../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../../DaisySP/Source/Utility/dsp.h **** #else
  38:../../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../../DaisySP/Source/Utility/dsp.h **** }
  42:../../DaisySP/Source/Utility/dsp.h **** 
  43:../../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /tmp/cckJQIQ8.s 			page 21


  45:../../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../../DaisySP/Source/Utility/dsp.h **** #else
  49:../../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../../DaisySP/Source/Utility/dsp.h **** }
  53:../../DaisySP/Source/Utility/dsp.h **** 
  54:../../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../../DaisySP/Source/Utility/dsp.h **** */
  56:../../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../../DaisySP/Source/Utility/dsp.h **** {
  58:../../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../../DaisySP/Source/Utility/dsp.h **** }
  60:../../DaisySP/Source/Utility/dsp.h **** 
  61:../../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../../DaisySP/Source/Utility/dsp.h **** */
  65:../../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../../DaisySP/Source/Utility/dsp.h **** {
  67:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../../DaisySP/Source/Utility/dsp.h **** }
  76:../../DaisySP/Source/Utility/dsp.h **** 
  77:../../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../../DaisySP/Source/Utility/dsp.h **** {
  79:../../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../../DaisySP/Source/Utility/dsp.h **** }
  88:../../DaisySP/Source/Utility/dsp.h **** 
  89:../../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../../DaisySP/Source/Utility/dsp.h **** */
  92:../../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../../DaisySP/Source/Utility/dsp.h **** {
  94:../../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../../DaisySP/Source/Utility/dsp.h **** }
  96:../../DaisySP/Source/Utility/dsp.h **** 
  97:../../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../../DaisySP/Source/Utility/dsp.h **** */
 100:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /tmp/cckJQIQ8.s 			page 22


 102:../../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../../DaisySP/Source/Utility/dsp.h **** }
 115:../../DaisySP/Source/Utility/dsp.h **** 
 116:../../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../../DaisySP/Source/Utility/dsp.h **** {
 118:../../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../../DaisySP/Source/Utility/dsp.h **** }
 120:../../DaisySP/Source/Utility/dsp.h **** 
 121:../../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../../DaisySP/Source/Utility/dsp.h **** */
 123:../../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../../DaisySP/Source/Utility/dsp.h **** {
 125:../../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../../DaisySP/Source/Utility/dsp.h **** }
 127:../../DaisySP/Source/Utility/dsp.h **** 
 128:../../DaisySP/Source/Utility/dsp.h **** 
 129:../../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../../DaisySP/Source/Utility/dsp.h **** */
 135:../../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 400              		.loc 12 135 13 view .LVU101
 401              	.LBB253:
 136:../../DaisySP/Source/Utility/dsp.h **** {
 137:../../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 402              		.loc 12 137 5 view .LVU102
 403              		.loc 12 137 9 is_stmt 0 view .LVU103
 404 0032 99ED000A 		vldr.32	s0, [r9]
 405 0036 A600     		lsls	r6, r4, #2
 406              		.loc 12 137 24 view .LVU104
 407 0038 DBED007A 		vldr.32	s15, [fp]
 408              		.loc 12 137 9 view .LVU105
 409 003c 9FED2A8A 		vldr.32	s16, .L22+4
 410              		.loc 12 137 24 view .LVU106
 411 0040 77EEC07A 		vsub.f32	s15, s15, s0
 412              	.LBE253:
 413              	.LBE252:
  50:phaser.cpp    ****         phaser.SetFreq(freq);
 414              		.loc 11 50 23 view .LVU107
 415 0044 2948     		ldr	r0, .L22+8
 416              	.LBB255:
 417              	.LBB254:
 418              		.loc 12 137 9 view .LVU108
 419 0046 A7EE880A 		vfma.f32	s0, s15, s16
ARM GAS  /tmp/cckJQIQ8.s 			page 23


 420 004a 89ED000A 		vstr.32	s0, [r9]
 421              	.LVL22:
 422              		.loc 12 137 9 view .LVU109
 423              	.LBE254:
 424              	.LBE255:
 425              		.loc 11 50 9 is_stmt 1 view .LVU110
 426              		.loc 11 50 23 is_stmt 0 view .LVU111
 427 004e FFF7FEFF 		bl	_ZN7daisysp6Phaser7SetFreqEf
 428              	.LVL23:
  51:phaser.cpp    **** 
  52:phaser.cpp    ****         fonepole(lfo, lfotarget, .0001f); //smooth at audio rate
 429              		.loc 11 52 9 is_stmt 1 view .LVU112
 430              	.LBB256:
 431              	.LBI256:
 135:../../DaisySP/Source/Utility/dsp.h **** {
 432              		.loc 12 135 13 view .LVU113
 433              	.LBB257:
 434              		.loc 12 137 5 view .LVU114
 435              		.loc 12 137 9 is_stmt 0 view .LVU115
 436 0052 95ED000A 		vldr.32	s0, [r5]
 437              		.loc 12 137 24 view .LVU116
 438 0056 DAED007A 		vldr.32	s15, [r10]
 439              	.LBE257:
 440              	.LBE256:
  53:phaser.cpp    ****         phaser.SetLfoDepth(lfo);
 441              		.loc 11 53 27 view .LVU117
 442 005a 2448     		ldr	r0, .L22+8
 443              	.LBB259:
 444              	.LBB258:
 445              		.loc 12 137 24 view .LVU118
 446 005c 77EEC07A 		vsub.f32	s15, s15, s0
 447              		.loc 12 137 9 view .LVU119
 448 0060 A7EE880A 		vfma.f32	s0, s15, s16
 449 0064 85ED000A 		vstr.32	s0, [r5]
 450              	.LVL24:
 451              		.loc 12 137 9 view .LVU120
 452              	.LBE258:
 453              	.LBE259:
 454              		.loc 11 53 9 is_stmt 1 view .LVU121
 455              		.loc 11 53 27 is_stmt 0 view .LVU122
 456 0068 FFF7FEFF 		bl	_ZN7daisysp6Phaser11SetLfoDepthEf
 457              	.LVL25:
  54:phaser.cpp    **** 
  55:phaser.cpp    ****         out[0][i] = in[0][i];
 458              		.loc 11 55 9 is_stmt 1 view .LVU123
  56:phaser.cpp    ****         out[1][i] = in[0][i];
 459              		.loc 11 56 9 view .LVU124
  55:phaser.cpp    ****         out[1][i] = in[0][i];
 460              		.loc 11 55 28 is_stmt 0 view .LVU125
 461 006c 3B68     		ldr	r3, [r7]
  55:phaser.cpp    ****         out[1][i] = in[0][i];
 462              		.loc 11 55 19 view .LVU126
 463 006e D8E90020 		ldrd	r2, r0, [r8]
  55:phaser.cpp    ****         out[1][i] = in[0][i];
 464              		.loc 11 55 28 view .LVU127
 465 0072 03EB8403 		add	r3, r3, r4, lsl #2
  55:phaser.cpp    ****         out[1][i] = in[0][i];
ARM GAS  /tmp/cckJQIQ8.s 			page 24


 466              		.loc 11 55 19 view .LVU128
 467 0076 02EB840E 		add	lr, r2, r4, lsl #2
  57:phaser.cpp    **** 
  58:phaser.cpp    ****         if(effectOn)
 468              		.loc 11 58 9 view .LVU129
 469 007a 1D4A     		ldr	r2, .L22+12
  55:phaser.cpp    ****         out[1][i] = in[0][i];
 470              		.loc 11 55 28 view .LVU130
 471 007c D3ED007A 		vldr.32	s15, [r3]
  56:phaser.cpp    **** 
 472              		.loc 11 56 19 view .LVU131
 473 0080 00EB840C 		add	ip, r0, r4, lsl #2
 474              		.loc 11 58 9 view .LVU132
 475 0084 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
  56:phaser.cpp    **** 
 476              		.loc 11 56 19 view .LVU133
 477 0086 0134     		adds	r4, r4, #1
 478              	.LVL26:
 479              		.loc 11 58 9 is_stmt 1 view .LVU134
  55:phaser.cpp    ****         out[1][i] = in[0][i];
 480              		.loc 11 55 19 is_stmt 0 view .LVU135
 481 0088 CEED007A 		vstr.32	s15, [lr]
  56:phaser.cpp    **** 
 482              		.loc 11 56 28 view .LVU136
 483 008c D3F800E0 		ldr	lr, [r3]	@ float
  56:phaser.cpp    **** 
 484              		.loc 11 56 19 view .LVU137
 485 0090 CCF800E0 		str	lr, [ip]	@ float
 486              		.loc 11 58 9 view .LVU138
 487 0094 0028     		cmp	r0, #0
 488 0096 C9D0     		beq	.L12
  59:phaser.cpp    ****         {
  60:phaser.cpp    ****             out[0][i] = out[1][i]
 489              		.loc 11 60 13 is_stmt 1 view .LVU139
  61:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 490              		.loc 11 61 33 is_stmt 0 view .LVU140
 491 0098 93ED000A 		vldr.32	s0, [r3]
 492 009c 1348     		ldr	r0, .L22+8
 493 009e FFF7FEFF 		bl	_ZN7daisysp6Phaser7ProcessEf
 494              	.LVL27:
 495              		.loc 11 61 44 view .LVU141
 496 00a2 1448     		ldr	r0, .L22+16
 497              		.loc 11 61 59 view .LVU142
 498 00a4 3B68     		ldr	r3, [r7]
 499              		.loc 11 61 68 view .LVU143
 500 00a6 F7EE007A 		vmov.f32	s15, #1.0e+0
 501              		.loc 11 61 44 view .LVU144
 502 00aa 90ED007A 		vldr.32	s14, [r0]
 503              		.loc 11 61 59 view .LVU145
 504 00ae 3344     		add	r3, r3, r6
 505              		.loc 11 61 68 view .LVU146
 506 00b0 77EEC77A 		vsub.f32	s15, s15, s14
 507              		.loc 11 61 61 view .LVU147
 508 00b4 D3ED006A 		vldr.32	s13, [r3]
  60:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 509              		.loc 11 60 33 view .LVU148
 510 00b8 D8F80430 		ldr	r3, [r8, #4]
ARM GAS  /tmp/cckJQIQ8.s 			page 25


 511              		.loc 11 61 61 view .LVU149
 512 00bc 67EEA67A 		vmul.f32	s15, s15, s13
  60:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 513              		.loc 11 60 33 view .LVU150
 514 00c0 9819     		adds	r0, r3, r6
  60:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 515              		.loc 11 60 23 view .LVU151
 516 00c2 D8F80030 		ldr	r3, [r8]
 517              		.loc 11 61 50 view .LVU152
 518 00c6 E0EE077A 		vfma.f32	s15, s0, s14
  60:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 519              		.loc 11 60 23 view .LVU153
 520 00ca 1E44     		add	r6, r6, r3
  47:phaser.cpp    ****     {
 521              		.loc 11 47 25 view .LVU154
 522 00cc 019B     		ldr	r3, [sp, #4]
 523 00ce A342     		cmp	r3, r4
 524              		.loc 11 61 17 view .LVU155
 525 00d0 C0ED007A 		vstr.32	s15, [r0]
  60:phaser.cpp    ****                 = phaser.Process(in[0][i]) * wet + in[0][i] * (1.f - wet);
 526              		.loc 11 60 23 view .LVU156
 527 00d4 C6ED007A 		vstr.32	s15, [r6]
  47:phaser.cpp    ****     {
 528              		.loc 11 47 5 is_stmt 1 view .LVU157
 529              	.LVL28:
  47:phaser.cpp    ****     {
 530              		.loc 11 47 25 view .LVU158
 531 00d8 ABD1     		bne	.L13
 532              	.LVL29:
 533              	.L10:
  47:phaser.cpp    ****     {
 534              		.loc 11 47 25 is_stmt 0 view .LVU159
 535              	.LBE251:
  62:phaser.cpp    ****         }
  63:phaser.cpp    ****     }
  64:phaser.cpp    **** }
 536              		.loc 11 64 1 view .LVU160
 537 00da 03B0     		add	sp, sp, #12
 538              		.cfi_def_cfa_offset 44
 539              		@ sp needed
 540 00dc BDEC028B 		vldm	sp!, {d8}
 541              		.cfi_restore 80
 542              		.cfi_restore 81
 543              		.cfi_def_cfa_offset 36
 544 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 545              	.LVL30:
 546              	.L23:
 547              		.loc 11 64 1 view .LVU161
 548              		.align	2
 549              	.L22:
 550 00e4 00000000 		.word	.LANCHOR2
 551 00e8 17B7D138 		.word	953267991
 552 00ec 00000000 		.word	phaser
 553 00f0 00000000 		.word	.LANCHOR4
 554 00f4 00000000 		.word	.LANCHOR1
 555 00f8 00000000 		.word	.LANCHOR3
 556 00fc 00000000 		.word	.LANCHOR6
ARM GAS  /tmp/cckJQIQ8.s 			page 26


 557 0100 00000000 		.word	.LANCHOR7
 558              		.cfi_endproc
 559              	.LFE4224:
 561              		.section	.text.startup.main,"ax",%progbits
 562              		.align	1
 563              		.p2align 2,,3
 564              		.global	main
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu fpv5-d16
 570              	main:
 571              	.LFB4225:
  65:phaser.cpp    **** 
  66:phaser.cpp    **** int main(void)
  67:phaser.cpp    **** {
 572              		.loc 11 67 1 is_stmt 1 view -0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
  68:phaser.cpp    ****     hw.Init();
 576              		.loc 11 68 5 view .LVU163
  67:phaser.cpp    ****     hw.Init();
 577              		.loc 11 67 1 is_stmt 0 view .LVU164
 578 0000 70B5     		push	{r4, r5, r6, lr}
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 4, -16
 581              		.cfi_offset 5, -12
 582              		.cfi_offset 6, -8
 583              		.cfi_offset 14, -4
 584              		.loc 11 68 12 view .LVU165
 585 0002 0021     		movs	r1, #0
 586 0004 2348     		ldr	r0, .L30
 587 0006 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal4InitEb
 588              	.LVL31:
  69:phaser.cpp    ****     float sample_rate = hw.AudioSampleRate();
 589              		.loc 11 69 5 is_stmt 1 view .LVU166
 590              		.loc 11 69 43 is_stmt 0 view .LVU167
 591 000a 2248     		ldr	r0, .L30
 592 000c FFF7FEFF 		bl	_ZN5daisy10DaisyPetal15AudioSampleRateEv
 593              	.LVL32:
  70:phaser.cpp    **** 
  71:phaser.cpp    ****     phaser.Init(sample_rate);
 594              		.loc 11 71 5 is_stmt 1 view .LVU168
 595              		.loc 11 71 16 is_stmt 0 view .LVU169
 596 0010 2148     		ldr	r0, .L30+4
 597 0012 FFF7FEFF 		bl	_ZN7daisysp6Phaser4InitEf
 598              	.LVL33:
  72:phaser.cpp    **** 
  73:phaser.cpp    ****     effectOn   = true;
 599              		.loc 11 73 5 is_stmt 1 view .LVU170
 600              		.loc 11 73 16 is_stmt 0 view .LVU171
 601 0016 214E     		ldr	r6, .L30+8
 602 0018 0123     		movs	r3, #1
  74:phaser.cpp    ****     wet        = .9f;
 603              		.loc 11 74 16 view .LVU172
 604 001a 2148     		ldr	r0, .L30+12
ARM GAS  /tmp/cckJQIQ8.s 			page 27


 605 001c 214C     		ldr	r4, .L30+16
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
  76:phaser.cpp    ****     lfotarget = lfo = 0.f;
  77:phaser.cpp    ****     numstages       = 4;
 606              		.loc 11 77 21 view .LVU173
 607 001e 0422     		movs	r2, #4
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
 608              		.loc 11 75 23 view .LVU174
 609 0020 2149     		ldr	r1, .L30+20
  73:phaser.cpp    ****     wet        = .9f;
 610              		.loc 11 73 16 view .LVU175
 611 0022 3370     		strb	r3, [r6]
  74:phaser.cpp    ****     wet        = .9f;
 612              		.loc 11 74 5 is_stmt 1 view .LVU176
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
 613              		.loc 11 75 23 is_stmt 0 view .LVU177
 614 0024 0023     		movs	r3, #0
  74:phaser.cpp    ****     wet        = .9f;
 615              		.loc 11 74 16 view .LVU178
 616 0026 0460     		str	r4, [r0]	@ float
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
 617              		.loc 11 75 5 is_stmt 1 view .LVU179
  76:phaser.cpp    ****     numstages       = 4;
 618              		.loc 11 76 21 is_stmt 0 view .LVU180
 619 0028 2048     		ldr	r0, .L30+24
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
 620              		.loc 11 75 23 view .LVU181
 621 002a 0B60     		str	r3, [r1]	@ float
  75:phaser.cpp    ****     freqtarget = freq = 0.f;
 622              		.loc 11 75 16 view .LVU182
 623 002c 204C     		ldr	r4, .L30+28
  76:phaser.cpp    ****     numstages       = 4;
 624              		.loc 11 76 15 view .LVU183
 625 002e 2149     		ldr	r1, .L30+32
 626              		.loc 11 77 21 view .LVU184
 627 0030 214D     		ldr	r5, .L30+36
  76:phaser.cpp    ****     numstages       = 4;
 628              		.loc 11 76 21 view .LVU185
 629 0032 0360     		str	r3, [r0]	@ float
  78:phaser.cpp    **** 
  79:phaser.cpp    ****     hw.StartAdc();
 630              		.loc 11 79 16 view .LVU186
 631 0034 1748     		ldr	r0, .L30
  76:phaser.cpp    ****     numstages       = 4;
 632              		.loc 11 76 15 view .LVU187
 633 0036 0B60     		str	r3, [r1]	@ float
  75:phaser.cpp    ****     lfotarget = lfo = 0.f;
 634              		.loc 11 75 16 view .LVU188
 635 0038 2360     		str	r3, [r4]	@ float
  76:phaser.cpp    ****     numstages       = 4;
 636              		.loc 11 76 5 is_stmt 1 view .LVU189
  77:phaser.cpp    **** 
 637              		.loc 11 77 5 view .LVU190
  77:phaser.cpp    **** 
 638              		.loc 11 77 21 is_stmt 0 view .LVU191
 639 003a 2A60     		str	r2, [r5]
 640              		.loc 11 79 5 is_stmt 1 view .LVU192
ARM GAS  /tmp/cckJQIQ8.s 			page 28


 641              		.loc 11 79 16 is_stmt 0 view .LVU193
 642 003c FFF7FEFF 		bl	_ZN5daisy10DaisyPetal8StartAdcEv
 643              	.LVL34:
  80:phaser.cpp    ****     hw.StartAudio(AudioCallback);
 644              		.loc 11 80 5 is_stmt 1 view .LVU194
 645              		.loc 11 80 18 is_stmt 0 view .LVU195
 646 0040 1E49     		ldr	r1, .L30+40
 647 0042 1448     		ldr	r0, .L30
 648 0044 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10StartAudioEPFvPKPKfPPfjE
 649              	.LVL35:
 650              	.L27:
  81:phaser.cpp    ****     while(1)
 651              		.loc 11 81 5 is_stmt 1 view .LVU196
 652              	.LBB260:
  82:phaser.cpp    ****     {
  83:phaser.cpp    ****         hw.DelayMs(6);
 653              		.loc 11 83 9 view .LVU197
 654              		.loc 11 83 19 is_stmt 0 view .LVU198
 655 0048 0621     		movs	r1, #6
 656 004a 1248     		ldr	r0, .L30
 657 004c FFF7FEFF 		bl	_ZN5daisy10DaisyPetal7DelayMsEj
 658              	.LVL36:
  84:phaser.cpp    **** 
  85:phaser.cpp    ****         hw.ClearLeds();
 659              		.loc 11 85 9 is_stmt 1 view .LVU199
 660              		.loc 11 85 21 is_stmt 0 view .LVU200
 661 0050 1048     		ldr	r0, .L30
 662 0052 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal9ClearLedsEv
 663              	.LVL37:
  86:phaser.cpp    ****         hw.SetFootswitchLed((DaisyPetal::FootswitchLed)0, (float)effectOn);
 664              		.loc 11 86 9 is_stmt 1 view .LVU201
 665              		.loc 11 86 28 is_stmt 0 view .LVU202
 666 0056 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 667 0058 0021     		movs	r1, #0
 668 005a 0E48     		ldr	r0, .L30
 669 005c 00EE103A 		vmov	s0, r3	@ int
 670 0060 B8EE400A 		vcvt.f32.u32	s0, s0
 671 0064 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal16SetFootswitchLedENS0_13FootswitchLedEf
 672              	.LVL38:
  87:phaser.cpp    **** 
  88:phaser.cpp    ****         for(int i = 0; i < numstages; i++)
 673              		.loc 11 88 9 is_stmt 1 view .LVU203
 674              	.LBB261:
 675              		.loc 11 88 26 view .LVU204
 676 0068 2B68     		ldr	r3, [r5]
 677 006a 002B     		cmp	r3, #0
 678 006c 0EDD     		ble	.L25
 679              		.loc 11 88 17 is_stmt 0 view .LVU205
 680 006e 0024     		movs	r4, #0
 681              	.LVL39:
 682              	.L26:
  89:phaser.cpp    ****         {
  90:phaser.cpp    ****             hw.SetRingLed((DaisyPetal::RingLed)i, 1.f, 0.f, 0.f);
 683              		.loc 11 90 13 is_stmt 1 discriminator 2 view .LVU206
 684              		.loc 11 90 26 is_stmt 0 discriminator 2 view .LVU207
 685 0070 9FED131A 		vldr.32	s2, .L30+44
 686 0074 E1B2     		uxtb	r1, r4
ARM GAS  /tmp/cckJQIQ8.s 			page 29


 687 0076 B7EE000A 		vmov.f32	s0, #1.0e+0
 688 007a 0648     		ldr	r0, .L30
 689 007c F0EE410A 		vmov.f32	s1, s2
  88:phaser.cpp    ****         {
 690              		.loc 11 88 9 discriminator 2 view .LVU208
 691 0080 0134     		adds	r4, r4, #1
 692              	.LVL40:
 693              		.loc 11 90 26 discriminator 2 view .LVU209
 694 0082 FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10SetRingLedENS0_7RingLedEfff
 695              	.LVL41:
  88:phaser.cpp    ****         {
 696              		.loc 11 88 9 is_stmt 1 discriminator 2 view .LVU210
  88:phaser.cpp    ****         {
 697              		.loc 11 88 26 discriminator 2 view .LVU211
 698 0086 2B68     		ldr	r3, [r5]
 699 0088 A342     		cmp	r3, r4
 700 008a F1DC     		bgt	.L26
 701              	.LVL42:
 702              	.L25:
  88:phaser.cpp    ****         {
 703              		.loc 11 88 26 is_stmt 0 discriminator 2 view .LVU212
 704              	.LBE261:
  91:phaser.cpp    ****         }
  92:phaser.cpp    **** 
  93:phaser.cpp    ****         hw.UpdateLeds();
 705              		.loc 11 93 9 is_stmt 1 view .LVU213
 706              		.loc 11 93 22 is_stmt 0 view .LVU214
 707 008c 0148     		ldr	r0, .L30
 708 008e FFF7FEFF 		bl	_ZN5daisy10DaisyPetal10UpdateLedsEv
 709              	.LVL43:
 710              	.LBE260:
  81:phaser.cpp    ****     {
 711              		.loc 11 81 5 is_stmt 1 view .LVU215
  94:phaser.cpp    ****     }
 712              		.loc 11 94 5 is_stmt 0 view .LVU216
 713 0092 D9E7     		b	.L27
 714              	.L31:
 715              		.align	2
 716              	.L30:
 717 0094 00000000 		.word	.LANCHOR0
 718 0098 00000000 		.word	phaser
 719 009c 00000000 		.word	.LANCHOR4
 720 00a0 00000000 		.word	.LANCHOR1
 721 00a4 6666663F 		.word	1063675494
 722 00a8 00000000 		.word	.LANCHOR3
 723 00ac 00000000 		.word	.LANCHOR2
 724 00b0 00000000 		.word	.LANCHOR6
 725 00b4 00000000 		.word	.LANCHOR7
 726 00b8 00000000 		.word	.LANCHOR5
 727 00bc 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 728 00c0 00000000 		.word	0
 729              		.cfi_endproc
 730              	.LFE4225:
 732              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 733              		.align	1
 734              		.p2align 2,,3
 735              		.syntax unified
ARM GAS  /tmp/cckJQIQ8.s 			page 30


 736              		.thumb
 737              		.thumb_func
 738              		.fpu fpv5-d16
 740              	_GLOBAL__sub_I_hw:
 741              	.LFB4771:
  95:phaser.cpp    **** }...
 742              		.loc 11 95 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LBB301:
 747              	.LBI301:
 748              		.loc 11 95 1 view .LVU218
 749              	.LVL44:
 750              	.LBB302:
 751              	.LBB303:
 752              	.LBI303:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 753              		.loc 1 66 5 view .LVU219
 754              	.LBB304:
 755              	.LBB305:
 756              	.LBI305:
  21:../../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 757              		.loc 5 21 5 view .LVU220
 758              	.LBB306:
 759              	.LBB307:
 760              	.LBI307:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 761              		.loc 9 62 5 view .LVU221
 762              	.LBE307:
 763              	.LBE306:
 764              	.LBE305:
 765              	.LBE304:
 766              	.LBE303:
 767              	.LBE302:
 768              	.LBE301:
 769              		.loc 11 95 1 is_stmt 0 view .LVU222
 770 0000 38B5     		push	{r3, r4, r5, lr}
 771              		.cfi_def_cfa_offset 16
 772              		.cfi_offset 3, -16
 773              		.cfi_offset 4, -12
 774              		.cfi_offset 5, -8
 775              		.cfi_offset 14, -4
 776              	.LBB349:
 777              	.LBB344:
 778              	.LBB339:
 779              	.LBB335:
 780              	.LBB322:
 781              	.LBB320:
 782              	.LBB312:
 783              	.LBB308:
 784              	.LBB309:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 785              		.loc 9 62 35 view .LVU223
 786 0002 0D4C     		ldr	r4, .L34
 787 0004 0023     		movs	r3, #0
 788              	.LBE309:
ARM GAS  /tmp/cckJQIQ8.s 			page 31


 789              	.LBE308:
 790              	.LBE312:
 791              	.LBE320:
 792              	.LBE322:
 793              	.LBE335:
 794              	.LBE339:
   7:phaser.cpp    **** DaisyPetal hw;
 795              		.loc 11 7 12 view .LVU224
 796 0006 0D4D     		ldr	r5, .L34+4
 797              	.LBB340:
 798              	.LBB336:
 799              	.LBB323:
 800              	.LBB324:
 801              		.file 13 "../../libdaisy/src/dev/leddriver.h"
   1:../../libdaisy/src/dev/leddriver.h **** #pragma once
   2:../../libdaisy/src/dev/leddriver.h **** #ifndef SA_LED_DRIVER_H
   3:../../libdaisy/src/dev/leddriver.h **** #define SA_LED_DRIVER_H /**< & */
   4:../../libdaisy/src/dev/leddriver.h **** 
   5:../../libdaisy/src/dev/leddriver.h **** #ifdef __cplusplus
   6:../../libdaisy/src/dev/leddriver.h **** 
   7:../../libdaisy/src/dev/leddriver.h **** #include <stdint.h>
   8:../../libdaisy/src/dev/leddriver.h **** #include "per/i2c.h"
   9:../../libdaisy/src/dev/leddriver.h **** #include "per/gpio.h"
  10:../../libdaisy/src/dev/leddriver.h **** 
  11:../../libdaisy/src/dev/leddriver.h **** namespace daisy
  12:../../libdaisy/src/dev/leddriver.h **** {
  13:../../libdaisy/src/dev/leddriver.h **** /** LED driver for one or multiple PCA9685 12bit PWM chips connected to
  14:../../libdaisy/src/dev/leddriver.h ****  * a single I2C peripheral.
  15:../../libdaisy/src/dev/leddriver.h ****  * It includes gamma correction from 8bit brightness values but it 
  16:../../libdaisy/src/dev/leddriver.h ****  * can also be supplied with raw 12bit values.
  17:../../libdaisy/src/dev/leddriver.h ****  * This driver uses two buffers - one for drawing, one for transmitting.
  18:../../libdaisy/src/dev/leddriver.h ****  * Multiple LedDriverPca9685 instances can be used at the same time.
  19:../../libdaisy/src/dev/leddriver.h ****  * \param numDrivers    The number of PCA9685 driver attached to the I2C
  20:../../libdaisy/src/dev/leddriver.h ****  *                      peripheral.
  21:../../libdaisy/src/dev/leddriver.h ****  * \param persistentBufferContents If set to true, the current draw buffer 
  22:../../libdaisy/src/dev/leddriver.h ****  *                      contents will be copied to the next draw buffer 
  23:../../libdaisy/src/dev/leddriver.h ****  *                      during SwapBuffersAndTransmit(). Use this, if you plan
  24:../../libdaisy/src/dev/leddriver.h ****  *                      to write single leds at a time. 
  25:../../libdaisy/src/dev/leddriver.h ****  *                      If you will alway update all leds before calling 
  26:../../libdaisy/src/dev/leddriver.h ****  *                      SwapBuffersAndTransmit(), you can set this to false
  27:../../libdaisy/src/dev/leddriver.h ****  *                      and safe some cycles.
  28:../../libdaisy/src/dev/leddriver.h ****  */
  29:../../libdaisy/src/dev/leddriver.h **** template <int numDrivers, bool persistentBufferContents = true>
  30:../../libdaisy/src/dev/leddriver.h **** class LedDriverPca9685
 802              		.loc 13 30 7 view .LVU225
 803 0008 4FF40072 		mov	r2, #512
 804 000c 04F2D240 		addw	r0, r4, #1234
 805 0010 0B49     		ldr	r1, .L34+8
 806              	.LBE324:
 807              	.LBE323:
 808              	.LBB329:
 809              	.LBB321:
 810              	.LBB313:
 811              	.LBB311:
 812              	.LBB310:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 813              		.loc 9 62 35 view .LVU226
ARM GAS  /tmp/cckJQIQ8.s 			page 32


 814 0012 6361     		str	r3, [r4, #20]
 815              	.LVL45:
  62:../../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 816              		.loc 9 62 35 view .LVU227
 817              	.LBE310:
 818              	.LBE311:
 819              	.LBE313:
 820              	.LBB314:
 821              	.LBI314:
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 822              		.loc 8 84 5 is_stmt 1 view .LVU228
  84:../../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 823              		.loc 8 84 5 is_stmt 0 view .LVU229
 824              	.LBE314:
 825              	.LBB315:
 826              	.LBI315:
 827              		.file 14 "../../libdaisy/src/per/dac.h"
   1:../../libdaisy/src/per/dac.h **** #pragma once
   2:../../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy/src/per/dac.h **** 
   5:../../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy/src/per/dac.h **** 
   7:../../libdaisy/src/per/dac.h **** namespace daisy
   8:../../libdaisy/src/per/dac.h **** {
   9:../../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy/src/per/dac.h ****  ** 
  11:../../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../../libdaisy/src/per/dac.h ****  **
  14:../../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../../libdaisy/src/per/dac.h ****  **
  16:../../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../../libdaisy/src/per/dac.h ****  ***/
  20:../../libdaisy/src/per/dac.h **** class DacHandle
  21:../../libdaisy/src/per/dac.h **** {
  22:../../libdaisy/src/per/dac.h ****   public:
  23:../../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../../libdaisy/src/per/dac.h ****     enum class Result
  25:../../libdaisy/src/per/dac.h ****     {
  26:../../libdaisy/src/per/dac.h ****         OK,
  27:../../libdaisy/src/per/dac.h ****         ERR,
  28:../../libdaisy/src/per/dac.h ****     };
  29:../../libdaisy/src/per/dac.h **** 
  30:../../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../../libdaisy/src/per/dac.h ****     enum class Channel
  32:../../libdaisy/src/per/dac.h ****     {
  33:../../libdaisy/src/per/dac.h ****         ONE,
  34:../../libdaisy/src/per/dac.h ****         TWO,
  35:../../libdaisy/src/per/dac.h ****         BOTH,
  36:../../libdaisy/src/per/dac.h ****     };
  37:../../libdaisy/src/per/dac.h **** 
  38:../../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../../libdaisy/src/per/dac.h ****      **
  40:../../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
ARM GAS  /tmp/cckJQIQ8.s 			page 33


  41:../../libdaisy/src/per/dac.h ****      **
  42:../../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../../libdaisy/src/per/dac.h ****      ***/
  45:../../libdaisy/src/per/dac.h ****     enum class Mode
  46:../../libdaisy/src/per/dac.h ****     {
  47:../../libdaisy/src/per/dac.h ****         POLLING,
  48:../../libdaisy/src/per/dac.h ****         DMA,
  49:../../libdaisy/src/per/dac.h ****     };
  50:../../libdaisy/src/per/dac.h **** 
  51:../../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../../libdaisy/src/per/dac.h ****      ***/
  55:../../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../../libdaisy/src/per/dac.h ****     {
  57:../../libdaisy/src/per/dac.h ****         BITS_8,
  58:../../libdaisy/src/per/dac.h ****         BITS_12
  59:../../libdaisy/src/per/dac.h ****     };
  60:../../libdaisy/src/per/dac.h **** 
  61:../../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../../libdaisy/src/per/dac.h ****     {
  64:../../libdaisy/src/per/dac.h ****         ENABLED,
  65:../../libdaisy/src/per/dac.h ****         DISABLED,
  66:../../libdaisy/src/per/dac.h ****     };
  67:../../libdaisy/src/per/dac.h **** 
  68:../../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../../libdaisy/src/per/dac.h ****     struct Config
  70:../../libdaisy/src/per/dac.h ****     {
  71:../../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../../libdaisy/src/per/dac.h **** 
  77:../../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../../libdaisy/src/per/dac.h ****     };
  82:../../libdaisy/src/per/dac.h **** 
  83:../../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 828              		.loc 14 83 5 is_stmt 1 view .LVU230
 829              	.LBB316:
 830              	.LBB317:
 831              		.loc 14 83 33 is_stmt 0 view .LVU231
 832 0014 2362     		str	r3, [r4, #32]
 833              	.LVL46:
 834              		.loc 14 83 33 view .LVU232
 835              	.LBE317:
 836              	.LBE316:
 837              	.LBE315:
 838              	.LBB318:
 839              	.LBI318:
  40:../../libdaisy/src/hid/usb.h **** 
 840              		.loc 7 40 5 is_stmt 1 view .LVU233
ARM GAS  /tmp/cckJQIQ8.s 			page 34


  40:../../libdaisy/src/hid/usb.h **** 
 841              		.loc 7 40 5 is_stmt 0 view .LVU234
 842              	.LBE318:
 843              	.LBB319:
 844              	.LBI319:
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 845              		.loc 6 58 5 is_stmt 1 view .LVU235
  58:../../libdaisy/src/sys/system.h ****     ~System() {}
 846              		.loc 6 58 5 is_stmt 0 view .LVU236
 847              	.LBE319:
 848              	.LBE321:
 849              	.LBE329:
 850              	.LBB330:
 851              	.LBI330:
  20:../../libdaisy/src/hid/encoder.h ****     ~Encoder() {}
 852              		.loc 3 20 5 is_stmt 1 view .LVU237
 853              	.LBB331:
 854              	.LBB332:
 855              	.LBI332:
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 856              		.loc 4 40 5 view .LVU238
  40:../../libdaisy/src/hid/switch.h ****     ~Switch() {}
 857              		.loc 4 40 5 is_stmt 0 view .LVU239
 858              	.LBE332:
 859              	.LBE331:
 860              	.LBE330:
 861              	.LBE336:
 862              	.LBE340:
 863              	.LBE344:
 864              	.LBE349:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 865              		.loc 1 66 18 is_stmt 1 view .LVU240
 866              	.LBB350:
 867              	.LBB345:
 868              	.LBB341:
 869              	.LBB337:
 870              	.LBB333:
 871              	.LBI333:
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 872              		.loc 2 21 5 view .LVU241
  21:../../libdaisy/src/hid/ctrl.h ****     /** destructor */
 873              		.loc 2 21 5 is_stmt 0 view .LVU242
 874              	.LBE333:
 875              	.LBE337:
 876              	.LBE341:
 877              	.LBE345:
 878              	.LBE350:
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 879              		.loc 1 66 18 is_stmt 1 view .LVU243
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 880              		.loc 1 66 18 view .LVU244
  66:../../libdaisy/src/daisy_petal.h ****     /** Destructor */
 881              		.loc 1 66 18 view .LVU245
 882              	.LBB351:
 883              	.LBB346:
 884              	.LBB342:
 885              	.LBB338:
ARM GAS  /tmp/cckJQIQ8.s 			page 35


 886              	.LBB334:
 887              	.LBI323:
 888              		.loc 13 30 7 view .LVU246
 889              	.LBB328:
 890              	.LBB325:
 891              	.LBI325:
 892              		.file 15 "../../libdaisy/src/per/i2c.h"
   1:../../libdaisy/src/per/i2c.h **** #pragma once
   2:../../libdaisy/src/per/i2c.h **** #include "daisy_core.h"
   3:../../libdaisy/src/per/i2c.h **** 
   4:../../libdaisy/src/per/i2c.h **** namespace daisy
   5:../../libdaisy/src/per/i2c.h **** {
   6:../../libdaisy/src/per/i2c.h **** /** A handle for interacting with an I2C peripheral. This is a dumb
   7:../../libdaisy/src/per/i2c.h ****  *  gateway that internally points to one of the four I2C peripherals
   8:../../libdaisy/src/per/i2c.h ****  *  after it was initialised. It can then be copied and passed around.
   9:../../libdaisy/src/per/i2c.h ****  *  Use an I2CHandle like this:
  10:../../libdaisy/src/per/i2c.h ****  *  
  11:../../libdaisy/src/per/i2c.h ****  *      // setup the configuration
  12:../../libdaisy/src/per/i2c.h ****  *      I2CHandle::Config i2c_conf;
  13:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.periph = I2CHandle::Config::Peripheral::I2C_1;
  14:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.speed  = I2CHandle::Config::Speed::I2C_400KHZ;
  15:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.mode   = I2CHandle::Config::Mode::Master;
  16:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.scl  = {DSY_GPIOB, 8};
  17:../../libdaisy/src/per/i2c.h ****  *      i2c_conf.pin_config.sda  = {DSY_GPIOB, 9};
  18:../../libdaisy/src/per/i2c.h ****  *      // initialise the peripheral
  19:../../libdaisy/src/per/i2c.h ****  *      I2CHandle i2c;
  20:../../libdaisy/src/per/i2c.h ****  *      i2c.Init(i2c_conf);
  21:../../libdaisy/src/per/i2c.h ****  *      // now i2c points to the corresponding peripheral and can be used.
  22:../../libdaisy/src/per/i2c.h ****  *      i2c.TransmitBlocking( ... );
  23:../../libdaisy/src/per/i2c.h ****  */
  24:../../libdaisy/src/per/i2c.h **** class I2CHandle
  25:../../libdaisy/src/per/i2c.h **** {
  26:../../libdaisy/src/per/i2c.h ****   public:
  27:../../libdaisy/src/per/i2c.h ****     /** Contains settings for initialising an I2C interface. */
  28:../../libdaisy/src/per/i2c.h ****     struct Config
  29:../../libdaisy/src/per/i2c.h ****     {
  30:../../libdaisy/src/per/i2c.h ****         /** Specifies whether the interface will operate in master or slave mode. */
  31:../../libdaisy/src/per/i2c.h ****         enum class Mode
  32:../../libdaisy/src/per/i2c.h ****         {
  33:../../libdaisy/src/per/i2c.h ****             I2C_MASTER,
  34:../../libdaisy/src/per/i2c.h ****             I2C_SLAVE,
  35:../../libdaisy/src/per/i2c.h ****         };
  36:../../libdaisy/src/per/i2c.h **** 
  37:../../libdaisy/src/per/i2c.h ****         /** Specifices the internal peripheral to use (these are mapped to different pins on the ha
  38:../../libdaisy/src/per/i2c.h ****         enum class Peripheral
  39:../../libdaisy/src/per/i2c.h ****         {
  40:../../libdaisy/src/per/i2c.h ****             I2C_1 = 0, /**< & */
  41:../../libdaisy/src/per/i2c.h ****             I2C_2,     /**< & */
  42:../../libdaisy/src/per/i2c.h ****             I2C_3,     /**< & */
  43:../../libdaisy/src/per/i2c.h ****             I2C_4,     /**< & */
  44:../../libdaisy/src/per/i2c.h ****         };
  45:../../libdaisy/src/per/i2c.h **** 
  46:../../libdaisy/src/per/i2c.h ****         /** Rate at which the clock/data will be sent/received. The device being used will have max
  47:../../libdaisy/src/per/i2c.h ****          *  1MHZ Mode is currently 886kHz
  48:../../libdaisy/src/per/i2c.h ****          */
  49:../../libdaisy/src/per/i2c.h ****         enum class Speed
  50:../../libdaisy/src/per/i2c.h ****         {
ARM GAS  /tmp/cckJQIQ8.s 			page 36


  51:../../libdaisy/src/per/i2c.h ****             I2C_100KHZ, /**< & */
  52:../../libdaisy/src/per/i2c.h ****             I2C_400KHZ, /**< & */
  53:../../libdaisy/src/per/i2c.h ****             I2C_1MHZ,   /**< & */
  54:../../libdaisy/src/per/i2c.h ****         };
  55:../../libdaisy/src/per/i2c.h **** 
  56:../../libdaisy/src/per/i2c.h ****         Peripheral periph; /**< & */
  57:../../libdaisy/src/per/i2c.h ****         struct
  58:../../libdaisy/src/per/i2c.h ****         {
  59:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin scl; /**< & */
  60:../../libdaisy/src/per/i2c.h ****             dsy_gpio_pin sda; /**< & */
  61:../../libdaisy/src/per/i2c.h ****         } pin_config;         /**< & */
  62:../../libdaisy/src/per/i2c.h **** 
  63:../../libdaisy/src/per/i2c.h ****         Speed speed; /**< & */
  64:../../libdaisy/src/per/i2c.h ****         Mode  mode;  /**< & */
  65:../../libdaisy/src/per/i2c.h ****         // 0x10 is chosen as a default to avoid conflicts with reserved addresses
  66:../../libdaisy/src/per/i2c.h ****         uint8_t address = 0x10; /**< & */
  67:../../libdaisy/src/per/i2c.h ****     };
  68:../../libdaisy/src/per/i2c.h **** 
  69:../../libdaisy/src/per/i2c.h ****     /** Return values for I2C functions. */
  70:../../libdaisy/src/per/i2c.h ****     enum class Result
  71:../../libdaisy/src/per/i2c.h ****     {
  72:../../libdaisy/src/per/i2c.h ****         OK, /**< & */
  73:../../libdaisy/src/per/i2c.h ****         ERR /**< & */
  74:../../libdaisy/src/per/i2c.h ****     };
  75:../../libdaisy/src/per/i2c.h **** 
  76:../../libdaisy/src/per/i2c.h ****     enum class Direction
  77:../../libdaisy/src/per/i2c.h ****     {
  78:../../libdaisy/src/per/i2c.h ****         TRANSMIT, /**< & */
  79:../../libdaisy/src/per/i2c.h ****         RECEIVE,  /**< & */
  80:../../libdaisy/src/per/i2c.h ****     };
  81:../../libdaisy/src/per/i2c.h **** 
  82:../../libdaisy/src/per/i2c.h ****     I2CHandle() : pimpl_(nullptr) {}
 893              		.loc 15 82 5 view .LVU247
 894              	.LBB326:
 895              	.LBB327:
 896              		.loc 15 82 33 is_stmt 0 view .LVU248
 897 0016 C4F8BC34 		str	r3, [r4, #1212]
 898              	.LVL47:
 899              		.loc 15 82 33 view .LVU249
 900              	.LBE327:
 901              	.LBE326:
 902              	.LBE325:
 903              		.loc 13 30 7 view .LVU250
 904 001a FFF7FEFF 		bl	memcpy
 905              	.LVL48:
 906              		.loc 13 30 7 view .LVU251
 907              	.LBE328:
 908              	.LBE334:
 909              	.LBE338:
 910              	.LBE342:
   7:phaser.cpp    **** DaisyPetal hw;
 911              		.loc 11 7 12 view .LVU252
 912 001e 2A46     		mov	r2, r5
 913 0020 2046     		mov	r0, r4
 914 0022 0849     		ldr	r1, .L34+12
 915 0024 FFF7FEFF 		bl	__aeabi_atexit
 916              	.LVL49:
ARM GAS  /tmp/cckJQIQ8.s 			page 37


 917              	.LBB343:
 918              	.LBI343:
  85:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 919              		.loc 10 85 5 is_stmt 1 view .LVU253
 920              	.LBE343:
 921              	.LBE346:
 922              	.LBE351:
  85:../../DaisySP/Source/Effects/phaser.h ****     ~Phaser() {}
 923              		.loc 10 85 14 view .LVU254
 924              	.LBB352:
 925              	.LBB347:
   8:phaser.cpp    **** Phaser     phaser;
 926              		.loc 11 8 12 is_stmt 0 view .LVU255
 927 0028 2A46     		mov	r2, r5
 928 002a 0749     		ldr	r1, .L34+16
 929 002c 0748     		ldr	r0, .L34+20
 930              	.LBE347:
 931              	.LBE352:
 932              		.loc 11 95 1 view .LVU256
 933 002e BDE83840 		pop	{r3, r4, r5, lr}
 934              		.cfi_restore 14
 935              		.cfi_restore 5
 936              		.cfi_restore 4
 937              		.cfi_restore 3
 938              		.cfi_def_cfa_offset 0
 939              	.LBB353:
 940              	.LBB348:
   8:phaser.cpp    **** Phaser     phaser;
 941              		.loc 11 8 12 view .LVU257
 942 0032 FFF7FEBF 		b	__aeabi_atexit
 943              	.LVL50:
 944              	.L35:
 945 0036 00BF     		.align	2
 946              	.L34:
 947 0038 00000000 		.word	.LANCHOR0
 948 003c 00000000 		.word	__dso_handle
 949 0040 00000000 		.word	.LANCHOR8
 950 0044 00000000 		.word	_ZN5daisy10DaisyPetalD1Ev
 951 0048 00000000 		.word	_ZN7daisysp6PhaserD1Ev
 952 004c 00000000 		.word	phaser
 953              	.LBE348:
 954              	.LBE353:
 955              		.cfi_endproc
 956              	.LFE4771:
 958              		.section	.init_array,"aw",%init_array
 959              		.align	2
 960 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 961              		.global	numstages
 962              		.global	lfo
 963              		.global	lfotarget
 964              		.global	freq
 965              		.global	freqtarget
 966              		.global	wet
 967              		.global	effectOn
 968              		.global	phaser
 969              		.global	hw
 970              		.section	.rodata
ARM GAS  /tmp/cckJQIQ8.s 			page 38


 971              		.align	2
 972              		.set	.LANCHOR8,. + 0
 973              	.LC0:
 974 0000 0000     		.short	0
 975 0002 0100     		.short	1
 976 0004 0100     		.short	1
 977 0006 0100     		.short	1
 978 0008 0100     		.short	1
 979 000a 0100     		.short	1
 980 000c 0100     		.short	1
 981 000e 0100     		.short	1
 982 0010 0100     		.short	1
 983 0012 0100     		.short	1
 984 0014 0100     		.short	1
 985 0016 0100     		.short	1
 986 0018 0200     		.short	2
 987 001a 0200     		.short	2
 988 001c 0200     		.short	2
 989 001e 0200     		.short	2
 990 0020 0200     		.short	2
 991 0022 0200     		.short	2
 992 0024 0200     		.short	2
 993 0026 0300     		.short	3
 994 0028 0300     		.short	3
 995 002a 0400     		.short	4
 996 002c 0400     		.short	4
 997 002e 0500     		.short	5
 998 0030 0500     		.short	5
 999 0032 0600     		.short	6
 1000 0034 0700     		.short	7
 1001 0036 0800     		.short	8
 1002 0038 0800     		.short	8
 1003 003a 0900     		.short	9
 1004 003c 0A00     		.short	10
 1005 003e 0B00     		.short	11
 1006 0040 0C00     		.short	12
 1007 0042 0D00     		.short	13
 1008 0044 0F00     		.short	15
 1009 0046 1000     		.short	16
 1010 0048 1100     		.short	17
 1011 004a 1200     		.short	18
 1012 004c 1400     		.short	20
 1013 004e 1500     		.short	21
 1014 0050 1700     		.short	23
 1015 0052 1900     		.short	25
 1016 0054 1A00     		.short	26
 1017 0056 1C00     		.short	28
 1018 0058 1E00     		.short	30
 1019 005a 2000     		.short	32
 1020 005c 2200     		.short	34
 1021 005e 2400     		.short	36
 1022 0060 2600     		.short	38
 1023 0062 2800     		.short	40
 1024 0064 2B00     		.short	43
 1025 0066 2D00     		.short	45
 1026 0068 3000     		.short	48
 1027 006a 3200     		.short	50
ARM GAS  /tmp/cckJQIQ8.s 			page 39


 1028 006c 3500     		.short	53
 1029 006e 3800     		.short	56
 1030 0070 3B00     		.short	59
 1031 0072 3E00     		.short	62
 1032 0074 4100     		.short	65
 1033 0076 4400     		.short	68
 1034 0078 4700     		.short	71
 1035 007a 4B00     		.short	75
 1036 007c 4E00     		.short	78
 1037 007e 5200     		.short	82
 1038 0080 5500     		.short	85
 1039 0082 5900     		.short	89
 1040 0084 5D00     		.short	93
 1041 0086 6100     		.short	97
 1042 0088 6500     		.short	101
 1043 008a 6900     		.short	105
 1044 008c 6E00     		.short	110
 1045 008e 7200     		.short	114
 1046 0090 7700     		.short	119
 1047 0092 7B00     		.short	123
 1048 0094 8000     		.short	128
 1049 0096 8500     		.short	133
 1050 0098 8A00     		.short	138
 1051 009a 8F00     		.short	143
 1052 009c 9500     		.short	149
 1053 009e 9A00     		.short	154
 1054 00a0 9F00     		.short	159
 1055 00a2 A500     		.short	165
 1056 00a4 AB00     		.short	171
 1057 00a6 B100     		.short	177
 1058 00a8 B700     		.short	183
 1059 00aa BD00     		.short	189
 1060 00ac C300     		.short	195
 1061 00ae CA00     		.short	202
 1062 00b0 D000     		.short	208
 1063 00b2 D700     		.short	215
 1064 00b4 DE00     		.short	222
 1065 00b6 E500     		.short	229
 1066 00b8 EC00     		.short	236
 1067 00ba F300     		.short	243
 1068 00bc FA00     		.short	250
 1069 00be 0201     		.short	258
 1070 00c0 0A01     		.short	266
 1071 00c2 1101     		.short	273
 1072 00c4 1901     		.short	281
 1073 00c6 2201     		.short	290
 1074 00c8 2A01     		.short	298
 1075 00ca 3201     		.short	306
 1076 00cc 3B01     		.short	315
 1077 00ce 4401     		.short	324
 1078 00d0 4C01     		.short	332
 1079 00d2 5501     		.short	341
 1080 00d4 5F01     		.short	351
 1081 00d6 6801     		.short	360
 1082 00d8 7101     		.short	369
 1083 00da 7B01     		.short	379
 1084 00dc 8501     		.short	389
ARM GAS  /tmp/cckJQIQ8.s 			page 40


 1085 00de 8F01     		.short	399
 1086 00e0 9901     		.short	409
 1087 00e2 A301     		.short	419
 1088 00e4 AE01     		.short	430
 1089 00e6 B801     		.short	440
 1090 00e8 C301     		.short	451
 1091 00ea CE01     		.short	462
 1092 00ec D901     		.short	473
 1093 00ee E501     		.short	485
 1094 00f0 F001     		.short	496
 1095 00f2 FC01     		.short	508
 1096 00f4 0802     		.short	520
 1097 00f6 1402     		.short	532
 1098 00f8 2002     		.short	544
 1099 00fa 2C02     		.short	556
 1100 00fc 3902     		.short	569
 1101 00fe 4602     		.short	582
 1102 0100 5202     		.short	594
 1103 0102 6002     		.short	608
 1104 0104 6D02     		.short	621
 1105 0106 7A02     		.short	634
 1106 0108 8802     		.short	648
 1107 010a 9602     		.short	662
 1108 010c A402     		.short	676
 1109 010e B202     		.short	690
 1110 0110 C002     		.short	704
 1111 0112 CF02     		.short	719
 1112 0114 DE02     		.short	734
 1113 0116 ED02     		.short	749
 1114 0118 FC02     		.short	764
 1115 011a 0B03     		.short	779
 1116 011c 1B03     		.short	795
 1117 011e 2B03     		.short	811
 1118 0120 3B03     		.short	827
 1119 0122 4B03     		.short	843
 1120 0124 5B03     		.short	859
 1121 0126 6C03     		.short	876
 1122 0128 7D03     		.short	893
 1123 012a 8E03     		.short	910
 1124 012c 9F03     		.short	927
 1125 012e B003     		.short	944
 1126 0130 C203     		.short	962
 1127 0132 D403     		.short	980
 1128 0134 E603     		.short	998
 1129 0136 F803     		.short	1016
 1130 0138 0A04     		.short	1034
 1131 013a 1D04     		.short	1053
 1132 013c 3004     		.short	1072
 1133 013e 4304     		.short	1091
 1134 0140 5604     		.short	1110
 1135 0142 6A04     		.short	1130
 1136 0144 7E04     		.short	1150
 1137 0146 9204     		.short	1170
 1138 0148 A604     		.short	1190
 1139 014a BA04     		.short	1210
 1140 014c CF04     		.short	1231
 1141 014e E404     		.short	1252
ARM GAS  /tmp/cckJQIQ8.s 			page 41


 1142 0150 F904     		.short	1273
 1143 0152 0E05     		.short	1294
 1144 0154 2405     		.short	1316
 1145 0156 3A05     		.short	1338
 1146 0158 5005     		.short	1360
 1147 015a 6605     		.short	1382
 1148 015c 7C05     		.short	1404
 1149 015e 9305     		.short	1427
 1150 0160 AA05     		.short	1450
 1151 0162 C105     		.short	1473
 1152 0164 D905     		.short	1497
 1153 0166 F005     		.short	1520
 1154 0168 0806     		.short	1544
 1155 016a 2006     		.short	1568
 1156 016c 3906     		.short	1593
 1157 016e 5106     		.short	1617
 1158 0170 6A06     		.short	1642
 1159 0172 8306     		.short	1667
 1160 0174 9D06     		.short	1693
 1161 0176 B606     		.short	1718
 1162 0178 D006     		.short	1744
 1163 017a EA06     		.short	1770
 1164 017c 0507     		.short	1797
 1165 017e 1F07     		.short	1823
 1166 0180 3A07     		.short	1850
 1167 0182 5507     		.short	1877
 1168 0184 7107     		.short	1905
 1169 0186 8C07     		.short	1932
 1170 0188 A807     		.short	1960
 1171 018a C407     		.short	1988
 1172 018c E107     		.short	2017
 1173 018e FD07     		.short	2045
 1174 0190 1A08     		.short	2074
 1175 0192 3708     		.short	2103
 1176 0194 5508     		.short	2133
 1177 0196 7208     		.short	2162
 1178 0198 9008     		.short	2192
 1179 019a AF08     		.short	2223
 1180 019c CD08     		.short	2253
 1181 019e EC08     		.short	2284
 1182 01a0 0B09     		.short	2315
 1183 01a2 2A09     		.short	2346
 1184 01a4 4A09     		.short	2378
 1185 01a6 6A09     		.short	2410
 1186 01a8 8A09     		.short	2442
 1187 01aa AA09     		.short	2474
 1188 01ac CB09     		.short	2507
 1189 01ae EC09     		.short	2540
 1190 01b0 0D0A     		.short	2573
 1191 01b2 2E0A     		.short	2606
 1192 01b4 500A     		.short	2640
 1193 01b6 720A     		.short	2674
 1194 01b8 940A     		.short	2708
 1195 01ba B70A     		.short	2743
 1196 01bc DA0A     		.short	2778
 1197 01be FD0A     		.short	2813
 1198 01c0 210B     		.short	2849
ARM GAS  /tmp/cckJQIQ8.s 			page 42


 1199 01c2 440B     		.short	2884
 1200 01c4 680B     		.short	2920
 1201 01c6 8D0B     		.short	2957
 1202 01c8 B10B     		.short	2993
 1203 01ca D60B     		.short	3030
 1204 01cc FB0B     		.short	3067
 1205 01ce 210C     		.short	3105
 1206 01d0 470C     		.short	3143
 1207 01d2 6D0C     		.short	3181
 1208 01d4 930C     		.short	3219
 1209 01d6 BA0C     		.short	3258
 1210 01d8 E10C     		.short	3297
 1211 01da 080D     		.short	3336
 1212 01dc 300D     		.short	3376
 1213 01de 580D     		.short	3416
 1214 01e0 800D     		.short	3456
 1215 01e2 A80D     		.short	3496
 1216 01e4 D10D     		.short	3537
 1217 01e6 FA0D     		.short	3578
 1218 01e8 230E     		.short	3619
 1219 01ea 4D0E     		.short	3661
 1220 01ec 770E     		.short	3703
 1221 01ee A10E     		.short	3745
 1222 01f0 CC0E     		.short	3788
 1223 01f2 F70E     		.short	3831
 1224 01f4 220F     		.short	3874
 1225 01f6 4E0F     		.short	3918
 1226 01f8 7A0F     		.short	3962
 1227 01fa A60F     		.short	4006
 1228 01fc D20F     		.short	4050
 1229 01fe FF0F     		.short	4095
 1230              		.section	.bss.effectOn,"aw",%nobits
 1231              		.set	.LANCHOR4,. + 0
 1234              	effectOn:
 1235 0000 00       		.space	1
 1236              		.section	.bss.freq,"aw",%nobits
 1237              		.align	2
 1238              		.set	.LANCHOR3,. + 0
 1241              	freq:
 1242 0000 00000000 		.space	4
 1243              		.section	.bss.freqtarget,"aw",%nobits
 1244              		.align	2
 1245              		.set	.LANCHOR6,. + 0
 1248              	freqtarget:
 1249 0000 00000000 		.space	4
 1250              		.section	.bss.hw,"aw",%nobits
 1251              		.align	2
 1252              		.set	.LANCHOR0,. + 0
 1255              	hw:
 1256 0000 00000000 		.space	1748
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1256      00000000 
 1257              		.section	.bss.lfo,"aw",%nobits
 1258              		.align	2
 1259              		.set	.LANCHOR2,. + 0
ARM GAS  /tmp/cckJQIQ8.s 			page 43


 1262              	lfo:
 1263 0000 00000000 		.space	4
 1264              		.section	.bss.lfotarget,"aw",%nobits
 1265              		.align	2
 1266              		.set	.LANCHOR7,. + 0
 1269              	lfotarget:
 1270 0000 00000000 		.space	4
 1271              		.section	.bss.numstages,"aw",%nobits
 1272              		.align	2
 1273              		.set	.LANCHOR5,. + 0
 1276              	numstages:
 1277 0000 00000000 		.space	4
 1278              		.section	.bss.phaser,"aw",%nobits
 1279              		.align	2
 1282              	phaser:
 1283 0000 00000000 		.space	77192
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1284              		.section	.bss.wet,"aw",%nobits
 1285              		.align	2
 1286              		.set	.LANCHOR1,. + 0
 1289              	wet:
 1290 0000 00000000 		.space	4
 1291              		.text
 1292              	.Letext0:
 1293              		.file 16 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1294              		.file 17 "../../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 1295              		.file 18 "../../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 1296              		.file 19 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1297              		.file 20 "/usr/include/newlib/c++/9.2.1/cmath"
 1298              		.file 21 "/usr/include/newlib/c++/9.2.1/bits/std_abs.h"
 1299              		.file 22 "/usr/include/newlib/c++/9.2.1/cstdlib"
 1300              		.file 23 "/usr/include/newlib/c++/9.2.1/cstdint"
 1301              		.file 24 "/usr/include/newlib/c++/9.2.1/type_traits"
 1302              		.file 25 "/usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 1303              		.file 26 "/usr/include/newlib/c++/9.2.1/bits/stl_pair.h"
 1304              		.file 27 "/usr/include/newlib/c++/9.2.1/debug/debug.h"
 1305              		.file 28 "/usr/include/newlib/c++/9.2.1/bits/algorithmfwd.h"
 1306              		.file 29 "/usr/include/newlib/c++/9.2.1/bits/exception_ptr.h"
 1307              		.file 30 "/usr/include/newlib/c++/9.2.1/new"
 1308              		.file 31 "/usr/include/newlib/c++/9.2.1/cstdarg"
 1309              		.file 32 "/usr/include/newlib/c++/9.2.1/cstdio"
 1310              		.file 33 "/usr/include/newlib/c++/9.2.1/cwchar"
 1311              		.file 34 "/usr/include/newlib/c++/9.2.1/clocale"
 1312              		.file 35 "/usr/include/newlib/c++/9.2.1/bits/basic_string.h"
 1313              		.file 36 "/usr/include/newlib/c++/9.2.1/bits/uniform_int_dist.h"
 1314              		.file 37 "/usr/include/newlib/c++/9.2.1/bits/random.h"
 1315              		.file 38 "/usr/include/newlib/c++/9.2.1/cstring"
 1316              		.file 39 "/usr/include/newlib/c++/9.2.1/bits/predefined_ops.h"
 1317              		.file 40 "/usr/include/newlib/c++/9.2.1/ext/numeric_traits.h"
 1318              		.file 41 "/usr/include/newlib/c++/9.2.1/ext/new_allocator.h"
 1319              		.file 42 "/usr/include/newlib/sys/_types.h"
 1320              		.file 43 "<built-in>"
 1321              		.file 44 "/usr/include/newlib/sys/reent.h"
 1322              		.file 45 "/usr/include/newlib/sys/lock.h"
ARM GAS  /tmp/cckJQIQ8.s 			page 44


 1323              		.file 46 "/usr/include/newlib/math.h"
 1324              		.file 47 "/usr/include/newlib/stdlib.h"
 1325              		.file 48 "/usr/include/newlib/c++/9.2.1/math.h"
 1326              		.file 49 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1327              		.file 50 "../../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 1328              		.file 51 "/usr/include/newlib/c++/9.2.1/stdlib.h"
 1329              		.file 52 "../../libdaisy/src/daisy_core.h"
 1330              		.file 53 "../../libdaisy/src/per/tim.h"
 1331              		.file 54 "../../libdaisy/src/per/sai.h"
 1332              		.file 55 "../../libdaisy/src/util/wav_format.h"
 1333              		.file 56 "../../libdaisy/src/hid/led.h"
 1334              		.file 57 "../../libdaisy/src/util/color.h"
 1335              		.file 58 "../../libdaisy/src/hid/rgb_led.h"
 1336              		.file 59 "../../libdaisy/src/per/qspi.h"
 1337              		.file 60 "../../libdaisy/src/per/gpio.h"
 1338              		.file 61 "../../libdaisy/src/dev/sdram.h"
 1339              		.file 62 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdarg.h"
 1340              		.file 63 "/usr/include/newlib/stdio.h"
 1341              		.file 64 "/usr/include/newlib/sys/unistd.h"
 1342              		.file 65 "../../libdaisy/src/util/oled_fonts.h"
 1343              		.file 66 "../../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 1344              		.file 67 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 1345              		.file 68 "../../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 1346              		.file 69 "../../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 1347              		.file 70 "../../libdaisy/src/util/sd_diskio.h"
 1348              		.file 71 "../../libdaisy/src/sys/fatfs.h"
 1349              		.file 72 "../../DaisySP/Source/Control/adenv.h"
 1350              		.file 73 "../../DaisySP/Source/Utility/delayline.h"
 1351              		.file 74 "/usr/include/newlib/wchar.h"
 1352              		.file 75 "/usr/include/newlib/locale.h"
 1353              		.file 76 "/usr/include/newlib/ctype.h"
 1354              		.file 77 "/usr/include/newlib/sys/errno.h"
 1355              		.file 78 "/usr/include/newlib/string.h"
 1356              		.file 79 "../../libdaisy/src/dev/sr_595.h"
ARM GAS  /tmp/cckJQIQ8.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 phaser.cpp
     /tmp/cckJQIQ8.s:17     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 $t
     /tmp/cckJQIQ8.s:26     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 _ZN5daisy10DaisyPetalD2Ev
     /tmp/cckJQIQ8.s:26     .text._ZN5daisy10DaisyPetalD2Ev:0000000000000000 _ZN5daisy10DaisyPetalD1Ev
     /tmp/cckJQIQ8.s:89     .text._ZN7daisysp6PhaserD2Ev:0000000000000000 $t
     /tmp/cckJQIQ8.s:97     .text._ZN7daisysp6PhaserD2Ev:0000000000000000 _ZN7daisysp6PhaserD2Ev
     /tmp/cckJQIQ8.s:97     .text._ZN7daisysp6PhaserD2Ev:0000000000000000 _ZN7daisysp6PhaserD1Ev
     /tmp/cckJQIQ8.s:114    .text._Z8Controlsv:0000000000000000 $t
     /tmp/cckJQIQ8.s:122    .text._Z8Controlsv:0000000000000000 _Z8Controlsv
     /tmp/cckJQIQ8.s:319    .text._Z8Controlsv:00000000000000b8 $d
     /tmp/cckJQIQ8.s:1282   .bss.phaser:0000000000000000 phaser
     /tmp/cckJQIQ8.s:331    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 $t
     /tmp/cckJQIQ8.s:339    .text._Z13AudioCallbackPKPKfPPfj:0000000000000000 _Z13AudioCallbackPKPKfPPfj
     /tmp/cckJQIQ8.s:550    .text._Z13AudioCallbackPKPKfPPfj:00000000000000e4 $d
     /tmp/cckJQIQ8.s:562    .text.startup.main:0000000000000000 $t
     /tmp/cckJQIQ8.s:570    .text.startup.main:0000000000000000 main
     /tmp/cckJQIQ8.s:717    .text.startup.main:0000000000000094 $d
     /tmp/cckJQIQ8.s:733    .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
     /tmp/cckJQIQ8.s:740    .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
     /tmp/cckJQIQ8.s:947    .text.startup._GLOBAL__sub_I_hw:0000000000000038 $d
     /tmp/cckJQIQ8.s:959    .init_array:0000000000000000 $d
     /tmp/cckJQIQ8.s:1276   .bss.numstages:0000000000000000 numstages
     /tmp/cckJQIQ8.s:1262   .bss.lfo:0000000000000000 lfo
     /tmp/cckJQIQ8.s:1269   .bss.lfotarget:0000000000000000 lfotarget
     /tmp/cckJQIQ8.s:1241   .bss.freq:0000000000000000 freq
     /tmp/cckJQIQ8.s:1248   .bss.freqtarget:0000000000000000 freqtarget
     /tmp/cckJQIQ8.s:1289   .bss.wet:0000000000000000 wet
     /tmp/cckJQIQ8.s:1234   .bss.effectOn:0000000000000000 effectOn
     /tmp/cckJQIQ8.s:1255   .bss.hw:0000000000000000 hw
     /tmp/cckJQIQ8.s:971    .rodata:0000000000000000 $d
     /tmp/cckJQIQ8.s:1235   .bss.effectOn:0000000000000000 $d
     /tmp/cckJQIQ8.s:1237   .bss.freq:0000000000000000 $d
     /tmp/cckJQIQ8.s:1244   .bss.freqtarget:0000000000000000 $d
     /tmp/cckJQIQ8.s:1251   .bss.hw:0000000000000000 $d
     /tmp/cckJQIQ8.s:1258   .bss.lfo:0000000000000000 $d
     /tmp/cckJQIQ8.s:1265   .bss.lfotarget:0000000000000000 $d
     /tmp/cckJQIQ8.s:1272   .bss.numstages:0000000000000000 $d
     /tmp/cckJQIQ8.s:1279   .bss.phaser:0000000000000000 $d
     /tmp/cckJQIQ8.s:1285   .bss.wet:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy10DaisyPetalD5Ev
                           .group:0000000000000000 _ZN7daisysp6PhaserD5Ev

UNDEFINED SYMBOLS
_ZN5daisy10DaisyPetal21ProcessAnalogControlsEv
_ZN5daisy10DaisyPetal22ProcessDigitalControlsEv
_ZN5daisy13AnalogControl7ProcessEv
_ZN7daisysp6Phaser10SetLfoFreqEf
_ZN7daisysp6Phaser11SetFeedbackEf
_ZN7daisysp6Phaser8SetPolesEi
_ZN7daisysp6Phaser7SetFreqEf
_ZN7daisysp6Phaser11SetLfoDepthEf
_ZN7daisysp6Phaser7ProcessEf
_ZN5daisy10DaisyPetal4InitEb
_ZN5daisy10DaisyPetal15AudioSampleRateEv
_ZN7daisysp6Phaser4InitEf
_ZN5daisy10DaisyPetal8StartAdcEv
ARM GAS  /tmp/cckJQIQ8.s 			page 46


_ZN5daisy10DaisyPetal10StartAudioEPFvPKPKfPPfjE
_ZN5daisy10DaisyPetal7DelayMsEj
_ZN5daisy10DaisyPetal9ClearLedsEv
_ZN5daisy10DaisyPetal16SetFootswitchLedENS0_13FootswitchLedEf
_ZN5daisy10DaisyPetal10SetRingLedENS0_7RingLedEfff
_ZN5daisy10DaisyPetal10UpdateLedsEv
memcpy
__aeabi_atexit
__dso_handle
